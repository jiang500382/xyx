var egret = window.egret, __reflect = this && this.__reflect || function(t, e, i) {
    t.__class__ = e, i ? i.push(e) : i = [ e ], t.__types__ = t.__types__ ? i.concat(t.__types__) : i;
}, __extends = this && this.__extends || function(t, e) {
    function i() {
        this.constructor = t;
    }
    for (var n in e) e.hasOwnProperty(n) && (t[n] = e[n]);
    i.prototype = e.prototype, t.prototype = new i();
}, __awaiter = this && this.__awaiter || function(t, e, i, n) {
    return new (i || (i = Promise))(function(s, a) {
        function o(t) {
            try {
                h(n.next(t));
            } catch (e) {
                a(e);
            }
        }
        function r(t) {
            try {
                h(n["throw"](t));
            } catch (e) {
                a(e);
            }
        }
        function h(t) {
            t.done ? s(t.value) : new i(function(e) {
                e(t.value);
            }).then(o, r);
        }
        h((n = n.apply(t, e || [])).next());
    });
}, __generator = this && this.__generator || function(t, e) {
    function i(t) {
        return function(e) {
            return n([ t, e ]);
        };
    }
    function n(i) {
        if (s) throw new TypeError("Generator is already executing.");
        for (;h; ) try {
            if (s = 1, a && (o = a[2 & i[0] ? "return" : i[0] ? "throw" : "next"]) && !(o = o.call(a, i[1])).done) return o;
            switch (a = 0, o && (i = [ 0, o.value ]), i[0]) {
              case 0:
              case 1:
                o = i;
                break;

              case 4:
                return h.label++, {
                    value: i[1],
                    done: !1
                };

              case 5:
                h.label++, a = i[1], i = [ 0 ];
                continue;

              case 7:
                i = h.ops.pop(), h.trys.pop();
                continue;

              default:
                if (o = h.trys, !(o = o.length > 0 && o[o.length - 1]) && (6 === i[0] || 2 === i[0])) {
                    h = 0;
                    continue;
                }
                if (3 === i[0] && (!o || i[1] > o[0] && i[1] < o[3])) {
                    h.label = i[1];
                    break;
                }
                if (6 === i[0] && h.label < o[1]) {
                    h.label = o[1], o = i;
                    break;
                }
                if (o && h.label < o[2]) {
                    h.label = o[2], h.ops.push(i);
                    break;
                }
                o[2] && h.ops.pop(), h.trys.pop();
                continue;
            }
            i = e.call(t, h);
        } catch (n) {
            i = [ 6, n ], a = 0;
        } finally {
            s = o = 0;
        }
        if (5 & i[0]) throw i[1];
        return {
            value: i[0] ? i[1] : void 0,
            done: !0
        };
    }
    var s, a, o, r, h = {
        label: 0,
        sent: function() {
            if (1 & o[0]) throw o[1];
            return o[1];
        },
        trys: [],
        ops: []
    };
    return r = {
        next: i(0),
        throw: i(1),
        return: i(2)
    }, "function" == typeof Symbol && (r[Symbol.iterator] = function() {
        return this;
    }), r;
}, ActivityPanel = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e._activityBtnType = -1, e;
    }
    return __extends(e, t), Object.defineProperty(e.prototype, "activityBtnType", {
        get: function() {
            return this._activityBtnType;
        },
        enumerable: !0,
        configurable: !0
    }), Object.defineProperty(e.prototype, "activityID", {
        get: function() {
            return this._activityID;
        },
        set: function(t) {
            this._activityID = t;
            var e = GlobalConfig.ins().ActivityConfig[t];
            this.name = e.tabName;
            var i = GlobalConfig.ins().ActivityBtnConfig[t];
            this._activityBtnType = i.type;
        },
        enumerable: !0,
        configurable: !0
    }), e.create = function(t) {
        var e = GlobalConfig.ins().ActivityConfig[t], i = ObjectPool.pop("ActivityType" + e.activityType + "Panel");
        return i.activityID = t, i;
    }, e.prototype.updateData = function() {}, e;
}(BaseView);

__reflect(ActivityPanel.prototype, "ActivityPanel");

window.ActivityPanel = ActivityPanel;

var ForgeBoostPanel = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.itemNum = 0, e.maxPosNum = 8, e.setSkinName(), e.panelName(), e.isShowPower(), 
        e.getItemBtn.labelDisplay.text = "获取道具", e;
    }
    return __extends(e, t), e.prototype.setSkinName = function() {
        this.skinName = "BoostSkin";
    }, e.prototype.isShowPower = function() {
        this.titleLabel.visible = !1, this.powerImg.visible = !0, this.addPowerImg();
    }, e.prototype.addPowerImg = function() {
        this.totalPower = BitmapNumber.ins().createNumPic(0, BitmapNumber.numType0), this.powerContainer.addChild(this.totalPower);
    }, e.prototype.panelName = function() {
        this.name = "强化", this.upGradeBtn.label = "强 化", this.curPanel = ForgeConst.TYPE_BOOST;
    }, e.prototype.open = function(t, e) {
        var i = this;
        this.isLock = !1, this.addTouchEvent(this.upGradeBtn, this.onTouch), this.addTouchEvent(this.getItemBtn, this.onTouchGetItem), 
        this.observe(UserBag.ins().postItemAdd, this.setCount), this.observe(UserBag.ins().postItemChange, this.setCount), 
        this.changeData(t, e), TimerManager.ins().doTimer(300, 1, function() {
            BeginnerGuideLogic.ins().playGuide(RoleWin, i.upGradeBtn);
        }, this), this.setOnekey();
    }, e.prototype.close = function() {
        this.removeTouchEvent(this.upGradeBtn, this.onTouch), this.removeTouchEvent(this.getItemBtn, this.onTouchGetItem), 
        this.removeEvents(), this.removeObserve(), this.isLock = !1;
    }, e.prototype.setOnekey = function() {
        if (this.curPanel == ForgeConst.TYPE_BOOST) {
            var t = GlobalConfig.ins().OneKeyOpenConfig[OnekeyOpenId.boot];
            if (!t) return;
            if (this.onekeyBtn.touchEnabled = !1, this.onekeyBtn.filters = [ ColorUtil.colorMat ], 
            UserVip.ins().lv >= t.vipLevel && GameServer.serverOpenDay >= t.openDay) this.onekeyCon.visible = !1, 
            this.onekeyBtn.filters = [], this.upGradeBtn.label = "一键强化"; else {
                if (this.upGradeBtn.label = "强 化", this.onekeyCon.visible = !0, t.openDay > 0 && GameServer.serverOpenDay < t.openDay) return void (this.onekeyTxt.text = "开服第" + t.openDay + "天解锁一键强化");
                if (t.vipLevel > 0 && UserVip.ins().lv < t.vipLevel) return void (this.onekeyTxt.text = "VIP" + t.vipLevel + "解锁一键强化");
            }
        }
    }, e.prototype.boutOnekeyTimes = function(t, e) {
        var i = 0, n = UserForge.ins().getEnhanceCostConfigByLv(t + 1);
        if (!n) return 0;
        var s = n.stoneNum * (this.maxPosNum - e), a = UserBag.ins().getBagGoodsCountById(0, n.stoneId);
        return i = a >= s ? this.maxPosNum - e : Math.floor(a / n.stoneNum);
    }, e.prototype.autoBoot = function() {
        UserForge.ins().sendUpGrade(this.curRole, this.pos);
    }, e.prototype.refreshBtn = function() {
        return "一键强化" == this.upGradeBtn.label ? void (this.upGradeBtn.label = "停 止") : "停 止" == this.upGradeBtn.label ? void (this.upGradeBtn.label = "一键强化") : void 0;
    }, e.prototype.canTouchBtn = function(t) {}, e.prototype.onTouch = function(t) {
        if ("强 化" == this.upGradeBtn.label) {
            var e = UserForge.ins().getEnhanceCostConfigByLv(this.lv + 1);
            this.itemNum >= e.stoneNum ? (this.maxIndex = UserForge.ins().getCanUpgradeIndexByType(this.curPanel), 
            this.canTouchBtn(!1), UserForge.ins().sendUpGrade(this.curRole, this.pos)) : UserWarn.ins().setBuyGoodsWarn(e.stoneId, e.stoneNum - this.itemNum);
        } else if ("获得道具" == this.upGradeBtn.label) UserWarn.ins().setBuyGoodsWarn(UserForge.ins().getEnhanceCostConfigByLv(this.lv + 1).stoneId, 1); else if ("一键强化" == this.upGradeBtn.label) {
            var i = this.boutOnekeyTimes(this.lv, this.pos);
            if (i > 0) TimerManager.ins().doTimer(100, i, this.autoBoot, this, this.refreshBtn, this), 
            this.upGradeBtn.label = "停 止"; else {
                var n = UserForge.ins().getEnhanceCostConfigByLv(this.lv + 1);
                UserWarn.ins().setBuyGoodsWarn(n.stoneId, n.stoneNum - this.itemNum);
            }
        } else "停 止" == this.upGradeBtn.label && (TimerManager.ins().remove(this.autoBoot, this), 
        this.upGradeBtn.label = "一键强化");
    }, e.prototype.onTouchGetItem = function(t) {
        UserWarn.ins().setBuyGoodsWarn(UserForge.ins().getEnhanceCostConfigByLv(this.lv + 1).stoneId, 1);
    }, e.prototype.vipshowTips = function(t) {
        if (null != this.config) {
            var e = GlobalConfig.ins().VipConfig[this.curPanel == ForgeConst.TYPE_BOOST ? 11 : 12].attrAddition.percent, i = [];
            this.config.attr.forEach(function(t) {
                i.push(t.value * e / 100 >> 0);
            }), ViewManager.ins().open(ForgeTipsWin, i, AttributeData.getAttStr(this.config.attr, 1, 1, ""));
        }
    }, e.prototype.changeData = function(t, e, i, n) {
        void 0 === i && (i = !0), void 0 === n && (n = !1), this.pos = t, this.lv = e;
        var s = UserForge.ins().getForgeConfigByPos(t, e, this.curPanel);
        this.config = s, this.setTitle(s), this.setAttrData(s), this.setPower(), i ? (this.isLock = !1, 
        this.setCount(), this.upGradeBtn.touchEnabled = !0) : this.upGradeBtn.touchEnabled = !1;
        var a;
        this.pos <= this.maxIndex && 0 != this.pos && (a = !0), n && (a ? this.curPanel == ForgeConst.TYPE_BOOST ? UserForge.ins().sendUpGrade(this.curRole, this.pos) : UserZhuLing.ins().sendUpGrade(this.curRole, this.pos) : (this.showEffFun.call(this.funObj), 
        this.canTouchBtn(!0)));
    }, e.prototype.setTitle = function(t) {}, e.prototype.setPower = function() {
        var t = SubRoles.ins().getSubRoleByIndex(this.curRole);
        this._totalPower = t.getForgeTotalPower(this.curPanel), BitmapNumber.ins().changeNum(this.totalPower, this._totalPower, BitmapNumber.numType0);
    }, e.prototype.moveAttr = function() {
        var t = egret.Tween.get(this.attrLabel);
        t.to({
            x: this.attrLabel.x + 200,
            alpha: 0
        }, 100).to({
            x: 0
        }, 100).to({
            x: 48,
            alpha: 1
        }, 100);
        var e = egret.Tween.get(this.nextAttrLabel);
        e.to({
            x: this.nextAttrLabel.x + 200,
            alpha: 0
        }, 100).to({
            x: 142
        }, 100).to({
            x: 281,
            alpha: 1
        }, 100);
    }, e.prototype.setAttrData = function(t) {
        var e;
        if (t) {
            e = UserForge.ins().getForgeConfigByPos(this.pos, this.lv + 1, this.curPanel);
            var i = AttributeData.getAttrStrAdd(t.attr, this.curPanel);
            this.attrLabel.text = AttributeData.getAttStr(i, 0);
        } else {
            e = UserForge.ins().getForgeConfigByPos(this.pos, 1, this.curPanel);
            for (var i = [], n = 0; n < e.attr.length; n++) {
                var s = new AttributeData();
                s.type = e.attr[n].type, s.value = 0, i.push(s);
            }
            this.attrLabel.text = AttributeData.getAttStr(i, 0);
        }
        if (e) {
            for (var a = "", o = AttributeData.getAttrStrAdd(e.attr, this.curPanel), r = 0; r < o.length; r++) a += o[r].value, 
            r < o.length - 1 && (a += "\n");
            this.nextAttrLabel.text = a, this.expendLabel.text = "消耗: ", this.expendLabel.textAlign = "left", 
            this.icon.visible = !0, this.countLabel.visible = !0, this.upGradeBtn.visible = !0, 
            this.getItemBtn.visible = !0, this.wImg.visible = !0;
        } else this.expendLabel.text = "已提升至满级", this.expendLabel.textAlign = "center", 
        t.attr.length > 1 ? this.nextAttrLabel.text = "已满级\n已满级" : this.nextAttrLabel.text = "已满级", 
        this.icon.visible = !1, this.countLabel.visible = !1, this.upGradeBtn.visible = !1, 
        this.costLabel.visible = !1, this.getItemBtn.visible = !1, this.wImg.visible = !1;
    }, e.prototype.setCount = function() {
        var t = UserForge.ins().getEnhanceCostConfigByLv(this.lv + 1), e = 0;
        t && (this.itemNum = UserBag.ins().getBagGoodsCountById(0, t.stoneId), e = t.stoneNum);
        var i = "";
        this.itemNum >= e ? (i = "|C:0x00ff00&T:", this.upGradeBtn.name = "强 化") : (i = "|C:0xff1818&T:", 
        this.upGradeBtn.name = "获得道具"), this.countLabel.textFlow = TextFlowMaker.generateTextFlow(i + this.itemNum + "| / " + e);
    }, e;
}(BaseView);

__reflect(ForgeBoostPanel.prototype, "ForgeBoostPanel");

window.ForgeBoostPanel = ForgeBoostPanel;

var BoxInfoPanel = function(t) {
    function e() {
        return null !== t && t.apply(this, arguments) || this;
    }
    return __extends(e, t), e;
}(BaseView);

__reflect(BoxInfoPanel.prototype, "BoxInfoPanel");

window.BoxInfoPanel = BoxInfoPanel;

var CommonProgressBar = function(t) {
    function e(e, i, n, s, a, o) {
        void 0 === e && (e = "BarCom0Skin"), void 0 === i && (i = 9), void 0 === n && (n = 7), 
        void 0 === s && (s = 307), void 0 === a && (a = 11), void 0 === o && (o = !0);
        var r = t.call(this) || this;
        return r._value = 0, r._maxvalue = 100, r._step = 1, r._tempValue = -1, r._timerTime = 100, 
        r.changeTime = 800, r.skinName = e, r.barX = i, r.barY = n, r.barWidth = s, r.barHeight = a, 
        r.isShowMax = o, r;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.thumbMask = new egret.Shape(), this.addChild(this.thumbMask), this.thumb.mask = this.thumbMask;
    }, e.prototype.drawMask = function(t) {
        this.thumbMask.graphics.clear(), this.thumbMask.graphics.beginFill(16711680, 1), 
        this.thumbMask.graphics.drawRect(this.barX, this.barY, t, this.barHeight), this.thumbMask.graphics.endFill();
    }, e.prototype.startTimer = function() {
        TimerManager.ins().isExists(this.run, this) || TimerManager.ins().doTimer(this._timerTime, 0, this.run, this), 
        null == this.barMC && (this.barMC = new MovieClip());
        var t = this.getChildIndex(this.thumb) + 1;
        this.addChildAt(this.barMC, t), this.barMC.y = this.barY + this.barHeight / 2, this.barMC.playFile(ResPath.getUIEffectPath(UiEffectType.Type4), -1);
    }, e.prototype.stopTimer = function() {
        TimerManager.ins().remove(this.run, this), this.barMC && (this.barMC.stop(), DisplayUtils.removeFromParent(this.barMC));
    }, e.prototype.run = function() {
        this._value += this._step, this._value = this._value > this._tempValue ? this._tempValue : this._value, 
        this.isShowMax ? this.labelDisplay.text = this._value + "/" + this.maxvalue : this.labelDisplay.text = this._value + "";
        var t = this._value / this.maxvalue, e = Math.floor(t * this.barWidth);
        this.drawMask(e), this.barMC && (this.barMC.x = this.barX + e), (this._value == this._tempValue || 0 == this._step) && this.stopTimer();
    }, e.prototype.init = function(t) {
        this._value = this._tempValue = t, this.isShowMax ? this.labelDisplay.text = this._value + "/" + this.maxvalue : this.labelDisplay.text = this._value + "";
        var e = this._value / this.maxvalue, i = Math.floor(e * this.barWidth);
        this.drawMask(i);
    }, Object.defineProperty(e.prototype, "value", {
        get: function() {
            return this._value;
        },
        set: function(t) {
            -1 == this._tempValue ? this.init(t) : (t != this._tempValue || this.isChangeMax) && (this.isChangeMax = !1, 
            this._tempValue = t > this.maxvalue ? this.maxvalue : t, this._step = Math.ceil((this._tempValue - this._value) / (this.changeTime / this._timerTime)), 
            this._step <= 0 ? this._step = 0 : this.startTimer(), this.run());
        },
        enumerable: !0,
        configurable: !0
    }), Object.defineProperty(e.prototype, "maxvalue", {
        get: function() {
            return this._maxvalue;
        },
        set: function(t) {
            this._maxvalue != t && (this.isChangeMax = !0, this._maxvalue = t);
        },
        enumerable: !0,
        configurable: !0
    }), e;
}(BaseView);

__reflect(CommonProgressBar.prototype, "CommonProgressBar");

window.CommonProgressBar = CommonProgressBar;

var DropDownList = function(t) {
    function e() {
        return null !== t && t.apply(this, arguments) || this;
    }
    return __extends(e, t), e;
}(BaseView);

__reflect(DropDownList.prototype, "DropDownList");

window.DropDownList = DropDownList;

var GuanQiaRewardPanel = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.boxPass = 0, e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.init();
    }, e.prototype.init = function() {
        this.reward = [];
        for (var t = 0; 5 > t; t++) this.setSkinPart("item" + t, new ItemBase()), this.reward[t] = this["item" + t];
        this.setSkinPart("specialItem", new ItemBase()), this.setSkinPart("specialItemShow", new ItemBase()), 
        this.specialCon.visible = !1, this.bossImage = new MovieClip(), this.bossImage.scaleX = -1, 
        this.bossImage.scaleY = 1, this.bossImage.x = 251, this.bossImage.y = 374;
        var e = "<u>查看排名</u>";
        this.seeRank.textFlow = new egret.HtmlTextParser().parser(e), this.bar.value = 0, 
        this.mapImage.touchEnabled = !0, this.bar.slideDuration = 0;
    }, e.prototype.open = function() {
        var t = this;
        this.addTouchEvent(this.seeRank, this.onTouchTap), this.addTouchEvent(this.mapImage, this.onTouchTap), 
        this.addTouchEvent(this.guanqiaBtn, this.onTouchTap), this.addTouchEvent(this.btnGetSpecial, this.onTouchTap), 
        this.observe(GameLogic.ins().postEnterMap, this.upDataGuanqia), this.observe(UserFb.ins().postZhangJieAwardChange, this.upDataGuanqia), 
        this.observe(UserFb.ins().postGuanqiaWroldReward, this.upDateGuanqiaWroldReward), 
        this.observe(Rank.ins().postRankingData, this.updataFirstThree), this.observe(GameLogic.ins().postEnterMap, this.upDataGuanqia), 
        this.observe(UserFb.ins().postWaveChange, this.upDataGuanqia), this.observe(UserFb.ins().postGuanKaIdChange, this.upDataGuanqia), 
        this.observe(UserFb.ins().postGuanqiaFlagChange, this.updateSpecialFlag), Rank.ins().sendGetRankingData(RankDataType.TYPE_PASS), 
        UserFb.ins().sendGuanqiaFlag(), this.upDateGuanqiaWroldReward(), this.upDataGuanqia(), 
        this.update(), TimerManager.ins().doTimer(300, 1, function() {
            BeginnerGuideLogic.ins().playGuide(e, t.guanqiaBtn);
        }, this);
    }, e.prototype.onTouchTap = function(t) {
        switch (t.currentTarget) {
          case this.guanqiaBtn:
            UserBag.ins().getSurplusCount() < UserBag.BAG_ENOUGH ? ViewManager.ins().open(BagFullTipsWin) : (GameLogic.ins().startPkBoss(), 
            ViewManager.ins().close(GuanQiaRewardWin), ViewManager.ins().closeTopLevel());
            break;

          case this.seeRank:
            ViewManager.ins().open(CheckRankWin);
            break;

          case this.mapImage:
            ViewManager.ins().open(GuanQiaWorldRewardWin, UserFb.ins().getWorldGuanQiaBox());
            break;

          case this.btnGetSpecial:
            UserFb.ins().sendGuanqiaReward(UserFb.ins().guanqiaFlag);
        }
    }, e.prototype.upDataGuanqia = function() {
        var t = UserFb.ins().guanqiaID;
        if (t >= 0) {
            var e = GlobalConfig.ins().ChaptersConfig(t);
            if (Assert(e, "guanqia config is null" + t)) return;
            this.guanBar.value = Math.min(UserFb.ins().wave, e.bossNeedWave), this.guanBar.maximum = e.bossNeedWave;
        } else this.guanBar.maximum = 0, this.guanBar.value = 0;
        this.update();
    }, e.prototype.upDateGuanqiaWroldReward = function() {
        this.boxPass = UserFb.ins().getWorldGuanQia();
        UserFb.ins().getWorldGuanQiaBox() > 0 ? UserFb.ins().getWorldGuanQiaBox() : 1;
    }, e.prototype.getPassIndex = function(t) {
        var i;
        return i = t % e.BOSS_HEAD_COUNT == 0 ? t - e.BOSS_HEAD_COUNT + 1 : t - t % e.BOSS_HEAD_COUNT + 1;
    }, e.prototype.update = function() {
        var t = UserFb.ins(), e = t.guanqiaID, i = GlobalConfig.ins().ChaptersConfig(e), n = GlobalConfig.ins().ChaptersRewardConfig[UserFb.ins().guanqiaReward], s = GlobalConfig.ins().ChaptersRewardConfig[UserFb.ins().guanqiaReward - 1];
        if (n) {
            this.bar.maximum = 10;
            var a = (e - 1) % 10;
            a = 1 == e ? 0 : a, this.bar.value = a, this.info.visible = !0;
        } else n = s, this.info.visible = !0;
        this.mapName.text = i.desc + " " + i.cid, this.goldTxt.text = i.goldEff + "/小时", 
        this.expTxt.text = i.expEff + "/小时";
        for (var o = 0; o < this.reward.length; o++) {
            var r = this.reward[o];
            t.bossReward[o] ? (r.data = t.bossReward[o], this.itemGroup.addChild(r)) : DisplayUtils.removeFromParent(r);
        }
        var h = GlobalConfig.ins().MonstersConfig(t.bossID);
        this.bossNameTxt.text = h.name, this.bossImage.playFile("" + ResPath.RES_DIR_MONSTER + MonstersConfig.realAvatar(h) + "_" + EntityAction.STAND + CharDirEnum.SOUTH_EAST, -1), 
        this.info.addChildAt(this.bossImage, 0), this.updateChallenge(), this.updateSpecialFlag(), 
        this.updataFirstThree(Rank.ins().rankModel[RankDataType.TYPE_PASS]);
    }, e.prototype.updateSpecialFlag = function() {
        var t = UserFb.ins().guanqiaID, e = UserFb.ins().guanqiaFlag;
        -1 != e ? this.specialCon.visible = !0 : this.specialCon.visible = !1;
        var i = -1 == e || 1 == t ? Math.floor((t - 1) / 10) + 1 : e, n = GlobalConfig.ins().ChaptersRewardConfig[i];
        n && (this.specialItem.data = n.rewards[0], this.specialItemShow.data = n.rewards[0]);
    }, e.prototype.updateChallenge = function() {
        var t = UserFb.ins().isShowBossPK();
        this.needWave.visible = !t, this.needWave.text = "再击杀" + UserFb.ins().getNeedWave() + "波怪可挑战", 
        UserFb.ins().guanqiaID >= UserFb.ins().maxLen && (this.needWave.visible = !0, this.needWave.text = "恭喜通关所有关卡");
    }, e.prototype.updataFirstThree = function(t) {
        if (!t) return this.name0.text = this.name1.text = this.name2.text = "暂无", void (this.harm0.text = this.harm1.text = this.harm2.text = "0");
        if (t.type == RankDataType.TYPE_PASS) for (var e = 0; 3 > e; e++) {
            var i = t.getDataList(e);
            i ? (this["name" + e].text = i[RankDataType.DATA_PLAYER], this["harm" + e].text = i[RankDataType.DATA_COUNT] + "关", 
            this["rank" + e].text = e + 1 + "") : (this["name" + e].text = "暂无", this["harm" + e].text = "0", 
            this["rank" + e].text = e + 1 + "");
        }
    }, e.BOSS_HEAD_COUNT = 10, e;
}(BaseView);

__reflect(GuanQiaRewardPanel.prototype, "GuanQiaRewardPanel");

window.GuanQiaRewardPanel = GuanQiaRewardPanel;

var GuanQiaSweepPanel = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.gqBtnList = null, e.gqBtnCount = 8, e.curPage = 1, e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        t.prototype.childrenCreated.call(this), this.init();
    }, e.prototype.init = function() {
        this.gqBtnList = [];
        for (var t = null, e = 0; e < this.gqBtnCount; e++) t = this["gqBtn" + e], this.gqBtnList[e] = t;
    }, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        for (var i = 0; i < this.gqBtnList.length; i++) this.addTouchEvent(this.gqBtnList[i], this.onGQTap);
        this.addTouchEvent(this.upBtn, this.onTap), this.addTouchEvent(this.downBtn, this.onTap), 
        this.observe(UserFb.ins().postGuanQiaSweep, this.onSweep), this.observe(UserFb.ins().postGuanQiaSweepInfo, this.onGQInfo), 
        this.observe(UserFb.ins().postAppointGQSweepInfo, this.onAppointGQInfo), UserFb.ins().sendRequestGuanQiaSweepInfo(0);
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeObserve();
    }, e.prototype.onSweep = function(t) {
        var e = t[0];
        e && e.length > 0 && (UserTips.ins().showTips("扫荡成功"), ViewManager.ins().open(ResultWin, 1, e, "获得奖励如下："));
    }, e.prototype.onAppointGQInfo = function(t) {
        var e = t[0], i = t[1];
        this.onGQInfo([ i ]);
        for (var n = null, s = 0, a = UserFb.ins().gqSweepDataList; s < a.length; s++) {
            var o = a[s];
            if (o && o.gqID == e) {
                n = o;
                break;
            }
        }
        ViewManager.ins().open(GQSweepInfoWin, n);
    }, e.prototype.onGQInfo = function(t) {
        var e = UserFb.ins().gqSweepDataList, i = [], n = Math.floor(e.length / this.gqBtnCount), s = e.length % this.gqBtnCount, a = 0;
        a = s > 0 ? n * this.gqBtnCount : (n - 1) * this.gqBtnCount, i = e.slice(a), this.curPage = t[0], 
        this.updatePage(i);
    }, e.prototype.updatePage = function(t) {
        if (t) for (var e = null, i = 0; i < this.gqBtnCount; i++) e = this.gqBtnList[i], 
        e.setData(t[i]); else for (var n = 0, s = this.gqBtnList; n < s.length; n++) {
            var a = s[n];
            a && a.setData(null);
        }
    }, e.prototype.onTap = function(t) {
        if (t && t.currentTarget) switch (t.currentTarget) {
          case this.upBtn:
            this.onChangePage(1);
            break;

          case this.downBtn:
            this.onChangePage(-1);
        }
    }, e.prototype.onGQTap = function(t) {
        if (t && t.currentTarget && this.gqBtnList) {
            var e = t.currentTarget;
            e.sweepData ? ViewManager.ins().open(GQSweepInfoWin, e.sweepData) : UserTips.ins().showTips("该扫荡关卡未开启");
        }
    }, e.prototype.onChangePage = function(t) {
        if (0 != t) if (t > 0) {
            if (this.curPage >= UserFb.ins().gqSweepMaxPage) return void UserTips.ins().showTips("已到顶");
            UserFb.ins().sendRequestGuanQiaSweepInfo(++this.curPage);
        } else {
            if (this.curPage <= 1) return void UserTips.ins().showTips("已到底");
            UserFb.ins().sendRequestGuanQiaSweepInfo(--this.curPage);
        }
    }, e;
}(BaseView);

__reflect(GuanQiaSweepPanel.prototype, "GuanQiaSweepPanel");

window.GuanQiaSweepPanel = GuanQiaSweepPanel;

var GuildInfoPanel = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.isInit = !1, e.userGuild = Guild.ins(), e.remindTime = 0, e.skinName = "GuildInfoSkin", 
        e.init(), e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {}, e.prototype.init = function() {
        this.initUI();
    }, e.prototype.initUI = function() {
        this.checkJoin.touchEnabled = !0, this.imgEdit.touchEnabled = !0, this.list.itemRenderer = GuildMemberItem1Render, 
        this.eff = new MovieClip(), this.eff.playFile(ResPath.getUIEffectPath(UiEffectType.Type22), -1), 
        this.eff.x = this.checkJoin.x + (this.checkJoin.width >> 1), this.eff.y = this.checkJoin.y + (this.checkJoin.height >> 1), 
        this.eff.scaleX = 1, this.eff.scaleY = .75, this.isInit = !0, this.roleFigure = new RoleFigure(), 
        this.groupRole.addChild(this.roleFigure);
    }, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.isInit || this.initUI(), this.imgEdit.addEventListener(egret.TextEvent.LINK, this.onLinkChange, this), 
        this.imgEdit.touchEnabled = !0, this.addTouchEvent(this.checkJoin, this.onLinkApply), 
        this.addTouchEvent(this.imgEdit, this.onLinkChange), this.addTouchEvent(this.conBtn, this.onTap), 
        this.addTouchEvent(this.btnGuild, this.onTap), this.addTouchEvent(this.btnTask, this.onTap), 
        this.addTouchEvent(this.btnMember, this.onTap), this.addTouchEvent(this.btnSkill, this.onTap), 
        this.addTouchEvent(this.btnReward, this.onTap), this.addTouchEvent(this.btnShop, this.onTap), 
        this.addTouchEvent(this.btnLog, this.onTap), this.addTouchEvent(this.btnChat, this.onTap), 
        this.addTouchEvent(this.imgGoFB, this.onTap), this.observe(GuildFB.ins().postGuildFubenInfo, this.onGuildInit), 
        this.observe(Guild.ins().postGuildInfo, this.onGuildInit), this.observe(Guild.ins().postGuildMembers, this.updateMember), 
        this.observe(Guild.ins().postMyGuildInfo, this.updateMyInfo), this.observe(Guild.ins().postChangeNotice, this.onGuildInit), 
        this.observe(Guild.ins().postGuildMoney, this.updateGuild), this.observe(Guild.ins().postGuildApplysInfos, this.updateApplys), 
        this.observe(GuildFB.ins().postFBRemindTime, this.updateTime), this.observe(Guild.ins().postGuildMoney, this.updateUp), 
        this.observe(UserReadPlayer.ins().postPlayerResult, this.updateRoleFigure), this.observe(GuildStore.ins().postGuildRewardInfo, this.updateDailyReward), 
        this.observe(Guild.ins().postGuildTaskUpdate, this.updateTaskRedPoint), this.observe(Guild.ins().postGuildSkillInfo, this.updateSkillRedpoint), 
        this.observe(Guild.ins().postUpBuilding, this.updateSkillRedpoint), this.observe(Guild.ins().postRedPoint, this.upRedPoint), 
        Guild.ins().sendGuildSkillInfo(), GuildStore.ins().sendGuildRewardInfo(), Guild.ins().sendGuildInfo(), 
        this.updateApplys(), this.updateMyInfo(), this.updateTime(), this.updateTaskRedPoint(), 
        void 0 == this.flashEff && (this.flashEff = new ButtonFlash(), this.addTouchEvent(this.flashEff, this.onTap), 
        this.flashEff.left = 100, this.flashEff.y = this.btnTask.y, this.addChild(this.flashEff), 
        this.flashEff.addFlash(this.btnTask, 1), this.flashEff.isFlash(!1)), this.updateUp();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeTouchEvent(this.checkJoin, this.onLinkApply), this.removeTouchEvent(this.imgEdit, this.onLinkChange), 
        this.removeTouchEvent(this.conBtn, this.onTap), this.removeTouchEvent(this.flashEff, this.onTap), 
        this.removeTouchEvent(this.btnGuild, this.onTap), this.removeTouchEvent(this.btnTask, this.onTap), 
        this.removeTouchEvent(this.btnMember, this.onTap), this.removeTouchEvent(this.btnSkill, this.onTap), 
        this.removeTouchEvent(this.btnReward, this.onTap), this.removeTouchEvent(this.btnShop, this.onTap), 
        this.removeTouchEvent(this.btnLog, this.onTap), this.removeTouchEvent(this.btnChat, this.onTap), 
        DisplayUtils.removeFromParent(this.eff), this.removeObserve(), TimerManager.ins().removeAll(this);
    }, e.prototype.upRedPoint = function() {
        this.updateTaskRedPoint(), this.updateSkillRedpoint();
    }, e.prototype.onTap = function(t) {
        switch (t.currentTarget) {
          case this.conBtn:
            ViewManager.ins().open(GuildConWin);
            break;

          case this.btnGuild:
            ViewManager.ins().open(GuildListPanel);
            break;

          case this.btnTask:
            ViewManager.ins().open(GuildTaskPanel), GuildIconRule.firstTaskTap && (Guild.ins().postRedPoint(), 
            GuildIconRule.firstTaskTap = !1);
            break;

          case this.btnMember:
            ViewManager.ins().open(GuildMemberPanel);
            break;

          case this.btnSkill:
            ViewManager.ins().open(GuildSkillWin), GuildIconRule.firstSkillTap && (Guild.ins().postRedPoint(), 
            GuildIconRule.firstSkillTap = !1);
            break;

          case this.btnReward:
            ViewManager.ins().open(GuildDailyRewardWin);
            break;

          case this.btnShop:
            ViewManager.ins().open(GuildNewShopWin);
            break;

          case this.btnLog:
            ViewManager.ins().open(GuildLogWin);
            break;

          case this.btnChat:
            ViewManager.ins().open(ChatWin, 1);
            break;

          case this.imgGoFB:
            ViewManager.ins().open(GuildMainUIWin, 1);
        }
    }, e.prototype.updateDailyReward = function() {
        var t = GuildRewardData.ins();
        this.isGetReward.visible = 1 == t.isGet, this.redPointReward.visible = t.getRedPoint();
    }, e.prototype.updateTaskRedPoint = function() {
        this.redPointTask.visible = GuildIconRule.firstTaskTap;
    }, e.prototype.updateSkillRedpoint = function() {
        this.redPointSkill.visible = GuildIconRule.firstSkillTap;
    }, e.prototype.updateRoleFigure = function(t) {
        if (this.userGuild.guildBangzhuId == t.id) {
            var e = t.roleData[0];
            this.roleFigure.setData(e.sex, e.getBodyResId(), e.getWeaponResId(), e.getFootResId(), e.wingsData.lv, e.wingsData.fiyUpLv, e.gangqisData.lv, e.gangqisData.fiyUpLv, e.zujisData.lv, e.zujisData.fiyUpLv, e.fabaosData.lv, e.fabaosData.fiyUpLv, e.dragonData.dragonLv);
        }
    }, e.prototype.updateMyInfo = function() {
        this.myCon.text = this.userGuild.myCon + "", this.checkJoin.visible = this.userGuild.myOffice >= GuildOffice.GUILD_FUBANGZHU, 
        this.imgEdit.visible = this.userGuild.myOffice >= GuildOffice.GUILD_FUBANGZHU;
    }, e.prototype.onGuildInit = function() {
        this.updateGuild(), UserReadPlayer.ins().sendFindPlayer(this.userGuild.guildBangzhuId);
    }, e.prototype.updateGuild = function() {
        this.guildName.text = this.userGuild.guildName, this.guildLevel.text = this.userGuild.guildLv.toString(), 
        this.guildMoney.text = this.userGuild.money.toString(), this.guildPowerTxt.text = this.userGuild.guildTotalPower + "", 
        this.notice.text = this.userGuild.notice, this.labelKillNum.text = "本周已击杀首领" + GuildFB.ins().fbNum + "个", 
        this.guildBangzhuNameTxt.text = this.userGuild.guildBangzhuName;
    }, e.prototype.updateMember = function() {
        this.list.itemRenderer = GuildMemberItem1Render;
        var t = GlobalConfig.ins().GuildConfig;
        this.guildMember.text = this.userGuild.getMemberNum() + "/" + t.maxMember[Guild.ins().guildLv - 1], 
        this.list.dataProvider = new eui.ArrayCollection(this.userGuild.getGuildMembers(1));
    }, e.prototype.onLinkChange = function(t) {
        ViewManager.ins().open(GuildNoticeWin);
    }, e.prototype.onLinkApply = function() {
        ViewManager.ins().open(GuildApplyListWin);
    }, e.prototype.updateApplys = function() {
        this.userGuild.hasApplys() ? (this.checkJoin.parent.addChildAt(this.eff, this.getChildIndex(this.checkJoin) + 1), 
        this.eff.play(-1)) : DisplayUtils.removeFromParent(this.eff);
    }, e.prototype.updateUp = function() {
        var t = Guild.ins().isUp();
        this.flashEff && this.flashEff.isFlash(t);
    }, e.prototype.updateTime = function() {
        this.labelCount.text = GuildFB.ins().fbCount + "/" + GlobalConfig.ins().GuildBossBase.maxTimes, 
        this.labelCount.textColor = GuildFB.ins().fbCount > 0 ? 65280 : 16717848, TimerManager.ins().remove(this.doTime, this), 
        this.remindTime = GuildFB.ins().getFBRemindTime(), this.labelTime.visible = this.remindTime > 0, 
        this.remindTime > 0 && TimerManager.ins().doTimer(1e3, 0, this.doTime, this);
    }, e.prototype.doTime = function() {
        this.remindTime--, this.labelTime.text = DateUtils.getFormatBySecond(this.remindTime, DateUtils.TIME_FORMAT_1), 
        this.remindTime <= 0 && (this.labelTime.visible = !1, TimerManager.ins().remove(this.doTime, this));
    }, e;
}(BaseView);

__reflect(GuildInfoPanel.prototype, "GuildInfoPanel");

window.GuildInfoPanel = GuildInfoPanel;

var GuildNewFBPanel = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "GuildFubenSkin", e.list.itemRenderer = GuildFBRankItemRender, 
        e.skillAwardList.itemRenderer = ItemBase, e.labelTime.text = "", e;
    }
    return __extends(e, t), e.prototype.open = function() {
        this.addTouchEvent(this.challage, this.onTap), this.addTouchEvent(this.rankReward, this.onTap), 
        this.addTouchEvent(this.labelSeeRank, this.onTap), this.observe(GuildFB.ins().postGuildFubenInfo, this.updateView), 
        this.observe(GuildFB.ins().postSLBossHp, this.updateView), void 0 == this.monster && (this.monster = new CharMonster()), 
        this.monster.hideBlood(), this.groupMonster.addChild(this.monster), GuildFB.ins().sendGuildFBRankInfo(), 
        GuildFB.ins().sendGuildFBMaxGKInfo(), GuildFB.ins().sendSLBossHp(), this.observe(GuildFB.ins().postFBRemindTime, this.updateTime), 
        this.updateTime(), this.updateView(), TimerManager.ins().doTimer(5e3, 0, this.sendBossHp, this), 
        this.skillAwardList.dataProvider = GlobalFun.formatListData(this.conf.showaward);
    }, e.prototype.close = function() {
        TimerManager.ins().removeAll(this), TimerManager.ins().remove(this.sendBossHp, this);
    }, e.prototype.onTap = function(t) {
        switch (t.target) {
          case this.challage:
            if (GuildFB.ins().fbNum >= 300) return void UserTips.ins().showTips("已通关宗门副本");
            if (GuildFB.ins().fbCount <= 0) return void UserTips.ins().showTips("可挑战次数不够");
            if (GameMap.fubenID > 0) return void (GameMap.fbType == UserFb.FB_TYPE_GUANQIABOSS ? UserTips.ins().showTips(LangManager.commonStr39) : UserTips.ins().showTips(LangManager.commonStr40));
            GuildFB.ins().sendEnterSL();
            break;

          case this.rankReward:
            ViewManager.ins().open(ItemDetailedWin, 0, GlobalConfig.ins().GuildBossBase.showAwardId);
            break;

          case this.labelSeeRank:
            ViewManager.ins().open(GuildFBRankWin);
        }
    }, e.prototype.updateView = function() {
        var t = GlobalConfig.ins().GuildSlBossConfig[GuildFB.ins().bossGKNum];
        this.conf = t, this.labelStep.text = "第" + t.stage + "关";
        var e = GlobalConfig.ins().MonstersConfig(t.bossid);
        this.monster.initBody(ResPath.RES_DIR_MONSTER + MonstersConfig.realAvatar(e)), this.hpBar.maximum = e.hp, 
        this.hpBar.value = GuildFB.ins().blood, this.hpBar.labelDisplay.visible = !1, this.prcentID.text = Math.ceil(GuildFB.ins().blood / e.hp * 100) + "%";
        var i;
        if (GuildFB.ins().rankDatas.length > 0) i = GuildFB.ins().rankDatas; else {
            i = [];
            for (var n = 0; 3 > n; n++) i.push({
                rank: n + 1,
                name: "、虚位以待"
            });
        }
        this.list.dataProvider = new eui.ArrayCollection(i);
    }, e.prototype.updateTime = function() {
        this.labelCount.text = "" + GuildFB.ins().fbCount, this.labelCount.textColor = GuildFB.ins().fbCount > 0 ? ColorUtil.C_GREEN : ColorUtil.C_RED, 
        TimerManager.ins().remove(this.doTime, this), this.remindTime = GuildFB.ins().getFBRemindTime(), 
        this.labelTime.visible = this.remindTime > 0, this.remindTime > 0 && (TimerManager.ins().doTimer(1e3, 0, this.doTime, this), 
        this.doTime());
    }, e.prototype.doTime = function() {
        this.remindTime--, this.labelTime.text = DateUtils.getFormatBySecond(this.remindTime, DateUtils.TIME_FORMAT_1), 
        this.remindTime <= 0 && (this.labelTime.visible = !1, TimerManager.ins().remove(this.doTime, this));
    }, e.prototype.sendBossHp = function() {
        GuildFB.ins().sendSLBossHp();
    }, e;
}(BaseView);

__reflect(GuildNewFBPanel.prototype, "GuildNewFBPanel");

window.GuildNewFBPanel = GuildNewFBPanel;

var IconCD = function(t) {
    function e(e, i, n, s, a, o) {
        void 0 === e && (e = 1);
        var r = t.call(this) || this;
        return r.MASK_COLOR = 0, r.MASK_ALPHA = .6, r.touchChildren = !1, r.touchEnabled = !1, 
        r.icon = i, r.width = n, r.height = s, r.radius = a, r.icon.addChild(r), r.grayShape = new egret.Shape(), 
        r.grayShape.graphics.clear(), r.grayShape.graphics.beginFill(r.MASK_COLOR, r.MASK_ALPHA), 
        1 == e ? r.grayShape.graphics.drawCircle(r.width >> 1, r.height >> 1, r.radius) : r.grayShape.graphics.drawRect(0, 0, r.radius, r.radius), 
        r.grayShape.graphics.endFill(), r.addChild(r.grayShape), r.max = o, r.bar = new CoolingQueueMcForCircle(r.grayShape, r.width, !0), 
        r;
    }
    return __extends(e, t), Object.defineProperty(e.prototype, "CD", {
        set: function(t) {
            t = 0 > t ? 0 : t, t = t > this.max ? this.max : t, this.bar.setProgress(t, this.max), 
            this.visible = t > 0;
        },
        enumerable: !0,
        configurable: !0
    }), e;
}(BaseView);

__reflect(IconCD.prototype, "IconCD");

window.IconCD = IconCD;

var PersonalBossPanel = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e._barVal = 0, e.onekeyId = [], e.skinName = "PersonalBossPanelSkin", e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.init();
    }, e.prototype.init = function() {
        this.arrData = new eui.ArrayCollection(), this.list.itemRenderer = PersonalBossItem, 
        this.list.dataProvider = this.arrData;
    }, e.prototype.open = function() {
        UserFb.ins().sendiSPassBoss(), this.tempIndex = 0, this.list.scrollV = 0, this.observe(UserFb.ins().postFbCountChange, this.setOneData), 
        this.addTouchEvent(this.onekeyBtn, this.onTop), this.setOneData(), this.observe(UserVip.ins().postUpdataExp, this.setOneKey), 
        this.observe(GameServer.ins().postServerTime, this.setOneKey), this.observe(GameServer.ins().postGetOpenServer, this.setOneKey);
    }, e.prototype.setOneData = function() {
        this.tempArrData = DailyFubenConfig.getPersonalBossFbIds().sort(this.sortFun), this.arrData.replaceAll(this.tempArrData), 
        this.setOneKey();
    }, e.prototype.close = function() {
        this.tempArrData = null;
    }, e.prototype.setOneKey = function() {
        this.bar.visible = !1;
        var t = GlobalConfig.ins().OneKeyOpenConfig[OnekeyOpenId.personBoss];
        t && (UserVip.ins().lv >= t.vipLevel && GameServer.serverOpenDay >= t.openDay ? (this.onekeyBtn.visible = !0, 
        this.titleTips.y = 0, this.onekeyId = UserBoss.getOnekeyId()) : (this.onekeyBtn.visible = !1, 
        this.titleTips.y = 23));
    }, e.prototype.onTop = function(t) {
        t.target == this.onekeyBtn && (UserBag.ins().getSurplusCount() < UserBag.BAG_ENOUGH ? ViewManager.ins().open(BagFullTipsWin) : this.onekeyId.length > 0 ? this.starSaoDang() : UserTips.ins().showTips("次数不足，无法扫荡"));
    }, e.prototype.starSaoDang = function() {
        TimerManager.ins().doTimer(50, 20, this.refushBar, this, this.overPlay, this), this.bar.visible = !0, 
        this.bar.labelFunction = function() {
            return "扫荡中";
        };
    }, e.prototype.refushBar = function() {
        this.onekeyBtn.enabled = !1, this._barVal += 5, this.bar.value = this._barVal;
    }, e.prototype.overPlay = function() {
        if (0 != this._barVal) {
            this.bar.visible = !1, this.onekeyBtn.enabled = !0, this._barVal = 0;
            for (var t = 0; t < this.onekeyId.length; t++) UserFb.ins().sendBossSaoDang(this.onekeyId[t]);
        }
    }, e.prototype.sortFun = function(t, e) {
        var i = UserFb.ins().getFbDataById(t.id), n = UserFb.ins().getFbDataById(e.id);
        if (!i || !n) return 0;
        var s = i.getCount(), a = n.getCount();
        return s > a ? -1 : a > s ? 1 : t.zsLevel < e.zsLevel ? -1 : t.zsLevel > e.zsLevel ? 1 : t.levelLimit < e.levelLimit ? -1 : t.levelLimit > e.levelLimit ? 1 : 0;
    }, e;
}(BaseView);

__reflect(PersonalBossPanel.prototype, "PersonalBossPanel");

window.PersonalBossPanel = PersonalBossPanel;

var RoleInfoItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "RoleInfoItemSkin", e;
    }
    return __extends(e, t), e.prototype.setData = function(t, e, i, n) {
        var s = GlobalConfig.ins().EquipPointBasicConfig[e];
        this.lvTxt.text = i > 0 ? "+" + i : "", this.jieTxt.text = n > 0 ? "" + n : "", 
        this.lv = s.activationLevel / 1e3 >> 0, this.labelDisplay.text = i > 0 ? s.name : (s.activationLevel / 1e3 >> 0) + "转激活";
        var a = GlobalConfig.ins().ItemConfig(s.activationItem.id);
        UserZs.ins().lv < this.lv ? this.lockImg.visible = !0 : this.lockImg.visible = !1, 
        i > 0 ? this.itemIcon.setData(a) : (this.itemIcon.setData(null), this.itemIcon.setImgIcon(t), 
        this.itemIcon.setImgQuality("common_quality0")), this.itemIcon.setJiaobiaoVisible(!1);
    }, e.prototype.setSelected = function(t) {
        UserZs.ins().lv >= this.lv && (this.selected = t, this.currentState = this.selected ? "down" : "up");
    }, e.prototype.setRedPoint = function(t) {
        this.redPoint.visible = t;
    }, e;
}(BaseView);

__reflect(RoleInfoItem.prototype, "RoleInfoItem");

window.RoleInfoItem = RoleInfoItem;

var RoleInfoPanel = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.curRole = 0, e.specialPartListSource = [ 5, 7, 6, 4 ], e.skinName = "RoleInfoSkin", 
        e.name = "角色", e.totalPower || (e.totalPower = BitmapNumber.ins().createNumPic(0, BitmapNumber.numType0, 10), 
        e.powerContainer.addChild(e.totalPower)), e.xianlvEff = new MovieClip(), e.xianlvEff.x = 65, 
        e.xianlvEff.y = 115, e.addChild(e.xianlvEff), e.xianlvEff.playFile(ResPath.getUIEffectPath(UiEffectType.Type5), -1), 
        e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.init();
    }, e.prototype.init = function() {
        this.touchEnabled = !1, this.touchChildren = !0, this.roleFigure = new RoleFigure(), 
        this.groupRole.addChild(this.roleFigure), this.equips = [];
        for (var t = 0; t < EquipPos.MAX; t++) this.equips[t] = this["item" + t], this.equips[t].touchEnabled = !0;
        this.zhuzaiEquips = [];
        for (var t = 0; t < ZhuzaiEquipPos.MAX; t++) this.zhuzaiEquips[t] = this["zhuzaiItem" + t], 
        this.zhuzaiEquips[t].touchEnabled = !0, this.zhuzaiEquips[t].setData("common_part" + this.specialPartListSource[t], ZhuzaiEquipPos.ZhuzaiEquipPosList[t], 0, 0);
        this.flameGroup.x = 183, this.flameGroup.y = 138;
    }, e.prototype.open = function() {
        for (var t = this, e = [], i = 0; i < arguments.length; i++) e[i] = arguments[i];
        this.playFlameMC(), this.addTouchEvent(this.fabao, this.onClick), this.addTouchEvent(this.zuji, this.onClick), 
        this.addTouchEvent(this.gangqi, this.onClick), this.addTouchEvent(this.moshen, this.onClick), 
        this.addTouchEvent(this.horse, this.onClick), this.addTouchEvent(this.wing, this.onClick), 
        this.addTouchEvent(this.lunhuiBtn, this.onClick), this.addTouchEvent(this.xianlvBtn, this.onClick), 
        this.addTouchEvent(this.pokeBtn, this.onClick), this.addTouchEvent(this.checkAttr, this.onClick), 
        this.addTouchEvent(this.bless, this.onClick), this.addTouchEvent(this.shuzhuang, this.onClick), 
        this.addTouchEvent(this.oneKeyChange, this.onClick), this.addTouchEvent(this.shenlu, this.onClick), 
        this.addTouchEvent(this.orange, this.onClick), this.addTouchEvent(this.runeBtn, this.onClick), 
        this.addTouchEvent(this.roleTitle, this.onClick), this.addTouchEvent(this.ryszBtn, this.onClick);
        for (var n = 0; n < this.equips.length; n++) this.addTouchEvent(this.equips[n], this.onClick);
        for (var n = 0; n < this.zhuzaiEquips.length; n++) this.addTouchEvent(this.zhuzaiEquips[n], this.onClick);
        this.observe(UserEquip.ins().postEquipChange, this.updataEquip), this.observe(ZhuzaiEquip.ins().postZhuZaiData, this.updatazhuzaiEquip), 
        this.observe(Dress.ins().postDressInfo, this.updataEquip), this.observe(Bless.ins().postBelssUpdate, this.updataEquip), 
        this.observe(Dress.ins().postJiHuo, this.updataEquip), this.observe(UserBag.ins().postItemAdd, this.checkZhuZaiRedPoint), 
        this.observe(UserBag.ins().postItemChange, this.checkZhuZaiRedPoint), this.observe(UserBag.ins().postItemDel, this.checkZhuZaiRedPoint), 
        this.observe(LunHui.ins().postBaseInfo, this.updateLunhuiRedPoint), this.observe(LunHui.ins().postRedPoint, this.updateLunhuiRedPoint), 
        this.observe(LunHui.ins().postFirstListData, this.updateLunhuiRedPoint), this.observe(XianLv.ins().postDataInfo, this.updateXianLvRedPoint), 
        this.observe(XianLv.ins().postChanMianData, this.updateXianLvRedPoint), this.observe(XianLv.ins().postXianLvShiInfo, this.updateXianLvRedPoint), 
        this.observe(XianLv.ins().postTXJInfo, this.updateXianLvRedPoint), this.updateXianLvRedPoint(), 
        GEventDispatcher.instance.addEventListener(GEvent.CLOSE_WIN, this.updateRoleFigureHandle, this), 
        this.observe(UserRole.ins().postRoleHint, this.redPoint), this.observe(Activity.ins().postOpenServer0Data, this.updateTab), 
        this.observe(ZhuzaiEquip.ins().postRYSZInfo, this.updateRYSZRedPoint), ZhuzaiEquip.ins().sendRYSZInfo(), 
        this.observe(DressShop.ins().postRedPoint, this.redPoint), this.updataEquip(), UserSkill.ins().grewupSkill(), 
        this.redPoint(), 6 == BeginnerGuide.ins().guideStep && TimerManager.ins().doTimer(300, 1, function() {
            BeginnerGuideLogic.ins().playGuide(RoleWin, t.oneKeyChange);
        }, this), this.updateTab(), Activity.ins().sendOpenServer0Data(), this.checkZhuZaiRedPoint(), 
        this.updateLunhuiRedPoint();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.stopFlameMC(), this.removeTouchEvent(this.wing, this.onClick), this.removeTouchEvent(this.checkAttr, this.onClick), 
        this.removeTouchEvent(this.bless, this.onClick), this.removeTouchEvent(this.oneKeyChange, this.onClick), 
        this.removeTouchEvent(this.shenlu, this.onClick), this.removeTouchEvent(this.orange, this.onClick), 
        this.removeTouchEvent(this.runeBtn, this.onClick), this.removeTouchEvent(this.roleTitle, this.onClick), 
        GEventDispatcher.instance.removeEventListener(GEvent.CLOSE_WIN, this.updateRoleFigureHandle, this), 
        this.removeEvents(), this.removeObserve();
    }, e.prototype.updateTab = function() {
        var t = OpenServerData0.ins().trueIndex;
        this.horseActivityTip.visible = 1 == OpenServerConst.TYPE_JINJIERI_TAB[t], this.wingActivityTip.visible = 2 == OpenServerConst.TYPE_JINJIERI_TAB[t], 
        this.zujiActivityTip.visible = 6 == OpenServerConst.TYPE_JINJIERI_TAB[t], this.gangqiActivityTip.visible = 7 == OpenServerConst.TYPE_JINJIERI_TAB[t], 
        this.fabaoActivityTip.visible = 4 == OpenServerConst.TYPE_JINJIERI_TAB[t], this.moshenActivityTip.visible = 5 == OpenServerConst.TYPE_JINJIERI_TAB[t];
    }, e.prototype.redPoint = function() {
        this.orangeRedPoint.visible = RoleDataTip.ins().isOrangeTip(), this.fashionPoint.visible = RoleDataTip.ins().isDress() || DressShop.ins().getRedPoint(), 
        this.horseRedPoint.visible = AdvanceHorse.ins().data.isRedTip(), this.wingRedPoint.visible = AdvanceWing.ins().data.isRedTip(), 
        this.zujiRedPoint.visible = AdvanceZuJi.ins().data.isRedTip(), this.gangqiRedPoint.visible = AdvanceGangQi.ins().data.isRedTip(), 
        this.fabaoRedPoint.visible = AdvanceFaBao.ins().data.isRedTip(), this.moshenRedPoint.visible = AdvanceMoShen.ins().data.isRedTip(), 
        this.setCanChange(), this.blessRed.visible = Bless.ins().checkIsEnough();
    }, e.prototype.updateRoleFigureHandle = function(t) {
        ("AdvanceWingWin" == t || "AdvanceZuJiWin" == t || "AdvanceGangQiWin" == t || "AdvanceFaBaoWin" == t) && this.updateRoleFigure();
    }, e.prototype.updateRoleFigure = function() {
        var t = SubRoles.ins().getSubRoleByIndex(this.curRole);
        null != t && this.roleFigure.setData(t.sex, t.getBodyResId(), t.getWeaponResId(), t.getFootResId(), t.wingsData.lv, t.wingsData.fiyUpLv, t.gangqisData.lv, t.gangqisData.fiyUpLv, t.zujisData.lv, t.zujisData.fiyUpLv, t.fabaosData.lv, t.fabaosData.fiyUpLv, t.dragonData.dragonLv);
    }, e.prototype.playFlameMC = function() {}, e.prototype.stopFlameMC = function() {
        this.flameMC && this.flameMC.stop();
    }, e.prototype.refushBlessInfO = function() {
        this.updataEquip(), this.setRetPoint();
    }, e.prototype.updataEquip = function() {
        this._totalPower = 0;
        var t = SubRoles.ins().getSubRoleByIndex(this.curRole);
        t && this.setEquip(t), this.updateRoleFigure(), t && this.setZhuzaiEquipPoint(t);
    }, e.prototype.updatazhuzaiEquip = function() {
        var t = SubRoles.ins().getSubRoleByIndex(this.curRole);
        t && this.setZhuzaiEquipPoint(t);
    }, e.prototype.checkZhuZaiRedPoint = function() {
        var t = SubRoles.ins().getSubRoleByIndex(this.curRole);
        if (t) for (var e = (GlobalConfig.ins().EquipPointBasicConfig, 0); e < ZhuzaiEquipPos.MAX; e++) {
            var i = t.getZhuZaiDataByIndex(e);
            this.zhuzaiEquips[e].setRedPoint(i.canLevelup() || i.canAdvance());
        }
    }, e.prototype.setEquip = function(t) {
        if (t) {
            for (var e = t.getEquipLen(), i = (t.equipsData, t.zhuangbei), n = (i[0], i[1], 
            0); e > n; n++) {
                var s = t.getEquipByIndex(n);
                if (this.equips[n].setModel(t), this.equips[n].data = s.item, 0 == s.item.configID && this.equips[n].setEquipPos(n >= 8 ? "" : "common_part" + RoleDataTip.equipPartList[n]), 
                0 == n || 2 == n) {
                    s.item.configID;
                }
            }
            this.updatePower();
        }
    }, e.prototype.updatePower = function() {
        BitmapNumber.ins().changeNum(this.totalPower, Actor.power, BitmapNumber.numType0, 2);
    }, e.prototype.updateFlameGroup = function() {
        this.flameGroup.parent && (this.flameGroup.x = this.totalPower.x + Math.floor(this.totalPower.width / 3));
    }, e.prototype.setZhuzaiEquipPoint = function(t, e) {
        void 0 === e && (e = !1);
        for (var i = (GlobalConfig.ins().EquipPointBasicConfig, 0); i < ZhuzaiEquipPos.MAX; i++) {
            var n = t.getZhuZaiDataByIndex(i);
            this.zhuzaiEquips[i].setData("common_part" + this.specialPartListSource[i], ZhuzaiEquipPos.ZhuzaiEquipPosList[i], n.growupID, n.rank);
        }
    }, e.prototype.getZhuangbanById = function(t) {
        for (var e in GlobalConfig.ins().ZhuangBanId) if (GlobalConfig.ins().ZhuangBanId[e].id == t) return GlobalConfig.ins().ZhuangBanId[e];
        return null;
    }, e.prototype.setWingRedPoint = function() {}, e.prototype.setFashionRetPoint = function() {}, 
    e.prototype.onClick = function(t) {
        switch (t.currentTarget) {
          case this.pokeBtn:
            PokeData.ins().isOpen ? ViewManager.ins().open(PokeView) : UserTips.ins().showTips(LangManager.getLang(LangManager.commonStr20, GlobalConfig.ins().PokeCommonConfig.openLevel, LangManager.pokeStr0));
            break;

          case this.horse:
            AdvanceHorse.ins().data.isOpen ? 0 == AdvanceHorse.ins().data.lv ? ViewManager.ins().open(YugaoWin, YugaoData.horse) : ViewManager.ins().open(AdvanceHorseWin, this.curRole) : ViewManager.ins().open(YugaoWin, YugaoData.horse);
            break;

          case this.fabao:
            AdvanceFaBao.ins().data.isOpen ? 0 == AdvanceFaBao.ins().data.lv ? ViewManager.ins().open(YugaoWin, YugaoData.fabao) : ViewManager.ins().open(AdvanceFaBaoWin, this.curRole) : ViewManager.ins().open(YugaoWin, YugaoData.fabao);
            break;

          case this.zuji:
            AdvanceZuJi.ins().data.isOpen ? 0 == AdvanceZuJi.ins().data.lv ? ViewManager.ins().open(YugaoWin, YugaoData.zuji) : ViewManager.ins().open(AdvanceZuJiWin, this.curRole) : ViewManager.ins().open(YugaoWin, YugaoData.zuji);
            break;

          case this.gangqi:
            AdvanceGangQi.ins().data.isOpen ? 0 == AdvanceGangQi.ins().data.lv ? ViewManager.ins().open(YugaoWin, YugaoData.gangqi) : ViewManager.ins().open(AdvanceGangQiWin, this.curRole) : ViewManager.ins().open(YugaoWin, YugaoData.gangqi);
            break;

          case this.moshen:
            AdvanceMoShen.ins().data.isOpen ? 0 == AdvanceMoShen.ins().data.lv ? ViewManager.ins().open(YugaoWin, YugaoData.moshen) : ViewManager.ins().open(AdvanceMoShenWin, this.curRole) : ViewManager.ins().open(YugaoWin, YugaoData.moshen);
            break;

          case this.checkAttr:
            ViewManager.ins().open(RoleAttrWin, this.curRole);
            break;

          case this.shuzhuang:
            ViewManager.ins().open(DressWin, this.curRole);
            break;

          case this.bless:
            ViewManager.ins().open(BlessWin, this.curRole);
            break;

          case this.oneKeyChange:
            UserRole.ins().checkHaveCan(!0, this.curRole), this.setCanChange();
            break;

          case this.shenlu:
            ViewManager.ins().open(LongHunWin);
            break;

          case this.orange:
            ViewManager.ins().open(TreasureHuntWin, 0);
            break;

          case this.runeBtn:
            ViewManager.ins().open(RuneWin);
            break;

          case this.roleTitle:
            ViewManager.ins().open(TitleWin);
            break;

          case this.lunhuiBtn:
            ViewManager.ins().open(LunHuiWin);
            break;

          case this.xianlvBtn:
            ViewManager.ins().open(XianLvWin);
            break;

          case this.ryszBtn:
            ViewManager.ins().open(RYSZViewWin);
            break;

          case this.wing:
            AdvanceWing.ins().data.isOpen ? 0 == AdvanceWing.ins().data.lv ? ViewManager.ins().open(YugaoWin, YugaoData.wing) : ViewManager.ins().open(AdvanceWingWin, this.curRole) : ViewManager.ins().open(YugaoWin, YugaoData.wing);
            break;

          default:
            var e = this.zhuzaiEquips.indexOf(t.currentTarget);
            if (e >= 0) {
                var i = GlobalConfig.ins().EquipPointBasicConfig[e + 1], n = i.activationLevel / 1e3 >> 0;
                UserZs.ins().lv >= n ? ViewManager.ins().open(ZhuZaiEquipWin, 0, this.curRole, e) : UserTips.ins().showTips("|C:0xff0000&T:" + n + "转开启|");
            }
        }
    }, e.prototype.setWing = function() {}, e.prototype.setSkillRedPoint = function(t) {}, 
    e.prototype.setRetPoint = function() {}, e.prototype.and = function(t) {
        for (var e in t) if (1 == t[e]) return !0;
        return !1;
    }, e.prototype.setCanChange = function() {
        for (var t, e = UserRole.ins().canChangeEquips, i = 0, n = e[i], s = this.equips.length, a = 0; s > a; a++) this["redPoint" + a].visible = n[a] ? n[a] : !1, 
        t || (t = n[a] ? n[a] : !1);
        null == this.oneKeyEff && (this.oneKeyEff = new MovieClip()), t ? (this.oneKeyEff.playFile(ResPath.getUIEffectPath(UiEffectType.Type19), -1), 
        this.oneKeyEff.scaleX = .9, this.oneKeyEff.scaleY = .9, this.oneKeyEff.x = 270, 
        this.oneKeyEff.y = 543, this.addChild(this.oneKeyEff), this.oneKeyChange.visible = !0) : (this.oneKeyEff.stop(), 
        null != this.oneKeyEff.parent && this.oneKeyEff.parent.removeChild(this.oneKeyEff), 
        this.oneKeyChange.visible = !1);
    }, e.prototype.updateLunhuiRedPoint = function() {
        this.lunhuiRedPoint.visible = LunHuiData.ins().getRedPoint();
    }, e.prototype.updateXianLvRedPoint = function() {
        this.xianlvRedPoint.visible = XianLvData.ins().getRedPoint();
    }, e.prototype.updateRYSZRedPoint = function() {
        this.ryszRedPoint.visible = RYSZData.ins().getRedPoint();
    }, e;
}(BaseView);

__reflect(RoleInfoPanel.prototype, "RoleInfoPanel");

window.RoleInfoPanel = RoleInfoPanel;

var RoleSelectPanel = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e._curRole = 0, e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.init(), this.name = "角色";
    }, e.prototype.init = function() {
        this.roles = [ this.role0, this.role1, this.role2 ];
        for (var t = 0; 2 > t; t++) {
            var e = new MovieClip();
            e.x = 55, e.y = 53, e.scaleY = e.scaleX = 1.2, this.roles[t + 1].addChildAt(e, 1);
        }
        this.setCurRole(this._curRole), this.updateRole(), this.addEventListener(egret.Event.ADDED_TO_STAGE, this.updateRole, this), 
        this.addTouchEvent(this, this.onClick), this.observe(GameLogic.ins().postSubRoleChange, this.updateRole), 
        this.observe(GameLogic.ins().postLevelChange, this.updateRole), this.observe(UserVip.ins().postUpdateVipData, this.updateRole), 
        this.observe(UserZs.ins().postZsData, this.updateRole);
    }, e.prototype.getCurRole = function() {
        return this._curRole;
    }, e.prototype.setCurRole = function(t) {
        this._curRole = t;
        for (var e = this.getRelativeIndex(t), i = 0; i < this.roles.length; i++) {
            var n = this.roles[i];
            n.selected = i == e;
        }
        this.dispatchEventWith(egret.Event.CHANGE, !1, this._curRole);
    }, e.prototype.onClick = function(t) {
        var e = this.roles.indexOf(t.target);
        if (e > -1) {
            var i = t.target, n = SubRoles.ins().roles[e];
            n ? this.setCurRole(SubRoles.ins().getRoleIndexByJob(n.job)) : (ViewManager.ins().open(NewRoleWin), 
            i.selected = !1);
        }
    }, e.prototype.updateRole = function() {
        for (var t, e, i = this.roles.length, n = 0; i > n; n++) {
            if (t = this.roles[n], e = SubRoles.ins().roles[n]) t.jobImg.visible = !0, t.txt.visible = !1, 
            "可解锁" == t.txt.text && this.showRedPoint(n, !1); else {
                var s = GlobalConfig.ins().NewRoleConfig[n];
                t.jobImg.visible = !1, t.txt.visible = !0, s.zsLevel ? UserZs.ins().lv < s.zsLevel ? t.txt.text = s.zsLevel + "转\n解锁" : t.txt.text = "可解锁" : Actor.level < s.level ? t.txt.text = s.level + "级\n解锁" : t.txt.text = "可解锁", 
                s.vip && UserVip.ins().lv >= s.vip && (t.txt.text = "可解锁"), t.icon = "";
            }
            "可解锁" == t.txt.text && this.showRedPoint(n, !0);
        }
    }, e.prototype.showRedPoint = function(t, e) {
        null != this.roles && this.roles[t] && (this.roles[t].redPoint.visible = e);
    }, e.prototype.clearRedPoint = function() {
        for (var t = 0; t < this.roles.length; t++) this.roles[t].redPoint.visible = !1;
        this.updateRole();
    }, e.prototype.destructor = function() {
        this.removeTouchEvent(this, this.onClick), this.removeEventListener(egret.Event.ADDED_TO_STAGE, this.updateRole, this), 
        this.removeObserve(), DisplayUtils.removeFromParent(this);
    }, e.prototype.hideBackground = function() {
        this.imgBgLeft.visible = !1, this.imgBgRight.visible = !1;
    }, e.prototype.getRelativeIndex = function(t) {
        for (var e = 0, i = 0, n = SubRoles.ins().allRoles; i < n.length; i++) {
            var s = n[i];
            if (s == SubRoles.ins().getSubRoleByIndex(t)) return e;
            s.job != JobConst.Pet && s.job != JobConst.FaBao && s.job != JobConst.Moshen && e++;
        }
        return 0;
    }, e;
}(BaseView);

__reflect(RoleSelectPanel.prototype, "RoleSelectPanel");

window.RoleSelectPanel = RoleSelectPanel;

var RoleZhuzaiItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "RoleZhuzaiItemSkin", e;
    }
    return __extends(e, t), e.prototype.setData = function(t, e, i, n, s) {
        void 0 === s && (s = !0);
        var a = GlobalConfig.ins().EquipPointBasicConfig[e];
        this.lvTxt.text = i > 0 ? "+" + i : "", this.jieTxt.text = n > 0 ? "" + n : "";
        var o = a.activationLevel / 1e3 >> 0;
        UserZs.ins().lv < o ? this.lockImg.visible = !0 : (this.lockImg.visible = !1, this.nameTxt.text = ""), 
        s ? this.nameTxt.visible = !0 : (this.nameTxt.visible = i > 0, this.lockImg.visible = !1), 
        this.nameTxt.text = i > 0 ? a.name : o + "转激活";
        var r = GlobalConfig.ins().ItemConfig(a.activationItem.id);
        i > 0 ? this.itemIcon.setData(r) : (this.itemIcon.setData(null), this.itemIcon.setImgIcon(t), 
        this.itemIcon.setImgQuality("common_quality0")), this.itemIcon.setJiaobiaoVisible(!1);
    }, e.prototype.setRedPoint = function(t) {
        this.redPoint.visible = t;
    }, e;
}(BaseView);

__reflect(RoleZhuzaiItem.prototype, "RoleZhuzaiItem");

window.RoleZhuzaiItem = RoleZhuzaiItem;

var StarListNew = function(t) {
    function e(e, i, n) {
        void 0 === e && (e = 10), void 0 === i && (i = 0), void 0 === n && (n = 0);
        var s = t.call(this) || this;
        return s._styleList = [ "StarItemSkin", "StarItem2Skin", "StarItem3Skin", "StarItem6Skin" ], 
        s._itemWidthList = [ 30, 40, 40, 38 ], s._style = 0, s._statListLength = 0, s._starNum = 0, 
        s._style = n, s._itemWidth = s._itemWidthList[n], s.list = [], s;
    }
    return __extends(e, t), e.prototype.init = function(t, e) {
        void 0 === t && (t = 10), void 0 === e && (e = 0), this._starNum = e, this.maxNum = t;
    }, Object.defineProperty(e.prototype, "maxNum", {
        get: function() {
            return this._statListLength;
        },
        set: function(t) {
            if (this._statListLength < t) for (var e = this._statListLength; t > e; e++) {
                var i = this.list[e];
                i || (i = new StarItem(this._styleList[this._style]), this.list.push(i)), i.x = e * this._itemWidth + 2 * e, 
                i.parent || this.addChild(i), e <= this._starNum - 1 ? i.isShow(1) : i.isShow(0);
            } else if (this._statListLength > t) for (var e = 0; e < this._statListLength; e++) {
                var i = this.list[e];
                e >= t && DisplayUtils.removeFromParent(i);
            } else for (var e = 0; e < this._statListLength; e++) {
                var i = this.list[e];
                e <= this._starNum - 1 ? i.isShow(1) : i.isShow(0);
            }
            this._statListLength = t;
        },
        enumerable: !0,
        configurable: !0
    }), Object.defineProperty(e.prototype, "starNum", {
        get: function() {
            return this._starNum;
        },
        set: function(t) {
            if (!(t > this._statListLength) && this._starNum != t) {
                t != this._starNum && this.list[t - 1] && this.list[t - 1].plauEff(), this._starNum = t;
                for (var e = 0; e < this._statListLength; e++) e <= this._starNum - 1 ? this.list[e].isShow(1) : this.list[e].isShow(0);
            }
        },
        enumerable: !0,
        configurable: !0
    }), e;
}(BaseView);

__reflect(StarListNew.prototype, "StarListNew");

window.StarListNew = StarListNew;

var WorldBossPanel = function(t) {
    function e() {
        return t.call(this) || this;
    }
    return __extends(e, t), e.prototype.init = function() {
        this.bossImage = new MovieClip(), this.bossImage.scaleX = -.8, this.bossImage.scaleY = .8, 
        this.bossImage.x = 200, this.bossImage.y = 230, this.challengeBtn.name = "worldBoss";
    }, e.prototype.open = function() {
        this.setData(), this.observe(UserBoss.ins().postWorldBoss, this.setData);
    }, e.prototype.close = function() {
        this.removeObserve(), TimerManager.ins().remove(this.updateCd, this);
    }, e.prototype.setData = function() {
        var t = UserBoss.ins(), e = GlobalConfig.ins().MonstersConfig(GlobalConfig.ins().WorldBossConfig[t.configID].id);
        this.nameTxt.text = e.name + e.level + "级", this.bossImage.playFile("" + ResPath.RES_DIR_MONSTER + MonstersConfig.realAvatar(e) + "_" + EntityAction.STAND + CharDirEnum.SOUTH_EAST, -1), 
        this.addChildAt(this.bossImage, 2), this.hpBar.maximum = t.maxHp, this.hpBar.value = t.curHp, 
        this.rankTxt.text = "", this.rankNameTxt.text = "", this.valueTxt.text = "";
        for (var i = 0; i < t.rankList.length; i++) this.rankTxt.text += i + "\n", this.rankNameTxt.text += t.getRankList(i).roleName + "\n", 
        this.valueTxt.text += t.getRankList(i).value + "\n";
        t.cd > 0 ? (this.cdTime.visible = !0, this.s = t.cd, this.updateCd(), TimerManager.ins().doTimer(1e3, this.s + 1, this.updateCd, this)) : this.cdTime.visible = !1;
    }, e.prototype.updateCd = function() {
        if (this.s <= 0) return void (this.cdTime.visible = !1);
        var t = "CD：" + this.s + "秒 <a href='event:' color='0x00FF00'><u>清除CD</u></a>";
        this.cdTime.textFlow = new egret.HtmlTextParser().parser(t), this.s--;
    }, e;
}(BaseView);

__reflect(WorldBossPanel.prototype, "WorldBossPanel");

window.WorldBossPanel = WorldBossPanel;

var ZsPanel = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.name = "转生", e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.init();
    }, e.prototype.init = function() {
        this.totalPower = BitmapNumber.ins().createNumPic(0, "8"), this.totalPower.x = 305, 
        this.totalPower.y = 100, this.addChild(this.totalPower), this.eff = new MovieClip(), 
        this.eff.playFile(ResPath.RES_DIR_EFF + "chargeff1", -1), this.eff.x = 278, this.eff.y = 500, 
        this.eff.scaleX = .7, this.termList.itemRenderer = ZsTermItemRender;
    }, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addEvents();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeEvent();
    }, e.prototype.addEvents = function() {
        this.addTouchEvent(this.getBtn, this.onTap), this.observe(UserZs.ins().postZsData, this.setData), 
        this.observe(GameLogic.ins().postLevelChange, this.setData);
    }, e.prototype.removeEvent = function() {
        this.removeTouchEvent(this.getBtn, this.onTap), this.removeObserve();
    }, e.prototype.onTap = function(t) {
        switch (t.currentTarget) {
          case this.getBtn:
            var e = UserZs.ins();
            GlobalConfig.ins().NewZhuanShengConfig[e.lv + 1];
            UserZs.ins().canUpgrade() ? UserZs.ins().sendZsUpgrade() : UserTips.ins().showTips("任务条件未达成，无法升阶");
        }
    }, e.prototype.setData = function() {
        this.curAtt.lineSpacing = 5, this.nextAtt.lineSpacing = 5;
        var t = UserZs.ins();
        this.redPoint.visible = t.canUpgrade(), this.curZsLv.text = "当前转生等级：" + t.lv + "阶";
        var e = GlobalConfig.ins().NewZhuanShengConfig[t.lv], i = e;
        this.curAtt.text = AttributeData.getAttStr(i, 1);
        var n = [];
        for (var s in AttributeData.translate) if (!isNaN(e[s])) {
            var a = new AttributeData();
            a.type = parseInt(AttributeData.translate[s]), a.value = t.lv ? e[s] : 0, n.push(a);
        }
        var o = SubRoles.ins().subRolesLen;
        this._totalPower = UserBag.getAttrPower(n) * o, BitmapNumber.ins().changeNum(this.totalPower, this._totalPower, "8");
        var r = GlobalConfig.ins().NewZhuanShengConfig[t.lv + 1];
        if (r) this.nextAtt.text = AttributeData.getAttStr(r, 1), this.termList.dataProvider = GlobalFun.formatListData(r.condition), 
        this.conditionTxt.visible = !0; else {
            var h = GlobalConfig.ins().NewZhuanShengConfig[t.lv];
            h && (this.nextAtt.text = AttributeData.getAttStr(h, 1)), this.maxTxt.visible = !0, 
            this.upTxt.visible = !1, this.nextAtt.text = "转生已达最高等级", this.conditionTxt.visible = !1, 
            this.getBtn.visible = !1, this.redPoint.visible = !1;
        }
        t.canGet() && r ? (this.addChild(this.eff), this.eff.play(-1)) : DisplayUtils.removeFromParent(this.eff);
        var l = GlobalConfig.ins().NewZhuanShengConfig[0].unlockcid;
        r ? this.unlockGuankaTxt.text = "升阶后解锁关卡" + (e.unlockcid + (t.lv > 0 ? l : 0)) + "-" + (r.unlockcid + l) + "关" : (r = GlobalConfig.ins().NewZhuanShengConfig[t.lv], 
        this.unlockGuankaTxt.text = "已解锁关卡" + (r.unlockcid + l) + "关");
    }, e;
}(BaseView);

__reflect(ZsPanel.prototype, "ZsPanel");

window.ZsPanel = ZsPanel;

var Activity2Panel1 = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "LimitGiftActSkin", e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        t.prototype.childrenCreated.call(this), this.updateData();
    }, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEvent(this.buy0, this.onTap), this.addTouchEvent(this.buy1, this.onTap), 
        this.addTouchEvent(this.buy2, this.onTap);
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        console.log("close"), this.removeTouchEvent(this.buy0, this.onTap), this.removeTouchEvent(this.buy1, this.onTap), 
        this.removeTouchEvent(this.buy2, this.onTap);
    }, e.prototype.onTap = function(t) {
        var e, i, n = this;
        switch (t.currentTarget) {
          case this.buy0:
            i = 0;
            break;

          case this.buy1:
            i = 1;
            break;

          case this.buy2:
            i = 2;
        }
        var s = Activity.ins().activityData[this.activityID];
        e = GlobalConfig.ins().ActivityType2Config[this.activityID][i];
        var a = (s.buyData[i] || 0, 1 == e.currencyType ? Actor.gold : Actor.yb), o = 1 == e.currencyType ? "铜钱" : "元宝";
        if (e.vip && UserVip.ins().lv < e.vip) UserTips.ins().showTips("vip等级不足"); else {
            var r = this.configList[i].rewards[0].id, h = GlobalConfig.ins().ItemConfig(r).type;
            if (UserBag.ins().getSurplusCount() < 1 && 0 == h) return void UserTips.ins().showTips("|C:0xff0000&T:背包已满，请清理背包|");
            a >= e.price ? WarnWin.show("确定消耗" + e.price + o + "购买特惠商品吗？", function() {
                Activity.ins().sendReward(n.activityID, i + 1);
            }, this) : UserTips.ins().showTips(o + "不足");
        }
    }, e.prototype.updateData = function() {
        var t = Activity.ins().getActivityDataById(this.activityID), e = Math.floor((DateUtils.formatMiniDateTime(t.startTime) - GameServer.serverTime) / 1e3), i = Math.floor((DateUtils.formatMiniDateTime(t.endTime) - GameServer.serverTime) / 1e3);
        if (e >= 0) this.date.text = "活动未开启"; else if (0 >= i) this.date.text = "活动已结束"; else {
            var n = Math.floor(i / 86400), s = Math.floor(i % 86400 / 3600), a = Math.floor(i % 3600 / 60);
            this.date.text = n + "天" + s + "小时" + a + "分";
        }
        this.desc.text = GlobalConfig.ins().ActivityConfig[this.activityID].desc, this.configList = GlobalConfig.ins().ActivityType2Config[this.activityID], 
        this.group_item0 && (this.group_item0.visible = !1), this.group_item1 && (this.group_item1.visible = !1), 
        this.group_item2 && (this.group_item2.visible = !1);
        for (var o = 0; o < this.configList.length; o++) {
            var r = this.configList[o], h = t.buyData[o] || 0, l = this["item" + o], u = (this["itemCount" + o], 
            this["price" + o]), p = this["desc" + o], c = this["buy" + o], g = this["redPoint" + o], d = this["group_item" + o], f = (this["imgDiscount" + o], 
            this["itemname" + o]), m = this["titleTxt" + o], v = this["vip" + o], y = this["vipTxt" + o], b = GlobalConfig.ins().ItemConfig(r.rewards[0].id);
            l && (l.data = r.rewards[0]), f && (f.text = b.name), m.text = r.vip ? "特权" : "全民特惠", 
            r.vip > 0 && (m.right = r.vip ? 434 : 460, y.source = "zv0" + r.vip + "_png"), v.visible = r.vip > 0, 
            y.visible = r.vip > 0, u && (u.setText(r.price + ""), u.setType(1 == r.currencyType ? MoneyConst.gold : MoneyConst.yuanbao)), 
            p && (p.text = "今日购买次数：" + (r.count - h)), c && (c.enabled = r.count - h > 0), g && (g.visible = Activity.ins().getisCanBuyXianGouItem(this.activityID + "", o)), 
            d && (d.visible = !0);
        }
    }, e;
}(BaseView);

__reflect(Activity2Panel1.prototype, "Activity2Panel1");

window.Activity2Panel1 = Activity2Panel1;

var Activity2Panel2 = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e._index = 0, e.skinName = "ActGiftSkin", e.List.itemRenderer = ActivityGiftItem, 
        e.Scroller.viewport = e.List, e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        t.prototype.childrenCreated.call(this);
    }, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.updateData();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
    }, e.prototype.onTap = function(t) {
        var e;
        t.currentTarget, -1 != e && this.updateData(e);
    }, e.prototype.updateData = function(t) {
        void 0 === t && (t = 0);
        var e = Activity.ins().getActivityDataById(this.activityID), i = Math.floor((DateUtils.formatMiniDateTime(e.startTime) - GameServer.serverTime) / 1e3), n = Math.floor((DateUtils.formatMiniDateTime(e.endTime) - GameServer.serverTime) / 1e3);
        i >= 0 ? this.date.text = "活动未开启" : 0 >= n ? this.date.text = "活动已结束" : this.date.text = DateUtils.getFormatBySecond(n, DateUtils.TIME_FORMAT_5, 3), 
        this.config = GlobalConfig.ins().ActivityType2Config[this.activityID][t], this._index = t;
        GlobalConfig.ins().ActivityType2Config[this.activityID];
        this.List.dataProvider = new eui.ArrayCollection(GlobalConfig.ins().ActivityType2Config[this.activityID]);
    }, e;
}(BaseView);

__reflect(Activity2Panel2.prototype, "Activity2Panel2");

window.Activity2Panel2 = Activity2Panel2;

var AdvanceFiyUpSkillItemWin = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.itemIndex = 3, e.skinName = "AdvanceSpecialSkillItemSkin", e.touchChildren = !1, 
        e.touchEnabled = !0, e;
    }
    return __extends(e, t), e.prototype.update = function(t) {
        this.redPoint.visible = !1, this.curNm.source = "advance_skillname" + (t.id + 1), 
        this.skillIcon.source = "advance_skillicon" + (t.id + 1);
        var e = t.lv >= 22 ? 20 : t.lv - 1;
        e > 0 ? (this.tipTxt.textColor = 65280, this.tipTxt.text = "", this.curLv.text = e + "级", 
        this.skillIcon.filters = []) : (this.tipTxt.textColor = 16711680, this.tipTxt.text = "飞升开启", 
        this.curLv.text = "", this.skillIcon.filters = [ ColorUtil.colorMat ]);
    }, e;
}(BaseView);

__reflect(AdvanceFiyUpSkillItemWin.prototype, "AdvanceFiyUpSkillItemWin");

window.AdvanceFiyUpSkillItemWin = AdvanceFiyUpSkillItemWin;

var AdvanceFaBaoSpecialSkillItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.itemIndex = 3, e.skinName = "AdvanceSpecialSkillItemSkin", e.touchChildren = !1, 
        e.touchEnabled = !0, e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {}, e.prototype.update = function(t) {
        var e = t.skillLev[this.itemIndex];
        if (this.skillIcon.source = "advance_fabaoskill" + this.itemIndex, AdvanceFaBao.ins().data != t) return e > 0 ? (this.curLv.text = LangManager.getLang(LangManager.commonStr18, e), 
        this.skillIcon.filters = null) : (this.curLv.text = "", this.skillIcon.filters = [ ColorUtil.colorMat ]), 
        this.tipTxt.textFlow = null, void (this.redPoint.visible = !1);
        var i = t.getSkillState(this.itemIndex), n = GlobalConfig.ins().FaBaoCommonConfig.skillOpenLevel[this.itemIndex];
        0 == i ? (this.skillIcon.filters = [ ColorUtil.colorMat ], this.tipTxt.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(LangManager.advanceStr29, n)), 
        this.redPoint.visible = !1) : 2 == i ? (this.skillIcon.filters = null, this.tipTxt.textFlow = TextFlowMaker.generateTextFlow(LangManager.advanceStr30), 
        this.redPoint.visible = !0) : (this.skillIcon.filters = null, this.tipTxt.textFlow = null, 
        this.redPoint.visible = !1), e > 0 ? this.curLv.text = LangManager.getLang(LangManager.commonStr18, e) : this.curLv.text = "", 
        this.curNm.source = "advance_txt26";
    }, e;
}(BaseView);

__reflect(AdvanceFaBaoSpecialSkillItem.prototype, "AdvanceFaBaoSpecialSkillItem");

window.AdvanceFaBaoSpecialSkillItem = AdvanceFaBaoSpecialSkillItem;

var AdvanceGangQiSpecialSkillItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.itemIndex = 3, e.skinName = "AdvanceSpecialSkillItemSkin", e.touchChildren = !1, 
        e.touchEnabled = !0, e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {}, e.prototype.update = function(t) {
        var e = t.skillLev[this.itemIndex];
        if (this.skillIcon.source = "advance_gangqiskill" + this.itemIndex, AdvanceGangQi.ins().data != t) return e > 0 ? (this.curLv.text = LangManager.getLang(LangManager.commonStr18, e), 
        this.skillIcon.filters = null) : (this.curLv.text = "", this.skillIcon.filters = [ ColorUtil.colorMat ]), 
        this.tipTxt.textFlow = null, void (this.redPoint.visible = !1);
        var i = t.getSkillState(this.itemIndex), n = GlobalConfig.ins().GangQiCommonConfig.skillOpenLevel[this.itemIndex];
        0 == i ? (this.skillIcon.filters = [ ColorUtil.colorMat ], this.tipTxt.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(LangManager.advanceStr29, n)), 
        this.redPoint.visible = !1) : 2 == i ? (this.skillIcon.filters = null, this.tipTxt.textFlow = TextFlowMaker.generateTextFlow(LangManager.advanceStr30), 
        this.redPoint.visible = !0) : (this.skillIcon.filters = null, this.tipTxt.textFlow = null, 
        this.redPoint.visible = !1), e > 0 ? this.curLv.text = LangManager.getLang(LangManager.commonStr18, e) : this.curLv.text = "", 
        this.curNm.source = "advance_txt25";
    }, e;
}(BaseView);

__reflect(AdvanceGangQiSpecialSkillItem.prototype, "AdvanceGangQiSpecialSkillItem");

window.AdvanceGangQiSpecialSkillItem = AdvanceGangQiSpecialSkillItem;

var AdvanceJianTongSpecialSkillItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.itemIndex = 3, e.skinName = "AdvanceSpecialSkillItemSkin", e.touchChildren = !1, 
        e.touchEnabled = !0, e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {}, e.prototype.update = function(t) {
        var e = t.skillLev[this.itemIndex];
        if (this.skillIcon.source = "advance_jiantongskill" + this.itemIndex, AdvanceJianTong.ins().data != t) return e > 0 ? (this.curLv.text = LangManager.getLang(LangManager.commonStr18, e), 
        this.skillIcon.filters = null) : (this.curLv.text = "", this.skillIcon.filters = [ ColorUtil.colorMat ]), 
        this.tipTxt.textFlow = null, void (this.redPoint.visible = !1);
        var i = t.getSkillState(this.itemIndex), n = GlobalConfig.ins().JianTongCommonConfig.skillOpenLevel[this.itemIndex];
        0 == i ? (this.skillIcon.filters = [ ColorUtil.colorMat ], this.tipTxt.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(LangManager.advanceStr29, n)), 
        this.redPoint.visible = !1) : 2 == i ? (this.skillIcon.filters = null, this.tipTxt.textFlow = TextFlowMaker.generateTextFlow(LangManager.advanceStr30), 
        this.redPoint.visible = !0) : (this.skillIcon.filters = null, this.tipTxt.textFlow = null, 
        this.redPoint.visible = !1), e > 0 ? this.curLv.text = LangManager.getLang(LangManager.commonStr18, e) : this.curLv.text = "", 
        this.curNm.source = "advance_txt24";
    }, e;
}(BaseView);

__reflect(AdvanceJianTongSpecialSkillItem.prototype, "AdvanceJianTongSpecialSkillItem");

window.AdvanceJianTongSpecialSkillItem = AdvanceJianTongSpecialSkillItem;

var AdvanceMoShenSpecialSkillItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.itemIndex = 3, e.skinName = "AdvanceSpecialSkillItemSkin", e.touchChildren = !1, 
        e.touchEnabled = !0, e;
    }
    return __extends(e, t), e.prototype.update = function(t) {
        var e = t.skillLev[this.itemIndex];
        if (this.skillIcon.source = "advance_moshenskill" + this.itemIndex, AdvanceMoShen.ins().data != t) return e > 0 ? (this.curLv.text = LangManager.getLang(LangManager.commonStr18, e), 
        this.skillIcon.filters = null) : (this.curLv.text = "", this.skillIcon.filters = [ ColorUtil.colorMat ]), 
        this.tipTxt.textFlow = null, void (this.redPoint.visible = !1);
        var i = t.getSkillState(this.itemIndex), n = GlobalConfig.ins().MoShenCommonConfig.skillOpenLevel[this.itemIndex];
        0 == i ? (this.skillIcon.filters = [ ColorUtil.colorMat ], this.tipTxt.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(LangManager.advanceStr29, n)), 
        this.redPoint.visible = !1) : 2 == i ? (this.skillIcon.filters = null, this.tipTxt.textFlow = TextFlowMaker.generateTextFlow(LangManager.advanceStr30), 
        this.redPoint.visible = !0) : (this.skillIcon.filters = null, this.tipTxt.textFlow = null, 
        this.redPoint.visible = !1), e > 0 ? this.curLv.text = LangManager.getLang(LangManager.commonStr18, e) : this.curLv.text = "", 
        this.curNm.source = "advance_txt27";
    }, e;
}(BaseView);

__reflect(AdvanceMoShenSpecialSkillItem.prototype, "AdvanceMoShenSpecialSkillItem");

window.AdvanceMoShenSpecialSkillItem = AdvanceMoShenSpecialSkillItem;

var AnimaWarWin = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.index = 1, e.btn = !0, e.curIndex = 1, e.skinName = "AnimaWarSkin", e.name = "灵契", 
        e.totalPower || (e.totalPower = BitmapNumber.ins().createNumPic(0, BitmapNumber.numType0, 10), 
        e.powerContainer.addChild(e.totalPower), BitmapNumber.ins().changeNum(e.totalPower, 0, BitmapNumber.numType0, 2)), 
        e.midAttr.visible = e.curAttr.visible = !1, e.lvTxt1.visible = e.lvTxt2.visible = !1, 
        e.kong.visible = !1, e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEndEvent(this.replaceBtn, this.onClick), this.addTouchEndEvent(this.previewBtn, this.onClick), 
        this.addTouchEndEvent(this.activateBtn, this.onClick), this.addTouchEndEvent(this.upBtn, this.onClick), 
        this.addTouchEndEvent(this.itemG, this.onClick);
        for (var i = 0; 10 > i; i++) {
            var n = this["item" + i];
            this.addTouchEndEvent(n, this.onClick);
        }
        this.observe(Anima.ins().postAnimaData, this.upData), this.observe(Anima.ins().postPutOn, this.upData), 
        this.observe(Anima.ins().postUp, this.upData), Anima.ins().sendGetData(), this.btn = !0;
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeEvents(), this.removeObserve(), this.clearAnimaItem();
    }, e.prototype.upData = function() {
        this.data = AnimaData.ins(), this.numTxt.text = "" + Actor.lingli;
        for (var t = 0; t < this.data.LingQiLen; t++) this.setSkinPart("item" + t, new AnimaItemWin()), 
        this["item" + t].data = this.data.LingQiList[t];
        if (BitmapNumber.ins().changeNum(this.totalPower, this.data.getPower(), BitmapNumber.numType0, 2), 
        this.btn) for (var t = 0; t < this.data.LingQiLen; t++) {
            var e = this.data.LingQiList[t].id, i = this.data.LingQiList[t].index - 1;
            if (0 != e && -1 != e) return this.btn = !1, this.attr(e), this.setSelected(!0, i), 
            void (this.curIndex = this.data.LingQiList[t].index);
        }
        var n = this.data.LingQiList[this.curIndex - 1].id;
        0 != n && -1 != n ? this.attr(n) : (this.kong.visible = !0, this.leftCon.visible = !1, 
        this.rightCon.visible = !1);
    }, e.prototype.onClick = function(t) {
        switch (t.target) {
          case this.replaceBtn:
            if (this.data.LingQiList && -1 != this.data.LingQiList[this.curIndex - 1].id) {
                var e = !1;
                0 == this.data.LingQiList[this.curIndex - 1].id && (e = !0), ViewManager.ins().open(AnimaBagWin, this.curIndex, e);
            } else UserTips.ins().showTips("|C:0xff0000&T:槽位未开启|");
            break;

          case this.activateBtn:
            ViewManager.ins().open(AnimaActivatWin);
            break;

          case this.upBtn:
            Anima.ins().sendUp(this.curIndex);
            break;

          case this.previewBtn:
            ViewManager.ins().open(AnimaViewWin);
        }
        if (t.target.parent instanceof AnimaItemWin) {
            var i = t.target.parent.id;
            this.curIndex = t.target.parent.index, 0 == i ? ViewManager.ins().open(AnimaBagWin, this.curIndex, !0) : -1 == i && ViewManager.ins().open(AnimaOpenWay, this.curIndex), 
            0 != i && -1 != i ? this.attr(i) : (this.kong.visible = !0, this.leftCon.visible = !1, 
            this.rightCon.visible = !1, this.numTxt.text = "" + Actor.lingli);
            var n = this.curIndex - 1;
            this.setSelected(!0, n);
        }
    }, e.prototype.setSelected = function(t, e) {
        for (var i = 0; 10 > i; i++) {
            var n = void 0;
            n = this["item" + i], n.currentState = "up";
        }
        this["item" + e].currentState = t ? "down" : "up";
    }, e.prototype.attr = function(t) {
        this.kong.visible = !1, this.leftCon.visible = this.rightCon.visible = !0, this.midAttr.visible = !0;
        var e = GlobalConfig.ins().LingqiDetailConfig[t], i = GlobalConfig.ins().LingqiDetailConfig[t + 1];
        if (e) {
            this.midAttr.text = AttributeData.getAttStr(e.attr, 4, 1, ": ");
            var n = "";
            n = Actor.lingli >= e.levelup ? "|C:0x34FF25&T:" + Actor.lingli + "|/" + e.levelup : "|C:0xff0000&T:" + Actor.lingli + "|/" + e.levelup, 
            0 == e.levelup ? (this.lvTxt1.text = "(已满级)", this.leftCon.x = 175, this.rightCon.visible = !1, 
            this.lvTxt1.visible = !0, this.numTxt.text = "最高等级") : (this.lvTxt1.visible = !1, 
            this.rightCon.visible = !0, this.leftCon.x = 70, this.lvTxt1.text = "Lv." + e.level, 
            this.numTxt.textFlow = TextFlowMaker.generateTextFlow(n));
        }
        i && (this.curAttr.visible = this.rightCon.visible = !0, this.lvTxt2.text = "Lv." + i.level, 
        this.curAttr.text = AttributeData.getAttStr(i.attr, 4, 1, ": "));
    }, e.prototype.clearAnimaItem = function() {
        for (var t = 0; 10 > t; t++) {
            var e = this["item" + t];
            null != e.lingqiMc && (e.lingqiMc.stop(), DisplayUtils.removeFromParent(e.lingqiMc)), 
            null != e.effect && (e.effect.stop(), DisplayUtils.removeFromParent(e.effect));
        }
    }, e;
}(BaseView);

__reflect(AnimaWarWin.prototype, "AnimaWarWin");

window.AnimaWarWin = AnimaWarWin;

var AnimaXunLingWin = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.type = 1, e.skinName = "AnimaXunLingSkin", e.name = "寻灵", e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.init();
    }, e.prototype.init = function() {
        this.list.itemRenderer = AnimaListRendererWin, this.list.dataProvider = new eui.ArrayCollection(), 
        this.timeTxt.visible = !1;
    }, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEndEvent(this.buy1, this.onClick), this.addTouchEndEvent(this.buy10, this.onClick), 
        this.addTouchEndEvent(this.buy50, this.onClick), this.addTouchEvent(this.storeBtn, this.onClick), 
        this.addTouchEvent(this.helpBtn, this.onClick), this.observe(Anima.ins().postXunLing, this.upOpenData), 
        this.observe(Anima.ins().postOpenXunLing, this.upData), this.observe(Anima.ins().postOpenStore, this.setRedPoint), 
        Anima.ins().sendOpenXunLing(), this.numTxt1.text = "" + GlobalConfig.ins().LingqiCommonConfig.oneCost, 
        this.numTxt10.text = "" + GlobalConfig.ins().LingqiCommonConfig.tenCost, this.numTxt50.text = "" + GlobalConfig.ins().LingqiCommonConfig.fiftyCost;
        for (var i = GlobalConfig.ins().LingqiTreasureShowConfig, n = 0; 12 > n; n++) this["item" + n] && (this.setSkinPart("item" + n, new AnimaXunLingItemBase()), 
        this["item" + n].data = i[n + 1].id);
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeEvents(), this.removeObserve(), TimerManager.ins().removeAll(this);
    }, e.prototype.upData = function() {
        var t = AnimaData.ins();
        this.list.dataProvider = new eui.ArrayCollection(t.recoedList), this.freeG.visible = t.oneNum > 0 ? !0 : !1, 
        this.evenG.visible = t.tenNum > 0 ? !0 : !1, this.oneG.visible = t.oneNum <= 0 ? !0 : !1, 
        this.tenG.visible = t.tenNum <= 0 ? !0 : !1, this.freeTxt.text = "" + t.oneNum, 
        this.evenTxt.text = "" + t.tenNum, t.totalTime > 0 ? (this.timeTxt.visible = !0, 
        TimerManager.ins().doTimer(1e3, 0, this.updateTime, this), this.updateTime()) : this.timeTxt.visible = !1, 
        t.freeNum > 0 ? (this.atG.visible = !0, this.freeG.visible = this.oneG.visible = !1) : (this.atG.visible = !1, 
        this.freeG.visible = t.oneNum > 0 ? !0 : !1, this.oneG.visible = t.oneNum <= 0 ? !0 : !1);
    }, e.prototype.upOpenData = function() {
        var t = AnimaData.ins();
        ViewManager.ins().open(AnimaResultWin, this.type, t.xunLingArr);
    }, e.prototype.onClick = function(t) {
        switch (t.target) {
          case this.buy1:
            this.type = 1, Anima.ins().sendXunLing(1);
            break;

          case this.buy10:
            this.type = 2, Anima.ins().sendXunLing(2);
            break;

          case this.buy50:
            this.type = 3, Anima.ins().sendXunLing(3);
            break;

          case this.storeBtn:
            ViewManager.ins().open(HuntStoreWin, 1);
            break;

          case this.helpBtn:
            ViewManager.ins().open(HuntHelpWin, 1);
        }
    }, e.prototype.setRedPoint = function() {
        this.storeRedPoint.visible = AnimaData.ins().storeNum > 0;
    }, e.prototype.updateTime = function() {
        var t = AnimaData.ins(), e = Math.floor((t.totalTime - egret.getTimer()) / 1e3), i = DateUtils.getFormatBySecond(e, DateUtils.TIME_FORMAT_1);
        this.timeTxt.text = "(" + i + "免费)", this.timeTxt.visible = !0, this.setData(), 
        this.atG.visible = !1, 0 >= e && (TimerManager.ins().remove(this.updateTime, this), 
        this.timeTxt.visible = this.oneG.visible = !1, this.atG.visible = !0, this.freeG.visible = !1);
    }, e.prototype.setData = function() {
        var t = AnimaData.ins();
        this.freeG.visible = t.oneNum > 0 ? !0 : !1, this.evenG.visible = t.tenNum > 0 ? !0 : !1, 
        this.oneG.visible = t.oneNum <= 0 ? !0 : !1, this.tenG.visible = t.tenNum <= 0 ? !0 : !1;
    }, e;
}(BaseView);

__reflect(AnimaXunLingWin.prototype, "AnimaXunLingWin");

window.AnimaXunLingWin = AnimaXunLingWin;

var ArouseFBPanel = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "ArouseFBSkin", e.list.itemRenderer = ArouseFBPanelItem, e.list.dataProvider = new eui.ArrayCollection(), 
        e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.observe(Arouse.ins().postArouseFBData, this.upData), this.addTouchEvent(this.list, this.onTop), 
        this.upData(), Arouse.ins().sendArouseFBData();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeEvents(), this.removeObserve();
    }, e.prototype.upData = function() {
        var t = ArouseFBData.ins();
        if (t) {
            var e = GlobalConfig.ins().FQZZFubenConfig[Arouse.order];
            e && (this.list.dataProvider = new eui.ArrayCollection(e));
        }
    }, e.prototype.onTop = function(t) {
        t.target instanceof eui.Button && t.target.parent instanceof ArouseFBPanelItem && GameMap.canEnterFb() && Arouse.ins().sendChallengeArouseFB(t.target.parent.index);
    }, e;
}(BaseView);

__reflect(ArouseFBPanel.prototype, "ArouseFBPanel");

window.ArouseFBPanel = ArouseFBPanel;

var ArouseGiftPanel = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "ArouseGiftSkin", e.listData = new eui.ArrayCollection(), e.list.itemRenderer = ArouseGiftPanelItem, 
        e.list.dataProvider = e.listData, e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.observe(Arouse.ins().postArousrGiftData, this.upData), this.addTouchEvent(this.list, this.onTop), 
        Arouse.ins().sendArouseGiftData();
    }, e.prototype.close = function() {
        for (var t = [], i = 0; i < arguments.length; i++) t[i] = arguments[i];
        this.removeEvents(), this.removeObserve(), ArouseGiftData.ins().getRedPoint() && (e.canGet = !0);
    }, e.prototype.upData = function() {
        var t = GlobalConfig.ins().FQZZLibaoConfig[Arouse.order];
        t && (this.listData.replaceAll(t), this.list.dataProvider = this.listData);
    }, e.prototype.onTop = function(t) {
        t.target instanceof eui.Button && t.target.parent instanceof ArouseGiftPanelItem && Arouse.ins().sendGetAroustGift(t.target.parent.id);
    }, e;
}(BaseView);

__reflect(ArouseGiftPanel.prototype, "ArouseGiftPanel");

window.ArouseGiftPanel = ArouseGiftPanel;

var ArouseTaskPanel = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "ArouseTaskSkin", e.listData = new eui.ArrayCollection(), e.list.itemRenderer = ArouseTaskPanelItem, 
        e.list.dataProvider = e.listData, e.totalLevel = BitmapNumber.ins().createNumPic(0, "num16"), 
        e.levelContainer.addChild(e.totalLevel), e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.observe(WorldLevel.ins().postWorldLevelData, this.upWorldLevel), this.observe(Arouse.ins().postArousrTaskData, this.upData), 
        this.addTouchEvent(this.list, this.onTop), this.upData(), this.upWorldLevel(), Arouse.ins().sendArouseTaskData();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeEvents(), this.removeObserve();
    }, e.prototype.upData = function() {
        var t = GlobalConfig.ins().FQZZTaskConfig[Arouse.order];
        if (t) {
            for (var e = [], i = 0; i < t.length; i++) e.push(t[i]);
            e.sort(this.sortData), this.listData.replaceAll(e), this.list.dataProvider = this.listData;
        }
    }, e.prototype.upWorldLevel = function() {
        var t = WorldLevelData.ins();
        if (t.worldLv) {
            BitmapNumber.ins().changeNum(this.totalLevel, t.worldLv, "num16", 5);
            var e = 200 * UserZs.ins().lv + Actor.level, i = e > t.maxLv ? UserZs.ins().lv : Math.floor(t.maxLv / 200), n = e > t.maxLv ? Actor.level : t.maxLv % 200;
            this.maxLvTxt.text = i > 0 ? i + "转" + n + "级" : n + "级";
        }
    }, e.prototype.onTop = function(t) {
        if (t.target instanceof eui.Button && t.target.parent instanceof ArouseTaskPanelItem) {
            var e = t.target.parent.id, i = t.target.parent.status;
            if (0 == i) {
                if (!GlobalConfig.ins().FQZZTaskConfig[Arouse.order]) return;
                var n = GlobalConfig.ins().FQZZTaskConfig[Arouse.order][e - 1];
                if (!n) return;
                ViewManager.ins().open(n.targetTask.win, n.targetTask.tab);
            }
            1 == i && Arouse.ins().sendGetAroustTask(e);
        }
    }, e.prototype.sortData = function(t, e) {
        var i = ArouseTaskData.ins().taskList, n = 2 == i[t.idxTsk - 1].status, s = 2 == i[e.idxTsk - 1].status;
        return n && s || !n && !s ? t.idxTsk > e.idxTsk ? 1 : t.idxTsk < e.idxTsk ? -1 : 0 : n ? 1 : -1;
    }, e;
}(BaseView);

__reflect(ArouseTaskPanel.prototype, "ArouseTaskPanel");

window.ArouseTaskPanel = ArouseTaskPanel;

var ArtifactWin = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e._itemWidth = 88, e._datas = [], e.btnState = 0, e.skinName = "ArtifactsSkin", 
        e.name = "帝兵", e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.menuList.dataProvider = null, this.list.itemRenderer = ArtifactConditionItemRenderer, 
        this.menuList.itemRenderer = ArtifactItemRenderer, this.menuList.selectedIndex = 0, 
        this.costName1.touchEnabled = !0, this.getChildIndex(this.skillDescCon), this.power = BitmapNumber.ins().createNumPic(999999, BitmapNumber.numType0, 10), 
        this.powerCon.addChild(this.power), this.eff = new MovieClip(), this.eff.playFile(ResPath.getUIEffectPath(UiEffectType.Type22), -1), 
        this.eff.x = this.rank.width >> 1, this.eff.y = this.rank.height >> 1, this.eff.scaleX = 1.1, 
        this.artifactLook = new MovieClip(), this.icon.addChild(this.artifactLook), this.getItemBtn.visible = !1, 
        this.artifactLook.touchEnabled = !1;
    }, e.prototype.iconMovie = function() {
        var t = this, e = egret.Tween.get(this.icon), i = this.icon.y + 20, n = this.icon.y;
        e.to({
            y: i
        }, 1500).to({
            y: n
        }, 1500).call(function() {
            t.iconMovie();
        });
    }, e.prototype.removeIconMovie = function() {
        egret.Tween.removeTweens(this.icon);
    }, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addChangeEvent(this.menuList, this.onClickMenu), this.addTouchEvent(this.leftBtn, this.onTouchBtn), 
        this.addTouchEvent(this.rightBtn, this.onTouchBtn), this.addTouchEvent(this.rank, this.onRank), 
        this.addChangeEvent(this.menuScroller, this.onChange), this.addTouchEvent(this.costName1, this.onTouchBtn), 
        this.addTouchEvent(this.getItemBtn, this.onTouchGetItem), this.observe(Artifact.ins().postArtifactInit, this.updateView), 
        this.observe(Artifact.ins().postArtifactUpdate, this.updataItem), this.menuList.selectedIndex = 0, 
        this.menuList.scrollH = 0, this.updateView(), this.onChange();
    }, e.prototype.destructor = function() {
        for (var t = 0; t < this.list.numElements; t++) {
            var e = this.list.getElementAt(t);
            e && e.destruct();
        }
        for (var t = 0; t < this.menuList.numElements; t++) {
            var i = this.menuList.getElementAt(t);
            i && i.destruct();
        }
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.menuList.removeEventListener(egret.Event.CHANGE, this.onClickMenu, this), this.removeTouchEvent(this.leftBtn, this.onTouchBtn), 
        this.removeTouchEvent(this.rightBtn, this.onTouchBtn), this.removeTouchEvent(this.rank, this.onRank), 
        this.menuScroller.removeEventListener(egret.Event.CHANGE, this.onChange, this), 
        this.costName1.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.onTouchBtn, this), 
        DisplayUtils.removeFromParent(this.eff), this.removeObserve();
    }, e.prototype.updateView = function() {
        this.updateMenuList(), this.updateDetail();
    }, e.prototype.updataItem = function() {
        for (var t, e = 0; e < this.menuList.numChildren; e++) {
            var i = this.menuList.getChildAt(e);
            t = Artifact.ins().getDataById(i.data.id), i.data = t;
        }
        this.updateDetail();
    }, e.prototype.updateMenuList = function() {
        this._datas = [];
        for (var t in Artifact.ins().artifacts) this._datas.push(Artifact.ins().getDataById(parseInt(t)));
        this.menuList.dataProvider = new eui.ArrayCollection(this._datas), this._datas[0] && (this.curId = this._datas[0].id);
    }, e.prototype.updateDetail = function() {
        var t = Artifact.ins().getDataById(this.curId), e = GlobalConfig.ins().ArtifactsConfig[this.curId];
        if (e) {
            if (this.artifactLook.playFile(ResPath.getShenqiPath(this.curId), -1), this.artifactName.text = e.artifactsName, 
            this.tip.visible = !1, this.rank.visible = !0, e.skillDes && e.skillDes.length > 0 ? (this.skillDescCon.visible = !0, 
            this.skillDesc.textFlow = TextFlowMaker.generateTextFlow(e.skillDes)) : this.skillDescCon.visible = !1, 
            DisplayUtils.removeFromParent(this.eff), 0 == t.rank) {
                var i = GlobalConfig.ins().ArtifactsRankConfig[this.curId][0];
                if (this.rank.label = "激 活", this.curAttr.visible = !1, this.curKey.visible = !1, 
                this.curBG.visible = !1, this.nextGroup.visible = !1, this.nextKey.visible = !1, 
                this.nextBG.visible = !1, this.midAttr.visible = !0, this.midKey.visible = !1, this.midBG.visible = !1, 
                this.getItemBtn.visible = !1, this.lvTxt1.text = "Lv." + i.rank, this.midAttr.text = AttributeData.getAttStr(i.attrs, 0, 1, "："), 
                BitmapNumber.ins().changeNum(this.power, Math.floor(UserBag.getAttrPower(i.attrs)) * SubRoles.ins().subRolesLen, BitmapNumber.numType0, 2), 
                0 == e.activationAchievementIds.length) {
                    var n = GlobalConfig.ins().ItemConfig(e.activationItem.id);
                    this.costName.text = "消耗" + n.name + "：";
                    var s = UserBag.ins().getBagGoodsCountById(0, e.activationItem.id);
                    this.curNum.text = s + "", this.needNum.text = "/" + e.activationItem.count, s >= e.activationItem.count ? (this.rank.addChild(this.eff), 
                    this.curNum.textColor = 65280, this.btnState = 0) : (this.curNum.textColor = 16711680, 
                    this.btnState = 0), e.gainWay.length > 0 && s < e.activationItem.count ? (this.costName0.visible = this.costName1.visible = !0, 
                    this.costName1.textFlow = new egret.HtmlTextParser().parser("<u>" + e.gainWay[0][0] + "</u>")) : this.costName0.visible = this.costName1.visible = !1, 
                    this.costName.visible = !0, this.curNum.visible = !0, this.needNum.visible = !0, 
                    this.list.visible = !1;
                } else this.list.dataProvider = new eui.ArrayCollection(e.activationAchievementIds), 
                this.costName.visible = !1, this.curNum.visible = !1, this.needNum.visible = !1, 
                this.costBG.visible = !1, this.list.visible = !0;
            } else {
                var i = GlobalConfig.ins().ArtifactsRankConfig[this.curId][t.rank - 1];
                if (this.rank.label = "升 阶", this.list.visible = !1, BitmapNumber.ins().changeNum(this.power, Math.floor(UserBag.getAttrPower(i.attrs)) * SubRoles.ins().subRolesLen, BitmapNumber.numType0, 2), 
                t.rank == GlobalConfig.ins().ArtifactsRankConfig[this.curId].length) this.curAttr.visible = !1, 
                this.curKey.visible = !1, this.curBG.visible = !1, this.nextGroup.visible = !1, 
                this.nextKey.visible = !1, this.nextBG.visible = !1, this.midAttr.visible = !0, 
                this.midKey.visible = !0, this.midBG.visible = !0, this.tip.visible = !0, this.rank.visible = !1, 
                this.costName.visible = !1, this.curNum.visible = !1, this.needNum.visible = !1, 
                this.costBG.visible = !1, this.costName0.visible = this.costName1.visible = !1, 
                this.midAttr.text = AttributeData.getAttStr(i.attrs, 0, 1, "："), this.lvTxt1.text = "Lv." + i.rank; else {
                    this.curAttr.visible = !0, this.curKey.visible = !1, this.curBG.visible = !1, this.nextGroup.visible = !0, 
                    this.nextKey.visible = !0, this.nextBG.visible = !0, this.midAttr.visible = !1, 
                    this.midKey.visible = !1, this.midBG.visible = !1;
                    var a = t.rank + 1, o = GlobalConfig.ins().ArtifactsRankConfig[this.curId][a - 1];
                    this.curAttr.text = AttributeData.getAttStr(i.attrs, 0, 1, "："), this.nextAttr.text = AttributeData.getAttStr(o.attrs, 0, 1, "："), 
                    this.lvTxt1.text = "Lv." + i.rank, this.lvTxt2.text = "Lv." + o.rank;
                    var n = GlobalConfig.ins().ItemConfig(i.rankUpItem.id);
                    this.costName.text = "消耗" + n.name + "：";
                    var s = UserBag.ins().getBagGoodsCountById(0, i.rankUpItem.id);
                    this.curNum.text = s + "", this.needNum.text = "/" + i.rankUpItem.count, s >= i.rankUpItem.count ? (this.rank.addChild(this.eff), 
                    this.curNum.textColor = 65280, this.btnState = 0) : (this.btnState = 1, this.curNum.textColor = 16711680), 
                    this.costName0.visible = this.costName1.visible = !1, this.getItemBtn.visible = !0, 
                    this.getItemBtn.labelDisplay.text = "获取道具", this.costName.visible = !0, this.curNum.visible = !0, 
                    this.needNum.visible = !0;
                }
            }
            LocationProperty.isCloseWxgameIos() && (this.getItemBtn.visible = !1, this.costName0.visible = this.costName1.visible = !1);
        }
    }, e.prototype.onTouchGetItem = function(t) {
        UserWarn.ins().setBuyGoodsWarn(GlobalConfig.ins().ItemConfig(200016).id, 1);
    }, e.prototype.onTouchBtn = function(t) {
        var e = 4 * this._itemWidth;
        switch (t.target) {
          case this.leftBtn:
            this.menuList.scrollH <= e ? this.menuList.scrollH = 0 : this.menuList.scrollH -= e;
            break;

          case this.rightBtn:
            this.menuList.scrollH > (this.menuList.dataProvider.length - 8) * this._itemWidth + 2 ? this.menuList.scrollH = (this.menuList.dataProvider.length - 4) * this._itemWidth + 2 : this.menuList.scrollH += e;
            break;

          case this.costName1:
            var i = GlobalConfig.ins().ArtifactsConfig[this.curId];
            i.gainWay[0][1][0] && ViewManager.ins().open(i.gainWay[0][1][0], [ i.gainWay[0][1][1] ]);
        }
        this.onChange();
    }, e.prototype.onClickMenu = function(t) {
        this.curId = this._datas[t.currentTarget.selectedIndex].id, this.updateDetail();
    }, e.prototype.onRank = function(t) {
        0 == this.btnState && Artifact.ins().sendRank(this.curId), 1 == this.btnState && UserWarn.ins().setBuyGoodsWarn(GlobalConfig.ins().ItemConfig(200016).id, 1);
    }, e.prototype.onChange = function() {}, e;
}(BaseView);

__reflect(ArtifactWin.prototype, "ArtifactWin"), ViewManager.ins().reg(ArtifactWin, LayerManager.UI_Main);

window.ArtifactWin = ArtifactWin;

var NewShenqiWin = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e._itemWidth = 88, e._datas = [], e.btnState = 0, e.skinName = "ShenqiSkin", 
        e.name = "神器", e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.menuList.dataProvider = null, this.list.itemRenderer = NewShenqiConditionItemRenderer, 
        this.menuList.itemRenderer = NewShenqiItemRenderer, this.menuList.selectedIndex = 0, 
        this.costName1.touchEnabled = !0, this.getChildIndex(this.skillDescCon), this.power = BitmapNumber.ins().createNumPic(999999, BitmapNumber.numType0, 10), 
        this.powerCon.addChild(this.power), this.eff = new MovieClip(), this.eff.playFile(ResPath.getUIEffectPath(UiEffectType.Type22), -1), 
        this.eff.x = this.rank.width >> 1, this.eff.y = this.rank.height >> 1, this.eff.scaleX = 1.1, 
        this.artifactLook = new MovieClip(), this.icon.addChild(this.artifactLook), this.getItemBtn.visible = !1, 
        this.artifactLook.touchEnabled = !1;
    }, e.prototype.iconMovie = function() {
        var t = this, e = egret.Tween.get(this.icon), i = this.icon.y + 20, n = this.icon.y;
        e.to({
            y: i
        }, 1500).to({
            y: n
        }, 1500).call(function() {
            t.iconMovie();
        });
    }, e.prototype.removeIconMovie = function() {
        egret.Tween.removeTweens(this.icon);
    }, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addChangeEvent(this.menuList, this.onClickMenu), this.addTouchEvent(this.leftBtn, this.onTouchBtn), 
        this.addTouchEvent(this.rightBtn, this.onTouchBtn), this.addTouchEvent(this.rank, this.onRank), 
        this.addChangeEvent(this.menuScroller, this.onChange), this.addTouchEvent(this.costName1, this.onTouchBtn), 
        this.addTouchEvent(this.getItemBtn, this.onTouchGetItem), this.observe(Artifact.ins().postNewShenqiInit, this.updateView), 
        this.observe(Artifact.ins().postNewShenqiUpdate, this.updataItem), this.menuList.selectedIndex = 0, 
        this.menuList.scrollH = 0, this.updateView(), this.onChange();
    }, e.prototype.destructor = function() {
        for (var t = 0; t < this.list.numElements; t++) {
            var e = this.list.getElementAt(t);
            e && e.destruct();
        }
        for (var t = 0; t < this.menuList.numElements; t++) {
            var i = this.menuList.getElementAt(t);
            i && i.destruct();
        }
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.menuList.removeEventListener(egret.Event.CHANGE, this.onClickMenu, this), this.removeTouchEvent(this.leftBtn, this.onTouchBtn), 
        this.removeTouchEvent(this.rightBtn, this.onTouchBtn), this.removeTouchEvent(this.rank, this.onRank), 
        this.menuScroller.removeEventListener(egret.Event.CHANGE, this.onChange, this), 
        this.costName1.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.onTouchBtn, this), 
        DisplayUtils.removeFromParent(this.eff), this.removeObserve();
    }, e.prototype.updateView = function() {
        this.updateMenuList(), this.updateDetail();
    }, e.prototype.updataItem = function() {
        for (var t, e = 0; e < this.menuList.numChildren; e++) {
            var i = this.menuList.getChildAt(e);
            t = Artifact.ins().getNewShenqiById(i.data.id), i.data = t;
        }
        this.updateDetail();
    }, e.prototype.updateMenuList = function() {
        this._datas = [];
        for (var t in Artifact.ins().newShenqi) this._datas.push(Artifact.ins().getNewShenqiById(parseInt(t)));
        this.menuList.dataProvider = new eui.ArrayCollection(this._datas), this.curId = this._datas[0].id;
    }, e.prototype.updateDetail = function() {
        var t = Artifact.ins().getNewShenqiById(this.curId), e = GlobalConfig.ins().NewShenqiConfig[this.curId];
        if (this.artifactLook.playFile(ResPath.getNewShenqiPath(this.curId), -1), this.artifactName.text = e.artifactsName, 
        this.tip.visible = !1, this.rank.visible = !0, e.skillDes && e.skillDes.length > 0 ? (this.skillDescCon.visible = !0, 
        this.skillDesc.textFlow = TextFlowMaker.generateTextFlow(e.skillDes)) : this.skillDescCon.visible = !1, 
        DisplayUtils.removeFromParent(this.eff), 0 == t.rank) {
            var i = GlobalConfig.ins().NewShenqiRankConfig[this.curId][0];
            if (this.rank.label = "激 活", this.curAttr.visible = !1, this.curKey.visible = !1, 
            this.curBG.visible = !1, this.nextImg.visible = !1, this.nextGroup.visible = !1, 
            this.nextKey.visible = !1, this.nextBG.visible = !1, this.midAttr.visible = !0, 
            this.midKey.visible = !1, this.midBG.visible = !1, this.getItemBtn.visible = !1, 
            this.preGroup.x = 186, this.lvTxt1.text = "Lv." + i.rank, this.midAttr.text = AttributeData.getAttStr(i.attrs, 0, 1, "："), 
            BitmapNumber.ins().changeNum(this.power, Math.floor(UserBag.getAttrPower(i.attrs)) * SubRoles.ins().subRolesLen, BitmapNumber.numType0, 2), 
            0 == e.activationAchievementIds.length) {
                var n = GlobalConfig.ins().ItemConfig(e.activationItem.id);
                this.costName.text = "消耗" + n.name + "：";
                var s = UserBag.ins().getBagGoodsCountById(0, e.activationItem.id);
                this.curNum.text = s + "", this.needNum.text = "/" + e.activationItem.count, s >= e.activationItem.count ? (this.rank.addChild(this.eff), 
                this.curNum.textColor = 65280, this.btnState = 0) : (this.curNum.textColor = 16711680, 
                this.btnState = 0), e.gainWay.length > 0 && s < e.activationItem.count ? (this.costName0.visible = this.costName1.visible = !0, 
                this.costName1.textFlow = new egret.HtmlTextParser().parser("<u>" + e.gainWay[0][0] + "</u>")) : this.costName0.visible = this.costName1.visible = !1, 
                this.costName.visible = !0, this.curNum.visible = !0, this.needNum.visible = !0, 
                this.list.visible = !1;
            } else this.list.dataProvider = new eui.ArrayCollection(e.activationAchievementIds), 
            this.costName.visible = !1, this.curNum.visible = !1, this.needNum.visible = !1, 
            this.costBG.visible = !1, this.list.visible = !0;
        } else {
            var i = GlobalConfig.ins().NewShenqiRankConfig[this.curId][t.rank - 1];
            if (this.rank.label = "升 阶", this.list.visible = !1, BitmapNumber.ins().changeNum(this.power, Math.floor(UserBag.getAttrPower(i.attrs)) * SubRoles.ins().subRolesLen, BitmapNumber.numType0, 2), 
            t.rank == GlobalConfig.ins().NewShenqiRankConfig[this.curId].length) this.curAttr.visible = !1, 
            this.curKey.visible = !1, this.curBG.visible = !1, this.nextGroup.visible = !1, 
            this.nextKey.visible = !1, this.nextBG.visible = !1, this.midAttr.visible = !0, 
            this.midKey.visible = !0, this.midBG.visible = !0, this.nextImg.visible = !1, this.preGroup.x = 186, 
            this.getItemBtn.visible = !1, this.tip.visible = !0, this.rank.visible = !1, this.costName.visible = !1, 
            this.curNum.visible = !1, this.needNum.visible = !1, this.costBG.visible = !1, this.costName0.visible = this.costName1.visible = !1, 
            this.midAttr.text = AttributeData.getAttStr(i.attrs, 0, 1, "："), this.lvTxt1.text = "Lv." + i.rank; else {
                this.curAttr.visible = !0, this.curKey.visible = !1, this.curBG.visible = !1, this.nextGroup.visible = !0, 
                this.nextKey.visible = !0, this.nextBG.visible = !0, this.midAttr.visible = !1, 
                this.midKey.visible = !1, this.midBG.visible = !1, this.nextImg.visible = !0, this.preGroup.x = 82;
                var a = t.rank + 1, o = GlobalConfig.ins().NewShenqiRankConfig[this.curId][a - 1];
                this.curAttr.text = AttributeData.getAttStr(i.attrs, 0, 1, "："), this.nextAttr.text = AttributeData.getAttStr(o.attrs, 0, 1, "："), 
                this.lvTxt1.text = "Lv." + i.rank, this.lvTxt2.text = "Lv." + o.rank;
                var n = GlobalConfig.ins().ItemConfig(i.rankUpItem.id);
                this.costName.text = "消耗" + n.name + "：";
                var s = UserBag.ins().getBagGoodsCountById(0, i.rankUpItem.id);
                this.curNum.text = s + "", this.needNum.text = "/" + i.rankUpItem.count, s >= i.rankUpItem.count ? (this.rank.addChild(this.eff), 
                this.curNum.textColor = 65280, this.btnState = 0) : (this.btnState = 1, this.curNum.textColor = 16711680), 
                this.costName0.visible = this.costName1.visible = !1, this.getItemBtn.visible = !0, 
                this.getItemBtn.labelDisplay.text = "获取道具", this.costName.visible = !0, this.curNum.visible = !0, 
                this.needNum.visible = !0;
            }
        }
        LocationProperty.isCloseWxgameIos() && (this.getItemBtn.visible = !1, this.costName0.visible = this.costName1.visible = !1);
    }, e.prototype.onTouchGetItem = function(t) {
        var e = GlobalConfig.ins().NewShenqiRankConfig[this.curId];
        if (e) {
            var i = e[0].rankUpItem.id;
            UserWarn.ins().setBuyGoodsWarn(i, 1);
        }
    }, e.prototype.onTouchBtn = function(t) {
        var e = 4 * this._itemWidth;
        switch (t.target) {
          case this.leftBtn:
            this.menuList.scrollH <= e ? this.menuList.scrollH = 0 : this.menuList.scrollH -= e;
            break;

          case this.rightBtn:
            this.menuList.scrollH > (this.menuList.dataProvider.length - 8) * this._itemWidth + 2 ? this.menuList.scrollH = (this.menuList.dataProvider.length - 4) * this._itemWidth + 2 : this.menuList.scrollH += e;
            break;

          case this.costName1:
            var i = GlobalConfig.ins().NewShenqiConfig[this.curId];
            ViewManager.ins().open(i.gainWay[0][1][0], i.gainWay[0][1][1]);
        }
        this.onChange();
    }, e.prototype.onClickMenu = function(t) {
        this.curId = this._datas[t.currentTarget.selectedIndex].id, this.updateDetail();
    }, e.prototype.onRank = function(t) {
        if (0 == this.btnState && Artifact.ins().sendNewShenqiRank(this.curId), 1 == this.btnState) {
            var e = GlobalConfig.ins().NewShenqiRankConfig[this.curId];
            if (!e) return;
            var i = e[0].rankUpItem.id;
            UserWarn.ins().setBuyGoodsWarn(i, 1);
        }
    }, e.prototype.onChange = function() {}, e;
}(BaseView);

__reflect(NewShenqiWin.prototype, "NewShenqiWin"), ViewManager.ins().reg(NewShenqiWin, LayerManager.UI_Main);

window.NewShenqiWin = NewShenqiWin;

var DecomposeView = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.isInit = !1, e;
    }
    return __extends(e, t), e.prototype.init = function() {
        this.isInit || (this.isInit = !0, this.skinName = "SynthesisSkin", this.titleImg.source = "bag_title9", 
        this.sureBtn.label = "分解", this.setSkinPart("targetItem", new ItemBase()), this.numLabel.restrict = "0-9", 
        this.consumeList.dataProvider = null, this.consumeList.itemRenderer = ItemBase, 
        this.tabView = new BagComChangeView(this.selectedItem, this), this.scroll.viewport = this.tabView, 
        this.tabView.type = SynthesisAssist.TYPE1, this.initData());
    }, e.prototype.open = function() {
        this.init(), this.addTouchEndEvent(this.minBtn, this.onTap), this.addTouchEndEvent(this.maxBtn, this.onTap), 
        this.addTouchEndEvent(this.sub1Btn, this.onTap), this.addTouchEndEvent(this.add1Btn, this.onTap), 
        this.addTouchEndEvent(this.sureBtn, this.onTap), this.addChangeEvent(this.numLabel, this.onTxtChange), 
        this.scroll.addEventListener(egret.Event.CHANGE, this.onScrollChange, this), this.observe(UserBag.ins().postItemChange, this.refresh), 
        this.observe(UserBag.ins().postItemAdd, this.refresh), this.observe(UserBag.ins().postItemDel, this.refresh), 
        this.tabView.open(), this.tabView.selectItem([ 0, 0, 0 ]);
    }, e.prototype.close = function() {
        this.isInit && (SynthesisAssist.isOpenDecompose = !1, this.removeEvents(), this.removeObserve(), 
        this.scroll.removeEventListener(egret.Event.CHANGE, this.onScrollChange, this), 
        MessageCenter.ins().removeAll(this), TimerManager.ins().remove(this.refreshSelect, this), 
        this.tabView.close());
    }, e.prototype.onScrollChange = function(t) {}, e.prototype.initData = function() {
        var t = [];
        for (var e in GlobalConfig.ins().ItemExchangeResolveConfig) t.push(GlobalConfig.ins().ItemExchangeResolveConfig[e]);
        this.tabView.initData(t);
    }, e.prototype.onTxtChange = function(t) {
        var e = Number(this.numLabel.text);
        e > this.maxNum && (e = this.maxNum), this.setNum(e);
    }, e.prototype.refresh = function() {
        MessageCenter.ins().dispatch(SynthesisAssist.BAG_COM_UPDATE_DATA), TimerManager.ins().remove(this.refreshSelect, this), 
        TimerManager.ins().doTimer(500, 1, this.refreshSelect, this);
    }, e.prototype.selectedItem = function(t) {
        this.selectItem != t && (this.selectItem = t, this.refreshSelect());
    }, e.prototype.refreshSelect = function() {
        this.selectItem && this.updateSelectData();
    }, e.prototype.updateSelectData = function() {
        this.maxNum = ItemExchangeResolveConfig.getMaxNum(this.selectItem.index0, this.selectItem.index1, this.selectItem.index2), 
        this.targetNum = this.maxNum > 0 ? 1 : 0, this.costCon.visible = this.selectItem.cost > 0, 
        this.setNum(this.targetNum), this.targetItem.data = this.selectItem.itemId;
        var t = this.maxNum > 0 ? this.maxNum + "" : "";
        this.targetItem.setCount(t), this.targetItem.isShowName(!1), this.targetItemNameTxt.text = this.targetItem.getNameTxt().text, 
        this.targetItemNameTxt.textColor = this.targetItem.getNameTxt().textColor, this.consumeList.dataProvider = new eui.ArrayCollection(this.selectItem.item);
    }, e.prototype.setNum = function(t) {
        if (this.targetNum = t, this.numLabel.text = this.targetNum + "", this.costCon.visible) {
            var e = this.targetNum * this.selectItem.cost;
            this.costTxt.text = e + "";
        }
    }, e.prototype.onTap = function(t) {
        var e = this.maxNum > 0 ? 1 : 0;
        switch (t.target) {
          case this.minBtn:
            this.targetNum = e;
            break;

          case this.maxBtn:
            this.targetNum = this.maxNum;
            break;

          case this.sub1Btn:
            this.targetNum--, this.targetNum <= e && (this.targetNum = e);
            break;

          case this.add1Btn:
            this.targetNum++, this.targetNum > this.maxNum && (this.targetNum = this.maxNum);
            break;

          case this.sureBtn:
            this.selectItem ? this.targetNum <= 0 ? UserTips.ins().showTips("材料不足") : UserBag.ins().sendOperateItem(1, this.selectItem.index0, this.selectItem.index1, this.selectItem.index2, this.targetNum) : UserTips.ins().showTips("请选择要分解的道具");
        }
        this.setNum(this.targetNum);
    }, e;
}(BaseView);

__reflect(DecomposeView.prototype, "DecomposeView");

window.DecomposeView = DecomposeView;

var BagComChangeItem = function(t) {
    function e(i, n, s, a, o, r, h) {
        void 0 === o && (o = null), void 0 === r && (r = null), void 0 === h && (h = SynthesisAssist.TYPE0);
        var l = t.call(this) || this;
        if (l.typeSkinList = [ [ "BagComChangeItemSkin0", "BagComChangeItemSkin1", "BagComChangeItemSkin2" ] ], 
        l.startHeight = [ [ 49, 48, 39 ] ], l.skinName = l.typeSkinList[i][n], l.layer = n, 
        l.data = s, l.type = h, l.startH = l.startHeight[i][n], l.data instanceof Array) {
            l.subCon = new eui.Group(), l.subCon.y = l.startH;
            for (var u = l.data, p = 0; p < u.length; p++) {
                var c = new e(i, l.layer + 1, u[p], p, o, r, h);
                l.subCon.addChild(c), c.y = p * l.startHeight[i][n + 1] + 5;
            }
            for (var g = l.data[0]; g instanceof Array; ) g = g[0];
            l.nameTxt.text = g["name" + n];
        } else l.updateFun = o, l.updateFunObj = r, l.nameTxt.text = s["name" + n];
        return l.addEventListener(egret.Event.ADDED_TO_STAGE, l.open, l), l.addEventListener(egret.Event.REMOVED_FROM_STAGE, l.close, l), 
        l.updateData(), l;
    }
    return __extends(e, t), e.prototype.open = function() {
        this.addTouchEvent(this.clickArea, this.onSelectIndex), MessageCenter.ins().addListener(SynthesisAssist.BAG_COM_SELECTED_TAB, this.resetPos, this), 
        MessageCenter.ins().addListener(SynthesisAssist.BAG_COM_UPDATE_DATA, this.updateData, this);
    }, e.prototype.close = function() {
        this.removeEvents(), MessageCenter.ins().removeAll(this);
    }, e.prototype.resetPos = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        if (this.subCon) for (var i = 0, n = 0; n < this.subCon.numChildren; n++) {
            var s = this.subCon.getChildAt(n);
            s.y = i, i = s.y + s.height;
        } else {
            var a = t[0];
            a == this || a.subCon || this.updateSelect(!1);
        }
    }, e.prototype.onSelectIndex = function(t) {
        void 0 === t && (t = null), this.subCon ? (this.subCon.parent ? DisplayUtils.removeFromParent(this.subCon) : this.addChild(this.subCon), 
        this.resetPos(), this.updateSelect(!this.isSelected)) : (this.updateFun && this.data && this.updateFun.call(this.updateFunObj, this.data), 
        this.updateSelect(!0)), MessageCenter.ins().dispatch(SynthesisAssist.BAG_COM_SELECTED_TAB, this);
    }, e.prototype.updateSelect = function(t) {
        this.isSelected = t, this.currentState = this.isSelected ? "down" : "up";
    }, e.prototype.selectIndex = function(t) {
        if (this.subCon && !this.subCon.parent ? (this.addChild(this.subCon), this.resetPos()) : this.updateFun && this.data && this.updateFun.call(this.updateFunObj, this.data), 
        this.updateSelect(!0), t.length > 0) {
            var e = t.shift(), i = this.subCon.getChildAt(e);
            i.selectIndex(t);
        } else MessageCenter.ins().dispatch(SynthesisAssist.BAG_COM_SELECTED_TAB, this);
    }, e.prototype.cleanSelect = function() {
        if (this.updateSelect(!1), this.subCon) {
            this.subCon.parent && DisplayUtils.removeFromParent(this.subCon);
            for (var t = 0; t < this.subCon.numChildren; t++) {
                var e = this.subCon.getChildAt(t);
                e.isSelected && e.cleanSelect();
            }
        }
    }, e.prototype.updateData = function() {
        var t;
        if (this.data instanceof Array) {
            for (var e = this.data[0]; e instanceof Array; ) e = e[0];
            0 == this.layer ? t = this.type == SynthesisAssist.TYPE0 ? ItemExchangeComposeConfig.getMainTabRedPoint(e.index0) : ItemExchangeResolveConfig.getMainTabRedPoint(e.index0) : 1 == this.layer && (t = this.type == SynthesisAssist.TYPE0 ? -1 != ItemExchangeComposeConfig.getTabRedPointIndex(e.index0, e.index1) : -1 != ItemExchangeResolveConfig.getTabRedPointIndex(e.index0, e.index1));
        } else t = this.type == SynthesisAssist.TYPE0 ? ItemExchangeComposeConfig.getSubTabRedPoint(this.data.index0, this.data.index1, this.data.index2) : ItemExchangeResolveConfig.getSubTabRedPoint(this.data.index0, this.data.index1, this.data.index2);
        this.redpoint.visible = t;
    }, e;
}(BaseView);

__reflect(BagComChangeItem.prototype, "BagComChangeItem");

window.BagComChangeItem = BagComChangeItem;

var SynthesisView = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.isInit = !1, e;
    }
    return __extends(e, t), e.prototype.init = function() {
        this.isInit || (this.isInit = !0, this.skinName = "SynthesisSkin", this.sureBtn.label = "合成", 
        this.setSkinPart("targetItem", new ItemBase()), this.numLabel.restrict = "0-9", 
        this.consumeList.dataProvider = null, this.consumeList.itemRenderer = SynthesisConsumeItem, 
        this.tabView = new BagComChangeView(this.selectedItem, this), this.scroll.viewport = this.tabView, 
        this.tabView.type = SynthesisAssist.TYPE0, this.initData());
    }, e.prototype.open = function() {
        this.init(), this.addTouchEndEvent(this.minBtn, this.onTap), this.addTouchEndEvent(this.maxBtn, this.onTap), 
        this.addTouchEndEvent(this.sub1Btn, this.onTap), this.addTouchEndEvent(this.add1Btn, this.onTap), 
        this.addTouchEndEvent(this.sureBtn, this.onTap), this.addChangeEvent(this.numLabel, this.onTxtChange), 
        this.scroll.addEventListener(egret.Event.CHANGE, this.onScrollChange, this), this.observe(UserBag.ins().postItemChange, this.refresh), 
        this.observe(UserBag.ins().postItemAdd, this.refresh), this.observe(UserBag.ins().postItemDel, this.refresh), 
        this.observe(UserBag.ins().postUpdateComposeTips, this.refresh), this.tabView.open(), 
        this.tabView.selectItem([ 0, 0, 0 ]);
    }, e.prototype.close = function() {
        this.isInit && (SynthesisAssist.isOpenSynthesis = !1, this.removeEvents(), this.removeObserve(), 
        this.scroll.removeEventListener(egret.Event.CHANGE, this.onScrollChange, this), 
        MessageCenter.ins().removeAll(this), TimerManager.ins().remove(this.refreshSelect, this), 
        this.tabView.close());
    }, e.prototype.onScrollChange = function(t) {}, e.prototype.initData = function() {
        var t = [];
        for (var e in GlobalConfig.ins().ItemExchangeComposeConfig) t.push(GlobalConfig.ins().ItemExchangeComposeConfig[e]);
        this.tabView.initData(t);
    }, e.prototype.onTxtChange = function(t) {
        var e = Number(this.numLabel.text);
        e > this.maxNum && (e = this.maxNum), this.setNum(e);
    }, e.prototype.refresh = function() {
        MessageCenter.ins().dispatch(SynthesisAssist.BAG_COM_UPDATE_DATA);
        for (var t = 0; t < this.consumeList.numChildren; t++) {
            var e = this.consumeList.getChildAt(t);
            e.updateNum();
        }
        TimerManager.ins().remove(this.refreshSelect, this), TimerManager.ins().doTimer(500, 1, this.refreshSelect, this);
    }, e.prototype.selectedItem = function(t) {
        this.selectItem != t && (this.selectItem = t, this.refreshSelect());
    }, e.prototype.refreshSelect = function() {
        this.selectItem && this.updateSelectData();
    }, e.prototype.updateSelectData = function() {
        this.maxNum = ItemExchangeComposeConfig.getMaxNum(this.selectItem.index0, this.selectItem.index1, this.selectItem.index2), 
        this.targetNum = this.maxNum > 0 ? 1 : 0, this.costCon.visible = this.selectItem.cost > 0, 
        this.setNum(this.targetNum), this.numLabel.text = this.targetNum + "", this.targetItem.data = this.selectItem.itemId, 
        this.targetItem.isShowName(!1), this.targetItemNameTxt.text = this.targetItem.getNameTxt().text, 
        this.targetItemNameTxt.textColor = this.targetItem.getNameTxt().textColor, this.consumeList.dataProvider = new eui.ArrayCollection(this.selectItem.item);
    }, e.prototype.setNum = function(t) {
        if (this.targetNum = t, this.numLabel.text = this.targetNum + "", this.costCon.visible) {
            var e = this.targetNum * this.selectItem.cost;
            this.costTxt.text = e + "";
        }
    }, e.prototype.onTap = function(t) {
        var e = this.maxNum > 0 ? 1 : 0;
        switch (t.target) {
          case this.minBtn:
            this.targetNum = e;
            break;

          case this.maxBtn:
            this.targetNum = this.maxNum;
            break;

          case this.sub1Btn:
            this.targetNum--, this.targetNum <= e && (this.targetNum = e);
            break;

          case this.add1Btn:
            this.targetNum++, this.targetNum > this.maxNum && (this.targetNum = this.maxNum);
            break;

          case this.sureBtn:
            this.selectItem ? this.targetNum <= 0 ? UserTips.ins().showTips("材料不足") : UserBag.ins().sendOperateItem(0, this.selectItem.index0, this.selectItem.index1, this.selectItem.index2, this.targetNum) : UserTips.ins().showTips("请选择要合成的道具");
        }
        this.setNum(this.targetNum);
    }, e;
}(BaseView);

__reflect(SynthesisView.prototype, "SynthesisView");

window.SynthesisView = SynthesisView;

var BeginnerGuideNpcView = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.touchChildren = !1, e.touchEnabled = !1, e.skinName = "BeginnerGuideNpcViewSkin", 
        e.mc = new MovieClip(), e.mc.x = 75, e.addChild(e.mc), e.mc.playFile(ResPath.getUIEffectPath(UiEffectType.Type15), -1), 
        e;
    }
    return __extends(e, t), e.prototype.setData = function(t) {
        this.hide(), this.dialog.text = t, this.startTween();
    }, e.prototype.startTween = function() {
        this.group.y = 40, egret.Tween.get(this.group).to({
            y: 60
        }, 1e3).call(this.completeTween, this);
    }, e.prototype.completeTween = function() {
        egret.Tween.get(this.group).to({
            y: 40
        }, 1e3).call(this.startTween, this);
    }, e.prototype.hide = function() {
        egret.Tween.removeTweens(this.group);
    }, e;
}(BaseView);

__reflect(BeginnerGuideNpcView.prototype, "BeginnerGuideNpcView");

window.BeginnerGuideNpcView = BeginnerGuideNpcView;

var BetaSubPanel0 = function(t) {
    function e() {
        var e = t.call(this) || this;
        e.skinName = "BetaSubSkin0", e.dayList.itemRenderer = BetaSubItem0, e.list.itemRenderer = ItemBase;
        var i = [];
        for (var n in GlobalConfig.ins().TestActivityRewardsConfig) i.push(GlobalConfig.ins().TestActivityRewardsConfig[n]);
        return e.dayList.dataProvider = new eui.ArrayCollection(i), e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEndEvent(this.btnGet, this.onBtnClick), this.dayList.addEventListener(egret.Event.CHANGE, this.selectDay, this), 
        this.observe(BetaActivity.ins().postBaseInfo, this.updateData), this.updateData();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.dayList.removeEventListener(egret.Event.CHANGE, this.selectDay, this), this.removeEvents(), 
        this.removeObserve(), TimerManager.ins().removeAll(this);
    }, e.prototype.updateData = function() {
        var t = BetaSubData0.ins();
        this.loginDayTxt.text = "登陆天数：" + t.day, this.dayList.dataProvider.refresh(), this.dayList.selectedIndex = this.getNextIndex(), 
        this.selectDay();
        var e = DateUtils.formatMiniDateTime(t.eTime) - GameServer.serverTime;
        this.totalTime = e + egret.getTimer(), TimerManager.ins().doTimer(1e3, 0, this.updateTime, this), 
        this.updateTime();
    }, e.prototype.selectDay = function() {
        var t = this.dayList.selectedIndex + 1, e = GlobalConfig.ins().TestActivityRewardsConfig[t];
        this.list.dataProvider = new eui.ArrayCollection(e.rewards), this.btnGet.visible = !BetaSubData0.ins().getFlag(t), 
        this.imgGet.visible = !this.btnGet.visible, t > BetaSubData0.ins().day ? (this.btnGet.enabled = !1, 
        this.btnGet.filters = [ ColorUtil.colorMat ]) : (this.btnGet.enabled = !0, this.btnGet.filters = null);
    }, e.prototype.getNextIndex = function() {
        var t, e = BetaSubData0.ins();
        for (var i in GlobalConfig.ins().TestActivityRewardsConfig) {
            t = GlobalConfig.ins().TestActivityRewardsConfig[i];
            var n = e.day >= t.day && 0 == (e.flag >> t.day & 1);
            if (n) return t.day - 1;
        }
        return e.day - 1;
    }, e.prototype.onBtnClick = function(t) {
        t.target == this.btnGet && BetaActivity.ins().sendGetDayReward(this.dayList.selectedIndex + 1);
    }, e.prototype.updateTime = function() {
        var t = BetaSubData0.ins();
        this.timeTxt.text = CountdownHelp.countdown1(t.sTime, t.eTime, this.totalTime);
    }, e;
}(BaseView);

__reflect(BetaSubPanel0.prototype, "BetaSubPanel0");

window.BetaSubPanel0 = BetaSubPanel0;

var BetaSubPanel1 = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e._itemWidth = 112, e.index = 1, e.skinName = "BetaSubSkin1", e.list.itemRenderer = ItemBase, 
        e.list.dataProvider = new eui.ArrayCollection(), e.boxList.itemRenderer = BetaSubItem1, 
        e.listData = new eui.ArrayCollection(), e.boxList.dataProvider = e.listData, e.path.textFlow = new egret.HtmlTextParser().parser("<u>前往击杀</u>"), 
        e.mc = new MovieClip(), e.bossCon.addChild(e.mc), e.mc.x = 68, e.mc.y = 10, e.mc.scaleX = 1.5, 
        e.mc.scaleY = .6, e.mc.playFile(ResPath.getUIEffectPath(UiEffectType.Type22), -1), 
        e.bar.value = 0, e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEndEvent(this.boxList, this.onClick), this.addTouchEndEvent(this.btnGet, this.onClick), 
        this.addTouchEndEvent(this.path, this.onClick), this.addTouchEndEvent(this.leftBtn, this.onClick), 
        this.addTouchEndEvent(this.rightBtn, this.onClick), this.observe(BetaActivity.ins().postBossGrade, this.upData), 
        this.upData();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeEvents(), this.removeObserve(), this.clearMc(), TimerManager.ins().removeAll(this);
    }, e.prototype.upData = function() {
        var t = BetaSubData1.ins(), e = GlobalConfig.ins().TestActivityBossConfig;
        this.index = t.getindex() > 1 ? t.getindex() : 1, this.setData(this.index), this.index >= 5 && (this.boxScr.viewport.scrollH = 445);
        var i = Object.keys(e), n = 115 * (i.length - 1);
        this.bar.maximum = e[i.length].integer, this.bar.value = t.grade, this.bar.thumb.width = this.barBg.width = this.bar.width = n;
        for (var s = [], a = 0; a < i.length; a++) s[a] = e[a + 1];
        this.listData.replaceAll(s), this.numTxt.text = "" + t.grade;
        var o = DateUtils.formatMiniDateTime(t.eTime) - GameServer.serverTime;
        this.totalTime = o + egret.getTimer(), TimerManager.ins().doTimer(1e3, 0, this.updateTime, this), 
        this.updateTime();
    }, e.prototype.onClick = function(t) {
        var e = 4 * this._itemWidth;
        switch (t.target) {
          case this.btnGet:
            BetaActivity.ins().sendGetBossGrade(this.index);
            break;

          case this.path:
            ViewManager.ins().open(BossWin, 1), ViewManager.ins().isShow(BetaActivityWin) && ViewManager.ins().close(BetaActivityWin);
            break;

          case this.leftBtn:
            this.boxScr.viewport.scrollH <= e ? this.boxScr.viewport.scrollH = 0 : this.boxScr.viewport.scrollH -= e;
            break;

          case this.rightBtn:
            var i = this.boxScr.viewport.contentWidth - this.boxScr.width;
            4 * e > i ? this.boxScr.viewport.scrollH = i : this.boxScr.viewport.scrollH += e;
        }
        t.target.parent instanceof BetaSubItem1 && (this.index = t.target.parent.index, 
        this.setData(this.index));
    }, e.prototype.setData = function(t) {
        var e = BetaSubData1.ins(), i = GlobalConfig.ins().TestActivityBossConfig;
        this.list.dataProvider = new eui.ArrayCollection(i[t].rewards);
        var n = i[t].integer, s = "BOSS积分达到 |C:0x34FF25&T:" + n + "| 可领取";
        this.reqTxt.textFlow = TextFlowMaker.generateTextFlow(s);
        var a = 1 == (e.flag >> i[t].day - 1 & 1), o = e.grade >= i[t].integer;
        !a && o ? (this.btnGet.enabled = this.redPoint.visible = !0, this.btnGet.icon = "rebatehall_title1", 
        this.btnGet.filters = []) : (this.btnGet.enabled = this.redPoint.visible = !1, this.btnGet.icon = "rebatehall_title2", 
        this.btnGet.filters = [ ColorUtil.colorMat ]), a ? (this.btnGet.visible = !1, this.imgGet.visible = !0) : (this.btnGet.visible = !0, 
        this.imgGet.visible = !1);
    }, e.prototype.updateTime = function() {
        var t = BetaSubData1.ins();
        this.time.text = CountdownHelp.countdown1(t.sTime, t.eTime, this.totalTime);
    }, e.prototype.clearMc = function() {
        for (var t = this.boxList.numChildren, e = 0; t > e; e++) {
            var i = this.boxList.getChildAt(e);
            i.clearMC();
        }
    }, e;
}(BaseView);

__reflect(BetaSubPanel1.prototype, "BetaSubPanel1");

window.BetaSubPanel1 = BetaSubPanel1;

var BetaSubPanel2 = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.data = BetaSubData2.ins(), e.skinName = "BetaSubSkin2", e.listData = new eui.ArrayCollection(), 
        e.list.itemRenderer = BetaSubItem2, e.list.dataProvider = e.listData, TimerManager.ins().doTimer(1e3, e.data.eTime - e.data.sTime, e.upTime, e), 
        e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.observe(BetaActivity.ins().postBaseInfo, this.upBasedata), this.upBasedata(), 
        this.addTouchEndEvent(this.get, this.onTop), this.addTouchEvent(this.list, this.onTop);
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeEvents(), this.removeObserve();
    }, e.prototype.upBasedata = function() {
        for (var t, e, i = GlobalConfig.ins().TestActivityConfig, n = "", s = [], a = 0; a < this.data.tokenNum; a++) {
            t = GlobalConfig.ins().ItemConfig(this.data.tokenArr[a].id).name, e = this.data.tokenArr[a].count, 
            this.num.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(LangManager.gem_str1, t, e));
            for (var o = 0; o < this.num.textFlow.length; o++) n += this.num.textFlow[o].text;
            s.push(n);
        }
        this.num.text = s.join(" ");
        var r = [];
        if (1 == this.data.edition) for (var a = 0; a < this.data.num; a++) r[a] = i[a];
        if (2 == this.data.edition) for (var a = 0; a < this.data.num; a++) r[a] = i[a];
        r.sort(this.sortData), this.listData.replaceAll(r), this.list.dataProvider = this.listData, 
        this.upTime();
    }, e.prototype.sortData = function(t, e) {
        var i = BetaSubData2.ins().listArr, n = i[t.id].personNum >= t.personNum || i[t.id].serviceNum >= t.serviceNum, s = i[e.id].personNum >= e.personNum || i[e.id].serviceNum >= e.serviceNum;
        return n && s || !n && !s ? t.id > e.id ? 1 : t.id < e.id ? -1 : 0 : n ? 1 : -1;
    }, e.prototype.onTop = function(t) {
        switch (t.target) {
          case this.get:
            ViewManager.ins().open(BetaActivityWin);
        }
        t.target instanceof eui.Button && t.target.parent instanceof BetaSubItem2 && BetaActivity.ins().sendGetConvert(t.target.parent.id);
    }, e.prototype.upTime = function() {
        var t = GameServer.serverTime, e = DateUtils.formatMiniDateTime(this.data.eTime), i = e - t;
        this.totalTime = i + egret.getTimer(), this.timeTxt.text = CountdownHelp.countdown1(this.data.sTime, this.data.eTime, this.totalTime);
    }, e;
}(BaseView);

__reflect(BetaSubPanel2.prototype, "BetaSubPanel2");

window.BetaSubPanel2 = BetaSubPanel2;

var BlessItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "BlessItemSkin", e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {}, e.prototype.setIsBlessed = function(t) {
        this.bless.visible = t;
    }, e.prototype.getIsSelected = function() {
        return this.selected.visible;
    }, e.prototype.setIsSelected = function(t) {
        this.selected.visible = t;
    }, e.prototype.setData = function(t, e) {
        this.blessLv1.visible = !1, this._data = t, this.bless.visible = t.bless > 0;
        var i = GlobalConfig.ins().BlessAttrConfig[e];
        if (i && i[i.length - 1]) {
            if (this.getData().bless >= i[i.length - 1].level) this.red.visible = !1; else {
                var n = this.getData().bless + 1, s = GlobalConfig.ins().BlessCostConfig[n], a = UserBag.ins().getBagGoodsCountById(0, s.stoneId);
                a >= s.stoneNum ? this.red.visible = !0 : this.red.visible = !1;
            }
            switch (this.getData().bless > 0 ? (this.blessLv1.visible = !0, this.getData().bless < 3 && (this.blessLv1.source = "common_blessLv" + this.getData().bless), 
            this.getData().bless >= 3 && this.getData().bless < 5 && (this.blessLv1.source = "common_blessLv3"), 
            this.getData().bless >= 5 && this.getData().bless < 8 && (this.blessLv1.source = "common_blessLv5"), 
            this.getData().bless >= 8 && (this.blessLv1.source = "common_blessLv8")) : this.blessLv1.visible = !1, 
            this.getData().bless) {
              case 1:
                this.bless.text = "铸魂一级";
                break;

              case 2:
                this.bless.text = "铸魂二级";
                break;

              case 3:
                this.bless.text = "铸魂三级";
                break;

              case 4:
                this.bless.text = "铸魂四级";
                break;

              case 5:
                this.bless.text = "铸魂五级";
                break;

              case 6:
                this.bless.text = "铸魂六级";
                break;

              case 7:
                this.bless.text = "铸魂七级";
                break;

              case 8:
                this.bless.text = "铸魂八级";
            }
        }
    }, e.prototype.getData = function() {
        return this._data;
    }, e.prototype.getSource = function() {
        return this._source;
    }, e.prototype.setSource = function(t) {
        this._source != t && (this._source = t, this.item.source = this._source);
    }, e.prototype.setBgSource = function(t) {
        this.itemBg.source = t;
    }, e;
}(BaseView);

__reflect(BlessItem.prototype, "BlessItem");

window.BlessItem = BlessItem;

var BossTargetInfo = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "BossTargetSkin", e;
    }
    return __extends(e, t), e.prototype.refushTargetInfo = function(t) {
        this.model = t.infoModel, this.bloodBar.maximum = this.model.getAtt(AttributeType.atMaxHp), 
        this.bloodBar.value = t.getHP(), this.model.team == Team.My ? this.nameLabel.text = Actor.myName : this.nameLabel.text = this.model.name + "", 
        this.head.source = "uihead" + this.model.job + this.model.sex + "_png";
    }, e;
}(BaseView);

__reflect(BossTargetInfo.prototype, "BossTargetInfo");

window.BossTargetInfo = BossTargetInfo;

var NewTeamPanel = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "NewTeamPanelSkin", e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.list.itemRenderer = NewTeamItem, this.dataArr = new eui.ArrayCollection(), 
        this.list.dataProvider = this.dataArr, this.hideCheck.selected = UserFb.ins().hideCheck, 
        this.handleHide();
    }, e.prototype.open = function() {
        this.addTouchEvent(this.hideCheck, this.onTap), this.observe(UserFb.ins().postTeamFbInfo, this.updateTeamList), 
        this.observe(UserFb.ins().postFbCountChange, this.updateTeamList), this.updateTeamList(), 
        UserFb.ins().sendTeamFbInfo();
    }, e.prototype.close = function() {
        this.removeObserve(), this.removeEvents();
    }, e.prototype.onTap = function(t) {
        void 0 === t && (t = null), UserFb.ins().hideCheck = this.hideCheck.selected, this.handleHide();
    }, e.prototype.handleHide = function() {
        UserFb.ins().hideCheck ? this.dataArr = new eui.ArrayCollection(FbHelp.getMatchTeamFbList(UserZs.ins().lv, Actor.level)) : this.dataArr = new eui.ArrayCollection(FbHelp.countTeamFbList()), 
        this.list.dataProvider = this.dataArr, this.list.scrollV = 0;
    }, e.prototype.updateTeamList = function() {
        this.onTap(), this.challengeCountTxt.text = UserFb.ins().teamFbCanChallengeCount + "/" + GlobalConfig.ins().TeamFubenBase.maxCount, 
        this.challengeCountTxt.textColor = UserFb.ins().teamFbCanChallengeCount <= 0 ? ColorUtil.C_RED : ColorUtil.C_GREEN, 
        TimerManager.ins().doTimer(1e3, 0, this.updateTimer, this), this.updateTimer();
    }, e.prototype.updateTimer = function() {
        if (UserFb.ins().teamFbRestoreTimes <= -1) return void (this.timeTxt.visible = !1);
        var t = UserFb.ins().teamFbRestoreTimes - egret.getTimer() / 1e3;
        0 >= t ? (TimerManager.ins().remove(this.updateTimer, this), this.timeTxt.visible = !1) : (this.timeTxt.visible = !0, 
        this.timeTxt.text = DateUtils.getFormatBySecond(t, DateUtils.TIME_FORMAT_9) + "后恢复1次");
    }, e;
}(BaseView);

__reflect(NewTeamPanel.prototype, "NewTeamPanel");

window.NewTeamPanel = NewTeamPanel;

var NewTeamScrollHead = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.roleInfoList = [ [ [ 1, 1 ], [ 1, 0 ] ], [ [ 1, 0 ], [ 1, 1 ] ], [ [ 1, 1 ], [ 1, 0 ] ], [ [ 1, 0 ], [ 1, 1 ] ] ], 
        e.dis = 0, e.index = 0, e.num1 = 3, e.num2 = 4, e.num3 = 0, e.skinName = "NewTeamScrollHeadSkin", 
        e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.dis = 54, this.otherHead.scrollRect = new egret.Rectangle(-1, -1, 84, 84), 
        this.scrollHead.scrollRect = new egret.Rectangle(-1, -56, 84, 84), this.otherMask = this.otherHead.scrollRect, 
        this.scrollMask = this.scrollHead.scrollRect, this.posY = this.otherMask.y, this.posYImg = this.scrollHead.y, 
        this.posYScroll = this.scrollMask.y;
    }, e.prototype.startScrollHead = function() {
        this.rollTime = 0, 0 == this.index ? this.otherName.text = LangManager.teamfb_str2 : this.otherName.text = LangManager.teamfb_str3, 
        this.otherName.text = this.nm, this.otherMask.y = this.posY, this.scrollMask.y = this.posYScroll, 
        this.scrollHead.y = this.posYImg, this.refushROllInfo(0), this.num3 = 0, TimerManager.ins().doTimerDelay(500 * this.index, 1, this.dis * this.num1, this.startScroll, this, this.rollOver, this);
    }, e.prototype.rollOver = function() {
        this.stopScrollHead(), this.showPointPlayerInfo(), null != this.comFun && this.comFun();
    }, e.prototype.stopScrollHead = function() {
        TimerManager.ins().remove(this.startScroll, this);
    }, e.prototype.startScroll = function() {
        var t = this.num2;
        this.num3 >= this.dis * (this.num1 * this.num2 - 4) && (t = this.num2 - 2);
        for (var e = 0; t > e; e++) this.num3++, this.otherMask.y += 1, this.scrollMask.y += 1, 
        this.scrollHead.y -= .5, this.otherHead.scrollRect = this.otherMask, this.scrollHead.scrollRect = this.scrollMask, 
        this.rollTime += 1, this.rollTime % this.dis == 0 && (this.otherMask.y = this.posY, 
        this.scrollMask.y = this.posYScroll, this.scrollHead.y = this.posYImg, this.refushROllInfo(this.rollTime / this.dis), 
        this.rollTime / this.dis == this.num1 * t && (this.scrollHead.visible = !1));
    }, e.prototype.refushROllInfo = function(t) {
        t >= this.roleInfoList.length && (t %= this.roleInfoList.length);
        var e = this.roleInfoList[t];
        this.otherHead.source = ResPath.getHeadIcon(e[0][1], 2), this.scrollHead.source = ResPath.getHeadIcon(e[1][1], 2), 
        this.scrollHead.visible = !0;
    }, e.prototype.showPointPlayerInfo = function() {
        var t = UserFb.ins().teamFbCanSpicList[this.index];
        this.otherName.text = t.name, this.otherHead.source = ResPath.getHeadIcon(t.sex, 2), 
        this.scrollHead.visible = !1;
    }, e;
}(BaseView);

__reflect(NewTeamScrollHead.prototype, "NewTeamScrollHead");

window.NewTeamScrollHead = NewTeamScrollHead;

var PublicBossPanel = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.isStartTime = !1, e.skinName = "PublicBossPanelSkin", e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.init();
    }, e.prototype.init = function() {
        this.list.itemRenderer = PublicBossItem, this.listData = new eui.ArrayCollection(), 
        this.list.dataProvider = this.listData;
    }, e.prototype.open = function() {
        this.observe(UserBoss.ins().postListData, this.setData), this.addTouchEvent(this.ascensionBtn, this.onTouch), 
        this.addTouchEvent(this.setting, this.onTouch), this.addTouchEvent(this.auto, this.onTouch), 
        this.setData();
    }, e.prototype.close = function() {
        this.removeObserve(), this.removeEvents(), TimerManager.ins().remove(this.updateTime, this), 
        this.isStartTime = !1;
    }, e.prototype.updateTime = function() {
        if (void 0 != this.timeTxt) {
            var t = (UserBoss.ins().restoreTime - egret.getTimer()) / 1e3;
            if (t >>= 0, 0 >= t) return TimerManager.ins().remove(this.updateTime, this), this.isStartTime = !1, 
            void (UserBoss.ins().challengeCount >= GlobalConfig.ins().PublicBossBaseConfig.maxCount ? this.timeTxt.visible = !1 : UserBoss.ins().sendInfo());
            this.timeTxt.visible || (this.timeTxt.visible = !0), this.timeTxt.text = "(" + DateUtils.getFormatTimeByStyle(t, DateUtils.STYLE_4) + "后恢复1次)";
        }
    }, e.prototype.setData = function() {
        this.soulTxt.text = UserBoss.ins().toDaySoul.toString(), this.challengeCountTxt.text = UserBoss.ins().challengeCount + "/" + XianJieData0.ins().bossCount;
        var t = UserBoss.ins().bossInfo.slice();
        t.sort(this.compareFn), this.list.dataProvider = new eui.ArrayCollection(t), this.list.scrollV = 0, 
        this.isStartTime || (this.updateTime(), TimerManager.ins().doTimer(1e3, 0, this.updateTime, this), 
        this.isStartTime = !0);
    }, e.prototype.setProgressTxt = function(t) {
        var e = SubRoles.ins().getSubRoleByIndex(t), i = e.getMinEquipIndexByType(2), n = e.getEquipByIndex(i).zhuling, s = UserForge.ins().getZhulingCostConfigByLv(n + 1), a = "";
        if (s) {
            var o = s.soulNum, r = parseInt(Actor.soul.toString()), h = "";
            h = r >= o ? "|C:0x00ff00&T:" : "|C:0xff0000&T:", a += h + r + "|/" + o;
        } else a = "|C:0xFFB82A&T:注灵已满|";
        this.progressTxt.textFlow = TextFlowMaker.generateTextFlow(a);
    }, e.prototype.compareFn = function(t, e) {
        var i = (t.reliveTime - egret.getTimer()) / 1e3 > 0, n = (e.reliveTime - egret.getTimer()) / 1e3 > 0, s = GlobalConfig.ins().PublicBossConfig[t.id], a = GlobalConfig.ins().PublicBossConfig[e.id];
        return i && !n ? 1 : n && !i ? -1 : t.canChallenge && !e.canChallenge ? -1 : !t.canChallenge && e.canChallenge ? 1 : t.canChallenge && e.canChallenge ? s.zsLevel < a.zsLevel ? 1 : s.zsLevel > a.zsLevel ? -1 : s.level < a.level ? 1 : s.level > a.level ? -1 : 0 : s.zsLevel < a.zsLevel ? -1 : s.zsLevel > a.zsLevel ? 1 : s.level < a.level ? -1 : s.level > a.level ? 1 : 0;
    }, e.prototype.onTouch = function(t) {
        switch (t.currentTarget) {
          case this.ascensionBtn:
            GameGuider.guidance(egret.getQualifiedClassName(ForgeWin), 2);
            break;

          case this.setting:
            ViewManager.ins().open(PubBossRemindWin);
            break;

          case this.auto:
            ViewManager.ins().open(PubBossChallengeWin);
        }
    }, e;
}(BaseView);

__reflect(PublicBossPanel.prototype, "PublicBossPanel");

window.PublicBossPanel = PublicBossPanel;

var KuafuWarBossView = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "KuafuWarBossSkin", e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.init();
    }, e.prototype.init = function() {
        this.mc = new MovieClip(), this.mcCon.addChild(this.mc), this.rewardList.itemRenderer = ItemBase;
        for (var t in GlobalConfig.ins().KuaFuZhanConstConfig.bossRewardList) GlobalConfig.ins().KuaFuZhanConstConfig.bossRewardList[t].isNoShowName = !0;
        var e = GlobalConfig.ins().KuaFuZhanConstConfig.bossId, i = GlobalConfig.ins().MonstersConfig(e);
        this.mc.playFile("" + ResPath.RES_DIR_MONSTER + MonstersConfig.realAvatar(i) + "_" + EntityAction.STAND + CharDirEnum.SOUTH_EAST, -1), 
        this.rewardList.dataProvider = new eui.ArrayCollection(GlobalConfig.ins().KuaFuZhanConstConfig.bossRewardList);
    }, e.prototype.open = function() {
        this.observe(KuaFuWar.ins().postBossTime, this.setBossTime), this.observe(KuaFuWar.ins().postBossInfo, this.updateBossInfo), 
        this.addTouchEvent(this.challengeBtn, this.onClick), KuaFuWar.ins().sendBossTime(), 
        KuaFuWar.ins().sendBossInfo();
    }, e.prototype.setBossTime = function() {
        this.bossTime = 0, TimerManager.ins().remove(this.updateBossTime, this), 0 == KuaFuWar.ins().bossTime ? (this.timeTxt.textColor = 1631753, 
        this.timeTxt.text = "已复活") : (this.timeTxt.textColor = 16652572, this.bossTime = 1e3 * KuaFuWar.ins().bossTime + egret.getTimer(), 
        TimerManager.ins().doTimer(500, 0, this.updateBossTime, this), this.updateBossTime()), 
        this.isKillImg.visible = 0 != KuaFuWar.ins().bossTime;
    }, e.prototype.updateBossTime = function() {
        var t = Math.floor((this.bossTime - egret.getTimer()) / 1e3);
        return 0 >= t ? (this.timeTxt.text = "已复活", this.timeTxt.textColor = 1631753, void TimerManager.ins().remove(this.updateBossTime, this)) : void (this.timeTxt.text = DateUtils.getFormatBySecond(t));
    }, e.prototype.close = function() {
        this.removeEvents(), this.removeObserve(), TimerManager.ins().remove(this.updateBossTime, this);
    }, e.prototype.updateBossInfo = function() {
        this.preGuishuTxt.text = KuaFuWar.ins().preGuishu ? KuaFuWar.ins().preGuishu : "暂无", 
        this.bossLvTxt.text = "(Lv." + KuaFuWar.ins().bossLv + ")";
    }, e.prototype.onClick = function(t) {
        GameMap.canEnterFb() && KuaFuWar.ins().sendEnterWar();
    }, e;
}(BaseView);

__reflect(KuafuWarBossView.prototype, "KuafuWarBossView");

window.KuafuWarBossView = KuafuWarBossView;

var WuShuangBossView = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "WuShuangBossSkin", e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.init();
    }, e.prototype.init = function() {
        this.mc = new MovieClip(), this.mcCon.addChild(this.mc), this.bossList.dataProvider = null, 
        this.bossList.itemRenderer = WuShuangBossMainItem, this.rewardList.itemRenderer = ItemBase;
    }, e.prototype.open = function() {
        this.observe(WuShuangBoss.ins().postBossInfo, this.updateBossInfo), this.observe(WuShuangBoss.ins().postRefreshBossTime, this.updateBossInfo), 
        this.observe(WuShuangBoss.ins().postSelectBossItem, this.selectIndex), this.addTouchEvent(this.challengeBtn, this.onClick), 
        this.addTouchEvent(this.btnQuestion, this.onQuestionClick), WuShuangBoss.ins().sendBossInfo();
    }, e.prototype.close = function() {
        this.removeEvents(), this.removeObserve(), WuShuangBoss.ins().selectBossId = -1;
    }, e.prototype.updateBossInfo = function() {
        var t = WuShuangBoss.ins().getBossList();
        WuShuangBoss.ins().selectBossId = t[0][0], this.bossList.dataProvider = new eui.ArrayCollection(t), 
        this.selectIndex(WuShuangBoss.ins().selectBossId, null);
    }, e.prototype.selectIndex = function(t, e) {
        WuShuangBoss.ins().selectBossId = t;
        for (var i = 0; i < this.bossList.numElements; i++) {
            var n = this.bossList.getElementAt(i);
            if (n) for (var s = 0; s < n.bossList.numElements; s++) {
                var a = n.bossList.getElementAt(s);
                a && a.updateSelect(WuShuangBoss.ins().selectBossId);
            }
        }
        this.updateCurSelect(t);
    }, e.prototype.updateCurSelect = function(t) {
        var e = WuShuangBossData0.ins().getBossData(t);
        if (e) {
            var i = GlobalConfig.ins().WuShuangBossBossCfg[e.id], n = e.preGuishuName ? e.preGuishuName : "暂无";
            this.preGuishuTxt.text = n;
            var s = 0 == i.levelReq.min.zsLevel ? i.levelReq.min.level + "级" : i.levelReq.min.zsLevel + "转", a = 0 == i.levelReq.max.zsLevel ? i.levelReq.max.level + "级" : i.levelReq.max.zsLevel + "转";
            this.bossNameImg.source = "boss_wushuang_name" + e.id, this.bossLvTxt.text = "(" + s + "-" + a + ")";
            var o = GlobalConfig.ins().WuShuangBossBossExCfg[e.id][e.subId - 1], r = WuShuangBossBossExCfg.getRewardShow(o.id, o.subId, !1);
            this.rewardList.dataProvider = new eui.ArrayCollection(r);
            var h = GlobalConfig.ins().MonstersConfig(o.monsterID);
            this.mc.playFile("" + ResPath.RES_DIR_MONSTER + MonstersConfig.realAvatar(h) + "_" + EntityAction.STAND + CharDirEnum.SOUTH_EAST, -1), 
            this.isKillImg.visible = e.time > 0;
        }
        this.updateLeftTime();
    }, e.prototype.updateLeftTime = function() {
        var t = WuShuangBoss.ins().getLeftTime(WuShuangBoss.ins().selectBossId);
        this.leftTimeTxt.text = "挑战剩余次数：" + t + "次";
    }, e.prototype.onClick = function(t) {
        var e = WuShuangBossData0.ins().getBossData(WuShuangBoss.ins().selectBossId);
        if (-1 != WuShuangBoss.ins().selectBossId) if (e && e.time > 0) UserTips.ins().showTips("BOSS未刷新"); else {
            if (!GameMap.canEnterFb()) return;
            WuShuangBoss.ins().sendEnter(WuShuangBoss.ins().selectBossId);
        }
    }, e.prototype.onQuestionClick = function(t) {
        UserWarn.ins().showCommonTips(LangManager.wushuangboss_str0, !0);
    }, e;
}(BaseView);

__reflect(WuShuangBossView.prototype, "WuShuangBossView");

window.WuShuangBossView = WuShuangBossView;

var WuShuangGuishuItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "WuShuangGuishuSkin", e;
    }
    return __extends(e, t), e.prototype.open = function() {
        this.observe(GameLogic.ins().postAttackFaild, this.update), this.observe(GameLogic.ins().postAttackSucceed, this.update);
    }, e.prototype.close = function() {
        this.removeEvents();
    }, e.prototype.update = function() {
        var t = EntityManager.ins().getEntityByHandle(CustomEnemyManager.ins().curEnemyHandle);
        t || (t = EntityManager.ins().getEntityBymasterhHandle(CustomEnemyManager.ins().curEnemyHandle)), 
        0 == WuShuangBoss.ins().guishuHandle || !t || t.infoModel.handle != WuShuangBoss.ins().guishuHandle && t.infoModel.masterHandle != WuShuangBoss.ins().guishuHandle ? this.removeeff() : this.addeff();
    }, e.prototype.addeff = function() {
        this.mc || (this.mc = new MovieClip(), this.mc.playFile(ResPath.getUIEffectPath(UiEffectType.Type28), -1), 
        this.mcCon.addChild(this.mc));
    }, e.prototype.removeeff = function() {
        this.mc && (DisplayUtils.removeFromParent(this.mc), this.mc.stop(), this.mc = null);
    }, e.prototype.setData = function() {
        var t = EntityManager.ins().getEntityBymasterhHandle(WuShuangBoss.ins().guishuHandle);
        if (t || (t = EntityManager.ins().getEntityByHandle(WuShuangBoss.ins().guishuHandle)), 
        t) {
            var e = t.infoModel;
            this.headIcon.source = ResPath.getHeadIcon(e.sex, 1), this.powerTxt.text = e.power + "", 
            this.nameTxt.text = e.name;
        }
    }, e;
}(BaseView);

__reflect(WuShuangGuishuItem.prototype, "WuShuangGuishuItem");

window.WuShuangGuishuItem = WuShuangGuishuItem;

var CDKeyWin = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.isInit = !1, e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.isInit || (this.isInit = !0, this.skinName = "CDkeySkin", this.input.maxChars = 28, 
        this.input.text = ""), this.addTouchEvent(this.sendBtn, this.onTap);
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.isInit && this.removeTouchEvent(this.sendBtn, this.onTap);
    }, e.prototype.onTap = function(t) {
        switch (t.currentTarget) {
          case this.sendBtn:
            "" != this.input.text ? (CDKey.ins().sendCdkey(this.input.text), this.input.text = "") : UserTips.ins().showTips("请输入兑换码");
        }
    }, e;
}(BaseView);

__reflect(CDKeyWin.prototype, "CDKeyWin");

window.CDKeyWin = CDKeyWin;

var ChatDanmuPanel = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.itemHeight = 18, e.itemSpace = 5, e.curIndex = 0, e.itemList = [], e.skinName = "ChatDanmuSkin", 
        e.maxIndex = Math.floor(e.height / (e.itemHeight + e.itemSpace)), e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.observe(Chat.ins().postNewDanmuData, this.updataDanmuMessage);
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeObserve(), this.curIndex = 0, this.clearList();
    }, e.prototype.clearList = function() {
        for (;this.numChildren > 0; ) {
            var t = this.removeChildAt(0);
            egret.Tween.removeTweens(t);
        }
        this.itemList.length = 0;
    }, e.prototype.updataDanmuMessage = function() {
        for (;Chat.ins().danmuDataList.length > 0; ) {
            var t = Chat.ins().danmuDataList.shift();
            this.addItem(t);
        }
    }, e.prototype.getCheckList = function() {
        for (var t, e = [], i = 0; i < this.maxIndex; i++) {
            t = this.itemList[i];
            var n = void 0;
            n = t ? t.length : 0, e[n] || (e[n] = []), e[n].push(i);
        }
        for (var i = 0; i < e.length; i++) if (e[i]) return e[i];
        return null;
    }, e.prototype.getNextIndex = function() {
        var t, e = this.getCheckList();
        return t = e[Math.floor(Math.random() * e.length)];
    }, e.prototype.addItem = function(t) {
        this.curIndex = this.getNextIndex();
        var e, i, n = new ChatDanmuItem();
        this.itemList[this.curIndex] && this.itemList[this.curIndex].length ? (i = this.itemList[this.curIndex][this.itemList[this.curIndex].length - 1], 
        e = i.x + i.width + 10) : e = this.width, n.x = e, n.y = this.curIndex * (this.itemHeight + this.itemSpace), 
        n.data = t, n.dataChanged(), this.addChild(n), this.itemList[this.curIndex] || (this.itemList[this.curIndex] = []), 
        this.itemList[this.curIndex].push(n), n.index = this.curIndex, this.tweenItem(n);
    }, e.prototype.tweenItem = function(t) {
        var e = this, i = 0 - t.width, n = egret.Tween.get(t);
        n.to({
            x: i
        }, 25 * t.width).call(function() {
            e.removeChild(t);
            var i = e.itemList[t.index], n = i.indexOf(t);
            -1 != n && i.splice(n, 1);
        }, this);
    }, e;
}(BaseView);

__reflect(ChatDanmuPanel.prototype, "ChatDanmuPanel");

window.ChatDanmuPanel = ChatDanmuPanel;

var ChiJiGuishuItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "KuaFuWarGuishuSkin", e.guishuBtn.labelDisplay.size = 18, e;
    }
    return __extends(e, t), e.prototype.open = function() {
        this.addTouchEvent(this.guishuBtn, this.onClick), this.observe(GameLogic.ins().postAttackFaild, this.update), 
        this.observe(GameLogic.ins().postAttackSucceed, this.update);
    }, e.prototype.close = function() {
        this.removeEvents(), this.removeObserve();
    }, e.prototype.update = function() {
        var t = EntityManager.ins().getEntityByHandle(CustomEnemyManager.ins().curEnemyHandle);
        t || (t = EntityManager.ins().getEntityBymasterhHandle(CustomEnemyManager.ins().curEnemyHandle)), 
        0 == ChiJi.ins().guishuHandle || !t || t.infoModel.handle != ChiJi.ins().guishuHandle && t.infoModel.masterHandle != ChiJi.ins().guishuHandle ? this.removeeff() : this.addeff();
    }, e.prototype.addeff = function() {
        this.mc || (this.mc = new MovieClip(), this.mc.playFile(ResPath.getUIEffectPath(UiEffectType.Type28), -1), 
        this.mcCon.addChild(this.mc));
    }, e.prototype.removeeff = function() {
        this.mc && (DisplayUtils.removeFromParent(this.mc), this.mc.stop(), this.mc = null);
    }, e.prototype.setData = function() {
        var t = EntityManager.ins().getEntityBymasterhHandle(ChiJi.ins().guishuHandle);
        if (t || (t = EntityManager.ins().getEntityByHandle(ChiJi.ins().guishuHandle)), 
        t) {
            var e = t.infoModel;
            this.headIcon.source = ResPath.getHeadIcon(e.sex, 1), this.powerTxt.text = e.power + "", 
            this.nameTxt.text = e.name;
        }
    }, e.prototype.onClick = function(t) {
        var e = SubRoles.ins().getSubRoleByIndex(0);
        0 != ChiJi.ins().guishuHandle && (e.handle == ChiJi.ins().guishuHandle || e.masterHandle == ChiJi.ins().guishuHandle ? UserTips.ins().showTips("不能攻击自己") : ChiJi.ins().sendServerData25(ChiJi.ins().guishuHandle));
    }, e;
}(BaseView);

__reflect(ChiJiGuishuItem.prototype, "ChiJiGuishuItem");

window.ChiJiGuishuItem = ChiJiGuishuItem;

var ChiJiMyItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        e.skinName = "ChiJiMyItemSkin", e.bar = new CoolingQueueMcForCircle(e.hpBar, 90);
        var i = SubRoles.ins().getSubRoleByIndex(0);
        return e.headIcon.source = ResPath.getHeadIcon(i.sex, 1), e;
    }
    return __extends(e, t), e.prototype.open = function() {
        this.observe(GameLogic.ins().postHpChange, this.updateMyHp), this.observe(GameLogic.ins().postRoleState, this.updateMyHp), 
        this.observe(ChiJi.ins().postServerData53, this.updateScore), this.scoreTxt.text = "", 
        this.rankTxt.text = "";
    }, e.prototype.close = function() {
        this.removeEvents();
    }, e.prototype.updateMyHp = function() {
        var t = SubRoles.ins().getSubRoleByIndex(0), e = t.getAtt(AttributeType.atHp) || 0, i = t.getAtt(AttributeType.atMaxHp) || 0;
        GameLogic.ins().roleAlive || (e = 0);
        var n = e / i * 360;
        this.bar.setProgress(n, 360);
    }, e.prototype.updateScore = function() {
        this.scoreTxt.text = ChiJi.ins().myScore + "", this.rankTxt.text = ChiJi.ins().myRank + "";
    }, e;
}(BaseView);

__reflect(ChiJiMyItem.prototype, "ChiJiMyItem");

window.ChiJiMyItem = ChiJiMyItem;

var ChiJiSkillItem = function(t) {
    function e(i) {
        var n = t.call(this) || this;
        switch (n.skinName = "ChiJiSkillSkin", n.type = i, n.type) {
          case e.TYPE_1:
            n.cdShow = new IconCD(1, n.iconBtn, n.iconBtn.width, n.iconBtn.height, n.iconBtn.width >> 1, GlobalConfig.ins().JueDiQiuShengSkillCfg.wznx_deadTimes);
            break;

          case e.TYPE_2:
            n.cdShow = new IconCD(1, n.iconBtn, n.iconBtn.width, n.iconBtn.height, n.iconBtn.width >> 1, GlobalConfig.ins().JueDiQiuShengSkillCfg.jdqs_coolTime);
        }
        return n.iconBtn.icon = "chiji_skillIcon" + n.type, n.skillNameImg.source = "chiji_skillName" + n.type, 
        n.mc = new MovieClip(), n.mc.x = (n.iconBtn.width >> 1) + 7, n.mc.y = (n.iconBtn.height >> 1) + 0, 
        n;
    }
    return __extends(e, t), e.prototype.open = function() {
        this.addTouchEvent(this.iconBtn, this.onClick);
    }, e.prototype.close = function() {
        this.removeEvents(), this.removeEff(), TimerManager.ins().removeAll(this);
    }, e.prototype.update = function() {
        var t = ChiJiData5.ins();
        switch (TimerManager.ins().remove(this.updateCD, this), this.type) {
          case e.TYPE_1:
            break;

          case e.TYPE_2:
            t.cd2 > 0 && TimerManager.ins().doTimer(1e3, 0, this.updateCD, this);
        }
        this.updateCD();
    }, e.prototype.updateCD = function() {
        var t, i = ChiJiData5.ins();
        switch (this.type) {
          case e.TYPE_1:
            0 == i.cd1 ? this.addEff() : this.removeEff(), t = i.cd1;
            break;

          case e.TYPE_2:
            var n = Math.floor((i.limitTime - egret.getTimer()) / 1e3);
            i.cd2 = n, 0 >= n ? (TimerManager.ins().remove(this.updateCD, this), i.cd2 = 0, 
            this.addEff()) : this.removeEff(), t = i.cd2;
        }
        this.cdShow.CD = t;
    }, e.prototype.addEff = function() {
        this.mc.playFile(ResPath.getUIEffectPath(UiEffectType.Type27), -1), this.addChild(this.mc);
    }, e.prototype.removeEff = function() {
        this.mc.stop(), DisplayUtils.removeFromParent(this.mc);
    }, e.prototype.onClick = function(t) {
        var i = ChiJiData5.ins();
        switch (this.type) {
          case e.TYPE_1:
            i.cd1 > 0 ? UserTips.ins().showTips("死亡" + GlobalConfig.ins().JueDiQiuShengSkillCfg.wznx_deadTimes + "可激活一次") : ChiJi.ins().sendServerData64(10);
            break;

          case e.TYPE_2:
            i.cd2 > 0 ? UserTips.ins().showTips("技能冷却中") : ChiJi.ins().sendServerData64(20);
        }
    }, e.TYPE_1 = 1, e.TYPE_2 = 2, e;
}(BaseView);

__reflect(ChiJiSkillItem.prototype, "ChiJiSkillItem");

window.ChiJiSkillItem = ChiJiSkillItem;

var ClimbTowerBox = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "ClimbTowerBoxSkin", e;
    }
    return __extends(e, t), e.prototype.setData = function(t) {
        var e = ClimbTowerData0.ins().boxList[t.box - 1];
        this.item = t, this.starTxt.text = t.star + "", this.imgBox.source = "climbtower_box" + t.box + "_png", 
        this.isGetImg.visible = 1 == e, !this.isGetImg.visible && ClimbTowerData0.ins().getAllStar() >= t.star ? this.addEff() : this.removeEff(), 
        this.starItem.currentState = ClimbTowerData0.ins().getAllStar() >= t.star ? "2" : "1";
    }, e.prototype.open = function() {
        this.addTouchEvent(this.imgBox, this.onClick);
    }, e.prototype.close = function() {
        this.removeEvents(), this.removeEff();
    }, e.prototype.addEff = function() {
        this.eff || (this.eff = new MovieClip(), this.eff.playFile(ResPath.getUIEffectPath(UiEffectType.Type27), -1), 
        this.mcCon.addChild(this.eff));
    }, e.prototype.removeEff = function() {
        this.eff && (this.eff.stop(), DisplayUtils.removeFromParent(this.eff), this.eff = null);
    }, e.prototype.onClick = function(t) {
        ViewManager.ins().open(ClimbTowerRewardWin, this.item.box);
    }, e;
}(BaseView);

__reflect(ClimbTowerBox.prototype, "ClimbTowerBox");

window.ClimbTowerBox = ClimbTowerBox;

var ClimbTowerChapterView = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "ClimbTowerChapterSkin", e.chapterNum = BitmapNumber.ins().createNumPic(0, "num19", 10), 
        e.chapterCon.addChild(e.chapterNum), e;
    }
    return __extends(e, t), e.prototype.setData = function(t) {
        BitmapNumber.ins().changeNum(this.chapterNum, t, "num19", 13), this.chapterCon.x = this.imgChapter.x + 16 + (this.imgChapter.width - this.chapterNum.width >> 1);
    }, e;
}(BaseView);

__reflect(ClimbTowerChapterView.prototype, "ClimbTowerChapterView");

window.ClimbTowerChapterView = ClimbTowerChapterView;

var ClimbTowerChapterView1 = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "ClimbTowerChapterSkin1", e.chapterNum = BitmapNumber.ins().createNumPic(0, "num19", 10), 
        e.chapterCon.addChild(e.chapterNum), e;
    }
    return __extends(e, t), e.prototype.setData = function(t) {
        BitmapNumber.ins().changeNum(this.chapterNum, t, "num19", 13), this.imgChapter.x = this.chapterNum.width - 10;
    }, e;
}(BaseView);

__reflect(ClimbTowerChapterView1.prototype, "ClimbTowerChapterView1");

window.ClimbTowerChapterView1 = ClimbTowerChapterView1;

var ClimbTowerWin = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.itemHeight = 116, e.itemOffsetY = -27, e.max = 292, e.min = 16, e.maxLayer = 10, 
        e.curChapter = -1, e.chnNumChar = [ "零", "一", "二", "三", "四", "五", "六", "七", "八", "九" ], 
        e.chnUnitSection = [ "", "万", "亿", "万亿", "亿亿" ], e.chnUnitChar = [ "", "十", "百", "千" ], 
        e.skinName = "ClimbTowerSkin", e.initUI(), e;
    }
    return __extends(e, t), e.prototype.initUI = function() {
        this.list.dataProvider = null, this.list.itemRenderer = ClimbTowerItem, this.layerRewardList.itemRenderer = ItemBase, 
        this.topRankList.dataProvider = null, this.setSkinPart("box0", new ClimbTowerBox()), 
        this.setSkinPart("box1", new ClimbTowerBox()), this.setSkinPart("box2", new ClimbTowerBox()), 
        this.setSkinPart("chapterItem", new ClimbTowerChapterView()), this.setSkinPart("curChapterTipsItem", new ClimbTowerChapterView1()), 
        this.curChapterTipsItem.visible = !1, this.checkRankBtn.textFlow = new egret.HtmlTextParser().parse("<u>" + this.checkRankBtn.text + "</u>"), 
        TimerManager.ins().doTimer(1e3, 1, this.initScroller, this);
    }, e.prototype.initScroller = function() {
        this.scroll && this.scroll.verticalScrollBar && (this.scroll.verticalScrollBar.autoVisibility = !1, 
        this.scroll.verticalScrollBar.visible = !1);
    }, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.observe(ClimbTower.ins().postBaseInfo, this.updateData), this.list.addEventListener(eui.ItemTapEvent.ITEM_TAP, this.selectLayer, this), 
        this.scroll.addEventListener(egret.Event.CHANGE, this.onScrollChange, this), this.addTouchEvent(this.checkRankBtn, this.onClick), 
        this.addTouchEvent(this.challengeBtn, this.onClick), this.addTouchEvent(this.btnQuestion, this.onClick), 
        this.box0.open(), this.box1.open(), this.box2.open(), ClimbTower.ins().sendBaseInfo(), 
        this.setUpArrowMovie(), this.setDownArrowMovie();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeObserve(), this.removeEvents(), this.list.removeEventListener(eui.ItemTapEvent.ITEM_TAP, this.selectLayer, this), 
        this.scroll.removeEventListener(egret.Event.CHANGE, this.onScrollChange, this), 
        this.box0.close(), this.box1.close(), this.box2.close(), egret.Tween.removeTweens(this.curChapterTipsItem), 
        egret.Tween.removeTweens(this.upArrowImg), egret.Tween.removeTweens(this.downArrowImg), 
        this.removeEff();
    }, e.prototype.onScrollChange = function(t) {
        this.list.scrollV > this.max ? this.list.scrollV = this.max > 0 ? this.max : 0 : this.list.scrollV < this.min && (this.list.scrollV = this.min), 
        this.downArrowImg.visible = !(this.list.scrollV == this.max), this.upArrowImg.visible = !(this.list.scrollV == this.min);
    }, e.prototype.setUpArrowMovie = function() {
        var t = this;
        egret.Tween.get(this.upArrowImg).to({
            alpha: .5
        }, 500).to({
            alpha: 1
        }, 500).call(function() {
            t.setUpArrowMovie();
        });
    }, e.prototype.setDownArrowMovie = function() {
        var t = this;
        egret.Tween.get(this.downArrowImg).to({
            alpha: .5
        }, 500).to({
            alpha: 1
        }, 500).call(function() {
            t.setDownArrowMovie();
        });
    }, e.prototype.addEff = function() {
        this.eff || (this.eff = new MovieClip(), this.eff.playFile(ResPath.getUIEffectPath(UiEffectType.Type36), 1), 
        this.addChild(this.eff), this.eff.x = (this.width >> 1) - 50, this.eff.y = (this.height >> 1) - 50);
    }, e.prototype.removeEff = function() {
        this.eff && (this.eff.stop(), DisplayUtils.removeFromParent(this.eff), this.eff = null);
    }, e.prototype.updateData = function() {
        var t = this, e = ClimbTowerData0.ins();
        -1 != this.curChapter && this.curChapter != e.curChapter && (this.addEff(), this.curChapterTipsItem.setData(e.curChapter), 
        this.curChapterTipsItem.scaleX = 0, this.curChapterTipsItem.scaleY = 0, this.curChapterTipsItem.visible = !0, 
        this.curChapterTipsItem.alpha = 0, egret.Tween.get(this.curChapterTipsItem).to({
            alpha: 1,
            scaleX: 1,
            scaleY: 1
        }, 500).wait(1e3).to({
            alpha: 0
        }, 500).call(function() {
            t.curChapterTipsItem.visible = !1;
        })), this.curChapter = e.curChapter;
        var i = GlobalConfig.ins().GhostTowerDetailConfig[e.curChapter];
        i.sort(this.sortData), this.list.dataProvider = new eui.ArrayCollection(i), this.chapterItem.setData(e.curChapter), 
        this.list.selectedIndex = this.maxLayer - e.curLayer, this.setLayerData(GlobalConfig.ins().GhostTowerDetailConfig[e.curChapter][this.maxLayer - e.curLayer]), 
        this.setPos(), this.leftNumTxt.text = e.leftTime + "/" + GlobalConfig.ins().GhostTowerCommonConfig.challenge, 
        this.setStarBoxReward(), this.setTopRankList();
        var n = GlobalConfig.ins().GhostTowerChapterConfig[ClimbTowerData0.ins().curChapter];
        this.curStarTxt.text = "(" + e.getAllStar() + "/" + n[2].star + ")";
    }, e.prototype.setPos = function() {
        this.list.validateNow();
        var t = this.maxLayer - ClimbTowerData0.ins().curLayer, e = t * (this.itemHeight + this.itemOffsetY);
        this.list.scrollV = e, this.onScrollChange(null);
    }, e.prototype.selectLayer = function(t) {
        var e = t.item;
        this.setLayerData(e);
    }, e.prototype.setLayerData = function(t) {
        var e, i = ClimbTowerData0.ins().curLayer < t.layer || 0 == ClimbTowerData0.ins().starList[t.layer - 1];
        i ? (e = t.firstAward, this.layerRewardTitle.text = "第" + t.layer + "层首通奖励") : (e = t.circleAward, 
        this.layerRewardTitle.text = "第" + t.layer + "层普通奖励"), this.layerRewardList.dataProvider = new eui.ArrayCollection(e), 
        this.challengeLayer = t.layer;
    }, e.prototype.setStarBoxReward = function() {
        var t = GlobalConfig.ins().GhostTowerChapterConfig[ClimbTowerData0.ins().curChapter];
        this.box0.setData(t[0]), this.box1.setData(t[1]), this.box2.setData(t[2]);
    }, e.prototype.setTopRankList = function() {
        for (var t = ClimbTowerData0.ins().rankList, e = [], i = 0; 3 > i; i++) if (t[i]) {
            var n = "0xffff00", s = t[i].rank + "." + t[i].name + "  " + t[i].chapter + "重天" + t[i].layer + "层";
            switch (i) {
              case 0:
                n = "0xff00ff";
                break;

              case 2:
                n = "0x49c5cd";
            }
            e.push({
                content: s,
                contentColor: n
            });
        }
        this.topRankList.dataProvider = new eui.ArrayCollection(e);
    }, e.prototype.onClick = function(t) {
        switch (t.target) {
          case this.checkRankBtn:
            ViewManager.ins().open(ClimbTowerRankWin);
            break;

          case this.btnQuestion:
            UserWarn.ins().showCommonTips(LangManager.climbtower_str0, !0);
            break;

          case this.challengeBtn:
            this.challengeLayer > ClimbTowerData0.ins().curLayer ? UserTips.ins().showTips("未到达该层数") : ClimbTower.ins().sendChallenge(this.challengeLayer);
        }
    }, e.prototype.sortData = function(t, e) {
        return t.layer < e.layer ? 1 : t.layer > e.layer ? -1 : 0;
    }, e.prototype.SectionToChinese = function(t) {
        for (var e = "", i = "", n = 0, s = !0; t > 0; ) {
            var a = t % 10;
            0 == a ? s || (s = !0, i = this.chnNumChar[a] + i) : (s = !1, e = this.chnNumChar[a], 
            e += this.chnUnitChar[n], i = e + i), n++, t = Math.floor(t / 10);
        }
        return i;
    }, e.prototype.NumberToChinese = function(t) {
        var e = 0, i = "", n = "", s = !1;
        if (0 == t) return this.chnNumChar[0];
        for (;t > 0; ) {
            var a = t % 1e4;
            s && (n = this.chnNumChar[0] + n), i = this.SectionToChinese(a), i += 0 !== a ? this.chnUnitSection[e] : this.chnUnitSection[0], 
            n = i + n, s = 1e3 > a && a > 0, t = Math.floor(t / 1e4), e++;
        }
        return n;
    }, e;
}(BaseView);

__reflect(ClimbTowerWin.prototype, "ClimbTowerWin");

window.ClimbTowerWin = ClimbTowerWin;

var CrossBossGuishuItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "KuaFuWarGuishuSkin", e.guishuBtn.labelDisplay.size = 18, e;
    }
    return __extends(e, t), e.prototype.open = function() {
        this.addTouchEvent(this.guishuBtn, this.onClick), this.observe(GameLogic.ins().postAttackFaild, this.update), 
        this.observe(GameLogic.ins().postAttackSucceed, this.update);
    }, e.prototype.close = function() {
        this.removeEvents(), this.removeObserve();
    }, e.prototype.update = function() {
        var t = EntityManager.ins().getEntityByHandle(CustomEnemyManager.ins().curEnemyHandle);
        t || (t = EntityManager.ins().getEntityBymasterhHandle(CustomEnemyManager.ins().curEnemyHandle)), 
        0 == CrossBoss.ins().guishuHandle || !t || t.infoModel.handle != CrossBoss.ins().guishuHandle && t.infoModel.masterHandle != CrossBoss.ins().guishuHandle ? this.removeeff() : this.addeff();
    }, e.prototype.addeff = function() {
        this.mc || (this.mc = new MovieClip(), this.mc.playFile(ResPath.getUIEffectPath(UiEffectType.Type28), -1), 
        this.mcCon.addChild(this.mc));
    }, e.prototype.removeeff = function() {
        this.mc && (DisplayUtils.removeFromParent(this.mc), this.mc.stop(), this.mc = null);
    }, e.prototype.setData = function() {
        var t = EntityManager.ins().getEntityBymasterhHandle(CrossBoss.ins().guishuHandle);
        if (t || (t = EntityManager.ins().getEntityByHandle(CrossBoss.ins().guishuHandle)), 
        t) {
            var e = t.infoModel;
            this.headIcon.source = ResPath.getHeadIcon(e.sex, 1), this.powerTxt.text = e.power + "", 
            this.nameTxt.text = e.name;
        }
    }, e.prototype.onClick = function(t) {
        var e = SubRoles.ins().getSubRoleByIndex(0);
        0 != CrossBoss.ins().guishuHandle && (e.handle == CrossBoss.ins().guishuHandle || e.masterHandle == CrossBoss.ins().guishuHandle ? UserTips.ins().showTips("不能攻击自己") : CrossBoss.ins().sendServerData12(CrossBoss.ins().guishuHandle));
    }, e;
}(BaseView);

__reflect(CrossBossGuishuItem.prototype, "CrossBossGuishuItem");

window.CrossBossGuishuItem = CrossBossGuishuItem;

var CrossWarGuishuItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "KuaFuWarGuishuSkin", e.guishuBtn.labelDisplay.size = 18, e;
    }
    return __extends(e, t), e.prototype.open = function() {
        this.addTouchEvent(this.guishuBtn, this.onClick), this.observe(GameLogic.ins().postAttackFaild, this.update), 
        this.observe(GameLogic.ins().postAttackSucceed, this.update);
    }, e.prototype.close = function() {
        this.removeEvents(), this.removeObserve();
    }, e.prototype.update = function() {
        var t = EntityManager.ins().getEntityByHandle(CustomEnemyManager.ins().curEnemyHandle);
        t || (t = EntityManager.ins().getEntityBymasterhHandle(CustomEnemyManager.ins().curEnemyHandle)), 
        0 == CrossWar.ins().guishuHandle || !t || t.infoModel.handle != CrossWar.ins().guishuHandle && t.infoModel.masterHandle != CrossWar.ins().guishuHandle ? this.removeeff() : this.addeff();
    }, e.prototype.addeff = function() {
        this.mc || (this.mc = new MovieClip(), this.mc.playFile(ResPath.getUIEffectPath(UiEffectType.Type28), -1), 
        this.mcCon.addChild(this.mc));
    }, e.prototype.removeeff = function() {
        this.mc && (DisplayUtils.removeFromParent(this.mc), this.mc.stop(), this.mc = null);
    }, e.prototype.setData = function() {
        var t = EntityManager.ins().getEntityBymasterhHandle(CrossWar.ins().guishuHandle);
        if (t || (t = EntityManager.ins().getEntityByHandle(CrossWar.ins().guishuHandle)), 
        t) {
            var e = t.infoModel;
            this.headIcon.source = ResPath.getHeadIcon(e.sex, 1), this.powerTxt.text = e.power + "", 
            this.nameTxt.text = e.name;
        }
    }, e.prototype.onClick = function(t) {
        var e = SubRoles.ins().getSubRoleByIndex(0);
        0 != CrossWar.ins().guishuHandle && (e.handle == CrossWar.ins().guishuHandle || e.masterHandle == CrossWar.ins().guishuHandle ? UserTips.ins().showTips("不能攻击自己") : CrossWar.ins().sendServerData40(CrossWar.ins().guishuHandle));
    }, e;
}(BaseView);

__reflect(CrossWarGuishuItem.prototype, "CrossWarGuishuItem");

window.CrossWarGuishuItem = CrossWarGuishuItem;

var CrossZhanGongRewardView = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.typeList = [], e.skinName = "CrossZhanGongRewardSkin", e.list.dataProvider = null, 
        e.list.itemRenderer = CrossZhanGongRewardItem, e.typeList[0] = CrossWar.ins().IDX2, 
        e.typeList[1] = CrossWar.ins().IDX1, e;
    }
    return __extends(e, t), e.prototype.open = function() {
        this.tab.addEventListener(eui.ItemTapEvent.ITEM_TAP, this.onTabLick, this), this.observe(CrossZhanGong.ins().postMyResult, this.updateData), 
        this.tab.selectedIndex = 0, ServerCross.ins().isInCross() ? CrossZhanGong.ins().sendServerData12() : CrossZhanGong.ins().sendServerData22();
    }, e.prototype.close = function() {
        this.tab.removeEventListener(eui.ItemTapEvent.ITEM_TAP, this.onTabLick, this), this.removeObserve();
    }, e.prototype.updateData = function() {
        this.onTabLick();
    }, e.prototype.onTabLick = function(t) {
        void 0 === t && (t = null);
        var e = GlobalConfig.ins().KFZGBRewardCfg[this.typeList[this.tab.selectedIndex]];
        this.list.dataProvider = new eui.ArrayCollection(e);
    }, e;
}(BaseView);

__reflect(CrossZhanGongRewardView.prototype, "CrossZhanGongRewardView");

window.CrossZhanGongRewardView = CrossZhanGongRewardView;

var CrossZSBossGuishuItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "WuShuangGuishuSkin", e;
    }
    return __extends(e, t), e.prototype.open = function() {
        this.observe(GameLogic.ins().postAttackFaild, this.update), this.observe(GameLogic.ins().postAttackSucceed, this.update);
    }, e.prototype.close = function() {
        this.removeEvents();
    }, e.prototype.update = function() {
        var t = EntityManager.ins().getEntityByHandle(CustomEnemyManager.ins().curEnemyHandle);
        t || (t = EntityManager.ins().getEntityBymasterhHandle(CustomEnemyManager.ins().curEnemyHandle)), 
        0 == CrossZSBoss.ins().guishuHandle || !t || t.infoModel.handle != CrossZSBoss.ins().guishuHandle && t.infoModel.masterHandle != CrossZSBoss.ins().guishuHandle ? this.removeeff() : this.addeff();
    }, e.prototype.addeff = function() {
        this.mc || (this.mc = new MovieClip(), this.mc.playFile(ResPath.getUIEffectPath(UiEffectType.Type28), -1), 
        this.mcCon.addChild(this.mc));
    }, e.prototype.removeeff = function() {
        this.mc && (DisplayUtils.removeFromParent(this.mc), this.mc.stop(), this.mc = null);
    }, e.prototype.setData = function() {
        var t = EntityManager.ins().getEntityBymasterhHandle(CrossZSBoss.ins().guishuHandle);
        if (t || (t = EntityManager.ins().getEntityByHandle(CrossZSBoss.ins().guishuHandle)), 
        t) {
            var e = t.infoModel;
            this.headIcon.source = ResPath.getHeadIcon(e.sex, 1), this.powerTxt.text = e.power + "", 
            this.nameTxt.text = e.name;
        }
    }, e;
}(BaseView);

__reflect(CrossZSBossGuishuItem.prototype, "CrossZSBossGuishuItem");

window.CrossZSBossGuishuItem = CrossZSBossGuishuItem;

var DailyTaskScenePanel = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "DailyTaskSceneSkin", e;
    }
    return __extends(e, t), e.prototype.init = function() {
        this.monsterName.text = "", this.monsterNum.text = "";
    }, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.init(), this.observe(DailyTask.ins().postKillMonsterNum, this.updateInfo), 
        this.updateInfo(DailyTaskData.ins().killMonsterNum);
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeObserve();
    }, e.prototype.updateInfo = function(t) {
        var e = DailyTaskData.ins(), i = GlobalConfig.ins().CircleMonsterConfig[e.index][e.mapId - 1][e.monsterId - 1].targetNum;
        t >= i ? this.monsterNum.text = "(完成)" : this.monsterNum.text = t + "/" + i;
        var n = GlobalConfig.ins().MonstersConfig(e.monsterId);
        this.monsterName.text = n.name;
    }, e;
}(BaseView);

__reflect(DailyTaskScenePanel.prototype, "DailyTaskScenePanel");

window.DailyTaskScenePanel = DailyTaskScenePanel;

var DragonAdvanceWin = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.data = DragonData.ins(), e.skinName = "DragonAdvanceSkin", e.name = "进阶", 
        e.totalPower || (e.totalPower = BitmapNumber.ins().createNumPic(0, BitmapNumber.numType0, 10), 
        e.powerContainer.addChild(e.totalPower), BitmapNumber.ins().changeNum(e.totalPower, 0, BitmapNumber.numType0, 2)), 
        e.upEff = new MovieClip(), e.wayTxt.textFlow = new egret.HtmlTextParser().parser("<u>获取道具</u>"), 
        e.list.itemRenderer = DragonItemWin, e.list.dataProvider = new eui.ArrayCollection(), 
        e.setSkinPart("expBar", new CommonProgressBar("BarCom2Skin", 9, 7, 430, 11, !0)), 
        e.baojiMc || (e.baojiMc = new MovieClip()), e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEndEvent(this.upBtn, this.onClick), this.addTouchEndEvent(this.wayTxt, this.onClick), 
        this.addTouchEndEvent(this.list, this.onClick), this.observe(Dragon.ins().postUpData, this.upData), 
        this.observe(Dragon.ins().postBackUpgrade, this.upBackUpgrade), this.observe(Dragon.ins().postBackUpgrade2, this.upBackUpgrade2), 
        this.observe(Dragon.ins().postState, this.upData), this.observe(Dragon.ins().postDragonInfo, this.upData), 
        this.observe(Dragon.ins().postLongZhu, this.upData), this.observe(UserBag.ins().postItemAdd, this.upData), 
        this.observe(UserBag.ins().postItemDel, this.upData), this.observe(Recharge.ins().postBuyDragonBag, this.upData), 
        this.data.isBaoJie = !1, this.upData(), DragonData.ins().isAutoUpgrade = !1, this.upBtn.label = this.data.curStar == GlobalConfig.ins().DragonCommonConfig.maxStar ? "一键进阶" : "一键升星";
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeEvents(), this.removeObserve(), this.baojiMc && DisplayUtils.removeFromParent(this.baojiMc), 
        DragonData.ins().isAutoUpgrade = !1;
    }, e.prototype.upData = function() {
        var t = DragonData.ins(), e = t.dragonLv;
        if (0 != e && t.isDragon) {
            var i = GlobalConfig.ins().DragonLevelConfig[e][t.curStar - 1], n = GlobalConfig.ins().DragonStageConfig[e], s = GlobalConfig.ins().DragonCommonConfig.maxStar, a = DragonLevelConfig.getNextConfig(e, t.curStar);
            t.isBaoJie && (this.baojiMc.playFile(ResPath.getUIEffectPath(UiEffectType.Type34), 1), 
            this.baoCon.addChild(this.baojiMc), t.isBaoJie = !1), this.nameImg.source = t.dragonLv % 10 == 0 ? "dragon_dun10" : "dragon_dun" + t.dragonLv % 10, 
            this.midAttr.text = AttributeData.getAttStr(i.attrs, 0, 1, ": "), this.list.dataProvider = new eui.ArrayCollection(t.lingzhuArr), 
            this.lvImg.source = "advance_lv" + e + "_png", this.dunIcon.source = e > 10 ? "dragon_dun10_png" : "dragon_dun" + e + "_png";
            var o = Math.floor(UserBag.getAttrPower(i.attrs)) * SubRoles.ins().subRolesLen;
            BitmapNumber.ins().changeNum(this.totalPower, o, BitmapNumber.numType0, 2);
            var r = "";
            if (t.curStar >= s) {
                this.isFullStar = !0, this.itemImg.source = "dragon_longhun", this.itemId = n.itemId;
                var h = UserBag.ins().getBagGoodsCountById(UserBag.BAG_TYPE_OTHTER, n.itemId);
                r = h >= n.itemNum ? "|C:0x00ff00&T:" + h + "|/" + n.itemNum : "|C:0xff0000&T:" + h + "|/" + n.itemNum, 
                this.expBar.maxvalue = n.exp, this.expBar.value = t.jieExp;
            } else {
                this.isFullStar = !1, this.itemImg.source = "dragon_longlin", this.itemId = i.itemId;
                var l = UserBag.ins().getBagGoodsCountById(UserBag.BAG_TYPE_OTHTER, i.itemId);
                r = l >= i.cost ? "|C:0x00ff00&T:" + l + "|/" + i.cost : "|C:0xff0000&T:" + l + "|/" + i.cost, 
                this.expBar.maxvalue = i.exp, this.expBar.value = t.starExp;
            }
            if (this.numTxt.textFlow = TextFlowMaker.generateTextFlow(r), a ? (this.currentState = "not", 
            this.curAttr.text = AttributeData.getAttStr(a.attrs, 0, 1, ": "), DragonData.ins().isAutoUpgrade || (this.upBtn.label = t.curStar == s ? "一键进阶" : "一键升星"), 
            this.upBtn.icon = t.curStar == XianjieConfig.getMaxStar() ? "common_btn4_png" : "common_btn5_png") : (this.currentState = "max", 
            this.expBar.maxvalue = 100, this.expBar.value = 100), this.curStar != t.curStar) for (var u = 0; 10 > u; u++) this.setSkinPart("item" + u, new DragonStarWin()), 
            u < t.curStar ? this["item" + u].data = t.curStar : this["item" + u].data = null;
            this.curStar = t.curStar;
        }
    }, e.prototype.onClick = function(t) {
        switch (t.target) {
          case this.upBtn:
            if (this.isFullStar) {
                var e = GlobalConfig.ins().DragonStageConfig[this.data.dragonLv], i = UserBag.ins().getBagItemById(e.itemId);
                i && i.count >= e.itemNum ? (DragonData.ins().isAutoUpgrade = !DragonData.ins().isAutoUpgrade, 
                this.doAutoUpgrade2()) : UserWarn.ins().setBuyGoodsWarn(GlobalConfig.ins().DragonStageConfig[this.data.dragonLv].itemId);
            } else {
                var e = GlobalConfig.ins().DragonLevelConfig[this.data.dragonLv][this.data.curStar - 1], i = UserBag.ins().getBagItemById(e.itemId);
                i && i.count >= e.cost ? (DragonData.ins().isAutoUpgrade = !DragonData.ins().isAutoUpgrade, 
                this.doAutoUpgrade()) : UserWarn.ins().setBuyGoodsWarn(GlobalConfig.ins().DragonLevelConfig[this.data.dragonLv][this.data.curStar - 1].itemId);
            }
            break;

          case this.wayTxt:
            this.itemId && UserWarn.ins().setBuyGoodsWarn(this.itemId);
        }
    }, e.prototype.upBackUpgrade = function() {
        TimerManager.ins().doTimer(500, 1, this.doAutoUpgrade, this);
    }, e.prototype.upBackUpgrade2 = function() {
        TimerManager.ins().doTimer(500, 1, this.doAutoUpgrade2, this);
    }, e.prototype.doAutoUpgrade = function() {
        var t = (DragonData.ins(), GlobalConfig.ins().DragonCommonConfig.maxStar);
        if (DragonData.ins().isAutoUpgrade) {
            this.upBtn.label = "停 止";
            var e = GlobalConfig.ins().DragonLevelConfig[this.data.dragonLv][this.data.curStar - 1], i = UserBag.ins().getBagItemById(e.itemId);
            i && i.count >= e.cost ? Dragon.ins().sendUpStar() : this.upBtn.label = this.data.curStar == t ? "一键进阶" : "一键升星";
        } else this.upBtn.label = this.data.curStar == t ? "一键进阶" : "一键升星";
    }, e.prototype.doAutoUpgrade2 = function() {
        var t = (DragonData.ins(), GlobalConfig.ins().DragonCommonConfig.maxStar);
        if (DragonData.ins().isAutoUpgrade) {
            this.upBtn.label = "停 止";
            var e = GlobalConfig.ins().DragonStageConfig[this.data.dragonLv], i = UserBag.ins().getBagItemById(e.itemId);
            i && i.count >= e.itemNum ? Dragon.ins().sendUpJie() : this.upBtn.label = this.data.curStar == t ? "一键进阶" : "一键升星";
        } else this.upBtn.label = this.data.curStar == t ? "一键进阶" : "一键升星";
    }, e;
}(BaseView);

__reflect(DragonAdvanceWin.prototype, "DragonAdvanceWin");

window.DragonAdvanceWin = DragonAdvanceWin;

var DragonZhuWin = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.config = DragonData.ins().config, e.NAME = [ "金灵珠", "木灵珠", "水灵珠", "火灵珠", "土灵珠" ], 
        e.index = 0, e.power = 0, e.skinName = "DragonZhuSkin", e.name = "进阶", e.totalPower || (e.totalPower = BitmapNumber.ins().createNumPic(0, BitmapNumber.numType0, 10), 
        e.powerContainer.addChild(e.totalPower), BitmapNumber.ins().changeNum(e.totalPower, e.power, BitmapNumber.numType0, 2)), 
        e.wayTxt.textFlow = new egret.HtmlTextParser().parser("<u>获取道具</u>"), e.list.itemRenderer = DragonHintItemWin, 
        e.list.dataProvider = new eui.ArrayCollection(), e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEndEvent(this.upBtn, this.onClick), this.addTouchEndEvent(this.wayTxt, this.onClick), 
        this.addTouchEndEvent(this.itemG, this.onClick), this.addTouchEndEvent(this.giftBtn, this.onClick), 
        this.observe(Dragon.ins().postUpData, this.upData), this.observe(Dragon.ins().postLongZhu, this.upData), 
        this.observe(Dragon.ins().postState, this.upData), this.observe(Dragon.ins().postDragonInfo, this.upData), 
        this.observe(UserBag.ins().postItemAdd, this.upData), this.observe(UserBag.ins().postItemDel, this.upData), 
        this.observe(Recharge.ins().postBuyWuxingElement, this.upData), this.upData();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeEvents(), this.removeObserve();
    }, e.prototype.upData = function() {
        for (var t = DragonData.ins(), i = 0; i < t.lingzhuArr.length; i++) {
            this["item" + i];
            this.setSkinPart("item" + i, new DragonZhuItemWin()), this["item" + i].data = t.lingzhuArr[i];
        }
        this.power = 0;
        for (var i = 0; i < t.lingzhuArr.length; i++) {
            var n = t.lingzhuArr[i].lv;
            if (n >= 0 && this.config[i] && this.config[i][n]) {
                var s = Math.floor(UserBag.getAttrPower(this.config[i][n].attrs)) * SubRoles.ins().subRolesLen, a = Math.floor(UserBag.getAttrPower(this.config[i][n].commonAttr)) * SubRoles.ins().subRolesLen;
                this.power += s, this.power += a;
            }
        }
        BitmapNumber.ins().changeNum(this.totalPower, this.power, BitmapNumber.numType0, 2), 
        this.giftCon.visible = RebateData10.ins().checkShowIcon(), this.redPoint.visible = !e.firstTap && RebateData10.ins().checkShowIcon(), 
        this.attr(this.index), this.setSelected(this.index);
    }, e.prototype.onClick = function(t) {
        switch (t.target) {
          case this.upBtn:
            var i = DragonData.ins().lingzhuArr[this.index].lv;
            DragonData.ins().lingzhuArr[this.index].count >= this.config[this.index][i].cost ? Dragon.ins().sendUpLongZhu(this.index + 1) : UserWarn.ins().setBuyGoodsWarn(this.id);
            break;

          case this.giftBtn:
            e.firstTap = !0, Dragon.ins().postDragonInfo(), ViewManager.ins().open(RebateHallWin, this.getTabData());
            break;

          case this.wayTxt:
            UserWarn.ins().setBuyGoodsWarn(this.id);
        }
        if (t.target.parent instanceof DragonZhuItemWin) {
            var n = t.target.parent.index;
            this.attr(n), this.index = n, this.setSelected(n);
        }
    }, e.prototype.attr = function(t) {
        var e = DragonData.ins(), i = e.dragonLv, n = GlobalConfig.ins().DragonStageConfig[i], s = GlobalConfig.ins().DragonStageConfig[i + 1];
        this.nameTxt.text = "" + this.NAME[t], this.nameTxt.text = "" + this.NAME[t], this.nameImg.source = "dragon_name" + (t + 1);
        var a = this.config, o = e.lingzhuArr[t].lv;
        this.id = a[t][o].itemId, this.lvTxt.text = o + "\n级", this.zhuImg.source = "dragon_zhu" + (t + 1), 
        a[t] && (a[t][o + 1] ? (e.lingzhuArr[t].lv < n.maxUpLevel ? this.currentState = "not" : (this.currentState = "confine", 
        s ? this.hintTxt.textFlow = TextFlowMaker.generateTextFlow("达到|C:0x00ff00&T:" + (i + 1) + "阶|龙盾可继续升级到|C:0x00ff00&T:" + s.maxUpLevel + "级|") : this.hintTxt.text = "已达到最高级,后续敬请期待"), 
        this.curAttr.text = AttributeData.getAttStr(a[t][o + 1].attrs, 0, 1, ": ")) : this.currentState = "max"), 
        this.midAttr.text = o > 0 ? AttributeData.getAttStr(a[t][o].attrs, 0, 1, ": ") : "龙盾: 0\n龙力: 0";
        var r = "";
        r = e.lingzhuArr[t].count >= a[t][o].cost ? "|C:0x00ff00&T:" + e.lingzhuArr[t].count + "|/" + a[t][o].cost : "|C:0xff0000&T:" + e.lingzhuArr[t].count + "|/" + a[t][o].cost, 
        this.numTxt.textFlow = TextFlowMaker.generateTextFlow(r);
        for (var h = GlobalConfig.ins().DragonCommonConfig, l = [], u = 0; u < h.longzhuSkill[1]; u++) {
            var p = {};
            p.lv = o, p.id = t, l.push(p);
        }
        this.list.dataProvider = new eui.ArrayCollection(l);
        var c = Math.floor(o / h.longzhuSkill[0]);
        this.scroller.viewport.validateNow();
        this.scroller.viewport.contentHeight - this.scroller.height;
        22 * c > this.scroller.height ? this.scroller.viewport.scrollV = 22 * c - this.scroller.height : this.scroller.viewport.scrollV = 0;
    }, e.prototype.setSelected = function(t) {
        for (var e = 0; 5 > e; e++) {
            var i = void 0;
            i = this["item" + e], i.currentState = "up";
        }
        this["item" + t].currentState = "down";
    }, e.prototype.getTabData = function() {
        var t = 0;
        return RebateData1.ins().isGetData && (t += 1), PrettyGiftData.ins().checkShowIcon() && (t += 1), 
        RebateData9.ins().checkShowIcon() && (t += 1), RebateData7.ins().getIsOpen() && (t += 1), 
        RebateData10.ins().checkShowIcon() && (t += 1), t;
    }, e;
}(BaseView);

__reflect(DragonZhuWin.prototype, "DragonZhuWin");

window.DragonZhuWin = DragonZhuWin;

var DuanwuAcitvitySubItem6 = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "DuanwuAcitvitySubItemSkin6", e.ybNum = BitmapNumber.ins().createNumPic(0, "num22", 4), 
        e.addChild(e.ybNum), e;
    }
    return __extends(e, t), e.prototype.open = function() {}, e.prototype.close = function() {
        this.removeEvents();
    }, e.prototype.setData = function(t) {
        this.config = t;
        var e = this.config.pay;
        BitmapNumber.ins().changeNum(this.ybNum, e, "num22", 6), this.ybNum.x = this.imgBg.x + 20, 
        this.ybNum.y = this.imgTitle.y, this.imgTitle.x = this.ybNum.x + this.ybNum.width - 10, 
        this.imgRedPoint.visible = NewYearActivityData4.ins().getCanGet(this.config.index), 
        this.isGetImg.visible = NewYearActivityData4.ins().getIsGet(this.config.index), 
        this.index = this.config.index;
    }, Object.defineProperty(e.prototype, "select", {
        get: function() {
            return this._select;
        },
        set: function(t) {
            t && MessageCenter.ins().dispatch(NewYearActivitySubPanel4.SELECT_FUBAO_GIFT, this.config), 
            this._select = t, this.selectIcon.visible = t;
        },
        enumerable: !0,
        configurable: !0
    }), e;
}(BaseView);

__reflect(DuanwuAcitvitySubItem6.prototype, "DuanwuAcitvitySubItem6");

window.DuanwuAcitvitySubItem6 = DuanwuAcitvitySubItem6;

var DuanwuAcitvitySubPanel0 = function(t) {
    function e() {
        var e = t.call(this) || this;
        e.skinName = "DuanwuAcitvitySubSkin0", e.list.itemRenderer = ItemBase;
        for (var i = NewYearActivityData0.ins().getLen(), n = 0; n < i.length; n++) e.setSkinPart("day" + i[n].day, new DuanwuAcitvitySubItem0()), 
        e["day" + i[n].day].data = i[n];
        return e;
    }
    return __extends(e, t), e.prototype.initUI = function() {}, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEndEvent(this.btnGet, this.onBtnClick), this.addTouchEndEvent(this.day1, this.onItemTouch), 
        this.addTouchEndEvent(this.day2, this.onItemTouch), this.addTouchEndEvent(this.day3, this.onItemTouch), 
        this.addTouchEndEvent(this.day4, this.onItemTouch), this.addTouchEndEvent(this.day5, this.onItemTouch), 
        this.observe(NewyearActivity.ins().postDataInfo, this.updateData), this.updateData();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeEvents(), this.removeObserve(), this.selectItem = null;
    }, e.prototype.updateData = function() {
        var t = NewYearActivityData0.ins();
        this.loginDayTxt.text = "登陆天数：" + t.day, this.selectIndex = this.getNextIndex(), 
        this.selectDay();
        var e = DateUtils.formatMiniDateTime(t.eTime) - GameServer.serverTime;
        this.totalTime = e + egret.getTimer(), this.updateTime();
    }, e.prototype.onItemTouch = function(t) {
        t.target.parent instanceof DuanwuAcitvitySubItem0 && (this.selectIndex = t.target.parent.day), 
        null != this.selectItem && (this.selectItem.selected = !1), this.selectDay();
    }, e.prototype.upDayItem = function() {
        var t = NewYearActivityData0.ins();
        if (t.day) {
            var e = t.getLen();
            if (e[0]) for (var i = 0; i < e.length; i++) this["day" + e[i].day].redPoint.visible = t.day >= e[i].day && 0 == (t.flag >> e[i].day & 1), 
            this["day" + e[i].day].imgGet.visible = 1 == (t.flag >> e[i].day & 1), this["day" + e[i].day].selected = this.selectIndex == this["day" + e[i].day].day;
        }
    }, e.prototype.selectDay = function() {
        this.upDayItem();
        var t = this.selectIndex, e = NewYearActivityData0.ins();
        if (e.day) {
            var i = e.getLen()[t - 1];
            i && (this.list.dataProvider = new eui.ArrayCollection(i.rewards), this.btnGet.visible = !e.getFlag(t), 
            this.imgGet.visible = !this.btnGet.visible, t > e.day ? (this.btnGet.icon = "rebatehall_title2", 
            this.btnGet.enabled = !1, this.btnGet.filters = [ ColorUtil.colorMat ]) : (this.btnGet.icon = "rebatehall_title1", 
            this.btnGet.enabled = !0, this.btnGet.filters = null));
        }
    }, e.prototype.getNextIndex = function() {
        for (var t, e = NewYearActivityData0.ins(), i = e.getLen(), n = 0; n < i.length; n++) {
            t = i[n];
            var s = e.day >= t.day && 0 == (e.flag >> t.day & 1);
            if (s) return t.day;
        }
        var a = i[i.length - 1].day;
        return e.day > a ? a : e.day;
    }, e.prototype.onBtnClick = function(t) {
        if (t.target == this.btnGet) {
            var e = this.selectIndex;
            NewyearActivity.ins().sendGetDayReward(e);
        }
    }, e.prototype.updateTime = function() {
        var t = NewYearActivityData0.ins();
        this.timeTxt.text = CountdownHelp.countdown1(t.sTime, t.eTime, this.totalTime);
    }, e;
}(BaseView);

__reflect(DuanwuAcitvitySubPanel0.prototype, "DuanwuAcitvitySubPanel0");

window.DuanwuAcitvitySubPanel0 = DuanwuAcitvitySubPanel0;

var DuanwuAcitvitySubPanel1 = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "DuanwuAcitvitySubSkin1", e.listData = new eui.ArrayCollection(), 
        e.list.itemRenderer = DuanwuAcitvitySubItem1, e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEndEvent(this.btnRecharge, this.onBtnClick), this.addTouchEvent(this.list, this.onBtnClick), 
        this.observe(Recharge.ins().postHolidayTotalRechargeData, this.updateData), this.updateData();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeEvents(), this.removeObserve();
    }, e.prototype.updateData = function() {
        var t = HolidayActivityData0.ins();
        this.hasRecharge.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(LangManager.rechargeStr1, t.recharge));
        var e = DateUtils.formatMiniDateTime(t.eTime) - GameServer.serverTime;
        this.totalTime = e + egret.getTimer(), this.updateTime();
        var i = GlobalConfig.ins().HolidayTotalRechargeAwardConfig, n = [];
        for (var s in i) n.push(i[s]);
        n.sort(this.sortData), this.listData.replaceAll(n), this.list.dataProvider = this.listData;
    }, e.prototype.sortData = function(t, e) {
        var i = HolidayActivityData0.ins(), n = 1 == (i.flag >> t.index & 1), s = 1 == (i.flag >> e.index & 1);
        return n && s || !n && !s ? t.index > e.index ? 1 : t.index < e.index ? -1 : 0 : n ? 1 : -1;
    }, e.prototype.onBtnClick = function(t) {
        if (t.target instanceof eui.Button) if (t.target.parent instanceof DuanwuAcitvitySubItem1) {
            if (!t.target.parent.isCanGet) return void UserTips.ins().showTips("未达到条件");
            Recharge.ins().sendHolidayTotalRecahrgeAward(t.target.parent.index);
        } else t.target == this.btnRecharge && Recharge.ins().gameCharge(1);
    }, e.prototype.updateTime = function() {
        var t = HolidayActivityData0.ins();
        this.timeTxt.text = CountdownHelp.countdown1(t.sTime, t.eTime, this.totalTime);
    }, e;
}(BaseView);

__reflect(DuanwuAcitvitySubPanel1.prototype, "DuanwuAcitvitySubPanel1");

window.DuanwuAcitvitySubPanel1 = DuanwuAcitvitySubPanel1;

var EggBox = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "EggBoxSkin", e.setSkinPart("item", new ItemBase()), e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {}, e.prototype.open = function() {
        this.addTouchEvent(this.eggImg, this.onClick);
    }, e.prototype.close = function() {
        this.removeEvents();
    }, e.prototype.updateData = function(t) {
        this.index = t.index;
        var e = GlobalConfig.ins().CrazyDropEggRewardEgg[t.rewardIndex];
        this.eggImg.source = 0 == t.state ? "egg_bg1_png" : "egg_bg2_png", e && (this.item.data = e.reward[0]), 
        this.item.visible = 1 == t.state;
    }, e.prototype.onClick = function(t) {
        Egg.ins().sendOpenEgg([ this.index ]);
    }, e;
}(BaseView);

__reflect(EggBox.prototype, "EggBox");

window.EggBox = EggBox;

var EncounterInfoWin = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.name = "遭遇", e.skinName = "ZaoYuSkin", e.encounterList = new eui.ArrayCollection(), 
        e.list.itemRenderer = EncounterInfoItem, e.list.dataProvider = e.encounterList, 
        e.scroller.scrollPolicyH = eui.ScrollPolicy.OFF, e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.observe(Encounter.ins().postEncounterDataChange, this.setData), this.observe(Encounter.ins().postDataUpdate, this.updatePrestigeRank), 
        this.addTouchEvent(this.rankBtn, this.onBtn), this.addTouchEvent(this.recordBtn, this.onBtn), 
        Encounter.ins().sendInquireRecord(), Encounter.ins().sendInquirePrestige(), GEventDispatcher.instance.addEventListener(GEvent.CLOSE_WIN, this.onCloseSmelt, this), 
        GEventDispatcher.instance.addEventListener(GEvent.OPEN_WIN, this.onOpenSmelt, this), 
        this.setData();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        TimerManager.ins().removeAll(this), GEventDispatcher.instance.removeEventListener(GEvent.CLOSE_WIN, this.onCloseSmelt, this), 
        GEventDispatcher.instance.removeEventListener(GEvent.OPEN_WIN, this.onOpenSmelt, this);
    }, e.prototype.onCloseSmelt = function(t) {
        "SmeltEquipTotalWin" == t && (this.list.visible = !0);
    }, e.prototype.onOpenSmelt = function(t) {
        "SmeltEquipTotalWin" == t && (this.list.visible = !1);
    }, e.prototype.updatePrestigeRank = function() {
        var t = Encounter.ins().prestige, e = Encounter.ins().rank;
        this.dayPrestige.text = t + "", this.rank.text = 0 == e ? "(未上榜)" : "(" + e + "名)", 
        this.rank.x = this.dayPrestige.x + this.dayPrestige.width, this.updateAwards();
    }, e.prototype.setData = function() {
        for (var t = [], e = 0; e < Encounter.ins().encounterModel.length; e++) if (Encounter.ins().getEncounterModel(e)) {
            var i = new EncounterData();
            i.updateByEncounter(Encounter.ins().getEncounterModel(e)), t.push(i);
        }
        var n = GlobalConfig.ins().SkirmishBaseConfig.listSize;
        if (t.length < n) {
            var i = new EncounterData();
            i.updateByEncounter(), t.push(i);
        }
        this.encounterList.replaceAll(t), this.updateAwards();
    }, e.prototype.updateAwards = function() {
        var t = GlobalConfig.ins().SkirmishRankConfig, e = Encounter.ins().rank;
        this.money.text = "0", this.prestige.text = "0";
        for (var i in t) if (t[i].minRank <= e && t[i].maxRank >= e) {
            this.money.text = t[i].rewards[0].count + "", this.prestige.text = t[i].rewards[1].count + "";
            var n = GlobalConfig.ins().ItemConfig(t[i].rewards[1].id);
            this.itemIcon.source = ResPath.getItemIconPath(n.icon);
            break;
        }
    }, e.prototype.onBtn = function(t) {
        switch (t.target) {
          case this.rankBtn:
            ViewManager.ins().open(RankingWin, 11);
            break;

          case this.recordBtn:
            ViewManager.ins().open(ZaoYuRecordWin);
        }
    }, e;
}(BaseView);

__reflect(EncounterInfoWin.prototype, "EncounterInfoWin"), ViewManager.ins().reg(EncounterInfoWin, LayerManager.UI_Main);

window.EncounterInfoWin = EncounterInfoWin;

var TeammateItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "TeammateItemSkin", e.head.source = "", e.damageLabel.text = "伤害：0", 
        e.powerLabel.text = "战力：0", e.nameLabel.text = "", e.addFriendBtn.visible = !1, 
        e;
    }
    return __extends(e, t), e.prototype.setData = function(t) {
        if (t && (this.teammateData = t, this.head.source = "role_head_" + t.job + t.sex, 
        this.powerLabel.text = "战力：" + (t.power ? t.power : 0), this.damageLabel.text = "伤害：" + (t.damage ? t.damage : 0), 
        0 == t.zs ? this.nameLabel.text = t.name + " (" + t.lv + "级)" : this.nameLabel.text = t.name + " (" + t.zs + "阶" + t.lv + "级)", 
        t.roleId != Actor.actorID)) {
            var e = Friends.ins().indexOfFriendList(t.roleId), i = Friends.ins().friendsList.getItemAt(e);
            this.addFriendBtn.visible = !i, this.addFriendBtn.visible && this.addTouchEvent(this.addFriendBtn, this.onTouch);
        }
    }, e.prototype.upDamage = function(t) {
        this.damageLabel.text = "伤害：" + (t.damage ? t.damage : 0);
    }, e.prototype.onTouch = function() {
        Friends.ins().sendAddFriend(this.teammateData.roleId, this.teammateData.name);
    }, e;
}(BaseView);

__reflect(TeammateItem.prototype, "TeammateItem");

window.TeammateItem = TeammateItem;

var FbExpScenePanel = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "FbExpSceneSkin", e.curWaves.text = "", e.exp.text = "", e;
    }
    return __extends(e, t), e.prototype.init = function() {
        this.curWaves.text = "第1波", this.exp.text = "0";
    }, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.init(), this.observe(UserFb.ins().postFbExpSceneInfo, this.updateInfo);
    }, e.prototype.updateInfo = function(t) {
        var e = GlobalConfig.ins().ExpFubenBase;
        this.curWaves.text = t.killBo == e.maxMonGroup ? "已通关" : "第" + (t.killBo + 1) + "波", 
        this.exp.text = t.hasExp + "";
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeObserve();
    }, e;
}(BaseView);

__reflect(FbExpScenePanel.prototype, "FbExpScenePanel");

window.FbExpScenePanel = FbExpScenePanel;

var NewFbPanel = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "NewFbPanelSkin", e.init(), e;
    }
    return __extends(e, t), e.prototype.init = function() {
        this.fbDataList = FbHelp.countMaterialFbList(), this.fbList.dataProvider = new eui.ArrayCollection(this.fbDataList), 
        this.fbList.itemRenderer = FbItem;
    }, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEvent(this.fbList, this.onTap), this.observe(UserFb.ins().postFbCountChange, this.updateFbList), 
        this.observe(YiBaoFb.ins().postYiBaoFbInfo, this.updateFbList), this.updateFbList();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeTouchEvent(this.fbList, this.onTap), this.removeEvents(), this.removeObserve();
    }, e.prototype.updateFbList = function() {
        this.fbDataList.sort(this.sortData), this.fbList.dataProvider.replaceAll(this.fbDataList);
    }, e.prototype.sortData = function(t, e) {
        var i, n, s, a, o = GlobalConfig.ins().NewYbBaseFbconfig, r = GlobalConfig.ins().DailyFubenConfig[t], h = GlobalConfig.ins().DailyFubenConfig[e];
        return r ? (i = r.levelLimit, n = r.zsLevel) : t == o.fbId && (i = o.id[1], n = o.id[0]), 
        h ? (s = h.levelLimit, a = h.zsLevel) : e == o.fbId && (s = o.id[1], a = o.id[0]), 
        n > a ? 1 : a > n ? -1 : i > s ? 1 : s > i ? -1 : 0;
    }, e.prototype.onTap = function(t) {
        var e = this;
        switch (t.currentTarget) {
          default:
            if (t.target instanceof eui.Button) if (t.target.parent.parent instanceof FbItem) {
                var i = t.target.parent.parent.data, n = GlobalConfig.ins().NewYbBaseFbconfig.fbId;
                if (i == n) YiBaoFb.ins().sendChallenge(); else {
                    var s = GlobalConfig.ins().DailyFubenConfig[i];
                    if ("add" == t.target.name) {
                        var a = UserVip.ins().lv, o = (s.vipBuyCount[a], UserFb.ins().getFbDataById(i));
                        if (!o) return;
                        var r = s.buyPrice[o.vipBuyCount];
                        if (!(Actor.yb >= r)) return void UserWarn.ins().showWanTips0(WarnTipsWin0.TYPE_1);
                        var h = this.fbDataList.lastIndexOf(i);
                        FbWin.firstRed[h] ? this.fbList.getElementAt(h).starSaoDang() : WarnWin.show("是否消耗<font color='#FFB82A'>" + r + "元宝</font>扫荡1次\n【" + s.name + "】？<font color='#007BFF'>扫荡将直接获得副本奖励</font>", function() {
                            e.fbList.getElementAt(h).starSaoDang();
                        }, this, null, null, "", [], !0, "今日不再提示", function(t) {
                            FbWin.firstRed[h] = t;
                        }, this);
                    } else {
                        var l = UserFb.ins().getFbDataById(i);
                        if (!l) return;
                        if (l.getCount() <= 0) UserTips.ins().showTips("|C:0xff0000&T:剩余挑战次数不足|"); else if (s.levelLimit > Actor.level) UserTips.ins().showTips("|C:0xff0000&T:转生或等级不足|"); else if (GameMap.canEnterFb()) if (UserZs.ins().lv >= FbItem.SaoDangZsLv) {
                            var u = this.fbDataList.lastIndexOf(i);
                            this.fbList.getElementAt(u).starSaoDang();
                        } else UserFb.ins().sendChallenge(i), ViewManager.ins().close(this);
                    }
                }
            } else if (t.target.parent instanceof FBTeamItem) {
                var i = t.target.parent.data.id;
                ViewManager.ins().open(ChooseTeammateWin, i);
            }
        }
    }, e;
}(BaseView);

__reflect(NewFbPanel.prototype, "NewFbPanel");

window.NewFbPanel = NewFbPanel;

var CircleRunBoostView = function(t) {
    function e() {
        var e = t.call(this) || this;
        e.skinName = "CircleRunBoostSkin", e.itemList = [];
        for (var i = CircleRunView.EQUIP_COUNT; i--; ) e.itemList[i] = e["item" + i];
        for (var n = 0; 8 > n; n++) e["item" + n].item.source = ForgeConst.EQUIP_POS_SOURCE[n];
        return e;
    }
    return __extends(e, t), Object.defineProperty(e.prototype, "type", {
        get: function() {
            return this._type;
        },
        set: function(t) {
            this._type = t;
            for (var e = 0; e < this.itemList.length; e++) this.itemList[e].setType(this._type);
            this.setValue();
        },
        enumerable: !0,
        configurable: !0
    }), e.prototype.setValue = function() {
        for (var t = SubRoles.ins().getSubRoleByIndex(this.curRole), e = this.itemList.length, i = 0; e > i; i++) {
            var n = 0;
            switch (this._type) {
              case ForgeConst.TYPE_BOOST:
                n = t.getEquipByIndex(i).strengthen;
            }
            this.itemList[i].setValue(n);
        }
    }, e.prototype.showUpMC = function(t) {
        this.itemList[t].showUpMc();
    }, e.prototype.turnItem = function(t) {
        this.setNameBg(t);
    }, e.prototype.setNameBg = function(t) {
        for (var e = this.itemList.length, i = 0; e > i; i++) this.itemList[i].isSelect(i == t);
    }, e;
}(BaseView);

__reflect(CircleRunBoostView.prototype, "CircleRunBoostView");

window.CircleRunBoostView = CircleRunBoostView;

var CircleRunGemView = function(t) {
    function e() {
        var e = t.call(this) || this;
        e.skinName = "CircleRunGemSkin", e.itemList = [];
        for (var i = CircleRunView.EQUIP_COUNT; i--; ) e.itemList[i] = e["item" + i], e["item" + i].item.source = ForgeConst.EQUIP_POS_SOURCE[i];
        return e;
    }
    return __extends(e, t), Object.defineProperty(e.prototype, "type", {
        get: function() {
            return this._type;
        },
        set: function(t) {
            this._type = t;
            for (var e = 0; e < this.itemList.length; e++) this.itemList[e].setType(this._type);
            this.setValue();
        },
        enumerable: !0,
        configurable: !0
    }), e.prototype.setValue = function() {
        for (var t = SubRoles.ins().getSubRoleByIndex(this.curRole), e = this.itemList.length, i = 0; e > i; i++) {
            var n = 0;
            switch (this._type) {
              case ForgeConst.TYPE_GEM:
                n = t.hookJadeData[i];
            }
            this.itemList[i].setValue(n);
        }
    }, e.prototype.showUpMC = function(t) {
        this.itemList[t].showUpMc();
    }, e.prototype.turnItem = function(t) {
        this.setItemSelect(t);
    }, e.prototype.setItemSelect = function(t) {
        for (var e = this.itemList.length, i = 0; e > i; i++) this.itemList[i].isSelect(i == t);
    }, e;
}(BaseView);

__reflect(CircleRunGemView.prototype, "CircleRunGemView");

window.CircleRunGemView = CircleRunGemView;

var CircleRunQilingView = function(t) {
    function e() {
        var e = t.call(this) || this;
        e.skinName = "CircleRunQilingSkin", e.itemList = [];
        for (var i = CircleRunView.EQUIP_COUNT; i--; ) e.itemList[i] = e["item" + i], e["item" + i].item.source = ForgeConst.EQUIP_POS_SOURCE[i];
        return e;
    }
    return __extends(e, t), Object.defineProperty(e.prototype, "type", {
        get: function() {
            return this._type;
        },
        set: function(t) {
            this._type = t;
            for (var e = 0; e < this.itemList.length; e++) this.itemList[e].setType(this._type);
            this.setValue();
        },
        enumerable: !0,
        configurable: !0
    }), e.prototype.setValue = function() {
        for (var t = SubRoles.ins().getSubRoleByIndex(this.curRole), e = this.itemList.length, i = 0; e > i; i++) {
            var n = 0;
            switch (this._type) {
              case ForgeConst.TYPE_QILING:
                n = t.getEquipByIndex(i).qiling;
            }
            this.itemList[i].setValue(n);
        }
    }, e.prototype.showUpMC = function(t) {
        this.itemList[t].showUpMc();
    }, e.prototype.turnItem = function(t) {
        this.setItemSelect(t);
    }, e.prototype.setItemSelect = function(t) {
        for (var e = this.itemList.length, i = 0; e > i; i++) this.itemList[i].isSelect(i == t);
    }, e;
}(BaseView);

__reflect(CircleRunQilingView.prototype, "CircleRunQilingView");

window.CircleRunQilingView = CircleRunQilingView;

var CircleRunView = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.boostView = new CircleRunBoostView(), e.addChild(e.boostView), e.zhulingView = new CircleRunZhulingView(), 
        e.addChild(e.zhulingView), e.circleRunGemView = new CircleRunGemView(), e.addChild(e.circleRunGemView), 
        e.circleRunQilingView = new CircleRunQilingView(), e.addChild(e.circleRunQilingView), 
        e;
    }
    return __extends(e, t), Object.defineProperty(e.prototype, "type", {
        get: function() {
            return this._type;
        },
        set: function(t) {
            switch (this._type = t, this.boostView.visible = !1, this.zhulingView.visible = !1, 
            this.circleRunGemView.visible = !1, this.circleRunQilingView.visible = !1, this._type) {
              case ForgeConst.TYPE_BOOST:
                this.boostView.visible = !0, this.boostView.type = t;
                break;

              case ForgeConst.TYPE_GEM:
                this.circleRunGemView.visible = !0, this.circleRunGemView.type = t;
                break;

              case ForgeConst.TYPE_ZHULING:
                this.zhulingView.visible = !0, this.zhulingView.type = t;
                break;

              case ForgeConst.TYPE_QILING:
                this.circleRunQilingView.visible = !0, this.circleRunQilingView.type = t;
            }
            this.setValue();
        },
        enumerable: !0,
        configurable: !0
    }), e.prototype.setCurRole = function(t) {
        this._curRole = t, this.boostView.curRole = t, this.zhulingView.curRole = t, this.circleRunGemView.curRole = t, 
        this.circleRunQilingView.curRole = t;
    }, e.prototype.getCurRole = function() {
        return this._curRole;
    }, e.prototype.setValue = function() {
        switch (this._type) {
          case ForgeConst.TYPE_BOOST:
            this.boostView.setValue();
            break;

          case ForgeConst.TYPE_ZHULING:
            this.zhulingView.setValue();
            break;

          case ForgeConst.TYPE_GEM:
            this.circleRunGemView.setValue();
            break;

          case ForgeConst.TYPE_QILING:
            this.circleRunQilingView.setValue();
        }
    }, e.prototype.showUpMC = function(t) {
        switch (this._type) {
          case ForgeConst.TYPE_BOOST:
            this.boostView.showUpMC(t);
            break;

          case ForgeConst.TYPE_ZHULING:
            this.zhulingView.showUpMC(t);
            break;

          case ForgeConst.TYPE_GEM:
            this.circleRunGemView.showUpMC(t);
            break;

          case ForgeConst.TYPE_QILING:
            this.circleRunQilingView.showUpMC(t);
        }
    }, e.prototype.turnItem = function(t) {
        switch (this._type) {
          case ForgeConst.TYPE_BOOST:
            this.boostView.turnItem(t);
            break;

          case ForgeConst.TYPE_ZHULING:
            this.zhulingView.turnItem(t);
            break;

          case ForgeConst.TYPE_GEM:
            this.circleRunGemView.turnItem(t);
            break;

          case ForgeConst.TYPE_QILING:
            this.circleRunQilingView.turnItem(t);
        }
    }, e.EQUIP_COUNT = 8, e;
}(BaseView);

__reflect(CircleRunView.prototype, "CircleRunView");

window.CircleRunView = CircleRunView;

var CircleRunZhulingView = function(t) {
    function e() {
        var e = t.call(this) || this;
        e.skinName = "CircleRunZhulingSkin", e.itemList = [];
        for (var i = CircleRunView.EQUIP_COUNT; i--; ) e.itemList[i] = e["item" + i], e["item" + i].item.source = ForgeConst.EQUIP_POS_SOURCE[i];
        return e;
    }
    return __extends(e, t), Object.defineProperty(e.prototype, "type", {
        get: function() {
            return this._type;
        },
        set: function(t) {
            this._type = t;
            for (var e = 0; e < this.itemList.length; e++) this.itemList[e].setType(this._type);
            this.setValue();
        },
        enumerable: !0,
        configurable: !0
    }), e.prototype.setValue = function() {
        for (var t = SubRoles.ins().getSubRoleByIndex(this.curRole), e = this.itemList.length, i = 0; e > i; i++) {
            var n = 0;
            switch (this._type) {
              case ForgeConst.TYPE_ZHULING:
                n = t.getEquipByIndex(i).zhuling;
            }
            this.itemList[i].setValue(n);
        }
    }, e.prototype.showUpMC = function(t) {
        this.itemList[t].showUpMc();
    }, e.prototype.turnItem = function(t) {
        this.setItemSelect(t);
    }, e.prototype.setItemSelect = function(t) {
        for (var e = this.itemList.length, i = 0; e > i; i++) this.itemList[i].isSelect(i == t);
    }, e;
}(BaseView);

__reflect(CircleRunZhulingView.prototype, "CircleRunZhulingView");

window.CircleRunZhulingView = CircleRunZhulingView;

var ForgeGemPanel = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.itemNum = 0, e.pos = 0, e.skinName = "GemSkin", e.name = "宝石", e.upGradeBtn.label = "提 升", 
        e.curPanel = ForgeConst.TYPE_GEM, e.isShowPower(), e.getItemBtn.labelDisplay.text = "获取道具", 
        e;
    }
    return __extends(e, t), e.prototype.isShowPower = function() {
        this.totalPower = BitmapNumber.ins().createNumPic(0, BitmapNumber.numType0), this.powerContainer.addChild(this.totalPower);
    }, e.prototype.open = function(t, e, i) {
        this.addTouchEvent(this, this.onTouch), this.observe(UserBag.ins().postItemAdd, this.setCount), 
        this.observe(UserBag.ins().postItemChange, this.setCount), this.curRole = i, this.chooseGem(t, !0), 
        this.setCount(), this.setGemValue(), this.countCanUpgrade();
    }, e.prototype.close = function() {}, e.prototype.canTouchBtn = function(t) {}, 
    e.prototype.onTouch = function(t) {
        switch (t.target) {
          case this.upGradeBtn:
            1 == this.isEnough ? (this.maxIndex = UserForge.ins().getCanUpgradeIndexByType(this.curPanel), 
            -1 == this.maxIndex ? UserTips.ins().showTips("已满级") : (this.canTouchBtn(!1), UserGem.ins().sendUpGrade(this.curRole, this.pos))) : 0 == this.isEnough && this.costConfig && UserWarn.ins().setBuyGoodsWarn(this.costConfig.itemId, 1);
            break;

          case this.oneKeyUpgrade:
            this.countCanUpgrade() ? UserGem.ins().sendUpGrade(this.curRole, CircleRunView.EQUIP_COUNT) : UserTips.ins().showTips("没可提升的勾玉!");
            break;

          case this.getItemBtn:
            this.costConfig && UserWarn.ins().setBuyGoodsWarn(this.costConfig.itemId, 1);
        }
    }, e.prototype.changeData = function(t, e, i) {
        void 0 === e && (e = !0), void 0 === i && (i = !1), this.chooseGem(t, !0, e), this.pos <= this.maxIndex && 0 != this.pos ? this.isContinue = !0 : this.isContinue = !1, 
        i && (this.isContinue ? UserGem.ins().sendUpGrade(this.curRole, this.pos) : (this.showEffFun.call(this.funObj), 
        this.canTouchBtn(!0)));
    }, e.prototype.chooseGem = function(t, e, i) {
        void 0 === e && (e = !1), void 0 === i && (i = !0), this.pos = t;
        var n = SubRoles.ins().getSubRoleByIndex(this.curRole);
        this.lv = n.hookJadeData[t], this.setCount(), this.setPower(), this.setGemValue(), 
        i ? this.upGradeBtn.touchEnabled = !0 : this.upGradeBtn.touchEnabled = !1, e = !1;
        var s, a = [];
        if (e) for (var o = 0; o < CircleRunView.EQUIP_COUNT; o++) {
            var r = SubRoles.ins().getSubRoleByIndex(this.curRole), h = r.hookJadeData[o];
            s = GlobalConfig.ins().MagatamaLevelConfig[o][h], a.push(s);
        } else s = GlobalConfig.ins().MagatamaLevelConfig[t][this.lv], a.push(s);
        this.setAttrData(a);
    }, e.prototype.setPower = function() {
        var t = SubRoles.ins().getSubRoleByIndex(this.curRole);
        this._totalPower = t.getForgeTotalPower(ForgeConst.TYPE_GEM), BitmapNumber.ins().changeNum(this.totalPower, this._totalPower, BitmapNumber.numType0);
    }, e.prototype.setAttrData = function(t) {
        var e, i = this;
        this.lv;
        if (t = DataUtil.fitListData(t), t.length > 1) {
            for (var n = [], s = 0, a = t; s < a.length; s++) {
                var o = a[s];
                n = n.concat(o.attr);
            }
            n = AttributeData.getAttrStrAdd(n, this.curPanel);
            var r = AttributeData.getAttStr1(AttributeData.mergeAttr(n), AttributeFormat.FORMAT_5()), h = r.replace(/\+0/g, "未激活");
            this.currentState = "total", egret.callLater(function() {
                i.attrTxt.textFlow = TextFlowMaker.generateTextFlow(h), i.isFullLv = i.isAllFull;
            }, this);
        } else {
            var n = AttributeData.getAttrStrAdd(t[0].attr, this.curPanel), l = UserGem.ins().getAttributeStr(n, this.lv);
            this.attrTxt.textFlow = TextFlowMaker.generateTextFlow(l), e = UserForge.ins().getForgeConfigByPos(this.pos, this.lv + 1, ForgeConst.TYPE_GEM), 
            this.currentState = "single", this.img_gem0.filters = this.lv > 0 ? null : [ ColorUtil.colorMat ], 
            this.img_gem1.filters = this.lv > 80 ? null : [ ColorUtil.colorMat ], this.img_gem2.filters = this.lv > 160 ? null : [ ColorUtil.colorMat ], 
            this.img_gem3.filters = this.lv > 240 ? null : [ ColorUtil.colorMat ], this.img_gem4.filters = this.lv > 320 ? null : [ ColorUtil.colorMat ], 
            egret.callLater(function() {
                e && (i.nextAttrTxt.text = AttributeData.getAttStr1(e.attr, AttributeFormat.FORMAT_5())), 
                i.isFullLv = i.isAllFull;
            }, this);
        }
    }, Object.defineProperty(e.prototype, "isFullLv", {
        set: function(t) {
            t ? (this.expendLabel.visible = !1, this.countLabel.visible = !1, this.upGradeBtn.visible = !1, 
            this.fullLabel.visible = !0, "single" == this.currentState && (this.nextAttrTxt.visible = !1)) : ("total" == this.currentState ? this.expendLabel.visible = !1 : this.countLabel.visible = !0, 
            this.upGradeBtn.visible = !0, this.fullLabel.visible = !1), this.costCon.visible = !this.fullLabel.visible;
        },
        enumerable: !0,
        configurable: !0
    }), e.prototype.setCount = function() {
        if (this.costConfig = GlobalConfig.ins().MagatamaLevelCostConfig[this.pos][this.lv < 0 ? 0 : this.lv], 
        this.costConfig) {
            this.expendLabel.text = GlobalConfig.ins().ItemConfig(this.costConfig.itemId).name + ": ";
            var t = 0;
            this.costConfig && (this.itemNum = UserBag.ins().getBagGoodsCountById(0, this.costConfig.itemId), 
            t = this.costConfig.count);
            var e = "";
            this.itemNum >= t ? (e = "|C:0x00ff00&T:", this.isEnough = !0) : (e = "|C:0xff1818&T:", 
            this.isEnough = !1), this.countLabel.textFlow = TextFlowMaker.generateTextFlow(e + this.itemNum + "| / " + t);
        }
        this.countCanUpgrade();
    }, e.prototype.moveAttr = function() {
        var t = 160, e = egret.Tween.get(this.attrTxt);
        e.to({
            x: this.attrTxt.x + 200,
            alpha: 0
        }, 100).to({
            x: 0
        }, 100).to({
            x: t,
            alpha: 1
        }, 100), t = 186;
        var i = egret.Tween.get(this.nextAttrTxt);
        i.to({
            x: this.nextAttrTxt.x + 200,
            alpha: 0
        }, 100).to({
            x: 142
        }, 100).to({
            x: t,
            alpha: 1
        }, 100);
    }, e.prototype.setGemValue = function() {}, Object.defineProperty(e.prototype, "isAllFull", {
        get: function() {
            for (var t = SubRoles.ins().getSubRoleByIndex(this.curRole), e = CircleRunView.EQUIP_COUNT, i = !0, n = 0; e > n; n++) {
                var s = t.hookJadeData[n];
                i && (i = !GlobalConfig.ins().MagatamaLevelCostConfig[n][s + 1]);
            }
            return i;
        },
        enumerable: !0,
        configurable: !0
    }), e.prototype.countCanUpgrade = function() {
        for (var t = !1, e = 0; e < CircleRunView.EQUIP_COUNT; e++) {
            var i = SubRoles.ins().getSubRoleByIndex(this.curRole), n = i.hookJadeData[e], s = GlobalConfig.ins().MagatamaLevelCostConfig[e][n], a = GlobalConfig.ins().MagatamaLevelCostConfig[e][n + 1];
            if (s && a) {
                var o = UserBag.ins().getBagGoodsCountById(0, s.itemId);
                t || (t = o >= s.count);
            }
        }
        return t;
    }, e;
}(BaseView);

__reflect(ForgeGemPanel.prototype, "ForgeGemPanel");

window.ForgeGemPanel = ForgeGemPanel;

var ForgeGemItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "GemItemSkin", e.touchChildren = !1, e.setSelect(!1), e.canUpgrade(!1), 
        e;
    }
    return __extends(e, t), e.prototype.setValue = function(t) {
        this.gemLv.text = "+" + t;
    }, e.prototype.setSelect = function(t) {}, e.prototype.canUpgrade = function(t) {
        this.redPoint.visible = t;
    }, e;
}(BaseView);

__reflect(ForgeGemItem.prototype, "ForgeGemItem");

window.ForgeGemItem = ForgeGemItem;

var ForgeQilingPanel = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.itemNum = 0, e.setSkinName(), e.panelName(), e.isShowPower(), e.getItemBtn.labelDisplay.text = "获取道具", 
        e;
    }
    return __extends(e, t), e.prototype.setSkinName = function() {
        this.skinName = "QilingSkin";
    }, e.prototype.isShowPower = function() {
        this.titleLabel.visible = !1, this.powerImg.visible = !0, this.addPowerImg();
    }, e.prototype.addPowerImg = function() {
        this.totalPower = BitmapNumber.ins().createNumPic(0, BitmapNumber.numType0), this.powerContainer.addChild(this.totalPower);
    }, e.prototype.panelName = function() {
        this.name = "启灵", this.upGradeBtn.label = "升 级", this.curPanel = ForgeConst.TYPE_QILING;
    }, e.prototype.open = function(t, e, i) {
        this.isLock = !1, this.addTouchEvent(this.upGradeBtn, this.onTouch), this.addTouchEvent(this.getItemBtn, this.onTouchGetItem), 
        this.curRole = i, this.observe(UserBag.ins().postItemAdd, this.setCount), this.observe(UserBag.ins().postItemChange, this.setCount), 
        this.changeData(t, e);
    }, e.prototype.close = function() {
        this.removeTouchEvent(this.upGradeBtn, this.onTouch), this.removeTouchEvent(this.getItemBtn, this.onTouchGetItem), 
        this.removeObserve(), this.isLock = !1;
    }, e.prototype.canTouchBtn = function(t) {}, e.prototype.onTouch = function(t) {
        if (this.btnStart) {
            var e = UserForge.ins().getQilingCostConfigByLv(this.lv + 1);
            if (!e) return;
            this.itemNum >= e.stoneNum ? (this.maxIndex = UserForge.ins().getCanUpgradeIndexByType(this.curPanel), 
            this.canTouchBtn(!1), UserQiLing.ins().sendUpGrade(this.curRole, this.pos)) : UserWarn.ins().setBuyGoodsWarn(e.stoneId, e.stoneNum - this.itemNum);
        } else UserWarn.ins().setBuyGoodsWarn(UserForge.ins().getQilingCostConfigByLv(this.lv + 1).stoneId, 1);
    }, e.prototype.onTouchGetItem = function(t) {
        UserWarn.ins().setBuyGoodsWarn(UserForge.ins().getQilingCostConfigByLv(this.lv + 1).stoneId, 1);
    }, e.prototype.changeData = function(t, e, i, n) {
        void 0 === i && (i = !0), void 0 === n && (n = !1), this.pos = t, this.lv = e;
        var s = UserForge.ins().getForgeConfigByPos(t, e, this.curPanel);
        this.config = s, this.setAttrData(s), this.setPower(), i ? (this.isLock = !1, this.setCount(), 
        this.upGradeBtn.touchEnabled = !0) : this.upGradeBtn.touchEnabled = !1;
        var a;
        this.pos <= this.maxIndex && 0 != this.pos && (a = !0), n && (a ? this.curPanel == ForgeConst.TYPE_QILING && UserQiLing.ins().sendUpGrade(this.curRole, this.pos) : (this.showEffFun.call(this.funObj), 
        this.canTouchBtn(!0)));
    }, e.prototype.setPower = function() {
        var t = SubRoles.ins().getSubRoleByIndex(this.curRole);
        this._totalPower = t.getForgeTotalPower(this.curPanel), BitmapNumber.ins().changeNum(this.totalPower, this._totalPower, BitmapNumber.numType0);
    }, e.prototype.moveAttr = function() {
        var t = egret.Tween.get(this.attrLabel);
        t.to({
            x: this.attrLabel.x + 200,
            alpha: 0
        }, 100).to({
            x: 0
        }, 100).to({
            x: 48,
            alpha: 1
        }, 100);
        var e = egret.Tween.get(this.nextAttrLabel);
        e.to({
            x: this.nextAttrLabel.x + 200,
            alpha: 0
        }, 100).to({
            x: 142
        }, 100).to({
            x: 281,
            alpha: 1
        }, 100);
    }, e.prototype.setAttrData = function(t) {
        var e;
        if (t) {
            e = UserForge.ins().getForgeConfigByPos(this.pos, this.lv + 1, this.curPanel);
            var i = AttributeData.getAttrStrAdd(t.attr, this.curPanel);
            this.attrLabel.text = AttributeData.getAttStr(i, 0);
        } else {
            e = UserForge.ins().getForgeConfigByPos(this.pos, 1, this.curPanel);
            for (var i = [], n = 0; n < e.attr.length; n++) {
                var s = new AttributeData();
                s.type = e.attr[n].type, s.value = 0, i.push(s);
            }
            this.attrLabel.text = AttributeData.getAttStr(i, 0);
        }
        if (e) {
            for (var a = "", o = AttributeData.getAttrStrAdd(e.attr, this.curPanel), r = 0; r < o.length; r++) a += o[r].value, 
            r < o.length - 1 && (a += "\n");
            this.nextAttrLabel.text = a, this.expendLabel.text = "消耗: ", this.expendLabel.textAlign = "left", 
            this.icon.visible = !0, this.countLabel.visible = !0, this.upGradeBtn.visible = !0, 
            this.getItemBtn.visible = !0, this.wImg.visible = !0;
        } else this.expendLabel.text = "已提升至满级", this.expendLabel.textAlign = "center", 
        this.nextAttrLabel.text = "已满级", this.icon.visible = !1, this.countLabel.visible = !1, 
        this.upGradeBtn.visible = !1, this.costLabel.visible = !1, this.getItemBtn.visible = !1, 
        this.wImg.visible = !1;
    }, e.prototype.setCount = function() {
        var t = UserForge.ins().getQilingCostConfigByLv(this.lv + 1), e = 0;
        t && (this.itemNum = UserBag.ins().getBagGoodsCountById(0, t.stoneId), e = t.stoneNum);
        var i = "";
        this.itemNum >= e ? (i = "|C:0x00ff00&T:", this.btnStart = !0) : (i = "|C:0xff1818&T:", 
        this.btnStart = !1), this.countLabel.textFlow = TextFlowMaker.generateTextFlow(i + this.itemNum + "| / " + e);
    }, e;
}(BaseView);

__reflect(ForgeQilingPanel.prototype, "ForgeQilingPanel");

window.ForgeQilingPanel = ForgeQilingPanel;

var CdkeyPanle = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "CDkeySkin", e.input.maxChars = 28, e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEvent(this.sendBtn, this.onTap);
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeTouchEvent(this.sendBtn, this.onTap);
    }, e.prototype.onTap = function(t) {
        switch (t.currentTarget) {
          case this.sendBtn:
            CDKey.ins().sendCdkey(this.input.text);
        }
    }, e;
}(BaseView);

__reflect(CdkeyPanle.prototype, "CdkeyPanle");

window.CdkeyPanle = CdkeyPanle;

var GameNoticePanle = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.isInit = !1, e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.isInit || (this.isInit = !0, this.skinName = "gameNoticeSkin");
        var i = HelpInfoConfig.getText(), n = i.split("_");
        this.title.textFlow = TextFlowMaker.generateTextFlow(n[0]), this.desc.textFlow = TextFlowMaker.generateTextFlow(n[1]), 
        UserFuLi.ins().isOpenNotice && (UserFuLi.ins().isOpenNotice = !1, Notice.ins().postGameNotice(), 
        Notice.ins().setNoticeOPen());
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        !this.isInit;
    }, e;
}(BaseView);

__reflect(GameNoticePanle.prototype, "GameNoticePanle");

window.GameNoticePanle = GameNoticePanle;

var MoneyTreePanel = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.posY = 180, e.data = MoneyTreeDataBase.ins(), e.isInit = !1, e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], i = 0; i < arguments.length; i++) t[i] = arguments[i];
        this.isInit || (this.isInit = !0, this.skinName = "MoneyTreeSkin", this.mc1 = new MovieClip(), 
        this.mc1.x = 108, this.mc1.y = 46, this.mc2 = new MovieClip(), this.mc2.x = 220, 
        this.mc2.y = 46, this.mc3 = new MovieClip(), this.mc3.x = 450, this.mc3.y = 46, 
        this.expMc = new MovieClip(), this.rect = new egret.Rectangle(0, 0, 70, 65), this.addChildAt(this.expMc, 3), 
        this.baojiMc = new MovieClip(), this.baojiMc.x = 207, this.baojiMc.y = 270, this.movieExp = new MovieClip(), 
        this.depictLabel2.textFlow = new egret.HtmlTextParser().parser("<font color = '#23C42A'><u>提升VIP</u></font>"), 
        this.bar.slideDuration = 0, this.bar.maximum = e.MAXNUMBER), this.observe(Notice.ins().postGameNotice, this.refushInfo), 
        this.observe(UserFuLi.ins().postMoneyInfoChange, this.refushInfo), this.addTouchEvent(this.goUpBtn, this.onTap), 
        this.addTouchEvent(this.box1, this.onTap), this.addTouchEvent(this.box2, this.onTap), 
        this.addTouchEvent(this.box3, this.onTap), this.addTouchEvent(this.depictLabel2, this.onTap), 
        this.addTouchEvent(this.descBtn, this.onTap), this.addTouchEvent(this.expMc, this.onTap), 
        this.refushInfo([ !0 ]), this.moveExpMc();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.isInit && (this.removeTouchEvent(this.goUpBtn, this.onTap), this.removeTouchEvent(this.box1, this.onTap), 
        this.removeTouchEvent(this.box2, this.onTap), this.removeTouchEvent(this.box3, this.onTap), 
        this.removeTouchEvent(this.depictLabel2, this.onTap), this.removeTouchEvent(this.descBtn, this.onTap));
    }, e.prototype.onTap = function(t) {
        switch (t.currentTarget) {
          case this.goUpBtn:
            if (this.data.playNum >= UserFuLi.ins().maxNum) return void (UserVip.ins().lv >= 15 ? UserTips.ins().showTips("|C:0xff0000&T:今日次数已用完|") : UserTips.ins().showTips("|C:0xff0000&T:提高vip等级，获得更多次数|"));
            if (Actor.yb >= this.costNum) return void UserFuLi.ins().sendPlayYaoYao();
            UserWarn.ins().showWanTips0(WarnTipsWin0.TYPE_1);
            break;

          case this.box1:
            ViewManager.ins().open(MoneyTreeBoxWin, 1);
            break;

          case this.box2:
            ViewManager.ins().open(MoneyTreeBoxWin, 2);
            break;

          case this.box3:
            ViewManager.ins().open(MoneyTreeBoxWin, 3);
            break;

          case this.depictLabel2:
            ViewManager.ins().open(VipWin);
            break;

          case this.descBtn:
            ViewManager.ins().open(MoneyTreeHelpWin);
            break;

          case this.expMc:
            ViewManager.ins().open(MoneyTreeHelpWin);
        }
    }, e.prototype.refushInfo = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        var i = !1, n = 0, s = UserFuLi.ins(), a = s.getIndexCost(), o = s.getNowCoefficientinfo(), r = s.getNowCoefficientinfo(1);
        if (t && t[0] && (t[0][0] && (i = t[0][0]), t[0][1] && (n = t[0][1])), 0 == this.data.playNum) {
            this.depictLabel1.visible = !1, this.playNum.visible = !0, this.cost.visible = !1, 
            this.firstFree.visible = !0, this.redpoint.visible = !0, this.playNum.text = "（今日使用：" + this.data.playNum + "/" + s.maxNum + "）", 
            this.costNum = a.yuanbao, this.cost.setText(a.yuanbao + "");
            var h = CommonUtils.overLength(Math.floor(a.gold * o.rate / 100)), l = o.rate - 100;
            this.getNum.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(LangManager.moneyTree_str3, h, l));
        } else if (this.data.playNum >= s.maxNum) this.depictLabel1.visible = !1, this.cost.visible = !1, 
        this.playNum.text = "（今日使用：" + this.data.playNum + "/" + s.maxNum + "）", this.getNum.text = "今日次数已全部用完"; else {
            this.depictLabel1.visible = !0, this.playNum.visible = !0, this.cost.visible = !0, 
            this.redpoint.visible = !1, this.firstFree.visible = !1, this.playNum.text = "（今日使用：" + this.data.playNum + "/" + s.maxNum + "）", 
            this.costNum = a.yuanbao, this.cost.setText(a.yuanbao + "");
            var h = CommonUtils.overLength(Math.floor(a.gold * o.rate / 100)), l = o.rate - 100;
            this.getNum.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(LangManager.moneyTree_str3, h, l));
        }
        this.add.text = "加成：" + (o.rate - 100) + "%", this.bar.labelDisplay = null, this.bar.value = this.data.boxOn > 50 ? 50 : this.data.boxOn, 
        i || this.moveMask();
        var u = 0;
        null == r ? this.addPoint.text = "已满级" : (this.addPoint.text = this.data.exp + "/" + r.needExp, 
        u = 60 * (.5 - this.data.exp / r.needExp)), this.refushBoxInfo(), n > 1 && (this.baojiMc.playFile(ResPath.getUIEffectPath(UiEffectType.Type3), 1), 
        this.addChild(this.baojiMc));
    }, e.prototype.moveExpMc = function() {
        var t = UserFuLi.ins(), e = t.getNowCoefficientinfo(1), i = this.exp.height, n = this.data.exp / e.needExp * i, s = i - n;
        this.square = new egret.Shape(), this.square.graphics.beginFill(16711680), this.square.graphics.drawRect(0, s, 100, n), 
        this.square.graphics.endFill(), this.exp.addChild(this.square), this.movieExp.x = 35, 
        this.movieExp.y = 28, this.movieExp.playFile(ResPath.getUIEffectPath(UiEffectType.Type26), -1), 
        this.exp.addChild(this.movieExp), this.movieExp.mask = this.square;
    }, e.prototype.moveMask = function() {
        this.moveExpMc(), this.movieExp.mask = null;
        var t = UserFuLi.ins(), e = t.getNowCoefficientinfo(1), i = this.exp.height, n = 1 / e.needExp * i, s = this.square.height + n, a = (this.square.y - n, 
        egret.Tween.get(this.square));
        a.to({
            height: s
        }, 420), this.movieExp.mask = this.square;
    }, e.prototype.refushBoxInfo = function() {
        var t = UserFuLi.ins();
        this.image_1.visible = t.getOrderByIndex(0) >= 1, this.image_2.visible = t.getOrderByIndex(1) >= 1, 
        this.image_3.visible = t.getOrderByIndex(2) >= 1;
        for (var e = 1; 4 > e; e++) {
            var i = this["mc" + e];
            t.checkBoxIsCanget(e) ? this.playEffect(i) : i.parent && DisplayUtils.removeFromParent(i);
        }
    }, e.prototype.playEffect = function(t) {
        t.playFile(ResPath.getUIEffectPath(UiEffectType.Type27), -1), this.addChild(t);
    }, e.firstTap = !0, e.MAXNUMBER = 50, e;
}(BaseView);

__reflect(MoneyTreePanel.prototype, "MoneyTreePanel");

window.MoneyTreePanel = MoneyTreePanel;

var NextDayLoginWin = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "nextDaySkin", e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEvent(this.sendBtn, this.onTap), this.item.data = {
            count: 500,
            id: 2,
            type: 0
        };
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeTouchEvent(this.sendBtn, this.onTap);
    }, e.prototype.onTap = function(t) {
        switch (t.currentTarget) {
          case this.sendBtn:
            1 == Activity.ins().nextDayState ? Activity.ins().sendNextDayReward() : 2 == Activity.ins().nextDayState ? UserTips.ins().showTips(StringUtils.addColor("已领取奖励", 16711680)) : UserTips.ins().showTips(StringUtils.addColor("创建角色第二天才能领取奖励", 16711680));
        }
    }, e;
}(BaseView);

__reflect(NextDayLoginWin.prototype, "NextDayLoginWin");

window.NextDayLoginWin = NextDayLoginWin;

var SceneTxtGuideView = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.startY = 82, e.stayY = 0, e.skinName = "SceneTxtGuideSkin", e.touchChildren = !1, 
        e.touchEnabled = !1, e.contentCon.scrollRect = new egret.Rectangle(0, 0, e.width, e.height), 
        e.contentTxt.filters = [ new egret.GlowFilter(14247948, 1, 5, 5, 6, 3) ], e.open(), 
        e;
    }
    return __extends(e, t), e.prototype.open = function() {
        this.observe(UserFb.ins().postWaveChange, this.upDataGuanqia), this.observe(GameLogic.ins().postEnterMap, this.enterMap), 
        this.observe(GameLogic.ins().postUpToLevel, this.updateToLevel), this.observe(NewHandTask.ins().postTaskChange, this.nextTask);
    }, e.prototype.close = function() {
        this.removeObserve();
    }, e.prototype.upDataGuanqia = function() {
        var t = UserFb.ins().guanqiaID, e = GlobalConfig.ins().SceneGuideTxtConfig[1][t - 1];
        this.setData(e);
    }, e.prototype.enterMap = function() {
        if (this.curMapId != GameMap.fubenID) {
            if (this.curMapId = GameMap.fubenID, 0 == GameMap.fbType || 1 == GameMap.fbType) return void this.clean();
            var t = GlobalConfig.ins().SceneGuideTxtConfig[2][GameMap.fubenID - 1];
            t || (t = GlobalConfig.ins().SceneGuideTxtConfig[2][GameMap.fbType - 1]), this.setData(t);
        }
    }, e.prototype.updateToLevel = function(t) {
        var e = GlobalConfig.ins().SceneGuideTxtConfig[3][t - 1];
        this.setData(e);
    }, e.prototype.nextTask = function(t) {}, e.prototype.setData = function(t) {
        t ? (this.contentTxt.text = t.content, this.visible = !0, this.moveTxt()) : this.clean();
    }, e.prototype.moveTxt = function() {
        egret.Tween.removeTweens(this.contentTxt);
        var t = egret.Tween.get(this.contentTxt), e = -this.contentTxt.height;
        t.to({
            y: this.stayY
        }, 1e3).wait(5e3).to({
            y: e
        }, 1e3).call(this.reset, this);
    }, e.prototype.reset = function() {
        this.contentTxt.y = this.startY, this.visible = !1;
    }, e.prototype.clean = function() {
        egret.Tween.removeTweens(this.contentTxt), this.reset();
    }, e;
}(BaseView);

__reflect(SceneTxtGuideView.prototype, "SceneTxtGuideView");

window.SceneTxtGuideView = SceneTxtGuideView;

var GaoBaoBossGuishuItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "GaoBaoBossGuishuSkin", e.bar = new CoolingQueueMcForCircle(e.hpBar, 90), 
        e;
    }
    return __extends(e, t), e.prototype.open = function() {
        this.observe(GaoBaoBoss.ins().postStartAttackPlayer, this.update), this.observe(GaoBaoBoss.ins().postStopAttackPlayer, this.update), 
        this.observe(GameLogic.ins().postOtherHpChange, this.updateHp), this.observe(GameLogic.ins().postHpChange, this.updateHp);
    }, e.prototype.close = function() {
        this.removeEvents();
    }, e.prototype.updateHp = function() {
        var t = EntityManager.ins().getEntityByHandle(GaoBaoBoss.ins().guishuItem.handle);
        if (t) {
            var e = t.getHP() / t.getMaxHP() * 360;
            this.bar.setProgress(e, 360);
        } else this.bar.setProgress(0, 100);
    }, e.prototype.update = function() {
        0 != GaoBaoBoss.ins().guishuItem.handle && GaoBaoBoss.ins().guishuItem.handle == GaoBaoBoss.ins().curEnemyHandle ? this.addeff() : this.removeeff();
    }, e.prototype.addeff = function() {
        this.mc || (this.mc = new MovieClip(), this.mc.playFile(ResPath.getUIEffectPath(UiEffectType.Type28), -1), 
        this.mcCon.addChild(this.mc));
    }, e.prototype.removeeff = function() {
        this.mc && (DisplayUtils.removeFromParent(this.mc), this.mc.stop(), this.mc = null);
    }, e.prototype.setData = function() {
        var t = GaoBaoBoss.ins().guishuItem;
        this.headIcon.source = ResPath.getHeadIcon(t.sex, 1), this.nameTxt.text = t.playerName;
    }, e;
}(BaseView);

__reflect(GaoBaoBossGuishuItem.prototype, "GaoBaoBossGuishuItem");

window.GaoBaoBossGuishuItem = GaoBaoBossGuishuItem;

var GaoBaoBossMyItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        e.skinName = "GaoBaoBossGuishuSkin", e.guishuTxt.text = "自己", e.bar = new CoolingQueueMcForCircle(e.hpBar, 90);
        var i = SubRoles.ins().getSubRoleByIndex(0);
        return e.headIcon.source = ResPath.getHeadIcon(i.sex, 1), e.nameTxt.text = i.name, 
        e;
    }
    return __extends(e, t), e.prototype.open = function() {
        this.observe(GameLogic.ins().postHpChange, this.updateMyHp), this.observe(GameLogic.ins().postRoleState, this.updateMyHp);
    }, e.prototype.close = function() {
        this.removeEvents();
    }, e.prototype.updateMyHp = function() {
        var t = SubRoles.ins().getSubRoleByIndex(0), e = t.getAtt(AttributeType.atHp) || 0, i = t.getAtt(AttributeType.atMaxHp) || 0;
        GameLogic.ins().roleAlive || (e = 0);
        var n = e / i * 360;
        this.bar.setProgress(n, 360);
    }, e;
}(BaseView);

__reflect(GaoBaoBossMyItem.prototype, "GaoBaoBossMyItem");

window.GaoBaoBossMyItem = GaoBaoBossMyItem;

var GaoBaoBossView = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "GaoBaoBossSkin", e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.init();
    }, e.prototype.init = function() {
        this.mc = new MovieClip(), this.mcCon.addChild(this.mc), this.rewardList.itemRenderer = ItemBase;
        var t = GlobalConfig.ins().GaobaoBossCommonConfig.bossId, e = GlobalConfig.ins().MonstersConfig(t);
        this.mc.playFile("" + ResPath.RES_DIR_MONSTER + MonstersConfig.realAvatar(e) + "_" + EntityAction.STAND + CharDirEnum.SOUTH_EAST, -1), 
        this.rewardList.dataProvider = new eui.ArrayCollection(GlobalConfig.ins().GaobaoBossCommonConfig.bossRewardList), 
        this.ruleTxt.text = GlobalConfig.ins().GaobaoBossCommonConfig.ruleTips;
    }, e.prototype.open = function() {
        this.observe(GaoBaoBoss.ins().postBaseInfo, this.updateBossInfo), this.addTouchEvent(this.challengeBtn, this.onClick), 
        this.addTouchEvent(this.rewardBtn, this.onClick), GaoBaoBoss.ins().sendBaseInfo();
    }, e.prototype.close = function() {
        this.removeEvents(), this.removeObserve();
    }, e.prototype.updateBossInfo = function() {
        var t = GaoBaoBossData0.ins();
        t.challengeCD > 0 ? (this.challengeBtn.enabled = !1, this.challengeBtn.filters = [ ColorUtil.colorMat ]) : (this.challengeBtn.enabled = !0, 
        this.challengeBtn.filters = null), t.challengeCD = 1e3 * t.challengeCD + egret.getTimer() + 500, 
        this.updateTime();
    }, e.prototype.updateTime = function() {
        var t = Math.floor((GaoBaoBossData0.ins().totalTime - egret.getTimer()) / 1e3);
        if (0 >= t) return void (this.timeTxt.text = "已结束");
        var e;
        if (e = t > DateUtils.SECOND_PER_DAY ? DateUtils.getFormatBySecond(t, DateUtils.TIME_FORMAT_5, 4) : DateUtils.getFormatBySecond(t, DateUtils.TIME_FORMAT_9), 
        this.timeTxt.text = e, 0 == this.challengeBtn.enabled) {
            if (t = Math.floor((GaoBaoBossData0.ins().challengeCD - egret.getTimer()) / 1e3), 
            0 >= t) return this.challengeBtn.enabled = !0, this.challengeBtn.filters = null, 
            void (this.challengeBtn.label = "挑 战");
            this.challengeBtn.label = "挑 战(" + t + "S)";
        }
    }, e.prototype.onClick = function(t) {
        switch (t.target) {
          case this.challengeBtn:
            if (!GameMap.canEnterFb()) return;
            GaoBaoBoss.ins().sendChallenge();
            break;

          case this.rewardBtn:
            ViewManager.ins().open(GaoBaoBossRewardWin);
        }
    }, e;
}(BaseView);

__reflect(GaoBaoBossView.prototype, "GaoBaoBossView");

window.GaoBaoBossView = GaoBaoBossView;

var GodRankDaBiaoView = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "GodRankDaBiaoViewSkin", e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.list.itemRenderer = GodRankDaBiaoItem;
    }, e.prototype.open = function() {
        this.observe(GodRank.ins().postGodRankInfo, this.updataView), this.addTouchEvent(this.getItemBtn, this.onTabTouch), 
        this.addTouchEvent(this.list, this.onBtnClick), this.updataView(), TimerManager.ins().doTimer(1e3, 0, this.updateTime, this), 
        this.updateTime();
    }, e.prototype.updateTime = function() {
        var t = Math.floor((DateUtils.formatMiniDateTime(GodRankData.instance.endTime) - GameServer.serverTime) / 1e3);
        t > 0 ? this.timeTxt.text = DateUtils.getFormatBySecond(t, DateUtils.TIME_FORMAT_9) : this.timeTxt.text = "0时0分0秒";
    }, e.prototype.onBtnClick = function(t) {
        if (t.target instanceof eui.Button && t.target.parent instanceof GodRankDaBiaoItem) {
            var e = t.target.parent;
            e.getAward();
        }
    }, e.prototype.onTabTouch = function(t) {
        var e = GodRankData.instance.getCurThemeCfg().winOpen.split("#");
        ViewManager.ins().open(e[0], e[1]);
    }, e.prototype.updataView = function() {
        var t = GodRankData.instance, e = (GlobalConfig.ins().ZhuShenBangCommonConfig.RankScoreLimit, 
        t.getCurThemeCfg()), i = t.getNextThemeCfg();
        this.nameTx.text = e.themeName, this.nextTxt.text = i.themeName, this.currTitle.source = "godRank_curName" + e.type, 
        this.nextTitle.source = "godRank_nextName" + i.type;
        var n = t.myRank > 0 ? "（" + t.myRank + "）" : "（未上榜）";
        this.myTx.text = t.myJiFen + " " + n;
        var s = t.getSortDaBiaoVoArr();
        this.list.dataProvider = new eui.ArrayCollection(s);
    }, e.prototype.close = function() {
        TimerManager.ins().remove(this.updateTime, this), this.removeEvents(), this.removeObserve();
    }, e;
}(BaseView);

__reflect(GodRankDaBiaoView.prototype, "GodRankDaBiaoView");

window.GodRankDaBiaoView = GodRankDaBiaoView;

var GodRankLiBaoView = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "GodRankLiBaoViewSkin", e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.list.itemRenderer = GodRankLiBaoItem;
    }, e.prototype.open = function() {
        this.observe(GodRank.ins().postGodRankInfo, this.updataView), this.observe(UserVip.ins().postUpdateVipData, this.updataView), 
        this.addTouchEvent(this.getItemBtn, this.onTabTouch), this.addTouchEvent(this.list, this.onBtnClick), 
        this.updataView(), TimerManager.ins().doTimer(1e3, 0, this.updateTime, this), this.updateTime();
    }, e.prototype.updateTime = function() {
        var t = Math.floor((DateUtils.formatMiniDateTime(GodRankData.instance.endTime) - GameServer.serverTime) / 1e3);
        t > 0 ? this.timeTxt.text = DateUtils.getFormatBySecond(t, DateUtils.TIME_FORMAT_9) : this.timeTxt.text = "0时0分0秒";
    }, e.prototype.onBtnClick = function(t) {
        if (t.target instanceof eui.Button && t.target.parent instanceof GodRankLiBaoItem) {
            var e = t.target.parent;
            e.buyGift();
        }
    }, e.prototype.onTabTouch = function(t) {
        ViewManager.ins().open(VipWin);
    }, e.prototype.updataView = function() {
        var t = GodRankData.instance, e = t.getNextThemeCfg();
        this.nextTxt.text = e.themeName, this.myTx.text = UserVip.ins().lv + "";
        var i = t.getCurLiBaoCfgArr().concat();
        this.list.dataProvider = new eui.ArrayCollection(i);
        var n = t.getCurThemeCfg();
        this.currTitle.source = "godRank_curName" + n.type, this.nextTitle.source = "godRank_nextName" + e.type;
    }, e.prototype.close = function() {
        TimerManager.ins().remove(this.updateTime, this), this.removeEvents(), this.removeObserve();
    }, e;
}(BaseView);

__reflect(GodRankLiBaoView.prototype, "GodRankLiBaoView");

window.GodRankLiBaoView = GodRankLiBaoView;

var GodRankPayView = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "GodRankPayViewSkin", e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.list.itemRenderer = GodRankPayItem;
    }, e.prototype.open = function() {
        this.observe(GodRank.ins().postGodRankInfo, this.updataView), this.observe(GodRank.ins().postPayAndConsumeBack, this.updataView), 
        TimerManager.ins().doTimer(1e3, 0, this.updateTime, this), this.addTouchEvent(this.list, this.onBtnClick), 
        this.addTouchEvent(this.btnRecharge, this.onTabTouch), this.updataView(), this.updateTime();
    }, e.prototype.updateTime = function() {
        var t = Math.floor((DateUtils.formatMiniDateTime(GodRankData.instance.endTime) - GameServer.serverTime) / 1e3);
        t > 0 ? this.timeTxt.text = DateUtils.getFormatBySecond(t, DateUtils.TIME_FORMAT_9) : this.timeTxt.text = "0时0分0秒";
    }, e.prototype.updataView = function() {
        var t = GodRankData.instance;
        this.hasRecharge.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(LangManager.rechargeStr1, t.payMoney));
        var e = t.getSortPayVoArr();
        this.list.dataProvider = new eui.ArrayCollection(e);
    }, e.prototype.onTabTouch = function(t) {
        Recharge.ins().gameCharge(1);
    }, e.prototype.onBtnClick = function(t) {
        if (t.target instanceof eui.Button && t.target.parent instanceof GodRankPayItem) {
            var e = t.target.parent;
            e.getAward();
        }
    }, e.prototype.close = function() {
        TimerManager.ins().remove(this.updateTime, this), this.removeEvents(), this.removeObserve();
    }, e;
}(BaseView);

__reflect(GodRankPayView.prototype, "GodRankPayView");

window.GodRankPayView = GodRankPayView;

var GodRankSumeView = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "GodRankSumeViewSkin", e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.list.itemRenderer = GodRankSumeItem;
    }, e.prototype.open = function() {
        this.observe(GodRank.ins().postGodRankInfo, this.updataView), this.observe(GodRank.ins().postPayAndConsumeBack, this.updataView), 
        TimerManager.ins().doTimer(1e3, 0, this.updateTime, this), this.addTouchEvent(this.list, this.onBtnClick), 
        this.addTouchEvent(this.btnRecharge, this.onTabTouch), this.updataView(), this.updateTime();
    }, e.prototype.updataView = function() {
        var t = GodRankData.instance;
        this.hasConsume.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(LangManager.rechargeStr3, t.sumeMoney));
        var e = t.getSortSumeVoArr();
        this.list.dataProvider = new eui.ArrayCollection(e);
    }, e.prototype.onTabTouch = function(t) {
        Recharge.ins().gameCharge(1);
    }, e.prototype.onBtnClick = function(t) {
        if (t.target instanceof eui.Button && t.target.parent instanceof GodRankSumeItem) {
            var e = t.target.parent;
            e.getAward();
        }
    }, e.prototype.updateTime = function() {
        var t = Math.floor((DateUtils.formatMiniDateTime(GodRankData.instance.endTime) - GameServer.serverTime) / 1e3);
        t > 0 ? this.timeTxt.text = DateUtils.getFormatBySecond(t, DateUtils.TIME_FORMAT_9) : this.timeTxt.text = "0时0分0秒";
    }, e.prototype.close = function() {
        TimerManager.ins().remove(this.updateTime, this), this.removeEvents(), this.removeObserve();
    }, e;
}(BaseView);

__reflect(GodRankSumeView.prototype, "GodRankSumeView");

window.GodRankSumeView = GodRankSumeView;

var GodRankView = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "GodRankViewSkin", e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.firstRewardList.itemRenderer = ItemBase, this.rankRewardList.itemRenderer = GodRankItem;
    }, e.prototype.open = function() {
        this.observe(GodRank.ins().postGodRankInfo, this.updataView), this.addTouchEvent(this.getItemBtn, this.onTabTouch), 
        this.updataView(), TimerManager.ins().doTimer(1e3, 0, this.updateTime, this), this.updateTime();
    }, e.prototype.updateTime = function() {
        var t = Math.floor((DateUtils.formatMiniDateTime(GodRankData.instance.endTime) - GameServer.serverTime) / 1e3);
        t > 0 ? this.timeTxt.text = DateUtils.getFormatBySecond(t, DateUtils.TIME_FORMAT_9) : this.timeTxt.text = "0时0分0秒";
    }, e.prototype.onTabTouch = function(t) {
        var e = GodRankData.instance.getCurThemeCfg().winOpen.split("#");
        ViewManager.ins().open(e[0], e[1]);
    }, e.prototype.updataView = function() {
        var t = GodRankData.instance, e = (GlobalConfig.ins().ZhuShenBangCommonConfig.RankScoreLimit, 
        t.getCurThemeCfg()), i = t.getNextThemeCfg();
        this.nameTx.text = e.themeName, this.nextTxt.text = i.themeName, this.currTitle.source = "godRank_curName" + e.type, 
        this.nextTitle.source = "godRank_nextName" + i.type;
        var n = t.rankVoArr;
        n.length <= 0 || 0 == n[0].rank || 0 == n[0].serverId ? (this.firstplayer.text = "虚位以待", 
        this.head.source = ResPath.getHeadIcon(0, 1)) : (this.firstplayer.text = "S" + n[0].serverId + "." + n[0].name, 
        this.head.source = ResPath.getHeadIcon(n[0].sex, 1));
        var s = GodRankData.instance.getRankAwardCfgByRank(1), a = s.award.concat();
        this.firstRewardList.dataProvider = new eui.ArrayCollection(a);
        var o = t.myRank > 0 ? "（" + t.myRank + "）" : "（未上榜）";
        this.myTx.text = t.myJiFen + " " + o;
        var r = t.getRankAwardCfgArr().concat();
        r.length > 0 && r.shift(), this.rankRewardList.dataProvider = new eui.ArrayCollection(r);
    }, e.prototype.close = function() {
        TimerManager.ins().remove(this.updateTime, this), this.removeEvents(), this.removeObserve();
    }, e;
}(BaseView);

__reflect(GodRankView.prototype, "GodRankView");

window.GodRankView = GodRankView;

var GuildActityPanel = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.initUI(), e.name = "宗门活动", e;
    }
    return __extends(e, t), e.prototype.initUI = function() {
        this.skinName = "GuildActitySkin", this.list.itemRenderer = GuildActityItemRender;
    }, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.updateData(), this.addTouchEvent(this.list, this.onListTouch);
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeTouchEvent(this.list, this.onListTouch);
    }, e.prototype.updateData = function() {
        var t = [];
        for (var e in GlobalConfig.ins().guildActivityConfig) {
            var i = GlobalConfig.ins().guildActivityConfig[e];
            t.push(i);
        }
        this.list.dataProvider = new eui.ArrayCollection(t);
    }, e.prototype.onListTouch = function(t) {
        if (t.target instanceof eui.Button) {
            var e = t.target.parent.parent;
            e.onTap(t.target);
        }
    }, e;
}(BaseView);

__reflect(GuildActityPanel.prototype, "GuildActityPanel");

window.GuildActityPanel = GuildActityPanel;

var GuildBuildItem = function(t) {
    function e(e) {
        var i = t.call(this) || this;
        return i.isNoenoughType = -1, i.index = e, i.skinName = "GuildBuildItemSkin", i.icon.source = "guild_stone" + i.index, 
        i.iconName.source = "guild_stoneName" + i.index, i.moneyTxt.text = "", i.conTxt.text = "", 
        i.priceLabel.text = "", i.progressTxt.text = "", i.redPoint.visible = !1, i;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = GlobalConfig.ins().GuildConstructionConfig[this.index], e = GuildStore.ins().buildDataList[this.index];
        if (t && e) {
            switch (this.moneyTxt.text = t.awardFund + "", this.conTxt.text = t.awardContri + "", 
            this.priceLabel.text = t.currencyCount + "", this.progressTxt.text = "(" + e.buildTime + "/" + t.times + ")", 
            this.priceIcon.source = RewardData.getSmallCurrencyRes(t.currencyType), t.currencyType) {
              case 1:
                this.isNoenoughType = Actor.gold >= t.currencyCount ? -1 : t.currencyType;
                break;

              case 2:
                this.isNoenoughType = Actor.yb >= t.currencyCount ? -1 : t.currencyType;
            }
            1 == this.index && e.buildTime < t.times ? this.redPoint.visible = GuildIconRule.firstBuildTap : this.redPoint.visible = !1;
        }
    }, e.prototype.open = function() {
        this.addTouchEvent(this.btnBuild, this.onClick);
    }, e.prototype.close = function() {
        this.removeTouchEvent(this.btnBuild, this.onClick);
    }, e.prototype.onClick = function(t) {
        switch (this.isNoenoughType) {
          case 1:
            UserTips.ins().showTips("铜钱不足");
            break;

          case 2:
            UserWarn.ins().showWanTips0(WarnTipsWin0.TYPE_1);
            break;

          default:
            GuildStore.ins().sendBuildGuild(this.index);
        }
        1 == this.index && GuildIconRule.firstBuildTap && (GuildIconRule.firstBuildTap = !1, 
        this.redPoint.visible = GuildIconRule.firstBuildTap, Guild.ins().postRedPoint());
    }, e;
}(BaseView);

__reflect(GuildBuildItem.prototype, "GuildBuildItem");

window.GuildBuildItem = GuildBuildItem;

var GuildBuildWin = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "GuildBuildSkin", e.init(), e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {}, e.prototype.init = function() {
        this.initUI();
    }, e.prototype.initUI = function() {
        this.setSkinPart("item1", new GuildBuildItem(1)), this.setSkinPart("item2", new GuildBuildItem(2)), 
        this.setSkinPart("item3", new GuildBuildItem(3));
    }, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.observe(GuildStore.ins().postGuildBuildInfo, this.updateData), this.observe(Guild.ins().postUpBuilding, this.updateFalgInfo), 
        this.observe(Guild.ins().postGuildMoney, this.updateFalgInfo), this.addTouchEvent(this.btnFlag, this.onClick), 
        this.addTouchEvent(this.btnUpgrade, this.onClick);
        for (var i = 1; 3 >= i; i++) this["item" + i].open();
        GuildStore.ins().sendGuildBuildInfo(), GuildStore.ins().sendGuildBuildInfo(), this.updateFalgInfo();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeTouchEvent(this.btnFlag, this.onClick), this.removeTouchEvent(this.btnUpgrade, this.onClick);
        for (var i = 1; 3 >= i; i++) this["item" + i].close();
        this.removeObserve();
    }, e.prototype.updateData = function() {
        for (var t = 1; 3 >= t; t++) this["item" + t].dataChanged();
    }, e.prototype.updateFalgInfo = function() {
        this.bar.maximum = 0, this.redPoint.visible = Guild.ins().isUp(), this.title.text = "旗帜等级 " + Guild.ins().guildLv + "级";
        var t, e = GlobalConfig.ins().GuildLevelConfig[GuildBuilding.GUILD_HALL], i = null, n = null;
        for (var s in e) if (e.hasOwnProperty(s)) {
            var a = e[s];
            t = a.level > t ? a.level : t, a.level == Guild.ins().guildLv && (i = a), a.level == Guild.ins().guildLv + 1 && (n = a);
        }
        i && (n ? (this.bar.maximum = n.upFund, this.bar.value = Guild.ins().money, this.bar.name = Guild.ins().money + "") : (this.bar.maximum = i.upFund, 
        this.bar.value = i.upFund, this.bar.name = i.upFund + ""), this.bar.labelFunction = this.barLabelFunction);
    }, e.prototype.barLabelFunction = function(t, e) {
        return parseInt(this.name) + "/" + e;
    }, e.prototype.onClick = function(t) {
        switch (t.target) {
          case this.btnFlag:
            ViewManager.ins().open(GuildFlagWin);
            break;

          case this.btnUpgrade:
            ViewManager.ins().open(GuildManagePanel);
        }
    }, e;
}(BaseView);

__reflect(GuildBuildWin.prototype, "GuildBuildWin");

window.GuildBuildWin = GuildBuildWin;

var GuildMosterPanel = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.bossmc = new MovieClip(), e.bossmc.scaleX = -1, e.bossmc.scaleY = 1, e.bossmc.x = 0, 
        e.bossmc.y = 0, e.addChild(e.bossmc), e.staticMc = new MovieClip(), e.addChild(e.staticMc), 
        e.staticMc.y = -60, e.addTouchEvent(e, e.onTap), e.nameLabel = new egret.TextField(), 
        e.nameLabel.size = 16, e.nameLabel.textColor = 16711680, e.nameLabel.stroke = 1.5, 
        e.addChild(e.nameLabel), e;
    }
    return __extends(e, t), e.prototype.onTap = function(t) {
        return 1 == this.start.robberStart ? void UserTips.ins().showTips("|C:0xff0000&T:正在被挑战中|") : GuildRobber.ins().robberChanllge >= GlobalConfig.ins().robberfbconfig.challengeMax ? void UserTips.ins().showTips("|C:0xff0000&T:本日挑战次数不足|") : (GuildRobber.ins().sendRobberChanger(this.index), 
        void ViewManager.ins().close(GuildMap));
    }, e.prototype.update = function(t, e, i) {
        this.start = t;
        var n = "";
        n = GlobalConfig.ins().robberfbconfig.effect[this.start.robberType - 1], this.bossmc.playFile(ResPath.RES_DIR_MONSTER + ("monster" + n + "_" + i + "s"), -1), 
        this.index = e + 1, this.staticMc.playFile(ResPath.RES_DIR_EFF + (0 == t.robberStart ? "ketiaozhan" : "zhandouzhong"), -1);
        var s = [ "强盗", "精英", "BOSS" ];
        this.nameLabel.text = s[this.start.robberType - 1], this.nameLabel.x = (this.width - this.nameLabel.width) / 2, 
        this.nameLabel.y = this.height;
    }, e;
}(BaseView);

__reflect(GuildMosterPanel.prototype, "GuildMosterPanel");

window.GuildMosterPanel = GuildMosterPanel;

var GuildInteRankInfo = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "GuildInteRankSkin", e.name = "公会排行", e.list.itemRenderer = GuildInteRankItemRenderer, 
        e.data = new eui.ArrayCollection([]), e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.list.dataProvider = this.data, this.observe(GuildWar.ins().postRankInfo, this.refushList), 
        GuildWar.ins().requestGuildRank();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeObserve();
    }, e.prototype.refushList = function() {
        this.data.replaceAll(GuildWar.ins().getModel().guildRankList);
    }, e;
}(BaseView);

__reflect(GuildInteRankInfo.prototype, "GuildInteRankInfo");

window.GuildInteRankInfo = GuildInteRankInfo;

var GuildInteRewardInfo = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "GuildInteRewardSkin", e.name = "宗门奖励", e.dataArr = new eui.ArrayCollection(), 
        e.dataArr1 = new eui.ArrayCollection(), e.itemList.itemRenderer = ItemBase, e.list1.itemRenderer = GuildInteRewardItemRenderer, 
        e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        var i = GuildWar.ins().getModel().creatGuildRewardList();
        this.dataArr1.source = i, this.list1.dataProvider = this.dataArr1;
        var n = GlobalConfig.ins().GuildBattleConst.occupationAward;
        this.dataArr.source = n, this.itemList.dataProvider = this.dataArr;
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.dataArr.source = null, this.dataArr1.source = null;
    }, e;
}(BaseView);

__reflect(GuildInteRewardInfo.prototype, "GuildInteRewardInfo");

window.GuildInteRewardInfo = GuildInteRewardInfo;

var PersonalInteRankInfo = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "PersonalInteRankSkin", e.name = "个人排行", e.list.itemRenderer = GuildInteRankItemRenderer, 
        e.data = new eui.ArrayCollection([]), e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.list.dataProvider = this.data, this.observe(GuildWar.ins().postRankInfo, this.refushList), 
        GuildWar.ins().requestOwnGuildRank();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeObserve();
    }, e.prototype.refushList = function() {
        this.data.replaceAll(GuildWar.ins().getModel().guildRankList);
    }, e;
}(BaseView);

__reflect(PersonalInteRankInfo.prototype, "PersonalInteRankInfo");

window.PersonalInteRankInfo = PersonalInteRankInfo;

var PersonInteRewardInfo = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "PersonInteRewardSkin", e.name = "个人奖励", e.list.itemRenderer = PersonRewardRenderer, 
        e.list1.itemRenderer = GuildInteRewardItemRenderer, e.dataArr = new eui.ArrayCollection(), 
        e.dataArr1 = new eui.ArrayCollection(), e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        if (!this.dataList) {
            this.dataList = [];
            var i = GlobalConfig.ins().GuildBattlePersonalAward;
            for (var n in i) this.dataList.push(i[n]);
        }
        if (this.dataArr.source = this.dataList, this.list.dataProvider = this.dataArr, 
        !this.dataList1) {
            this.dataList1 = [];
            var i = GlobalConfig.ins().GuildBattlePersonalRankAward;
            for (var n in i) this.dataList1.push(i[n]);
        }
        this.dataArr1.source = this.dataList1, this.list1.dataProvider = this.dataArr1;
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
    }, e;
}(BaseView);

__reflect(PersonInteRewardInfo.prototype, "PersonInteRewardInfo");

window.PersonInteRewardInfo = PersonInteRewardInfo;

var HolidayActivitySubItem10 = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "HolidayActivitySubItemSkin10", e.setSkinPart("item", new ItemBase()), 
        e;
    }
    return __extends(e, t), e.prototype.open = function() {}, e.prototype.close = function() {}, 
    e.prototype.updateData = function(t) {
        this.item.data = t.awardList, this.isGetImg.visible = QingmingSubData2.ins().isGet(t.index), 
        this.item.setIconBg("common_grid2_png");
    }, e;
}(BaseView);

__reflect(HolidayActivitySubItem10.prototype, "HolidayActivitySubItem10");

window.HolidayActivitySubItem10 = HolidayActivitySubItem10;

var HolidayActivitySubItem7 = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "HolidayActivitySubItemSkin7", e.ybNum = BitmapNumber.ins().createNumPic(0, "num22", 4), 
        e.addChild(e.ybNum), e;
    }
    return __extends(e, t), e.prototype.open = function() {
        this.addTouchEvent(this.giftImg, this.onClick);
    }, e.prototype.close = function() {
        this.removeEvents();
    }, e.prototype.setData = function(t) {
        this.config = t;
        var e = this.config.pay / 10;
        BitmapNumber.ins().changeNum(this.ybNum, e, "num22", 6), this.ybNum.x = this.imgBg.x + 20, 
        this.ybNum.y = this.imgTitle.y, this.imgTitle.x = this.ybNum.x + this.ybNum.width - 10, 
        this.imgRedPoint.visible = NewYearActivityData4.ins().getCanGet(this.config.index), 
        this.isGetImg.visible = NewYearActivityData4.ins().getIsGet(this.config.index);
    }, e.prototype.onClick = function(t) {
        this.select = !0;
    }, Object.defineProperty(e.prototype, "select", {
        get: function() {
            return this._select;
        },
        set: function(t) {
            t && MessageCenter.ins().dispatch(NewYearActivitySubPanel4.SELECT_FUBAO_GIFT, this.config), 
            this._select = t, this.selectImg.visible = t;
        },
        enumerable: !0,
        configurable: !0
    }), e;
}(BaseView);

__reflect(HolidayActivitySubItem7.prototype, "HolidayActivitySubItem7");

window.HolidayActivitySubItem7 = HolidayActivitySubItem7;

var HolidayActivitySubPanel0 = function(t) {
    function e() {
        var e = t.call(this) || this;
        e.skinName = "HolidayActivitySubSkin0", e.list.itemRenderer = ItemBase;
        for (var i = NewYearActivityData0.ins().getLen(), n = 0; n < i.length; n++) e.setSkinPart("day" + i[n].day, new HolidayActivitySubItem0()), 
        e["day" + i[n].day].data = i[n];
        return e;
    }
    return __extends(e, t), e.prototype.initUI = function() {}, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEndEvent(this.btnGet, this.onBtnClick), this.addTouchEndEvent(this.day1, this.onItemTouch), 
        this.addTouchEndEvent(this.day2, this.onItemTouch), this.addTouchEndEvent(this.day3, this.onItemTouch), 
        this.addTouchEndEvent(this.day4, this.onItemTouch), this.addTouchEndEvent(this.day5, this.onItemTouch), 
        this.addTouchEndEvent(this.day6, this.onItemTouch), this.addTouchEndEvent(this.day7, this.onItemTouch), 
        this.observe(NewyearActivity.ins().postDataInfo, this.updateData), this.updateData();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeEvents(), this.removeObserve(), this.selectItem = null;
    }, e.prototype.updateData = function() {
        var t = NewYearActivityData0.ins();
        this.loginDayTxt.text = "登陆天数：" + t.day, this.selectIndex = this.getNextIndex(), 
        this.selectDay(), this.updateTime();
    }, e.prototype.onItemTouch = function(t) {
        t.target.parent instanceof HolidayActivitySubItem0 && (this.selectIndex = t.target.parent.day), 
        null != this.selectItem && (this.selectItem.selected = !1), this.selectDay();
    }, e.prototype.upDayItem = function() {
        var t = NewYearActivityData0.ins();
        if (t.day) {
            var e = t.getLen();
            if (e[0]) for (var i = 0; i < e.length; i++) this["day" + e[i].day].redPoint.visible = t.day >= e[i].day && 0 == (t.flag >> e[i].day & 1), 
            this["day" + e[i].day].imgGet.visible = 1 == (t.flag >> e[i].day & 1), this["day" + e[i].day].selected = this.selectIndex == this["day" + e[i].day].day;
        }
    }, e.prototype.selectDay = function() {
        this.upDayItem();
        var t = this.selectIndex, e = NewYearActivityData0.ins();
        if (e.day) {
            var i = e.getLen()[t - 1];
            i && (this.list.dataProvider = new eui.ArrayCollection(i.rewards), this.btnGet.visible = !e.getFlag(t), 
            this.imgGet.visible = !this.btnGet.visible, t > e.day ? (this.btnGet.icon = "rebatehall_title2", 
            this.btnGet.enabled = !1, this.btnGet.filters = [ ColorUtil.colorMat ]) : (this.btnGet.icon = "rebatehall_title1", 
            this.btnGet.enabled = !0, this.btnGet.filters = null));
        }
    }, e.prototype.getNextIndex = function() {
        for (var t, e = NewYearActivityData0.ins(), i = e.getLen(), n = 0; n < i.length; n++) {
            t = i[n];
            var s = e.day >= t.day && 0 == (e.flag >> t.day & 1);
            if (s) return t.day;
        }
        var a = i[i.length - 1].day;
        return e.day > a ? a : e.day;
    }, e.prototype.onBtnClick = function(t) {
        if (t.target == this.btnGet) {
            var e = this.selectIndex;
            NewyearActivity.ins().sendGetDayReward(e);
        }
    }, e.prototype.updateTime = function() {
        var t = HolidayData.ins().listArr[holidayId.loading - 1], e = DateUtils.formatMiniDateTime(t.eTime) - GameServer.serverTime;
        this.totalTime = e + egret.getTimer(), this.timeTxt.text = CountdownHelp.countdown1(t.sTime, t.eTime, this.totalTime);
    }, e;
}(BaseView);

__reflect(HolidayActivitySubPanel0.prototype, "HolidayActivitySubPanel0");

window.HolidayActivitySubPanel0 = HolidayActivitySubPanel0;

var HolidayActivitySubPanel4 = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "HolidayActivitySubSkin4", e.listData = new eui.ArrayCollection(), 
        e.list.itemRenderer = HolidayActivitySubItem4, e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEndEvent(this.btnRecharge, this.onBtnClick), this.addTouchEvent(this.list, this.onBtnClick), 
        this.observe(Recharge.ins().postHolidayTotalRechargeData, this.updateData), this.updateData();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeEvents(), this.removeObserve();
    }, e.prototype.updateData = function() {
        var t = HolidayActivityData0.ins();
        this.hasRecharge.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(LangManager.rechargeStr1, t.recharge)), 
        this.updateTime();
        var e = GlobalConfig.ins().HolidayTotalRechargeAwardConfig, i = [];
        for (var n in e) i.push(e[n]);
        i.sort(this.sortData), this.listData.replaceAll(i), this.list.dataProvider = this.listData;
    }, e.prototype.sortData = function(t, e) {
        var i = HolidayActivityData0.ins(), n = 1 == (i.flag >> t.index & 1), s = 1 == (i.flag >> e.index & 1);
        return n && s || !n && !s ? t.index > e.index ? 1 : t.index < e.index ? -1 : 0 : n ? 1 : -1;
    }, e.prototype.onBtnClick = function(t) {
        if (t.target instanceof eui.Button) if (t.target.parent instanceof HolidayActivitySubItem4) {
            if (!t.target.parent.isCanGet) return void UserTips.ins().showTips("未达到条件");
            Recharge.ins().sendHolidayTotalRecahrgeAward(t.target.parent.index);
        } else t.target == this.btnRecharge && Recharge.ins().gameCharge(1);
    }, e.prototype.updateTime = function() {
        var t = HolidayData.ins().listArr[holidayId.totalCz - 1], e = DateUtils.formatMiniDateTime(t.eTime) - GameServer.serverTime;
        this.totalTime = e + egret.getTimer(), this.timeTxt.text = CountdownHelp.countdown1(t.sTime, t.eTime, this.totalTime);
    }, e;
}(BaseView);

__reflect(HolidayActivitySubPanel4.prototype, "HolidayActivitySubPanel4");

window.HolidayActivitySubPanel4 = HolidayActivitySubPanel4;

var HolidayActivitySubPanel8 = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "HolidayActivitySubSkin8", e.listData = new eui.ArrayCollection(), 
        e.list.itemRenderer = HolidayActivitySubItem8, e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEndEvent(this.btnRecharge, this.onBtnClick), this.addTouchEvent(this.list, this.onBtnClick), 
        this.observe(NewyearActivity.ins().postLianxuInfo, this.updateData), this.updateData();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeTouchEvent(this.btnRecharge, this.onBtnClick), this.removeTouchEvent(this.list, this.onBtnClick);
    }, e.prototype.updateData = function() {
        var t = NewYearActivityData1.ins();
        this.hasRecharge.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(LangManager.rechargeStr1, t.recharge)), 
        this.updateTime();
        var e = GlobalConfig.ins().ChunjieLianxuConfig, i = [];
        for (var n in e) i.push(e[n]);
        i.sort(this.sortData), this.listData.replaceAll(i), this.list.dataProvider = this.listData;
    }, e.prototype.sortData = function(t, e) {
        var i = NewYearActivityData1.ins(), n = 1 == (i.flag >> t.index - 1 & 1), s = 1 == (i.flag >> e.index - 1 & 1);
        return n && s || !n && !s ? t.index > e.index ? 1 : t.index < e.index ? -1 : 0 : n ? 1 : -1;
    }, e.prototype.onBtnClick = function(t) {
        if (t.target instanceof eui.Button) if (t.target.parent instanceof HolidayActivitySubItem8) {
            if (!t.target.parent.isCanGet) return void UserTips.ins().showTips("未达到条件");
            NewyearActivity.ins().sendGetLianxu(t.target.parent.index);
        } else t.target == this.btnRecharge && Recharge.ins().gameCharge(1);
    }, e.prototype.updateTime = function() {
        var t = HolidayData.ins().listArr[holidayId.recharge - 1], e = DateUtils.formatMiniDateTime(t.eTime) - GameServer.serverTime;
        this.totalTime = e + egret.getTimer(), this.timeTxt.text = CountdownHelp.countdown1(t.sTime, t.eTime, this.totalTime);
    }, e;
}(BaseView);

__reflect(HolidayActivitySubPanel8.prototype, "HolidayActivitySubPanel8");

window.HolidayActivitySubPanel8 = HolidayActivitySubPanel8;

var InvestLevelPanel = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "InvestLevelSkin", e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.init();
    }, e.prototype.init = function() {
        this.touchEnabled = !1, this.touchChildren = !0, this.list.dataProvider = null, 
        this.list.itemRenderer = InvestLevelItem, this.investTxt.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(LangManager.investment_str0, GlobalConfig.ins().GradeInvestConfig[1].pay)), 
        this.vipTxt.text = "VIP" + GlobalConfig.ins().GradeInvestConfig[1].id + "可购买";
    }, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEndEvent(this.btnInvest, this.onBtnClick), this.addTouchEndEvent(this.list, this.onBtnClick), 
        this.observe(Invest.ins().postInvestLevelData, this.updateData), this.updateData();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeTouchEvent(this.btnInvest, this.onBtnClick), this.removeTouchEvent(this.list, this.onBtnClick), 
        this.removeObserve(), this.removeEff();
    }, e.prototype.onBtnClick = function(t) {
        if (t.target instanceof eui.Button) if (t.target.parent instanceof InvestLevelItem) {
            if (!InvestLevelData.ins().isInvest) return void UserTips.ins().showTips("请先投资");
            if (!t.target.parent.isLevelEnough) return void UserTips.ins().showTips("等级不足");
            if (!t.target.parent.isZsEnough) return void UserTips.ins().showTips(" 转生等级不足");
            Invest.ins().sendGetInvestLevel(t.target.parent.index);
        } else if (t.target == this.btnInvest) {
            if (UserVip.ins().lv < GlobalConfig.ins().GradeInvestConfig[1].id) return void UserWarn.ins().showWanTips0(WarnTipsWin0.TYPE_0);
            Invest.ins().sendInvestLevel();
        }
    }, e.prototype.removeEff = function() {
        this.eff && (this.eff.stop(), DisplayUtils.removeFromParent(this.eff), this.eff = null);
    }, e.prototype.updateData = function() {
        var t = InvestLevelData.ins(), e = [];
        for (var i in GlobalConfig.ins().GradeInvestConfig) {
            var n = GlobalConfig.ins().GradeInvestConfig[i];
            e.push(n);
        }
        e.sort(this.sortData), this.list.dataProvider = new eui.ArrayCollection(e), t.isInvest ? (this.btnInvest.enabled = !1, 
        this.btnInvest.filters = [ ColorUtil.colorMat ], this.btnInvest.icon = "investment_title11", 
        this.removeEff()) : (this.btnInvest.enabled = !0, this.btnInvest.filters = null, 
        this.btnInvest.icon = "investment_title1", this.eff || (this.eff = new MovieClip(), 
        this.btnInvest.addChild(this.eff), this.eff.playFile(ResPath.getUIEffectPath(UiEffectType.Type18), -1), 
        this.eff.x = this.btnInvest.width >> 1, this.eff.y = this.btnInvest.height >> 1));
        var s = DateUtils.formatMiniDateTime(t.eTime) - GameServer.serverTime;
        this.totalTime = s + egret.getTimer(), this.updateTime(), t.isInvest ? (this.txt1.visible = !1, 
        this.timeTxt.visible = !1, this.tipsTxt.x = this.timeTxt.x) : (this.txt1.visible = !0, 
        this.timeTxt.visible = !0, this.tipsTxt.x = this.timeTxt.x + this.timeTxt.width + 3);
    }, e.prototype.sortData = function(t, e) {
        return t.canGet || !t.flag && e.flag ? -1 : t.flag && !e.flag || e.canGet ? 1 : t.index < e.index ? -1 : t.index > e.index ? 1 : 0;
    }, e.prototype.updateTime = function() {
        var t = InvestLevelData.ins(), e = CountdownHelp.isOpen(t.sTime, t.eTime);
        e ? this.timeTxt.text = CountdownHelp.countdown(t.sTime, t.eTime, this.totalTime) : this.timeTxt.text = "活动已结束";
    }, e;
}(BaseView);

__reflect(InvestLevelPanel.prototype, "InvestLevelPanel");

window.InvestLevelPanel = InvestLevelPanel;

var InvestSevenDayPanel = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "InvestSevenDaySkin", e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.init();
    }, e.prototype.init = function() {
        this.touchEnabled = !1, this.touchChildren = !0, this.seventhList.itemRenderer = ItemBase;
        for (var t = [], e = 1; 7 > e; e++) t.push(GlobalConfig.ins().SevenDayInvestConfig[e]);
        this.listData = new eui.ArrayCollection(t), this.list.dataProvider = this.listData, 
        this.list.itemRenderer = InvestSevenDayItem;
        for (var e = 0; e < GlobalConfig.ins().SevenDayInvestConfig[7].rewardList.length; e++) GlobalConfig.ins().SevenDayInvestConfig[7].rewardList[e].isNoShowName = !0;
        this.seventhList.dataProvider = new eui.ArrayCollection(GlobalConfig.ins().SevenDayInvestConfig[7].rewardList), 
        this.investTxt.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(LangManager.investment_str0, GlobalConfig.ins().SevenDayInvestConfig[1].pay)), 
        this.roleFigure = new RoleFigure(), this.roleFigure.scaleX = .7, this.roleFigure.scaleY = .7, 
        this.modelCon.addChild(this.roleFigure);
        for (var i, n, e = 0; e < GlobalConfig.ins().SevenDayInvestConfig[7].rewardList.length && (i = GlobalConfig.ins().SevenDayInvestConfig[7].rewardList[e], 
        !(n = ZhuangBanId.getConfig(i.id))); e++) ;
        n && this.roleFigure.setData(0, n.body, 1), this.vipTxt.text = "(VIP" + GlobalConfig.ins().SevenDayInvestConfig[1].grade + "可购买)", 
        InvestLevelData.ins().isInvest ? this.img0.y = 28 : this.img0.y = -12;
    }, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEndEvent(this.btnInvest, this.onBtnClick), this.observe(Invest.ins().postInvestSevenDayData, this.updateData), 
        this.updateData();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeTouchEvent(this.btnInvest, this.onBtnClick), this.removeObserve(), this.removeEff();
    }, e.prototype.onBtnClick = function(t) {
        if (t.target instanceof eui.Button) if (t.target.parent instanceof InvestSevenDayItem) ; else if (t.target == this.btnInvest) if (InvestSevenDayData.ins().isInvest) {
            for (var e = InvestSevenDayData.ins(), i = void 0, n = void 0, s = 1; s <= e.openDay; s++) i = 1 == (e.flag >> s - 1 & 1), 
            i || (n = !0, Invest.ins().sendGetInvestSevenDay(s));
            n || UserTips.ins().showTips("今日已领取");
        } else Invest.ins().sendInvestSevenDay();
    }, e.prototype.removeEff = function() {
        this.eff && (this.eff.stop(), DisplayUtils.removeFromParent(this.eff), this.eff = null);
    }, e.prototype.updateData = function() {
        this.listData.refresh();
        var t = InvestSevenDayData.ins();
        this.isGet7.visible = t.isGetAll(), t.isInvest && !t.getRedPoint() ? (this.removeEff(), 
        this.btnInvest.enabled = !1, this.btnInvest.filters = [ ColorUtil.colorMat ]) : (this.eff || (this.eff = new MovieClip(), 
        this.btnInvest.addChild(this.eff), this.eff.playFile(ResPath.getUIEffectPath(UiEffectType.Type18), -1), 
        this.eff.x = this.btnInvest.width >> 1, this.eff.y = this.btnInvest.height >> 1), 
        this.btnInvest.enabled = !0, this.btnInvest.filters = null), this.btnInvest.icon = t.isInvest ? "investment_title2" : "investment_title1";
        var e = DateUtils.formatMiniDateTime(t.eTime) - GameServer.serverTime;
        this.totalTime = e + egret.getTimer(), this.updateTime(), t.isInvest ? (this.txt1.visible = !1, 
        this.timeTxt.visible = !1, this.tipsTxt.x = this.txt1.x) : (this.txt1.visible = !0, 
        this.timeTxt.visible = !0, this.tipsTxt.x = this.timeTxt.x + this.timeTxt.width + 3);
    }, e.prototype.updateTime = function() {
        var t = InvestSevenDayData.ins(), e = CountdownHelp.isOpen(t.sTime, t.eTime);
        e ? this.timeTxt.text = CountdownHelp.countdown(t.sTime, t.eTime, this.totalTime) : this.timeTxt.text = "活动已结束";
    }, e;
}(BaseView);

__reflect(InvestSevenDayPanel.prototype, "InvestSevenDayPanel");

window.InvestSevenDayPanel = InvestSevenDayPanel;

var KuaFuWarGuishuItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "KuaFuWarGuishuSkin", e.guishuBtn.labelDisplay.size = 18, e;
    }
    return __extends(e, t), e.prototype.open = function() {
        this.addTouchEvent(this.guishuBtn, this.onClick), this.observe(KuaFuWar.ins().postAttackFaild, this.update), 
        this.observe(KuaFuWar.ins().postAttackSucceed, this.update);
    }, e.prototype.close = function() {
        this.removeEvents();
    }, e.prototype.update = function() {
        0 != KuaFuWar.ins().guishuHandle && KuaFuWar.ins().guishuHandle == KuaFuWar.ins().model.curEnemyHandle ? this.addeff() : this.removeeff();
    }, e.prototype.addeff = function() {
        this.mc || (this.mc = new MovieClip(), this.mc.playFile(ResPath.getUIEffectPath(UiEffectType.Type28), -1), 
        this.mcCon.addChild(this.mc));
    }, e.prototype.removeeff = function() {
        this.mc && (DisplayUtils.removeFromParent(this.mc), this.mc.stop(), this.mc = null);
    }, e.prototype.setData = function() {
        var t = EntityManager.ins().getEntityBymasterhHandle(KuaFuWar.ins().guishuHandle);
        if (t || (t = EntityManager.ins().getEntityByHandle(KuaFuWar.ins().guishuHandle)), 
        t) {
            var e = t.infoModel;
            this.headIcon.source = ResPath.getHeadIcon(e.sex, 1), this.powerTxt.text = e.power + "", 
            this.nameTxt.text = e.name;
        }
    }, e.prototype.onClick = function(t) {
        var e = SubRoles.ins().getSubRoleByIndex(0);
        0 != KuaFuWar.ins().guishuHandle && (e.handle == KuaFuWar.ins().guishuHandle || e.masterHandle == KuaFuWar.ins().guishuHandle ? UserTips.ins().showTips("不能攻击自己") : KuaFuWar.ins().sendAttackPlayer(KuaFuWar.ins().guishuHandle));
    }, e;
}(BaseView);

__reflect(KuaFuWarGuishuItem.prototype, "KuaFuWarGuishuItem");

window.KuaFuWarGuishuItem = KuaFuWarGuishuItem;

var LadderWin = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.init(), e;
    }
    return __extends(e, t), e.prototype.init = function() {
        this.skinName = "LadderWinSkin", this.name = "王者", this.dataInfo = new eui.ArrayCollection([]), 
        this.setSkinPart("starInfo", new LadderStarListView()), this.setSkinPart("starInfo0", new LadderStarListView()), 
        this.setSkinPart("starList", new LadderSingSratListView()), this.list1.itemRenderer = ItemBase, 
        this.starInfo.isShowStart(!1), this.starInfo0.isShowStart(!1);
    }, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEvent(this.flowPlayer, this.onTap), this.addTouchEvent(this.buyTime, this.onTap), 
        this.addTouchEvent(this.getReward, this.onTap), this.addTouchEvent(this.btnRank, this.onTap), 
        this.observe(Ladder.ins().postTadderChange, this.tadderInfoChange), this.observe(Rank.ins().postRankingData, this.updateRank), 
        Ladder.ins().sendGetRankInfo(), this.tadderInfoChange(), this.refushUpWeekListInfo(), 
        this.starInfo.hideStar(), this.starInfo0.hideStar();
    }, e.openCheck = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        return Actor.level < GlobalConfig.ins().TianTiConstConfig.openLevel ? (UserTips.ins().showTips("|C:0xff0000&T:" + GlobalConfig.ins().TianTiConstConfig.openLevel + "级开启|"), 
        !1) : !0;
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeEvents(), this.removeObserve(), TimerManager.ins().removeAll(this);
    }, e.prototype.truceUIChange = function() {
        this.currentState = Ladder.ins().isOpen ? "open" : "close", this.truceIng.visible = !Ladder.ins().isOpen, 
        this.flowPlayer.visible = Ladder.ins().isOpen, this.buyTime.visible = Ladder.ins().isOpen;
    }, e.prototype.updateRank = function() {
        this.rankModel = Rank.ins().rankModel[RankDataType.TYPE_LADDER];
        var t = this.rankModel.getDataList();
        t && t.length > 0 ? (this.rankTxt1.text = t[0] ? t[0].player : "暂无", this.rankTxt2.text = t[1] ? t[1].player : "暂无", 
        this.rankTxt3.text = t[2] ? t[2].player : "暂无", this.myRankTxt.text = this.rankModel.selfPos > 0 ? "我的排名：" + this.rankModel.selfPos : "我的排名：暂无") : (this.rankTxt1.text = "暂无", 
        this.rankTxt2.text = "暂无", this.rankTxt3.text = "暂无", this.myRankTxt.text = "我的排名：暂无");
    }, e.prototype.updateTime = function() {
        this.leftTime--, this.leftTime <= 0 || !Ladder.ins().isOpen ? (this.labelTime.visible = !1, 
        TimerManager.ins().remove(this.updateTime, this)) : this.labelTime.text = DateUtils.getFormatBySecond(this.leftTime, DateUtils.TIME_FORMAT_1);
    }, e.prototype.setTime = function() {
        this.leftTime = Ladder.ins().getRecoverTime(), this.labelTime.visible = this.leftTime > 0, 
        this.labelTime.text = "", this.leftTime > 0 && (TimerManager.ins().remove(this.updateTime, this), 
        TimerManager.ins().doTimer(1e3, 0, this.updateTime, this));
    }, e.prototype.tadderInfoChange = function() {
        this.setTime(), this.lastNum.text = "剩余次数：" + Ladder.ins().challgeNum + "/" + GlobalConfig.ins().TianTiConstConfig.maxRestoreChallengesCount, 
        Ladder.ins().challgeNum > 0 ? this.lastNum.textColor = 3066402 : this.lastNum.textColor = 16711680, 
        this.winNum.text = "净胜场：" + Ladder.ins().winNum;
        var t = Ladder.ins().getLevelConfig();
        if (t) {
            var e = [ Ladder.ins().creatRewardData(t.danAward[0]) ];
            this.list1.dataProvider = new eui.ArrayCollection(e);
        }
        this.redPoint.visible = Ladder.ins().isCanReward && Ladder.ins().isOpen, this.winImg.visible = Ladder.ins().lianWin, 
        this.starList.updataStarInfo(t), this.starInfo.setLvAndRank(t), this.truceUIChange(), 
        this.updateNextStarInfo();
    }, e.prototype.updateNextStarInfo = function() {
        var t = Ladder.ins().getLevelConfig(), e = Ladder.ins().getNextLevelConfig();
        e && 4 != e.level || !t || 4 != t.level ? (this.starInfo0.visible = !0, t && t.level < 4 && (this.starInfo0.right = -30), 
        this.starInfo0.setLvAndRank(e)) : (this.starInfo.horizontalCenter = 0, this.starInfo0.visible = !1);
    }, e.prototype.refushRankListInfo = function() {
        this.rankModel = Rank.ins().rankModel[RankDataType.TYPE_LADDER], this.myRank.text = this.rankModel.selfPos > 0 ? "排名：" + this.rankModel.selfPos : "排名：未上榜";
        var t = Ladder.ins().getLevelConfig();
        t.showDan > 0 ? (this.levelBg2.visible = !0, this.level.source = "6" + t.showDan + "_png") : (this.levelBg2.visible = !1, 
        this.level.source = null);
    }, e.prototype.refushUpWeekListInfo = function() {
        var t = Ladder.ins().upRankList;
        t.length > 5 && (t = t.slice(0, 5));
    }, e.prototype.onTap = function(t) {
        switch (t.currentTarget) {
          case this.flowPlayer:
            if (!GameMap.canEnterFb()) return;
            if (Ladder.ins().challgeNum <= 0) return void UserTips.ins().showTips("|C:0xff0000&T:挑战次数不足|");
            if (ViewManager.ins().isShow(LadderChallengeWin)) return;
            ViewManager.ins().open(LadderChallengeWin);
            break;

          case this.buyTime:
            if (Ladder.ins().todayBuyTime == GlobalConfig.ins().TianTiConstConfig.maxBuyChallengesCount) return void UserTips.ins().showTips("|C:0xff0000&T:今日购买次数已达上限|");
            if (Actor.yb < GlobalConfig.ins().TianTiConstConfig.buyChallengesCountYuanBao) return void UserWarn.ins().showWanTips0(WarnTipsWin0.TYPE_1);
            WarnWin.show("确定花费<font color='#FFB82A'>" + GlobalConfig.ins().TianTiConstConfig.buyChallengesCountYuanBao + "元宝</font>购买1次王者争霸挑战次数吗？\n今日已购买：" + Ladder.ins().todayBuyTime + "/" + GlobalConfig.ins().TianTiConstConfig.maxBuyChallengesCount, function() {
                Ladder.ins().sendBuyChallgeTime();
            }, this);
            break;

          case this.getReward:
            ViewManager.ins().open(LadderWeekRankPanel);
            break;

          case this.btnRank:
            ViewManager.ins().open(LadderRankPanel);
        }
    }, e;
}(BaseView);

__reflect(LadderWin.prototype, "LadderWin");

window.LadderWin = LadderWin;

var ChengjiuPanel = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e._itemWidth = 74, e._chengjiuData = [], e.skinName = "ChengjiuPanelSkin", 
        e.name = "成就", e;
    }
    return __extends(e, t), e.prototype.createChildren = function() {
        t.prototype.createChildren.call(this), this.list.itemRenderer = ChengjiuItem, this.list.dataProvider = this.listArrColl = new eui.ArrayCollection(), 
        this.tab.itemRenderer = ChengjiuTagItem, this.tabArrColl = new eui.ArrayCollection(LiLian.ins().chengjiuMaxData()), 
        this.tab.dataProvider = this.tabArrColl, this.tab.visible = !1;
    }, e.prototype.open = function() {
        this.addTouchEvent(this.list, this.onTab), this.tab.addEventListener(egret.TouchEvent.CHANGE, this.onTabChange, this), 
        this.addTouchEvent(this.leftBtn, this.onTouchBtn), this.addTouchEvent(this.rightBtn, this.onTouchBtn), 
        this.addTouchEvent(this.oneKeyGet, this.onTouchBtn), this.observe(UserTask.ins().postTaskChangeData, this.updateAchieve), 
        this.observe(LiLian.ins().postNobilityData, this.updateScore), this.observe(PfActivity.ins().postChengJiuData, this.updateAchieve), 
        PfActivity.ins().sendChengJiuInfo(), this.tab.visible = !0, this.tab.selectedIndex = 0, 
        this.updateAchieve(), this.updateScore();
    }, e.prototype.close = function() {
        this.listScroller.stopAnimation(), this.removeTouchEvent(this.list, this.onTab), 
        this.tab.removeEventListener(egret.TouchEvent.CHANGE, this.onTabChange, this), this.removeTouchEvent(this.leftBtn, this.onTouchBtn), 
        this.removeTouchEvent(this.rightBtn, this.onTouchBtn), this.removeTouchEvent(this.oneKeyGet, this.onTouchBtn), 
        this.removeObserve();
    }, e.prototype.updateScore = function() {
        this.countScore.text = "" + LiLian.ins().xunzhangJF;
    }, e.prototype.updateProgress = function() {
        this.curProgress.text = UserTask.ins().getChengjiuProgress();
    }, e.prototype.onTab = function(t) {
        if (t.target instanceof eui.Button) {
            var e = t.target.parent;
            switch (e.btn.labelDisplay.text) {
              case "前往":
                GameGuider.taskGuidance(e.id, 1);
                break;

              case "领取":
                UserTask.ins().sendGetAchieve(e.achievementId);
                break;

              case "分享":
                ViewManager.ins().open(TaskFenXiangTipsWin, e.achievementId, e.data.index);
                break;

              case "分享领取":
                PfActivity.ins().sendGetChengJiu(e.achievementId);
            }
        }
    }, e.prototype.onTouchBtn = function(t) {
        var e = 4 * this._itemWidth;
        switch (t.target) {
          case this.leftBtn:
            this.tab.scrollH <= e ? this.tab.scrollH = 0 : this.tab.scrollH -= e;
            break;

          case this.rightBtn:
            var i = this.tab.contentWidth - this.tab.width;
            e > i ? this.tab.scrollH = i : this.tab.scrollH += e;
            break;

          case this.oneKeyGet:
            for (var n = void 0, s = 0; s < UserTask.ins().achiEvement.length; s++) n = UserTask.ins().achiEvement[s], 
            1 == n.state && UserTask.ins().sendGetAchieve(n.achievementId);
        }
    }, e.prototype.onTabChange = function(t) {
        this.listArrColl.source = UserTask.ins().getChengjiuDataByTypeConfig(this.tab.selectedItem);
    }, e.prototype.updateAchieve = function() {
        this.tabArrColl.replaceAll(LiLian.ins().chengjiuMaxData()), this.nextCanTab(this.tab.selectedItem), 
        this.listArrColl.source = UserTask.ins().getChengjiuDataByTypeConfig(this.tab.selectedItem), 
        this.updateProgress();
    }, e.prototype.nextCanTab = function(t) {
        if (!this.canReceive(t)) {
            for (var e = this.tab.selectedIndex, i = 0, n = this.tab.numChildren; n > i; i++) if (this.tab.selectedIndex = i, 
            this.canReceive(this.tab.selectedItem)) return;
            this.tab.selectedIndex = e;
        }
    }, e.prototype.canReceive = function(t) {
        var e = UserTask.ins().achiEvement;
        for (var i in e) if (e[i].achievementType == t) {
            if (1 == e[i].state) return !0;
            if (2 == e[i].state) {
                var n = PfActivity.ins().getTaskDataById(e[i].achievementId);
                if (n && 2 == n.state) return !0;
            }
        }
        return !1;
    }, e;
}(BaseView);

__reflect(ChengjiuPanel.prototype, "ChengjiuPanel");

window.ChengjiuPanel = ChengjiuPanel;

var LiLianRewardPanel = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "LiLianRewardSkin", e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        t.prototype.childrenCreated.call(this), this.list.itemRenderer = LiLianRewardItem;
    }, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        var i = GlobalConfig.ins().TrainLevelConfig, n = [];
        for (var s in i) if ("0" != s && i.hasOwnProperty(s)) {
            var a = i[s];
            n.push(a);
        }
        var o = new eui.ArrayCollection(n);
        this.list.dataProvider = o, LiLianWin.isOpenReward = !0;
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
    }, e.prototype.closePanel = function(t) {
        this.parent && this.parent.removeChild(this), LiLianWin.isOpenReward = !1;
    }, e;
}(BaseView);

__reflect(LiLianRewardPanel.prototype, "LiLianRewardPanel");

window.LiLianRewardPanel = LiLianRewardPanel;

var NobilityPanel = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e._totalPower = 0, e.skinName = "NobilitySkin", e.name = "爵位", e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.list.itemRenderer = NobilityItem, this.totalPower = BitmapNumber.ins().createNumPic(0, "1"), 
        this.totalPower.x = 182, this.totalPower.y = 63, this.addChild(this.totalPower), 
        this.promoteeff = new MovieClip(), this.promoteeff.x = 214, this.promoteeff.y = 260;
    }, e.prototype.open = function() {
        this.addTouchEvent(this.list, this.onListTouch), this.addTouchEvent(this.sureBtn, this.onUpgrade), 
        this.observe(UserTask.ins().postTaskChangeData, this.setData), this.observe(LiLian.ins().postNobilityData, this.setData), 
        this.setData();
    }, e.prototype.close = function() {
        this.removeTouchEvent(this.list, this.onListTouch), this.removeTouchEvent(this.sureBtn, this.onUpgrade), 
        this.removeObserve();
    }, e.prototype.onListTouch = function(t) {
        if (t.target instanceof eui.Label) {
            var e = t.target.parent;
            GameGuider.taskGuidance(e.data.id, 1);
        }
    }, e.prototype.onUpgrade = function(t) {
        LiLian.ins().getNobilityIsUpGrade() ? LiLian.ins().sendNobilityUpgrade() : UserTips.ins().showTips("|C:0xFF0000&T:任务条件没达成，无法升级|");
    }, e.prototype.setData = function() {
        var t = LiLian.ins().nobilityLv;
        t >= 0 && null != t ? t : t = 0;
        var e = GlobalConfig.ins().KnighthoodConfig[t];
        this.lvTxt.text = e.desc, this.attrTxt.text = AttributeData.getAttStr(e.attrs, 0, 1, "：");
        var i = UserBag.getAttrPower(e.attrs);
        i > this._totalPower && this._totalPower > 0 && this.playEff(), this._totalPower = i, 
        BitmapNumber.ins().changeNum(this.totalPower, this._totalPower * SubRoles.ins().subRolesLen, "1");
        for (var n = [], s = 0; s < e.achievementIds.length; s++) n.push(UserTask.ins().getAchieveByTaskId(e.achievementIds[s].taskId));
        this.list.dataProvider = new eui.ArrayCollection(n);
        var a = GlobalConfig.ins().KnighthoodConfig[t + 1];
        a ? (this.nextAttrTxt.text = AttributeData.getAttStr(a.attrs, 0, 1, "："), LiLian.ins().getNobilityIsUpGrade() ? (this.mc = this.mc || new MovieClip(), 
        this.mc.x = 215, this.mc.y = 507, this.mc.playFile(ResPath.RES_DIR_EFF + "normalbtn", -1), 
        this.addChild(this.mc)) : this.mc && DisplayUtils.removeFromParent(this.mc)) : (this.mc && DisplayUtils.removeFromParent(this.mc), 
        this.nextGroup.visible = !1, this.lvTxt.horizontalCenter = 0, this.attrTitleTxt.horizontalCenter = 0, 
        this.attrTxt.horizontalCenter = 0, this.completely.visible = !0);
    }, e.prototype.playEff = function() {
        this.promoteeff.playFile(ResPath.RES_DIR_EFF + "promoteeff"), this.addChild(this.promoteeff);
    }, e;
}(BaseView);

__reflect(NobilityPanel.prototype, "NobilityPanel");

window.NobilityPanel = NobilityPanel;

var XunzhangPanel = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.preId = -1, e.name = "勋章", e.skinName = "XunzhangPanelSkin", e.setSkinPart("com1", new XunzhangItem()), 
        e.setSkinPart("com2", new XunzhangItem()), e;
    }
    return __extends(e, t), e.prototype.createChildren = function() {
        t.prototype.createChildren.call(this), this.starList = new StarList(10, 0, 2), this.stargroup.addChild(this.starList), 
        this.link.textFlow = new egret.HtmlTextParser().parser("<u>获取积分</u>"), this.link.visible = !1, 
        this.circleEff = new MovieClip(), this.circleEff.x = 214, this.circleEff.y = 168, 
        this.addChildAt(this.circleEff, 1), this.xunzhangMC = new MovieClip(), this.mcCon.addChild(this.xunzhangMC), 
        this.powerNumr = BitmapNumber.ins().createNumPic(0, BitmapNumber.numType0, 10), 
        this.powerContainer.addChild(this.powerNumr);
    }, e.prototype.open = function() {
        this.addTouchEvent(this.btn, this.onTab), this.addTouchEvent(this.activatedBtn, this.onTab), 
        this.addTouchEvent(this.link, this.onTab), this.observe(LiLian.ins().postNobilityData, this.update), 
        this.update(), this.circleEff.play();
    }, e.prototype.close = function() {
        this.removeTouchEvent(this.btn, this.onTab), this.removeTouchEvent(this.activatedBtn, this.onTab), 
        this.removeTouchEvent(this.link, this.onTab), this.removeObserve(), this.circleEff.stop();
    }, e.prototype.onTab = function(t) {
        switch (t.currentTarget) {
          case this.btn:
            this.onBtnDeal();
            break;

          case this.activatedBtn:
            UserTips.ins().showTips("|C:0xFF0000&T:7级开启勋章|");
            break;

          case this.link:
            UserWarn.ins().setBuyGoodsWarn(8, 1);
        }
    }, e.prototype.onBtnDeal = function() {
        "升阶" == this.btn.label ? LiLian.ins().sendNobilityStageUpgrade() : LiLian.ins().getNobilityIsUpGrade() ? LiLian.ins().sendNobilityUpgrade() : UserTips.ins().showTips("|C:0xFF0000&T:成就积分不满足，无法升级|");
    }, e.prototype.setMC = function(t) {
        this.preId != t && (this.preId = t, this.xunzhangMC.playFile(ResPath.getXunzhangPath(this.preId), -1));
    }, e.prototype.update = function() {
        if (!LiLian.ins().nobilityIsOpen) return this.com1.visible = !1, this.com2.visible = !1, 
        this.group.visible = !1, void (this.activatedBtn.visible = !0);
        this.com1.visible = !0, this.com2.visible = !0, this.group.visible = !0, this.activatedBtn.visible = !1;
        var t = LiLian.ins().nobilityLv, e = GlobalConfig.ins().KnighthoodConfig[t], i = LiLian.ins().nobilityStage;
        this.setMC(i + 1 >= 10 ? 10 : i + 1);
        var n = GlobalConfig.ins().KnighthoodStageConfig[i];
        this.nameTF.text = e.type;
        var s = t % 10;
        this.starList.starNum = 0 == s && 0 != t ? 10 : s, this.btn.label = "升级勋章", 0 == s && 0 != t && (t / 10 - 1 >= i ? this.btn.label = "升阶" : this.starList.starNum = 0), 
        this.expLabel.text = LiLian.ins().xunzhangJF + "/" + e.costScore, this.expBar.maximum = e.costScore, 
        this.expBar.value = LiLian.ins().xunzhangJF, this.expBar.labelDisplay.visible = !0, 
        this.expLabel.visible = !1, this.expBar.labelFunction = this.barLabelFunction, this.expBar.name = LiLian.ins().xunzhangJF + "", 
        this.com1.updateInfo1(e, n, this.starList.starNum);
        var a = UserBag.getAttrPower(e.attrs);
        if (BitmapNumber.ins().changeNum(this.powerNumr, a, BitmapNumber.numType0, 2), e = GlobalConfig.ins().KnighthoodConfig[t + 1], 
        this.btn.visible = !0, this.titleBottom.visible = !0, this.stargroup.visible = !0, 
        this.manjiTF.visible = !1, e) if ("升阶" == this.btn.label) {
            var o = GlobalConfig.ins().KnighthoodConfig[t], r = GlobalConfig.ins().KnighthoodStageConfig[i + 1];
            this.com2.updateInfo2(o, r, this.starList.starNum, !0);
        } else this.com2.updateInfo2(e, n, this.starList.starNum); else this.com2.updateInfo2(GlobalConfig.ins().KnighthoodConfig[t], n, this.starList.starNum), 
        this.btn.visible = !1, this.manjiTF.visible = !0, this.progressGroup.visible = !1, 
        this.titleBottom.visible = !1, this.stargroup.visible = !1;
    }, e.prototype.barLabelFunction = function(t, e) {
        return parseInt(this.name) + "/" + e;
    }, e;
}(BaseView);

__reflect(XunzhangPanel.prototype, "XunzhangPanel");

window.XunzhangPanel = XunzhangPanel;

var XunzhangItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "XunzhangItemSkin", e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {}, e.prototype.updateInfo1 = function(t, e, i, n) {
        void 0 === n && (n = !1);
        var s = this.addStageAttrs(t, e);
        this.attrTxt.textFlow = TextFlowMaker.generateTextFlow(AttributeData.getAttStr1(s, AttributeFormat.FORMAT_1())), 
        this.addNameTF(this.nameTF, e, i);
    }, e.prototype.updateInfo2 = function(t, e, i, n) {
        void 0 === n && (n = !1);
        var s = this.addStageAttrs(t, e);
        this.attrTxt.textFlow = TextFlowMaker.generateTextFlow(AttributeData.getAttStr1(s, AttributeFormat.FORMAT_2())), 
        this.addNameTF(this.nameTF, e, i + 1, n);
    }, e.prototype.addNameTF = function(t, e, i, n) {
        void 0 === n && (n = !1), t && e && (i > 10 && (i = 10), n && (i = 0), t.text = e.type + i + "星");
    }, e.prototype.addStageAttrs = function(t, e) {
        var i = t.attrs;
        return e && e.attrs && (i = AttributeData.AttrAddition(t.attrs, e.attrs)), i;
    }, e;
}(BaseView);

__reflect(XunzhangItem.prototype, "XunzhangItem");

window.XunzhangItem = XunzhangItem;

var MiBaoPanel = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "MiBaoSkin", e.setSkinPart("subPanel0", new MiBaoSubPanel0()), 
        e.setSkinPart("subPanel1", new MiBaoSubPanel1()), e.eff = new MovieClip(), e.eff.scaleX = .9, 
        e.eff.scaleY = .9, e.eff.x = e.enterBtn.width >> 1, e.eff.y = e.enterBtn.height >> 1, 
        e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.init();
    }, e.prototype.init = function() {
        this.touchEnabled = !1, this.touchChildren = !0;
    }, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEvent(this.enterBtn, this.onEnterClick), this.viewStack.selectedIndex = 0, 
        this.subPanel0.open(), this.subPanel1.open(), this.enterBtn.visible = !0, this.eff.playFile(ResPath.getUIEffectPath(UiEffectType.Type19), -1), 
        this.enterBtn.addChild(this.eff), MiBao.ins().isFirstOpen ? (MiBao.ins().sendServerData3(), 
        MiBao.ins().isFirstOpen = !1) : this.onEnterClick(), MiBao.ins().sendServerData1();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeEvents(), this.subPanel0.close(), this.subPanel1.close(), this.eff.stop(), 
        DisplayUtils.removeFromParent(this.eff);
    }, e.prototype.onEnterClick = function(t) {
        this.viewStack.selectedIndex = 1, this.enterBtn.visible = !1;
    }, e;
}(BaseView);

__reflect(MiBaoPanel.prototype, "MiBaoPanel");

window.MiBaoPanel = MiBaoPanel;

var MiBaoSubPanel0 = function(t) {
    function e() {
        var e = t.call(this) || this;
        e.skinName = "MiBaoSubSkin0", e.itemList.dataProvider = null, e.itemList.itemRenderer = MiBaoSubItem0;
        for (var i = [], n = 0; n < GlobalConfig.ins().CangBaoBaseCfg.cnt; n++) i.push(n + 1);
        return e.itemList.dataProvider = new eui.ArrayCollection(i), e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.init();
    }, e.prototype.init = function() {
        this.touchEnabled = !1, this.touchChildren = !0;
    }, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.observe(MiBao.ins().postMapList, this.updateData);
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeObserve();
    }, e.prototype.updateData = function() {
        var t = MiBao.ins().type;
        this.titleImg.source = "lingchong_mibao_title" + t, this.itemList.selectedIndex = t - 1;
    }, e;
}(BaseView);

__reflect(MiBaoSubPanel0.prototype, "MiBaoSubPanel0");

window.MiBaoSubPanel0 = MiBaoSubPanel0;

var MiBaoSubPanel1 = function(t) {
    function e() {
        var e = t.call(this) || this;
        e.mapPartList = [], e.skinName = "MiBaoSubSkin1", e.setSkinPart("useView", new MiBaoUseView("使用")), 
        e.useView.click_obj = e, e.useView.click_fun = e.useMiBaoPiece, e.setSkinPart("wannengView", new MiBaoWanNengView());
        for (var i = 1; 9 >= i; i++) e.mapPartList[i] = e["mapPart" + i], e.mapPartList[i].visible = !1;
        return e.itemList.dataProvider = null, e.itemList.itemRenderer = MiBaoSubItem1, 
        e.rewardList.dataProvider = null, e.rewardList.itemRenderer = ItemBase, e.boxEff = new MovieClip(), 
        e.boxEff.x = e.boxCon.width >> 1, e.boxEff.y = e.boxCon.height >> 1, e;
    }
    return __extends(e, t), e.prototype.addEff = function() {
        this.boxEff.playFile(ResPath.getUIEffectPath(UiEffectType.Type27), -1), this.boxCon.addChild(this.boxEff);
    }, e.prototype.removeEff = function() {
        this.boxEff.stop(), DisplayUtils.removeFromParent(this.boxEff);
    }, e.prototype.removeMapEff = function() {
        this.mapEff && (this.mapEff.stop(), DisplayUtils.removeFromParent(this.mapEff));
    }, e.prototype.childrenCreated = function() {
        this.init();
    }, e.prototype.init = function() {
        this.touchEnabled = !1, this.touchChildren = !0;
    }, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEvent(this.transactBtn, this.onClick), this.addTouchEvent(this.bagBtn, this.onClick), 
        this.addTouchEvent(this.boxCon, this.onClick), this.addTouchEvent(this.bgArea, this.onBgClick), 
        this.itemList.addEventListener(eui.ItemTapEvent.ITEM_TAP, this.onListSelect, this), 
        this.observe(UserBag.ins().postItemAdd, this.updateBagItem), this.observe(UserBag.ins().postItemDel, this.updateBagItem), 
        this.observe(UserBag.ins().postItemChange, this.updateBagItem), this.observe(MiBao.ins().postServerData1, this.updateData), 
        this.observe(MiBao.ins().postMapList, this.updateMapPart), this.observe(MiBao.ins().postServerData20, this.setBoxState), 
        this.observe(MiBao.ins().postActivityMap, this.updateActivityMap), this.observe(MiBao.ins().postWanNengTips, this.updateBagItem), 
        this.useView.open(), this.wannengView.open(), this.resetBoxState();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeObserve(), this.removeEvents(), this.itemList.removeEventListener(eui.ItemTapEvent.ITEM_TAP, this.onListSelect, this), 
        this.useView.close(), this.wannengView.close(), TimerManager.ins().removeAll(this), 
        this.removeEff(), this.removeMapEff();
    }, e.prototype.updateActivityMap = function(t) {
        this.mapEff || (this.mapEff = new MovieClip()), this.mapEff.playFile(ResPath.getUIEffectPath(UiEffectType.Type51)), 
        this["mapEffCon" + t].addChild(this.mapEff);
    }, e.prototype.updateData = function() {
        this.nameTxt.text = MiBaoManager.ins().typeName[MiBao.ins().type] + "秘宝", this.updateMapPart(), 
        this.updateList();
        var t = GlobalConfig.ins().CangBaoBaseCfg.openLimit.maxTimes - MiBao.ins().openTime;
        t = t > 0 ? t : 0, this.timeTxt.text = "剩余开启次数：" + t;
    }, e.prototype.setBoxState = function(t) {
        this.rewardList.dataProvider = new eui.ArrayCollection(t), this.rewardList.visible = !0, 
        this.boxImg.source = "lingchong_mibao_box0_png", TimerManager.ins().doTimer(3e3, 1, this.resetBoxState, this), 
        this.removeEff();
    }, e.prototype.resetBoxState = function() {
        this.boxImg.source = "lingchong_mibao_box0_png", this.rewardList.visible = !1, this.rewardList.dataProvider = null;
    }, e.prototype.updateList = function() {
        var t = MiBao.ins().type;
        this.itemList.dataProvider = new eui.ArrayCollection(MiBaoManager.ins().getTypePieceList(t)), 
        this.wannengView.updateType(t);
    }, e.prototype.updateBagItem = function() {
        this.itemList.dataProvider && this.itemList.dataProvider.refresh();
    }, e.prototype.onListSelect = function(t) {
        this.useView.click_param = t.item;
        var e = t.item, i = this.itemList.getElementAt(t.itemIndex);
        return this.useView.hide(), this.wannengView.hide(), i.isEnough ? void (9 == t.itemIndex ? this.wannengView.show() : this.useView.show(i, 2)) : void UserWarn.ins().setBuyGoodsWarn(e.itemID, 1);
    }, e.prototype.onClick = function(t) {
        switch (t.currentTarget) {
          case this.transactBtn:
            TransactManager.ins().openTypeTransactWin(TransactManager.ins().mainType1);
            break;

          case this.bagBtn:
            ViewManager.ins().open(MiBaoBagWin);
            break;

          case this.boxCon:
            MiBaoManager.ins().getLightAll() ? MiBao.ins().sendServerData20() : ViewManager.ins().open(ItemDetailedWin, 0, GlobalConfig.ins().CangBaoBaseCfg.treasureBox, 0);
        }
        this.onBgClick();
    }, e.prototype.onBgClick = function(t) {
        this.useView.hide(), this.wannengView.hide();
    }, e.prototype.useMiBaoPiece = function(t) {
        MiBao.ins().sendServerData10(t.slot, t.itemID);
    }, e.prototype.updateMapPart = function() {
        for (var t = 1; 9 >= t; t++) {
            var e = MiBao.ins().mapList[t].isActivity;
            this.mapPartList[t].visible = e;
        }
        MiBaoManager.ins().getLightAll() ? this.addEff() : this.removeEff();
    }, e;
}(BaseView);

__reflect(MiBaoSubPanel1.prototype, "MiBaoSubPanel1");

window.MiBaoSubPanel1 = MiBaoSubPanel1;

var MiBaoUseView = function(t) {
    function e(e) {
        var i = t.call(this) || this;
        return i.skinName = "MiBaoUseSkin", i.btn.label = e, i;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.init();
    }, e.prototype.init = function() {
        this.touchEnabled = !1, this.touchChildren = !0;
    }, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEvent(this.btn, this.onClick), this.visible = !1;
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeEvents();
    }, e.prototype.onClick = function(t) {
        this.click_fun.call(this.click_obj, this.click_param), this.hide();
    }, e.prototype.show = function(t, e) {
        var i = t.parent.localToGlobal(t.x, t.y);
        i = this.parent.globalToLocal(i.x, i.y);
        var n, s, a = t.width >> 1, o = t.height >> 1;
        switch (e) {
          case 1:
            n = i.x + a - this.width, s = i.y + o - this.height;
            break;

          case 2:
            n = i.x + a, s = i.y + o - this.height;
            break;

          case 3:
            n = i.x + a - this.width, s = i.y + o;
            break;

          case 4:
            n = i.x + a, s = i.y + o;
        }
        this.x = n, this.y = s, this.visible = !0;
    }, e.prototype.hide = function() {
        this.visible = !1;
    }, e;
}(BaseView);

__reflect(MiBaoUseView.prototype, "MiBaoUseView");

window.MiBaoUseView = MiBaoUseView;

var MiBaoWanNengView = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "MiBaoWanNengSkin", e.itemList.dataProvider = null, e.itemList.itemRenderer = MiBaoWanNengItem, 
        e.setSkinPart("useView", new MiBaoUseView("转换")), e.useView.click_obj = e, e.useView.click_fun = e.useWanNengPiece, 
        e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.init();
    }, e.prototype.init = function() {
        this.touchEnabled = !1, this.touchChildren = !0;
    }, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.itemList.addEventListener(eui.ItemTapEvent.ITEM_TAP, this.onListSelect, this), 
        this.addTouchEvent(this.bgArea, this.onViewClick), this.visible = !1, this.useView.open();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeEvents(), this.itemList.removeEventListener(eui.ItemTapEvent.ITEM_TAP, this.onListSelect, this), 
        this.useView.close();
    }, e.prototype.onListSelect = function(t) {
        this.useView.click_param = t.item;
        var e = this.itemList.getElementAt(t.itemIndex);
        this.useView.show(e, 2);
    }, e.prototype.useWanNengPiece = function(t) {
        this.hide(), MiBao.ins().sendServerData10(t.slot, GlobalConfig.ins().CangBaoBaseCfg.keyAll);
    }, e.prototype.show = function() {
        this.visible = !0, this.useView.hide(), MiBaoManager.ins().wannengRedPoint = !1, 
        MiBao.ins().postWanNengTips();
    }, e.prototype.hide = function() {
        this.visible = !1;
    }, e.prototype.onViewClick = function(t) {
        this.useView.hide();
    }, e.prototype.updateType = function(t) {
        this.itemList.dataProvider = new eui.ArrayCollection(MiBaoManager.ins().getWannengPieceList(t));
    }, e;
}(BaseView);

__reflect(MiBaoWanNengView.prototype, "MiBaoWanNengView");

window.MiBaoWanNengView = MiBaoWanNengView;

var LingChongActivityView = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "LingChongActivitySkin", e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.init();
    }, e.prototype.init = function() {
        this.touchEnabled = !1, this.touchChildren = !0, this.partList.dataProvider = null, 
        this.partList.itemRenderer = LingChongActivityItem;
    }, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
    }, e.prototype.setData = function(t) {
        this.id = t;
        var e = GlobalConfig.ins().LingChongActivityConfig[this.id];
        this.partList.dataProvider = new eui.ArrayCollection(e);
        var i = GlobalConfig.ins().LingChongActivityDefaultValueConfig[this.id];
        this.tipsTxt.text = i.tips;
    }, e.prototype.setCount = function() {
        this.partList.dataProvider.refresh();
    }, e;
}(BaseView);

__reflect(LingChongActivityView.prototype, "LingChongActivityView");

window.LingChongActivityView = LingChongActivityView;

var LingChongGuideView = function(t) {
    function e(e) {
        var i = t.call(this) || this;
        return i.list1 = [], i.skinName = "LingChongGuideSkin", i.resetList(), i._parent = e, 
        i;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.init();
    }, e.prototype.init = function() {}, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEvent(this.lingchongBtn, this.onClick), this.observe(UserFb.ins().postWaveChange, this.updateData), 
        this.observe(LingChong.ins().postBaseInfo, this.updateData), this.observe(ZhenBaoSystem.ins().postServerData1, this.updateData), 
        this.observe(ZhenBaoSystem.ins().postServerData5, this.updateData), this.observe(Eye.ins().postUpgrade, this.updateData), 
        this.updateData();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeObserve();
    }, e.prototype.updateData = function() {
        return this.guideData = this.getShowTips(), this.guideData ? (this._parent.addChild(this), 
        this.guideData.isShowMc ? (this.lingchongTipsTxt.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(LangManager.lingchong_str5, this.guideData.name)), 
        this.showGuide(), this.tipsTxt.text = "激活" + this.getTipsName(this.guideData.id)) : (this.lingchongTipsTxt.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(LangManager.lingchong_str0, this.guideData.dis)), 
        this.stopGuide()), void (this.iconImg.source = this.getTipsIcon(this.guideData.id))) : void DisplayUtils.removeFromParent(this);
    }, e.prototype.showGuide = function() {
        this.mc || (this.mc = new MovieClip(), this.lingchongBtn.addChild(this.mc), this.mc.x = this.lingchongBtn.width >> 1, 
        this.mc.y = this.lingchongBtn.height >> 1), this.mc.playFile(ResPath.getUIEffectPath(UiEffectType.Type15), -1), 
        this.guideTips.visible = !0, this.tweenHand();
    }, e.prototype.tweenHand = function(t) {
        if (void 0 === t && (t = 500), this.guideTips) {
            egret.Tween.removeTweens(this.guideTips);
            var e = egret.Tween.get(this.guideTips);
            e && e.to({
                x: 30
            }, t).to({
                x: 0
            }, t).call(this.tweenHand, this);
        }
    }, e.prototype.stopGuide = function() {
        egret.Tween.removeTweens(this.guideTips), this.mc && (this.mc.stop(), DisplayUtils.removeFromParent(this.mc), 
        this.mc = null), this.guideTips.visible = !1;
    }, e.prototype.onClick = function(t) {
        if (this.guideData) {
            switch (this.guideData.id) {
              case 1:
                ViewManager.ins().open(LingChongMainWin);
                break;

              case 2:
                ViewManager.ins().open(ZhenBaoSystemWin);
                break;

              case 3:
                ViewManager.ins().open(EyeWin);
            }
            this.stopGuide();
        }
    }, e.prototype.resetList = function() {
        for (var t in GlobalConfig.ins().GuanQiaYuGaoconfig) for (var e = 0; e < GlobalConfig.ins().GuanQiaYuGaoconfig[t].length; e++) {
            var i = GlobalConfig.ins().GuanQiaYuGaoconfig[t][e];
            this.list1.push(i);
        }
        this.list1.sort(this.sortData);
    }, e.prototype.sortData = function(t, e) {
        return t.sortIndex > e.sortIndex ? 1 : t.sortIndex < e.sortIndex ? -1 : 0;
    }, e.prototype.getShowTips = function() {
        for (var t = new LingchongGuideData(), e = UserFb.ins().guanqiaID, i = 0; i < this.list1.length; i++) {
            var n = this.list1[i];
            if (e < n.guanqia) return t.dis = n.guanqia - e, t.id = n.id, t.index = n.index, 
            t;
            if (this.isTips(n.id, n.index, t)) return t;
        }
        return null;
    }, e.prototype.isTips = function(t, e, i) {
        var n = "", s = SubRoles.ins().getSubRoleByIndex(0);
        switch (t) {
          case 1:
            if (LingChongManager.ins().getIsActivity(MuChangManager.ins().LINGCHONG_ID1)) break;
            var a = s.getLingChongData(MuChangManager.ins().LINGCHONG_ID1), o = GlobalConfig.ins().LingChongActivityConfig[MuChangManager.ins().LINGCHONG_ID1];
            1 == e && a.activityPart < 1 && this.getIsEnough(1) ? n = o[0].name : 2 == e && a.activityPart < 2 && this.getIsEnough(2) ? n = o[1].name : 3 == e && a.activityPart < 3 && this.getIsEnough(3) ? n = o[2].name : 4 == e && a.activityPart < 4 && this.getIsEnough(4) && (n = o[3].name);
            break;

          case 2:
            var r = ZhenBaoSystemManager.ins().getServerData(1, 1);
            if (!r || r.isActivity) break;
            if (this.getZhenbaoEnough(r.tabId, r.itemId)) {
                var h = GlobalConfig.ins().ZhenBaoActivityCfg[r.tabId][r.itemId - 1];
                n = h.name;
            }
            break;

          case 3:
            if (!s) break;
            var l = s.eyeData[EyeID.Hu];
            if ((void 0 == l || isNaN(l) || 0 >= l) && this.getMijiEnough(EyeID.Hu, 0)) {
                var u = EyeConfigMgr.ins().getBaseCfg(EyeID.Hu);
                n = u.name;
            }
        }
        return "" != n && (i.name = n, i.id = t, i.index = e, i.isShowMc = !0), "" != n;
    }, e.prototype.getTipsName = function(t) {
        switch (t) {
          case 1:
            return "灵宠";

          case 2:
            var e = ZhenBaoSystemManager.ins().getServerData(1, 1);
            if (!e || e.isActivity) return "";
            var i = GlobalConfig.ins().ZhenBaoActivityCfg[e.tabId][e.itemId - 1];
            return i.name;

          case 3:
            var n = EyeConfigMgr.ins().getBaseCfg(EyeID.Hu);
            return n.name;
        }
    }, e.prototype.getTipsIcon = function(t) {
        switch (t) {
          case 1:
            return "lingchong_bg9_png";

          case 2:
            return "lingchong_bg11_png";

          case 3:
            return "lingchong_bg12_png";
        }
    }, e.prototype.getIsEnough = function(t) {
        var e = GlobalConfig.ins().LingChongActivityConfig[MuChangManager.ins().LINGCHONG_ID1][t - 1], i = UserBag.ins().getBagGoodsCountById(0, e.itemId);
        return i >= e.cost;
    }, e.prototype.getZhenbaoEnough = function(t, e) {
        if (!GlobalConfig.ins().ZhenBaoActivityCfg[t]) return !1;
        var i = GlobalConfig.ins().ZhenBaoActivityCfg[t][e - 1], n = UserBag.ins().getBagGoodsCountById(0, i.item.id);
        return n >= i.item.count;
    }, e.prototype.getMijiEnough = function(t, e) {
        var i = GlobalConfig.ins().EyeBaseConfig[t], n = null;
        n = EyeConfigMgr.ins().getUpgradeCfg(t, e);
        var s = null;
        if (s = EyeConfigMgr.ins().getUpgradeCfg(t, e + 1), !s) return !1;
        var a = n.cost, o = i.costItem, r = UserBag.ins().getBagGoodsCountById(0, o);
        return r >= a;
    }, e;
}(BaseView);

__reflect(LingChongGuideView.prototype, "LingChongGuideView");

window.LingChongGuideView = LingChongGuideView;

var LingChongPanel = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e._itemWidth = 89, e.skinName = "LingChongSkin", e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.init();
    }, e.prototype.init = function() {
        this.touchEnabled = !1, this.touchChildren = !0, this.starList = new StarListNew(5, 0, 3), 
        this.starCon.addChild(this.starList), this.setSkinPart("activityPanel", new LingChongActivityView()), 
        this.setSkinPart("upLevelPanel", new LingChongUpLevelView()), this.setSkinPart("upStarPanel", new LingChongUpStarView()), 
        this.setSkinPart("skillItem", new LingChongSkill()), this.tab.dataProvider = this.viewStack, 
        this.itemList.dataProvider = null, this.itemList.itemRenderer = LingChongItem, this.power = BitmapNumber.ins().createNumPic(0, BitmapNumber.numType0), 
        this.powerContainer.addChild(this.power), this.mcMain = new MovieClip(), this.mcMainCon.addChild(this.mcMain), 
        this.mcPart1 = new MovieClip(), this.mcPartCon.addChild(this.mcPart1), this.mcPart2 = new MovieClip(), 
        this.mcPartCon.addChild(this.mcPart2), this.mcPart3 = new MovieClip(), this.mcPartCon.addChild(this.mcPart3), 
        this.mcPart4 = new MovieClip(), this.mcPartCon.addChild(this.mcPart4), this.successMC = new MovieClip(), 
        this.successMC.x = this.width / 2, this.successMC.y = this.height / 2 - 30, this.addChild(this.successMC), 
        this.mc = new MovieClip(), this.mc.playFile(ResPath.getUIEffectPath(UiEffectType.Type42), -1), 
        this.mcCon.addChild(this.mc), this.initItemList();
    }, e.prototype.initItemList = function() {
        this.itemList.dataProvider = new eui.ArrayCollection(GlobalConfig.ins().LingChongCommonConfig.qualitiOpenLimit);
    }, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEvent(this.leftBtn, this.onTouchBtn), this.addTouchEvent(this.rightBtn, this.onTouchBtn), 
        this.addTouchEvent(this.followBtn, this.onTouchBtn), this.addTouchEvent(this.tab, this.onTabTouchBtn), 
        this.addTouchEvent(this.activityBtn, this.onTouchBtn), this.itemList.addEventListener(eui.ItemTapEvent.ITEM_TAP, this.onListSelect, this), 
        this.scroller.addEventListener(egret.Event.CHANGE, this.upRedpoint, this), this.observe(UserBag.ins().postItemAdd, this.updateBagItem), 
        this.observe(UserBag.ins().postItemDel, this.updateBagItem), this.observe(UserBag.ins().postItemChange, this.updateBagItem), 
        this.observe(LingChong.ins().postBaseInfo, this.updateData), this.observe(LingChong.ins().postChangeFollow, this.updateFollow), 
        this.observe(LingChong.ins().postActivity, this.updateEff), this.observe(Recharge.ins().postLingChongData, this.updateActivity), 
        this.selectIndex = t[0] ? t[0] : 0, this.activityPanel.open(), this.upLevelPanel.open(), 
        this.upStarPanel.open(), this.skillItem.open(), this.updateData(), this.updateActivity(), 
        this.upRedpoint(null);
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeEvents(), this.activityPanel.close(), this.upLevelPanel.close(), this.upStarPanel.close(), 
        this.skillItem.close(), this.itemList.removeEventListener(eui.ItemTapEvent.ITEM_TAP, this.onListSelect, this), 
        this.scroller.removeEventListener(egret.Event.CHANGE, this.upRedpoint, this), TimerManager.ins().remove(this.updateTime, this), 
        TimerManager.ins().remove(this.refreshItemList, this);
    }, e.prototype.updateEff = function() {
        this.successMC.playFile(ResPath.getUIEffectPath(UiEffectType.Type3), 1, null, !1, !0);
    }, e.prototype.upRedpoint = function(t) {
        var e = this.itemList.contentWidth - this.itemList.width;
        this.rightBtn.visible = this.itemList.scrollH != e, this.leftBtn.visible = 0 != this.itemList.scrollH;
    }, e.prototype.onListSelect = function(t) {
        this.selectIndex = this.itemList.selectedIndex;
        var e = t.item.id;
        this.updateSelect(e);
    }, e.prototype.updateData = function() {
        this.refreshItemList();
        var t = this.itemList.selectedItem.id;
        this.updateSelect(t);
    }, e.prototype.refreshItemList = function() {
        var t = this.itemList.scrollH;
        this.itemList.dataProvider.refresh(), this.itemList.validateNow(), this.itemList.scrollH = t, 
        this.itemList.selectedIndex = this.selectIndex;
    }, e.prototype.updateSelect = function(t) {
        LingChongManager.ins().curLingChongId != t && this.upLevelPanel.change(), LingChongManager.ins().curLingChongId = t, 
        this.curIsActivity = LingChongManager.ins().getIsActivity(t), this.curIsActivity ? (this.mcMain.filters = null, 
        this.mcPartCon.visible = !1, this.tab.visible = !0, this.starCon.visible = !0, this.followBtn.visible = !0, 
        this.viewStack.visible = !0, this.redPointCon.visible = !0, this.yulanTab.visible = !1, 
        this.activityPanel.visible = !1, this.upLevelPanel.setData(t), this.upStarPanel.setData(t), 
        this.updateStar(t), this.mcMain.stopFrame = 0) : (this.mcMain.filters = [ ColorUtil.colorMat ], 
        5 == t ? this.mcMain.stopFrame = 4 : this.mcMain.stopFrame = 1, this.mcPartCon.visible = !0, 
        this.setPart(t), this.tab.visible = !1, this.starCon.visible = !1, this.followBtn.visible = !1, 
        this.viewStack.visible = !1, this.redPointCon.visible = !1, this.yulanTab.visible = !0, 
        this.activityPanel.visible = !0, this.activityPanel.setData(t)), this.mcMain.playFile(ResPath.getUILingChongPath(t), -1, null, !1, !0), 
        this.skillItem.setData(t), this.updateOther(t), this.updateTabRedPoint();
    }, e.prototype.updateStar = function(t) {
        var e = SubRoles.ins().getSubRoleByIndex(0), i = e.getLingChongData(t), n = LingChongManager.ins().getMaxStar(i.id, i.quality);
        this.preId != t ? (this.preId = t, this.starList.init(n, i.star)) : this.starList.maxNum != n ? this.starList.init(n, i.star) : this.starList.starNum = i.star;
    }, e.prototype.updateOther = function(t) {
        var e = SubRoles.ins().getSubRoleByIndex(0), i = e.getLingChongData(t);
        this.lvTxt.text = "Lv." + i.level, this.nameImg.source = LingChongManager.ins().getLingChongName(t);
        var n = LingChongManager.ins().getTotalPower(t);
        BitmapNumber.ins().changeNum(this.power, n, BitmapNumber.numType0), this.updateFollow();
    }, e.prototype.updateFollow = function() {
        LingChongManager.ins().getFollowId() == LingChongManager.ins().curLingChongId && (this.followBtn.visible = !1);
    }, e.prototype.updateBagItem = function() {
        this.updateListRedPoint(), this.updateTabRedPoint(), this.setCount();
    }, e.prototype.updateListRedPoint = function() {
        TimerManager.ins().remove(this.refreshItemList, this), TimerManager.ins().doTimer(800, 1, this.refreshItemList, this);
    }, e.prototype.updateTabRedPoint = function() {
        this.redPoint0.visible = LingChongManager.ins().getLevelRedPoint(LingChongManager.ins().curLingChongId), 
        this.redPoint1.visible = LingChongManager.ins().getStarRedPoint(LingChongManager.ins().curLingChongId);
    }, e.prototype.setCount = function() {
        this.curIsActivity ? (this.upLevelPanel.setCount(), this.upStarPanel.setCount()) : this.activityPanel.setCount();
    }, e.prototype.setPart = function(t) {
        var e = SubRoles.ins().getSubRoleByIndex(0), i = e.getLingChongData(t);
        i.activityPart >= 1 ? (this.mcPart1.stopFrame = 1, this.mcPart1.playFile(ResPath.getUILingChongPartPath(t), -1, null, !1, !1), 
        this.mcPart1.visible = !0) : (this.mcPart1.stop(), this.mcPart1.visible = !1), i.activityPart >= 2 ? (this.mcPart2.stopFrame = 2, 
        this.mcPart2.playFile(ResPath.getUILingChongPartPath(t), -1, null, !1, !1), this.mcPart2.visible = !0) : (this.mcPart2.stop(), 
        this.mcPart2.visible = !1), i.activityPart >= 3 ? (this.mcPart3.stopFrame = 3, this.mcPart3.playFile(ResPath.getUILingChongPartPath(t), -1, null, !1, !1), 
        this.mcPart3.visible = !0) : (this.mcPart3.stop(), this.mcPart3.visible = !1), i.activityPart >= 4 ? (this.mcPart4.stopFrame = 4, 
        this.mcPart4.playFile(ResPath.getUILingChongPartPath(t), -1, null, !1, !1), this.mcPart4.visible = !0) : (this.mcPart4.stop(), 
        this.mcPart4.visible = !1);
    }, e.prototype.onTouchBtn = function(t) {
        var e = 4 * this._itemWidth;
        switch (t.target) {
          case this.leftBtn:
            this.itemList.scrollH <= e ? this.itemList.scrollH = 0 : this.itemList.scrollH -= e;
            break;

          case this.rightBtn:
            var i = this.itemList.contentWidth - this.itemList.width;
            if (0 >= i) return;
            e > i ? this.itemList.scrollH = i : this.itemList.scrollH += e;
            break;

          case this.followBtn:
            LingChong.ins().sendChangeFollow(LingChongManager.ins().curLingChongId);
            break;

          case this.activityBtn:
            if (RebateData11.ins().checkShowIcon()) ViewManager.ins().open(RebateHallWin, RebateData11.ins().getTabData()); else if (this.totalTime > 0) {
                var n = GlobalConfig.ins().RechargeLingchongAwardConfig[1].pay;
                LocationProperty.pf == LocationProperty.zwwxxyx ? UserTips.ins().showTips("领取时间未到，不可领取|C:0x34ff25&T:500|元宝") : UserTips.ins().showTips("领取时间未到，不可领取|C:0x34ff25&T:" + n + "|元宝");
            } else Recharge.ins().sendlingChongGet();
        }
        this.upRedpoint(null);
    }, e.prototype.onTabTouchBtn = function(t) {
        0 != this.tab.selectedIndex && this.upLevelPanel.change();
    }, e.prototype.updateActivity = function() {
        this.activityBtn.y = this.skillItem.y + this.skillItem.list.height + 10;
        var t = RebateData11.ins();
        t.checkShowIcon() ? (this.activityBtn.visible = !0, this.activityBtn.icon = "rebatehall_btn1", 
        this.activityBtn.label = "") : (this.activityBtn.icon = "rebatehall_btn2", this.activityBtn.visible = t.checkShowIconFan(), 
        this.activityBtn.labelDisplay.textColor = 3473189, this.activityBtn.labelDisplay.bottom = -12, 
        this.activityBtn.labelDisplay.width = 100, t.time > 0 ? (TimerManager.ins().isExists(this.updateTime, this) && TimerManager.ins().remove(this.updateTime, this), 
        TimerManager.ins().doTimer(1e3, 0, this.updateTime, this), this.updateTime()) : TimerManager.ins().remove(this.updateTime, this)), 
        LocationProperty.isCloseWxgameIos() && (this.activityBtn.visible = !1);
    }, e.prototype.updateTime = function() {
        var t = DateUtils.formatMiniDateTime(RebateData11.ins().time), e = t - GameServer.serverTime, i = e + egret.getTimer();
        this.totalTime = Math.floor((i - egret.getTimer()) / 1e3);
        var n;
        n = this.totalTime > 0 ? this.totalTime > DateUtils.SECOND_PER_DAY ? "" + DateUtils.getFormatBySecond(this.totalTime, DateUtils.TIME_FORMAT_11, 4) : "" + DateUtils.getFormatBySecond(this.totalTime, DateUtils.TIME_FORMAT_1) : "可领取", 
        this.activityBtn.label = n;
    }, e;
}(BaseView);

__reflect(LingChongPanel.prototype, "LingChongPanel");

window.LingChongPanel = LingChongPanel;

var LingChongSkill = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "LingChongSkillSkin", e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.init();
    }, e.prototype.init = function() {
        this.touchEnabled = !1, this.touchChildren = !0, this.list.dataProvider = null, 
        this.list.itemRenderer = LingChongSkillItem;
    }, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
    }, e.prototype.setData = function(t) {
        var e, i, n = LingChongManager.ins().getIsActivity(t), s = SubRoles.ins().getSubRoleByIndex(0), a = s.getLingChongData(t);
        if (n) i = LingChongManager.ins().getCurQualityStarConfig(t, a.quality, a.star), 
        e = i.skillLv; else {
            i = LingChongManager.ins().getCurQualityStarConfig(t, a.quality, 0), e = [];
            for (var o = 0; o < i.skillLv.length; o++) {
                var r = new LingChongQualitySkillConfig();
                r.id = i.skillLv[o].id, r.level = 0, e.push(r);
            }
        }
        this.list.dataProvider = new eui.ArrayCollection(e);
    }, e;
}(BaseView);

__reflect(LingChongSkill.prototype, "LingChongSkill");

window.LingChongSkill = LingChongSkill;

var LingChongUpLevelView = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.autoUp = !1, e.preExp = -1, e.skinName = "LingChongUpLevelSkin", e.setSkinPart("expBar", new CommonProgressBar("BarCom2Skin", 9, 7, 340, 11, !0)), 
        e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.init();
    }, e.prototype.init = function() {
        this.touchEnabled = !1, this.touchChildren = !0, this.eff = new MovieClip();
    }, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEvent(this.upBtn, this.onClick), this.addTouchEvent(this.getItemBtn, this.onClick), 
        this.observe(LingChong.ins().postUpLevelSuccess, this.handleUpLevel), this.observe(LingChong.ins().postUpLevelFailed, this.handleUpLevelFailed);
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeEvents(), this.removeEff(), TimerManager.ins().remove(this.autoUpLevel, this);
    }, e.prototype.handleUpLevel = function() {
        this.levelUp = !0, this.addEff(), TimerManager.ins().doTimer(500, 1, this.autoUpLevel, this);
    }, e.prototype.handleUpLevelFailed = function() {
        TimerManager.ins().remove(this.autoUpLevel, this), this.autoUp = !1, this.autoUpLevel();
    }, e.prototype.autoUpLevel = function() {
        this.autoUp ? (LingChong.ins().sendUpLevel(this.id), this.upBtn.label = "停止") : this.upBtn.label = "一键升级";
    }, e.prototype.onClick = function(t) {
        switch (t.target) {
          case this.upBtn:
            this.autoUp = !this.autoUp, this.autoUpLevel();
            break;

          case this.getItemBtn:
            UserWarn.ins().setBuyGoodsWarn(this.itemId, 1);
        }
    }, e.prototype.change = function() {
        this.handleUpLevelFailed(), this.preExp = -1;
    }, e.prototype.addEff = function() {
        this.levelUp && this.levelChange && (this.effCon.addChild(this.eff), this.eff.playFile(ResPath.getUIEffectPath(UiEffectType.Type43)), 
        this.levelUp = !1, this.levelChange = !1);
    }, e.prototype.removeEff = function() {
        this.eff && (this.eff.stop(), DisplayUtils.removeFromParent(this.eff));
    }, e.prototype.setData = function(t) {
        var e = SubRoles.ins().getSubRoleByIndex(0), i = e.getLingChongData(t);
        this.levelChange = !1, this.id == t && this.level != i.level && (this.levelChange = !0, 
        this.addEff()), this.id = t, this.level != i.level && this.change(), this.level = i.level;
        var n = i.quality, s = i.star, a = LingChongManager.ins().getCurLevelConfig(this.id, this.level), o = LingChongManager.ins().getNextLevelConfig(this.id, this.level), r = LingChongManager.ins().getCurQualityStarConfig(this.id, n, s), h = LingChongManager.ins().getLevelLimit(this.id, n, s), l = this.level == r.limitLv, u = -1 == h && !o;
        if (u ? this.currentState = "max" : l ? (this.currentState = "limit", this.tipsTxt.text = "提升灵宠星级可继续升级到" + h + "级") : this.currentState = "common", 
        !u) {
            if (o) {
                this.expBar.maxvalue = o.exp, this.preId != t ? this.expBar.init(i.exp) : this.expBar.value = i.exp;
                var p = -1 == this.preExp ? -1 : i.exp - this.preExp;
                p > 0 && UserTips.ins().showTips("灵宠经验+" + p), this.preExp = i.exp, this.preId = t;
                var c = GlobalConfig.ins().ItemConfig(o.provider.id);
                this.costItemImg.source = ResPath.getItemIconPath(c.icon), this.nextLvAttr.text = AttributeData.getAttWithPercentStr(o.attrs, 0, 1, "：", !1, !0, r.percent);
            }
            this.setCount();
        }
        this.curLvAttr.text = AttributeData.getAttWithPercentStr(a.attrs, 0, 1, "：", !1, !0, r.percent);
    }, e.prototype.setCount = function() {
        var t = LingChongManager.ins().getNextLevelConfig(this.id, this.level);
        if (t) {
            var e = UserBag.ins().getBagGoodsCountById(0, t.provider.id), i = e >= t.provider.cnt ? LangManager.commonStr38 : LangManager.commonStr37;
            this.costTxt.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(i, e, t.provider.cnt)), 
            this.itemId = t.provider.id;
        }
    }, e;
}(BaseView);

__reflect(LingChongUpLevelView.prototype, "LingChongUpLevelView");

window.LingChongUpLevelView = LingChongUpLevelView;

var LingChongUpStarView = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "LingChongUpStarSkin", e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.init();
    }, e.prototype.init = function() {
        this.touchEnabled = !1, this.touchChildren = !0;
    }, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEvent(this.upBtn, this.onClick), this.addTouchEvent(this.getItemBtn, this.onClick);
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeEvents();
    }, e.prototype.onClick = function(t) {
        switch (t.target) {
          case this.upBtn:
            LingChong.ins().sendUpStar(this.id);
            break;

          case this.getItemBtn:
            UserWarn.ins().setBuyGoodsWarn(this.itemId, 1);
        }
    }, e.prototype.setData = function(t) {
        var e = SubRoles.ins().getSubRoleByIndex(0), i = e.getLingChongData(t);
        this.id = t, this.quality = i.quality, this.star = i.star;
        var n = LingChongManager.ins().getCurQualityStarConfig(this.id, this.quality, this.star), s = LingChongManager.ins().getNextQualityStarConfig(this.id, this.quality, this.star);
        this.currentState = s ? "common" : "max";
        var a;
        if (a = this.getPercentStr(n.percent) + "\n技能等级：" + n.skillLv[0].level + "级", 0 == this.star) {
            LingChongManager.ins().getActivityAttrs(this.id);
        }
        if (s) {
            var o = GlobalConfig.ins().ItemConfig(s.itemId);
            this.costItemImg.source = ResPath.getItemIconPath(o.icon), this.nextLvAttr.text = this.getPercentStr(s.percent) + "\n技能等级：" + s.skillLv[0].level + "级";
        }
        this.curLvAttr.text = a, this.setCount();
    }, e.prototype.getPercentStr = function(t) {
        var e = t / 100;
        return "等级属性：+" + e + "%";
    }, e.prototype.setCount = function() {
        var t = LingChongManager.ins().getNextQualityStarConfig(this.id, this.quality, this.star);
        if (t) {
            var e = UserBag.ins().getBagGoodsCountById(0, t.itemId), i = e >= t.cost ? LangManager.commonStr38 : LangManager.commonStr37;
            this.costTxt.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(i, e, t.cost)), 
            this.itemId = t.itemId;
        }
    }, e;
}(BaseView);

__reflect(LingChongUpStarView.prototype, "LingChongUpStarView");

window.LingChongUpStarView = LingChongUpStarView;

var MuChangPanel = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.index0 = 0, e.index1 = 1, e.index2 = 2, e.index3 = 3, e.index4 = 4, e.index5 = 5, 
        e.itemIndex0 = 0, e.itemIndex1 = 1, e.itemIndex2 = 2, e.itemIndex3 = 3, e.itemIndex4 = 4, 
        e.itemIndex5 = 5, e._itemWidth = 89, e.skinName = "MuChangSkin", e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.init();
    }, e.prototype.init = function() {
        this.touchEnabled = !1, this.touchChildren = !0, this.setSkinPart("subPanel0", new MuChangSub0Panel()), 
        this.setSkinPart("subPanel5", new MuChangSub5Panel()), this.setSkinPart("subPanel2", new MuChangSub2Panel()), 
        this.setSkinPart("subPanel1", new MuChangSub1Panel()), this.setSkinPart("subPanel3", new MuChangSub3Panel()), 
        this.setSkinPart("subPanel4", new MuChangSub4Panel()), this.mcMain = new MovieClip(), 
        this.mcMainCon.addChild(this.mcMain), this.itemList.dataProvider = null, this.itemList.itemRenderer = MuChangItem, 
        this.itemList.dataProvider = new eui.ArrayCollection(MuChangManager.ins().getItemList());
    }, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.itemList.dataProvider.refresh(), this.addTouchEvent(this.leftBtn, this.onTouchBtn), 
        this.addTouchEvent(this.rightBtn, this.onTouchBtn), this.itemList.addEventListener(eui.ItemTapEvent.ITEM_TAP, this.onListSelect, this), 
        this.scroller.addEventListener(egret.Event.CHANGE, this.upRedpoint, this), this.observe(LingChong.ins().postServerData30, this.updateData3), 
        this.observe(LingChong.ins().postServerData38, this.updateList3), this.observe(LingChong.ins().postServerData100, this.updateData1), 
        this.observe(LingChong.ins().postServerData108, this.updateList1), this.observe(LingChong.ins().postServerData50, this.updateData5), 
        this.observe(LingChong.ins().postServerData58, this.updateList5), this.observe(LingChong.ins().postServerData60, this.updateData6), 
        this.observe(LingChong.ins().postServerData66, this.updateList6), this.observe(LingChong.ins().postServerData20, this.updateData2), 
        this.observe(LingChong.ins().postServerData26, this.updateList2), this.observe(LingChong.ins().postServerData40, this.updateData4), 
        this.observe(LingChong.ins().postServerData46, this.updateList4), this.observe(LingChong.ins().postMuChangPanelChange, this.showTravel), 
        this.selectIndex = t[0] ? t[0] : 0, this.updateData(), this.subPanel0.open(), this.subPanel5.open(), 
        this.subPanel1.open(), this.subPanel2.open(), this.subPanel3.open(), this.subPanel4.open(), 
        this.upRedpoint(null);
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeEvents(), this.subPanel0.close(), this.subPanel5.close(), this.subPanel1.close(), 
        this.subPanel2.close(), this.subPanel3.close(), this.subPanel4.close(), this.itemList.removeEventListener(eui.ItemTapEvent.ITEM_TAP, this.onListSelect, this), 
        this.scroller.removeEventListener(egret.Event.CHANGE, this.upRedpoint, this), MuChangManager.ins().cleanEggState();
    }, e.prototype.upRedpoint = function(t) {
        var e = this.itemList.contentWidth - this.itemList.width;
        this.rightBtn.visible = this.itemList.scrollH != e, this.leftBtn.visible = 0 != this.itemList.scrollH;
    }, e.prototype.onListSelect = function(t) {
        var e = t.item;
        this.setListIndex(e);
    }, e.prototype.setListIndex = function(t) {
        switch (this.selectSkillId = t.skillId, this.mcMain.playFile(ResPath.getUILingChongPath(t.id), -1, null, !1, !1), 
        t.skillId) {
          case MuChangManager.ins().SKILL_ID4:
            this.viewStack.selectedIndex = this.index0, this.subPanel0.setData();
            break;

          case MuChangManager.ins().SKILL_ID10:
            this.viewStack.selectedIndex = this.index1, this.subPanel5.setData();
            break;

          case MuChangManager.ins().SKILL_ID8:
            this.viewStack.selectedIndex = this.index2, this.subPanel2.setData();
            break;

          case MuChangManager.ins().SKILL_ID2:
            this.viewStack.selectedIndex = this.index3, this.subPanel1.setData();
            break;

          case MuChangManager.ins().SKILL_ID3:
            this.viewStack.selectedIndex = this.index4, this.subPanel3.setData();
            break;

          case MuChangManager.ins().SKILL_ID6:
            this.viewStack.selectedIndex = this.index5, this.subPanel4.setData();
        }
        this.nameImg.source = "lingchong_skillName" + t.skillId;
    }, e.prototype.updateData = function() {
        var t = this.itemList.dataProvider.source[this.selectIndex];
        this.itemList.selectedIndex = this.selectIndex, this.setListIndex(t);
    }, e.prototype.updateData3 = function() {
        this.subPanel3.updateData(), this.updateRedPoint(this.itemIndex2);
    }, e.prototype.updateList3 = function() {
        this.updateRedPoint(this.itemIndex2), this.subPanel3.updateRedPoint();
    }, e.prototype.updateData1 = function() {
        this.subPanel1.updateData(), this.updateRedPoint(this.itemIndex0);
    }, e.prototype.updateList1 = function() {
        this.updateRedPoint(this.itemIndex0), this.subPanel1.updateRedPoint();
    }, e.prototype.updateData5 = function() {
        this.subPanel4.updateData(), this.updateRedPoint(this.itemIndex4);
    }, e.prototype.updateList5 = function() {
        this.updateRedPoint(this.itemIndex4), this.subPanel4.updateRedPoint();
    }, e.prototype.updateData6 = function() {
        this.subPanel2.updateData(), this.updateRedPoint(this.itemIndex5);
    }, e.prototype.updateList6 = function() {
        this.updateRedPoint(this.itemIndex5), this.subPanel2.updateRedPoint();
    }, e.prototype.updateData2 = function() {
        this.subPanel0.updateData(), this.updateRedPoint(this.itemIndex1);
    }, e.prototype.updateList2 = function() {
        this.updateRedPoint(this.itemIndex1), this.subPanel0.updateRedPoint();
    }, e.prototype.updateData4 = function() {
        this.subPanel5.updateData(), this.updateRedPoint(this.itemIndex3);
    }, e.prototype.updateList4 = function() {
        this.updateRedPoint(this.itemIndex3), this.subPanel5.updateRedPoint();
    }, e.prototype.updateRedPoint = function(t) {
        var e = this.itemList.getElementAt(t);
        e && e.updateRedPoint();
    }, e.prototype.showTravel = function(t) {
        if (t == this.selectSkillId) {
            var e;
            switch (this.selectSkillId) {
              case MuChangManager.ins().SKILL_ID2:
                e = this.subPanel1.isTravel;
                break;

              case MuChangManager.ins().SKILL_ID3:
                e = this.subPanel3.isTravel;
                break;

              case MuChangManager.ins().SKILL_ID6:
                e = this.subPanel4.isTravel;
            }
            egret.Tween.removeTweens(this.mcMainCon), e && this.moveMc();
        }
    }, e.prototype.moveMc = function() {
        var t = this, e = egret.Tween.get(this.mcMainCon);
        e.to({
            y: 238
        }, 500).to({
            y: 248
        }, 500).call(function() {
            t.moveMc();
        }, this);
    }, e.prototype.onTouchBtn = function(t) {
        var e = 4 * this._itemWidth;
        switch (t.target) {
          case this.leftBtn:
            this.itemList.scrollH <= e ? this.itemList.scrollH = 0 : this.itemList.scrollH -= e;
            break;

          case this.rightBtn:
            var i = this.itemList.contentWidth - this.itemList.width;
            if (0 >= i) return;
            e > i ? this.itemList.scrollH = i : this.itemList.scrollH += e;
        }
        this.upRedpoint(null);
    }, e;
}(BaseView);

__reflect(MuChangPanel.prototype, "MuChangPanel");

window.MuChangPanel = MuChangPanel;

var MuChangSub0Panel = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.id = MuChangManager.ins().LINGCHONG_ID2, e.skillId = MuChangManager.ins().SKILL_ID4, 
        e.skinName = "MuChangSub0Skin", e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.init();
    }, e.prototype.init = function() {
        this.touchEnabled = !1, this.touchChildren = !0, this.setSkinPart("rewardItem", new ItemBase());
    }, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEvent(this.logBtn, this.onClick), this.addTouchEvent(this.feedBtn, this.onClick), 
        this.addTouchEvent(this.eggImg, this.onClick), this.addTouchEvent(this.btnClean, this.onClick), 
        this.addTouchEvent(this.checkBtn, this.onClick), this.observe(LingChong.ins().postServerData22, this.updateResult), 
        this.initState(), LingChong.ins().sendToServer20(), LingChong.ins().sendToServer26();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeEvents(), TimerManager.ins().remove(this.updateTime, this), TimerManager.ins().remove(this.updateData, this), 
        LingChongSkillData2.ins().cleanResult();
    }, e.prototype.onClick = function(t) {
        switch (t.target) {
          case this.logBtn:
            ViewManager.ins().open(MuChangLogWin, this.skillId);
            break;

          case this.feedBtn:
            LingChongSkillData2.firstTap = !0, this.updateRedPoint(), ViewManager.ins().open(MuChangFeedWin, this.skillId);
            break;

          case this.checkBtn:
            ViewManager.ins().open(MuChangRewardShowWin1, this.id, this.skillId);
            break;

          case this.eggImg:
            if (LingChongSkillData2.ins().leftTime > 0) return void UserTips.ins().showTips("未孵化");
            LingChong.ins().sendToServer22();
            break;

          case this.btnClean:
            var e = LingChongSkillData2.ins();
            if (e.leftTime > 0) if (e.isNoShow) LingChong.ins().sendToServer23(); else {
                var i = MuChangManager.ins().getLingChongSkill(this.id), n = GlobalConfig.ins().LingChongSkillConfig[this.skillId][i.level], s = Math.ceil(this.getCleanMinutes() / n.skillEff.fuhua.clearCfg.Minute);
                WarnWin.show("是否花费" + n.skillEff.fuhua.clearCfg.YB * s + "元宝加速孵化", function() {
                    LingChong.ins().sendToServer23();
                }, this, null, null, "", [], !0, "今日不再提示", function(t) {
                    e.isNoShow = t;
                }, this);
            } else UserTips.ins().showTips("当前无需加速");
        }
    }, e.prototype.getCleanMinutes = function() {
        var t = Math.floor((this.time - egret.getTimer()) / 1e3), e = Math.ceil(t / 60);
        return e;
    }, e.prototype.initState = function() {
        this.isActivity = LingChongManager.ins().getIsActivity(this.id), this.isActivity ? (this.logBtn.visible = !0, 
        this.eggImg.visible = !0, this.img0.visible = !0, this.timeCon.visible = !0, this.expBar.visible = !0, 
        this.checkBtn.visible = !0, this.timeLimitTxt.visible = !0) : (this.logBtn.visible = !1, 
        this.eggImg.visible = !1, this.img0.visible = !1, this.timeCon.visible = !1, this.expBar.visible = !1, 
        this.checkBtn.visible = !1, this.timeLimitTxt.visible = !1);
    }, e.prototype.setData = function() {
        LingChong.ins().postMuChangPanelChange(this.skillId), LingChongSkillData2.ins().cleanResult(), 
        this.rewardItem.visible = !1, TimerManager.ins().remove(this.setResult, this), this.eggImg.source = 2 == LingChongSkillData2.ins().eggType ? "lingchong_egg1_png" : "lingchong_egg0_png";
    }, e.prototype.updateResult = function() {
        var t = GlobalConfig.ins().LingChongRewardTask2Config[LingChongSkillData2.ins().resultEggLevel][LingChongSkillData2.ins().resultEggType - 1][LingChongSkillData2.ins().resultEggId - 1];
        this.rewardItem.data = t.rewards[0], this.rewardItem.visible = !0, this.eggImg.source = 2 == LingChongSkillData2.ins().resultEggType ? "lingchong_egg3_png" : "lingchong_egg2_png", 
        TimerManager.ins().doTimer(3e3, 1, this.setResult, this);
    }, e.prototype.setResult = function() {
        LingChongSkillData2.ins().cleanResult(), this.updateData(), this.rewardItem.visible = !1;
    }, e.prototype.updateData = function() {
        if (TimerManager.ins().remove(this.updateTime, this), this.eggRedPoint.visible = !1, 
        this.isActivity) {
            var t = LingChongSkillData2.ins(), e = MuChangManager.ins().getLingChongSkill(this.id), i = GlobalConfig.ins().LingChongSkillConfig[this.skillId][e.level];
            t.leftTime > 0 ? (this.fuhuaTimeTxt.textColor = 16652572, this.time = 1e3 * t.leftTime + egret.getTimer(), 
            TimerManager.ins().doTimer(1e3, 0, this.updateTime, this), this.updateTime()) : (this.fuhuaTimeTxt.text = "已孵化", 
            this.fuhuaTimeTxt.textColor = 3002413);
            var n = GlobalConfig.ins().LingChongCommonConfig.openEggTimesMax - t.openTime, s = n > 0 ? LangManager.lingchong_str8 : LangManager.lingchong_str9;
            this.timeLimitTxt.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(s, "孵化", n, GlobalConfig.ins().LingChongCommonConfig.openEggTimesMax)), 
            this.eggRedPoint.visible = t.getEggRedPoint(), this.expBar.maximum = i.skillEff.jingdan.xianQi, 
            this.expBar.value = t.xianqi, -1 == LingChongSkillData2.ins().resultEggType ? (this.eggImg.source = 2 == t.eggType ? "lingchong_egg1_png" : "lingchong_egg0_png", 
            this.rewardItem.visible = !1) : this.eggImg.source = 2 == LingChongSkillData2.ins().resultEggType ? "lingchong_egg3_png" : "lingchong_egg2_png";
        }
    }, e.prototype.updateTime = function() {
        var t = Math.floor((this.time - egret.getTimer()) / 1e3);
        return 0 >= t ? (this.fuhuaTimeTxt.text = "已孵化", this.fuhuaTimeTxt.textColor = 3002413, 
        void TimerManager.ins().remove(this.updateTime, this)) : void (this.fuhuaTimeTxt.text = DateUtils.getFormatBySecond(t));
    }, e.prototype.updateRedPoint = function() {
        this.feedRedPoint.visible = LingChongSkillData2.ins().getFeedRedPoint();
    }, e;
}(BaseView);

__reflect(MuChangSub0Panel.prototype, "MuChangSub0Panel");

window.MuChangSub0Panel = MuChangSub0Panel;

var MuChangSub1Panel = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.id = MuChangManager.ins().LINGCHONG_ID1, e.skillId = MuChangManager.ins().SKILL_ID2, 
        e.skinName = "MuChangSub1Skin", e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.init();
    }, e.prototype.init = function() {
        this.touchEnabled = !1, this.touchChildren = !0, this.travelMc0 || (this.travelMc0 = new MovieClip()), 
        this.travelMc1 || (this.travelMc1 = new MovieClip());
    }, e.prototype.showTravel = function() {
        this.travelMc0.playFile(ResPath.getUIEffectPath(UiEffectType.Type45), -1), this.travelCon0.addChild(this.travelMc0), 
        this.travelMc1.playFile(ResPath.getUIEffectPath(UiEffectType.Type44), -1), this.travelCon1.addChild(this.travelMc1), 
        this.isTravel = !0;
    }, e.prototype.hideTravel = function() {
        this.travelMc0 && (this.travelMc0.stop(), DisplayUtils.removeFromParent(this.travelMc0)), 
        this.travelMc1 && (this.travelMc1.stop(), DisplayUtils.removeFromParent(this.travelMc1)), 
        this.isTravel = !1;
    }, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEvent(this.logBtn, this.onClick), this.addTouchEvent(this.bagBtn, this.onClick), 
        this.addTouchEvent(this.goBtn, this.onClick), this.addTouchEvent(this.powerBtn, this.onClick), 
        this.addTouchEvent(this.checkBtn, this.onClick), this.initState(), LingChong.ins().sendToServer100(), 
        LingChong.ins().sendToServer108();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeEvents(), TimerManager.ins().remove(this.updateTime, this), TimerManager.ins().remove(this.updateBar, this), 
        this.hideTravel();
    }, e.prototype.onClick = function(t) {
        switch (t.target) {
          case this.logBtn:
            ViewManager.ins().open(MuChangLogWin, this.skillId);
            break;

          case this.bagBtn:
            ViewManager.ins().open(MuChangBagWin, this.skillId, this.reward);
            break;

          case this.goBtn:
            LingChong.ins().sendToServer102();
            break;

          case this.powerBtn:
            LingChongSkillData1.firstTap = !0, this.updateRedPoint(), ViewManager.ins().open(MuChangGetPowerWin, this.skillId);
            break;

          case this.checkBtn:
            ViewManager.ins().open(MuChangRewardShowWin, this.id, this.skillId);
        }
    }, e.prototype.setData = function() {
        LingChong.ins().postMuChangPanelChange(this.skillId);
    }, e.prototype.initState = function() {
        this.timeTxt.visible = !1, this.isActivity = LingChongManager.ins().getIsActivity(this.id), 
        this.isActivity ? (this.logBtn.visible = !0, this.bagBtn.visible = !0, this.goBtn.visible = !0, 
        this.powerBtn.visible = !0, this.img0.visible = !0, this.expBar.visible = !0, this.huifuTipsTxt.visible = !0, 
        this.checkBtn.visible = !0, this.travelCon.visible = !0, this.timeLimitTxt.visible = !0) : (this.logBtn.visible = !1, 
        this.bagBtn.visible = !1, this.goBtn.visible = !1, this.img0.visible = !1, this.expBar.visible = !1, 
        this.powerBtn.visible = !0, this.huifuTipsTxt.visible = !1, this.checkBtn.visible = !1, 
        this.travelCon.visible = !1, this.timeLimitTxt.visible = !1);
    }, e.prototype.updateData = function() {
        if (TimerManager.ins().remove(this.updateTime, this), TimerManager.ins().remove(this.updateBar, this), 
        this.bagRedPoint.visible = !1, this.isActivity) {
            var t = LingChongSkillData1.ins(), e = MuChangManager.ins().getLingChongSkill(this.id), i = GlobalConfig.ins().LingChongSkillConfig[this.skillId][e.level], n = i.skillEff.power.restoreNSecond / 60;
            this.huifuTipsTxt.text = "(每" + n + "分钟恢复1点体力)";
            var s = GlobalConfig.ins().LingChongCommonConfig.trivalTimesMax - t.travelTime, a = s > 0 ? LangManager.lingchong_str8 : LangManager.lingchong_str9;
            if (this.timeLimitTxt.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(a, "旅行", s, GlobalConfig.ins().LingChongCommonConfig.trivalTimesMax)), 
            1 == t.state ? this.showTravel() : this.hideTravel(), LingChong.ins().postMuChangPanelChange(this.skillId), 
            this.goBtn.visible = -1 == t.rewardId && 0 == t.state, this.checkBtn.visible = 1 == t.state, 
            this.bagBtn.visible = -1 != t.rewardId, this.bagRedPoint.visible = t.getBagRedPoint() || t.getTravelRedPoint(), 
            t.leftTime > 0 && (this.time = 1e3 * t.leftTime + egret.getTimer(), TimerManager.ins().doTimer(1e3, 0, this.updateTime, this), 
            this.updateTime()), this.timeTxt.visible = t.leftTime > 0, this.expBar.maximum = i.skillEff.power.powerMax, 
            this.expBar.value = t.power, this.expBar.maximum > this.expBar.value && (this.step = 1, 
            TimerManager.ins().doTimer(1e3 * i.skillEff.power.restoreNSecond, 0, this.updateBar, this)), 
            t.rewardId && -1 != t.rewardId) {
                var o = GlobalConfig.ins().LingChongSkill1Config[t.rewardLevel][t.rewardId - 1];
                this.reward = o.rewards;
            }
        }
    }, e.prototype.updateBar = function() {
        return this.expBar.maximum <= this.expBar.value ? (TimerManager.ins().remove(this.updateBar, this), 
        void (this.expBar.value = this.expBar.maximum)) : void (this.expBar.value += this.step);
    }, e.prototype.updateTime = function() {
        var t = Math.floor((this.time - egret.getTimer()) / 1e3);
        return 0 >= t ? (this.timeTxt.visible = !1, void TimerManager.ins().remove(this.updateTime, this)) : void (this.timeTxt.text = "旅行中：" + DateUtils.getFormatBySecond(t));
    }, e.prototype.updateRedPoint = function() {
        this.powerRedPoint.visible = LingChongSkillData1.ins().getPowerRedPoint();
    }, e;
}(BaseView);

__reflect(MuChangSub1Panel.prototype, "MuChangSub1Panel");

window.MuChangSub1Panel = MuChangSub1Panel;

var MuChangSub2Panel = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.id = MuChangManager.ins().LINGCHONG_ID6, e.skillId = MuChangManager.ins().SKILL_ID8, 
        e.skinName = "MuChangSub0Skin", e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.init();
    }, e.prototype.init = function() {
        this.touchEnabled = !1, this.touchChildren = !0, this.setSkinPart("rewardItem", new ItemBase());
    }, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEvent(this.logBtn, this.onClick), this.addTouchEvent(this.feedBtn, this.onClick), 
        this.addTouchEvent(this.eggImg, this.onClick), this.addTouchEvent(this.btnClean, this.onClick), 
        this.addTouchEvent(this.checkBtn, this.onClick), this.observe(LingChong.ins().postServerData62, this.updateResult), 
        this.initState(), LingChong.ins().sendToServer60(), LingChong.ins().sendToServer66();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeEvents(), TimerManager.ins().remove(this.updateTime, this), TimerManager.ins().remove(this.updateData, this), 
        LingChongSkillData6.ins().cleanResult();
    }, e.prototype.onClick = function(t) {
        switch (t.target) {
          case this.logBtn:
            ViewManager.ins().open(MuChangLogWin, this.skillId);
            break;

          case this.feedBtn:
            LingChongSkillData6.firstTap = !0, this.updateRedPoint(), ViewManager.ins().open(MuChangFeedWin, this.skillId);
            break;

          case this.checkBtn:
            ViewManager.ins().open(MuChangRewardShowWin1, this.id, this.skillId);
            break;

          case this.eggImg:
            if (LingChongSkillData6.ins().leftTime > 0) return void UserTips.ins().showTips("未孵化");
            LingChong.ins().sendToServer62();
            break;

          case this.btnClean:
            var e = LingChongSkillData6.ins();
            if (e.leftTime > 0) if (e.isNoShow) LingChong.ins().sendToServer63(); else {
                var i = MuChangManager.ins().getLingChongSkill(this.id), n = GlobalConfig.ins().LingChongSkillConfig[this.skillId][i.level], s = Math.ceil(this.getCleanMinutes() / n.skillEff.fuhua.clearCfg.Minute);
                WarnWin.show("是否花费" + n.skillEff.fuhua.clearCfg.YB * s + "元宝加速孵化", function() {
                    LingChong.ins().sendToServer63();
                }, this, null, null, "", [], !0, "今日不再提示", function(t) {
                    e.isNoShow = t;
                }, this);
            } else UserTips.ins().showTips("当前无需加速");
        }
    }, e.prototype.getCleanMinutes = function() {
        var t = Math.floor((this.time - egret.getTimer()) / 1e3), e = Math.ceil(t / 60);
        return e;
    }, e.prototype.initState = function() {
        this.isActivity = LingChongManager.ins().getIsActivity(this.id), this.isActivity ? (this.logBtn.visible = !0, 
        this.eggImg.visible = !0, this.img0.visible = !0, this.timeCon.visible = !0, this.expBar.visible = !0, 
        this.checkBtn.visible = !0, this.timeLimitTxt.visible = !0) : (this.logBtn.visible = !1, 
        this.eggImg.visible = !1, this.img0.visible = !1, this.timeCon.visible = !1, this.expBar.visible = !1, 
        this.checkBtn.visible = !1, this.timeLimitTxt.visible = !1);
    }, e.prototype.setData = function() {
        LingChong.ins().postMuChangPanelChange(this.skillId), LingChongSkillData6.ins().cleanResult(), 
        this.rewardItem.visible = !1, TimerManager.ins().remove(this.setResult, this), this.eggImg.source = 2 == LingChongSkillData6.ins().eggType ? "lingchong_egg1_png" : "lingchong_egg0_png";
    }, e.prototype.updateResult = function() {
        var t = GlobalConfig.ins().LingChongRewardTask6Config[LingChongSkillData6.ins().resultEggLevel][LingChongSkillData6.ins().resultEggType - 1][LingChongSkillData6.ins().resultEggId - 1];
        this.rewardItem.data = t.rewards[0], this.rewardItem.visible = !0, this.eggImg.source = 2 == LingChongSkillData6.ins().resultEggType ? "lingchong_egg3_png" : "lingchong_egg2_png", 
        TimerManager.ins().doTimer(3e3, 1, this.setResult, this);
    }, e.prototype.setResult = function() {
        LingChongSkillData6.ins().cleanResult(), this.updateData(), this.rewardItem.visible = !1;
    }, e.prototype.updateData = function() {
        if (TimerManager.ins().remove(this.updateTime, this), this.eggRedPoint.visible = !1, 
        this.isActivity) {
            var t = LingChongSkillData6.ins(), e = MuChangManager.ins().getLingChongSkill(this.id), i = GlobalConfig.ins().LingChongSkillConfig[this.skillId][e.level];
            t.leftTime > 0 ? (this.fuhuaTimeTxt.textColor = 16652572, this.time = 1e3 * t.leftTime + egret.getTimer(), 
            TimerManager.ins().doTimer(1e3, 0, this.updateTime, this), this.updateTime()) : (this.fuhuaTimeTxt.text = "已孵化", 
            this.fuhuaTimeTxt.textColor = 3002413);
            var n = GlobalConfig.ins().LingChongCommonConfig.openEggTimesMax - t.openTime, s = n > 0 ? LangManager.lingchong_str8 : LangManager.lingchong_str9;
            this.timeLimitTxt.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(s, "孵化", n, GlobalConfig.ins().LingChongCommonConfig.openEggTimesMax)), 
            this.eggRedPoint.visible = t.getEggRedPoint(), this.expBar.maximum = i.skillEff.jingdan.xianQi, 
            this.expBar.value = t.xianqi, -1 == LingChongSkillData6.ins().resultEggType ? (this.eggImg.source = 2 == t.eggType ? "lingchong_egg1_png" : "lingchong_egg0_png", 
            this.rewardItem.visible = !1) : this.eggImg.source = 2 == LingChongSkillData6.ins().resultEggType ? "lingchong_egg3_png" : "lingchong_egg2_png";
        }
    }, e.prototype.updateTime = function() {
        var t = Math.floor((this.time - egret.getTimer()) / 1e3);
        return 0 >= t ? (this.fuhuaTimeTxt.text = "已孵化", this.fuhuaTimeTxt.textColor = 3002413, 
        void TimerManager.ins().remove(this.updateTime, this)) : void (this.fuhuaTimeTxt.text = DateUtils.getFormatBySecond(t));
    }, e.prototype.updateRedPoint = function() {
        this.feedRedPoint.visible = LingChongSkillData6.ins().getFeedRedPoint();
    }, e;
}(BaseView);

__reflect(MuChangSub2Panel.prototype, "MuChangSub2Panel");

window.MuChangSub2Panel = MuChangSub2Panel;

var MuChangSub3Panel = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.id = MuChangManager.ins().LINGCHONG_ID3, e.skillId = MuChangManager.ins().SKILL_ID3, 
        e.skinName = "MuChangSub1Skin", e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.init();
    }, e.prototype.init = function() {
        this.touchEnabled = !1, this.touchChildren = !0, this.travelMc0 || (this.travelMc0 = new MovieClip()), 
        this.travelMc1 || (this.travelMc1 = new MovieClip());
    }, e.prototype.showTravel = function() {
        this.travelMc0.playFile(ResPath.getUIEffectPath(UiEffectType.Type45), -1), this.travelCon0.addChild(this.travelMc0), 
        this.travelMc1.playFile(ResPath.getUIEffectPath(UiEffectType.Type44), -1), this.travelCon1.addChild(this.travelMc1), 
        this.isTravel = !0;
    }, e.prototype.hideTravel = function() {
        this.travelMc0 && (this.travelMc0.stop(), DisplayUtils.removeFromParent(this.travelMc0)), 
        this.travelMc1 && (this.travelMc1.stop(), DisplayUtils.removeFromParent(this.travelMc1)), 
        this.isTravel = !1;
    }, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEvent(this.logBtn, this.onClick), this.addTouchEvent(this.bagBtn, this.onClick), 
        this.addTouchEvent(this.goBtn, this.onClick), this.addTouchEvent(this.powerBtn, this.onClick), 
        this.addTouchEvent(this.checkBtn, this.onClick), this.initState(), LingChong.ins().sendToServer30(), 
        LingChong.ins().sendToServer38();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeEvents(), TimerManager.ins().remove(this.updateTime, this), TimerManager.ins().remove(this.updateBar, this), 
        this.hideTravel();
    }, e.prototype.onClick = function(t) {
        switch (t.target) {
          case this.logBtn:
            ViewManager.ins().open(MuChangLogWin, this.skillId);
            break;

          case this.bagBtn:
            ViewManager.ins().open(MuChangBagWin, this.skillId, this.reward);
            break;

          case this.goBtn:
            LingChong.ins().sendToServer32();
            break;

          case this.powerBtn:
            LingChongSkillData3.firstTap = !0, this.updateRedPoint(), ViewManager.ins().open(MuChangGetPowerWin, this.skillId);
            break;

          case this.checkBtn:
            ViewManager.ins().open(MuChangRewardShowWin, this.id, this.skillId);
        }
    }, e.prototype.setData = function() {
        LingChong.ins().postMuChangPanelChange(this.skillId);
    }, e.prototype.initState = function() {
        this.timeTxt.visible = !1, this.isActivity = LingChongManager.ins().getIsActivity(this.id), 
        this.isActivity ? (this.logBtn.visible = !0, this.bagBtn.visible = !0, this.goBtn.visible = !0, 
        this.powerBtn.visible = !0, this.img0.visible = !0, this.expBar.visible = !0, this.huifuTipsTxt.visible = !0, 
        this.checkBtn.visible = !0, this.timeLimitTxt.visible = !0) : (this.logBtn.visible = !1, 
        this.bagBtn.visible = !1, this.goBtn.visible = !1, this.img0.visible = !1, this.expBar.visible = !1, 
        this.huifuTipsTxt.visible = !1, this.powerBtn.visible = !0, this.checkBtn.visible = !1, 
        this.timeLimitTxt.visible = !1);
    }, e.prototype.updateData = function() {
        if (TimerManager.ins().remove(this.updateTime, this), TimerManager.ins().remove(this.updateBar, this), 
        this.bagRedPoint.visible = !1, this.isActivity) {
            var t = LingChongSkillData3.ins(), e = MuChangManager.ins().getLingChongSkill(this.id), i = GlobalConfig.ins().LingChongSkillConfig[this.skillId][e.level], n = i.skillEff.power.restoreNSecond / 60;
            this.huifuTipsTxt.text = "(每" + n + "分钟恢复1点体力)";
            var s = GlobalConfig.ins().LingChongCommonConfig.trivalTimesMax - t.travelTime, a = s > 0 ? LangManager.lingchong_str8 : LangManager.lingchong_str9;
            if (this.timeLimitTxt.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(a, "旅行", s, GlobalConfig.ins().LingChongCommonConfig.trivalTimesMax)), 
            1 == t.state ? this.showTravel() : this.hideTravel(), LingChong.ins().postMuChangPanelChange(this.skillId), 
            this.goBtn.visible = -1 == t.rewardId && 0 == t.state, this.checkBtn.visible = 1 == t.state, 
            this.bagBtn.visible = -1 != t.rewardId, this.bagRedPoint.visible = t.getBagRedPoint() || t.getTravelRedPoint(), 
            t.leftTime > 0 && (this.time = 1e3 * t.leftTime + egret.getTimer(), TimerManager.ins().doTimer(1e3, 0, this.updateTime, this), 
            this.updateTime()), this.timeTxt.visible = t.leftTime > 0, this.expBar.maximum = i.skillEff.power.powerMax, 
            this.expBar.value = t.power, this.expBar.maximum > this.expBar.value && (this.step = 1, 
            TimerManager.ins().doTimer(1e3 * i.skillEff.power.restoreNSecond, 0, this.updateBar, this)), 
            t.rewardId && -1 != t.rewardId) {
                var o = GlobalConfig.ins().LingChongSkill3Config[t.rewardLevel][t.rewardId - 1];
                this.reward = o.rewards;
            }
        }
    }, e.prototype.updateBar = function() {
        return this.expBar.maximum <= this.expBar.value ? (TimerManager.ins().remove(this.updateBar, this), 
        void (this.expBar.value = this.expBar.maximum)) : void (this.expBar.value += this.step);
    }, e.prototype.updateTime = function() {
        var t = Math.floor((this.time - egret.getTimer()) / 1e3);
        return 0 >= t ? (this.timeTxt.visible = !1, void TimerManager.ins().remove(this.updateTime, this)) : void (this.timeTxt.text = "旅行中：" + DateUtils.getFormatBySecond(t));
    }, e.prototype.updateRedPoint = function() {
        this.powerRedPoint.visible = LingChongSkillData3.ins().getPowerRedPoint();
    }, e;
}(BaseView);

__reflect(MuChangSub3Panel.prototype, "MuChangSub3Panel");

window.MuChangSub3Panel = MuChangSub3Panel;

var MuChangSub4Panel = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.id = MuChangManager.ins().LINGCHONG_ID5, e.skillId = MuChangManager.ins().SKILL_ID6, 
        e.skinName = "MuChangSub1Skin", e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.init();
    }, e.prototype.init = function() {
        this.touchEnabled = !1, this.touchChildren = !0, this.travelMc0 || (this.travelMc0 = new MovieClip()), 
        this.travelMc1 || (this.travelMc1 = new MovieClip());
    }, e.prototype.showTravel = function() {
        this.travelMc0.playFile(ResPath.getUIEffectPath(UiEffectType.Type45), -1), this.travelCon0.addChild(this.travelMc0), 
        this.travelMc1.playFile(ResPath.getUIEffectPath(UiEffectType.Type44), -1), this.travelCon1.addChild(this.travelMc1), 
        this.isTravel = !0;
    }, e.prototype.hideTravel = function() {
        this.travelMc0 && (this.travelMc0.stop(), DisplayUtils.removeFromParent(this.travelMc0)), 
        this.travelMc1 && (this.travelMc1.stop(), DisplayUtils.removeFromParent(this.travelMc1)), 
        this.isTravel = !1;
    }, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEvent(this.logBtn, this.onClick), this.addTouchEvent(this.bagBtn, this.onClick), 
        this.addTouchEvent(this.goBtn, this.onClick), this.addTouchEvent(this.powerBtn, this.onClick), 
        this.addTouchEvent(this.checkBtn, this.onClick), this.initState(), LingChong.ins().sendToServer50(), 
        LingChong.ins().sendToServer58();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeEvents(), TimerManager.ins().remove(this.updateTime, this), TimerManager.ins().remove(this.updateBar, this), 
        this.hideTravel();
    }, e.prototype.onClick = function(t) {
        switch (t.target) {
          case this.logBtn:
            ViewManager.ins().open(MuChangLogWin, this.skillId);
            break;

          case this.bagBtn:
            ViewManager.ins().open(MuChangBagWin, this.skillId, this.reward);
            break;

          case this.goBtn:
            LingChong.ins().sendToServer52();
            break;

          case this.powerBtn:
            LingChongSkillData5.firstTap = !0, this.updateRedPoint(), ViewManager.ins().open(MuChangGetPowerWin, this.skillId);
            break;

          case this.checkBtn:
            ViewManager.ins().open(MuChangRewardShowWin, this.id, this.skillId);
        }
    }, e.prototype.setData = function() {
        LingChong.ins().postMuChangPanelChange(this.skillId);
    }, e.prototype.initState = function() {
        this.timeTxt.visible = !1, this.isActivity = LingChongManager.ins().getIsActivity(this.id), 
        this.isActivity ? (this.logBtn.visible = !0, this.bagBtn.visible = !0, this.goBtn.visible = !0, 
        this.powerBtn.visible = !0, this.img0.visible = !0, this.expBar.visible = !0, this.huifuTipsTxt.visible = !0, 
        this.checkBtn.visible = !0, this.timeLimitTxt.visible = !0) : (this.logBtn.visible = !1, 
        this.bagBtn.visible = !1, this.goBtn.visible = !1, this.img0.visible = !1, this.expBar.visible = !1, 
        this.powerBtn.visible = !0, this.huifuTipsTxt.visible = !1, this.checkBtn.visible = !1, 
        this.timeLimitTxt.visible = !1);
    }, e.prototype.updateData = function() {
        if (TimerManager.ins().remove(this.updateTime, this), TimerManager.ins().remove(this.updateBar, this), 
        this.bagRedPoint.visible = !1, this.isActivity) {
            var t = LingChongSkillData5.ins(), e = MuChangManager.ins().getLingChongSkill(this.id), i = GlobalConfig.ins().LingChongSkillConfig[this.skillId][e.level], n = i.skillEff.power.restoreNSecond / 60;
            this.huifuTipsTxt.text = "(每" + n + "分钟恢复1点体力)";
            var s = GlobalConfig.ins().LingChongCommonConfig.trivalTimesMax - t.travelTime, a = s > 0 ? LangManager.lingchong_str8 : LangManager.lingchong_str9;
            if (this.timeLimitTxt.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(a, "旅行", s, GlobalConfig.ins().LingChongCommonConfig.trivalTimesMax)), 
            1 == t.state ? this.showTravel() : this.hideTravel(), LingChong.ins().postMuChangPanelChange(this.skillId), 
            this.goBtn.visible = -1 == t.rewardId && 0 == t.state, this.checkBtn.visible = 1 == t.state, 
            this.bagBtn.visible = -1 != t.rewardId, this.bagRedPoint.visible = t.getBagRedPoint() || t.getTravelRedPoint(), 
            t.leftTime > 0 && (this.time = 1e3 * t.leftTime + egret.getTimer(), TimerManager.ins().doTimer(1e3, 0, this.updateTime, this), 
            this.updateTime()), this.timeTxt.visible = t.leftTime > 0, this.expBar.maximum = i.skillEff.power.powerMax, 
            this.expBar.value = t.power, this.expBar.maximum > this.expBar.value && (this.step = 1, 
            TimerManager.ins().doTimer(1e3 * i.skillEff.power.restoreNSecond, 0, this.updateBar, this)), 
            t.rewardId && -1 != t.rewardId) {
                var o = GlobalConfig.ins().LingChongSkill5Config[t.rewardLevel][t.rewardId - 1];
                this.reward = o.rewards;
            }
        }
    }, e.prototype.updateBar = function() {
        return this.expBar.maximum <= this.expBar.value ? (TimerManager.ins().remove(this.updateBar, this), 
        void (this.expBar.value = this.expBar.maximum)) : void (this.expBar.value += this.step);
    }, e.prototype.updateTime = function() {
        var t = Math.floor((this.time - egret.getTimer()) / 1e3);
        return 0 >= t ? (this.timeTxt.visible = !1, void TimerManager.ins().remove(this.updateTime, this)) : void (this.timeTxt.text = "旅行中：" + DateUtils.getFormatBySecond(t));
    }, e.prototype.updateRedPoint = function() {
        this.powerRedPoint.visible = LingChongSkillData5.ins().getPowerRedPoint();
    }, e;
}(BaseView);

__reflect(MuChangSub4Panel.prototype, "MuChangSub4Panel");

window.MuChangSub4Panel = MuChangSub4Panel;

var MuChangSub5Panel = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.id = MuChangManager.ins().LINGCHONG_ID4, e.skillId = MuChangManager.ins().SKILL_ID10, 
        e.skinName = "MuChangSub0Skin", e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.init();
    }, e.prototype.init = function() {
        this.touchEnabled = !1, this.touchChildren = !0, this.setSkinPart("rewardItem", new ItemBase());
    }, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEvent(this.logBtn, this.onClick), this.addTouchEvent(this.feedBtn, this.onClick), 
        this.addTouchEvent(this.eggImg, this.onClick), this.addTouchEvent(this.btnClean, this.onClick), 
        this.addTouchEvent(this.checkBtn, this.onClick), this.observe(LingChong.ins().postServerData42, this.updateResult), 
        this.initState(), LingChong.ins().sendToServer40(), LingChong.ins().sendToServer46();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeEvents(), TimerManager.ins().remove(this.updateTime, this), TimerManager.ins().remove(this.updateData, this), 
        LingChongSkillData4.ins().cleanResult();
    }, e.prototype.onClick = function(t) {
        switch (t.target) {
          case this.logBtn:
            ViewManager.ins().open(MuChangLogWin, this.skillId);
            break;

          case this.feedBtn:
            LingChongSkillData4.firstTap = !0, this.updateRedPoint(), ViewManager.ins().open(MuChangFeedWin, this.skillId);
            break;

          case this.checkBtn:
            ViewManager.ins().open(MuChangRewardShowWin1, this.id, this.skillId);
            break;

          case this.eggImg:
            if (LingChongSkillData4.ins().leftTime > 0) return void UserTips.ins().showTips("未孵化");
            LingChong.ins().sendToServer42();
            break;

          case this.btnClean:
            var e = LingChongSkillData4.ins();
            if (e.leftTime > 0) if (e.isNoShow) LingChong.ins().sendToServer43(); else {
                var i = MuChangManager.ins().getLingChongSkill(this.id), n = GlobalConfig.ins().LingChongSkillConfig[this.skillId][i.level], s = Math.ceil(this.getCleanMinutes() / n.skillEff.fuhua.clearCfg.Minute);
                WarnWin.show("是否花费" + n.skillEff.fuhua.clearCfg.YB * s + "元宝加速孵化", function() {
                    LingChong.ins().sendToServer43();
                }, this, null, null, "", [], !0, "今日不再提示", function(t) {
                    e.isNoShow = t;
                }, this);
            } else UserTips.ins().showTips("当前无需加速");
        }
    }, e.prototype.getCleanMinutes = function() {
        var t = Math.floor((this.time - egret.getTimer()) / 1e3), e = Math.ceil(t / 60);
        return e;
    }, e.prototype.initState = function() {
        this.isActivity = LingChongManager.ins().getIsActivity(this.id), this.isActivity ? (this.logBtn.visible = !0, 
        this.eggImg.visible = !0, this.img0.visible = !0, this.timeCon.visible = !0, this.expBar.visible = !0, 
        this.checkBtn.visible = !0, this.timeLimitTxt.visible = !0) : (this.logBtn.visible = !1, 
        this.eggImg.visible = !1, this.img0.visible = !1, this.timeCon.visible = !1, this.expBar.visible = !1, 
        this.checkBtn.visible = !1, this.timeLimitTxt.visible = !1);
    }, e.prototype.setData = function() {
        LingChong.ins().postMuChangPanelChange(this.skillId), LingChongSkillData4.ins().cleanResult(), 
        this.rewardItem.visible = !1, TimerManager.ins().remove(this.setResult, this), this.eggImg.source = 2 == LingChongSkillData4.ins().eggType ? "lingchong_egg1_png" : "lingchong_egg0_png";
    }, e.prototype.updateResult = function() {
        var t = GlobalConfig.ins().LingChongRewardTask4Config[LingChongSkillData4.ins().resultEggLevel][LingChongSkillData4.ins().resultEggType - 1][LingChongSkillData4.ins().resultEggId - 1];
        this.rewardItem.data = t.rewards[0], this.rewardItem.visible = !0, this.eggImg.source = 2 == LingChongSkillData4.ins().resultEggType ? "lingchong_egg3_png" : "lingchong_egg2_png", 
        TimerManager.ins().doTimer(3e3, 1, this.setResult, this);
    }, e.prototype.setResult = function() {
        LingChongSkillData4.ins().cleanResult(), this.updateData(), this.rewardItem.visible = !1;
    }, e.prototype.updateData = function() {
        if (TimerManager.ins().remove(this.updateTime, this), this.eggRedPoint.visible = !1, 
        this.isActivity) {
            var t = LingChongSkillData4.ins(), e = MuChangManager.ins().getLingChongSkill(this.id), i = GlobalConfig.ins().LingChongSkillConfig[this.skillId][e.level];
            t.leftTime > 0 ? (this.fuhuaTimeTxt.textColor = 16652572, this.time = 1e3 * t.leftTime + egret.getTimer(), 
            TimerManager.ins().doTimer(1e3, 0, this.updateTime, this), this.updateTime()) : (this.fuhuaTimeTxt.text = "已孵化", 
            this.fuhuaTimeTxt.textColor = 3002413);
            var n = GlobalConfig.ins().LingChongCommonConfig.openEggTimesMax - t.openTime, s = n > 0 ? LangManager.lingchong_str8 : LangManager.lingchong_str9;
            this.timeLimitTxt.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(s, "孵化", n, GlobalConfig.ins().LingChongCommonConfig.openEggTimesMax)), 
            this.eggRedPoint.visible = t.getEggRedPoint(), this.expBar.maximum = i.skillEff.jingdan.xianQi, 
            this.expBar.value = t.xianqi, -1 == LingChongSkillData4.ins().resultEggType ? (this.eggImg.source = 2 == t.eggType ? "lingchong_egg1_png" : "lingchong_egg0_png", 
            this.rewardItem.visible = !1) : this.eggImg.source = 2 == LingChongSkillData4.ins().resultEggType ? "lingchong_egg3_png" : "lingchong_egg2_png";
        }
    }, e.prototype.updateTime = function() {
        var t = Math.floor((this.time - egret.getTimer()) / 1e3);
        return 0 >= t ? (this.fuhuaTimeTxt.text = "已孵化", this.fuhuaTimeTxt.textColor = 3002413, 
        void TimerManager.ins().remove(this.updateTime, this)) : void (this.fuhuaTimeTxt.text = DateUtils.getFormatBySecond(t));
    }, e.prototype.updateRedPoint = function() {
        this.feedRedPoint.visible = LingChongSkillData4.ins().getFeedRedPoint();
    }, e;
}(BaseView);

__reflect(MuChangSub5Panel.prototype, "MuChangSub5Panel");

window.MuChangSub5Panel = MuChangSub5Panel;

var LuckyXingPanItem2 = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "QingmingSubItemSkin2", e.setSkinPart("item", new ItemBase()), 
        e;
    }
    return __extends(e, t), e.prototype.open = function() {}, e.prototype.close = function() {}, 
    e.prototype.updateData = function(t) {
        this.item.data = t.awardList, this.isGetImg.visible = LuckXingPanData.ins().isGet(t.index), 
        this.item.setIconBg("common_grid2_png");
    }, e;
}(BaseView);

__reflect(LuckyXingPanItem2.prototype, "LuckyXingPanItem2");

window.LuckyXingPanItem2 = LuckyXingPanItem2;

var LunHuiPanel = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.ballNum = 6, e.ballList = [], e.ballAngle = [ -90, -30, 30, 90, 150, 210 ], 
        e.pt = new egret.Point(), e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.init();
    }, e.prototype.init = function() {
        this.skinName = "LunHuiPanelSkin", this.getItemBtn.labelDisplay.text = "获取业力";
        for (var t = 0; t < this.ballNum; t++) {
            this.setSkinPart("ball" + t, new LunHuiItem(t + 1)), this.ballList[t] = this["ball" + t];
            var e = this.ballList[t], i = MathUtils.getDirMove(this.ballAngle[t], e.radius);
            e.x = i.x + e.ballCenterX, e.y = i.y + e.ballCenterY, e.angle = this.ballAngle[t], 
            e.startAngle = this.ballAngle[t], e.endAngle = this.ballAngle[t] + 360;
        }
        this.power = BitmapNumber.ins().createNumPic(0, BitmapNumber.numType0), this.powerContainer.addChild(this.power), 
        this.chargeEff = new MovieClip(), this.chargeEff.scaleX = .7, this.chargeEff.scaleY = .75, 
        this.chargeEff.x = -4, this.chargeEff.y = -2, this.square = new egret.Shape(), this.square.graphics.beginFill(16711680), 
        this.square.graphics.drawRect(0, 0, 0, 0), this.square.graphics.endFill(), this.expMainCon.addChild(this.square), 
        this.topsquare = new egret.Shape(), this.topsquare.graphics.beginFill(16711680), 
        this.topsquare.graphics.drawCircle(60, 56, 55), this.topsquare.graphics.endFill(), 
        this.expMainCon.addChild(this.topsquare), this.expMc = new MovieClip(), this.expMc.x = this.expCon.width >> 1, 
        this.expMc.y = this.expCon.height >> 1, this.expMc.playFile(ResPath.getUIEffectPath(UiEffectType.Type49), -1), 
        this.expCon.addChild(this.expMc), this.expMcTop = new MovieClip(), this.expMcTop.x = this.expCon.width >> 1, 
        this.expMcTop.playFile(ResPath.getUIEffectPath(UiEffectType.Type50), -1), this.expMainCon.addChild(this.expMcTop), 
        this.expCon.mask = this.square, this.expMcTop.mask = this.topsquare, this.successMC = new MovieClip(), 
        this.successMC.x = this.width / 2, this.successMC.y = this.height / 2 - 30, this.addChild(this.successMC);
    }, e.prototype.addAnimation = function() {
        var t = this;
        this.removeAnimation();
        for (var e = function(e) {
            var n = i.ballList[e];
            egret.Tween.get(n, {
                onChange: i.updatePos,
                onChangeObj: {
                    item: n
                }
            }).to({
                angle: n.endAngle
            }, 15e3).call(function() {
                e == t.ballNum - 1 && t.addAnimation();
            }, i);
        }, i = this, n = 0; n < this.ballNum; n++) e(n);
        var s = egret.Tween.get(this.fazhenImg);
        s.to({
            rotation: -360
        }, 1e4);
    }, e.prototype.updatePos = function() {
        var t = this.item, e = t.angle, i = MathUtils.getDirMove(e, t.radius);
        t.x = i.x + t.ballCenterX, t.y = i.y + t.ballCenterY;
    }, e.prototype.removeAnimation = function() {
        for (var t = 0; t < this.ballNum; t++) egret.Tween.removeTweens(this.ballList[t]), 
        this.ballList[t].angle = this.ballList[t].startAngle;
        this.fazhenImg.rotation = 0;
    }, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        MapView.specialRender = !0, this.addTouchEvent(this.lunhuiBtn, this.onClick), this.addTouchEvent(this.getItemBtn, this.onClick), 
        this.addTouchEvent(this.giftBtn, this.onClick), this.observe(LunHui.ins().postBaseInfo, this.updataInfo), 
        this.observe(LunHui.ins().postRedPoint, this.updateCost), this.observe(LunHui.ins().postFirstListData, this.updateRedPoint), 
        this.observe(LunHui.ins().postServerData5, this.updateBuyBtn), this.observe(LunHui.ins().postUpSuccess, this.updateEff), 
        this.updataInfo(), this.addAnimation(), this.updateBuyBtn(), LunHui.ins().sendServerData5();
    }, e.prototype.updateEff = function() {
        this.successMC.playFile(ResPath.getUIEffectPath(UiEffectType.Type3), 1, null, !1, !0);
    }, e.prototype.updateBuyBtn = function() {
        this.giftCon.visible = LunHuiGiftData.ins().isOpen;
    }, e.prototype.updateRedPoint = function() {
        LunHuiData.ins().getListRedPoint() ? (this.chargeEff.playFile(ResPath.getUIEffectPath(UiEffectType.Type12), -1), 
        this.getItemBtn.addChild(this.chargeEff)) : this.chargeEff.parent && (this.chargeEff.stop(), 
        DisplayUtils.removeFromParent(this.chargeEff));
    }, e.prototype.onClick = function(t) {
        switch (t.currentTarget) {
          case this.lunhuiBtn:
            LunHui.ins().sendServerData4();
            break;

          case this.getItemBtn:
            ViewManager.ins().open(LunHuiGetCostWin);
            break;

          case this.giftBtn:
            ViewManager.ins().open(LunHuiGiftWin);
        }
    }, e.prototype.updataInfo = function() {
        this.updateAttr(), this.updateRedPoint();
        for (var t = 0; t < this.ballList.length; t++) this.ballList[t].updateData();
    }, e.prototype.updateAttr = function() {
        this.costItemId = 0;
        var t = LunHuiData.ins(), e = LunHuiLevelConfig.getCurConfig(t.level, t.stage, t.star);
        if (this.nameImg.source = "lunhui_name" + t.level, this.chongImg.source = "lunhui_chong" + t.stage, 
        e.num > 0) {
            this.lunhuiBtn.label = "升 阶", this.costCon.visible = !0, this.costItemId = e.itemid, 
            this.costItemNum = e.num;
            var i = GlobalConfig.ins().ItemConfig(this.costItemId);
            this.costItemImg.source = ResPath.getItemIconPath(i.icon);
        } else this.lunhuiBtn.label = "轮 回", this.costCon.visible = !1;
        this.costExpTxt.text = e.cost + "", this.curExpTxt.text = t.curExp + "", t.curExp >= e.cost ? this.curExpTxt.textColor = 3473189 : this.curExpTxt.textColor = 16711680, 
        0 == this.costItemId && t.curExp >= e.cost ? this.addEff() : this.removeEff();
        var n = this.expCon.height, s = t.curExp / e.cost;
        s = s > 1 ? 1 : s;
        var a = s * n, o = n - a;
        this.square.graphics.clear(), this.square.graphics.beginFill(16711680), this.square.graphics.drawRect(0, o, 120, a), 
        this.square.graphics.endFill(), this.expMcTop.y = o + 3, this.curLvAttr.text = AttributeData.getAttStr(e.attrs, 0, 1, "：");
        var r = LunHuiLevelConfig.getNextConfig(t.level, t.stage, t.star);
        r ? (this.currentState = "com", this.nextLvAttr.text = AttributeData.getAttStr(r.attrs, 0, 1, "：")) : (this.currentState = "max", 
        this.costCon.visible = !1);
        var h = UserBag.getAttrPower(e.attrs);
        BitmapNumber.ins().changeNum(this.power, h, BitmapNumber.numType0), this.updateCost();
    }, e.prototype.updateCost = function() {
        if (0 != this.costItemId) {
            var t = UserBag.ins().getBagGoodsCountById(0, this.costItemId), e = t >= this.costItemNum ? LangManager.commonStr38 : LangManager.commonStr37;
            this.costTxt.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(e, t, this.costItemNum)), 
            t >= this.costItemNum ? this.addEff() : this.removeEff();
        }
        this.updateRedPoint();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        MapView.specialRender = !1, this.removeEvents(), this.removeObserve();
        for (var i = 0; i < this.ballList.length; i++) this.ballList[i].close();
        this.removeAnimation(), this.removeEff();
    }, e.prototype.addEff = function() {
        this.eff || (this.eff = new MovieClip(), this.lunhuiBtn.addChild(this.eff), this.eff.x = this.lunhuiBtn.width >> 1, 
        this.eff.y = this.lunhuiBtn.height >> 1, this.eff.scaleX = .8), this.eff.playFile(ResPath.getUIEffectPath(UiEffectType.Type19), -1), 
        this.lunhuiBtn.icon = "common_tab_down0_png";
    }, e.prototype.removeEff = function() {
        this.eff && (this.eff.stop(), DisplayUtils.removeFromParent(this.eff), this.eff = null), 
        this.lunhuiBtn.icon = "common_tab_up0_png";
    }, e.nameList = [ "", "地狱道", "饿鬼道", "畜生道", "阿修罗道", "人道", "天道" ], e;
}(BaseView);

__reflect(LunHuiPanel.prototype, "LunHuiPanel");

window.LunHuiPanel = LunHuiPanel;

var LunHuiItem = function(t) {
    function e(e) {
        var i = t.call(this) || this;
        return i.radius = 150, i.ballCenterX = -41, i.ballCenterY = -41, i.skinName = "LunHuiItemSkin", 
        i.mc = new MovieClip(), i.mc.x = i.width >> 1, i.mc.y = i.height >> 1, i.index = e, 
        i.ballImg.source = "lunhui_ball" + i.index, i;
    }
    return __extends(e, t), e.prototype.updateData = function() {
        var t = LunHuiData.ins();
        t.star >= this.index ? this.addEff() : this.removeEff();
    }, e.prototype.close = function() {
        this.removeEff();
    }, e.prototype.addEff = function() {
        this.mc.playFile(ResPath.getUIEffectPath(UiEffectType.Type27), -1), this.addChild(this.mc);
    }, e.prototype.removeEff = function() {
        this.mc.stop(), DisplayUtils.removeFromParent(this.mc);
    }, e;
}(BaseView);

__reflect(LunHuiItem.prototype, "LunHuiItem");

window.LunHuiItem = LunHuiItem;

var LunhuiZhibaoHechengItem1 = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "LunhuiZhibaoHechengItemSkin1", e.setSkinPart("item", new ItemBase()), 
        e.item.isShowName(!1), e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.init();
    }, e.prototype.init = function() {}, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEvent(this.hechengBtn, this.onClick);
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeEvents(), this.removeObserve();
    }, e.prototype.updateData = function(t) {
        if (this.nextConfig = LunHuiEquip.ins().getHechengTargetItem(t.id, t.lv), this.curData = t, 
        this.nextConfig) {
            this.currentState = "com", this.item.data = this.nextConfig.itemId;
            var e = GlobalConfig.ins().ItemConfig(this.nextConfig.itemId);
            this.nameTxt.text = e.name, this.nameTxt.textColor = ItemBase.QUALITY_COLOR[e.quality], 
            this.attrTxt.textFlow = TextFlowMaker.generateTextFlow(AttributeData.getAttStr1(this.nextConfig.attrs, AttributeFormat.FORMAT_4()));
        } else this.currentState = "max";
    }, e.prototype.onClick = function(t) {
        var e = 0, i = LunHuiEquip.ins().zhibaoEquipList[this.curData.id - 1];
        i && i.lv == this.curData.lv && e++;
        var n = GlobalConfig.ins().LHZBLevelConfig[this.curData.id][this.curData.lv - 1], s = UserBag.ins().getBagGoodsCountById(0, n.itemId);
        s > 0 && (e += s), e >>= 1;
        for (var a = 0; e > a; a++) LunHuiEquip.ins().sendServerData10(this.curData.id, this.curData.lv);
    }, e;
}(BaseView);

__reflect(LunhuiZhibaoHechengItem1.prototype, "LunhuiZhibaoHechengItem1");

window.LunhuiZhibaoHechengItem1 = LunhuiZhibaoHechengItem1;

var LunhuiZhibaoHechengItem2 = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "LunhuiZhibaoHechengItemSkin2", e.setSkinPart("item", new ItemBase()), 
        e.item.isShowName(!1), e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.init();
    }, e.prototype.init = function() {}, e.prototype.updateData = function(t) {
        var e = GlobalConfig.ins().LHZBLevelConfig[t.id][t.lv - 1];
        this.item.data = e.itemId;
        var i = GlobalConfig.ins().ItemConfig(e.itemId);
        this.nameTxt.text = i.name, this.nameTxt.textColor = ItemBase.QUALITY_COLOR[i.quality], 
        this.attrTxt.textFlow = TextFlowMaker.generateTextFlow(AttributeData.getAttStr1(e.attrs, AttributeFormat.FORMAT_4()));
    }, e;
}(BaseView);

__reflect(LunhuiZhibaoHechengItem2.prototype, "LunhuiZhibaoHechengItem2");

window.LunhuiZhibaoHechengItem2 = LunhuiZhibaoHechengItem2;

var LunhuiZhibaoItem = function(t) {
    function e(e) {
        var i = t.call(this) || this;
        return i.skinName = "LunhuiZhibaoItemSkin", i.setSkinPart("item", new ItemBase()), 
        i.item.isShowName(!1), i.index = e, i.item.touchEnabled = !1, i.item.touchChildren = !1, 
        i;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.init();
    }, e.prototype.init = function() {}, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEvent(this, this.onClick);
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeEvents(), this.removeObserve();
    }, e.prototype.updateData = function() {
        var t, e = LunHuiEquip.ins().zhibaoEquipList[this.index - 1];
        if (e.lv > 0) {
            t = GlobalConfig.ins().LHZBLevelConfig[e.id][e.lv - 1];
            var i = GlobalConfig.ins().ItemConfig(t.itemId);
            this.item.data = t.itemId, this.nameTxt.text = i.name;
        } else t = GlobalConfig.ins().LHZBLevelConfig[e.id][0], this.item.data = t.itemId, 
        this.nameTxt.text = "未激活";
    }, e.prototype.updateRedpoint = function() {
        this.redPoint.visible = LunHuiEquip.ins().getPartCanHecheng(this.index);
    }, e.prototype.onClick = function(t) {
        var e = LunHuiEquip.ins().zhibaoEquipList[this.index - 1];
        if (e.lv <= 0) return void UserTips.ins().showTips("未激活");
        var i = LunHuiEquip.ins().getHechengList(this.index);
        i.length > 0 ? ViewManager.ins().open(LunhuiZhibaoHechengWin, this.index) : UserTips.ins().showTips("没有可以合成的装备");
    }, e;
}(BaseView);

__reflect(LunhuiZhibaoItem.prototype, "LunhuiZhibaoItem");

window.LunhuiZhibaoItem = LunhuiZhibaoItem;

var LunhuiZhibaoView = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.partList = [], e.lineList = [], e.skinName = "LunhuiZhibaoSkin", e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.init();
    }, e.prototype.init = function() {
        this.mc = new MovieClip(), this.wearBtn.addChild(this.mc), this.mc.x = this.wearBtn.width >> 1, 
        this.mc.y = this.wearBtn.height >> 1, this.mc.playFile(ResPath.getUIEffectPath(UiEffectType.Type19), -1), 
        this.suitMc = new MovieClip(), this.suitBtn.addChild(this.suitMc), this.suitMc.playFile(ResPath.getUIEffectPath(UiEffectType.Type54), -1), 
        this.totalPower = BitmapNumber.ins().createNumPic(0, BitmapNumber.numType0, 10), 
        this.powerContainer.addChild(this.totalPower);
        for (var t = 0; 4 > t; t++) this.setSkinPart("part" + t, new LunhuiZhibaoItem(t + 1)), 
        this.partList.push(this["part" + t]), this.lineList.push(this["line" + t]);
    }, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        for (var i = 0; i < this.partList.length; i++) this.partList[i].open();
        this.addTouchEvent(this.suitBtn, this.onClick), this.addTouchEvent(this.wearBtn, this.onClick), 
        this.observe(LunHuiEquip.ins().postServerData8, this.updateData), this.observe(LunHuiEquip.ins().postBagNum, this.updateBag), 
        this.updateData();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeEvents(), this.removeObserve();
        for (var i = 0; i < this.partList.length; i++) this.partList[i].close();
    }, e.prototype.updateData = function() {
        for (var t = 0; t < this.partList.length; t++) this.partList[t].updateData();
        var e = LunHuiEquip.ins().getZhibaoTotalAttr();
        this.attrTxt.textFlow = TextFlowMaker.generateTextFlow(AttributeData.getAttStr1(e, AttributeFormat.FORMAT_4())), 
        this.attrTitleTxt.visible = "" != this.attrTxt.text;
        var i = UserBag.getAttrPower(e);
        BitmapNumber.ins().changeNum(this.totalPower, i, BitmapNumber.numType0, 2), this.updateBag();
        var n = LunHuiEquip.ins().getCurSuitLevel(), s = LunHuiEquip.ins().maxSuitLevel();
        0 >= n && (n = 1);
        var a = LunHuiEquip.ins().getLevelSuitNum(n);
        n = 4 == a ? n + 1 : n, n = s > n ? n : s;
        for (var t = 0; t < LunHuiEquip.ins().zhibaoEquipList.length; t++) {
            var o = LunHuiEquip.ins().zhibaoEquipList[t];
            this.lineList[t].filters = o.lv >= n ? null : [ ColorUtil.colorMat ];
        }
    }, e.prototype.updateBag = function() {
        this.wearBtn.visible = LunHuiEquip.ins().getCanChangeAllEquip().length > 0;
        for (var t = 0; t < this.partList.length; t++) this.partList[t].updateRedpoint();
    }, e.prototype.onClick = function(t) {
        switch (t.currentTarget) {
          case this.suitBtn:
            ViewManager.ins().open(LunhuiZhibaoSuitWin);
            break;

          case this.wearBtn:
            for (var e = LunHuiEquip.ins().getCanChangeAllEquip(), i = 0; i < e.length; i++) LunHuiEquip.ins().sendServerData9(e[i].idxEqp, e[i].idxLv);
        }
    }, e;
}(BaseView);

__reflect(LunhuiZhibaoView.prototype, "LunhuiZhibaoView");

window.LunhuiZhibaoView = LunhuiZhibaoView;

var LunHuiEquipPanel = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.index = 1, e.skillIndex = [ 1, 3 ], e.skinName = "LunHuiEquipPanelSkin", 
        e.name = "魔装", e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.init();
    }, e.prototype.init = function() {
        this.mc = new MovieClip(), this.mcCon.addChild(this.mc), this.star = new StarList(5, 0, 3), 
        this.starCon.addChild(this.star), this.list.dataProvider = new eui.ArrayCollection(), 
        this.list.itemRenderer = LunHuiEquipItemWin, this.totalPower || (this.totalPower = BitmapNumber.ins().createNumPic(0, BitmapNumber.numType0, 10), 
        this.powerContainer.addChild(this.totalPower));
    }, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEndEvent(this.activateBtn, this.onClick), this.addTouchEndEvent(this.upBtn, this.onClick), 
        this.addTouchEndEvent(this.wayBtn, this.onClick), this.addTouchEndEvent(this.skillBtn, this.onClick), 
        this.addTouchEndEvent(this.fumoBtn, this.onClick), this.addChangeEvent(this.list, this.setSelectIndex), 
        this.observe(LunHuiEquip.ins().postHunLuiEquipinfo, this.setData), this.observe(LunHuiEquip.ins().postFuMoData, this.getFumoRedPoint), 
        LunHuiEquip.ins().sendEquipLv();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeEvents(), this.removeObserve();
    }, e.prototype.setSelectIndex = function() {
        this.index = this.list.selectedIndex + 1, this.setData();
    }, e.prototype.setData = function() {
        var t = LunHuiEquipData.ins();
        0 != t.LHequipData.length && (this.list.dataProvider = new eui.ArrayCollection(t.LHequipData), 
        this.list.selectedIndex = this.index > 0 ? this.index - 1 : 0, this.LHequipData = t.LHequipData[this.index - 1], 
        this.lv = this.LHequipData.lv, this.mc.playFile(ResPath.getLunhuiEquipPath(this.index), -1), 
        this.mc.filters = this.lv > 0 ? [] : [ ColorUtil.colorMat ], this.setStarData(this.LHequipData), 
        this.updateCost(this.LHequipData), this.setSkillName(this.LHequipData), this.setPoewr());
    }, e.prototype.setStarData = function(t) {
        this.isIndex != this.index ? (this.isIndex = this.index, this.star.isPlayStar(!0)) : this.star.isPlayStar(!1), 
        this.star.starNum = t.star;
    }, e.prototype.updateCost = function(t) {
        var e = t.lv, i = (t.jie, t.star), n = GlobalConfig.ins().LHMZCommonConfig.levelStep, s = "升星要求：" + LHMZAttrConfig.getNextLvStrig(this.index, e);
        this.upTxt.textFlow = TextFlowMaker.generateTextFlow(s), this.starCon.visible = !0, 
        this.upCon.visible = !0, this.upTxt.visible = !0, this.upBtn.visible = !0, this.wayBtn.visible = !0;
        var a = [];
        if (0 == e) {
            this.activeCon.visible = !0, this.upCon.visible = !1, this.maxTxt.visible = !1, 
            this.jiantouImg.visible = !1, this.rightAttrTxt.visible = !1, this.leftAttrTxt.x = 196, 
            this.upBtn.label = "激 活";
            var o = GlobalConfig.ins().LHMZAttrConfig[this.index][0];
            a = a.concat(o.attrs), a = a.concat(o.attrsCst), a = AttributeData.mergeAttr(a), 
            this.leftAttrTxt.textFlow = TextFlowMaker.generateTextFlow(AttributeData.getAttStr1(a, AttributeFormat.FORMAT_4(15653301)));
            var r = GlobalConfig.ins().LHMZAttrConfig[this.index][0].items[0], h = UserBag.ins().getBagGoodsCountById(UserBag.BAG_TYPE_OTHTER, r.id);
            this.numTxt.textFlow = TextFlowMaker.generateTextFlow(this.getCountStr(h, r.count)), 
            this.activeImg.source = this.getIdIcon(r.id), this.redPoint.visible = LunHuiEquipData.ins().getRedPointEquip(o);
        } else {
            this.activeCon.visible = !1, this.upCon.visible = !0, this.upBtn.label = i == n ? "升 阶" : "升 星";
            var o = GlobalConfig.ins().LHMZAttrConfig[this.index][e - 1], l = GlobalConfig.ins().LHMZAttrConfig[this.index][e];
            if (o && (a = a.concat(o.attrs), a = a.concat(o.attrsCst), a = AttributeData.mergeAttr(a), 
            this.leftAttrTxt.textFlow = TextFlowMaker.generateTextFlow(AttributeData.getAttStr1(a, AttributeFormat.FORMAT_4()))), 
            l) {
                if (this.maxTxt.visible = !1, this.jiantouImg.visible = !0, this.rightAttrTxt.visible = !0, 
                this.leftAttrTxt.x = 100, a = [], a = a.concat(l.attrs), a = a.concat(l.attrsCst), 
                a = AttributeData.mergeAttr(a), this.rightAttrTxt.textFlow = TextFlowMaker.generateTextFlow(this.getAttStr1(a, AttributeFormat.FORMAT_4(65280, 14668213, 0))), 
                1 == l.items.length) this.itemCon1.visible = !0, this.itemCon2.visible = !1, this.upCon.x = 180; else if (2 == l.items.length) {
                    this.itemCon1.visible = this.itemCon2.visible = !0, this.upCon.x = 116;
                    var u = UserBag.ins().getBagGoodsCountById(UserBag.BAG_TYPE_OTHTER, l.items[1].id);
                    this.countTxt2.textFlow = TextFlowMaker.generateTextFlow(this.getCountStr(u, l.items[1].count)), 
                    this.upImg2.source = this.getIdIcon(l.items[1].id);
                }
                var p = UserBag.ins().getBagGoodsCountById(UserBag.BAG_TYPE_OTHTER, l.items[0].id);
                this.countTxt1.textFlow = TextFlowMaker.generateTextFlow(this.getCountStr(p, l.items[0].count)), 
                this.upImg1.source = this.getIdIcon(l.items[0].id), this.redPoint.visible = LunHuiEquipData.ins().getRedPointEquip(l);
            } else this.maxTxt.visible = !0, this.jiantouImg.visible = !1, this.rightAttrTxt.visible = !1, 
            this.leftAttrTxt.x = 196, this.starCon.visible = !1, this.upCon.visible = !1, this.redPoint.visible = !1, 
            this.upTxt.visible = !1, this.upBtn.visible = !1, this.wayBtn.visible = !1;
        }
        this.getFumoRedPoint();
    }, e.prototype.getFumoRedPoint = function() {
        this.fumoRedPoint.visible = LunHuiEquipData.ins().getFuMoRedPoint();
    }, e.prototype.setSkillName = function(t) {
        var e = this.skillIndex.indexOf(this.index);
        this.skillTxt.text = 1 == this.index ? "神圣狂暴" : "神圣庇佑", -1 != e ? (this.skillCon.visible = !0, 
        this.skillBtn.enabled = !0, t.lv > 0 ? this.skillBtn.icon = "lunhuiequip_skill" + this.index : this.skillBtn.icon = "lunhuiequip_huiskill" + this.index) : (this.skillCon.visible = !1, 
        this.skillBtn.enabled = !1);
        var i = t.jie > 0 ? t.jie : 1;
        this.nameImg1.source = "lunhuiequip_name" + i, this.nameImg2.source = "lunhui_equip_name" + this.index;
    }, e.prototype.setPoewr = function() {
        BitmapNumber.ins().changeNum(this.totalPower, LunHuiEquipData.ins().getPower(), BitmapNumber.numType0, 2);
    }, e.prototype.getCountStr = function(t, e) {
        var i = "";
        return t >= e ? (i = "|C:0x00ff00&T:" + t + "|/" + e + "|", this.isExpUp = !0) : (i = "|C:0xff0000&T:" + t + "|/" + e + "|", 
        this.isExpUp = !1), i;
    }, e.prototype.getAttStr1 = function(t, e) {
        for (var i = "", n = 0; n < t.length; n++) i += this.getAttStrByType3(t[n], e, ""), 
        n < t.length - 1 && (i += StringUtils.repeatStr("\n", e.emptyLine + 1));
        return i;
    }, e.prototype.getAttStrByType3 = function(t, e, i) {
        void 0 === i && (i = "");
        var n = i, s = (t.type, e.sign, AttributeData.getAttrValueByType(t.type, t.value)), a = StringUtils.addColor(n, 15653301);
        e.isShowAttName && (a = StringUtils.complementByChar(a, e.intervals));
        var o = a + StringUtils.addColor(e.sign + s, e.attrColor);
        return o;
    }, e.prototype.onClick = function(t) {
        switch (t.target) {
          case this.activateBtn:
            ViewManager.ins().open(LHTaoZhuangWin);
            break;

          case this.upBtn:
            LunHuiEquip.ins().sendUpStart(this.index);
            break;

          case this.skillBtn:
            ViewManager.ins().open(LunHuiEquipSkillWin, this.index, this.lv);
            break;

          case this.wayBtn:
            var e = this.lv > 0 ? this.lv : 0, i = GlobalConfig.ins().LHMZAttrConfig[this.index][e];
            if (i) {
                for (var n = i.items, s = void 0, a = 0; a < n.length; a++) {
                    var o = UserBag.ins().getBagGoodsCountById(UserBag.BAG_TYPE_OTHTER, n[a].id);
                    if (o < n[a].count) {
                        s = n[a].id;
                        break;
                    }
                    s = n[0].id;
                }
                UserWarn.ins().setBuyGoodsWarn(s);
            }
            break;

          case this.fumoBtn:
            ViewManager.ins().open(LunHuiFuMoWin);
        }
    }, e.prototype.getIdIcon = function(t) {
        var e = "", i = GlobalConfig.ins().ItemConfig(t);
        return i && (e = ResPath.getItemIconPath(i.icon)), e;
    }, e;
}(BaseView);

__reflect(LunHuiEquipPanel.prototype, "LunHuiEquipPanel");

window.LunHuiEquipPanel = LunHuiEquipPanel;

var LunHuiStarItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "StarItem6Skin", e;
    }
    return __extends(e, t), e.prototype.isShow = function(t) {
        this.currentState = t ? "2" : "1";
    }, e.prototype.plauEff = function() {
        var t = this;
        this.mc || (this.mc = new MovieClip(), this.mc.x = this.width >> 1, this.mc.y = this.height >> 1), 
        this.mc.playFile(ResPath.getUIEffectPath(UiEffectType.Type40), 1), this.addChild(this.mc), 
        this.starImg && (this.starImg.visible = !1, TimerManager.ins().doTimer(1200, 1, function() {
            t.starImg.visible = !0;
        }, this));
    }, e.prototype.clearEff = function() {
        this.mc && (this.mc.stop(), DisplayUtils.removeFromParent(this.mc));
    }, e;
}(BaseView);

__reflect(LunHuiStarItem.prototype, "LunHuiStarItem");

window.LunHuiStarItem = LunHuiStarItem;

var MayDaySubPanel0 = function(t) {
    function e() {
        var e = t.call(this) || this;
        e.skinName = "MayDaySubSkin0", e.list.itemRenderer = ItemBase;
        for (var i = NewYearActivityData0.ins().getLen(), n = 0; n < i.length; n++) e.setSkinPart("day" + i[n].day, new MayDaySubItem0()), 
        e["day" + i[n].day].data = i[n];
        return e;
    }
    return __extends(e, t), e.prototype.initUI = function() {}, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEndEvent(this.btnGet, this.onBtnClick), this.addTouchEndEvent(this.day1, this.onItemTouch), 
        this.addTouchEndEvent(this.day2, this.onItemTouch), this.addTouchEndEvent(this.day3, this.onItemTouch), 
        this.addTouchEndEvent(this.day4, this.onItemTouch), this.addTouchEndEvent(this.day5, this.onItemTouch), 
        this.addTouchEndEvent(this.day6, this.onItemTouch), this.addTouchEndEvent(this.day7, this.onItemTouch), 
        this.observe(NewyearActivity.ins().postDataInfo, this.updateData), this.updateData();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeEvents(), this.removeObserve(), this.selectItem = null;
    }, e.prototype.updateData = function() {
        var t = NewYearActivityData0.ins();
        this.loginDayTxt.text = "登陆天数：" + t.day, this.selectIndex = this.getNextIndex(), 
        this.selectDay();
        var e = DateUtils.formatMiniDateTime(t.eTime) - GameServer.serverTime;
        this.totalTime = e + egret.getTimer(), this.updateTime();
    }, e.prototype.onItemTouch = function(t) {
        t.target.parent instanceof MayDaySubItem0 && (this.selectIndex = t.target.parent.day), 
        null != this.selectItem && (this.selectItem.selected = !1), this.selectDay();
    }, e.prototype.upDayItem = function() {
        var t = NewYearActivityData0.ins();
        if (t.day) {
            var e = t.getLen();
            if (e[0]) for (var i = 0; i < e.length; i++) this["day" + e[i].day].redPoint.visible = t.day >= e[i].day && 0 == (t.flag >> e[i].day & 1), 
            this["day" + e[i].day].imgGet.visible = 1 == (t.flag >> e[i].day & 1), this["day" + e[i].day].selected = this.selectIndex == this["day" + e[i].day].day;
        }
    }, e.prototype.selectDay = function() {
        this.upDayItem();
        var t = this.selectIndex, e = NewYearActivityData0.ins();
        if (e.day) {
            var i = e.getLen()[t - 1];
            i && (this.list.dataProvider = new eui.ArrayCollection(i.rewards), this.btnGet.visible = !e.getFlag(t), 
            this.imgGet.visible = !this.btnGet.visible, t > e.day ? (this.btnGet.icon = "rebatehall_title2", 
            this.btnGet.enabled = !1, this.btnGet.filters = [ ColorUtil.colorMat ]) : (this.btnGet.icon = "rebatehall_title1", 
            this.btnGet.enabled = !0, this.btnGet.filters = null));
        }
    }, e.prototype.getNextIndex = function() {
        for (var t, e = NewYearActivityData0.ins(), i = e.getLen(), n = 0; n < i.length; n++) {
            t = i[n];
            var s = e.day >= t.day && 0 == (e.flag >> t.day & 1);
            if (s) return t.day;
        }
        var a = i[i.length - 1].day;
        return e.day > a ? a : e.day;
    }, e.prototype.onBtnClick = function(t) {
        if (t.target == this.btnGet) {
            var e = this.selectIndex;
            NewyearActivity.ins().sendGetDayReward(e);
        }
    }, e.prototype.updateTime = function() {
        var t = NewYearActivityData0.ins();
        this.timeTxt.text = CountdownHelp.countdown1(t.sTime, t.eTime, this.totalTime);
    }, e;
}(BaseView);

__reflect(MayDaySubPanel0.prototype, "MayDaySubPanel0");

window.MayDaySubPanel0 = MayDaySubPanel0;

var MayDaySubPanel1 = function(t) {
    function e() {
        var e = t.call(this) || this;
        e.skinName = "MayDaySubSkin1", e.iconList.itemRenderer = MayDaySubItem1, e.list.itemRenderer = ItemBase;
        var i = [];
        for (var n in GlobalConfig.ins().WuyiSaleGiftConfig) i.push(GlobalConfig.ins().WuyiSaleGiftConfig[n]);
        return e.iconList.dataProvider = new eui.ArrayCollection(i), e.mc0 = new MovieClip(), 
        e.mc0.x = 168, e.mc0.y = 125, e.mc1 = new MovieClip(), e.mc1.x = 132, e.mc1.y = 175, 
        e.mc2 = new MovieClip(), e.mc2.x = 190, e.mc2.y = 185, e.artifactMc = new MovieClip(), 
        e.artifactMc.x = 152, e.artifactMc.y = 138, e.artifactMc.scaleX = .8, e.artifactMc.scaleY = .8, 
        e.costNum = BitmapNumber.ins().createNumPic(0, "num21"), e.addChild(e.costNum), 
        e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEndEvent(this.btnBuy, this.onBtnClick), this.iconList.addEventListener(eui.ItemTapEvent.ITEM_TAP, this.selectIcon, this), 
        this.observe(Recharge.ins().postMayDayTehuiData, this.updateData), this.updateData();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeTouchEvent(this.btnBuy, this.onBtnClick), this.iconList.removeEventListener(eui.ItemTapEvent.ITEM_TAP, this.selectIcon, this), 
        this.removeObserve();
    }, e.prototype.selectIcon = function(t) {
        this.setSelectIndex(this.iconList.selectedIndex);
    }, e.prototype.setSelectIndex = function(t) {
        var e = GlobalConfig.ins().WuyiSaleGiftConfig[t + 1];
        switch (this.list.dataProvider = new eui.ArrayCollection(e.awardList), BitmapNumber.ins().changeNum(this.costNum, e.pay, "num21", 4), 
        this.costNum.x = this.img0.x + this.img0.width + 1, this.costNum.y = this.img0.y - 1, 
        this.img1.x = this.costNum.x + this.costNum.width - 4, this.img2.x = this.img1.x + this.img1.width - 3, 
        this.img3.x = this.img2.x + this.img2.width - 3, this.img3.source = "mayday_smallname" + e.index, 
        this.imgShow.visible = 1 == e.index || 4 == e.index, this.isShowMC.visible = 2 == e.index || 3 == e.index, 
        e.index) {
          case 2:
            DisplayUtils.removeFromParent(this.artifactMc);
            for (var i = 0; 3 > i; i++) {
                var n = this["mc" + i];
                this.isShowMC.addChildAt(n, i);
            }
            this.mc0.playFile(ResPath.getAnimaPath(1, 2), -1), this.mc1.playFile(ResPath.getAnimaPath(1, 3), -1), 
            this.mc2.playFile(ResPath.getAnimaPath(1, 4), -1);
            break;

          case 3:
            DisplayUtils.removeFromParent(this.mc0), DisplayUtils.removeFromParent(this.mc1), 
            DisplayUtils.removeFromParent(this.mc2), this.isShowMC.addChildAt(this.artifactMc, 0), 
            this.artifactMc.playFile(ResPath.getNewShenqiPath(201), -1);
            break;

          default:
            DisplayUtils.removeFromParent(this.mc0), DisplayUtils.removeFromParent(this.mc1), 
            DisplayUtils.removeFromParent(this.mc2), DisplayUtils.removeFromParent(this.artifactMc), 
            this.imgShow.source = "mayday_show" + e.index + "_png";
        }
        this.isBuyImg.visible = this.isBuyImg.visible = MayDayData1.ins().getIsBuy(e.index), 
        this.btnBuy.filters = this.isBuyImg.visible ? [ ColorUtil.colorMat ] : null;
    }, e.prototype.updateData = function() {
        this.iconList.selectedIndex = MayDayData1.ins().getNextTabIndex();
        var t = this.iconList.selectedIndex;
        this.iconList.dataProvider.refresh(), this.iconList.selectedIndex = t, this.setSelectIndex(this.iconList.selectedIndex), 
        this.updateTime();
    }, e.prototype.onBtnClick = function(t) {
        Recharge.ins().sendBuyMayDayTehui(this.iconList.selectedIndex + 1);
    }, e.prototype.updateTime = function() {
        var t = MayDayData1.ins(), e = GameServer.serverTime, i = DateUtils.formatMiniDateTime(t.eTime), n = i - e;
        this.totalTime = n + egret.getTimer(), this.timeTxt.text = CountdownHelp.countdown1(t.sTime, t.eTime, this.totalTime);
    }, e;
}(BaseView);

__reflect(MayDaySubPanel1.prototype, "MayDaySubPanel1");

window.MayDaySubPanel1 = MayDaySubPanel1;

var MergeSubItem5Egg = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "EggBoxSkin", e.setSkinPart("item", new ItemBase()), e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {}, e.prototype.open = function() {
        this.addTouchEvent(this.eggImg, this.onClick);
    }, e.prototype.close = function() {
        this.removeEvents();
    }, e.prototype.updateData = function(t) {
        this.index = t.index;
        var e = GlobalConfig.ins().CrazyDropEggRewardEggHeFu[t.rewardIndex];
        this.eggImg.source = 0 == t.state ? "egg_bg1_png" : "egg_bg2_png", e && (this.item.data = e.reward[0]), 
        this.item.visible = 1 == t.state;
    }, e.prototype.onClick = function(t) {
        Egg.ins().sendHefuOpenEgg([ this.index ]);
    }, e;
}(BaseView);

__reflect(MergeSubItem5Egg.prototype, "MergeSubItem5Egg");

window.MergeSubItem5Egg = MergeSubItem5Egg;

var MergeSubPanel0 = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "MergeSubSkin0", e.list.dataProvider = null, e.list.itemRenderer = MergeSubItem0, 
        e.timeTipsTxt.text = "(每天0点将刷新活动内容)", e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.observe(MergeActivity.ins().postHefuJinjieriData, this.updateData), this.addTouchEndEvent(this.btnUpgrade, this.onBtnClick), 
        this.addTouchEvent(this.list, this.onBtnClick), MergeActivity.ins().sendHefuJinjieriInfo1();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeTouchEvent(this.btnUpgrade, this.onBtnClick), this.removeTouchEvent(this.list, this.onBtnClick), 
        this.removeObserve();
    }, e.prototype.updateData = function() {
        var t = MergeData0.ins();
        if (-1 != t.id) {
            t.list.sort(this.sortData), this.list.dataProvider = new eui.ArrayCollection(t.list), 
            this.curTxt.text = MergeData0.ins().useNum + "", this.desc.text = LangManager.getLang(LangManager.mergeactivity_str0, OpenServerConst.TYPE_NAME[MergeData0.ins().id]);
            var e = DateUtils.formatMiniDateTime(t.eTime) - GameServer.serverTime;
            this.totalTime = e + egret.getTimer(), this.updateTime();
        }
    }, e.prototype.sortData = function(t, e) {
        return t.flag > e.flag ? 1 : t.flag < e.flag ? -1 : t.subId < e.subId ? -1 : t.subId > e.subId ? 1 : 0;
    }, e.prototype.onBtnClick = function(t) {
        t.target instanceof eui.Button && (t.target.parent instanceof MergeSubItem0 ? MergeActivity.ins().sendGetHefuJinjieriReward(t.target.parent.id, t.target.parent.subId) : t.target == this.btnUpgrade && ViewManager.ins().open(OpenServerConst.WIN_NAME[MergeData0.ins().id]));
    }, e.prototype.updateTime = function() {
        var t = MergeData0.ins();
        this.timeTxt.text = CountdownHelp.countdown(t.sTime, t.eTime, this.totalTime);
    }, e;
}(BaseView);

__reflect(MergeSubPanel0.prototype, "MergeSubPanel0");

window.MergeSubPanel0 = MergeSubPanel0;

var MergeSubPanel1 = function(t) {
    function e() {
        var e = t.call(this) || this;
        e.skinName = "MergeSubSkin1", e.list.itemRenderer = ItemBase;
        var i = GlobalConfig.ins().HefuActivityRewardsConfig;
        for (var n in i) e.setSkinPart("day" + n, new MergeSubItem1()), e["day" + n].data = i[n];
        return e;
    }
    return __extends(e, t), e.prototype.initUI = function() {}, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEndEvent(this.btnGet, this.onBtnClick), this.addTouchEndEvent(this.day1, this.onItemTouch), 
        this.addTouchEndEvent(this.day2, this.onItemTouch), this.addTouchEndEvent(this.day3, this.onItemTouch), 
        this.addTouchEndEvent(this.day4, this.onItemTouch), this.addTouchEndEvent(this.day5, this.onItemTouch), 
        this.addTouchEndEvent(this.day6, this.onItemTouch), this.addTouchEndEvent(this.day7, this.onItemTouch), 
        this.observe(MergeActivity.ins().postDataInfo, this.updateData), this.updateData();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeEvents(), this.removeObserve(), this.selectItem = null;
    }, e.prototype.updateData = function() {
        var t = MergeData1.ins();
        this.loginDayTxt.text = "登陆天数：" + t.day, this.selectIndex = this.getNextIndex(), 
        this.selectDay();
        var e = DateUtils.formatMiniDateTime(t.eTime) - GameServer.serverTime;
        this.totalTime = e + egret.getTimer(), this.updateTime();
    }, e.prototype.onItemTouch = function(t) {
        t.target.parent instanceof MergeSubItem1 && (this.selectIndex = t.target.parent.day), 
        null != this.selectItem && (this.selectItem.selected = !1), this.selectDay();
    }, e.prototype.upDayItem = function() {
        var t = GlobalConfig.ins().HefuActivityRewardsConfig;
        for (var e in t) this["day" + e].redPoint.visible = MergeData1.ins().day >= t[e].day && 0 == (MergeData1.ins().flag >> t[e].day & 1), 
        this["day" + e].imgGet.visible = 1 == (MergeData1.ins().flag >> t[e].day & 1), this["day" + e].selected = this.selectIndex == this["day" + e].day;
    }, e.prototype.selectDay = function() {
        this.upDayItem();
        var t = this.selectIndex, e = GlobalConfig.ins().HefuActivityRewardsConfig[t];
        this.list.dataProvider = new eui.ArrayCollection(e.rewards), this.btnGet.visible = !MergeData1.ins().getFlag(t), 
        this.imgGet.visible = !this.btnGet.visible, t > MergeData1.ins().day ? (this.btnGet.icon = "rebatehall_title2", 
        this.btnGet.enabled = !1, this.btnGet.filters = [ ColorUtil.colorMat ]) : (this.btnGet.icon = "rebatehall_title1", 
        this.btnGet.enabled = !0, this.btnGet.filters = null);
    }, e.prototype.getNextIndex = function() {
        var t, e = MergeData1.ins();
        for (var i in GlobalConfig.ins().HefuActivityRewardsConfig) {
            t = GlobalConfig.ins().HefuActivityRewardsConfig[i];
            var n = e.day >= t.day && 0 == (e.flag >> t.day & 1);
            if (n) return t.day;
        }
        var s = GlobalConfig.ins().HefuActivityRewardsConfig[MergeData1.ins().getLen()].day;
        return e.day > s ? s : e.day;
    }, e.prototype.onBtnClick = function(t) {
        t.target == this.btnGet && MergeActivity.ins().sendGetDayReward(this.selectIndex);
    }, e.prototype.updateTime = function() {
        var t = MergeData1.ins();
        this.timeTxt.text = CountdownHelp.countdown1(t.sTime, t.eTime, this.totalTime);
    }, e;
}(BaseView);

__reflect(MergeSubPanel1.prototype, "MergeSubPanel1");

window.MergeSubPanel1 = MergeSubPanel1;

var MergeSubPanel11 = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e._itemWidth = 112, e.index = 1, e.scrMax = 0, e.skinName = "MergeSubSkin11", 
        e.list.itemRenderer = ItemBase, e.list.dataProvider = new eui.ArrayCollection(), 
        e.boxList.itemRenderer = MergeSubItem11, e.listData = new eui.ArrayCollection(), 
        e.boxList.dataProvider = e.listData, e.path.textFlow = new egret.HtmlTextParser().parser("<u>前往击杀</u>"), 
        e.mc = new MovieClip(), e.bossCon.addChild(e.mc), e.mc.x = 68, e.mc.y = 10, e.mc.scaleX = 1.5, 
        e.mc.scaleY = .6, e.mc.playFile(ResPath.getUIEffectPath(UiEffectType.Type22), -1), 
        e.bar.value = 0, e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEndEvent(this.btnGet, this.onClick), this.addTouchEndEvent(this.path, this.onClick), 
        this.addTouchEndEvent(this.leftBtn, this.onClick), this.addTouchEndEvent(this.rightBtn, this.onClick), 
        this.boxList.addEventListener(egret.Event.CHANGE, this.selectDay, this), this.boxScr.addEventListener(egret.Event.CHANGE, this.upRedpoint, this), 
        this.observe(MergeActivity.ins().postBossGrade, this.upData), this.upData(), this.upRedpoint(null);
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeEvents(), this.removeObserve(), this.boxList.removeEventListener(egret.Event.CHANGE, this.selectDay, this), 
        this.boxScr.removeEventListener(egret.Event.CHANGE, this.upRedpoint, this), this.clearMc(), 
        TimerManager.ins().removeAll(this);
    }, e.prototype.upData = function() {
        var t = MergeData11.ins(), e = GlobalConfig.ins().HefuActivityBossConfig;
        this.index = t.getindex() > 1 ? t.getindex() : 1;
        var i = Object.keys(e), n = 112 * (i.length - 1);
        this.bar.maximum = n, this.bar.value = 112 * (t.getBar() - 1), this.bar.thumb.width = this.barBg.width = this.bar.width = n;
        for (var s = [], a = 0; a < i.length; a++) s[a] = e[a + 1];
        this.listData.replaceAll(s), this.boxList.dataProvider.refresh(), this.boxList.selectedIndex = this.index - 1, 
        this.selectDay(), this.numTxt.text = "" + t.grade;
        for (var o = Math.ceil(i.length / 4), r = 0, a = 1; o > a; a++) this.index > 4 * a && r++;
        this.scrMax = 448 * r, this.boxScr.viewport.scrollH = this.scrMax;
        var h = DateUtils.formatMiniDateTime(t.eTime) - GameServer.serverTime;
        this.totalTime = h + egret.getTimer(), this.updateTime();
    }, e.prototype.onClick = function(t) {
        var e = 4 * this._itemWidth;
        switch (t.target) {
          case this.btnGet:
            var i = this.boxList.selectedItem.day;
            MergeActivity.ins().sendGetBossGrade(i);
            break;

          case this.path:
            ViewManager.ins().open(BossWin, 1);
            break;

          case this.leftBtn:
            this.boxScr.viewport.scrollH <= e ? (this.boxScr.viewport.scrollH = 0, this.scrMax = 0) : (this.boxScr.viewport.scrollH -= e, 
            this.scrMax -= e), this.upRedpoint(null);
            break;

          case this.rightBtn:
            var n = this.boxScr.viewport.contentWidth - this.boxScr.viewport.width;
            if (0 >= n) return;
            this.scrMax += e, this.scrMax > n ? this.boxScr.viewport.scrollH = n : this.boxScr.viewport.scrollH = this.scrMax, 
            this.upRedpoint(null);
        }
    }, e.prototype.selectDay = function() {
        var t = MergeData11.ins(), e = this.boxList.selectedItem.day, i = GlobalConfig.ins().HefuActivityBossConfig;
        this.list.dataProvider = new eui.ArrayCollection(i[e].rewards);
        var n = i[e].integer, s = "BOSS积分达到 |C:0x34FF25&T:" + n + "| 可领取";
        this.reqTxt.textFlow = TextFlowMaker.generateTextFlow(s);
        var a = 1 == (t.flag >> i[e].day - 1 & 1), o = t.grade >= i[e].integer;
        !a && o ? (this.btnGet.enabled = this.redPoint.visible = !0, this.btnGet.icon = "rebatehall_title1", 
        this.btnGet.filters = []) : (this.btnGet.enabled = this.redPoint.visible = !1, this.btnGet.icon = "rebatehall_title2", 
        this.btnGet.filters = [ ColorUtil.colorMat ]), a ? (this.btnGet.visible = !1, this.imgGet.visible = !0) : (this.btnGet.visible = !0, 
        this.imgGet.visible = !1);
    }, e.prototype.upRedpoint = function(t) {
        var e = this.boxScr.viewport.contentWidth - this.boxScr.viewport.width;
        this.rightBtn.visible = this.boxScr.viewport.scrollH != e, this.leftBtn.visible = 0 != this.boxScr.viewport.scrollH;
    }, e.prototype.updateTime = function() {
        var t = MergeData11.ins();
        this.time.text = CountdownHelp.countdown1(t.sTime, t.eTime, this.totalTime);
    }, e.prototype.clearMc = function() {
        for (var t = this.boxList.numChildren, e = 0; t > e; e++) {
            var i = this.boxList.getChildAt(e);
            i.clearMC();
        }
    }, e;
}(BaseView);

__reflect(MergeSubPanel11.prototype, "MergeSubPanel11");

window.MergeSubPanel11 = MergeSubPanel11;

var MergeSubPanel3 = function(t) {
    function e() {
        var e = t.call(this) || this;
        e.skinName = "MergeSubSkin3", e.iconList.itemRenderer = MergeSubItem3, e.list.itemRenderer = ItemBase;
        var i = [];
        for (var n in GlobalConfig.ins().HefuTehuiConfig) i.push(GlobalConfig.ins().HefuTehuiConfig[n]);
        return e.iconList.dataProvider = new eui.ArrayCollection(i), e.mc0 = new MovieClip(), 
        e.mc0.x = 168, e.mc0.y = 125, e.mc1 = new MovieClip(), e.mc1.x = 132, e.mc1.y = 175, 
        e.mc2 = new MovieClip(), e.mc2.x = 190, e.mc2.y = 185, e.costNum = BitmapNumber.ins().createNumPic(0, "num21"), 
        e.addChild(e.costNum), e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEndEvent(this.btnBuy, this.onBtnClick), this.iconList.addEventListener(eui.ItemTapEvent.ITEM_TAP, this.selectIcon, this), 
        this.observe(MergeActivity.ins().postTehuiInfo, this.updateData), this.updateData();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeTouchEvent(this.btnBuy, this.onBtnClick), this.iconList.removeEventListener(eui.ItemTapEvent.ITEM_TAP, this.selectIcon, this), 
        this.removeObserve();
    }, e.prototype.selectIcon = function(t) {
        this.setSelectIndex(this.iconList.selectedIndex);
    }, e.prototype.setSelectIndex = function(t) {
        var e = GlobalConfig.ins().HefuTehuiConfig[t + 1];
        if (this.list.dataProvider = new eui.ArrayCollection(e.awardList), BitmapNumber.ins().changeNum(this.costNum, e.pay, "num21", 4), 
        this.costNum.x = this.img0.x + this.img0.width + 1, this.costNum.y = this.img0.y - 1, 
        this.img1.x = this.costNum.x + this.costNum.width - 4, this.img2.x = this.img1.x + this.img1.width - 3, 
        this.img3.x = this.img2.x + this.img2.width - 3, this.img3.source = "mergeActivity_smallname" + e.index, 
        2 == e.index) {
            this.imgShow.visible = !1, this.isShowMC.visible = !0;
            for (var i = 0; 3 > i; i++) {
                var n = this["mc" + i];
                this.isShowMC.addChildAt(n, i);
            }
            this.mc0.playFile(ResPath.getAnimaPath(1, 2), -1), this.mc1.playFile(ResPath.getAnimaPath(1, 3), -1), 
            this.mc2.playFile(ResPath.getAnimaPath(1, 4), -1);
        } else this.isShowMC.visible = !1, DisplayUtils.removeFromParent(this.mc0), DisplayUtils.removeFromParent(this.mc1), 
        DisplayUtils.removeFromParent(this.mc2), this.imgShow.visible = !0, this.imgShow.source = "mergeActivity_show" + e.index + "_png";
        4 == e.index ? this.imgShow.y = 179 : this.imgShow.y = 155, this.isBuyImg.visible = this.isBuyImg.visible = MergeData3.ins().getIsBuy(e.index), 
        this.btnBuy.filters = this.isBuyImg.visible ? [ ColorUtil.colorMat ] : null;
    }, e.prototype.updateData = function() {
        this.iconList.selectedIndex = MergeData3.ins().getNextTabIndex();
        var t = this.iconList.selectedIndex;
        this.iconList.dataProvider.refresh(), this.iconList.selectedIndex = t, this.setSelectIndex(this.iconList.selectedIndex), 
        this.updateTime();
    }, e.prototype.onBtnClick = function(t) {
        MergeActivity.ins().sendBuyTehuiGift(this.iconList.selectedIndex + 1);
    }, e.prototype.updateTime = function() {
        var t = MergeData3.ins(), e = GameServer.serverTime, i = DateUtils.formatMiniDateTime(t.eTime), n = i - e;
        this.totalTime = n + egret.getTimer(), this.timeTxt.text = CountdownHelp.countdown1(t.sTime, t.eTime, this.totalTime);
    }, e;
}(BaseView);

__reflect(MergeSubPanel3.prototype, "MergeSubPanel3");

window.MergeSubPanel3 = MergeSubPanel3;

var MergeSubPanel4 = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.data = MergeData4.ins(), e.skinName = "MergeSubSkin4", e.listData = new eui.ArrayCollection(), 
        e.list.itemRenderer = MergeSubItem4, e.list.dataProvider = e.listData, e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.observe(MergeActivity.ins().postConvertInfo, this.upBasedata), this.observe(UserBag.ins().postItemAdd, this.updatainfo), 
        this.observe(UserBag.ins().postItemDel, this.updatainfo), this.observe(UserBag.ins().postItemChange, this.updatainfo), 
        MergeActivity.ins().sendConvert(), this.addTouchEndEvent(this.get, this.onTop), 
        this.addTouchEvent(this.list, this.onTop);
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeEvents(), this.removeObserve();
    }, e.prototype.upCostItem = function() {
        for (var t, e, i, n = (GlobalConfig.ins().HefuActivityConfig, ""), s = [], a = 0; a < this.data.tokenNum; a++) {
            e = GlobalConfig.ins().ItemConfig(this.data.tokenArr[a].id).name, t = UserBag.ins().getBagItemById(this.data.tokenArr[a].id), 
            i = t ? t.count : 0, n = "", this.num.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(LangManager.gem_str1, e, i));
            for (var o = 0; o < this.num.textFlow.length; o++) n += this.num.textFlow[o].text;
            s.push(n);
        }
        this.num.text = s.join(" ");
    }, e.prototype.upBasedata = function() {
        this.upCostItem();
        for (var t = GlobalConfig.ins().HefuActivityConfig, e = [], i = 0; i < this.data.num; i++) e[i] = t[i];
        e.sort(this.sortData), this.listData.replaceAll(e), this.list.dataProvider = this.listData, 
        this.updateTime();
    }, e.prototype.sortData = function(t, e) {
        var i = MergeData4.ins().listArr, n = i[t.id].personNum >= t.personNum || i[t.id].serviseNum >= t.serviceNum, s = i[e.id].personNum >= e.personNum || i[e.id].serviseNum >= e.serviceNum;
        return n && s || !n && !s ? t.id > e.id ? 1 : t.id < e.id ? -1 : 0 : n ? 1 : -1;
    }, e.prototype.onTop = function(t) {
        switch (t.target) {
          case this.get:
            ViewManager.ins().open(MergeHallWin);
        }
        t.target instanceof eui.Button && t.target.parent instanceof MergeSubItem4 && MergeActivity.ins().sendGetConvert(t.target.parent.id);
    }, e.prototype.updateTime = function() {
        var t = GameServer.serverTime, e = DateUtils.formatMiniDateTime(this.data.eTime), i = e - t;
        this.totalTime = i + egret.getTimer(), this.timeTxt.text = CountdownHelp.countdown1(this.data.sTime, this.data.eTime, this.totalTime);
    }, e.prototype.updatainfo = function() {
        MergeActivity.ins().postConvertInfo, this.upBasedata();
    }, e;
}(BaseView);

__reflect(MergeSubPanel4.prototype, "MergeSubPanel4");

window.MergeSubPanel4 = MergeSubPanel4;

var MergeSubPanel7 = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "MergeSubSkin7", e.firstRewardList.itemRenderer = ItemBase, 
        e.rankRewardList.dataProvider = new eui.ArrayCollection(), e.rankRewardList.itemRenderer = MergeSubItem7reward, 
        e.standardsList.dataProvider = new eui.ArrayCollection(), e.standardsList.itemRenderer = MergeSubItem7, 
        e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEndEvent(this.btnUpgrade, this.onBtnClick), this.addTouchEvent(this.standardsList, this.onBtnClick), 
        this.addTouchEvent(this.checkRankBtn, this.onBtnClick), this.observe(MergeActivity.ins().postHefuJinjieriRank, this.updateData), 
        MergeActivity.ins().sendHefuJinjieriRank(), MergeActivity.ins().sendHefuJinjieriDabiao(), 
        GEventDispatcher.instance.addEventListener(GEvent.CLOSE_WIN, this.onCloseSmelt, this);
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeTouchEvent(this.btnUpgrade, this.onBtnClick), this.removeTouchEvent(this.standardsList, this.onBtnClick), 
        this.removeTouchEvent(this.checkRankBtn, this.onBtnClick), this.removeObserve(), 
        GEventDispatcher.instance.removeEventListener(GEvent.CLOSE_WIN, this.onCloseSmelt, this);
    }, e.prototype.onCloseSmelt = function(t) {
        var e = OpenServerConst.WIN_NAME[MergeData7.ins().id];
        if (e && e.hasOwnProperty("name")) {
            var i = e.name;
            t == i && (MergeActivity.ins().sendHefuJinjieriRank(), MergeActivity.ins().sendHefuJinjieriDabiao());
        }
    }, e.prototype.upStandards = function() {
        for (var t = MergeData7dabiao.ins(), e = [], i = 0; 1 > i; i++) e.push(t);
        this.standardsList.dataProvider = new eui.ArrayCollection(e);
    }, e.prototype.updateData = function() {
        var t = MergeData7.ins();
        if (t.id) {
            var e = DateUtils.formatMiniDateTime(t.eTime) - GameServer.serverTime;
            this.totalTime = e + egret.getTimer(), this.updateTime(), this.upStandards();
            for (var i = t.id, n = GlobalConfig.ins().JinJieRiRankRewardConfigHeFu[i][0], s = [], a = 0; a < n.reward.length; a++) s.push(n.reward[a]);
            this.firstRewardList.dataProvider = new eui.ArrayCollection(s), n = GlobalConfig.ins().JinJieRiRankRewardConfigHeFu[i];
            for (var o = n.slice(1), r = [], a = 0; a < o.length; a++) r.push(o[a]);
            this.rankRewardList.dataProvider = new eui.ArrayCollection(r), this.desc.text = LangManager.getLang(LangManager.mergeactivity_str0, OpenServerConst.TYPE_NAME[t.id]), 
            this.firsttxt.text = LangManager.getLang(LangManager.mergeactivity_str2, OpenServerConst.TYPE_NAME[t.id]);
            var h = GlobalConfig.ins().JinJieRiRankTimeConfigHeFu[t.id].itemCfg.id, l = GlobalConfig.ins().JinJieRiRankTimeConfigHeFu[t.id].itemCfg.minCnt, u = GlobalConfig.ins().ItemConfig(h).name;
            if (this.minLvTxt.text = LangManager.getLang(LangManager.mergeactivity_str1, OpenServerConst.TYPE_NAME[t.id], l, u), 
            t.rankNum > 0) {
                var p = t.rankArr[0];
                this.firstplayer.text = p.name;
                var c = SubRoles.ins().getSubRoleByIndex(0);
                c && (this.head.source = ResPath.getHeadIcon(c.sex, 1));
            } else this.firstplayer.text = "虚位以待", this.head.source = ResPath.getHeadIcon(0, 1);
            t.ranks > 0 ? this.lv.text = t.ranks + "" : this.lv.text = "未上榜", this.updateInfo();
        }
    }, e.prototype.updateInfo = function() {
        this.standardsList.dataProvider.refresh();
    }, e.prototype.onBtnClick = function(t) {
        t.target instanceof eui.Button && (t.target.parent instanceof MergeSubItem7 ? MergeActivity.ins().sendGetHefuJinjieriDabiao() : t.target == this.btnUpgrade ? ViewManager.ins().open(OpenServerConst.WIN_NAME[MergeData7.ins().id]) : t.target == this.checkRankBtn && ViewManager.ins().open(MergeSubPanel7RankingWin));
    }, e.prototype.onTitleClick = function() {
        var t = MergeData7.ins(), e = GlobalConfig.ins().JinJieRiRankRewardConfigHeFu[t.id][0], i = GlobalConfig.ins().ItemConfig(e.reward[0].id);
        i && ViewManager.ins().open(ItemDetailedWin, 0, i.id, e.reward[0].count);
    }, e.prototype.updateTime = function() {
        var t = MergeData7.ins();
        this.timeTxt.text = CountdownHelp.countdown(t.sTime, t.eTime, this.totalTime);
    }, e;
}(BaseView);

__reflect(MergeSubPanel7.prototype, "MergeSubPanel7");

window.MergeSubPanel7 = MergeSubPanel7;

var MergeSubPanel8 = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "MergeSubSkin8", e.listData = new eui.ArrayCollection(), e.list.dataProvider = e.listData, 
        e.list.itemRenderer = MergeSubItem8, e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEndEvent(this.btnRecharge, this.onBtnClick), this.addTouchEvent(this.list, this.onBtnClick), 
        this.observe(MergeActivity.ins().postHefuJinjieriTehui, this.updateData), this.observe(UserVip.ins().postUpdataExp, this.updateVip), 
        MergeActivity.ins().sendJinjieriTehuiInfo(), MergeActivity.ins().sendJinjieriTehuiData(), 
        this.updateVip();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeTouchEvent(this.btnRecharge, this.onBtnClick), this.removeTouchEvent(this.list, this.onBtnClick), 
        this.removeObserve();
    }, e.prototype.updateData = function() {
        var t = MergeData8.ins();
        if (t) {
            t.list.sort(this.sortData), this.listData.replaceAll(t.list), this.list.dataProvider = this.listData;
            var e = DateUtils.formatMiniDateTime(t.eTime) - GameServer.serverTime;
            this.totalTime = e + egret.getTimer(), this.updateTime();
        }
    }, e.prototype.updateVip = function() {
        this.curTxt.text = "当前VIP" + UserVip.ins().lv;
    }, e.prototype.sortData = function(t, e) {
        return t.sub_id > e.sub_id ? 1 : 0;
    }, e.prototype.onBtnClick = function(t) {
        t.target instanceof eui.Button && (t.target.parent instanceof MergeSubItem8 ? t.target.parent.isVipEnough ? MergeActivity.ins().sendGetJinjieriTehui(t.target.parent.index, t.target.parent.subIndex) : UserWarn.ins().showWanTips0(WarnTipsWin0.TYPE_0) : t.target == this.btnRecharge && Recharge.ins().gameCharge(1));
    }, e.prototype.updateTime = function() {
        var t = MergeData8.ins();
        this.timeTxt.text = CountdownHelp.countdown(t.sTime, t.eTime, this.totalTime);
    }, e;
}(BaseView);

__reflect(MergeSubPanel8.prototype, "MergeSubPanel8");

window.MergeSubPanel8 = MergeSubPanel8;

var MergeSubPanel9 = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "MergeSubSkin9", e.itemList.itemRenderer = ItemBase, e.itemList.dataProvider = new eui.ArrayCollection(GlobalConfig.ins().GuildKing.occupationAwardShow), 
        e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEndEvent(this.goBtn, this.onClick), this.addTouchEndEvent(this.itemList, this.onClick), 
        this.observe(GuildWar.ins().postHeFuInfo, this.updateData), this.updateData();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeEvents(), this.removeObserve();
    }, e.prototype.updateData = function() {
        this.updateTime();
    }, e.prototype.onClick = function(t) {
        switch (t.target) {
          case this.goBtn:
            Actor.level >= GlobalConfig.ins().GuildConfig.openLevel ? void 0 == Guild.ins().guildID || 0 == Guild.ins().guildID ? ViewManager.ins().open(GuildApplyWin) : ViewManager.ins().open(GuildMainUIWin, 3) : UserTips.ins().showTips("|C:0xff0000&T:" + GlobalConfig.ins().GuildConfig.openLevel + "级开启宗门|");
        }
    }, e.prototype.updateTime = function() {
        var t, e = Math.floor((GuildWar.ins().getModel().hefutotalTime - egret.getTimer()) / 1e3);
        t = e > DateUtils.SECOND_PER_DAY ? DateUtils.getFormatBySecond(e, DateUtils.TIME_FORMAT_5, 4) : DateUtils.getFormatBySecond(e, DateUtils.TIME_FORMAT_9), 
        this.timeTxt.text = t;
    }, e;
}(BaseView);

__reflect(MergeSubPanel9.prototype, "MergeSubPanel9");

window.MergeSubPanel9 = MergeSubPanel9;

var NewYearActivitySubPanel0 = function(t) {
    function e() {
        var e = t.call(this) || this;
        e.day = -1, e.skinName = "NewYearActivitySubSkin0", e.dayList.itemRenderer = NewYearSubItem0, 
        e.list.itemRenderer = ItemBase;
        var i = [];
        for (var n in GlobalConfig.ins().ChunjieActivityRewardsConfig) i.push(GlobalConfig.ins().ChunjieActivityRewardsConfig[n]);
        return e.dayList.dataProvider = new eui.ArrayCollection(i), e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEndEvent(this.btnGet, this.onBtnClick), this.dayList.addEventListener(egret.Event.CHANGE, this.selectDay, this), 
        this.observe(NewyearActivity.ins().postDataInfo, this.updateData), this.updateData();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.dayList.removeEventListener(egret.Event.CHANGE, this.selectDay, this), this.removeEvents(), 
        this.removeObserve(), TimerManager.ins().removeAll(this);
    }, e.prototype.updateData = function() {
        var t = NewYearActivityData0.ins();
        this.loginDayTxt.text = "登陆天数：" + t.day, this.dayList.dataProvider.refresh(), this.dayList.selectedIndex = this.getNextIndex(), 
        this.selectDay();
        var e = DateUtils.formatMiniDateTime(t.eTime) - GameServer.serverTime;
        this.totalTime = e + egret.getTimer(), TimerManager.ins().doTimer(1e3, 0, this.updateTime, this), 
        this.updateTime();
    }, e.prototype.selectDay = function() {
        var t = this.dayList.selectedItem.day, e = GlobalConfig.ins().ChunjieActivityRewardsConfig[t];
        this.list.dataProvider = new eui.ArrayCollection(e.rewards), this.btnGet.visible = !NewYearActivityData0.ins().getFlag(t), 
        this.imgGet.visible = !this.btnGet.visible, t > NewYearActivityData0.ins().day ? (this.btnGet.enabled = !1, 
        this.btnGet.filters = [ ColorUtil.colorMat ]) : (this.btnGet.enabled = !0, this.btnGet.filters = null);
    }, e.prototype.getNextIndex = function() {
        for (var t, e, i = NewYearActivityData0.ins(), n = NewYearActivityData0.ins().getLen(), s = 0, a = 0; a < n.length; a++) {
            if (t = n[a], e = 0 == (i.flag >> t.day & 1), !(i.day >= t.day)) return s = a - 1;
            if (e) return s = a;
            if (a == n.length - 1) return s = a;
        }
        return s = n.length - 1;
    }, e.prototype.onBtnClick = function(t) {
        if (t.target == this.btnGet) {
            var e = this.dayList.selectedItem.day;
            NewyearActivity.ins().sendGetDayReward(e);
        }
    }, e.prototype.updateTime = function() {
        var t = NewYearActivityData0.ins();
        this.timeTxt.text = CountdownHelp.countdown1(t.sTime, t.eTime, this.totalTime);
    }, e;
}(BaseView);

__reflect(NewYearActivitySubPanel0.prototype, "NewYearActivitySubPanel0");

window.NewYearActivitySubPanel0 = NewYearActivitySubPanel0;

var NewYearActivitySubPanel1 = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "NewYearActivitySubSkin1", e.listData = new eui.ArrayCollection(), 
        e.list.itemRenderer = NewYearSubItem1, e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEndEvent(this.btnRecharge, this.onBtnClick), this.addTouchEvent(this.list, this.onBtnClick), 
        this.observe(NewyearActivity.ins().postLianxuInfo, this.updateData), this.updateData();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeTouchEvent(this.btnRecharge, this.onBtnClick), this.removeTouchEvent(this.list, this.onBtnClick);
    }, e.prototype.updateData = function() {
        var t = NewYearActivityData1.ins();
        this.hasRecharge.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(LangManager.rechargeStr1, t.recharge));
        var e = DateUtils.formatMiniDateTime(t.eTime) - GameServer.serverTime;
        this.totalTime = e + egret.getTimer(), this.updateTime();
        var i = GlobalConfig.ins().ChunjieLianxuConfig, n = [];
        for (var s in i) n.push(i[s]);
        n.sort(this.sortData), this.listData.replaceAll(n), this.list.dataProvider = this.listData;
    }, e.prototype.sortData = function(t, e) {
        var i = NewYearActivityData1.ins(), n = 1 == (i.flag >> t.index - 1 & 1), s = 1 == (i.flag >> e.index - 1 & 1);
        return n && s || !n && !s ? t.index > e.index ? 1 : t.index < e.index ? -1 : 0 : n ? 1 : -1;
    }, e.prototype.onBtnClick = function(t) {
        if (t.target instanceof eui.Button) if (t.target.parent instanceof NewYearSubItem1) {
            if (!t.target.parent.isCanGet) return void UserTips.ins().showTips("未达到条件");
            NewyearActivity.ins().sendGetLianxu(t.target.parent.index);
        } else t.target == this.btnRecharge && Recharge.ins().gameCharge(1);
    }, e.prototype.updateTime = function() {
        var t = NewYearActivityData1.ins();
        this.timeTxt.text = CountdownHelp.countdown1(t.sTime, t.eTime, this.totalTime);
    }, e;
}(BaseView);

__reflect(NewYearActivitySubPanel1.prototype, "NewYearActivitySubPanel1");

window.NewYearActivitySubPanel1 = NewYearActivitySubPanel1;

var NewYearActivitySubPanel2 = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.data = NewYearActivityData2.ins(), e.skinName = "NewYearActivitySubSkin2", 
        e.listData = new eui.ArrayCollection(), e.list.itemRenderer = NewYearSubItem2, e.list.dataProvider = e.listData, 
        e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.observe(NewyearActivity.ins().postConvertInfo, this.upBasedata), this.observe(UserBag.ins().postItemAdd, this.dodatainfo), 
        this.observe(UserBag.ins().postItemDel, this.dodatainfo), this.observe(UserBag.ins().postItemChange, this.dodatainfo), 
        this.addTouchEndEvent(this.get, this.onTop), this.addTouchEvent(this.list, this.onTop), 
        NewyearActivity.ins().sendConvert();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeEvents(), this.removeObserve();
    }, e.prototype.upCostItem = function() {
        for (var t, e, i, n = (GlobalConfig.ins().ChunjieActivityConfig, ""), s = 0; s < this.data.tokenNum; s++) switch (e = GlobalConfig.ins().ItemConfig(this.data.tokenArr[s].id).name, 
        t = UserBag.ins().getBagItemById(this.data.tokenArr[s].id), i = t ? t.count : 0, 
        n = "", s) {
          case 0:
            this.num0.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(LangManager.gem_str1, e, i));
            break;

          case 1:
            this.num1.x = this.num0.x + this.num0.width, this.num1.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(LangManager.gem_str1, e, i));
        }
    }, e.prototype.upBasedata = function() {
        this.upCostItem();
        for (var t = GlobalConfig.ins().ChunjieActivityConfig, e = [], i = 0; i < this.data.num; i++) {
            if (!t[i]) return;
            e[i] = t[i];
        }
        e.sort(this.sortData), this.listData.replaceAll(e), this.list.dataProvider = this.listData, 
        this.updateTime();
    }, e.prototype.sortData = function(t, e) {
        var i = NewYearActivityData2.ins().listArr, n = i[t.id].personNum >= t.personNum || i[t.id].serviseNum >= t.serviceNum, s = i[e.id].personNum >= e.personNum || i[e.id].serviseNum >= e.serviceNum;
        return n && s || !n && !s ? t.id > e.id ? 1 : t.id < e.id ? -1 : 0 : n ? 1 : -1;
    }, e.prototype.onTop = function(t) {
        switch (t.target) {
          case this.get:
            ViewManager.ins().open(NewYearHallWin);
        }
        t.target instanceof eui.Button && t.target.parent instanceof NewYearSubItem2 && NewyearActivity.ins().sendGetConvert(t.target.parent.id);
    }, e.prototype.updateTime = function() {
        var t = GameServer.serverTime, e = DateUtils.formatMiniDateTime(this.data.eTime), i = e - t;
        this.totalTime = i + egret.getTimer(), this.timeTxt.text = CountdownHelp.countdown1(this.data.sTime, this.data.eTime, this.totalTime);
    }, e.prototype.dodatainfo = function() {
        NewyearActivity.ins().postConvertInfo, this.upBasedata();
    }, e;
}(BaseView);

__reflect(NewYearActivitySubPanel2.prototype, "NewYearActivitySubPanel2");

window.NewYearActivitySubPanel2 = NewYearActivitySubPanel2;

var NewYearActivitySubItem4 = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "NewYearActivitySubItemSkin4", e.ybNum = BitmapNumber.ins().createNumPic(0, "num22", 4), 
        e.addChild(e.ybNum), e;
    }
    return __extends(e, t), e.prototype.open = function() {
        this.addTouchEvent(this.giftImg, this.onClick);
    }, e.prototype.close = function() {
        this.removeEvents();
    }, e.prototype.setData = function(t) {
        this.config = t;
        var e = this.config.pay / 10;
        BitmapNumber.ins().changeNum(this.ybNum, e, "num22", 6), this.ybNum.x = this.imgBg.x + 20, 
        this.ybNum.y = this.imgTitle.y, this.imgTitle.x = this.ybNum.x + this.ybNum.width - 10, 
        this.imgRedPoint.visible = NewYearActivityData4.ins().getCanGet(this.config.index), 
        this.isGetImg.visible = NewYearActivityData4.ins().getIsGet(this.config.index);
    }, e.prototype.onClick = function(t) {
        this.select = !0;
    }, Object.defineProperty(e.prototype, "select", {
        get: function() {
            return this._select;
        },
        set: function(t) {
            t && MessageCenter.ins().dispatch(NewYearActivitySubPanel4.SELECT_FUBAO_GIFT, this.config), 
            this._select = t, this.selectImg.visible = t;
        },
        enumerable: !0,
        configurable: !0
    }), e;
}(BaseView);

__reflect(NewYearActivitySubItem4.prototype, "NewYearActivitySubItem4");

window.NewYearActivitySubItem4 = NewYearActivitySubItem4;

var OpenServerSunPanel0 = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "OpenServerSubSkin0", e.listData = new eui.ArrayCollection(), 
        e.list.dataProvider = e.listData, e.list.itemRenderer = OpenServerItem0, e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEndEvent(this.btnUpgrade, this.onBtnClick), this.addTouchEvent(this.list, this.onBtnClick), 
        this.observe(Activity.ins().postOpenServer0Data, this.updateData), this.observe(AdvanceHorse.ins().postHorseSuccessNext, this.updateInfo), 
        this.observe(AdvanceWing.ins().postWingSuccessNext, this.updateInfo), this.observe(AdvanceJianTong.ins().postJianTongSuccessNext, this.updateInfo), 
        this.observe(AdvanceFaBao.ins().postFaBaoSuccessNext, this.updateInfo), this.observe(AdvanceMoShen.ins().postMoShenSuccessNext, this.updateInfo), 
        this.observe(AdvanceZuJi.ins().postZuJiSuccessNext, this.updateInfo), this.observe(AdvanceGangQi.ins().postGangQiSuccessNext, this.updateInfo), 
        Activity.ins().sendOpenServer0Data();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeTouchEvent(this.btnUpgrade, this.onBtnClick), this.removeTouchEvent(this.list, this.onBtnClick), 
        this.removeObserve();
    }, e.prototype.updateData = function() {
        var t = OpenServerData0.ins();
        this.timeTipsTxt.text = "（每天" + t.refreshTime + "点将刷新活动内容）", t.list.sort(this.sortData), 
        this.listData.replaceAll(t.list), this.updateInfo();
        var e = DateUtils.formatMiniDateTime(t.endTime) - GameServer.serverTime;
        this.totalTime = e + egret.getTimer(), this.updateTime();
    }, e.prototype.sortData = function(t, e) {
        var i = GlobalConfig.ins().SevenDayActivityJinJieRiConfig[t.index], n = GlobalConfig.ins().SevenDayActivityJinJieRiConfig[e.index];
        return t.getNum == i.authMax && e.getNum != n.authMax ? 1 : e.getNum == n.authMax && t.getNum != i.authMax ? -1 : t.index < e.index ? -1 : t.index > e.index ? 1 : 0;
    }, e.prototype.updateInfo = function() {
        var t = SubRoles.ins().getSubRoleByIndex(0), e = 0;
        if (t) {
            var i = t[OpenServerConst.TYPE_LEVEL_KEY[OpenServerData0.ins().trueIndex]];
            e = i ? i.lv : 0;
        }
        this.curTxt.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(LangManager.openserver_str1, OpenServerConst.TYPE_NAME[OpenServerData0.ins().trueIndex], e)), 
        this.desc.text = LangManager.getLang(LangManager.openserver_str3, OpenServerConst.TYPE_NAME[OpenServerData0.ins().trueIndex]), 
        this.listData.refresh();
    }, e.prototype.onBtnClick = function(t) {
        t.target instanceof eui.Button && (t.target.parent instanceof OpenServerItem0 ? Activity.ins().sendOpenServer0Reward(t.target.parent.index) : t.target == this.btnUpgrade && ViewManager.ins().open(OpenServerConst.WIN_NAME[OpenServerData0.ins().trueIndex]));
    }, e.prototype.updateTime = function() {
        var t = OpenServerData0.ins();
        this.timeTxt.text = CountdownHelp.countdown(t.startTime, t.endTime, this.totalTime);
    }, e;
}(BaseView);

__reflect(OpenServerSunPanel0.prototype, "OpenServerSunPanel0");

window.OpenServerSunPanel0 = OpenServerSunPanel0;

var OpenServerSunPanel1 = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "OpenServerSubSkin1", e.firstRewardList.itemRenderer = ItemBase, 
        e.rankRewardList.dataProvider = new eui.ArrayCollection(), e.rankRewardList.itemRenderer = OpenServerItem5, 
        e.standardsList.dataProvider = new eui.ArrayCollection(), e.standardsList.itemRenderer = OpenServerItem2, 
        e.titleMC = new MovieClip(), e.titleCon.addChild(e.titleMC), e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEndEvent(this.btnUpgrade, this.onBtnClick), this.addTouchEvent(this.standardsList, this.onBtnClick), 
        this.addTouchEvent(this.checkRankBtn, this.onBtnClick), this.addTouchEvent(this.titleCon, this.onTitleClick), 
        this.observe(Activity.ins().postOpenServer1Data, this.updateData), this.observe(Rank.ins().postPraiseData, this.updateRankFirst), 
        this.observe(AdvanceHorse.ins().postHorseSuccessNext, this.updateInfo), this.observe(AdvanceWing.ins().postWingSuccessNext, this.updateInfo), 
        this.observe(AdvanceJianTong.ins().postJianTongSuccessNext, this.updateInfo), this.observe(AdvanceFaBao.ins().postFaBaoSuccessNext, this.updateInfo), 
        this.observe(AdvanceMoShen.ins().postMoShenSuccessNext, this.updateInfo), this.observe(AdvanceZuJi.ins().postZuJiSuccessNext, this.updateInfo), 
        this.observe(AdvanceGangQi.ins().postGangQiSuccessNext, this.updateInfo), Activity.ins().sendOpenServer1Data();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeTouchEvent(this.btnUpgrade, this.onBtnClick), this.removeTouchEvent(this.standardsList, this.onBtnClick), 
        this.removeTouchEvent(this.checkRankBtn, this.onBtnClick), this.removeObserve();
    }, e.prototype.updateData = function() {
        var t = OpenServerData1.ins();
        if (!(t.len <= 0)) {
            var e = OpenServerConst.TYPE_RANK[t.index];
            e && -1 != e && Rank.ins().sendGetPraiseData(e), this.timeTipsTxt.text = "（每天" + t.refreshTime + "点将刷新活动内容）";
            var i = DateUtils.formatMiniDateTime(t.endTime) - GameServer.serverTime;
            this.totalTime = i + egret.getTimer(), this.updateTime();
            for (var n = t.index, s = GlobalConfig.ins().SevenDayActivityQuanMingChongBangRankConfig[n][0], a = [], o = 1; o < s.rewardlist.length; o++) a.push(s.rewardlist[o]);
            this.firstRewardList.dataProvider = new eui.ArrayCollection(a), s = GlobalConfig.ins().SevenDayActivityQuanMingChongBangRankConfig[n];
            for (var r = s.slice(1), h = [], o = 0; o < r.length; o++) h.push(r[o]);
            this.rankRewardList.dataProvider = new eui.ArrayCollection(h);
            for (var l = [], o = 0; o < t.list.length; o++) l.push(t.list[o]);
            this.standardsList.dataProvider = new eui.ArrayCollection(l), this.desc.text = LangManager.getLang(LangManager.openserver_str3, OpenServerConst.TYPE_NAME[t.index]);
            var u = SubRoles.ins().getSubRoleByIndex(0), p = GlobalConfig.ins().SevenDayActivityQuanMingChongBangJinJieConfig[t.list[0].index][t.list[0].subIndex - 1];
            if (u) {
                var c = u[OpenServerConst.TYPE_LEVEL_KEY[p.item_index]];
                this.lv.text = c.lv + "阶";
            }
            var g = 0;
            switch (t.list[0].index) {
              case 1:
                g = 2;
                break;

              case 2:
                g = 3;
                break;

              case 3:
                g = 5;
                break;

              case 4:
                g = 4;
                break;

              case 5:
                g = 8;
                break;

              case 6:
                g = 6;
                break;

              case 7:
                g = 7;
            }
            this.titleMC.playFile(ResPath.getTitlePath(g), -1);
        }
    }, e.prototype.updateInfo = function() {
        this.standardsList.dataProvider.refresh();
    }, e.prototype.updateRankFirst = function(t) {
        if (t == OpenServerConst.TYPE_RANK[OpenServerData1.ins().index]) {
            var e;
            if (Rank.ins().rankModel[t].praise.id > 0) {
                var i = Rank.ins().rankModel[t].praise, n = void 0;
                t == RankDataType.TYPE_JOB_ZS ? n = JobConst.ZhanShi : t == RankDataType.TYPE_JOB_FS ? n = JobConst.FaShi : t == RankDataType.TYPE_JOB_DS && (n = JobConst.DaoShi), 
                e = Rank.ins().rankModel[t].praise.getRoleByJob(n);
                var s = void 0;
                switch (t) {
                  case 15:
                    s = e.horseLv;
                    break;

                  case 6:
                    s = e.wingLevel;
                    break;

                  case 19:
                    s = e.zujiLv;
                    break;

                  case 20:
                    s = e.gangqiLv;
                    break;

                  case 17:
                    s = e.fabaoLv;
                    break;

                  case 16:
                    s = e.jiantongLv;
                    break;

                  case 18:
                    s = e.moshenLv;
                }
                var a = OpenServerData1.ins().index, o = GlobalConfig.ins().SevenDayActivityQuanMingChongBangRankConfig[a][0].jieji_level;
                this.firsttxt.text = LangManager.getLang(LangManager.openserver_str7, OpenServerConst.TYPE_NAME[OpenServerData1.ins().index]), 
                this.minLvTxt.text = LangManager.getLang(LangManager.openserver_str8, OpenServerConst.TYPE_NAME[OpenServerData1.ins().index], o), 
                s >= o && (this.firstplayer.text = i.name, this.head.source = ResPath.getHeadIcon(e.sex, 1));
            }
        }
    }, e.prototype.onBtnClick = function(t) {
        t.target instanceof eui.Button && (t.target.parent instanceof OpenServerItem2 ? Activity.ins().sendOpenServer1Reward(t.target.parent.index, t.target.parent.subIndex) : t.target == this.btnUpgrade ? ViewManager.ins().open(OpenServerConst.WIN_NAME[OpenServerData1.ins().index]) : t.target == this.checkRankBtn && ViewManager.ins().open(RankingWin, OpenServerConst.TAB_RANK[OpenServerData1.ins().index]));
    }, e.prototype.onTitleClick = function() {
        var t = OpenServerData1.ins();
        if (!(t.len <= 0)) {
            var e = GlobalConfig.ins().SevenDayActivityQuanMingChongBangRankConfig[t.index][0], i = GlobalConfig.ins().ItemConfig(e.rewardlist[0].id);
            i && ViewManager.ins().open(ItemDetailedWin, 0, i.id, e.rewardlist[0].count);
        }
    }, e.prototype.updateTime = function() {
        var t = OpenServerData1.ins();
        this.timeTxt.text = CountdownHelp.countdown(t.startTime, t.endTime, this.totalTime);
    }, e;
}(BaseView);

__reflect(OpenServerSunPanel1.prototype, "OpenServerSunPanel1");

window.OpenServerSunPanel1 = OpenServerSunPanel1;

var OpenServerSunPanel2 = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "OpenServerSubSkin2", e.list.dataProvider = null, e.list.itemRenderer = OpenServerItem1, 
        e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEndEvent(this.btnRecharge, this.onBtnClick), this.addTouchEvent(this.list, this.onBtnClick), 
        this.observe(Activity.ins().postOpenServer2Data, this.updateData), this.observe(UserVip.ins().postUpdataExp, this.updateVip), 
        Activity.ins().sendOpenServer2Data(), this.updateVip();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeTouchEvent(this.btnRecharge, this.onBtnClick), this.removeTouchEvent(this.list, this.onBtnClick), 
        this.removeObserve();
    }, e.prototype.updateData = function() {
        var t = OpenServerData2.ins();
        this.timeTipsTxt.text = "（每天" + t.refreshTime + "点将刷新活动内容）", this.list.dataProvider = new eui.ArrayCollection(t.list);
        var e = DateUtils.formatMiniDateTime(t.endTime) - GameServer.serverTime;
        this.totalTime = e + egret.getTimer(), this.updateTime();
    }, e.prototype.updateVip = function() {
        this.curTxt.text = "当前VIP" + UserVip.ins().lv;
    }, e.prototype.onBtnClick = function(t) {
        t.target instanceof eui.Button && (t.target.parent instanceof OpenServerItem1 ? t.target.parent.isVipEnough ? Activity.ins().sendOpenServer2Reward(t.target.parent.index, t.target.parent.subIndex, 1) : UserWarn.ins().showWanTips0(WarnTipsWin0.TYPE_0) : t.target == this.btnRecharge && Recharge.ins().gameCharge(1));
    }, e.prototype.updateTime = function() {
        var t = OpenServerData2.ins();
        this.timeTxt.text = CountdownHelp.countdown(t.startTime, t.endTime, this.totalTime);
    }, e;
}(BaseView);

__reflect(OpenServerSunPanel2.prototype, "OpenServerSunPanel2");

window.OpenServerSunPanel2 = OpenServerSunPanel2;

var OpenServerSunPanel3 = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.btnType = 0, e.skinName = "OpenServerSubSkin3", e.list.itemRenderer = ItemBase, 
        e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEndEvent(this.btnRecharge, this.onBtnClick), this.observe(Activity.ins().postOpenServer3Data, this.updateData), 
        Activity.ins().sendOpenServer3Data();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeTouchEvent(this.btnRecharge, this.onBtnClick), this.removeObserve();
    }, e.prototype.updateData = function(t) {
        this.sData = t;
        var e = GlobalConfig.ins().SevenDayActivityMeiRiNeiChongConfig[this.sData.index][this.sData.subIndex - 1];
        this.list.dataProvider = new eui.ArrayCollection(e.rewardlist), this.timeTipsTxt.text = "（每天" + e.settle_hour + "点将刷新活动内容）", 
        this.btnType = this.sData.totalRecharge >= e.yuanbao ? 1 : 0, this.curTxt.text = LangManager.getLang(LangManager.openserver_str4, e.yuanbao, OpenServerConst.TYPE_NAME[this.sData.index]), 
        this.myRechargeTxt.text = "今日累计充值" + this.sData.totalRecharge + "元宝";
        var i = DateUtils.formatMiniDateTime(this.sData.eTime) - GameServer.serverTime;
        this.totalTime = i + egret.getTimer(), this.updateTime();
    }, e.prototype.onBtnClick = function(t) {
        ViewManager.ins().open(RebateHallWin);
    }, e.prototype.updateTime = function() {
        this.sData && (this.timeTxt.text = CountdownHelp.countdown(this.sData.sTime, this.sData.eTime, this.totalTime));
    }, e;
}(BaseView);

__reflect(OpenServerSunPanel3.prototype, "OpenServerSunPanel3");

window.OpenServerSunPanel3 = OpenServerSunPanel3;

var OpenServerSunPanel4 = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "OpenServerSubSkin4", e.listData = new eui.ArrayCollection(), 
        e.list.dataProvider = e.listData, e.list.itemRenderer = OpenServerItem4, e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEndEvent(this.btnRecharge, this.onBtnClick), this.addTouchEvent(this.list, this.onBtnClick), 
        this.tab.addEventListener(egret.Event.CHANGE, this.setSelectedIndex, this), this.observe(Activity.ins().postOpenServer4Data, this.updateData), 
        this.tab.selectedIndex = 0, Activity.ins().sendOpenServer4Data();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeTouchEvent(this.btnRecharge, this.onBtnClick), this.removeTouchEvent(this.list, this.onBtnClick), 
        this.tab.removeEventListener(egret.Event.CHANGE, this.setSelectedIndex, this), this.removeObserve();
    }, e.prototype.updateTab = function() {
        for (var t = [], e = OpenServerData4.ins().getTabTitleList(), i = e.length, n = 0; i > n; n++) {
            var s = {};
            s.upSource = "rebatehall_tab_up_png", s.downSource = "rebatehall_tab_down_png", 
            s.label = e[n], s.textColor = 16777215, t.push(s);
        }
        this.tab.dataProvider = new eui.ArrayCollection(t), this.tab.selectedIndex = -1 == this.tab.selectedIndex ? 0 : this.tab.selectedIndex, 
        this.updataIndex(this.tab.selectedIndex), this.redpoint0.visible = OpenServerData4.ins().getTabRedPoint(0), 
        this.redpoint1.visible = OpenServerData4.ins().getTabRedPoint(1), this.redpoint2.visible = OpenServerData4.ins().getTabRedPoint(2), 
        this.redpoint3.visible = OpenServerData4.ins().getTabRedPoint(3);
    }, e.prototype.updateData = function() {
        this.updateTab();
        var t = OpenServerData4.ins();
        this.timeTipsTxt.text = "（每天" + t.refreshTime + "点将刷新活动内容）", this.curTxt.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(LangManager.openserver_str6, t.hasRecharge));
        var e = DateUtils.formatMiniDateTime(t.endTime) - GameServer.serverTime;
        this.totalTime = e + egret.getTimer(), this.updateTime();
    }, e.prototype.setSelectedIndex = function(t) {
        this.updataIndex(this.tab.selectedIndex);
    }, e.prototype.updataIndex = function(t) {
        var e = OpenServerData4.ins().getTabList(t + 1);
        e.sort(this.sortData), this.listData.replaceAll(e);
    }, e.prototype.sortData = function(t, e) {
        return t.subIndex1 < e.subIndex1 ? -1 : t.subIndex1 > e.subIndex1 ? 1 : 0;
    }, e.prototype.onBtnClick = function(t) {
        t.target instanceof eui.Button && (t.target.parent instanceof OpenServerItem4 ? Activity.ins().sendOpenServer4Reward(t.target.parent.index, t.target.parent.subIndex, t.target.parent.subIndex1) : t.target == this.btnRecharge && Recharge.ins().gameCharge(1));
    }, e.prototype.updateTime = function() {
        var t = OpenServerData4.ins();
        this.timeTxt.text = CountdownHelp.countdown(t.startTime, t.endTime, this.totalTime);
    }, e;
}(BaseView);

__reflect(OpenServerSunPanel4.prototype, "OpenServerSunPanel4");

window.OpenServerSunPanel4 = OpenServerSunPanel4;

var OpenServerSunPanel5 = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "OpenServerSubSkin5", e.firstRewardList.itemRenderer = ItemBase, 
        e.rankRewardList.dataProvider = new eui.ArrayCollection(), e.rankRewardList.itemRenderer = OpenServerItem5reward, 
        e.listData = new eui.ArrayCollection(), e.standardsList.itemRenderer = OpenServerItem5Dabiao, 
        e.standardsList.dataProvider = e.listData, e.titleMC = new MovieClip(), e.titleCon.addChild(e.titleMC), 
        e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEndEvent(this.btnUpgrade, this.onBtnClick), this.addTouchEvent(this.standardsList, this.onBtnClick), 
        this.addTouchEvent(this.checkRankBtn, this.onBtnClick), this.addTouchEvent(this.titleCon, this.onTitleClick), 
        this.observe(Activity.ins().postJinjieriDragonData, this.updateData), this.observe(Rank.ins().postPraiseData, this.updateRankFirst), 
        this.observe(Activity.ins().postJinjieriDragonDabiao, this.upStandardInfo), this.observe(Activity.ins().postJinjieriDragonDabiao, this.updateInfo), 
        Rank.ins().sendGetPraiseData(OpenServerConst.TYPE_RANK[8]), Activity.ins().sendJinjieriDragonInfo(), 
        Activity.ins().sendJinjieriDragonDabiao();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeTouchEvent(this.btnUpgrade, this.onBtnClick), this.removeTouchEvent(this.standardsList, this.onBtnClick), 
        this.removeTouchEvent(this.checkRankBtn, this.onBtnClick), this.removeObserve();
    }, e.prototype.updateData = function() {
        var t = OpenServerData5.ins();
        if (t.checkShowIcon()) {
            var e = DateUtils.formatMiniDateTime(t.eTime) - GameServer.serverTime;
            this.totalTime = e + egret.getTimer(), this.updateTime();
            for (var i = GlobalConfig.ins().JinJieRiDragonRewardRankConfig, n = i[1], s = [], a = 1; a < n.reward.length; a++) s.push(n.reward[a]);
            this.firstRewardList.dataProvider = new eui.ArrayCollection(s);
            var o = [];
            for (var r in i) o.push(i[r]);
            for (var h = o.slice(1), l = [], a = 0; a < h.length; a++) l.push(h[a]);
            this.rankRewardList.dataProvider = new eui.ArrayCollection(l);
            var u = SubRoles.ins().getSubRoleByIndex(0), p = u.dragonData;
            p.dragonLv < 1 ? this.lv.text = "未激活" : this.lv.text = p.dragonLv + "阶", this.titleMC.playFile(ResPath.getTitlePath(OpenServerConst.TAB_RANK_TITLEID[0]), -1);
        }
    }, e.prototype.upStandardInfo = function() {
        var t = OpenServerData5.ins();
        if (t.checkShowIcon()) {
            for (var e = [], i = 0; i < t.dabiaoLen; i++) e.push(t.dabiaoList[i]);
            e.sort(this.sortData), this.listData.replaceAll(e), this.standardsList.dataProvider = this.listData;
        }
    }, e.prototype.sortData = function(t, e) {
        var i = 1 == t.state, n = 1 == e.state;
        return i && n || !i && !n ? t.rewardId > e.rewardId ? 1 : t.rewardId < e.rewardId ? -1 : 0 : i ? 1 : -1;
    }, e.prototype.updateInfo = function() {
        this.standardsList.dataProvider.refresh();
    }, e.prototype.updateRankFirst = function(t) {
        if (t == OpenServerConst.TYPE_RANK[8]) {
            var e;
            if (Rank.ins().rankModel[t].praise.id > 0) {
                var i = Rank.ins().rankModel[t].praise, n = void 0;
                t == RankDataType.TYPE_JOB_ZS ? n = JobConst.ZhanShi : t == RankDataType.TYPE_JOB_FS ? n = JobConst.FaShi : t == RankDataType.TYPE_JOB_DS && (n = JobConst.DaoShi), 
                e = Rank.ins().rankModel[t].praise.getRoleByJob(n);
                var s = void 0;
                switch (t) {
                  case 22:
                    s = e.longdunLv;
                }
                var a = GlobalConfig.ins().JinJieRiDragonBaseConfig.jieji_lvl_min;
                this.minLvTxt.text = LangManager.getLang(LangManager.openserver_str12, "龙盾", a), 
                s >= a && (this.firstplayer.text = i.name, this.head.source = ResPath.getHeadIcon(e.sex, 1));
            }
        }
    }, e.prototype.onBtnClick = function(t) {
        t.target instanceof eui.Button && (t.target.parent instanceof OpenServerItem5Dabiao ? Activity.ins().sendGetJinjieriDragonDabiao(t.target.parent.index) : t.target == this.btnUpgrade ? ViewManager.ins().open(DragonWin) : t.target == this.checkRankBtn && ViewManager.ins().open(RankingWin, 9));
    }, e.prototype.onTitleClick = function() {
        var t = GlobalConfig.ins().JinJieRiDragonRewardRankConfig[1], e = GlobalConfig.ins().ItemConfig(t.reward[0].id);
        e && ViewManager.ins().open(ItemDetailedWin, 0, e.id, t.reward[0].count);
    }, e.prototype.updateTime = function() {
        var t = OpenServerData5.ins();
        this.timeTxt.text = CountdownHelp.countdown1(t.sTime, t.eTime, this.totalTime);
    }, e;
}(BaseView);

__reflect(OpenServerSunPanel5.prototype, "OpenServerSunPanel5");

window.OpenServerSunPanel5 = OpenServerSunPanel5;

var OpenServerSunPanel6 = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "OpenServerSubSkin6", e.listData = new eui.ArrayCollection(), 
        e.list.itemRenderer = OpenServerItem6, e.list.dataProvider = e.listData, e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.observe(Activity.ins().postLingqiPaiduiData, this.updateData), this.addTouchEndEvent(this.btnUpgrade, this.onBtnClick), 
        this.addTouchEvent(this.list, this.onBtnClick), this.observe(Activity.ins().postLingqiPaiduiData, this.updateInfo), 
        Activity.ins().sendLingqiPaiduiInfo(), Activity.ins().sendLingqiPaiduiData();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeTouchEvent(this.btnUpgrade, this.onBtnClick), this.removeTouchEvent(this.list, this.onBtnClick), 
        this.removeObserve();
    }, e.prototype.updateData = function() {
        var t = OpenServerData6.ins();
        if (t.checkShowIcon()) {
            for (var e = [], i = 0; i < t.len; i++) e.push(t.listArr[i]);
            e.sort(this.sortData), this.listData.replaceAll(e), this.list.dataProvider = this.listData, 
            this.curTxt.text = t.lingli + "";
            var n = DateUtils.formatMiniDateTime(t.eTime) - GameServer.serverTime;
            this.totalTime = n + egret.getTimer(), this.updateTime();
        }
    }, e.prototype.updateInfo = function() {
        this.list.dataProvider.refresh();
    }, e.prototype.sortData = function(t, e) {
        var i = 1 == t.state, n = 1 == e.state;
        return i && n || !i && !n ? t.rewardId > e.rewardId ? 1 : t.rewardId < e.rewardId ? -1 : 0 : i ? 1 : -1;
    }, e.prototype.onBtnClick = function(t) {
        t.target instanceof eui.Button && (t.target.parent instanceof OpenServerItem6 ? Activity.ins().sendLingqiPaiduiReward(t.target.parent.id) : t.target == this.btnUpgrade && ViewManager.ins().open(HuntWin, 1));
    }, e.prototype.updateTime = function() {
        var t = OpenServerData6.ins();
        this.timeTxt.text = CountdownHelp.countdown(t.sTime, t.eTime, this.totalTime);
    }, e;
}(BaseView);

__reflect(OpenServerSunPanel6.prototype, "OpenServerSunPanel6");

window.OpenServerSunPanel6 = OpenServerSunPanel6;

var OpenServerSunPanel7 = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "OpenServerSubSkin7", e.firstRewardList.itemRenderer = ItemBase, 
        e.rankRewardList.dataProvider = new eui.ArrayCollection(), e.rankRewardList.itemRenderer = OpenServerItem7reward, 
        e.listData = new eui.ArrayCollection(), e.standardsList.itemRenderer = OpenServerItem7Dabiao, 
        e.standardsList.dataProvider = e.listData, e.titleMC = new MovieClip(), e.titleCon.addChild(e.titleMC), 
        e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEndEvent(this.btnUpgrade, this.onBtnClick), this.addTouchEvent(this.standardsList, this.onBtnClick), 
        this.addTouchEvent(this.checkRankBtn, this.onBtnClick), this.addTouchEvent(this.titleCon, this.onTitleClick), 
        this.observe(Activity.ins().postLingqiPaiduiData, this.updateData), this.observe(Activity.ins().postLingqiPaiduiDabiao, this.upStandardInfo), 
        this.observe(Activity.ins().postLingqiPaiduiDabiao, this.updateInfo), Activity.ins().sendLingqiPaiduiInfo(), 
        Activity.ins().sendLingqiPaiduiRankData(), Activity.ins().sendLingqiPaiduiRankDabiao();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeTouchEvent(this.btnUpgrade, this.onBtnClick), this.removeTouchEvent(this.standardsList, this.onBtnClick), 
        this.removeTouchEvent(this.checkRankBtn, this.onBtnClick), this.removeObserve();
    }, e.prototype.updateData = function() {
        var t = OpenServerData7.ins();
        if (t.checkShowIcon()) {
            var e = GlobalConfig.ins().LingQiPaiDuiBaseConfig.lingli_req;
            this.minLvTxt.text = LangManager.getLang(LangManager.openserver_str11, e);
            var i = DateUtils.formatMiniDateTime(t.eTime) - GameServer.serverTime;
            this.totalTime = i + egret.getTimer(), this.updateTime();
            for (var n = GlobalConfig.ins().LingQiPaiDuiRewardChongBangConfig, s = n[1], a = [], o = 1; o < s.reward.length; o++) a.push(s.reward[o]);
            this.firstRewardList.dataProvider = new eui.ArrayCollection(a);
            var r = [];
            for (var h in n) r.push(n[h]);
            for (var l = r.slice(1), u = [], o = 0; o < l.length; o++) u.push(l[o]);
            this.rankRewardList.dataProvider = new eui.ArrayCollection(u);
            for (var p = SubRoles.ins().getSubRoleByIndex(0), c = 0, o = 0; o < t.rankLen; o++) t.rankArr[o].name == p.name && (c = t.rankArr[o].rank);
            if (this.lv.text = 0 == c ? "未上榜" : c + "", t.rankLen > 0) {
                var g = t.rankArr[0].sex;
                this.firstplayer.text = t.rankArr[0].name, this.head.source = ResPath.getHeadIcon(g, 1);
            }
            this.titleMC.playFile(ResPath.getTitlePath(OpenServerConst.TAB_RANK_TITLEID[1]), -1);
        }
    }, e.prototype.upStandardInfo = function() {
        var t = OpenServerData7.ins();
        if (t.checkShowIcon()) {
            for (var e = [], i = 0; i < t.dabiaoLen; i++) e.push(t.dabiaoList[i]);
            e.sort(this.sortData), this.listData.replaceAll(e), this.standardsList.dataProvider = this.listData;
        }
    }, e.prototype.sortData = function(t, e) {
        var i = 1 == t.state, n = 1 == e.state;
        return i && n || !i && !n ? t.rewardId > e.rewardId ? 1 : t.rewardId < e.rewardId ? -1 : 0 : i ? 1 : -1;
    }, e.prototype.updateInfo = function() {
        this.standardsList.dataProvider.refresh();
    }, e.prototype.onBtnClick = function(t) {
        t.target instanceof eui.Button && (t.target.parent instanceof OpenServerItem7Dabiao ? Activity.ins().sendLingqiPaiduiRankReward(t.target.parent.index) : t.target == this.btnUpgrade ? ViewManager.ins().open(HuntWin, 1) : t.target == this.checkRankBtn && ViewManager.ins().open(OpenServerSunPanel7RankingWin));
    }, e.prototype.onTitleClick = function() {
        var t = GlobalConfig.ins().LingQiPaiDuiRewardChongBangConfig[1], e = GlobalConfig.ins().ItemConfig(t.reward[0].id);
        e && ViewManager.ins().open(ItemDetailedWin, 0, e.id, t.reward[0].count);
    }, e.prototype.updateTime = function() {
        var t = OpenServerData7.ins();
        this.timeTxt.text = CountdownHelp.countdown(t.sTime, t.eTime, this.totalTime);
    }, e;
}(BaseView);

__reflect(OpenServerSunPanel7.prototype, "OpenServerSunPanel7");

window.OpenServerSunPanel7 = OpenServerSunPanel7;

var OpenServerSunPanel8 = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "OpenServerSubSkin2", e.listData = new eui.ArrayCollection(), 
        e.list.dataProvider = e.listData, e.list.itemRenderer = OpenServerItem8, e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEndEvent(this.btnRecharge, this.onBtnClick), this.addTouchEvent(this.list, this.onBtnClick), 
        this.observe(Activity.ins().postLingqiPaiduiData, this.updateData), this.observe(UserVip.ins().postUpdataExp, this.updateVip), 
        this.observe(Activity.ins().postLingqiPaiduiData, this.updateInfo), Activity.ins().sendLingqiPaiduiTehui(), 
        this.updateVip();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeTouchEvent(this.btnRecharge, this.onBtnClick), this.removeTouchEvent(this.list, this.onBtnClick), 
        this.removeObserve();
    }, e.prototype.updateData = function() {
        var t = OpenServerData8.ins();
        if (t.checkShowIcon() && (this.timeTipsTxt.visible = !1, this.desc.text = "寻灵特惠，限时超值道具！", 
        t)) {
            t.tehuiArr.sort(this.sortData), this.listData.replaceAll(t.tehuiArr), this.list.dataProvider = this.listData;
            var e = DateUtils.formatMiniDateTime(t.eTime) - GameServer.serverTime;
            this.totalTime = e + egret.getTimer(), this.updateTime();
        }
    }, e.prototype.updateInfo = function() {
        this.list.dataProvider.refresh();
    }, e.prototype.updateVip = function() {
        this.curTxt.text = "当前VIP" + UserVip.ins().lv;
    }, e.prototype.sortData = function(t, e) {
        var i = 1 == t.state, n = 1 == e.state;
        return i && n || !i && !n ? t.id > e.id ? 1 : t.id < e.id ? -1 : 0 : i ? 1 : -1;
    }, e.prototype.onBtnClick = function(t) {
        t.target instanceof eui.Button && (t.target.parent instanceof OpenServerItem8 ? t.target.parent.isVipEnough ? Activity.ins().sendBuyLingqiPaiduiTehui(t.target.parent.index) : UserWarn.ins().showWanTips0(WarnTipsWin0.TYPE_0) : t.target == this.btnRecharge && Recharge.ins().gameCharge(1));
    }, e.prototype.updateTime = function() {
        var t = OpenServerData8.ins();
        this.timeTxt.text = CountdownHelp.countdown(t.sTime, t.eTime, this.totalTime);
    }, e;
}(BaseView);

__reflect(OpenServerSunPanel8.prototype, "OpenServerSunPanel8");

window.OpenServerSunPanel8 = OpenServerSunPanel8;

var PetEquipPanel = function(t) {
    function e() {
        var e = t.call(this) || this;
        e.EQUIP_MAX = 8, e.SKILL_MAX = 4, e.skinName = "PetEquipSkin";
        for (var i = 1; i <= e.EQUIP_MAX; i++) i <= e.SKILL_MAX && e.setSkinPart("skill" + i, new PetSkillItemRender());
        return e.fightLabel.visible = !1, e.bodyLabel.visible = !1, e.fightPower = BitmapNumber.ins().createNumPic(0, "8", 10), 
        e.fightPower.x = e.fightLabel.x, e.fightPower.y = e.fightLabel.y + 7, e.addChild(e.fightPower), 
        e.redPoint8.visible = !1, e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.init();
    }, e.prototype.init = function() {
        this.equips = [];
        for (var t = 0; t < this.EQUIP_MAX; t++) this.equips[t] = this["equip" + t], this.equips[t].touchEnabled = !0;
    }, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEvent(this.changeShowBtn, this.onTouch), this.addTouchEvent(this.allChangeEquipBtn, this.onTouch), 
        this.addTouchEvent(this.upgradeBtn, this.onTouch), this.observe(PetSys.ins().postSwitchSkill, this.doSwitchSkill), 
        this.observe(PetSys.ins().doPetListData, this.upAttr), this.observe(GameLogic.ins().postPowerChange, this.upAttr), 
        this.observe(PetSys.ins().postChangeShow, this.doChangeShow), this.observe(UserEquip.ins().postEquipChange, this.updataEquip), 
        this.observe(PetSys.ins().checkHaveCan, this.refreshRetPoint), this.observe(PetSys.ins().postUpPetData, this.upPetDataFun), 
        this.upPetDataFun(), this.updataEquip(), this.doChangeShow();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
    }, e.prototype.updata = function() {
        for (var t = this, e = 1; e <= GlobalConfig.ins().PetBaseConfig.gridOpen.length; e++) this["skill" + e].setLimitLv(GlobalConfig.ins().PetBaseConfig.gridOpen[e - 1]), 
        this["skill" + e].pos = e - 1, this.petRoleData && this.petRoleData.skillsData[e - 1] ? (this["skill" + e].data = this.petRoleData.skillsData[e - 1], 
        this["skillName" + e].text = GlobalConfig.ins().SkillsConfig(this.petRoleData.skillsData[e - 1]).skinName) : this["skillName" + e].text = "";
        this.petRoleData && this.petRoleData.petData ? (this.upPetInfoData(), BitmapNumber.ins().changeNum(this.fightPower, this.petRoleData.power, "8", 2), 
        this.noPetLabel.visible = !1, this.expBar.visible = !0, this.expBar.labelFunction = function(e, i) {
            return t.petRoleData.petData.exp + "/" + i;
        }) : (BitmapNumber.ins().changeNum(this.fightPower, 0, "8", 2), this.expBar.visible = !1, 
        this.expBar.value = 0, this.expBar.maximum = 0, this.lvLabel.text = "", this.noPetLabel.visible = !0);
    }, e.prototype.updataEquip = function() {
        this.setEquip(), this.refreshRetPoint(PetSys.ins().checkHaveCan());
    }, e.prototype.upAttr = function() {
        var t = PetHelp.countTotalAttr();
        this.attriLabel1.text = "生命 " + (t.hp ? t.hp : 0), this.attriLabel2.text = "攻击 " + (t.atk ? t.atk : 0), 
        this.attriLabel3.text = "防御 " + (t.def ? t.def : 0), this.attriLabel4.text = "追伤 " + (t.addHurt ? t.addHurt : 0);
    }, e.prototype.doChangeShow = function() {
        this.petRoleData = SubRoles.ins().getPetRoleData(), this.petRoleData && this.petRoleData.petData && (this.petBody || (this.petBody = new CharRole(), 
        this.petBody.hideBlood(), this.addChild(this.petBody), this.bodyLabel && (this.petBody.x = this.bodyLabel.x + 50, 
        this.petBody.y = this.bodyLabel.y + 95, this.petBody.anchorOffsetY = 0, this.petBody.anchorOffsetX = 0)), 
        this.petBody.initBody(ResPath.RES_DIR_MONSTER + GlobalConfig.ins().PetConfig[this.petRoleData.petData.id][0].body));
    }, e.prototype.onTouch = function(t) {
        switch (t.target) {
          case this.changeShowBtn:
            ViewManager.ins().open(ChangePetModelWin);
            break;

          case this.allChangeEquipBtn:
            this.petRoleData ? PetSys.ins().checkHaveCan(!0, SubRoles.ins().getRoleIndexByJob(JobConst.Pet)) : UserTips.ins().showTips("暂时无通灵兽！");
            break;

          case this.upgradeBtn:
            this.canUpgrade ? PetSys.ins().sendUpgradePetOnExp() : UserWarn.ins().setBuyGoodsWarn(GlobalConfig.ins().PetBaseConfig.expItemId, 1);
        }
    }, e.prototype.doSwitchSkill = function(t) {
        this["skill" + (t.pos + 1)].data = t.id, t.id ? this["skillName" + (t.pos + 1)].text = GlobalConfig.ins().SkillsConfig(t.id).skinName : this["skillName" + (t.pos + 1)].text = "";
    }, e.prototype.setEquip = function() {
        this.petRoleData = SubRoles.ins().getPetRoleData();
        for (var t = 0; t < this.EQUIP_MAX; t++) if (this.petRoleData) {
            var e = this.petRoleData.getEquipByIndex(t);
            this.equips[t].setModel(this.petRoleData), this.equips[t].data = e.item, 0 == e.item.configID && this.equips[t].setEquipPos("" + t), 
            this.equips[t].isShowName(!0);
        } else this.equips[t].setEquipPos("" + t), this.equips[t].isShowName(!1);
    }, e.prototype.refreshRetPoint = function(t) {
        for (var e = !1, i = 0; i < this.EQUIP_MAX; i++) {
            this["equip" + i];
            this["redPoint" + i].visible = t[i] ? !0 : !1, e || (e = t[i]);
        }
        this.redPoint9.visible = e;
    }, e.prototype.refreshUpgradeRetPoint = function(t) {
        this.redPoint8.visible = t;
    }, e.prototype.upPetInfoData = function() {
        if (this.petRoleData && this.expBar) if (this.canUpgrade = this.petRoleData.petData.exp >= GlobalConfig.ins().PetExpConfig[this.petRoleData.petData.lv].exp, 
        this.lvLabel.text = "等级:" + this.petRoleData.petData.lv, PetSys.ins().isMaxLv()) this.expBar.visible = !1, 
        this.upgradeBtn.visible = !1, this.changeShowBtn.x = 180, this.allChangeEquipBtn.x = 348, 
        this.noPetLabel.visible = !0, this.noPetLabel.text = "通灵术已满级", this.lvLabel.x = 280; else {
            var t = this.petRoleData.petData.lv > GlobalConfig.ins().PetExpConfig.length - 1 ? GlobalConfig.ins().PetExpConfig.length - 1 : this.petRoleData.petData.lv;
            GlobalConfig.ins().PetExpConfig;
            this.expBar.maximum = GlobalConfig.ins().PetExpConfig[t].exp, this.expBar.value = this.petRoleData.petData.exp, 
            this.lvLabel.x = 198;
        }
    }, e.prototype.upPetDataFun = function() {
        this.petRoleData = SubRoles.ins().getPetRoleData(), this.updata(), this.upPetInfoData(), 
        this.upAttr(), this.refreshUpgradeRetPoint(PetSys.ins().checkHasUpgrade());
    }, e;
}(BaseView);

__reflect(PetEquipPanel.prototype, "PetEquipPanel");

window.PetEquipPanel = PetEquipPanel;

var PetListPanel = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.petCellList = [], e.startRender = !0, e.skinName = "PetListSkin", e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.init(), this.name = "图鉴";
    }, e.prototype.init = function() {
        this.line.visible = !1;
    }, e.prototype.open = function() {
        for (var t = this, e = [], i = 0; i < arguments.length; i++) e[i] = arguments[i];
        this.observe(PetSys.updataPetList, this.upPetList), this.observe(PetSys.ins().postUpdataPieceList, this.updataPieceList), 
        this.observe(PetSys.ins().postUpdataPetData, this.updataPetData), this.startRender = !0, 
        this.upPetList(), PetSys.ins().sendGetPetPieces(), TimerManager.ins().doTimer(50 * this.listPos.length, 0, function() {
            t.upPetList();
        }, this);
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.clearList(), this.startRender = !1, this.removeObserve(), TimerManager.ins().removeAll(this);
    }, e.prototype.mergePet = function() {
        UserTips.ins().showTips("召唤成功！");
    }, e.prototype.updataPieceList = function() {
        if (this.petCellList) for (var t = 0, e = this.petCellList; t < e.length; t++) {
            var i = e[t];
            i && i.updatePiece();
        }
    }, e.prototype.upPetList = function() {
        var t = 0, e = 14, i = 14, n = 3, s = 40, a = !0, o = 177, r = 232;
        this.line.visible = !1;
        var h = this.countAllPetList(), l = 0;
        this.listPos = [];
        for (var u = 0, p = h; u < p.length; u++) {
            var c = p[u];
            a && !PetSys.ins().checkOwnPetList(c) && (a = !1, t % n > 0 && (l = 1), s = ((t / n >> 0) + l) * (r + i) + 85, 
            this.line.y = s - 40, this.line.visible = !0, t = 0);
            var g = new XY();
            g.x = 10 + (o + e) * (t % n), g.y = s + (t / n >> 0) * (r + i), this.listPos.push(g), 
            t++;
        }
        this.renderItem(h);
    }, e.prototype.renderItem = function(t) {
        var e = this;
        if (this.listPos.length > 0 && this.startRender) {
            var i, n = t[t.length - this.listPos.length], s = this.getPetById(n);
            s ? i = s : (i = new PetItemRender(), this.listGroup.addChildAt(i, 0), this.petCellList.push(i), 
            i.alpha = 0, egret.Tween.get(i).to({
                alpha: 1
            }, 80), this.listPos.length == t.length && TimerManager.ins().doTimer(100, 1, function() {
                BeginnerGuideLogic.ins().playGuide(PetWin, i);
            }, this));
            var a = this.listPos.shift();
            i.x = a.x, i.y = a.y, i.data = n, egret.callLater(function() {
                e.renderItem(t);
            }, this);
        }
    }, e.prototype.getPetById = function(t) {
        for (var e = 0, i = this.petCellList; e < i.length; e++) {
            var n = i[e];
            if (n.data == t) return n;
        }
        return null;
    }, e.prototype.countAllPetList = function() {
        for (var t = [], e = [], i = 0, n = PetSys.ins().ownList; i < n.length; i++) {
            var s = n[i];
            e.push(s.id);
        }
        for (var a in GlobalConfig.ins().PetConfig) if (!PetSys.ins().checkOwnPetList(a)) {
            var o = GlobalConfig.ins().PetConfig[a][0], r = o.costItems;
            r.count <= PetSys.ins().pieceData[r.id] ? e.push(Number(a)) : t.push(Number(a));
        }
        return t = e.concat(t);
    }, e.prototype.updataPetData = function(t) {
        for (var e = 0, i = this.petCellList; e < i.length; e++) {
            var n = i[e];
            if (n.data == t.id) {
                n.data = t.id;
                break;
            }
        }
    }, e.prototype.getPetList = function(t) {
        var e, i = [];
        GlobalConfig.ins().PetConfig;
        for (var n in GlobalConfig.ins().PetConfig) {
            var s = GlobalConfig.ins().PetConfig[n];
            e = s.length, t && PetSys.ins().checkOwnPetList(n) ? i.push(n) : t || PetSys.ins().checkOwnPetList(n) || i.push(s[0].id);
        }
        return i;
    }, e.prototype.clearList = function() {
        if (this.petCellList) for (var t = 0, e = this.petCellList; t < e.length; t++) {
            var i = e[t];
            i.destruct();
        }
    }, e;
}(BaseView);

__reflect(PetListPanel.prototype, "PetListPanel");

window.PetListPanel = PetListPanel;

var PetArrayedItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "TanxianItemSkin", e.setSkinPart("headComponent", new PetHeadInfoCell()), 
        e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.init();
    }, e.prototype.init = function() {
        this.skillIcon1.visible = !1, this.skillIcon2.visible = !1, this.skillBg1.visible = !1, 
        this.skillBg2.visible = !1, this.addPetBtn.visible = !0, this.headIcon.source = "", 
        this.choosePetLabel.visible = !0, this.petId = 0, this.skillList = [], this.select1.visible = this.select2.visible = !1, 
        this.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onTouch, this);
    }, e.prototype.onTouch = function() {
        "pet" == this.currentState ? PetSys.ins().postChoosePet(this.posIndex) : "monster" == this.currentState && ViewManager.ins().open(PetViewSkillListWin, this.skillList);
    }, e.prototype.destroy = function() {
        this.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.onTouch, this), this.clear();
    }, e.prototype.initOriginalPos = function() {
        "pet" == this.currentState ? this._skill1_original_x = 140 : "monster" == this.currentState && (this._skill1_original_x = 90), 
        this._skill1_original_x = this.skillBg1.x;
    }, e.prototype.setData = function(t, e, i) {
        if (t) {
            e && GlobalConfig.ins().PetTaskSkillConfig[e] && (this.skillIcon1.source = GlobalConfig.ins().PetTaskSkillConfig[e].icon + "", 
            this.skillList.push(e), this.skillIcon1.visible = !0, this.skillBg1.visible = !0), 
            i && GlobalConfig.ins().PetTaskSkillConfig[i] && (this.skillIcon2.source = GlobalConfig.ins().PetTaskSkillConfig[i].icon + "", 
            this.skillList.push(i), this.skillIcon2.visible = !0, this.skillBg2.visible = !0);
            var n = 0;
            if (i || (n = 36), this.skillBg1.x = this._skill1_original_x + n, this.skillIcon1.x = this._skill1_original_x + n + 5, 
            this.select1.x = this._skill1_original_x + n - 8, "pet" == this.currentState && (this.addPetBtn.visible = !1, 
            this.choosePetLabel.visible = !1), GlobalConfig.ins().PetConfig[t]) {
                var s = GlobalConfig.ins().PetConfig[t][0];
                this.headIcon.source = "petFace_json." + s.avatar, this.headBg.source = PetHeadInfoCell.qulityBg[s.star];
            }
        } else this.addPetBtn.visible = !1, this.skillIcon1.visible = !1, this.skillIcon2.visible = !1, 
        this.skillBg1.visible = !1, this.skillBg2.visible = !1, this.skillList = [], "pet" == this.currentState && (this.choosePetLabel.visible = !0, 
        this.addPetBtn.visible = !0), this.headIcon.source = "";
        this.petId = t;
    }, e.prototype.clear = function() {
        this.setData(0);
    }, Object.defineProperty(e.prototype, "matchState1", {
        get: function() {
            return this.select1.visible;
        },
        enumerable: !0,
        configurable: !0
    }), Object.defineProperty(e.prototype, "matchState2", {
        get: function() {
            return this.select2.visible;
        },
        enumerable: !0,
        configurable: !0
    }), e.prototype.matchSkill1 = function(t) {
        this.select1 && (this.select1.visible = t, t ? (this.skillIcon1.alpha = 1, this.skillBg1.alpha = 1) : (this.skillIcon1.alpha = .5, 
        this.skillBg1.alpha = .5));
    }, e.prototype.matchSkill2 = function(t) {
        this.select2 && (this.select2.visible = t, t ? (this.skillIcon2.alpha = 1, this.skillBg2.alpha = 1) : (this.skillIcon2.alpha = .5, 
        this.skillBg2.alpha = .5));
    }, e.prototype.reset = function() {
        this.skillIcon1.alpha = 1, this.skillBg1.alpha = 1, this.skillIcon2.alpha = 1, this.skillBg2.alpha = 1, 
        this.select2.visible = this.select1.visible = !1;
    }, e.prototype.resetNull = function() {
        this.matchSkill1(!1), this.matchSkill2(!1);
    }, e;
}(BaseView);

__reflect(PetArrayedItem.prototype, "PetArrayedItem");

window.PetArrayedItem = PetArrayedItem;

var PetHeadInfoCell = function(t) {
    function e() {
        var e = t.call(this) || this;
        e.arrStar = [], e.skinName = "PetHeadSkin";
        for (var i = 0; i < e.starGroup.numChildren; i++) e.arrStar.push(e.starGroup.getChildAt(i));
        return e;
    }
    return __extends(e, t), e.prototype.petID = function(t, i) {
        if (t && GlobalConfig.ins().PetConfig[t]) {
            var n = GlobalConfig.ins().PetConfig[t][0];
            this.headBg.source = e.qulityBg[n.star], this.headIcon.source = n.avatar, i ? this.setStar(n.star) : this.setStar(0);
        } else this.headBg.source = e.qulityBg[0], this.headIcon.source = null, this.setStar(0);
    }, e.prototype.setStar = function(t) {
        var e = this.starGroup.numElements, i = e - t;
        if (!(0 > i || 0 > t)) {
            this.starGroup.removeChildren();
            for (var n = 0; t > n; n++) this.starGroup.addChild(this.arrStar[n]);
        }
    }, e.qulityBg = [ "", "gy_bg_12", "gy_bg_12c", "gy_bg_12b", "gy_bg_12d", "gy_bg_12e", "gy_bg_12a" ], 
    e;
}(BaseView);

__reflect(PetHeadInfoCell.prototype, "PetHeadInfoCell");

window.PetHeadInfoCell = PetHeadInfoCell;

var PetSkillItemRender = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "PetSkillItemSkin", e.isChoose = !1, e.addEventListener(egret.TouchEvent.TOUCH_BEGIN, e.onClick, e), 
        e;
    }
    return __extends(e, t), e.prototype.onClick = function(t) {
        this.unlock && (ViewManager.ins().open(PutSkillListWin, this.skillId, this.pos), 
        this.isChoose = !0);
    }, e.prototype.childrenCreated = function() {
        this.init();
    }, e.prototype.init = function() {
        this.addBtn.visible = !0, this.termLabel.text = "";
    }, Object.defineProperty(e.prototype, "data", {
        get: function() {
            return this.skillId;
        },
        set: function(t) {
            if (this.unlock) if (this.skillId = t, t) {
                var e = GlobalConfig.ins().SkillsConfig(t);
                e && (this.icon.source = e.icon + "", this.addBtn.visible = !1, this.termLabel.text = e.skinName);
            } else this.addBtn.visible = !0, this.termLabel.text = "", this.icon.source = "";
        },
        enumerable: !0,
        configurable: !0
    }), e.prototype.setLimitLv = function(t) {
        var e = SubRoles.ins().getPetRoleData();
        e && e.petData && t <= e.petData.lv ? (this.unlock = !0, this.addBtn.visible = !this.data, 
        this.termLabel.text = "") : (this.unlock = !1, this.termLabel.text = "通灵术\n" + t + "级开锁", 
        this.addBtn.visible = !1, this.icon.source = null);
    }, e.prototype.destruct = function() {
        this.removeEventListener(egret.TouchEvent.TOUCH_BEGIN, this.onClick, this);
    }, e;
}(BaseView);

__reflect(PetSkillItemRender.prototype, "PetSkillItemRender");

window.PetSkillItemRender = PetSkillItemRender;

var PetSkillItemRender3 = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "PetSkillItemSkin2", e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.init();
    }, e.prototype.init = function() {
        this.checkBox.visible = !1, this.addTouchEvent(this.checkBox, this.onTou);
    }, e.prototype.onTou = function() {
        PetSys.ins().postChooseXilianSkill(this.data, this.checkBox.selected);
    }, Object.defineProperty(e.prototype, "isCheck", {
        set: function(t) {
            this.checkBox.selected || (this.checkBox.visible = t);
        },
        enumerable: !0,
        configurable: !0
    }), Object.defineProperty(e.prototype, "data", {
        get: function() {
            return this._skillId;
        },
        set: function(t) {
            this.checkBox.selected = !1, this._skillId = t;
            var e = GlobalConfig.ins().PetTaskSkillConfig[this.data];
            this.skillIcon.source = e.icon + "", this.isTXSkill ? this.displayLabel.text = e.petjn : this.displayLabel.text = e.petjn + "\n\n" + e.desc;
        },
        enumerable: !0,
        configurable: !0
    }), e;
}(BaseView);

__reflect(PetSkillItemRender3.prototype, "PetSkillItemRender3");

window.PetSkillItemRender3 = PetSkillItemRender3;

var ActivityIcon = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.icon_list = {}, e.defaultIcon = "zjm_new_btn5", e.yuanguIcon = "zjm_new_btn24", 
        e.skinName = "ActivityIconSkin", e.eff = new MovieClip(), e.iconRedPoint = new ActivityIconRedPoint(e.redPoint), 
        e.icon_list[0] = "zjm_new_btn7", e.icon_list[1] = "zjm_new_btn6", e.icon_list[8] = "zjm_new_btn30", 
        e.icon_list[9] = "zjm_new_btn34", e.icon_list[10] = "zjm_new_btn39", e;
    }
    return __extends(e, t), e.prototype.open = function() {
        this.addTouchEvent(this.iconBtn, this.onOpenClick), this.observe(PlayHall.ins().postActivityStart, this.setData), 
        this.observe(PlayHall.ins().postActivityEnd, this.setData), this.observe(WorldBoss.ins().postActivityEnd, this.setData), 
        this.observe(GameLogic.ins().postLevelChange, this.checkShowIcon), this.observe(YuanGuBoss.ins().postBaseInfo, this.setData), 
        this.setData(), YuanGuBossData.ins().isOpen && YuanGuBoss.ins().sendBarValue(), 
        this.iconRedPoint.open(), this.checkShowIcon();
    }, e.prototype.close = function() {
        this.removeObserve(), this.removeEvents(), TimerManager.ins().remove(this.updateTime, this), 
        TimerManager.ins().remove(this.updateBossTime, this), this.iconRedPoint.close();
    }, e.prototype.checkShowIcon = function() {
        this.visible = Actor.level >= GlobalConfig.ins().Systemlimit[SystemlimitID.ID18].levelLimit;
    }, e.prototype.setData = function() {
        if (YuanGuBossData.ins().getPublicValue()) TimerManager.ins().remove(this.updateBossTime, this), 
        TimerManager.ins().remove(this.updateTime, this), TimerManager.ins().doTimer(1e3, 0, this.updateBossTime, this), 
        this.iconBtn.icon = this.yuanguIcon; else {
            if (this.curId = PlayHall.ins().curId, -1 != PlayHall.ins().curId) {
                GlobalConfig.ins().WanfaConfig[this.curId];
                this.icon_list[this.curId] ? this.iconBtn.icon = this.icon_list[this.curId] : this.iconBtn.icon = this.defaultIcon;
            } else this.iconBtn.icon = this.defaultIcon;
            this.showState(), TimerManager.ins().remove(this.updateBossTime, this);
        }
        this.showEff();
    }, e.prototype.showState = function() {
        TimerManager.ins().remove(this.updateTime, this), this.countTime = PlayHall.ins().time > 0 ? 1e3 * PlayHall.ins().time + egret.getTimer() : -1, 
        0 == PlayHall.ins().time ? this.timeTxt.text = "活动中..." : PlayHall.ins().time > 0 ? (this.timeTxt.text = "", 
        TimerManager.ins().doTimer(500, 0, this.updateTime, this), this.updateTime()) : this.timeTxt.text = "";
    }, e.prototype.showEff = function() {
        0 == PlayHall.ins().isShowEff || YuanGuBossData.ins().getRedPoint() ? (this.addChild(this.eff), 
        this.eff.x = this.iconBtn.width / 2 + 6, this.eff.y = this.iconBtn.height / 2 + 1, 
        this.eff.playFile(ResPath.getUIEffectPath(UiEffectType.Type5), -1)) : (this.eff.stop(), 
        DisplayUtils.removeFromParent(this.eff));
    }, e.prototype.updateTime = function() {
        var t = Math.floor((this.countTime - egret.getTimer()) / 1e3);
        return PlayHall.ins().curId == PlayHallConst.ID1 && t > 10 * DateUtils.SECOND_PER_MUNITE ? void (this.timeTxt.text = "20:00点开启") : 0 >= t ? (this.timeTxt.text = "活动中...", 
        void TimerManager.ins().remove(this.updateTime, this)) : void (this.timeTxt.text = DateUtils.getFormatBySecond(t, DateUtils.TIME_FORMAT_3) + "后开启");
    }, e.prototype.updateBossTime = function() {
        var t = Math.floor((YuanGuBossData.ins().totalTime - egret.getTimer()) / 1e3);
        return 0 >= t ? void (this.timeTxt.text = "") : void (this.timeTxt.text = DateUtils.getFormatBySecond(t, DateUtils.TIME_FORMAT_10));
    }, e.prototype.onOpenClick = function(t) {
        ViewManager.ins().open(PlayHallWin);
    }, e;
}(BaseView);

__reflect(ActivityIcon.prototype, "ActivityIcon");

window.ActivityIcon = ActivityIcon;

var BusinessIcon = function(t) {
    function e() {
        var e = t.call(this) || this;
        for (e.ruleList = {}, e.skinName = "BusinessIconSkin"; e.btnCon.numChildren > 0; ) e.btnCon.removeChildAt(0);
        return RuleIconBase.thisUpdate_Business = e.updateRuleAndSort, RuleIconBase.thisObj_Business = e, 
        e.addRuleList(new LotteryIconRule(e.smallBtn0, e)), e.addRuleList(new BoxIconRule(e.smallBtn2, e)), 
        e.addRuleList(new ConsumeRankRule(e.smallBtn3, e)), e.addRuleList(new LuckyGuyIconRule(e.smallBtn4, e)), 
        e.addRuleList(new EggIconRule(e.eggBtn, e)), e.addRuleList(new LuckyNumRule(e.smallBtn1, e)), 
        e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addAllTouchEvent(), this.addAllRuleEvent(), this.sendRuleEvent(), this.updateRules();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeObserve(), this.removeRuleEvent();
    }, e.prototype.show = function(t, e, i) {
        if (this.x = t, this.y = e, this.type = i, 1 == this.type) {
            var n = new eui.VerticalLayout();
            n.gap = 0, this.btnCon.layout = n;
        } else {
            var s = new eui.HorizontalLayout();
            this.btnCon.layout = s;
        }
        this.sortBtn();
    }, e.prototype.hide = function() {
        DisplayUtils.removeFromParent(this);
    }, e.prototype.onTap = function(t) {
        if (t && t.currentTarget) {
            var e = t.currentTarget;
            if (this.hide(), this.ruleList[e.hashCode]) return void this.ruleList[e.hashCode].tapExecute();
        }
    }, e.prototype.addRuleList = function(t) {
        this.ruleList[t.tar.hashCode] = t;
    }, e.prototype.addAllTouchEvent = function() {
        for (var t in this.ruleList) {
            var e = this.ruleList[t];
            this.addTouchEvent(e.tar, this.onTap);
        }
    }, e.prototype.addAllRuleEvent = function() {
        for (var t in this.ruleList) {
            var e = this.ruleList[t];
            e.addEvents();
        }
    }, e.prototype.sendRuleEvent = function() {
        if (e.isRequest) {
            for (var t in this.ruleList) {
                var i = this.ruleList[t];
                i.sendEvent();
            }
            e.isRequest = !1;
        }
    }, e.prototype.removeRuleEvent = function() {
        for (var t in this.ruleList) {
            var e = this.ruleList[t];
            e.removeEvent();
        }
    }, e.prototype.updateRules = function() {
        var t = this;
        egret.callLater(function() {
            t.startUpdateRule();
        }, this);
    }, e.prototype.startUpdateRule = function() {
        for (var t in this.ruleList) this.updateRule(this.ruleList[t]);
    }, e.prototype.updateRuleAndSort = function(t, e) {
        this.updateRule(t, e);
    }, e.prototype.updateRule = function(t, e) {
        var i = t.tar, n = t.checkShowIcon(), s = 0;
        n ? (this.btnCon.addChild(i), i.redPoint && (s = t.checkShowRedPoint(e), i.redPoint.visible = s, 
        i.count && (i.count.text = s ? s : ""))) : DisplayUtils.removeFromParent(i), this.sortBtn();
    }, e.prototype.sortBtn = function() {
        for (var t in this.ruleList) {
            var e = this.ruleList[t];
            e.tar.parent == this.btnCon && this.btnCon.setChildIndex(e.tar, e.layerCount);
        }
        1 == this.type ? (this.bgImg.height = this.btnCon.y + this.btnCon.height + 10, this.bgImg.width = 108) : (this.bgImg.height = 97, 
        this.bgImg.width = this.btnCon.x + this.btnCon.width + 10);
    }, e.isRequest = !0, e;
}(BaseView);

__reflect(BusinessIcon.prototype, "BusinessIcon");

window.BusinessIcon = BusinessIcon;

var GuangqiaIconView = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.list1 = [], e.skinName = "GuangqiaIconSkin", e.resetList(), e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.init();
    }, e.prototype.init = function() {}, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEvent(this.btn, this.onClick), this.observe(GameLogic.ins().postEnterMap, this.updateData), 
        this.observe(UserFb.ins().postWaveChange, this.updateData), this.observe(UserFb.ins().postGuanqiaFlagChange, this.updateRedPoint), 
        this.observe(LingChong.ins().postBaseInfo, this.updateData), this.observe(ZhenBaoSystem.ins().postServerData1, this.updateData), 
        this.observe(ZhenBaoSystem.ins().postServerData5, this.updateData), this.observe(Eye.ins().postUpgrade, this.updateData), 
        this.updateData(), UserFb.ins().sendGuanqiaFlag();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeObserve();
    }, e.prototype.updateRedPoint = function() {
        var t = UserFb.ins().guanqiaFlag;
        this.redPoint.visible = -1 != t;
    }, e.prototype.checkEffect = function() {
        var t = UserFb.ins().guanqiaID, e = -1;
        if (this.guideData && this.guideData.isShowMc) e = UiEffectType.Type15; else if (t >= 0) {
            var i = GlobalConfig.ins().ChaptersConfig(t), n = Math.min(UserFb.ins().wave, i.bossNeedWave), s = i.bossNeedWave;
            n == s && (e = this.guideData ? UiEffectType.Type15 : UiEffectType.Type2);
        }
        -1 != e ? this.addEffect(e) : this.removeEffect();
    }, e.prototype.addEffect = function(t) {
        this.btnEff || (this.btnEff = new MovieClip());
        var e = 0, i = 0;
        switch (t) {
          case UiEffectType.Type2:
            i = 7;
        }
        this.btnEff.playFile(ResPath.getUIEffectPath(t), -1), this.btn.addChild(this.btnEff), 
        this.btnEff.x = (this.btn.width >> 1) + e, this.btnEff.y = (this.btn.height >> 1) + i;
    }, e.prototype.removeEffect = function() {
        this.btnEff && (this.btnEff.stop(), DisplayUtils.removeFromParent(this.btnEff));
    }, e.prototype.updateData = function() {
        if (this.updateRedPoint(), this.guideData = this.getShowTips(), this.checkEffect(), 
        !this.guideData) {
            var t = UserFb.ins().guanqiaID;
            return this.txt.text = t + "", this.btn.icon = "zjm_bg13", void this.stopGuide();
        }
        this.guideData.isShowMc ? (this.txt.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(LangManager.lingchong_str5, this.guideData.name)), 
        this.showGuide(), this.tipsTxt.text = "激活" + this.getTipsName(this.guideData.id)) : (this.txt.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(LangManager.lingchong_str0, this.guideData.dis)), 
        this.stopGuide()), this.btn.icon = this.getTipsIcon(this.guideData.id);
    }, e.prototype.showGuide = function() {
        this.mc || (this.mc = new MovieClip(), this.mcCon.addChild(this.mc), this.mc.x = this.mcCon.width >> 1, 
        this.mc.y = this.mcCon.height >> 1), this.mc.playFile(ResPath.getUIEffectPath(UiEffectType.Type15), -1), 
        this.guideTips.visible = !0, this.tweenHand();
    }, e.prototype.tweenHand = function(t) {
        if (void 0 === t && (t = 500), this.guideTips) {
            egret.Tween.removeTweens(this.guideTips);
            var e = egret.Tween.get(this.guideTips);
            e && e.to({
                x: -150
            }, t).to({
                x: -172
            }, t).call(this.tweenHand, this);
        }
    }, e.prototype.stopGuide = function() {
        egret.Tween.removeTweens(this.guideTips), this.mc && (this.mc.stop(), DisplayUtils.removeFromParent(this.mc), 
        this.mc = null), this.guideTips.visible = !1;
    }, e.prototype.onClick = function(t) {
        if (!this.guideData || !this.guideData.isShowMc) return void ViewManager.ins().open(GuanQiaRewardWin);
        switch (this.guideData.id) {
          case 1:
            ViewManager.ins().open(LingChongMainWin);
            break;

          case 2:
            ViewManager.ins().open(ZhenBaoSystemWin);
            break;

          case 3:
            ViewManager.ins().open(EyeWin);
        }
        this.stopGuide();
    }, e.prototype.resetList = function() {
        for (var t in GlobalConfig.ins().GuanQiaYuGaoconfig) for (var e = 0; e < GlobalConfig.ins().GuanQiaYuGaoconfig[t].length; e++) {
            var i = GlobalConfig.ins().GuanQiaYuGaoconfig[t][e];
            this.list1.push(i);
        }
        this.list1.sort(this.sortData);
    }, e.prototype.sortData = function(t, e) {
        return t.sortIndex > e.sortIndex ? 1 : t.sortIndex < e.sortIndex ? -1 : 0;
    }, e.prototype.getShowTips = function() {
        for (var t = new LingchongGuideData(), e = UserFb.ins().guanqiaID, i = 0; i < this.list1.length; i++) {
            var n = this.list1[i];
            if (e < n.guanqia) return t.dis = n.guanqia - e, t.id = n.id, t.index = n.index, 
            t;
            if (this.isTips(n.id, n.index, t)) return t;
        }
        return null;
    }, e.prototype.isTips = function(t, e, i) {
        var n = "", s = SubRoles.ins().getSubRoleByIndex(0);
        switch (t) {
          case 1:
            if (LingChongManager.ins().getIsActivity(MuChangManager.ins().LINGCHONG_ID1)) break;
            var a = s.getLingChongData(MuChangManager.ins().LINGCHONG_ID1), o = GlobalConfig.ins().LingChongActivityConfig[MuChangManager.ins().LINGCHONG_ID1];
            1 == e && a.activityPart < 1 && this.getIsEnough(1) ? n = o[0].name : 2 == e && a.activityPart < 2 && this.getIsEnough(2) ? n = o[1].name : 3 == e && a.activityPart < 3 && this.getIsEnough(3) ? n = o[2].name : 4 == e && a.activityPart < 4 && this.getIsEnough(4) && (n = o[3].name);
            break;

          case 2:
            var r = ZhenBaoSystemManager.ins().getServerData(1, 1);
            if (!r || r.isActivity) break;
            if (this.getZhenbaoEnough(r.tabId, r.itemId)) {
                var h = GlobalConfig.ins().ZhenBaoActivityCfg[r.tabId][r.itemId - 1];
                n = h.name;
            }
            break;

          case 3:
            if (!s) break;
            var l = s.eyeData[EyeID.Hu];
            if ((void 0 == l || isNaN(l) || 0 >= l) && this.getMijiEnough(EyeID.Hu, 0)) {
                var u = EyeConfigMgr.ins().getBaseCfg(EyeID.Hu);
                n = u.name;
            }
        }
        return "" != n && (i.name = n, i.id = t, i.index = e, i.isShowMc = !0), "" != n;
    }, e.prototype.getTipsName = function(t) {
        switch (t) {
          case 1:
            return "灵宠";

          case 2:
            var e = ZhenBaoSystemManager.ins().getServerData(1, 1);
            if (!e || e.isActivity) return "";
            var i = GlobalConfig.ins().ZhenBaoActivityCfg[e.tabId][e.itemId - 1];
            return i.name;

          case 3:
            var n = EyeConfigMgr.ins().getBaseCfg(EyeID.Hu);
            return n.name;
        }
    }, e.prototype.getTipsIcon = function(t) {
        switch (t) {
          case 1:
            return "lingchong_bg9_png";

          case 2:
            return "lingchong_bg11_png";

          case 3:
            return "lingchong_bg12_png";
        }
    }, e.prototype.getIsEnough = function(t) {
        var e = GlobalConfig.ins().LingChongActivityConfig[MuChangManager.ins().LINGCHONG_ID1][t - 1], i = UserBag.ins().getBagGoodsCountById(0, e.itemId);
        return i >= e.cost;
    }, e.prototype.getZhenbaoEnough = function(t, e) {
        if (!GlobalConfig.ins().ZhenBaoActivityCfg[t]) return !1;
        var i = GlobalConfig.ins().ZhenBaoActivityCfg[t][e - 1], n = UserBag.ins().getBagGoodsCountById(0, i.item.id);
        return n >= i.item.count;
    }, e.prototype.getMijiEnough = function(t, e) {
        var i = GlobalConfig.ins().EyeBaseConfig[t], n = null;
        n = EyeConfigMgr.ins().getUpgradeCfg(t, e);
        var s = null;
        if (s = EyeConfigMgr.ins().getUpgradeCfg(t, e + 1), !s) return !1;
        var a = n.cost, o = i.costItem, r = UserBag.ins().getBagGoodsCountById(0, o);
        return r >= a;
    }, e;
}(BaseView);

__reflect(GuangqiaIconView.prototype, "GuangqiaIconView");

window.GuangqiaIconView = GuangqiaIconView;

var WanfaYugaoView = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "WanfaYugaoSkin", e.visible = !1, e.eff = new MovieClip(), e;
    }
    return __extends(e, t), e.prototype.open = function() {
        this.addTouchEvent(this, this.onOpenClick), this.observe(PlayHall.ins().postActivityStart, this.setData), 
        this.observe(PlayHall.ins().postActivityEnd, this.setData), this.setData();
    }, e.prototype.close = function() {
        this.removeObserve(), this.removeEvents();
    }, e.prototype.setData = function() {
        if (this.curId = PlayHall.ins().curId, -1 != PlayHall.ins().curId) {
            this.visible = !0;
            var t = GlobalConfig.ins().WanfaConfig[this.curId];
            this.titleTxt.text = t.title;
            var e = WanfaConfig.getCurOpenTimeStr(this.curId);
            this.timeTxt.text = e[0] + "-" + e[1], this.resize();
        } else this.visible = !1;
        this.showEff();
    }, e.prototype.showEff = function() {
        0 == PlayHall.ins().isShowEff ? (this.eff.playFile(ResPath.getUIEffectPath(UiEffectType.Type29), -1), 
        this.addChild(this.eff), this.eff.x = (this.width >> 1) - 16, this.eff.y = (this.height >> 1) - 1) : (this.eff.stop(), 
        DisplayUtils.removeFromParent(this.eff));
    }, e.prototype.resize = function() {
        this.timeTxt.x = this.titleTxt.x + this.titleTxt.width + 20, this.bg.width = this.timeTxt.x + this.timeTxt.width + 10 - this.bg.x;
    }, e.prototype.onOpenClick = function(t) {
        var e = GlobalConfig.ins().WanfaConfig[this.curId];
        ViewManager.ins().open(e.win[0], e.win[1]);
    }, e;
}(BaseView);

__reflect(WanfaYugaoView.prototype, "WanfaYugaoView");

window.WanfaYugaoView = WanfaYugaoView;

var PokeItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "PokeItemSkin", e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.expBar.visible = !1, this.activeTxt.visible = !1, this.attrPower.visible = !1;
    }, e.prototype.updateInfo = function() {
        var t = PokeData.ins(), e = t.getPokeLv(t.curTypeIndex, t.curGroupIndex, t.curPokeIndex), i = t.getPokeVo(t.curTypeIndex, t.curGroupIndex, t.curPokeIndex, e);
        this.nameTxt.text = i.pokeName;
        GlobalConfig.ins().PokeCommonConfig.pokeLevelMax;
        e > 0 ? (this.lvTxt.text = LangManager.getLang(LangManager.commonStr18, e), this.shadow.visible = !1) : (this.shadow.visible = !0, 
        this.lvTxt.visible = !1);
    }, e;
}(BaseView);

__reflect(PokeItem.prototype, "PokeItem");

window.PokeItem = PokeItem;

var PrettyGiftWin = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e._index = -1, e.data = PrettyGiftData.ins(), e.skinName = "PrettyGiftSkin", 
        e.list.dataProvider = new eui.ArrayCollection(), e.list.itemRenderer = ItemBase, 
        e.giftList.dataProvider = new eui.ArrayCollection(), e.giftList.itemRenderer = PrettyGiftItemRender, 
        e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.giftList.addEventListener(egret.Event.CHANGE, this.setSelectedIndex, this), 
        this.addTouchEvent(this.buyBtn, this.onClick), this.observe(Recharge.ins().postDataInfo, this.upBaseInfo), 
        this.upBaseInfo();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeEvents(), this.removeObserve();
    }, e.prototype.upBaseInfo = function() {
        var t = PrettyGiftData.ins().checkShowIcon();
        if (t) {
            var i = GlobalConfig.ins().TehuiAwardConfig, n = i[PrettyGiftData.ins().pushLenght()].pay;
            LocationProperty.isTaiWan ? this.hasRecharge.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(LangManager.prettygift_str1, this.data.rechargeNum / 10 * Currency.TB, n / 10 * Currency.TB)) : this.hasRecharge.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(LangManager.prettygift_str0, this.data.rechargeNum / 10, n / 10));
            var s = [];
            for (var a in i) i.hasOwnProperty(a) && s.push(i[a]);
            this.giftList.dataProvider = new eui.ArrayCollection(s);
            for (var o = void 0, r = void 0, h = PrettyGiftData.ins().pushLenght(), l = 0; h > l; l++) {
                if (o = BitUtil.getBitValue(PrettyGiftData.ins().flag, l), !o) {
                    this._index = l;
                    break;
                }
                if (l + 1 == h) o && (this._index = l); else if (r = BitUtil.getBitValue(PrettyGiftData.ins().flag, l + 1), 
                o && !r) {
                    this._index = l + 1;
                    break;
                }
            }
            this.giftList.selectedIndex = this._index, this.upGiftInfo(this._index);
        } else ViewManager.ins().isShow(e) && (ViewManager.ins().close(e), UserTips.ins().showTips("|C:0xff0000&T:特惠礼包活动已关闭|"));
        this.updateTime();
    }, e.prototype.upGiftInfo = function(t) {
        var e = GlobalConfig.ins().TehuiAwardConfig;
        this.imgShow.source = "prettygift_show" + (t + 1) + "_png", this.list.dataProvider = new eui.ArrayCollection(e[t + 1].awardList);
        var i = BitUtil.getBitValue(this.data.flag, t);
        this.data.rechargeNum >= e[t + 1].pay ? i ? (this.buyBtn.enabled = !1, this.buyBtn.icon = "rebatehall_title1", 
        this.buyBtn.filters = [ ColorUtil.colorMat ], this.redpoint.visible = !1) : (this.buyBtn.enabled = !0, 
        this.buyBtn.icon = "rebatehall_title1", this.buyBtn.filters = [], this.redpoint.visible = !0) : (this.buyBtn.enabled = !0, 
        this.buyBtn.icon = "prettygift_title5", this.buyBtn.filters = [], this.redpoint.visible = !1);
    }, e.prototype.onClick = function(t) {
        switch (t.target) {
          case this.buyBtn:
            var e = GlobalConfig.ins().TehuiAwardConfig[this.giftList.selectedIndex + 1].pay;
            BitUtil.getBitValue(this.data.flag, this.giftList.selectedIndex);
            this.data.rechargeNum < e ? Recharge.ins().gameCharge(1) : Recharge.ins().sendPretty(this.giftList.selectedIndex + 1);
        }
    }, e.prototype.setSelectedIndex = function(t) {
        this.upGiftInfo(this.giftList.selectedIndex);
    }, e.prototype.updateTime = function() {
        var t = GameServer.serverTime, e = DateUtils.formatMiniDateTime(this.data.eTime), i = e - t;
        this.totalTime = i + egret.getTimer(), this.timeTxt.text = CountdownHelp.countdown1(this.data.sTime, this.data.eTime, this.totalTime);
    }, e.firstTap = !0, e;
}(BaseView);

__reflect(PrettyGiftWin.prototype, "PrettyGiftWin");

window.PrettyGiftWin = PrettyGiftWin;

var CrossConsumeAwardPanle = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "QdActivitySubRankAwardSkin7", e.rankList.itemRenderer = QdActivitySubRankAwardItem7, 
        e.listData = new eui.ArrayCollection(), e.rankList.dataProvider = e.listData, e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.observe(ZLActivity.ins().postActivityData, this.updateData), this.observe(ZLActivity.ins().postKfConsumeData, this.updateData), 
        ZLActivity.ins().sendKfConsumeInfo(), this.updateData();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeObserve();
    }, e.prototype.updateData = function() {
        this.ruleTxt.textFlow = TextFlowMaker.generateTextFlow(LangManager.qddb_str6);
        var t = ZLActivityData7.ins();
        if (t.data.awardId) {
            var e = GlobalConfig.ins().KfConsumeRankRewardConfig[t.data.awardId], i = [];
            for (var n in e) i.push(e[n]);
            this.listData.replaceAll(i);
            var s = DateUtils.formatMiniDateTime(t.data.eTime) - GameServer.serverTime;
            this.totalTime = s + egret.getTimer(), this.updateTime();
        }
    }, e.prototype.updateTime = function() {
        var t = ZLActivityData7.ins();
        this.timeTxt.text = CountdownHelp.countdown1(t.data.sTime, t.data.eTime, this.totalTime);
    }, e;
}(BaseView);

__reflect(CrossConsumeAwardPanle.prototype, "CrossConsumeAwardPanle");

window.CrossConsumeAwardPanle = CrossConsumeAwardPanle;

var CrossConsumeRankItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.playerId = 0, e.skinName = "QdActivitySubRankRoleItemSkin7", e.initUI(), 
        e;
    }
    return __extends(e, t), e.prototype.initUI = function() {
        this.roleFigure = new RoleFigure(), this.mcCon.addChild(this.roleFigure);
    }, e.prototype.setData = function(t) {
        t instanceof ZLActivityDataRank7 ? (this.currentState = "has", this.playerId = t.id, 
        this.rank.source = "qdactivity_crossrank" + t.index, 0 == t.id ? this.currentState = "no" : this.nameTxt.text = "" + t.nameStr) : "number" == typeof t && (this.currentState = "no", 
        this.nameTxt.text = "虚位以待", this.rank.source = "qdactivity_crossrank" + (t + 1));
    }, e.prototype.setRoleData = function(t) {
        this.roleFigure.setData(t.sex, t.getBodyResId(), t.getWeaponResId(), t.getFootResId(), t.wingsData.lv, t.wingsData.fiyUpLv, t.gangqisData.lv, t.gangqisData.fiyUpLv, 0, 0, t.fabaosData.lv, t.fabaosData.fiyUpLv, t.dragonData.dragonLv);
    }, e;
}(BaseView);

__reflect(CrossConsumeRankItem.prototype, "CrossConsumeRankItem");

window.CrossConsumeRankItem = CrossConsumeRankItem;

var CrossConsumeRankPanle = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "QdActivitySubRankInfoSkin7", e.rankList.itemRenderer = QdActivitySubRankInfoItem7, 
        e.rankList.dataProvider = new eui.ArrayCollection(), e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEvent(this.payBtn, this.onClick), this.observe(ZLActivity.ins().postKfConsumeData, this.updateData), 
        ZLActivity.ins().sendKfConsumeInfo();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeObserve(), this.removeEvents();
    }, e.prototype.updateData = function() {
        for (var t = ZLActivityData7.ins(), e = 0; 3 > e; e++) {
            var i = e + 1;
            this["pos" + i].textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(LangManager.qdkuafuconsume_str0, i)), 
            0 == t.rankList[e].id ? this["name" + i].text = "虚位以待" : this["name" + i].text = t.rankList[e].area + "区" + t.rankList[e].nameStr;
        }
        this.ybTxt.text = "当前消费元宝:" + t.consumeNum;
        for (var n = [], e = 3; e < t.rankList.length; e++) n.push(t.rankList[e]);
        this.rankList.dataProvider = new eui.ArrayCollection(n), 0 == t.selfRank ? this.myPos.text = "未上榜" : this.myPos.text = "" + t.selfRank;
        var s = DateUtils.formatMiniDateTime(t.data.eTime) - GameServer.serverTime;
        this.totalTime = s + egret.getTimer(), this.updateTime();
    }, e.prototype.onClick = function(t) {
        switch (t.target) {
          case this.payBtn:
            Recharge.ins().gameCharge(1);
        }
    }, e.prototype.updateTime = function() {
        var t = ZLActivityData7.ins();
        this.timeTxt.text = CountdownHelp.countdown1(t.data.sTime, t.data.eTime, this.totalTime);
    }, e;
}(BaseView);

__reflect(CrossConsumeRankPanle.prototype, "CrossConsumeRankPanle");

window.CrossConsumeRankPanle = CrossConsumeRankPanle;

var CrossConsumeTargetPanle = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "QdActivitySubRankTargetSkin7", e.rankList.itemRenderer = QdActivitySubRankTargetItem7, 
        e.listData = new eui.ArrayCollection(), e.rankList.dataProvider = e.listData, e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEvent(this.rankList, this.onClick), this.observe(ZLActivity.ins().postKfConsumeData, this.updateData), 
        this.observe(ZLActivity.ins().postActivityData, this.updateData), ZLActivity.ins().sendKfConsumeDbInfo(), 
        this.updateData();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeObserve();
    }, e.prototype.updateData = function() {
        this.ruleTxt.textFlow = TextFlowMaker.generateTextFlow(LangManager.qddb_str5);
        var t = ZLActivityData7.ins();
        if (t.data.awardId && !(t.day < 1)) {
            var e = GlobalConfig.ins().KfConsumeRewardConfig[t.data.awardId][t.day - 1], i = [];
            for (var n in e) i.push(e[n]);
            i.sort(this.sortData), this.listData.replaceAll(i);
            var s = DateUtils.formatMiniDateTime(t.eTime) - GameServer.serverTime;
            this.totalTime = s + egret.getTimer(), this.updateTime();
        }
    }, e.prototype.sortData = function(t, e) {
        var i = ZLActivityData7.ins(), n = 1 == (i.flag >> t.awardId & 1), s = 1 == (i.flag >> e.awardId & 1);
        return n && s || !n && !s ? t.id > e.id ? 1 : t.id < e.id ? -1 : 0 : n ? 1 : -1;
    }, e.prototype.onClick = function(t) {
        if (t.target instanceof eui.Button && t.target.parent instanceof QdActivitySubRankTargetItem7) {
            if (!t.target.parent.isCanGet) return void UserTips.ins().showTips("未达到条件");
            ZLActivity.ins().sendKfConsumeGet(t.target.parent.day, t.target.parent.index);
        }
    }, e.prototype.updateTime = function() {
        var t = ZLActivityData7.ins();
        this.timeTxt.text = CountdownHelp.countdown1(t.sTime, t.data.eTime, this.totalTime);
    }, e;
}(BaseView);

__reflect(CrossConsumeTargetPanle.prototype, "CrossConsumeTargetPanle");

window.CrossConsumeTargetPanle = CrossConsumeTargetPanle;

var QdActivityShop = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "QdActivityShopSkin", e.list.itemRenderer = QdActivityShopItem, 
        e.list.dataProvider = new eui.ArrayCollection(), e.limitList.itemRenderer = QdActivityShopLimitItem, 
        e.limitList.dataProvider = new eui.ArrayCollection(), e;
    }
    return __extends(e, t), e.prototype.initUI = function() {}, e.prototype.open = function() {
        for (var t = [], i = 0; i < arguments.length; i++) t[i] = arguments[i];
        this.addTouchEvent(this.refreshBtn, this.onTop), this.addTouchEvent(this.list, this.onTop), 
        this.observe(QdActivity.ins().postHuoyueTaskData, this.upData), QdActivity.ins().sendHuoyueShopData(), 
        TimerManager.ins().doTimer(1e3, 0, this.updateTime, this), e.firstTap || (e.firstTap = !0);
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeEvents(), this.removeObserve(), TimerManager.ins().remove(this.updateTime, this);
    }, e.prototype.upData = function() {
        var t = QdActivityData16.ins(), e = t.shopShowData();
        this.list.dataProvider = new eui.ArrayCollection(e), this.refreshBtn.label = GlobalConfig.ins().QdActivityCommonConfig.dbCstRfr + "刷新", 
        this.num.text = t.value + "", this.upLimieAward(), this.updateTime();
    }, e.prototype.upLimieAward = function() {
        for (var t = GlobalConfig.ins().QDDBStoreConfig[1], e = [], i = 0; i < t.length; i++) 0 != t[i].tmsMax && e.push(t[i]);
        this.limitList.dataProvider = new eui.ArrayCollection(e);
    }, e.prototype.onTop = function(t) {
        switch (t.target) {
          case this.refreshBtn:
            QdActivity.ins().sendHuoyueShopRefresh();
        }
        t.target instanceof eui.Button && t.target.parent instanceof QdActivityShopItem && QdActivity.ins().sendBuyHuoyueShop(t.target.parent.index);
    }, e.prototype.updateTime = function() {
        var t = QdActivityData16.ins();
        t.time > 0 ? this.timeTxt.text = DateUtils.getFormatBySecond(t.time, DateUtils.TIME_FORMAT_1) : QdActivity.ins().sendHuoyueShopData();
    }, e;
}(BaseView);

__reflect(QdActivityShop.prototype, "QdActivityShop");

window.QdActivityShop = QdActivityShop;

var QdActivitySubPanel15 = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.circle = 4, e.rationNum = 36, e.data = QdActivityData15.ins(), e.skinName = "QdActivitySubSkin15", 
        e.list.itemRenderer = QdActivitySubLogItem15, e.listData = new eui.ArrayCollection(), 
        e.list.dataProvider = e.listData, e.mc = new MovieClip(), e.mc.x = 252, e.mc.y = 275, 
        e.mc.scaleX = 1.5, e.mc.scaleY = 1.5, e;
    }
    return __extends(e, t), e.prototype.initUI = function() {}, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        MapView.specialRender = !0, this.addTouchEvent(this.lotteryBtn, this.onTop), this.observe(QdActivity.ins().postRoundData, this.upData), 
        this.observe(QdActivity.ins().postRoundResult, this.upRaffle), QdActivity.ins().sendRoundInfo(), 
        this.data.endBtn = !0;
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        MapView.specialRender = !1, this.removeEvents(), this.removeObserve(), egret.Tween.removeTweens(this.turntable);
    }, e.prototype.upData = function() {
        this.data = QdActivityData15.ins();
        var t = 0 != this.data.round ? this.data.round : this.data.maxRound();
        this.invest.visible = 0 != this.data.round, this.over.visible = 0 == this.data.round;
        var e = GlobalConfig.ins().QdActivityYbidConfig[t];
        if (e) {
            if (0 != this.data.round) {
                this.investNum.text = e.pay + "";
                var i = this.data.needRecahrge();
                this.data.recharge >= i ? this.targetTxt.text = "可抽奖" : this.targetTxt.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(LangManager.qddb_str3, i - this.data.recharge));
            }
            for (var n = [], s = 0; s < this.data.logArr.length; s++) this.data.logArr[s] && n.push(this.data.logArr[s]);
            this.list.dataProvider = new eui.ArrayCollection(n), this.round.source = "qdactivity_round" + t, 
            this.updateTime(), this.data.getredpoint() ? (this.mc.playFile(ResPath.getUIEffectPath(UiEffectType.Type27), -1), 
            this.addChild(this.mc)) : (this.mc.stop(), null != this.mc.parent && this.mc.parent.removeChild(this.mc));
            var a = GlobalConfig.ins().QdActivityYbRoundConfig[t];
            if (a) for (var s = 0; s < a.length; s++) a[s] && (this.setSkinPart("fold" + a[s].index, new QdActivitySubItem15()), 
            this["fold" + a[s].index].data = a[s]);
        }
    }, e.prototype.onTop = function(t) {
        switch (t.target) {
          case this.lotteryBtn:
            0 != this.data.round ? 1 == this.data.endBtn ? (this.data.endBtn = !1, this.mc && (this.mc.stop(), 
            null != this.mc.parent && this.mc.parent.removeChild(this.mc)), QdActivity.ins().sendRoundDraw()) : UserTips.ins().showTips("操作过于频繁") : UserTips.ins().showTips("|C:0xff0000&T:今日抽奖次数已达上限|");
        }
    }, e.prototype.end = function() {
        0 == this.data.endBtn && (QdActivity.ins().sendRoundData(), this.data.endBtn = !0);
    }, e.prototype.upRaffle = function() {
        if (0 != this.data.ifBtn) {
            var t = 360 * this.circle + (this.data.prizeNum - 1) * this.rationNum;
            0 == this.autoBuy.selected ? egret.Tween.get(this.turntable).to({
                rotation: t
            }, 5e3, egret.Ease.circOut).call(this.end, this) : this.end();
        }
    }, e.prototype.updateTime = function() {
        var t = QdActivityData15.ins();
        t.data = ZLActivity.ins().activityData[ZLActivityIndex.Index15 - 1];
        var e = DateUtils.formatMiniDateTime(t.data.eTime) - GameServer.serverTime;
        this.totalTime = e + egret.getTimer(), this.timeTxt.text = CountdownHelp.countdown1(t.data.sTime, t.data.eTime, this.totalTime);
    }, e;
}(BaseView);

__reflect(QdActivitySubPanel15.prototype, "QdActivitySubPanel15");

window.QdActivitySubPanel15 = QdActivitySubPanel15;

var QdActivitySubPanel16 = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.selectIndex = -1, e.skinName = "QdActivitySubSkin16", e.tab.itemRenderer = QdActivitySubDayItem16, 
        e.tab.dataProvider = new eui.ArrayCollection(), e.taskTab.itemRenderer = QdActivitySubTabItem16, 
        e.taskTab.dataProvider = new eui.ArrayCollection(), e.taskList.itemRenderer = QdActivitySubTaskItem16, 
        e.listData = new eui.ArrayCollection(), e.taskList.dataProvider = e.listData, e.standardList.itemRenderer = QdActivitySubStandarItem16, 
        e.standardList.dataProvider = new eui.ArrayCollection(), e;
    }
    return __extends(e, t), e.prototype.initUI = function() {}, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEvent(this.shopBtn, this.onTop), this.addTouchEvent(this.taskList, this.onTop), 
        this.addTouchEvent(this.taskTab, this.onTabTouch), this.observe(QdActivity.ins().postHuoyueTaskData, this.upData), 
        this.selectIndex = 0, this.tab.selectedIndex = this.selectIndex, this.sendData();
    }, e.prototype.sendData = function() {
        var t = QdActivityData16.ins();
        QdActivity.ins().sendHuoyueTaskData(), QdActivity.ins().sebdHuoyueTargetData(), 
        t.shopNum || t.shopArr || QdActivity.ins().sendHuoyueShopData();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeEvents(), this.removeObserve(), ViewManager.ins().isShow(QdActivityShop) && ViewManager.ins().close(QdActivityShop);
    }, e.prototype.upData = function() {
        var t = QdActivityData16.ins();
        if (t && (t.data = ZLActivity.ins().activityData[ZLActivityIndex.Index16 - 1], t.data)) {
            var e = t.getMaxDay();
            if (e) {
                for (var i = [], n = 1; e >= n; n++) i.push(n);
                this.tab.dataProvider = new eui.ArrayCollection(i);
                var s = GlobalConfig.ins().QDDBTaskThemeConfig[t.day];
                if (s) {
                    if (this.taskTab.dataProvider = new eui.ArrayCollection(s), t.data.awardId) {
                        var a = GlobalConfig.ins().QDDBAwardConfig[t.data.awardId];
                        if (!a) return;
                        this.standardList.dataProvider = new eui.ArrayCollection(a);
                    }
                    this.upTask(this.selectIndex), this.shopRedpoint.visible = !QdActivityShop.firstTap, 
                    this.num.text = t.totalVal + "", this.updateTime();
                }
            }
        }
    }, e.prototype.upTask = function(t) {
        var e = t + 1, i = QdActivityData16.ins();
        if (i) {
            var n = GlobalConfig.ins().QDDBTaskConfig, s = [];
            for (var a in n) n[a].idxDay == i.day && n[a].idxPge == e && s.push(n[a]);
            s.sort(this.sortData), this.listData.replaceAll(s), this.taskList.dataProvider = this.listData;
        }
    }, e.prototype.sortData = function(t, e) {
        var i = QdActivityData16.ins(), n = i.taskArr[t.idxAll - 1].isOver, s = i.taskArr[e.idxAll - 1].isOver;
        return n && s || !n && !s ? t.idxAll > e.idxAll ? 1 : t.idxAll < e.idxAll ? -1 : 0 : n ? 1 : -1;
    }, e.prototype.onTabTouch = function(t) {
        var e = t.currentTarget.selectedIndex;
        this.upTask(e);
    }, e.prototype.onTop = function(t) {
        switch (t.target) {
          case this.shopBtn:
            this.viewstack = new eui.ViewStack(), this.addChild(this.viewstack), this.qdactivityshop = new QdActivityShop(), 
            this.viewstack.addChild(this.qdactivityshop), this.qdactivityshop.open();
        }
        if (t.target instanceof eui.Button && t.target.parent instanceof QdActivitySubTaskItem16) {
            var e = GlobalConfig.ins().QDDBTaskConfig[t.target.parent.index];
            if (e) {
                var i = e.targetTask.tab >= 0 ? e.targetTask.tab : 0;
                ViewManager.ins().open(e.targetTask.win, i);
            }
        }
    }, e.prototype.updateTime = function() {
        var t = QdActivityData16.ins();
        if (t && (t.data = ZLActivity.ins().activityData[ZLActivityIndex.Index16 - 1], t.data)) {
            var e = DateUtils.formatMiniDateTime(t.data.eTime) - GameServer.serverTime;
            this.totalTime = e + egret.getTimer(), this.timeTxt.text = CountdownHelp.countdown1(t.data.sTime, t.data.eTime, this.totalTime), 
            t.time > 0 ? this.refreshShop.text = DateUtils.getFormatBySecond(t.time, DateUtils.TIME_FORMAT_1) + "后刷新" : 0 == t.shopCode && QdActivity.ins().sendHuoyueShopData();
        }
    }, e;
}(BaseView);

__reflect(QdActivitySubPanel16.prototype, "QdActivitySubPanel16");

window.QdActivitySubPanel16 = QdActivitySubPanel16;

var QdActivitySubPanel9 = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "QdActivitySubSkin9", e.listData = new eui.ArrayCollection(), 
        e.list.itemRenderer = QdActivitySubItem9, e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEndEvent(this.btnRecharge, this.onBtnClick), this.addTouchEvent(this.list, this.onBtnClick), 
        this.tab.addEventListener(egret.Event.CHANGE, this.setSelectedIndex, this), this.observe(QdActivity.ins().postRechargeData, this.updateData), 
        this.observe(ZLActivity.ins().postActivityData, this.updateData), this.tab.selectedIndex = 1, 
        QdActivity.ins().sendRechargeInfo();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeTouchEvent(this.btnRecharge, this.onBtnClick), this.removeTouchEvent(this.list, this.onBtnClick), 
        this.tab.removeEventListener(egret.Event.CHANGE, this.setSelectedIndex, this);
    }, e.prototype.updateData = function() {
        var t = QdActivityData9.ins();
        if (t.data = ZLActivity.ins().activityData[ZLActivityIndex.Index9 - 1], t.data) {
            this.updateIndex(this.tab.selectedIndex), this.hasRecharge.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(LangManager.rechargeStr1, t.totalRecharge));
            var e = DateUtils.formatMiniDateTime(t.data.eTime) - GameServer.serverTime;
            this.totalTime = e + egret.getTimer(), this.updateTime(), this.redpoint0.visible = t.getTabRedPoint(0), 
            this.redpoint1.visible = t.getTabRedPoint(1);
        }
    }, e.prototype.setSelectedIndex = function(t) {
        this.updateIndex(this.tab.selectedIndex);
    }, e.prototype.updateIndex = function(t) {
        for (var e = QdActivityData9.ins(), i = GlobalConfig.ins().QdActivityRechargeConfig[e.data.awardId][t], n = [], s = 0; s < i.length; s++) n[s] = i[s];
        n.sort(this.sortData), this.listData.replaceAll(n), this.list.dataProvider = this.listData;
    }, e.prototype.sortData = function(t, e) {
        var i, n, s = QdActivityData9.ins();
        return 1 == t.s_id ? (i = 1 == (s.flag1 >> t.index - 1 & 1), n = 1 == (s.flag1 >> e.index - 1 & 1)) : (i = 1 == (s.flag2 >> t.index - 1 & 1), 
        n = 1 == (s.flag2 >> e.index - 1 & 1)), i && n || !i && !n ? t.index > e.index ? 1 : t.index < e.index ? -1 : 0 : i ? 1 : -1;
    }, e.prototype.onBtnClick = function(t) {
        if (t.target instanceof eui.Button) if (t.target.parent instanceof QdActivitySubItem9) {
            if (!t.target.parent.isCanGet) return void UserTips.ins().showTips("未达到条件");
            QdActivity.ins().sendRechargeReward(t.target.parent.id, t.target.parent.index);
        } else t.target == this.btnRecharge && Recharge.ins().gameCharge(1);
    }, e.prototype.updateTime = function() {
        var t = QdActivityData9.ins();
        t.data = ZLActivity.ins().activityData[ZLActivityIndex.Index9 - 1], this.timeTxt.text = CountdownHelp.countdown1(t.data.sTime, t.data.eTime, this.totalTime);
    }, e;
}(BaseView);

__reflect(QdActivitySubPanel9.prototype, "QdActivitySubPanel9");

window.QdActivitySubPanel9 = QdActivitySubPanel9;

var QingmingSubItem2 = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "QingmingSubItemSkin2", e.setSkinPart("item", new ItemBase()), 
        e;
    }
    return __extends(e, t), e.prototype.open = function() {}, e.prototype.close = function() {}, 
    e.prototype.updateData = function(t) {
        this.item.data = t.awardList, this.isGetImg.visible = QingmingSubData2.ins().isGet(t.index), 
        this.item.setIconBg("common_grid2_png");
    }, e;
}(BaseView);

__reflect(QingmingSubItem2.prototype, "QingmingSubItem2");

window.QingmingSubItem2 = QingmingSubItem2;

var QingmingSubPanel0 = function(t) {
    function e() {
        var e = t.call(this) || this;
        e.skinName = "QingmingSubSkin0", e.list.itemRenderer = ItemBase;
        for (var i = NewYearActivityData0.ins().getQingmingArr(), n = 0; n < i.length; n++) e.setSkinPart("day" + i[n].day, new QingmingSubItem0()), 
        e["day" + i[n].day].data = i[n];
        return e;
    }
    return __extends(e, t), e.prototype.initUI = function() {}, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEndEvent(this.btnGet, this.onBtnClick), this.addTouchEndEvent(this.day1, this.onItemTouch), 
        this.addTouchEndEvent(this.day2, this.onItemTouch), this.addTouchEndEvent(this.day3, this.onItemTouch), 
        this.addTouchEndEvent(this.day4, this.onItemTouch), this.addTouchEndEvent(this.day5, this.onItemTouch), 
        this.observe(NewyearActivity.ins().postDataInfo, this.updateData), this.updateData();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeEvents(), this.removeObserve(), this.selectItem = null;
    }, e.prototype.updateData = function() {
        var t = NewYearActivityData0.ins();
        this.loginDayTxt.text = "登陆天数：" + t.day, this.selectIndex = this.getNextIndex(), 
        this.selectDay();
        var e = DateUtils.formatMiniDateTime(t.eTime) - GameServer.serverTime;
        this.totalTime = e + egret.getTimer(), this.updateTime();
    }, e.prototype.onItemTouch = function(t) {
        t.target.parent instanceof QingmingSubItem0 && (this.selectIndex = t.target.parent.day), 
        null != this.selectItem && (this.selectItem.selected = !1), this.selectDay();
    }, e.prototype.upDayItem = function() {
        var t = NewYearActivityData0.ins();
        if (t.day) {
            var e = t.getQingmingArr();
            if (e[0]) for (var i = 0; i < e.length; i++) this["day" + e[i].day].redPoint.visible = t.day >= e[i].day && 0 == (t.flag >> e[i].day & 1), 
            this["day" + e[i].day].imgGet.visible = 1 == (t.flag >> e[i].day & 1), this["day" + e[i].day].selected = this.selectIndex == this["day" + e[i].day].day;
        }
    }, e.prototype.selectDay = function() {
        this.upDayItem();
        var t = this.selectIndex, e = NewYearActivityData0.ins();
        if (e.day) {
            var i = e.getQingmingArr()[t - 1];
            i && (this.list.dataProvider = new eui.ArrayCollection(i.rewards), this.btnGet.visible = !e.getFlag(t), 
            this.imgGet.visible = !this.btnGet.visible, t > e.day ? (this.btnGet.icon = "rebatehall_title2", 
            this.btnGet.enabled = !1, this.btnGet.filters = [ ColorUtil.colorMat ]) : (this.btnGet.icon = "rebatehall_title1", 
            this.btnGet.enabled = !0, this.btnGet.filters = null));
        }
    }, e.prototype.getNextIndex = function() {
        for (var t, e = NewYearActivityData0.ins(), i = e.getQingmingArr(), n = 0; n < i.length; n++) {
            t = i[n];
            var s = e.day >= t.day && 0 == (e.flag >> t.day & 1);
            if (s) return t.day;
        }
        var a = i[i.length - 1].day;
        return e.day > a ? a : e.day;
    }, e.prototype.onBtnClick = function(t) {
        if (t.target == this.btnGet) {
            var e = this.selectIndex;
            NewyearActivity.ins().sendGetDayReward(e);
        }
    }, e.prototype.updateTime = function() {
        var t = NewYearActivityData0.ins();
        this.timeTxt.text = CountdownHelp.countdown1(t.sTime, t.eTime, this.totalTime);
    }, e;
}(BaseView);

__reflect(QingmingSubPanel0.prototype, "QingmingSubPanel0");

window.QingmingSubPanel0 = QingmingSubPanel0;

var QingmingSubPanel1 = function(t) {
    function e() {
        var e = t.call(this) || this;
        e.skinName = "QingmingSubSkin1";
        var i = GlobalConfig.ins().CZXBCommonConfig;
        e.buy1.label = "寻宝" + i.timesCost[0].times + "次", e.buy10.label = "寻宝" + i.timesCost[1].times + "次", 
        e.num1.text = i.timesCost[0].cost + "", e.num10.text = i.timesCost[1].cost + "";
        for (var n in GlobalConfig.ins().CZXBRewardShowConfig) e["item" + n] && (e.setSkinPart("item" + n, new ItemBase()), 
        e["item" + n].data = GlobalConfig.ins().CZXBRewardShowConfig[n].reward);
        return e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEndEvent(this.logBtn, this.onBtnClick), this.addTouchEndEvent(this.bagBtn, this.onBtnClick), 
        this.addTouchEndEvent(this.buy1, this.onBtnClick), this.addTouchEndEvent(this.buy10, this.onBtnClick), 
        this.observe(UserBag.ins().postHuntStore, this.updateBagRedPoint), this.observe(Hunt.ins().postTime5, this.updateData), 
        this.updateData(), this.updateBagRedPoint();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeEvents(), this.removeObserve();
    }, e.prototype.updateData = function() {
        this.updateTime();
    }, e.prototype.updateBagRedPoint = function() {
        var t = UserBag.ins().getHuntGoodsBySort();
        this.bagRedPointImg.visible = t.length > 0;
    }, e.prototype.onBtnClick = function(t) {
        switch (t.target) {
          case this.logBtn:
            ViewManager.ins().open(QingmingLogWin);
            break;

          case this.bagBtn:
            ViewManager.ins().open(HuntStoreWin, 0);
            break;

          case this.buy1:
            Hunt.ins().sendHunt3(1);
            break;

          case this.buy10:
            Hunt.ins().sendHunt3(2);
        }
    }, e.prototype.updateTime = function() {
        var t = QingmingSubData1.ins();
        this.timeTxt.text = CountdownHelp.countdown6(t.leftTime);
    }, e;
}(BaseView);

__reflect(QingmingSubPanel1.prototype, "QingmingSubPanel1");

window.QingmingSubPanel1 = QingmingSubPanel1;

var QiriQdActivityShop = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "QdActivityShopSkin", e.list.itemRenderer = QiriQdActivityShopItem, 
        e.list.dataProvider = new eui.ArrayCollection(), e.limitList.itemRenderer = QiriQdActivityShopLimitItem, 
        e.limitList.dataProvider = new eui.ArrayCollection(), e;
    }
    return __extends(e, t), e.prototype.initUI = function() {}, e.prototype.open = function() {
        for (var t = [], i = 0; i < arguments.length; i++) t[i] = arguments[i];
        this.addTouchEvent(this.refreshBtn, this.onTop), this.addTouchEvent(this.list, this.onTop), 
        this.observe(QiriQdActivity.ins().postHuoyueTaskData, this.upData), QiriQdActivity.ins().sendHuoyueShopData(), 
        TimerManager.ins().doTimer(1e3, 0, this.updateTime, this), e.firstTap || (e.firstTap = !0);
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeEvents(), this.removeObserve(), TimerManager.ins().remove(this.updateTime, this);
    }, e.prototype.upData = function() {
        var t = QiriQdActivityData2.ins(), e = t.shopShowData();
        this.list.dataProvider = new eui.ArrayCollection(e), this.refreshBtn.label = GlobalConfig.ins().QRDBCommonConfig.dbCstRfr + "刷新", 
        this.num.text = t.value + "", this.upLimieAward(), this.updateTime();
    }, e.prototype.upLimieAward = function() {
        var t = GlobalConfig.ins().QRDBStoreConfig, e = [];
        for (var i in t) 0 != t[i].tmsMax && e.push(t[i]);
        this.limitList.dataProvider = new eui.ArrayCollection(e);
    }, e.prototype.onTop = function(t) {
        switch (t.target) {
          case this.refreshBtn:
            QiriQdActivity.ins().sendHuoyueShopRefresh();
        }
        t.target instanceof eui.Button && t.target.parent instanceof QiriQdActivityShopItem && QiriQdActivity.ins().sendBuyHuoyueShop(t.target.parent.index);
    }, e.prototype.updateTime = function() {
        var t = QiriQdActivityData2.ins();
        t.time > 0 ? this.timeTxt.text = DateUtils.getFormatBySecond(t.time, DateUtils.TIME_FORMAT_1) : QiriQdActivity.ins().sendHuoyueShopData();
    }, e;
}(BaseView);

__reflect(QiriQdActivityShop.prototype, "QiriQdActivityShop");

window.QiriQdActivityShop = QiriQdActivityShop;

var QiriQdActivitySubPanel2 = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e._itemWidth = 97, e._tabMaxNum = 5, e.selectIndex = -1, e.skinName = "QiriQdActivitySubSkin2", 
        e.tab.itemRenderer = QiriQdActivitySubPanelDayItem2, e.tab.dataProvider = new eui.ArrayCollection(), 
        e.taskTab.itemRenderer = QiriQdActivitySubPanelTabItem2, e.taskTab.dataProvider = new eui.ArrayCollection(), 
        e.taskList.itemRenderer = QiriQdActivitySubPanleTaskItem2, e.listData = new eui.ArrayCollection(), 
        e.taskList.dataProvider = e.listData, e.standardList.itemRenderer = QiriQdActivitySubPanelStandarItem2, 
        e.standardList.dataProvider = new eui.ArrayCollection(), e;
    }
    return __extends(e, t), e.prototype.initUI = function() {}, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEvent(this.shopBtn, this.onTop), this.addTouchEvent(this.taskList, this.onTop), 
        this.addTouchEvent(this.taskTab, this.onTabTouch), this.observe(QiriQdActivity.ins().postHuoyueTaskData, this.upData), 
        this.selectIndex = 0, this.tab.selectedIndex = this.selectIndex, QiriQdActivity.ins().sendHuoyueTaskData(), 
        QiriQdActivity.ins().sebdHuoyueTargetData(), QiriQdActivity.ins().sendHuoyueShopData();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeEvents(), this.removeObserve(), ViewManager.ins().isShow(QiriQdActivityShop) && ViewManager.ins().close(QiriQdActivityShop);
    }, e.prototype.upData = function() {
        var t = QiriQdActivityData2.ins();
        if (t) {
            for (var e = t.getMaxDay(), i = [], n = 1; e >= n; n++) i.push(n);
            this.tab.dataProvider = new eui.ArrayCollection(i);
            var s = GlobalConfig.ins().QRDBTaskThemeConfig[t.day];
            this.taskTab.dataProvider = new eui.ArrayCollection(s);
            var a = GlobalConfig.ins().QRDBAwardConfig, o = [];
            for (var r in a) o.push(a[r]);
            this.standardList.dataProvider = new eui.ArrayCollection(o), this.upTask(this.selectIndex), 
            this.shopRedpoint.visible = !QiriQdActivityShop.firstTap, this.num.text = t.totalVal + "", 
            this.updateTime(), this.tab.validateNow();
            var h = this.tab.contentWidth - this.tab.width;
            if (!(0 >= h)) {
                var l = this._itemWidth * (t.day - 1);
                l > h ? this.tab.scrollH = h : this.tab.scrollH += l;
            }
        }
    }, e.prototype.upTask = function(t) {
        var e = t + 1, i = QiriQdActivityData2.ins(), n = GlobalConfig.ins().QRDBTaskConfig, s = [];
        for (var a in n) n[a].idxDay == i.day && n[a].idxPge == e && s.push(n[a]);
        s.sort(this.sortData), this.listData.replaceAll(s), this.taskList.dataProvider = this.listData;
    }, e.prototype.sortData = function(t, e) {
        var i = QiriQdActivityData2.ins(), n = i.taskArr[t.idxAll - 1].isOver, s = i.taskArr[e.idxAll - 1].isOver;
        return n && s || !n && !s ? t.idxAll > e.idxAll ? 1 : t.idxAll < e.idxAll ? -1 : 0 : n ? 1 : -1;
    }, e.prototype.onTabTouch = function(t) {
        var e = t.currentTarget.selectedIndex;
        this.upTask(e);
    }, e.prototype.onTop = function(t) {
        switch (t.target) {
          case this.shopBtn:
            this.viewstack = new eui.ViewStack(), this.addChild(this.viewstack), this.qdactivityshop = new QiriQdActivityShop(), 
            this.viewstack.addChild(this.qdactivityshop), this.qdactivityshop.open();
        }
        if (t.target instanceof eui.Button && t.target.parent instanceof QiriQdActivitySubPanleTaskItem2) {
            var e = GlobalConfig.ins().QRDBTaskConfig[t.target.parent.index];
            if (e) {
                var i = e.targetTask.tab >= 0 ? e.targetTask.tab : 0;
                ViewManager.ins().open(e.targetTask.win, i);
            }
        }
    }, e.prototype.updateTime = function() {
        var t = QiriQdActivityData2.ins();
        this.totalTime = 1e3 * t.totalTime + egret.getTimer(), this.timeTxt.text = CountdownHelp.countdown6(this.totalTime), 
        t.time > 0 ? this.refreshShop.text = DateUtils.getFormatBySecond(t.time, DateUtils.TIME_FORMAT_1) + "后刷新" : QiriQdActivity.ins().sendHuoyueShopData();
    }, e;
}(BaseView);

__reflect(QiriQdActivitySubPanel2.prototype, "QiriQdActivitySubPanel2");

window.QiriQdActivitySubPanel2 = QiriQdActivitySubPanel2;

var OtherRoleInfoPanel = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.curRole = 0, e.maxNum = 8, e.specialPartListSource = [ 5, 7, 6, 4 ], e.skinName = "OtherRoleInfoPanelSkin", 
        e.totalPower || (e.totalPower = BitmapNumber.ins().createNumPic(0, BitmapNumber.numType0, 10), 
        e.powerContainer.addChild(e.totalPower)), e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.init();
    }, e.prototype.init = function() {
        this.touchEnabled = !1, this.touchChildren = !0, this.roleFigure = new RoleFigure(), 
        this.groupRole.addChild(this.roleFigure), this.equips = [];
        for (var t = 0; t < this.maxNum; t++) this.equips[t] = this["item" + t], this.equips[t].touchEnabled = !0;
        this.zhuzaiEquips = [];
        for (var t = 0; t < ZhuzaiEquipPos.MAX; t++) this.zhuzaiEquips[t] = this["zhuzaiItem" + t], 
        this.zhuzaiEquips[t].touchEnabled = !0, this.zhuzaiEquips[t].setData("common_part" + this.specialPartListSource[t], ZhuzaiEquipPos.ZhuzaiEquipPosList[t], 0, 0, !1);
    }, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.otherPlayerData = t[0], this.addTouchEvent(this.fabao, this.onClick), this.addTouchEvent(this.zuji, this.onClick), 
        this.addTouchEvent(this.gangqi, this.onClick), this.addTouchEvent(this.moshen, this.onClick), 
        this.addTouchEvent(this.horse, this.onClick), this.addTouchEvent(this.wing, this.onClick), 
        this.updataEquip(), this.updateRoleFigure();
    }, e.prototype.onClick = function(t) {
        var e = this.otherPlayerData.roleData[0];
        switch (t.currentTarget) {
          case this.fabao:
            e.fabaosData.lv > 0 ? ViewManager.ins().open(OtherAdvanceFaBaoWin, e.fabaosData) : UserTips.ins().showTips(LangManager.getLang(LangManager.advanceStr55, LangManager.advanceStr4[1]));
            break;

          case this.zuji:
            e.zujisData.lv > 0 ? ViewManager.ins().open(OtherAdvanceZuJiWin, e.zujisData) : UserTips.ins().showTips(LangManager.getLang(LangManager.advanceStr55, LangManager.advanceStr4[2]));
            break;

          case this.gangqi:
            e.gangqisData.lv > 0 ? ViewManager.ins().open(OtherAdvanceGangQiWin, e.gangqisData) : UserTips.ins().showTips(LangManager.getLang(LangManager.advanceStr55, LangManager.advanceStr4[4]));
            break;

          case this.moshen:
            e.moshensData.lv > 0 ? ViewManager.ins().open(OtherAdvanceMoShenWin, e.moshensData) : UserTips.ins().showTips(LangManager.getLang(LangManager.advanceStr55, LangManager.advanceStr4[5]));
            break;

          case this.horse:
            e.horsesData.lv > 0 ? ViewManager.ins().open(OtherAdvanceHorseWin, e.horsesData) : UserTips.ins().showTips(LangManager.getLang(LangManager.advanceStr55, LangManager.advanceStr4[3]));
            break;

          case this.wing:
            e.wingsData.lv > 0 ? ViewManager.ins().open(OtherAdvanceWingWin, e.wingsData) : UserTips.ins().showTips(LangManager.getLang(LangManager.advanceStr55, LangManager.advanceStr4[0]));
        }
    }, e.prototype.updataEquip = function() {
        this.setEquip(this.otherPlayerData.roleData[this.curRole]);
    }, e.prototype.setEquip = function(t) {
        for (var e = (t.equipsData, 0); e < this.maxNum; e++) {
            var i = t.getEquipByIndex(e);
            this.equips[e].setModel(t), this.equips[e].data = i.item, 0 == i.item.configID && this.equips[e].setEquipPos(e >= 8 ? "" : "common_part" + RoleDataTip.equipPartList[e]);
        }
        BitmapNumber.ins().changeNum(this.totalPower, this.otherPlayerData.power, BitmapNumber.numType0, 2);
        for (var e = 0; e < ZhuzaiEquipPos.MAX; e++) {
            var n = t.getZhuZaiDataByIndex(e);
            this.zhuzaiEquips[e].setData("common_part" + this.specialPartListSource[e], ZhuzaiEquipPos.ZhuzaiEquipPosList[e], n.growupID, n.rank, !1);
        }
    }, e.prototype.updateRoleFigure = function() {
        var t = this.otherPlayerData.roleData[this.curRole];
        this.roleFigure.setData(t.sex, t.getBodyResId(), t.getWeaponResId(), t.getFootResId(), t.wingsData.lv, t.wingsData.fiyUpLv, t.gangqisData.lv, t.gangqisData.fiyUpLv, t.zujisData.lv, t.zujisData.fiyUpLv, t.fabaosData.lv, t.fabaosData.fiyUpLv, t.dragonData.dragonLv);
    }, e;
}(BaseView);

__reflect(OtherRoleInfoPanel.prototype, "OtherRoleInfoPanel");

window.OtherRoleInfoPanel = OtherRoleInfoPanel;

var RJingMaiPanel = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.cursorLocation = [ [ 132, 131 ], [ 92, 186 ], [ 165, 177 ], [ 138, 252 ], [ 84, 231 ], [ 96, 316 ], [ 152, 339 ], [ 126, 431 ] ], 
        e.name = "经脉", e.skinName = "JinMaiSkin", e;
    }
    return __extends(e, t), e.prototype.createChildren = function() {
        t.prototype.createChildren.call(this), this.cursor = new MovieClip(), this.addChild(this.cursor), 
        this.cursor.visible = !1, this.boostBtn.visible = !1, this.upgradeBtn.visible = !1, 
        this.bigUpLevelBtn.visible = !1, this.bigUpLevelLable.visible = !1, this.lightList = [ this.light_0, this.light_1, this.light_2, this.light_3, this.light_4, this.light_5, this.light_6, this.light_7 ], 
        this.powerContainer.parent && (this.power = BitmapNumber.ins().createNumPic(0, BitmapNumber.numType0), 
        this.power.x = this.powerContainer.x, this.power.y = this.powerContainer.y, this.powerContainer.parent.addChild(this.power), 
        this.powerContainer.parent.removeChild(this.powerContainer));
    }, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        var i = t[0];
        this.setForgeData(i);
    }, e.prototype.close = function() {}, e.prototype.setForgeData = function(t) {
        this._data = t.roleData[this.curRole].jingMaiData, this.stages.text = "" + (this._data.stage + 1);
        var e = GlobalConfig.ins().JingMaiStageConfig[this._data.stage], i = GlobalConfig.ins().JingMaiLevelConfig(this._data.level);
        this.attr.text = AttributeData.getAttStr(i.attr, 1), this._totalPower = UserBag.getAttrPower(i.attr), 
        BitmapNumber.ins().changeNum(this.power, this._totalPower, BitmapNumber.numType0);
        var n = this._data.level / 8 - e.stage;
        if (e.stage < GlobalConfig.ins().JingMaiCommonConfig.stageMax) {
            var s = void 0, a = void 0;
            this.countLabel.visible = !1, this._data.level > 0 && this._data.level % 8 == 0 && n ? (s = GlobalConfig.ins().JingMaiStageConfig[this._data.stage + 1], 
            a = i) : (s = e, a = GlobalConfig.ins().JingMaiLevelConfig(this._data.level + 1)), 
            0 == this.nextAttr.visible && (this.nextAttr.visible = !0), this.nextAttr.text = AttributeData.getAttStr(a.attr, 1), 
            this.showLight(this._data.level, n);
        } else this.nextAttr.visible = !1, this.boostBtn.visible = !1, this.upgradeBtn.visible = !1, 
        this.countLabel.visible = !0, this.countLabel.text = "经脉已满阶", this.countLabel.x = this.nextAttr.x, 
        this.countLabel.y = this.nextAttr.y, n = 1;
        this.updateStage();
    }, e.prototype.showLight = function(t, e) {
        if (t > 0) if (t % 8 == 0) for (var i = 0, n = this.lightList; i < n.length; i++) {
            var s = n[i];
            s.visible = Boolean(e);
        } else for (var a = 0; 8 > a; a++) this.lightList[a].visible = t % 8 > a; else for (var o = 0, r = this.lightList; o < r.length; o++) {
            var s = r[o];
            s.visible = !1;
        }
    }, e.prototype.updateStage = function() {
        var t = this._data.level, i = Math.floor(t / e.COUNT_PER_STAGE);
        this.expendLabel.text = i + 1 + "阶";
    }, e.COUNT_PER_STAGE = 8, e;
}(BaseView);

__reflect(RJingMaiPanel.prototype, "RJingMaiPanel");

window.RJingMaiPanel = RJingMaiPanel;

var RRoleInfoPanel = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.equipPartList = [ "11", "0", "10", "1", "9", "3", "9", "8" ], e.specialPartListSource = [ 5, 7, 6, 4 ], 
        e.skinName = "RoleInfoSkin", e.name = "角色", e.totalPower || (e.totalPower = BitmapNumber.ins().createNumPic(0, BitmapNumber.numType0, 1), 
        e.powerContainer.addChild(e.totalPower)), e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.init(), this.redPointGroup1.visible = !1, this.redPointGroup2.visible = !1, 
        this.checkAttr.visible = !1, this.oneKeyChange.visible = !1, this.orange.visible = !0, 
        this.bless.visible = !0, this.shenlu.visible = !1, this.runeBtn.visible = !1;
    }, e.prototype.init = function() {
        this.touchEnabled = !1, this.touchChildren = !0, this.roleFigure = new RoleFigure(), 
        this.groupRole.addChild(this.roleFigure), this.equips = [];
        for (var t = 0; t < EquipPos.MAX; t++) this.equips[t] = this["item" + t], this.equips[t].touchEnabled = !0;
        this.zhuzaiEquips = [];
        for (var t = 0; t < ZhuzaiEquipPos.MAX; t++) this.zhuzaiEquips[t] = this["zhuzaiItem" + t], 
        this.zhuzaiEquips[t].touchEnabled = !0, this.zhuzaiEquips[t].setData("common_part" + this.specialPartListSource[t], ZhuzaiEquipPos.ZhuzaiEquipPosList[t], 0, 0);
        this.flameGroup.x = 183, this.flameGroup.y = 138;
    }, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this._otherPlayerData = t[0], this.updataEquip(), this.setWing(), this.updateRoleFigure();
    }, e.prototype.updatePower = function() {
        this._otherPlayerData.roleData[this.curRole || 0];
        BitmapNumber.ins().changeNum(this.totalPower, this._otherPlayerData.power, BitmapNumber.numType0, 3);
    }, e.prototype.updateRoleFigure = function() {
        var t = this._otherPlayerData.roleData[this.curRole || 0];
        this.roleFigure.setData(t.sex, t.getBodyResId(), t.getWeaponResId(), t.getFootResId(), t.wingsData.lv, t.wingsData.fiyUpLv, t.gangqisData.lv, t.gangqisData.fiyUpLv, t.zujisData.lv, t.zujisData.fiyUpLv, t.fabaosData.lv, t.fabaosData.fiyUpLv, t.dragonData.dragonLv);
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
    }, e.prototype.updataEquip = function() {
        this._totalPower = 0, this.setEquip(this._otherPlayerData.roleData[this.curRole]), 
        this.setZhuzaiEquipPoint(this._otherPlayerData.roleData[this.curRole], !0);
    }, e.prototype.updatazhuzaiEquip = function() {
        var t = SubRoles.ins().getSubRoleByIndex(this.curRole);
        this.setZhuzaiEquipPoint(t);
    }, e.prototype.setEquip = function(t) {
        if (t) {
            for (var e = t.getEquipLen(), i = (t.equipsData, t.zhuangbei), n = (i[0], i[1], 
            0); e > n; n++) {
                var s = t.getEquipByIndex(n);
                if (this.equips[n].setModel(t), this.equips[n].data = s.item, 0 == s.item.configID && this.equips[n].setEquipPos(n >= 8 ? "" : "common_part" + this.equipPartList[n]), 
                0 == n || 2 == n) {
                    s.item.configID;
                }
            }
            this.updatePower();
        }
    }, e.prototype.setZhuzaiEquipPoint = function(t, e) {
        void 0 === e && (e = !1);
        for (var i = (GlobalConfig.ins().EquipPointBasicConfig, 0); 4 > i; i++) {
            var n = t.getZhuZaiDataByIndex(i);
            this.zhuzaiEquips[i].setData("common_part" + this.specialPartListSource[i], ZhuzaiEquipPos.ZhuzaiEquipPosList[i], n.growupID, n.rank);
        }
    }, e.prototype.onClick = function(t) {}, e.prototype.setWing = function() {}, e.prototype.setSkillRedPoint = function(t) {}, 
    e;
}(BaseView);

__reflect(RRoleInfoPanel.prototype, "RRoleInfoPanel");

window.RRoleInfoPanel = RRoleInfoPanel;

var RRSkillPanel = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "SkillSkin", e.name = "技能", e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.init();
    }, e.prototype.init = function() {
        this.curIndex = 0;
    }, e.prototype.createChildren = function() {
        t.prototype.createChildren.call(this), this.curIndex = 0, this.tab.visible = !1, 
        this.closeBtn0.visible = !1, this.viewStack.visible = !0;
    }, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.otherPlayerData = t[0], this.updateView();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
    }, e.prototype.updateView = function() {
        this.updateAllSkillItemAndDesc();
    }, e.prototype.updateAllSkillItemAndDesc = function() {
        this.updateAllSkillItem();
    }, e.prototype.updateAllSkillItem = function() {}, Object.defineProperty(e.prototype, "roleId", {
        set: function(t) {
            this._roleId = t, this.updateAllSkillItemAndDesc();
        },
        enumerable: !0,
        configurable: !0
    }), e;
}(BaseView);

__reflect(RRSkillPanel.prototype, "RRSkillPanel");

window.RRSkillPanel = RRSkillPanel;

var RWingPanel = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.name = "翅膀", e.skinName = "WingSkin", e;
    }
    return __extends(e, t), e.prototype.createChildren = function() {
        t.prototype.createChildren.call(this), this.expBar.slideDuration = 0, this.starList = new StarList(GlobalConfig.ins().WingCommonConfig.starPerLevel), 
        this.starList.x = 65, this.starList.y = 276, this.addChild(this.starList), this.boostBtn1.visible = !1, 
        this.boostPrice1.visible = !1, this.upgradeBtn.visible = !1, this.openStatusBtn.visible = !1, 
        this.bigUpLevelBtn.visible = !1, this.bigLevelLabBg.visible = !1, this.bigLevelLab.visible = !1, 
        this.title.visible = !1, this.boostBtn0.visible = !1, this.totalPower = BitmapNumber.ins().createNumPic(0, "7"), 
        this.totalPower.x = 216, this.totalPower.y = 129, this.addChild(this.totalPower);
    }, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        var i = t[0];
        this.setWingData(i), this._isShowFrame = !0;
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
    }, e.prototype.notopenStatus = function() {
        this.starList.visible = !1, this.barBg.visible = !1, this.expBar.visible = !1, this.expLabel.visible = !1, 
        this.attrBg.visible = !1, this.arrows.visible = !1, this.attrLabel.visible = !1, 
        this.nextAttrLabel.visible = !1, this.totalPower.visible = !1, this.upgradeBtn.visible = !1, 
        this.boostBtn1.visible = !1, this.boostPrice1.visible = !1, this.boostPrice2.visible = !1, 
        this.boostBtn2.visible = !1;
    }, e.prototype.openStatusOpen = function() {
        this.openStatusBtn.visible = !1, this.warnLabel.visible = !1, this.boostPrice2.visible = !1, 
        this.boostBtn2.visible = !1, this.starList.visible = !0, this.barBg.visible = !0, 
        this.expBar.visible = !0, this.expLabel.visible = !0, this.attrBg.visible = !0, 
        this.arrows.visible = !0, this.attrLabel.visible = !0, this.nextAttrLabel.visible = !0, 
        this.totalPower.visible = !0;
    }, e.prototype.setWingData = function(t) {
        this._wingsData = t.roleData[this.curRole].wingsData, this.wingName.text = "" + GlobalConfig.ins().WingLevelConfig[this._wingsData.lv].name;
        var e = this._wingsData.star, i = this._wingsData.lv;
        return e % 10 == 0 ? this.starList.starNum = e / 10 > i ? 10 : 0 : this.starList.starNum = e % 10, 
        this._wingsData.openStatus ? (this.openStatusOpen(), this.expBarChange(), void this.updateAtt()) : void this.notopenStatus();
    }, e.prototype.updateAtt = function() {
        var t = GlobalConfig.ins().WingLevelConfig[this._wingsData.lv], e = GlobalConfig.ins().WingStarConfig[this._wingsData.star];
        this.attrLabel.text = AttributeData.getAttStr(AttributeData.AttrAddition(t.attr, e.attr), 1), 
        this._totalPower = UserBag.getAttrPower(AttributeData.AttrAddition(t.attr, e.attr));
        for (var i = 0, n = this._wingsData.equipsLen, s = 0; n > s; s++) {
            var a = this._wingsData.getEquipByIndex(s);
            a.item.itemConfig && (i += ItemConfig.calculateBagItemScore(a.item));
        }
        if (this._totalPower = this._totalPower + i, BitmapNumber.ins().changeNum(this.totalPower, this._totalPower, "7"), 
        this._wingsData.lv < GlobalConfig.ins().WingCommonConfig.lvMax) {
            var o = void 0, r = void 0;
            this._wingsData.star > 0 && this._wingsData.star % 10 == 0 ? (o = GlobalConfig.ins().WingLevelConfig[this._wingsData.lv + 1], 
            r = e) : (o = t, r = GlobalConfig.ins().WingStarConfig[this._wingsData.star + 1]), 
            this.nextAttrLabel.text = AttributeData.getAttStr(AttributeData.AttrAddition(o.attr, r.attr), 1), 
            this.attrLabel.x = 67;
        } else this.isShowUpGradeBtn();
    }, e.prototype.expBarChange = function() {
        var t = this, e = GlobalConfig.ins().WingStarConfig[this._wingsData.star], i = e.exp;
        this.expBar.maximum = i, this.expBar.value = this._wingsData.exp, this.expLabel.text = this._wingsData.exp + "/" + i, 
        Math.floor(this._wingsData.star / 10) - this._wingsData.lv ? this.expMaxImg.visible = !0 : this.expMaxImg.visible = !1, 
        egret.Tween.removeTweens(this.expBar);
        var n = egret.Tween.get(this.expBar);
        return this.expBar.maximum != i ? void n.to({
            value: this.expBar.maximum
        }, 1e3).wait(200).call(function() {
            t.expBar.maximum = i, t.expBar.value = t._wingsData.exp, t.expBarChange();
        }, this) : void n.to({
            value: this._wingsData.exp
        }, 1e3);
    }, e.prototype.isShowUpGradeBtn = function() {
        return this._wingsData.lv >= GlobalConfig.ins().WingCommonConfig.lvMax ? (this.notOpenStatus(), 
        this.openStatusBtn.visible = !1, this.totalPower.visible = !0, this.powerImg.visible = !0, 
        this.warnLabel.visible = !0, this.warnLabel.x = 153, this.warnLabel.y = 492, this.warnLabel.text = "翅膀已达最高等级", 
        this.attrBg.visible = !0, this.attrLabel.visible = !0, void (this.attrLabel.x = 151)) : void 0;
    }, e.prototype.notOpenStatus = function() {
        this.starList.visible = !1, this.barBg.visible = !1, this.expBar.visible = !1, this.expLabel.visible = !1, 
        this.attrBg.visible = !1, this.arrows.visible = !1, this.attrLabel.visible = !1, 
        this.nextAttrLabel.visible = !1, this.upgradeBtn.visible = !1, this.boostBtn0.visible = !1, 
        this.boostBtn1.visible = !1, this.boostBtn2.visible = !1, this.boostPrice1.visible = !1, 
        this.boostPrice2.visible = !1, this.totalPower.visible = !1, this.powerImg.visible = !0, 
        this.openStatusBtn.visible = !0, this.warnLabel.visible = !0, this.bigUpLevelBtn.visible = !1, 
        this.bigLevelLab.visible = !1, this.bigLevelLabBg.visible = !1;
    }, e;
}(BaseView);

__reflect(RWingPanel.prototype, "RWingPanel");

window.RWingPanel = RWingPanel;

var LuxurySprintPanel = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "LuxurySprintSkin", e.list.itemRenderer = LuxurySprintShowItem, 
        e.list.dataProvider = new eui.ArrayCollection(), e.list1.itemRenderer = LuxurySprintItem, 
        e.listData = new eui.ArrayCollection(), e.list1.dataProvider = e.listData, e;
    }
    return __extends(e, t), e.prototype.open = function() {
        this.observe(Recharge.ins().postRebateHaoHuaGiftStatus, this.updateGiftList), this.addTouchEvent(this.list1, this.onTapItemList), 
        this.setData(), TimerManager.ins().doTimer(1e3, 0, this.updateTime, this);
    }, e.prototype.close = function() {
        this.removeObserve(), this.removeEvents(), TimerManager.ins().remove(this.updateTime, this);
    }, e.prototype.setData = function() {
        var t = LuxurySprintData.ins(), e = GlobalConfig.ins().HaoHua_Recharge;
        this.list.dataProvider = new eui.ArrayCollection(e.greate_award);
        var i = t.showList;
        i.sort(this.sortData), this.listData.replaceAll(i);
        var n = LocationProperty.isTaiWan ? 5 * e.desc + "圆" : e.desc + "元";
        this.desc.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(LangManager.haohua_str0, n));
    }, e.prototype.updateGiftList = function() {
        var t = LuxurySprintData.ins(), e = GlobalConfig.ins().HaoHua_Recharge;
        this.list.dataProvider = new eui.ArrayCollection(e.greate_award);
        var i = t.showList;
        i.sort(this.sortData), this.listData.replaceAll(i);
    }, e.prototype.sortData = function(t, e) {
        var i = LuxurySprintData.ins(), n = i.getGiftStatus(t.day - 1), s = i.getGiftStatus(e.day - 1);
        if (n == s) return t.day > e.day ? 1 : t.day < e.day ? -1 : 0;
        if (n > s) {
            if (1 == n && 0 == s) return -1;
            if (2 == n) return 1;
        } else {
            if (!(s > n)) return 0;
            if (1 == n && 2 == s) return -1;
            if (0 == n && 1 == s) return 1;
            if (0 == n && 2 == s) return -1;
        }
    }, e.prototype.updateTime = function() {}, e.prototype.onTapItemList = function(t) {
        var e = t.target.parent;
        e && t.target instanceof eui.Button && t.target == e.btnGet && e.onTap();
    }, e;
}(BaseView);

__reflect(LuxurySprintPanel.prototype, "LuxurySprintPanel");

window.LuxurySprintPanel = LuxurySprintPanel;

var RebateDailyPanel = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "RebateDailySkin", e.list.itemRenderer = RebateDailyShowItem, 
        e.list.dataProvider = new eui.ArrayCollection(), e.list1.itemRenderer = RebateDailyItem, 
        e.listData = new eui.ArrayCollection(), e.list1.dataProvider = e.listData, e;
    }
    return __extends(e, t), e.prototype.open = function() {
        this.observe(Recharge.ins().postRebateDailyGiftStatus, this.updateGiftList), this.addTouchEvent(this.list1, this.onTapItemList), 
        this.setData();
    }, e.prototype.close = function() {
        this.removeObserve(), this.removeEvents();
    }, e.prototype.setData = function() {
        var t = RebateDailyData.ins(), e = GlobalConfig.ins().EveryDay_Rebate;
        this.list.dataProvider = new eui.ArrayCollection(e.greate_award);
        var i = t.showList;
        i.sort(this.sortData), this.listData.replaceAll(i), this.desc.textFlow = TextFlowMaker.generateTextFlow1(LangManager.rebatedailyStr0);
    }, e.prototype.updateGiftList = function() {
        var t = RebateDailyData.ins(), e = GlobalConfig.ins().EveryDay_Rebate;
        this.list.dataProvider = new eui.ArrayCollection(e.greate_award);
        var i = t.showList;
        i.sort(this.sortData), this.listData.replaceAll(i);
    }, e.prototype.sortData = function(t, e) {
        var i = RebateDailyData.ins(), n = i.getGiftStatus(t.day - 1), s = i.getGiftStatus(e.day - 1);
        if (n == s) return t.day > e.day ? 1 : t.day < e.day ? -1 : 0;
        if (n > s) {
            if (1 == n && 0 == s) return -1;
            if (2 == n) return 1;
        } else {
            if (!(s > n)) return 0;
            if (1 == n && 2 == s) return -1;
            if (0 == n && 1 == s) return 1;
            if (0 == n && 2 == s) return -1;
        }
    }, e.prototype.updateTime = function() {}, e.prototype.onTapItemList = function(t) {
        var e = t.target.parent;
        e && t.target instanceof eui.Button && t.target == e.btnGet && e.onTap();
    }, e;
}(BaseView);

__reflect(RebateDailyPanel.prototype, "RebateDailyPanel");

window.RebateDailyPanel = RebateDailyPanel;

var RebateSubPanel0 = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.isInit = !1, e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.isInit || (this.isInit = !0, this.skinName = "RebateSubSkin0", this.listData = new eui.ArrayCollection(), 
        this.list.itemRenderer = RebateSubItem0), this.addTouchEndEvent(this.btnRecharge, this.onBtnClick), 
        this.addTouchEvent(this.list, this.onBtnClick), this.observe(Recharge.ins().postUpdateRebate0, this.updateData), 
        this.updateData();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.isInit && (this.removeTouchEvent(this.btnRecharge, this.onBtnClick), this.removeTouchEvent(this.list, this.onBtnClick), 
        this.removeObserve());
    }, e.prototype.updateData = function() {
        for (var t = RebateData0.ins(), e = t.configId, i = t.configDay, n = GlobalConfig.ins().ChongZhiHuoDong1Config[e][i - 1], s = [], a = 0; a < n.length; a++) s[a] = n[a];
        s.sort(this.sortData), this.listData.replaceAll(s), this.list.dataProvider = this.listData;
        var o = DateUtils.formatMiniDateTime(t.eTime) - GameServer.serverTime;
        this.totalTime = o + egret.getTimer(), this.updateTime();
    }, e.prototype.sortData = function(t, e) {
        var i = RebateData0.ins(), n = 1 == (i.flag >> t.index - 1 & 1), s = 1 == (i.flag >> e.index - 1 & 1);
        return n && s || !n && !s ? t.index > e.index ? 1 : t.index < e.index ? -1 : 0 : n ? 1 : -1;
    }, e.prototype.onBtnClick = function(t) {
        if (t.target instanceof eui.Button) if (t.target.parent instanceof RebateSubItem0) {
            if (!t.target.parent.isCanGet) return void UserTips.ins().showTips("未达到条件");
            Recharge.ins().sendGetRebate0(t.target.parent.index);
        } else t.target == this.btnRecharge && Recharge.ins().gameCharge(1);
    }, e.prototype.updateTime = function() {
        var t = RebateData0.ins();
        this.timeTxt.text = CountdownHelp.countdown(t.sTime, t.eTime, this.totalTime);
    }, e;
}(BaseView);

__reflect(RebateSubPanel0.prototype, "RebateSubPanel0");

window.RebateSubPanel0 = RebateSubPanel0;

var RebateSubPanel1 = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.isInit = !1, e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.isInit || (this.isInit = !0, this.skinName = "RebateSubSkin1", this.listData = new eui.ArrayCollection(), 
        this.list.itemRenderer = RebateSubItem0), this.addTouchEndEvent(this.btnRecharge, this.onBtnClick), 
        this.addTouchEvent(this.list, this.onBtnClick), this.observe(Recharge.ins().postUpdateRebate0, this.updateData), 
        this.updateData();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.isInit && (this.removeTouchEvent(this.btnRecharge, this.onBtnClick), this.removeTouchEvent(this.list, this.onBtnClick), 
        this.removeObserve());
    }, e.prototype.updateData = function() {
        var t = RebateData0.ins();
        this.hasRechargeTxt.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(LangManager.rechargeStr1, t.totalRecharge));
        var e = GlobalConfig.ins().ChongZhiHuoDong1Config[3][t.day][9];
        this.listData.replaceAll([ e ]), this.list.dataProvider = this.listData;
        var i = DateUtils.formatMiniDateTime(t.eTime) - GameServer.serverTime;
        this.totalTime = i + egret.getTimer(), this.updateTime();
    }, e.prototype.onBtnClick = function(t) {
        if (t.target instanceof eui.Button) if (t.target.parent instanceof RebateSubItem0) {
            if (!t.target.parent.isCanGet) return void UserTips.ins().showTips("未达到条件");
            Recharge.ins().sendGetRebate0(t.target.parent.index);
        } else t.target == this.btnRecharge && Recharge.ins().gameCharge(1);
    }, e.prototype.updateTime = function() {
        var t = RebateData0.ins();
        this.timeTxt.text = CountdownHelp.countdown(t.sTime, t.eTime, this.totalTime);
    }, e;
}(BaseView);

__reflect(RebateSubPanel1.prototype, "RebateSubPanel1");

window.RebateSubPanel1 = RebateSubPanel1;

var RebateSubPanel10 = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.index = 1, e.isInit = !1, e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.isInit || (this.isInit = !0, this.skinName = "RebateSubSkin10", this.list.itemRenderer = ItemBase, 
        this.list.dataProvider = new eui.ArrayCollection(), this.totalYb || (this.totalYb = BitmapNumber.ins().createNumPic(0, BitmapNumber.numType0, 10), 
        this.ybCon.addChild(this.totalYb))), this.addTouchEndEvent(this.btnBuy, this.onClick), 
        this.observe(Recharge.ins().postBuyWuxingElement, this.updateData), this.updateData();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.isInit && (this.removeEvents(), this.removeObserve());
    }, e.prototype.updateData = function() {
        var t = (RebateData10.ins(), GlobalConfig.ins().WuxingAwardConfig);
        this.index = 1, this.list.dataProvider = new eui.ArrayCollection(t[this.index].awardList), 
        BitmapNumber.ins().changeNum(this.totalYb, t[this.index].pay, "num21", 4), this.isBuyImg.visible = RebateData10.ins().getRedPoint(), 
        this.btnBuy.visible = !RebateData10.ins().getRedPoint(), this.ybCon.width = this.totalYb.width + 40;
    }, e.prototype.onClick = function(t) {
        switch (t.target) {
          case this.btnBuy:
            Recharge.ins().sendBuyWuXingElement(this.index);
        }
    }, e.prototype.updateTime = function() {}, e;
}(BaseView);

__reflect(RebateSubPanel10.prototype, "RebateSubPanel10");

window.RebateSubPanel10 = RebateSubPanel10;

var RebateSubPanel11 = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.titleIcon = "rebatehall_title15", e.isInit = !1, e.i = 0, e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.isInit || (this.isInit = !0, this.skinName = "RebateSubSkin11", this.totalPower || (this.totalPower = BitmapNumber.ins().createNumPic(0, BitmapNumber.numType0, 10), 
        this.powerContainer.addChild(this.totalPower)), this.setSkinPart("skillItem", new RebateSubSkillItem11()), 
        this.mc = new MovieClip(), this.mcCon.addChild(this.mc)), this.addTouchEndEvent(this.btnBuy, this.onClick), 
        this.observe(Recharge.ins().postLingChongData, this.updateData), this.updateData(), 
        this.setData(), this.itemIcon1.open(), this.itemIcon2.open();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.isInit && (this.removeEvents(), this.removeObserve(), this.itemIcon1.close(), 
        this.itemIcon2.close());
    }, e.prototype.updateData = function() {
        var t = RebateData11.ins(), e = GlobalConfig.ins().RechargeLingchongAwardConfig[1], i = BitUtil.getBitValue(t.flag, e.index - 1), n = BitUtil.getBitValue(t.isBuy, e.index - 1);
        n ? (this.btnBuy.label = "领取", i ? (this.btnBuy.enabled = !1, this.btnBuy.filters = [ ColorUtil.colorMat ]) : (this.btnBuy.enabled = !0, 
        this.btnBuy.filters = [])) : this.btnBuy.label = "购买", this.redpoint.visible = !i && n;
    }, e.prototype.setData = function() {
        var t = GlobalConfig.ins().RechargeLingchongAwardConfig[1];
        if (this.id = t.id, this.mc.playFile(ResPath.getUILingChongPath(this.id), -1, null, !1, !1), 
        this.itemList.itemRenderer = ItemBase, this.itemList.dataProvider = new eui.ArrayCollection(t.awardList), 
        t.skillId[0]) {
            var e = {
                id: t.id,
                skillId: t.skillId[0],
                skillLv: t.skillLv
            };
            this.itemIcon1.visible = !0, this.itemIcon1.data = e;
        } else this.itemIcon1.visible = !1;
        if (t.skillId[1]) {
            var i = {
                id: t.id,
                skillId: t.skillId[1],
                skillLv: t.skillLv
            };
            this.itemIcon2.visible = !0, this.itemIcon2.data = i;
        } else this.itemIcon2.visible = !1;
        this.midAttr.text = AttributeData.getAttStr(t.attrs, 0, 1, ": ");
        var n = Math.floor(UserBag.getAttrPower(t.attrs));
        BitmapNumber.ins().changeNum(this.totalPower, n, BitmapNumber.numType0, 2), this.title.source = LocationProperty.changeLangResPath(this.titleIcon);
        var s = parseInt(t.count), a = t.pay * RebateHallConst.RATIO;
        LocationProperty.isTaiWan ? (s *= Currency.TB, a *= Currency.TB, this.numTxt1.text = "原价:" + s + "圆", 
        this.numTxt2.text = "抢购:" + a + "圆") : (this.numTxt1.text = "原价:" + s + "元", this.numTxt2.text = "抢购:" + a + "元"), 
        LocationProperty.pf == LocationProperty.zwwxxyx && (this.title.source = "rebatehall_title15_zwwxxyx", 
        this.numTxt2.text = "抢购:50元"), this.nameImg.source = LingChongManager.ins().getLingChongName(this.id);
    }, e.prototype.onClick = function(t) {
        switch (t.target) {
          case this.btnBuy:
            var e = RebateData11.ins(), i = GlobalConfig.ins().RechargeLingchongAwardConfig[1], n = i.pay * RebateHallConst.RATIO, s = (BitUtil.getBitValue(e.flag, i.index - 1), 
            BitUtil.getBitValue(e.isBuy, i.index - 1));
            s ? Recharge.ins().sendlingChongSell(i.index) : LocationProperty.pf == LocationProperty.zwwxxyx ? Recharge.ins().showReCharge(50) : Recharge.ins().showReCharge(n);
        }
    }, e.prototype.updateTime = function() {}, e;
}(BaseView);

__reflect(RebateSubPanel11.prototype, "RebateSubPanel11");

window.RebateSubPanel11 = RebateSubPanel11;

var RebateSubPanel16 = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.isInit = !1, e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.isInit || (this.isInit = !0, this.skinName = "RebateSubSkin16", this.list.dataProvider = null, 
        this.list.itemRenderer = RebateSubItem16, this.timeTipsTxt.text = "(每天0点将刷新活动内容)"), 
        this.observe(Activity.ins().postServerData65, this.updateData), this.addTouchEndEvent(this.btnUpgrade, this.onBtnClick), 
        this.addTouchEvent(this.list, this.onBtnClick), Activity.ins().sendServerData65();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.isInit && (this.removeTouchEvent(this.btnUpgrade, this.onBtnClick), this.removeTouchEvent(this.list, this.onBtnClick), 
        this.removeObserve());
    }, e.prototype.updateData = function() {
        var t = RebateData16.ins();
        if (-1 != t.id && t.list) {
            t.list.sort(this.sortData), this.list.dataProvider = new eui.ArrayCollection(t.list), 
            this.curTxt.text = RebateData16.ins().useNum + "", this.desc.text = LangManager.getLang(LangManager.openserver_str3, OpenServerConst.TYPE_NAME[RebateData16.ins().id]);
            var e = DateUtils.formatMiniDateTime(t.eTime) - GameServer.serverTime;
            this.totalTime = e + egret.getTimer(), this.updateTime();
        }
    }, e.prototype.sortData = function(t, e) {
        return t.flag > e.flag ? 1 : t.flag < e.flag ? -1 : t.subId < e.subId ? -1 : t.subId > e.subId ? 1 : 0;
    }, e.prototype.onBtnClick = function(t) {
        t.target instanceof eui.Button && (t.target.parent instanceof RebateSubItem16 ? Activity.ins().sendServerData66(t.target.parent.id, t.target.parent.subId) : t.target == this.btnUpgrade && ViewManager.ins().open(OpenServerConst.WIN_NAME[RebateData16.ins().id]));
    }, e.prototype.updateTime = function() {
        var t = RebateData16.ins();
        this.timeTxt.text = CountdownHelp.countdown(t.sTime, t.eTime, this.totalTime);
    }, e;
}(BaseView);

__reflect(RebateSubPanel16.prototype, "RebateSubPanel16");

window.RebateSubPanel16 = RebateSubPanel16;

var RebateSubPanel17 = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.isInit = !1, e._tar = -1, e.boxId = 0, e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        if (!this.isInit) {
            this.isInit = !0, this.skinName = "ChargeRebateSkin", this.listData = new eui.ArrayCollection(), 
            this.list.itemRenderer = RebateSubServerRecordItem17;
            var i = GlobalConfig.ins().LuckyRebateBaseConfig;
            LocationProperty.isTaiWan ? this.chargeTxt.text = "每充值" + i.yb / 10 * 5 + "圆可免费抽奖1次" : this.chargeTxt.text = "每充值" + i.yb / 10 + "元可免费抽奖1次";
            var n = GlobalConfig.ins().LuckyRebateRewardConfig;
            for (var s in n) n[s] && this.setSkinPart("prize" + n[s].sort, new RebateSubItem17());
            this.mc || (this.mc = new MovieClip(), this.mc.x = this.awardBtn.x + this.awardBtn.width / 2, 
            this.mc.y = this.awardBtn.y + this.awardBtn.height / 2 + 448), this.expBar.value = 0, 
            this.expBar.slideDuration = 0, this.expBar.labelDisplay.visible = !1;
        }
        this.addTouchEndEvent(this.awardBtn, this.onTop), this.addTouchEndEvent(this.recordBtn, this.onTop), 
        this.addTouchEndEvent(this.onceBtn, this.onTop), this.addTouchEndEvent(this.tenBtn, this.onTop), 
        this.observe(LuckyGuy.ins().postChargeRebateData, this.upData), this.observe(LuckyGuy.ins().postSeverLogData, this.upServerLog), 
        this.upData(), this.updateTime(), this.upAwardData(), LuckyGuy.ins().sendServerLodData();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.isInit && (this.removeEvents(), this.removeObserve());
    }, e.prototype.upAwardData = function() {
        var t = GlobalConfig.ins().LuckyRebateRewardConfig;
        for (var e in t) t[e] && (this["prize" + t[e].sort].data = t[e]);
    }, e.prototype.upData = function() {
        var t = RebateData17.ins();
        t && (this.gradeTxt.text = t.num + "", this.upBox());
    }, e.prototype.upServerLog = function() {
        var t = RebateData17.ins();
        t && (this.listData.replaceAll(t.serverLogList), this.list.dataProvider = this.listData);
    }, e.prototype.upBox = function() {
        var t = RebateData17.ins();
        if (t) {
            var e = GlobalConfig.ins().LuckyRebateDBRewardConfig, i = Object.keys(e).length, n = t.flag >= i ? e[i].id : e[t.flag + 1].id;
            e[n] && (this.expBar.maximum = e[n].tar, this._tar != t.tar && (this.expBar.value = t.tar, 
            this.expBarTxt.text = t.tar + " / " + e[n].tar, this._tar = t.tar), this.boxId = e[n].id, 
            this.canGetBox = t.canGetTarAward(), this.canGetBox ? (this.addChild(this.mc), this.mc.playFile(ResPath.getUIEffectPath(UiEffectType.Type27), -1)) : this.mc.parent && DisplayUtils.removeFromParent(this.mc));
        }
    }, e.prototype.onTop = function(t) {
        switch (t.target) {
          case this.awardBtn:
            this.canGetBox ? LuckyGuy.ins().sendGetBoxAward(this.boxId) : ViewManager.ins().open(RebateSubPanel17AwardWin);
            break;

          case this.recordBtn:
            ViewManager.ins().open(RebateSubPanel17LogWin);
            break;

          case this.onceBtn:
            LuckyGuy.ins().sendChargeDraw(1);
            break;

          case this.tenBtn:
            LuckyGuy.ins().sendChargeDraw(2);
        }
    }, e.prototype.updateTime = function() {
        var t = RebateData17.ins();
        if (t) {
            var e = GameServer.serverTime, i = DateUtils.formatMiniDateTime(t.eTime), n = i - e;
            this.totalTime = n + egret.getTimer(), this.timeTxt.text = CountdownHelp.countdown1(t.sTime, t.eTime, this.totalTime);
        }
    }, e;
}(BaseView);

__reflect(RebateSubPanel17.prototype, "RebateSubPanel17");

window.RebateSubPanel17 = RebateSubPanel17;

var RebateSubPanel2 = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.isInit = !1, e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.isInit || (this.isInit = !0, this.skinName = "RebateSubSkin2", this.listData = new eui.ArrayCollection(), 
        this.list.itemRenderer = RebateSubItem1), this.addTouchEndEvent(this.btnRecharge, this.onBtnClick), 
        this.addTouchEvent(this.list, this.onBtnClick), this.tab.addEventListener(egret.Event.CHANGE, this.setSelectedIndex, this), 
        this.observe(Recharge.ins().postUpdateRebate1, this.updateData), this.tab.selectedIndex = 0, 
        this.updateData();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.isInit && (this.removeTouchEvent(this.btnRecharge, this.onBtnClick), this.removeTouchEvent(this.list, this.onBtnClick), 
        this.tab.removeEventListener(egret.Event.CHANGE, this.setSelectedIndex, this));
    }, e.prototype.updateData = function() {
        var t = RebateData1.ins();
        if (t.isGetData) {
            this.updateIndex(this.tab.selectedIndex), this.hasRecharge.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(LangManager.rechargeStr1, t.totalRecharge));
            var e = DateUtils.formatMiniDateTime(t.eTime) - GameServer.serverTime;
            this.totalTime = e + egret.getTimer(), this.updateTime(), this.redpoint0.visible = t.getTabRedPoint(0), 
            this.redpoint1.visible = t.getTabRedPoint(1);
        }
    }, e.prototype.setSelectedIndex = function(t) {
        this.updateIndex(this.tab.selectedIndex);
    }, e.prototype.updateIndex = function(t) {
        for (var e = RebateData1.ins(), i = GlobalConfig.ins().ChongZhiHuoDong2Config[e.id][t], n = [], s = 0; s < i.length; s++) n[s] = i[s];
        n.sort(this.sortData), this.listData.replaceAll(n), this.list.dataProvider = this.listData;
    }, e.prototype.sortData = function(t, e) {
        var i, n, s = RebateData1.ins();
        return 1 == t.s_id ? (i = 1 == (s.flag1 >> t.index - 1 & 1), n = 1 == (s.flag1 >> e.index - 1 & 1)) : (i = 1 == (s.flag2 >> t.index - 1 & 1), 
        n = 1 == (s.flag2 >> e.index - 1 & 1)), i && n || !i && !n ? t.index > e.index ? 1 : t.index < e.index ? -1 : 0 : i ? 1 : -1;
    }, e.prototype.onBtnClick = function(t) {
        if (t.target instanceof eui.Button) if (t.target.parent instanceof RebateSubItem1) {
            if (!t.target.parent.isCanGet) return void UserTips.ins().showTips("未达到条件");
            Recharge.ins().sendGetRebate1(t.target.parent.id, t.target.parent.index);
        } else t.target == this.btnRecharge && Recharge.ins().gameCharge(1);
    }, e.prototype.updateTime = function() {
        var t = RebateData1.ins();
        this.timeTxt.text = CountdownHelp.countdown(t.sTime, t.eTime, this.totalTime);
    }, e;
}(BaseView);

__reflect(RebateSubPanel2.prototype, "RebateSubPanel2");

window.RebateSubPanel2 = RebateSubPanel2;

var RebateSubPanel3 = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.isInit = !1, e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.isInit || (this.isInit = !0, this.skinName = "OpenServerSubSkin0", this.list.dataProvider = new eui.ArrayCollection(), 
        this.list.itemRenderer = RebateSubItem2, this.timeTipsTxt.text = "（每天0点将刷新活动内容）", 
        this.des1.visible = !0), this.addTouchEndEvent(this.btnUpgrade, this.onBtnClick), 
        this.addTouchEvent(this.list, this.onBtnClick), this.observe(Activity.ins().postRebateData2, this.updateData), 
        this.observe(AdvanceHorse.ins().postHorseSuccessNext, this.updateInfo), this.observe(AdvanceWing.ins().postWingSuccessNext, this.updateInfo), 
        this.observe(AdvanceJianTong.ins().postJianTongSuccessNext, this.updateInfo), this.observe(AdvanceFaBao.ins().postFaBaoSuccessNext, this.updateInfo), 
        this.observe(AdvanceMoShen.ins().postMoShenSuccessNext, this.updateInfo), this.observe(AdvanceZuJi.ins().postZuJiSuccessNext, this.updateInfo), 
        this.observe(AdvanceGangQi.ins().postGangQiSuccessNext, this.updateInfo), Activity.ins().sendRebateData2Base(), 
        Activity.ins().sendRebateData2List();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.isInit && (this.removeTouchEvent(this.btnUpgrade, this.onBtnClick), this.removeTouchEvent(this.list, this.onBtnClick), 
        this.removeObserve());
    }, e.prototype.updateData = function() {
        var t = RebateData2.ins();
        if (-1 != t.id) {
            var e = [];
            e = e.concat(t.list);
            var i = new RebateData2Item();
            i.level = 8, i.flag = -3, e = e.concat(i), e.sort(this.sortData), this.list.dataProvider = new eui.ArrayCollection(e), 
            this.updateInfo();
            var n = DateUtils.formatMiniDateTime(t.eTime) - GameServer.serverTime;
            this.totalTime = n + egret.getTimer(), this.updateTime();
        }
    }, e.prototype.sortData = function(t, e) {
        return t.level < e.level ? t.flag < e.flag ? 1 : -1 : t.level > e.level ? t.flag > e.flag ? -1 : 1 : t.flag > e.flag ? -1 : 1;
    }, e.prototype.updateInfo = function() {
        var t = SubRoles.ins().getSubRoleByIndex(0), e = 0;
        if (t) {
            var i = t[OpenServerConst.TYPE_LEVEL_KEY[RebateData2.ins().id]];
            e = i ? i.lv : 0;
        }
        this.curTxt.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(LangManager.openserver_str1, OpenServerConst.TYPE_NAME[RebateData2.ins().id], e)), 
        this.desc.text = LangManager.getLang(LangManager.openserver_str3, OpenServerConst.TYPE_NAME[RebateData2.ins().id]);
    }, e.prototype.onBtnClick = function(t) {
        t.target instanceof eui.Button && (t.target.parent instanceof RebateSubItem2 ? Activity.ins().sendGetRebateData2(t.target.parent.level) : t.target == this.btnUpgrade && ViewManager.ins().open(OpenServerConst.WIN_NAME[RebateData2.ins().id]));
    }, e.prototype.updateTime = function() {
        var t = RebateData2.ins();
        this.timeTxt.text = CountdownHelp.countdown(t.sTime, t.eTime, this.totalTime);
    }, e;
}(BaseView);

__reflect(RebateSubPanel3.prototype, "RebateSubPanel3");

window.RebateSubPanel3 = RebateSubPanel3;

var RebateSubPanel4 = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.data = RebateData4.ins(), e.isInit = !1, e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.isInit || (this.isInit = !0, this.skinName = "RebateSubSkin3", this.listData = new eui.ArrayCollection(), 
        this.list.itemRenderer = RebateSubItem3, this.list.dataProvider = this.listData), 
        this.observe(Treasure.ins().postDataInfo, this.upBasedata), this.upBasedata(), this.addTouchEndEvent(this.get, this.onTop), 
        this.addTouchEvent(this.list, this.onTop);
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.isInit && (this.removeEvents(), this.removeObserve());
    }, e.prototype.upBasedata = function() {
        for (var t, e, i = GlobalConfig.ins().ZhenbaoConfig, n = GlobalConfig.ins().ZhenbaoLastConfig, s = "", a = [], o = 0; o < this.data.tokenNum; o++) {
            t = GlobalConfig.ins().ItemConfig(this.data.tokenArr[o].id).name, e = this.data.tokenArr[o].count, 
            this.num.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(LangManager.gem_str1, t, e));
            for (var r = 0; r < this.num.textFlow.length; r++) s += this.num.textFlow[r].text;
            a.push(s);
        }
        this.num.text = a.join(" ");
        var h = [];
        if (1 == this.data.edition) for (var o = 0; o < this.data.num; o++) h[o] = i[o];
        if (2 == this.data.edition) for (var o = 0; o < this.data.num; o++) h[o] = n[o];
        h.sort(this.sortData), this.listData.replaceAll(h), this.list.dataProvider = this.listData, 
        this.updateTime();
    }, e.prototype.sortData = function(t, e) {
        var i = RebateData4.ins().listArr, n = i[t.id].personNum >= t.personNum || i[t.id].serviseNum >= t.serviseNum, s = i[e.id].personNum >= e.personNum || i[e.id].serviseNum >= e.serviseNum;
        return n && s || !n && !s ? t.id > e.id ? 1 : t.id < e.id ? -1 : 0 : n ? 1 : -1;
    }, e.prototype.onTop = function(t) {
        switch (t.target) {
          case this.get:
            ViewManager.ins().open(OpenServerWin);
        }
        t.target instanceof eui.Button && t.target.parent instanceof RebateSubItem3 && Treasure.ins().sendGet(t.target.parent.id);
    }, e.prototype.updateTime = function() {
        var t = GameServer.serverTime, e = DateUtils.formatMiniDateTime(this.data.eTime), i = e - t;
        this.totalTime = i + egret.getTimer(), this.timeTxt.text = CountdownHelp.countdown1(this.data.sTime, this.data.eTime, this.totalTime);
    }, e;
}(BaseView);

__reflect(RebateSubPanel4.prototype, "RebateSubPanel4");

window.RebateSubPanel4 = RebateSubPanel4;

var RebateSubPanel5 = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.isInit = !1, e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.isInit || (this.isInit = !0, this.skinName = "RebateSubSkin5", this.firstRewardList.dataProvider = new eui.ArrayCollection(), 
        this.firstRewardList.itemRenderer = ItemBase, this.rankRewardList.itemRenderer = RebateSubItem5, 
        this.listData = new eui.ArrayCollection(), this.rankRewardList.dataProvider = this.listData), 
        this.observe(Consume.ins().postInfoData, this.upInfoData), this.addTouchEvent(this.helpBtn, this.onClick), 
        this.addTouchEvent(this.rankBtn, this.onClick), this.addTouchEvent(this.rankRewardList, this.onClick), 
        this.upInfoData();
        var i = GlobalConfig.ins().ConsumepmcRewardConfig[1];
        this.firstRewardList.dataProvider = new eui.ArrayCollection(i.awardList);
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.isInit && (this.removeEvents(), this.removeObserve(), TimerManager.ins().removeAll(this));
    }, e.prototype.upInfoData = function() {
        var t = RebateData5.ins(), e = [];
        t.rankNum > 0 && (this.firstplayer.text = "" + t.rankArr[0].palyName, this.head.source = ResPath.getHeadIcon(t.rankArr[0].sex, 1));
        var i = DateUtils.formatMiniDateTime(t.endTime) - GameServer.serverTime;
        if (this.totalTime = i + egret.getTimer(), TimerManager.ins().doTimer(1e3, 0, this.updateTime, this), 
        this.updateTime(), GlobalConfig.ins().ConsumepmRewardConfig[t.day]) {
            for (var n = GlobalConfig.ins().ConsumepmRewardConfig[t.day], s = Object.keys(n), a = 0; a < s.length; a++) e[a] = n[a];
            e.sort(this.sortData), this.listData.replaceAll(e), this.rankRewardList.dataProvider = this.listData;
        }
    }, e.prototype.sortData = function(t, e) {
        var i = RebateData5.ins(), n = 1 == (i.flag >> t.id & 1), s = 1 == (i.flag >> e.id & 1);
        return n && s || !n && !s ? t.id > e.id ? 1 : t.id < e.id ? -1 : 0 : n ? 1 : -1;
    }, e.prototype.onClick = function(t) {
        switch (t.target) {
          case this.rankBtn:
            ViewManager.ins().open(ConsumeWin);
            break;

          case this.helpBtn:
            var e = GlobalConfig.ins().ConsumepmBaseConfig;
            UserWarn.ins().showCommonTips(LangManager.getLang(LangManager.consume_str3, e.consume), !0);
        }
        if (t.target instanceof eui.Button && t.target.parent instanceof RebateSubItem5) {
            if (!t.target.parent.isCanGet) return void UserTips.ins().showTips("未达到条件");
            Consume.ins().sendGet(t.target.parent.day, t.target.parent.index);
        }
    }, e.prototype.updateTime = function() {
        var t = RebateData5.ins();
        this.timeTxt.text = CountdownHelp.countdown1(t.startTime, t.endTime, this.totalTime);
    }, e;
}(BaseView);

__reflect(RebateSubPanel5.prototype, "RebateSubPanel5");

window.RebateSubPanel5 = RebateSubPanel5;

var RebateSubPanel6 = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.data = RebateData6.ins(), e.skinName = "RebateSubSkin6", e.item.itemRenderer = ItemBase, 
        e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.observe(Recharge.ins().postDataInfo, this.upBasedata), this.addTouchEndEvent(this.get, this.onTop), 
        this.upBasedata();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeEvents(), this.removeObserve();
    }, e.prototype.upBasedata = function() {
        var t = RebateData6.ins().checkShowIcon();
        if (t) {
            this.isGet.visible = !1;
            var e = void 0, i = this.data.code;
            switch (i) {
              case 1:
                e = GlobalConfig.ins().LimitAwardConfig;
                break;

              case 2:
                e = GlobalConfig.ins().LimitAwardTwoConfig;
            }
            if (e[this.data.num][this.data.round - 1]) {
                var n = e[this.data.num][this.data.round - 1].awardList[0], s = GlobalConfig.ins().ItemConfig(n.id);
                this.itemName.text = s.name, this.itemName.textColor = ItemBase.QUALITY_COLOR[s.quality], 
                n.isNoShowName = !0, this.item.dataProvider = new eui.ArrayCollection(e[this.data.num][this.data.round - 1].awardList), 
                this.overline.width = this.original.width, this.original.filters = [ ColorUtil.colorMat ], 
                this.originalNum.text = e[this.data.num][this.data.round - 1].pay + "";
                var a = e[this.data.num][this.data.round - 1].index;
                this.discount.source = "rebatehall_discount" + a, this.rulingNum.text = e[this.data.num][this.data.round - 1].pay * (e[this.data.num][this.data.round - 1].index / 10) + "";
                var o = e[this.data.num][this.data.round - 1].count - this.data.costNum;
                this.remainNum.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(LangManager.limit_str0, o));
                var r = e[this.data.num][this.data.round - 1].count_geren;
                this.buyNum.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(LangManager.limit_str1, this.data.cNum, r)), 
                0 != o ? (this.get.filters = [], this.data.cNum >= r ? (this.get.enabled = !1, this.get.filters = [ ColorUtil.colorMat ]) : (this.get.enabled = !0, 
                this.get.filters = [])) : (this.isGet.visible = !1, this.get.enabled = !1, this.get.filters = [ ColorUtil.colorMat ], 
                this.get.label = "售罄"), this.totalTime <= 0 && Recharge.ins().sendupData();
            } else UserTips.ins().showTips("|C:0xff0000&T:限时礼包配置出错|");
        }
        this.updateTime();
    }, e.prototype.onTop = function(t) {
        switch (t.target) {
          case this.get:
            Recharge.ins().sendBuy(this.data.num);
        }
    }, e.prototype.updateTime = function() {
        var t = GameServer.serverTime, e = DateUtils.formatMiniDateTime(this.data.eTime), i = e - t;
        this.totalTime = i + egret.getTimer(), this.timeTxt.text = CountdownHelp.countdown1(this.data.sTime, this.data.eTime, this.totalTime);
    }, e;
}(BaseView);

__reflect(RebateSubPanel6.prototype, "RebateSubPanel6");

window.RebateSubPanel6 = RebateSubPanel6;

var RebateSubPanel7 = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.isInit = !1, e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        if (!this.isInit) {
            this.isInit = !0, this.skinName = "RebateSubSkin7", this.iconList.itemRenderer = RebateSubItem7, 
            this.list.itemRenderer = ItemBase;
            var i = [];
            for (var n in GlobalConfig.ins().KaifuAwardConfig) i.push(GlobalConfig.ins().KaifuAwardConfig[n]);
            this.iconList.dataProvider = new eui.ArrayCollection(i), this.costNum = BitmapNumber.ins().createNumPic(0, "num21"), 
            this.addChild(this.costNum), this.mc = new MovieClip(), this.mcCon.addChild(this.mc), 
            this.mc.playFile(ResPath.getUILingChongPath(3), -1, null, !1, !1);
        }
        this.addTouchEndEvent(this.btnBuy, this.onBtnClick), this.iconList.addEventListener(eui.ItemTapEvent.ITEM_TAP, this.selectIcon, this), 
        this.observe(Recharge.ins().postKaifuGiftInfo, this.updateData), this.updateData();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.isInit && (this.removeTouchEvent(this.btnBuy, this.onBtnClick), this.iconList.removeEventListener(eui.ItemTapEvent.ITEM_TAP, this.selectIcon, this), 
        this.removeObserve());
    }, e.prototype.selectIcon = function(t) {
        this.setSelectIndex(this.iconList.selectedIndex);
    }, e.prototype.setSelectIndex = function(t) {
        var e = GlobalConfig.ins().KaifuAwardConfig[t + 1];
        this.list.dataProvider = new eui.ArrayCollection(e.awardList), 3 == e.index ? (this.mcCon.visible = !0, 
        this.imgShow.visible = !1) : (this.mcCon.visible = !1, this.imgShow.visible = !0, 
        this.imgShow.source = "rebatehall_show" + e.index + "_png"), BitmapNumber.ins().changeNum(this.costNum, e.pay, "num21", 4), 
        this.costNum.x = this.img0.x + this.img0.width + 1, this.costNum.y = this.img0.y - 1, 
        this.img1.x = this.costNum.x + this.costNum.width - 4, this.img2.x = this.img1.x + this.img1.width - 3, 
        this.img3.x = this.img2.x + this.img2.width - 3, this.img3.source = "rebatehall_smallname" + e.index, 
        4 == e.index ? this.imgShow.y = 155 : this.imgShow.y = 179, this.isBuyImg.visible = this.isBuyImg.visible = RebateData7.ins().getIsBuy(e.index), 
        this.btnBuy.filters = this.isBuyImg.visible ? [ ColorUtil.colorMat ] : null;
    }, e.prototype.updateData = function() {
        this.iconList.selectedIndex = RebateData7.ins().getNextTabIndex();
        var t = this.iconList.selectedIndex;
        this.iconList.dataProvider.refresh(), this.iconList.selectedIndex = t, this.setSelectIndex(this.iconList.selectedIndex);
        var e = DateUtils.formatMiniDateTime(RebateData7.ins().eTime) - GameServer.serverTime;
        this.totalTime = e + egret.getTimer(), this.updateTime();
    }, e.prototype.onBtnClick = function(t) {
        Recharge.ins().sendBuyKaifuGift(this.iconList.selectedIndex + 1);
    }, e.prototype.updateTime = function() {
        var t = RebateData7.ins();
        this.timeTxt.text = CountdownHelp.countdown1(t.sTime, t.eTime, this.totalTime);
    }, e;
}(BaseView);

__reflect(RebateSubPanel7.prototype, "RebateSubPanel7");

window.RebateSubPanel7 = RebateSubPanel7;

var RebateSubPanel9 = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.index = 1, e.isInit = !1, e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.isInit || (this.isInit = !0, this.skinName = "RebateSubSkin9", this.iconList.itemRenderer = RebateSubItem9, 
        this.itemList.itemRenderer = ItemBase, this.iconList.dataProvider = new eui.ArrayCollection(), 
        this.itemList.dataProvider = new eui.ArrayCollection(GlobalConfig.ins().LongdunAwardConfig[1].awardList), 
        this.bar.slideDuration = 0, this.bar.labelDisplay.visible = !1), this.addTouchEndEvent(this.buyBtn, this.onClick), 
        this.addTouchEndEvent(this.itemList, this.onClick), this.iconList.addEventListener(eui.ItemTapEvent.ITEM_TAP, this.selectIcon, this), 
        this.observe(Recharge.ins().postBuyDragonBag, this.updateData), this.updateData();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.isInit && (this.iconList.removeEventListener(eui.ItemTapEvent.ITEM_TAP, this.selectIcon, this), 
        this.removeEvents(), this.removeObserve());
    }, e.prototype.selectIcon = function(t) {
        this.setData(this.iconList.selectedIndex);
    }, e.prototype.updateData = function() {
        var t = RebateData9.ins(), e = Math.ceil(t.recharge * RebateHallConst.RATIO);
        this.numTxt.textFlow = TextFlowMaker.generateTextFlow("累充|C:0xff0000&T:" + e + "|元");
        var i = [];
        for (var n in GlobalConfig.ins().LongdunAwardConfig[t.grade]) i.push(GlobalConfig.ins().LongdunAwardConfig[t.grade][n]);
        this.iconList.dataProvider = new eui.ArrayCollection(i), this.bar.maximum = 100;
        for (var s = 0, a = 1; a < i.length; a++) t.recharge >= i[a].pay && (s += 50);
        this.bar.value = s, this.iconList.selectedIndex = RebateData9.ins().getNextTabIndex();
        var o = this.iconList.selectedIndex;
        this.iconList.dataProvider.refresh(), this.iconList.selectedIndex = o, this.setData(this.iconList.selectedIndex);
        var r = DateUtils.formatMiniDateTime(t.eTime) - GameServer.serverTime;
        this.totalTime = r + egret.getTimer(), this.updateTime();
    }, e.prototype.onClick = function(t) {
        switch (t.target) {
          case this.buyBtn:
            var e = GlobalConfig.ins().LongdunAwardConfig[RebateData9.ins().grade][this.index].pay;
            RebateData9.ins().recharge < e ? Recharge.ins().gameCharge(1) : Recharge.ins().sendGetDragonBag(this.index + 1);
        }
    }, e.prototype.setData = function(t) {
        this.index = t;
        var e = RebateData9.ins(), i = GlobalConfig.ins().LongdunAwardConfig[e.grade];
        this.itemList.dataProvider = new eui.ArrayCollection(i[this.index].awardList);
        var n = BitUtil.getBitValue(e.flag, this.index);
        this.isGet.visible = n;
        Math.ceil(e.recharge * RebateHallConst.RATIO);
        e.recharge >= i[this.index].pay ? n ? (this.buyBtn.enabled = !1, this.buyBtn.visible = !1, 
        this.buyBtn.icon = "rebatehall_title1", this.redpoint.visible = !1) : (this.buyBtn.enabled = !0, 
        this.buyBtn.icon = "rebatehall_title1", this.redpoint.visible = !0, this.buyBtn.visible = !0) : (this.buyBtn.enabled = !0, 
        this.buyBtn.icon = "prettygift_title5", this.buyBtn.filters = [], this.redpoint.visible = !1, 
        this.buyBtn.visible = !0);
    }, e.prototype.updateTime = function() {
        var t = RebateData9.ins();
        Math.floor((this.totalTime - egret.getTimer()) / 1e3);
        this.timeTxt.text = CountdownHelp.countdown1(t.sTime, t.eTime, this.totalTime);
    }, e;
}(BaseView);

__reflect(RebateSubPanel9.prototype, "RebateSubPanel9");

window.RebateSubPanel9 = RebateSubPanel9;

var ChargeTipsView = function(t) {
    function e(e, i) {
        var n = t.call(this) || this;
        return n.skinName = "ChargeTipsViewSkin", n.type = e, n.arrowBtn = i, n.name = "ChargeTipsView" + e, 
        n;
    }
    return __extends(e, t), e.prototype.createChildren = function() {
        this.open();
    }, e.prototype.$onClose = function() {}, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEvent(this.buyBtn, this.onClick), this.addTouchEvent(this.closeBtn, this.onClick), 
        this.setData(), this.totalTime = 1e4 + egret.getTimer(), TimerManager.ins().doTimer(1e3, 0, this.updateTime, this);
    }, e.prototype.setData = function() {
        var t, i;
        switch (this.type) {
          case e.TYPE0:
            t = GlobalConfig.ins().ChongZhi1Config[0][0][0], this.mc = new MovieClip(), this.mcCon.addChild(this.mc), 
            i = ResPath.getUILingChongPath(MuChangManager.ins().LINGCHONG_ID7), this.mc.scaleX = .8, 
            this.mc.scaleY = .8, this.mc.x = 10, i && this.mc.playFile(i, -1);
            break;

          case e.TYPE1:
            this.mc = new MovieClip(), this.mcCon.addChild(this.mc), this.mc.x = 20, this.mc.y = 10, 
            this.mc.playFile(ResPath.getTitlePath(19), -1);
            break;

          case e.TYPE3:
            this.mc = new MovieClip(), this.mcCon.addChild(this.mc), i = ResPath.getUIEffectPath(UiEffectType.Type10), 
            this.mc.scaleX = .6, this.mc.scaleY = .6, this.mc.x = 40, i && this.mc.playFile(i, -1);
        }
        this.bg.source = "charge_tips_bg" + this.type;
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeTouchEvent(this.buyBtn, this.onClick), this.removeTouchEvent(this.closeBtn, this.onClick), 
        TimerManager.ins().remove(this.updateTime, this), DisplayUtils.removeFromParent(this);
    }, e.prototype.onClick = function(t) {
        if (t.target == this.buyBtn) {
            switch (this.type) {
              case e.TYPE0:
                ViewManager.ins().open(NewFirstChargeWin);
                break;

              case e.TYPE1:
                ViewManager.ins().open(HundredRebateWin);
                break;

              case e.TYPE3:
                ViewManager.ins().open(NewFirstChargeWin);
            }
            this.close();
        } else t.target == this.closeBtn && this.close();
    }, e.prototype.updateTime = function() {
        var t = this.totalTime - egret.getTimer();
        0 >= t && this.close();
    }, e.TYPE0 = 0, e.TYPE1 = 1, e.TYPE2 = 2, e.TYPE3 = 3, e.MAX = 4, e.curLevel = -1, 
    e;
}(BaseView);

__reflect(ChargeTipsView.prototype, "ChargeTipsView");

window.ChargeTipsView = ChargeTipsView;

var Recharge3Win = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e._oneDay = DateUtils.HOURS_PER_DAY * DateUtils.SECOND_PER_HOUR, e.activityID = 20, 
        e.initUI(), e;
    }
    return __extends(e, t), e.prototype.initUI = function() {
        this.skinName = "TotalChargeActSkin", this.name = "累计充值", this.list.itemRenderer = TotalChargeActItem;
    }, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.setWinData(), this.observe(Recharge.ins().postUpdateRecharge, this.setWinData), 
        this.addTouchEvent(this.recharge, this.onTabTouch);
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeTouchEvent(this.recharge, this.onTabTouch), this.removeObserve();
    }, e.prototype.onTabTouch = function(t) {
        switch (t.currentTarget) {
          case this.recharge:
            ViewManager.ins().open(ChargeFirstWin);
        }
    }, e.prototype.setWinData = function() {
        this._data = Recharge.ins().getRechargeData(1), this.desc.text = "已累计充值" + this._data.num + "元宝";
        var t = GlobalConfig.ins().ChongZhi2Config[this._data.day / DateUtils.DAYS_PER_WEEK >= 1 ? 2 : 1][this._data.day % 7], e = [];
        for (var i in t) e.push(t[i]), t[i].statu = this._data.isAwards >> t[i].index & 1;
        e = e.sort(this.sort), this.list.dataProvider = new eui.ArrayCollection(e);
        var n = GameServer.serverTime / 1e3 - 60 * new Date().getTimezoneOffset();
        n > this._oneDay && (n -= this._oneDay);
        var s = this._oneDay - n % this._oneDay, a = Math.floor(s / DateUtils.SECOND_PER_HOUR), o = Math.floor(s % DateUtils.SECOND_PER_HOUR / 60);
        this.date.text = a + "时" + o + "分";
    }, e.prototype.sort = function(t, e) {
        var i = t.pay, n = e.pay;
        return 0 == t.statu && 1 == e.statu ? -1 : 1 == t.statu && 0 == e.statu ? 1 : i > n ? 1 : n > i ? -1 : 0;
    }, e;
}(BaseView);

__reflect(Recharge3Win.prototype, "Recharge3Win"), ViewManager.ins().reg(Recharge3Win, LayerManager.UI_Main);

window.Recharge3Win = Recharge3Win;

var RegressSubPanel0 = function(t) {
    function e() {
        var e = t.call(this) || this;
        e.skinName = "RegressSubSkin0", e.list.itemRenderer = ItemBase;
        var i = GlobalConfig.ins().RegressRewardsConfig;
        for (var n in i) e.setSkinPart("day" + n, new RegressSubItem0()), e["day" + n].data = i[n];
        return e;
    }
    return __extends(e, t), e.prototype.initUI = function() {}, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEndEvent(this.btnGet, this.onBtnClick), this.addTouchEndEvent(this.day1, this.onItemTouch), 
        this.addTouchEndEvent(this.day2, this.onItemTouch), this.addTouchEndEvent(this.day3, this.onItemTouch), 
        this.addTouchEndEvent(this.day4, this.onItemTouch), this.addTouchEndEvent(this.day5, this.onItemTouch), 
        this.addTouchEndEvent(this.day6, this.onItemTouch), this.addTouchEndEvent(this.day7, this.onItemTouch), 
        this.observe(Regress.ins().postRegressLoadData, this.updateData), Regress.ins().sendRegressLoadInfo(), 
        this.updateTime();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeEvents(), this.removeObserve(), this.selectItem = null;
    }, e.prototype.updateData = function() {
        var t = RegressBaseData0.ins();
        t && (this.loginDayTxt.text = "登陆天数：" + t.day, this.selectIndex = this.getNextIndex(), 
        this.selectDay());
    }, e.prototype.onItemTouch = function(t) {
        t.target.parent instanceof RegressSubItem0 && (this.selectIndex = t.target.parent.day), 
        null != this.selectItem && (this.selectItem.selected = !1), this.selectDay();
    }, e.prototype.upDayItem = function() {
        var t = GlobalConfig.ins().RegressRewardsConfig;
        for (var e in t) this["day" + e].redPoint.visible = RegressBaseData0.ins().day >= t[e].day && 0 == (RegressBaseData0.ins().flag >> t[e].day & 1), 
        this["day" + e].imgGet.visible = 1 == (RegressBaseData0.ins().flag >> t[e].day & 1), 
        this["day" + e].selected = this.selectIndex == this["day" + e].day;
    }, e.prototype.selectDay = function() {
        this.upDayItem();
        var t = this.selectIndex, e = GlobalConfig.ins().RegressRewardsConfig[t];
        this.list.dataProvider = new eui.ArrayCollection(e.rewards), this.btnGet.visible = !RegressBaseData0.ins().getFlag(t), 
        this.imgGet.visible = !this.btnGet.visible, t > RegressBaseData0.ins().day ? (this.btnGet.icon = "rebatehall_title2", 
        this.btnGet.enabled = !1, this.btnGet.filters = [ ColorUtil.colorMat ]) : (this.btnGet.icon = "rebatehall_title1", 
        this.btnGet.enabled = !0, this.btnGet.filters = null);
    }, e.prototype.getNextIndex = function() {
        var t, e = RegressBaseData0.ins(), i = GlobalConfig.ins().RegressRewardsConfig;
        for (var n in i) if (t = i[n]) {
            var s = e.day >= t.day && 0 == (e.flag >> t.day & 1);
            if (s) return t.day;
        }
        var a;
        return i[Object.keys(i).length] && (a = i[Object.keys(i).length].day), e.day > a ? a : e.day;
    }, e.prototype.onBtnClick = function(t) {
        t.target == this.btnGet && Regress.ins().sendGetRegressLoadAward(this.selectIndex);
    }, e.prototype.updateTime = function() {
        var t = RegressBaseData.ins();
        if (t) {
            var e = DateUtils.formatMiniDateTime(t.eTime) - GameServer.serverTime;
            this.totalTime = e + egret.getTimer(), this.timeTxt.text = CountdownHelp.countdown1(t.sTime, t.eTime, this.totalTime);
        }
    }, e;
}(BaseView);

__reflect(RegressSubPanel0.prototype, "RegressSubPanel0");

window.RegressSubPanel0 = RegressSubPanel0;

var RegressSubPanel1 = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "RegressSubSkin1", e.listData = new eui.ArrayCollection(), e.list.itemRenderer = RegressSubItem1, 
        e.list.dataProvider = e.listData, e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEndEvent(this.giveBtn, this.onTop), this.addTouchEvent(this.list, this.onTop), 
        this.observe(Regress.ins().postRegressRecallData, this.upData), Regress.ins().sendRegreeRecallInfo(), 
        this.updateTime();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeEvents(), this.removeObserve();
    }, e.prototype.upData = function() {
        var t = GlobalConfig.ins().RegressRecallConfig, e = [];
        for (var i in t) t[i] && e.push(t[i]);
        this.listData.replaceAll(e), this.list.dataProvider = this.listData;
    }, e.prototype.onTop = function(t) {
        switch (t.target) {
          case this.giveBtn:
            ViewManager.ins().open(RegressFriendsWin);
        }
        if (t.target instanceof eui.Button && t.target.parent instanceof RegressSubItem1) {
            var e = t.target.parent.type;
            if (1 == e) {
                var i = t.target.parent.id;
                Regress.ins().sendGetRegressRecall(i);
            }
            2 == e && (Regress.ins().sendGetInvite(), PfActivity.ins().allShareSdk());
        }
    }, e.prototype.updateTime = function() {
        var t = RegressBaseData.ins();
        if (t) {
            var e = DateUtils.formatMiniDateTime(t.eTime) - GameServer.serverTime;
            this.totalTime = e + egret.getTimer(), this.timeTxt.text = CountdownHelp.countdown1(t.sTime, t.eTime, this.totalTime);
        }
    }, e;
}(BaseView);

__reflect(RegressSubPanel1.prototype, "RegressSubPanel1");

window.RegressSubPanel1 = RegressSubPanel1;

var RegressSubPanel2 = function(t) {
    function e() {
        var e = t.call(this) || this;
        e.skinName = "RegressSubSkin2", e.iconList.itemRenderer = RegressSubItem2, e.list.itemRenderer = ItemBase;
        var i = [];
        for (var n in GlobalConfig.ins().RegressGiftConfig) i.push(GlobalConfig.ins().RegressGiftConfig[n]);
        return e.iconList.dataProvider = new eui.ArrayCollection(i), e.mc0 = new MovieClip(), 
        e.mc0.x = 168, e.mc0.y = 125, e.mc1 = new MovieClip(), e.mc1.x = 132, e.mc1.y = 175, 
        e.mc2 = new MovieClip(), e.mc2.x = 190, e.mc2.y = 185, e.mc = new MovieClip(), e.mc.x = 163, 
        e.mc.y = 136, e.costNum = BitmapNumber.ins().createNumPic(0, "num21"), e.addChild(e.costNum), 
        e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEndEvent(this.btnBuy, this.onBtnClick), this.iconList.addEventListener(eui.ItemTapEvent.ITEM_TAP, this.selectIcon, this), 
        this.observe(Regress.ins().postRegressGiftData, this.updateData), Regress.ins().sendRegressGiftInfo(), 
        this.updateTime();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeTouchEvent(this.btnBuy, this.onBtnClick), this.iconList.removeEventListener(eui.ItemTapEvent.ITEM_TAP, this.selectIcon, this), 
        this.removeObserve();
    }, e.prototype.selectIcon = function(t) {
        this.setSelectIndex(this.iconList.selectedIndex);
    }, e.prototype.setSelectIndex = function(t) {
        var e = GlobalConfig.ins().RegressGiftConfig[t + 1];
        if (e) {
            if (this.list.dataProvider = new eui.ArrayCollection(e.awards), BitmapNumber.ins().changeNum(this.costNum, e.pay, "num21", 4), 
            this.costNum.x = this.img0.x + this.img0.width + 1, this.costNum.y = this.img0.y - 1, 
            this.img1.x = this.costNum.x + this.costNum.width - 4, this.img2.x = this.img1.x + this.img1.width - 3, 
            this.img3.x = this.img2.x + this.img2.width - 3, this.img3.source = "regress_smallname" + e.index, 
            this.isShowMC.visible = 1 == e.index || 2 == e.index, this.imgShow.visible = !this.isShowMC.visible, 
            1 == e.index || 2 == e.index) {
                if (this.refreshMc(), 1 == e.index) {
                    var i = GlobalConfig.ins().RegressBaseConfig.lc_id;
                    this.mc.playFile(ResPath.getUILingChongPath(i), -1, null, !1, !1), this.isShowMC.addChild(this.mc);
                }
                if (2 == e.index) {
                    for (var n = 0; 3 > n; n++) {
                        var s = this["mc" + n];
                        this.isShowMC.addChildAt(s, n);
                    }
                    this.mc0.playFile(ResPath.getAnimaPath(1, 2), -1), this.mc1.playFile(ResPath.getAnimaPath(1, 3), -1), 
                    this.mc2.playFile(ResPath.getAnimaPath(1, 4), -1);
                }
            } else this.refreshMc(), this.imgShow.source = "regress_show" + e.index + "_png";
            4 == e.index ? this.imgShow.y = 179 : this.imgShow.y = 155, this.isBuyImg.visible = this.isBuyImg.visible = RegressBaseData2.ins().getIsBuy(e.index), 
            this.btnBuy.filters = this.isBuyImg.visible ? [ ColorUtil.colorMat ] : null;
        }
    }, e.prototype.refreshMc = function() {
        this.mc && this.mc.parent && DisplayUtils.removeFromParent(this.mc), this.mc0 && this.mc0.parent && DisplayUtils.removeFromParent(this.mc0), 
        this.mc1 && this.mc1.parent && DisplayUtils.removeFromParent(this.mc1), this.mc2 && this.mc2.parent && DisplayUtils.removeFromParent(this.mc2);
    }, e.prototype.updateData = function() {
        this.iconList.selectedIndex = RegressBaseData2.ins().getNextTabIndex();
        var t = this.iconList.selectedIndex;
        this.iconList.dataProvider.refresh(), this.iconList.selectedIndex = t, this.setSelectIndex(this.iconList.selectedIndex);
    }, e.prototype.onBtnClick = function(t) {
        Regress.ins().sendBuyRegressGift(this.iconList.selectedIndex + 1);
    }, e.prototype.updateTime = function() {
        var t = RegressBaseData.ins();
        if (t) {
            var e = DateUtils.formatMiniDateTime(t.eTime) - GameServer.serverTime;
            this.totalTime = e + egret.getTimer(), this.timeTxt.text = CountdownHelp.countdown1(t.sTime, t.eTime, this.totalTime);
        }
    }, e;
}(BaseView);

__reflect(RegressSubPanel2.prototype, "RegressSubPanel2");

window.RegressSubPanel2 = RegressSubPanel2;

var RegressSubPanel3 = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "RegressSubSkin3", e.listData = new eui.ArrayCollection(), e.list.dataProvider = e.listData, 
        e.list.itemRenderer = RegressSubItem3, e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEndEvent(this.btnRecharge, this.onBtnClick), this.addTouchEvent(this.list, this.onBtnClick), 
        this.observe(UserVip.ins().postUpdataExp, this.updateVip), this.observe(Regress.ins().postRegressTehuiData, this.updateData), 
        Regress.ins().sendRegressTehuiData(), this.updateVip(), this.updateTime();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeTouchEvent(this.btnRecharge, this.onBtnClick), this.removeTouchEvent(this.list, this.onBtnClick), 
        this.removeObserve();
    }, e.prototype.updateData = function() {
        var t = GlobalConfig.ins().RegresTehuiConfig, e = [];
        for (var i in t) t[i] && e.push(t[i]);
        this.listData.replaceAll(e), this.list.dataProvider = this.listData;
    }, e.prototype.updateVip = function() {
        this.curTxt.text = "当前VIP" + UserVip.ins().lv;
    }, e.prototype.onBtnClick = function(t) {
        switch (t.target) {
          case this.btnRecharge:
            Recharge.ins().gameCharge(1);
        }
        t.target instanceof eui.Button && t.target.parent instanceof RegressSubItem3 && Regress.ins().sendBuyRegressTehui(t.target.parent.index);
    }, e.prototype.updateTime = function() {
        var t = RegressBaseData.ins();
        if (t) {
            var e = DateUtils.formatMiniDateTime(t.eTime) - GameServer.serverTime;
            this.totalTime = e + egret.getTimer(), this.timeTxt.text = CountdownHelp.countdown1(t.sTime, t.eTime, this.totalTime);
        }
    }, e;
}(BaseView);

__reflect(RegressSubPanel3.prototype, "RegressSubPanel3");

window.RegressSubPanel3 = RegressSubPanel3;

var RetrievingWin = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.scrollV = 153, e.isInit = !1, e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.isInit || (this.isInit = !0, this.skinName = "RetrievingSkin", this.listData = new eui.ArrayCollection(), 
        this.list.itemRenderer = RetrievingItem, this.list.dataProvider = this.listData), 
        this.addTouchEvent(this.freeBtn, this.onTop), this.addTouchEvent(this.allBtn, this.onTop), 
        this.observe(Retrieving.ins().postData, this.upInfo), this.observe(Retrieving.ins().postData, this.refushList), 
        this.upInfo(), this.uplist();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.isInit && (this.removeEvents(), this.removeObserve());
    }, e.prototype.refushList = function() {
        var t = this, i = RetrievingData.ins();
        if (i) {
            var n = i.id;
            if (0 == e.type && 0 == i.result) {
                for (var s = new RetrievingItem(), a = 0; a < this.listArr.length; a++) n == this.listArr[a].id && (s = this.list.getElementAt(a), 
                this.index = a);
                var o = RetrievingData.ins().upItemArr();
                o.sort(this.sortData), egret.Tween.removeTweens(s), this.recover.scrollPolicyV = "off", 
                this.list.touchChildren = !1, egret.Tween.get(s).to({
                    alpha: 0,
                    height: 0
                }, 2e3).call(function() {
                    if (t.recover.visible = i.isAllNum() && i.isFreeNum(), t.noRecover.visible = !(i.isAllNum() && i.isFreeNum()), 
                    t.listArr = RetrievingData.ins().upItemArr(), t.listData.replaceAll(t.listArr), 
                    t.list.dataProvider = t.listData, t.listArr.length > 0) for (var e = new RetrievingItem(), n = 0; n < t.listArr.length; n++) e = t.list.getElementAt(n), 
                    e && 0 == e.alpha && 0 == e.height && (t.list.getElementAt(n).alpha = 1, t.list.getElementAt(n).height = 150); else t.noRecover.visible = !0, 
                    t.recover.visible = !1;
                    t.recover.scrollPolicyV = "on", t.list.touchChildren = !0;
                    var s = t.scrollV * RetrievingData.ins().upItemArr().length, a = t.list.scrollV, o = s - t.list.height;
                    return 0 > o ? void (t.list.scrollV = 0) : void (a + t.list.height - s > 0 ? t.list.scrollV = o : t.list.scrollV = a);
                }, this);
            }
            1 == e.type && 1 == i.oneKeyResult && (this.noRecover.visible = !0, this.noRecover.alpha = 0, 
            egret.Tween.removeTweens(this.recover), egret.Tween.removeTweens(this.noRecover), 
            egret.Tween.get(this.recover).to({
                alpha: 0
            }, 2e3).call(function() {
                t.recover.visible = !1;
            }, this), egret.Tween.get(this.noRecover).to({
                alpha: 1
            }, 2e3)), e.type = null;
        }
    }, e.prototype.upInfo = function() {
        this.notes.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(LangManager.retrieving_str0));
        var t = RetrievingData.ins();
        t && (t.isAllNum() ? (this.allBtn.enabled = !0, this.allBtn.filters = []) : (this.allBtn.enabled = !1, 
        this.allBtn.filters = [ ColorUtil.colorMat ]), t.isFreeNum() ? (this.freeBtn.enabled = !0, 
        this.freeBtn.filters = []) : (this.freeBtn.enabled = !1, this.freeBtn.filters = [ ColorUtil.colorMat ]));
    }, e.prototype.uplist = function() {
        var t = RetrievingData.ins();
        if (t && (this.recover.visible = t.isAllNum() || t.isFreeNum(), this.noRecover.visible = !this.recover.visible, 
        this.recover.visible)) {
            var e = RetrievingData.ins().upItemArr(), i = [];
            this.listArr = [];
            for (var n = 0; n < e.length; n++) i.push(e[n]), this.listArr.push(e[n]);
            i.sort(this.sortData), this.listData.replaceAll(i), this.list.dataProvider = this.listData;
        }
    }, e.prototype.sortData = function(t, e) {
        var i = !(t.num > 0 || t.buyNum > 0), n = !(e.num > 0 || e.buyNum > 0);
        return i && n || !i && !n ? t.id > e.id ? 1 : t.id < e.id ? -1 : 0 : i ? 1 : -1;
    }, e.prototype.updateInfo = function() {
        this.list.dataProvider.refresh();
    }, e.prototype.onTop = function(t) {
        switch (t.target) {
          case this.freeBtn:
            ViewManager.ins().open(RetrievingOneKeyWin, 0);
            break;

          case this.allBtn:
            ViewManager.ins().open(RetrievingOneKeyWin, 1);
        }
    }, e;
}(BaseView);

__reflect(RetrievingWin.prototype, "RetrievingWin");

window.RetrievingWin = RetrievingWin;

var FireItem = function(t) {
    function e(e) {
        var i = t.call(this) || this;
        return i.skinName = e, i;
    }
    return __extends(e, t), e.prototype.isShow = function(t) {
        t && (this.mc || (this.mc = new MovieClip()), this.mc.playFile(ResPath.getUIEffectPath(UiEffectType.Type35), -1), 
        this.fireCon.addChild(this.mc));
    }, e.prototype.clearEff = function() {
        this.mc && (this.mc.stop(), DisplayUtils.removeFromParent(this.mc));
    }, e;
}(BaseView);

__reflect(FireItem.prototype, "FireItem");

window.FireItem = FireItem;

var FireList = function(t) {
    function e(e, i, n) {
        void 0 === e && (e = 10), void 0 === i && (i = 0), void 0 === n && (n = 0);
        var s = t.call(this) || this;
        s._styleList = [ "FireItemSkin" ], s._itemWidthList = [ 40 ], s._statListLength = e, 
        s._starNum = i, s._itemWidth = s._itemWidthList[n], s.list = [];
        for (var a = 0; a < s._statListLength; a++) {
            var o = new FireItem(s._styleList[n]);
            o.x = a * s._itemWidth + 2 * a, s.addChild(o), a <= s._starNum - 1 && o.isShow(1), 
            s.list.push(o);
        }
        return s;
    }
    return __extends(e, t), Object.defineProperty(e.prototype, "starNum", {
        get: function() {
            return this._starNum;
        },
        set: function(t) {
            if (this._starNum == this._statListLength && 1 == t) for (var e = 0; e < this.list.length; e++) this.list[e].clearEff();
            if (this._starNum != t) {
                this._starNum = t;
                for (var e = 0; e < this._statListLength; e++) e <= this._starNum - 1 ? this.list[e].isShow(1) : this.list[e].isShow(0);
            }
        },
        enumerable: !0,
        configurable: !0
    }), Object.defineProperty(e.prototype, "listLength", {
        get: function() {
            return this._statListLength;
        },
        enumerable: !0,
        configurable: !0
    }), e;
}(BaseView);

__reflect(FireList.prototype, "FireList");

window.FireList = FireList;

var JingMaiPanel = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.curRole = 0, e.curLv = -1, e.skinName = "JinMaiSkin", e.name = "经脉", e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.init();
    }, e.prototype.init = function() {
        this.danItemID = GlobalConfig.ins().JingMaiCommonConfig.levelItemid, this.powerContainer.parent && (this.power = BitmapNumber.ins().createNumPic(0, BitmapNumber.numType0), 
        this.power.x = this.powerContainer.x, this.power.y = this.powerContainer.y, this.powerContainer.parent.addChild(this.power), 
        this.powerContainer.parent.removeChild(this.powerContainer)), this.lightList = [ this.light_0, this.light_1, this.light_2, this.light_3, this.light_4, this.light_5, this.light_6, this.light_7 ], 
        this.selectList = [ this.select0, this.select1, this.select2, this.select3, this.select4, this.select5, this.select6, this.select7 ], 
        this.eff = new MovieClip(), this.addChild(this.eff), this.eff.playFile(ResPath.getUIEffectPath(UiEffectType.Type25), -1), 
        this.eff.touchEnabled = !0;
    }, e.prototype.open = function() {
        this.addTouchEvent(this.eff, this.onTap), this.addTouchEvent(this.boostBtn, this.onTap), 
        this.addTouchEvent(this.upgradeBtn, this.onTap), this.addTouchEvent(this.bigUpLevelBtn, this.onTap), 
        this.observe(UserJingMai.ins().postUpdate, this.doAotoData), this.observe(UserJingMai.ins().postUpdate, this.setliang), 
        this.observe(GameLogic.ins().postGoldChange, this.setForgeData), this.setForgeData();
    }, e.prototype.close = function() {
        TimerManager.ins().remove(this.doAutoUpgrade, this), UserJingMai.ins().isAutoUpgrade = !1, 
        this.removeTouchEvent(this.boostBtn, this.onTap), this.removeTouchEvent(this.upgradeBtn, this.onTap), 
        this.removeTouchEvent(this.bigUpLevelBtn, this.onTap), this.removeObserve(), this.curLv = -1;
    }, e.prototype.onTap = function(t) {
        var e = this;
        switch (t.currentTarget) {
          case this.eff:
            UserJingMai.ins().oldLv = this._data.level / JingMaiData.COUNT_PER_STAGE >> 0, UserJingMai.ins().isAutoUpgrade = !1, 
            this.doAutoUpgrade(), this.upgrade();
            break;

          case this.boostBtn:
            UserJingMai.ins().oldLv = this._data.level / JingMaiData.COUNT_PER_STAGE >> 0, this.upgrade();
            break;

          case this.upgradeBtn:
            UserJingMai.ins().sendUpgrade(this.curRole);
            break;

          case this.bigUpLevelBtn:
            var i = GlobalConfig.ins().ItemConfig(this.danItemID).name;
            WarnWin.show("确定使用" + i + "提升当前经脉吗？\n说明：\n" + GlobalConfig.ins().JingMaiCommonConfig.levelItemidStage + "阶及以下经脉使用可直升1阶\n其他等阶使用转换为" + GlobalConfig.ins().JingMaiCommonConfig.levelItemChange + "个" + GlobalConfig.ins().ItemConfig(GlobalConfig.ins().JingMaiCommonConfig.itemid).name, function() {
                UserJingMai.ins().sendBigUpLevel(e.curRole);
            }, this);
        }
    }, e.prototype.doAutoUpgrade = function() {
        var t = this._data.level / JingMaiData.COUNT_PER_STAGE >> 0;
        UserJingMai.ins().oldLv < t && (UserJingMai.ins().isAutoUpgrade = !1), UserJingMai.ins().isAutoUpgrade && this.upgrade();
    }, e.prototype.upgrade = function() {
        var t = GlobalConfig.ins().JingMaiLevelConfig(this._data.level);
        Actor.gold >= t.count ? UserJingMai.ins().sendBoost(this.curRole) : (UserJingMai.ins().isAutoUpgrade = !1, 
        UserWarn.ins().setBuyGoodsWarn(RewardDataCurrency.Glod));
    }, e.prototype.showLight = function(t, e) {
        for (var i = 0, n = this.selectList; i < n.length; i++) {
            var s = n[i];
            s.visible = !1;
        }
        for (var a = 0, o = this.lightList; a < o.length; a++) {
            var s = o[a];
            s.visible = !1;
        }
        var r = t > 0 ? t % JingMaiData.COUNT_PER_STAGE : 0;
        this.selectList[r].visible = !1, this.eff.x = this.selectList[r].x + 32, this.eff.y = this.selectList[r].y + 32;
        for (var h = 0; h < JingMaiData.COUNT_PER_STAGE; h++) this.lightList[h].visible = r > h;
    }, e.prototype.doAotoData = function() {
        this.setForgeData();
    }, e.prototype.setForgeData = function() {
        this._data = SubRoles.ins().getSubRoleByIndex(this.curRole).jingMaiData;
        var t = GlobalConfig.ins().JingMaiStageConfig[this._data.stage], e = GlobalConfig.ins().JingMaiLevelConfig(this._data.level);
        this.attr.text = AttributeData.getAttStr(e.attr, 0, 1, " +"), this._totalPower = UserBag.getAttrPower(e.attr), 
        BitmapNumber.ins().changeNum(this.power, this._totalPower, BitmapNumber.numType0);
        var i = this._data.level / JingMaiData.COUNT_PER_STAGE - t.stage;
        if (t.stage < GlobalConfig.ins().JingMaiCommonConfig.stageMax) {
            var n = void 0, s = void 0;
            if (n = this._data.level > 0 && this._data.level % JingMaiData.COUNT_PER_STAGE == 0 && i ? GlobalConfig.ins().JingMaiStageConfig[this._data.stage + 1] : t, 
            s = GlobalConfig.ins().JingMaiLevelConfig(this._data.level + 1), 0 == this.nextAttr.visible && (this.nextAttr.visible = !0, 
            this.countLabel.x = 2, this.countLabel.y = 497), s) {
                this.boostBtn.visible = !0, this.upgradeBtn.visible = !1, this.nextAttr.text = AttributeData.getAttStr(s.attr, 0, 1, " +");
                var a = RewardData.getCurrencyName(RewardDataCurrency.Glod), o = Actor.gold, r = "";
                r = o >= e.count ? "|C:0x00ff00&" : "|C:0xff0000&", this.countLabel.textFlow = TextFlowMaker.generateTextFlow("消耗" + a + "：" + r + o + "| / " + e.count);
            } else this.boostBtn.visible = !1, this.countLabel.text = "", this.nextAttr.text = "经脉已达最高等级";
            this.showLight(this._data.level, i), this.updateStage();
            var h = !1;
            -1 == this.curLv || this.curLv != this._data.level && (h = !0), this.curLv = this._data.level;
        } else this.nextAttr.visible = !1, this.boostBtn.visible = !1, this.upgradeBtn.visible = !1, 
        this.countLabel.x = this.nextAttr.x - 60, this.countLabel.y = this.nextAttr.y, this.countLabel.text = "经脉已达最高等级阶", 
        i = 1;
        var l = UserBag.ins().getBagGoodsCountById(0, this.danItemID);
        this.bigUpLevelBtn.redPoint && (this.bigUpLevelBtn.redPoint.visible = l ? !0 : !1), 
        this.bigUpLevelBtn.txt && (this.bigUpLevelBtn.txt.text = l), this.redPoint0 && (this.redPoint0.visible = UserBag.ins().getBagGoodsCountById(0, 200103) > 0);
    }, e.prototype.setliang = function() {
        var t = GlobalConfig.ins().JingMaiStageConfig[this._data.stage], e = (this._data.level / JingMaiData.COUNT_PER_STAGE - t.stage, 
        this._data.level > 0 ? this._data.level % JingMaiData.COUNT_PER_STAGE : 0), i = 0 == e ? 7 : e - 1;
        this.mc || (this.mc = new MovieClip()), this.mc.x = this.selectList[i].x + 32, this.mc.y = this.selectList[i].y + 32, 
        this.mc.rate = 3, this.mc.playFile(ResPath.getUIEffectPath(UiEffectType.Type39), 1), 
        this.addChild(this.mc);
    }, e.prototype.updateStage = function() {
        var t = this._data.level, e = Math.floor(t / JingMaiData.COUNT_PER_STAGE);
        this.expendLabel.text = e + 1 + "阶";
    }, e.prototype.showHand = function() {}, e.prototype.showHandChangeEffect = function(t, e, i) {}, 
    e;
}(BaseView);

__reflect(JingMaiPanel.prototype, "JingMaiPanel");

window.JingMaiPanel = JingMaiPanel;

var LianHunItem = function(t) {
    function e(e) {
        var i = t.call(this) || this;
        return i.skinName = "LianHunItemSkin", i.index = e, i;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.init();
    }, e.prototype.init = function() {}, e.prototype.open = function() {}, e.prototype.close = function() {}, 
    e.prototype.setData = function(t) {
        t >= this.index ? this.addEff() : this.removeEff();
    }, e.prototype.addEff = function() {
        this.mc || (this.mc = new MovieClip()), this.mc.playFile(ResPath.getUIEffectPath(UiEffectType.Type35), -1), 
        this.mcCon.addChild(this.mc);
    }, e.prototype.removeEff = function() {
        this.mc && (this.mc.stop(), DisplayUtils.removeFromParent(this.mc));
    }, e;
}(BaseView);

__reflect(LianHunItem.prototype, "LianHunItem");

window.LianHunItem = LianHunItem;

var LianHunView = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.itemList = [], e.startPos = [], e.endX = 224, e.endY = 325, e.skinName = "LianHunSkin", 
        e.name = "炼魂", e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.init();
        for (var t = 0; t < GlobalConfig.ins().LianHunCommonConfig.levelPerStage; t++) this.setSkinPart("item" + t, new LianHunItem(t + 1)), 
        this.itemList[t] = this["item" + t], this.startPos[t] = {
            x: this.itemList[t].x,
            y: this.itemList[t].y
        };
        this.getItemTxt.textFlow = new egret.HtmlTextParser().parse("<u>" + this.getItemTxt.text + "</u>"), 
        this.power = BitmapNumber.ins().createNumPic(0, BitmapNumber.numType0), this.powerContainer.addChild(this.power), 
        this.numChong = BitmapNumber.ins().createNumPic(0, "num19", 10), this.numCon.addChild(this.numChong);
    }, e.prototype.init = function() {}, e.prototype.open = function() {
        this.curConfig = null;
        for (var t = 0; t < GlobalConfig.ins().LianHunCommonConfig.levelPerStage; t++) this.itemList[t].open();
        this.addTouchEvent(this.upgradeBtn, this.onClick), this.addTouchEvent(this.getItemTxt, this.onClick), 
        this.observe(UserBag.ins().postItemAdd, this.setCount), this.observe(UserBag.ins().postItemDel, this.setCount), 
        this.observe(UserBag.ins().postItemChange, this.setCount), this.observe(LianHun.ins().postLianHunData, this.updateData), 
        this.updateData();
    }, e.prototype.close = function() {
        for (var t = 0; t < GlobalConfig.ins().LianHunCommonConfig.levelPerStage; t++) this.itemList[t].close();
        this.removeEvents(), this.isFly = !1;
    }, e.prototype.updateData = function() {
        var t = this;
        this.isFly && this.resetPost();
        var e = SubRoles.ins().getSubRoleByIndex(0), i = e.lianhunData.level, n = i % GlobalConfig.ins().LianHunCommonConfig.levelPerStage;
        if (this.curConfig && 0 == n && i > 0) {
            this.isFly = !0;
            for (var s = 0; s < GlobalConfig.ins().LianHunCommonConfig.levelPerStage; s++) this.itemList[s].setData(10);
            for (var s = 0; s < GlobalConfig.ins().LianHunCommonConfig.levelPerStage; s++) s == GlobalConfig.ins().LianHunCommonConfig.levelPerStage - 1 ? egret.Tween.get(this.itemList[s]).to({
                x: this.endX,
                y: this.endY
            }, 1e3).call(function() {
                t.resetPost(), t.setCurData();
            }) : egret.Tween.get(this.itemList[s]).to({
                x: this.endX,
                y: this.endY
            }, 1e3);
        } else this.setCurData();
    }, e.prototype.resetPost = function() {
        for (var t = 0; t < GlobalConfig.ins().LianHunCommonConfig.levelPerStage; t++) egret.Tween.removeTweens(this.itemList[t]), 
        this.itemList[t].setData(0), this.itemList[t].x = this.startPos[t].x, this.itemList[t].y = this.startPos[t].y;
        this.isFly = !1;
    }, e.prototype.setCurData = function() {
        var t = SubRoles.ins().getSubRoleByIndex(0), e = t.lianhunData.level, i = e % GlobalConfig.ins().LianHunCommonConfig.levelPerStage, n = t.lianhunData.stage, s = GlobalConfig.ins().LianHunLevelConfig(e);
        this.curConfig = s;
        for (var a = 0; a < GlobalConfig.ins().LianHunCommonConfig.levelPerStage; a++) this.itemList[a].setData(i);
        this.attr.text = AttributeData.getAttStr(s.attr, 0, 1, " +"), this.setCount();
        var o = GlobalConfig.ins().ItemConfig(s.costitem.id);
        this.icon.source = ResPath.getItemIconPath(o.icon);
        var r = GlobalConfig.ins().LianHunLevelConfig(e + 1);
        if (r) {
            this.nextAttr.text = AttributeData.getAttStr(r.attr, 0, 1, " +");
            for (var a = 0; a < s.attr.length; a++) this["arrow" + a] && (this["arrow" + a].visible = s.attr[a].value < r.attr[a].value);
        } else this.nextAttr.text = "已满级";
        this.arrowCon.x = this.nextAttr.x + this.nextAttr.width + 2, BitmapNumber.ins().changeNum(this.numChong, n, "num19", 13), 
        this.img0.x = this.numCon.x + this.numChong.width - 20;
        var h = UserBag.getAttrPower(s.attr);
        BitmapNumber.ins().changeNum(this.power, h, BitmapNumber.numType0);
    }, e.prototype.setCount = function() {
        if (this.curConfig) {
            var t = UserBag.ins().getBagGoodsCountById(0, this.curConfig.costitem.id), e = t >= this.curConfig.costitem.count ? LangManager.commonStr38 : LangManager.commonStr37;
            this.countLabel.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(e, t, this.curConfig.costitem.count));
        }
    }, e.prototype.onClick = function(t) {
        switch (t.target) {
          case this.upgradeBtn:
            if (this.curConfig) {
                var e = UserBag.ins().getBagGoodsCountById(0, this.curConfig.costitem.id);
                e >= this.curConfig.costitem.count ? LianHun.ins().sendUpgrade() : UserWarn.ins().setBuyGoodsWarn(this.curConfig.costitem.id, 1);
            }
            break;

          case this.getItemTxt:
            this.curConfig && UserWarn.ins().setBuyGoodsWarn(this.curConfig.costitem.id, 1);
        }
    }, e;
}(BaseView);

__reflect(LianHunView.prototype, "LianHunView");

window.LianHunView = LianHunView;

var OtherJingMaiPanel = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "JinMaiSkin", e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.init();
    }, e.prototype.init = function() {
        this.powerContainer.parent && (this.power = BitmapNumber.ins().createNumPic(0, BitmapNumber.numType0), 
        this.power.x = this.powerContainer.x, this.power.y = this.powerContainer.y, this.powerContainer.parent.addChild(this.power), 
        this.powerContainer.parent.removeChild(this.powerContainer)), this.boostBtn.visible = !1, 
        this.countLabel.visible = !1, this.lightList = [ this.light_0, this.light_1, this.light_2, this.light_3, this.light_4, this.light_5, this.light_6, this.light_7 ], 
        this.selectList = [ this.select0, this.select1, this.select2, this.select3, this.select4, this.select5, this.select6, this.select7 ];
    }, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        var i = t[0];
        this._data = i.roleData[0].jingMaiData, this.setForgeData();
    }, e.prototype.close = function() {}, e.prototype.setForgeData = function() {
        var t = GlobalConfig.ins().JingMaiStageConfig[this._data.stage], e = GlobalConfig.ins().JingMaiLevelConfig(this._data.level);
        this.attr.text = AttributeData.getAttStr(e.attr, 0, 1, " +"), this._totalPower = UserBag.getAttrPower(e.attr), 
        BitmapNumber.ins().changeNum(this.power, this._totalPower, BitmapNumber.numType0);
        var i = this._data.level / JingMaiData.COUNT_PER_STAGE - t.stage;
        if (t.stage < GlobalConfig.ins().JingMaiCommonConfig.stageMax) {
            var n = void 0, s = void 0;
            n = this._data.level > 0 && this._data.level % JingMaiData.COUNT_PER_STAGE == 0 && i ? GlobalConfig.ins().JingMaiStageConfig[this._data.stage + 1] : t, 
            s = GlobalConfig.ins().JingMaiLevelConfig(this._data.level + 1), 0 == this.nextAttr.visible && (this.nextAttr.visible = !0), 
            s ? this.nextAttr.text = AttributeData.getAttStr(s.attr, 0, 1, " +") : this.nextAttr.text = "经脉已达最高等级", 
            this.showLight(this._data.level, i), this.updateStage();
        } else this.nextAttr.visible = !1, this.boostBtn.visible = !1, this.upgradeBtn.visible = !1, 
        i = 1;
    }, e.prototype.updateStage = function() {
        var t = this._data.level, e = Math.floor(t / JingMaiData.COUNT_PER_STAGE);
        this.expendLabel.text = e + 1 + "阶";
    }, e.prototype.showLight = function(t, e) {
        for (var i = 0, n = this.selectList; i < n.length; i++) {
            var s = n[i];
            s.visible = !1;
        }
        for (var a = 0, o = this.lightList; a < o.length; a++) {
            var s = o[a];
            s.visible = !1;
        }
        var r = t > 0 ? t % JingMaiData.COUNT_PER_STAGE : 0;
        this.selectList[r].visible = !0;
        for (var h = 0; h < JingMaiData.COUNT_PER_STAGE; h++) this.lightList[h].visible = r > h;
    }, e;
}(BaseView);

__reflect(OtherJingMaiPanel.prototype, "OtherJingMaiPanel");

window.OtherJingMaiPanel = OtherJingMaiPanel;

var StarItem = function(t) {
    function e(e) {
        var i = t.call(this) || this;
        return i.skinName = e, i;
    }
    return __extends(e, t), e.prototype.isShow = function(t) {
        this.currentState = t ? "2" : "1";
    }, e.prototype.plauEff = function() {
        var t = this;
        this.mc || (this.mc = new MovieClip(), this.mc.x = this.width >> 1, this.mc.y = this.height >> 1), 
        this.mc.playFile(ResPath.getUIEffectPath(UiEffectType.Type40), 1), this.addChild(this.mc), 
        this.starImg && (this.starImg.visible = !1, TimerManager.ins().doTimer(1200, 1, function() {
            t.starImg.visible = !0;
        }, this));
    }, e.prototype.clearEff = function() {
        this.mc && (this.mc.stop(), DisplayUtils.removeFromParent(this.mc));
    }, e;
}(BaseView);

__reflect(StarItem.prototype, "StarItem");

window.StarItem = StarItem;

var StarList = function(t) {
    function e(e, i, n, s) {
        void 0 === e && (e = 10), void 0 === i && (i = 0), void 0 === n && (n = 0), void 0 === s && (s = null);
        var a = t.call(this) || this;
        a._styleList = [ "StarItemSkin", "StarItem2Skin", "StarItem3Skin", "StarItem6Skin", "StarItem7Skin", "StarItem8Skin" ], 
        a._itemWidthList = [ 30, 40, 40, 38, 40, 40 ], a._itemHeightList = [ 30, 40, 40, 38, 40, 40 ], 
        a._index = 0, a._statListLength = e, a._starNum = i, a._itemWidth = a._itemWidthList[n], 
        a._itemHeight = a._itemHeightList[n], a.list = [];
        for (var o = 0; o < a._statListLength; o++) {
            var r = new StarItem(a._styleList[n]), h = s ? o % s * a._itemWidth + 2 * (o % s) : o * a._itemWidth + 2 * o, l = s ? Math.floor(o / s) * a._itemHeight : 0;
            r.x = h, r.y = l, a.addChild(r), o <= a._starNum - 1 && r.isShow(1), a.list.push(r);
        }
        return a;
    }
    return __extends(e, t), Object.defineProperty(e.prototype, "starNum", {
        get: function() {
            return this._starNum;
        },
        set: function(t) {
            if ((this._starNum > 0 && t > this._starNum || 0 == t) && this._index++, this._starNum != t) {
                0 != this._index && this.list[t - 1] && !this.isPaly && this.list[t - 1].plauEff(), 
                this._starNum = t;
                for (var e = 0; e < this._statListLength; e++) e <= this._starNum - 1 ? this.list[e].isShow(1) : this.list[e].isShow(0);
            }
        },
        enumerable: !0,
        configurable: !0
    }), Object.defineProperty(e.prototype, "listLength", {
        get: function() {
            return this._statListLength;
        },
        enumerable: !0,
        configurable: !0
    }), e.prototype.isPlayStar = function(t) {
        void 0 === t && (t = !1), this.isPaly = t;
    }, e;
}(BaseView);

__reflect(StarList.prototype, "StarList");

window.StarList = StarList;

var XinItem = function(t) {
    function e(e) {
        var i = t.call(this) || this;
        return i.skinName = e, i;
    }
    return __extends(e, t), e.prototype.isShow = function(t) {
        this.currentState = t ? "2" : "1";
    }, e.prototype.clearEff = function() {
        this.mc && (this.mc.stop(), DisplayUtils.removeFromParent(this.mc));
    }, e;
}(BaseView);

__reflect(XinItem.prototype, "XinItem");

window.XinItem = XinItem;

var XinList = function(t) {
    function e(e, i, n) {
        void 0 === e && (e = 10), void 0 === i && (i = 0), void 0 === n && (n = 0);
        var s = t.call(this) || this;
        s._styleList = [ "XinItemSkin" ], s._itemWidthList = [ 50 ], s._statListLength = e, 
        s._starNum = i, s._itemWidth = s._itemWidthList[n], s.list = [];
        for (var a = 0; a < s._statListLength; a++) {
            var o = new XinItem(s._styleList[n]);
            o.x = a * s._itemWidth + 2 * a, s.addChild(o), a <= s._starNum - 1 && o.isShow(1), 
            s.list.push(o);
        }
        return s;
    }
    return __extends(e, t), Object.defineProperty(e.prototype, "starNum", {
        get: function() {
            return this._starNum;
        },
        set: function(t) {
            if (this._starNum != t) {
                this._starNum = t;
                for (var e = 0; e < this._statListLength; e++) e <= this._starNum - 1 ? this.list[e].isShow(1) : this.list[e].isShow(0);
            }
        },
        enumerable: !0,
        configurable: !0
    }), Object.defineProperty(e.prototype, "listLength", {
        get: function() {
            return this._statListLength;
        },
        enumerable: !0,
        configurable: !0
    }), e;
}(BaseView);

__reflect(XinList.prototype, "XinList");

window.XinList = XinList;

var NewSevenDayLogWin = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.day = 1, e.isInit = !1, e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.isInit || (this.isInit = !0, this.skinName = "act14logNewSkin", this.dayList.itemRenderer = NewSevenDayLogItem, 
        this.dayList.dataProvider = new eui.ArrayCollection(), this.list.itemRenderer = ItemBase, 
        egret.Tween.get(this.rightImg, {
            loop: !0
        }).to({
            alpha: 0,
            scaleX: 1.6,
            scaleY: 1.6
        }, 1e3).wait(500), egret.Tween.get(this.leftImg, {
            loop: !0
        }).to({
            alpha: 0,
            scaleX: 1.6,
            scaleY: 1.6
        }, 1e3).wait(500)), this.addTouchEndEvent(this.suerBtn, this.onBtnClick), this.addTouchEvent(this.rightBtn, this.onTop), 
        this.addTouchEvent(this.leftBtn, this.onTop), this.dayList.addEventListener(egret.Event.CHANGE, this.selectDay, this), 
        this.observe(Activity.ins().postSevendayIsAwards, this.updateData), this.observe(Activity.ins().postSevendayAwardCallback, this.updateData), 
        this.updateData();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.isInit && (this.dayList.removeEventListener(egret.Event.CHANGE, this.selectDay, this), 
        this.removeEvents(), this.removeObserve(), egret.Tween.removeTweens(this.rightImg), 
        egret.Tween.removeTweens(this.leftImg));
    }, e.prototype.updateData = function() {
        var t = SevenDayLogData.ins(), e = t.dayNum;
        this.daylabel.text = "登陆天数：" + e;
        this.getNextIndex() < 8 ? this.getNextIndex() : this.getNextIndex() - 8;
        this.getNextIndex() < 8 ? (this.leftBtn.visible = !1, this.rightBtn.visible = !0, 
        this.loadList()) : (this.rightBtn.visible = !1, this.leftBtn.visible = !0, this.loadList()), 
        this.dayList.dataProvider.refresh();
    }, e.prototype.onTop = function(t) {
        switch (t.target) {
          case this.leftBtn:
            this.leftBtn.visible = !1, this.rightBtn.visible = !0, this.loadList();
            break;

          case this.rightBtn:
            this.rightBtn.visible = !1, this.leftBtn.visible = !0, this.loadList();
        }
    }, e.prototype.loadList = function() {
        var t = SevenDayLogData.ins().getArr();
        if (this.listData = [], this.rightBtn.visible) for (var e = 0; 8 > e; e++) this.listData.push(t[e]); else if (this.leftBtn.visible) for (var e = 8; e < t.length; e++) this.listData.push(t[e]);
        this.dayList.dataProvider = new eui.ArrayCollection(this.listData), this.rightImg.visible = this.rightBtn.visible, 
        this.leftImg.visible = this.leftBtn.visible, this.dayList.selectedIndex = this.setDayIndex(), 
        this.selectDay();
    }, e.prototype.setDayIndex = function() {
        for (var t = SevenDayLogData.ins(), e = 0; e < this.listData.length; e++) {
            var i = 0 == (t.isAwards >> this.listData[e].day & 1);
            if (i) return e;
        }
        return this.listData.length - 1;
    }, e.prototype.selectDay = function() {
        var t = this.dayList.selectedItem.day, e = GlobalConfig.ins().LoginRewardsConfig[t];
        this.list.dataProvider = new eui.ArrayCollection(e.rewards), this.suerBtn.visible = !(1 == (SevenDayLogData.ins().isAwards >> t & 1)), 
        this.day = e.day;
    }, e.prototype.getNextIndex = function() {
        var t, e = SevenDayLogData.ins();
        for (var i in GlobalConfig.ins().LoginRewardsConfig) {
            t = GlobalConfig.ins().LoginRewardsConfig[i];
            var n = e.dayNum >= t.day && 0 == (e.isAwards >> t.day & 1);
            if (n) return t.day - 1;
        }
        var s = GlobalConfig.ins().LoginRewardsConfig[e.getArr().length];
        return e.dayNum > s.day ? s.day - 1 : e.dayNum - 1;
    }, e.prototype.onBtnClick = function(t) {
        switch (t.currentTarget) {
          case this.suerBtn:
            SevenDayLogData.ins().dayNum >= this.day ? Activity.ins().sendGetSevenDayAwards(this.day) : UserTips.ins().showTips("|C:0xff0000&T:登陆天数不足，无法领取|");
        }
    }, e;
}(BaseView);

__reflect(NewSevenDayLogWin.prototype, "NewSevenDayLogWin");

window.NewSevenDayLogWin = NewSevenDayLogWin;

var SevenDayLogWin = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.dayindex = 0, e.skinName = "act14logSkin", e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.sureImg0.$setTouchEnabled(!1), this.sureImg1.$setTouchEnabled(!1), this.sureImg2.$setTouchEnabled(!1), 
        this.sureImg3.$setTouchEnabled(!1), this.sureImg4.$setTouchEnabled(!1), this.sureImg5.$setTouchEnabled(!1), 
        this.sureImg6.$setTouchEnabled(!1), this.sureImg7.$setTouchEnabled(!1), this.itemary = [];
    }, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEvent(this.group, this.onTouch), this.addTouchEvent(this.suerBtn, this.onTouch), 
        this.observe(Activity.ins().postSevendayAwardCallback, this.setList), this.observe(Activity.ins().postSevendayIsAwards, this.changeList), 
        this.changeList(), this.showRedPoint();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeTouchEvent(this.group, this.onTouch), this.removeTouchEvent(this.suerBtn, this.onTouch), 
        this.removeObserve();
    }, e.prototype.changeList = function() {
        var t = 7, e = Activity.ins().dayNum;
        t = e > 7 ? 7 : e;
        for (var i = 1; t + 1 >= i; i++) {
            8 == i && (i = 14);
            var n = GlobalConfig.ins().LoginRewardsConfig[i];
            if (n && e >= n.day && 0 == (Activity.ins().isAwards >> n.day & 1)) return void this.setList(i - 1);
        }
        this.setList(e);
    }, e.prototype.onTouch = function(t) {
        switch (t.currentTarget) {
          case this.group:
            this.setList(this.group.getChildIndex(t.target));
            break;

          case this.suerBtn:
            Activity.ins().dayNum >= this.day ? Activity.ins().sendGetSevenDayAwards(this.day) : UserTips.ins().showTips("|C:0xff0000&T:登陆天数不足，无法领取|");
        }
    }, e.prototype.setList = function(t) {
        void 0 === t && (t = -1), -1 == t && (t = this.dayindex), this.dayindex = t, this.dayindex > 7 && (this.dayindex = 7);
        var e = [];
        CommonUtils.getObjectLength(GlobalConfig.ins().LoginRewardsConfig);
        t >= 7 && (t = 13), e = GlobalConfig.ins().LoginRewardsConfig[t + 1].rewards, this.day = GlobalConfig.ins().LoginRewardsConfig[t + 1].day;
        var i = 0;
        i = Activity.ins().dayNum, this.daylabel.text = "登陆天数：" + i, this.daylabel.visible = !0;
        var n = 1 == (Activity.ins().isAwards >> this.day & 1);
        this.suerBtn.visible = !0, Activity.ins().dayNum >= this.day ? n ? (this.daylabel.visible = !1, 
        this.suerBtn.visible = !1) : (this.btnMC = this.btnMC || new MovieClip(), this.btnMC.x = 50, 
        this.btnMC.y = 19) : this.btnMC && DisplayUtils.removeFromParent(this.btnMC), this.itemary.forEach(function(t) {
            t.parent && (t.parent.removeChild(t), t = null);
        }), this.itemary = [];
        for (var s = 0; s < e.length; s++) {
            var a = new ItemBase();
            this.group1.addChild(a), a.data = e[s], this.itemary.push(a);
        }
        this.showRedPoint();
    }, e.prototype.showRedPoint = function() {
        for (var t = [], e = CommonUtils.getObjectLength(GlobalConfig.ins().LoginRewardsConfig), i = 0; e > i; i++) 7 == i && (i = 13), 
        t[i] = GlobalConfig.ins().LoginRewardsConfig[i + 1];
        for (var n, s = 0, i = 0; i < t.length; i++) {
            n = i, s = i, s > 7 && (s = 7), 7 == i && (i = 13), this["sureImg" + s].visible = !1;
            var a = 1 == (Activity.ins().isAwards >> t[i].day & 1);
            Activity.ins().dayNum >= t[i].day && !a ? this.group.getChildAt(n).source = "act14log_bg11" : Activity.ins().dayNum >= t[i].day && a ? (this["sureImg" + s].visible = !0, 
            this.group.getChildAt(n).source = "act14log_bg11") : this.group.getChildAt(n).source = "act14log_bg10";
        }
    }, e;
}(BaseView);

__reflect(SevenDayLogWin.prototype, "SevenDayLogWin");

window.SevenDayLogWin = SevenDayLogWin;

var ShenZhiBossGuishuItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "KuaFuWarGuishuSkin", e.guishuBtn.labelDisplay.size = 18, e;
    }
    return __extends(e, t), e.prototype.open = function() {
        this.addTouchEvent(this.guishuBtn, this.onClick), this.observe(GameLogic.ins().postAttackFaild, this.update), 
        this.observe(GameLogic.ins().postAttackSucceed, this.update);
    }, e.prototype.close = function() {
        this.removeEvents(), this.removeObserve();
    }, e.prototype.update = function() {
        var t = EntityManager.ins().getEntityByHandle(CustomEnemyManager.ins().curEnemyHandle);
        t || (t = EntityManager.ins().getEntityBymasterhHandle(CustomEnemyManager.ins().curEnemyHandle)), 
        0 == ShenZhiBoss.ins().guishuHandle || !t || t.infoModel.handle != ShenZhiBoss.ins().guishuHandle && t.infoModel.masterHandle != ShenZhiBoss.ins().guishuHandle ? this.removeeff() : this.addeff();
    }, e.prototype.addeff = function() {
        this.mc || (this.mc = new MovieClip(), this.mc.playFile(ResPath.getUIEffectPath(UiEffectType.Type28), -1), 
        this.mcCon.addChild(this.mc));
    }, e.prototype.removeeff = function() {
        this.mc && (DisplayUtils.removeFromParent(this.mc), this.mc.stop(), this.mc = null);
    }, e.prototype.setData = function() {
        var t = EntityManager.ins().getEntityBymasterhHandle(ShenZhiBoss.ins().guishuHandle);
        if (t || (t = EntityManager.ins().getEntityByHandle(ShenZhiBoss.ins().guishuHandle)), 
        t) {
            var e = t.infoModel;
            this.headIcon.source = ResPath.getHeadIcon(e.sex, 1), this.powerTxt.text = e.power + "", 
            this.nameTxt.text = e.name;
        }
    }, e.prototype.onClick = function(t) {
        var e = SubRoles.ins().getSubRoleByIndex(0);
        0 != ShenZhiBoss.ins().guishuHandle && (e.handle == ShenZhiBoss.ins().guishuHandle || e.masterHandle == ShenZhiBoss.ins().guishuHandle ? UserTips.ins().showTips("不能攻击自己") : ShenZhiBoss.ins().sendServerData35(ShenZhiBoss.ins().guishuHandle));
    }, e;
}(BaseView);

__reflect(ShenZhiBossGuishuItem.prototype, "ShenZhiBossGuishuItem");

window.ShenZhiBossGuishuItem = ShenZhiBossGuishuItem;

var ShenZhiBossView = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "ShenZhiBossSkin", e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.init();
    }, e.prototype.init = function() {
        this.bossList.dataProvider = null, this.bossList.itemRenderer = ShenZhiBossItem, 
        this.rewardList.itemRenderer = ItemBase;
        var t = [];
        for (var e in GlobalConfig.ins().ShenZhiTaskCfg) t.push(GlobalConfig.ins().ShenZhiTaskCfg[e]);
        this.bossList.dataProvider = new eui.ArrayCollection(t);
        var i = GlobalConfig.ins().ItemConfig(ShenZhiBoss.ins().costItemId);
        this.itemNameTxt.text = i.name, this.costItemImg.source = ResPath.getItemIconPath(i.icon), 
        this.ruleTipsTxt.textFlow = TextFlowMaker.generateTextFlow(LangManager.playhall_str3);
    }, e.prototype.open = function() {
        this.bossList.addEventListener(eui.ItemTapEvent.ITEM_TAP, this.selectIndex, this), 
        this.addTouchEvent(this.challengeBtn, this.onClick), this.addTouchEvent(this.getItemBtn, this.onGetItemClick), 
        this.addTouchEvent(this.btnQuestion, this.onQuestionClick), this.observe(UserBag.ins().postItemAdd, this.setCostCount), 
        this.observe(UserBag.ins().postItemDel, this.setCostCount), this.observe(UserBag.ins().postItemChange, this.setCostCount), 
        this.updateBossInfo(), this.setCostCount();
    }, e.prototype.close = function() {
        this.removeEvents(), this.removeObserve(), this.bossList.removeEventListener(eui.ItemTapEvent.ITEM_TAP, this.selectIndex, this);
    }, e.prototype.setCostCount = function() {
        var t = UserBag.ins().getBagGoodsCountById(0, ShenZhiBoss.ins().costItemId);
        this.bagNumTxt.text = t + "";
    }, e.prototype.updateBossInfo = function() {
        this.bossList.selectedIndex = 0, this.updateCurSelect(GlobalConfig.ins().ShenZhiTaskCfg[1]);
    }, e.prototype.selectIndex = function(t) {
        var e = t.item;
        this.updateCurSelect(e);
    }, e.prototype.updateCurSelect = function(t) {
        if (t) {
            this.layerNameTxt.text = t.name;
            for (var e in t.rewardShow) t.rewardShow[e].isNoShowName = !1;
            this.rewardList.dataProvider = new eui.ArrayCollection(t.rewardShow);
        }
    }, e.prototype.onClick = function(t) {
        var e = this.bossList.selectedItem, i = parseInt(this.bagNumTxt.text);
        if (e) if (UserZs.ins().lv < e.levelReq.zsLv) UserTips.ins().showTips("等级不足"); else if (i < ShenZhiBoss.ins().costItemNum) UserTips.ins().showTips("道具不足"); else {
            if (!GameMap.canEnterFb()) return;
            ShenZhiBoss.ins().sendServerData10(e.id);
        }
    }, e.prototype.onQuestionClick = function(t) {
        UserWarn.ins().showCommonTips(LangManager.playhall_str2, !0);
    }, e.prototype.onGetItemClick = function(t) {
        UserWarn.ins().setBuyGoodsWarn(ShenZhiBoss.ins().costItemId, 1);
    }, e;
}(BaseView);

__reflect(ShenZhiBossView.prototype, "ShenZhiBossView");

window.ShenZhiBossView = ShenZhiBossView;

var BlackMarketPanel = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.name = "神秘商城", e.skinName = "BlackMarketSkin", e.specialList.itemRenderer = BlackMarketSpecialItemRenderer, 
        e.listView.itemRenderer = BlackMarketItemRenderer, e.previewTxt.textFlow = new egret.HtmlTextParser().parser("<u>商品预览</u>"), 
        e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onTap, this), this.addTouchEvent(this.refreshShopBtn, this.refreshShop), 
        this.addTouchEvent(this.previewTxt, this.previewTouc), this.observe(Shop.ins().postUpdateSpecialData, this.upSpecialData), 
        this.observe(Shop.ins().postUpdateShopData, this.updateData), this.observe(Shop.ins().postBuyResult, this.buyResultCB), 
        this.price.text = GlobalConfig.ins().StoreCommonConfig.refreshYuanBao + "", this.updateData();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeTouchEvent(this.refreshShopBtn, this.refreshShop), this.removeTouchEvent(this.previewTxt, this.previewTouc), 
        this.removeObserve(), TimerManager.ins().removeAll(this);
    }, e.prototype.buyAllItem = function(t) {
        for (var e = [], i = 0, n = 0, s = 0, a = Shop.ins().shopData, o = a.getShopEquipDataLength(), r = null, h = 0, l = 0; o > l; l++) if (r = a.getShopEquipDataByIndex(l), 
        null != r) {
            if (0 == r.item.itemConfig.type) {
                if (h = UserBag.ins().calculationScore(r.item), !(h > 0)) continue;
                s += 1;
            }
            e.push([ r.id, 1 ]), 1 == r.costType ? i += r.costNum : n += r.costNum;
        }
        if (UserBag.ins().getSurplusCount() < s) {
            var u = "背包已满，无法全部购买";
            return void UserTips.ins().showTips(u);
        }
        return Actor.gold < i ? void UserWarn.ins().setBuyGoodsWarn(1) : Actor.yb < n ? void UserWarn.ins().showWanTips0(WarnTipsWin0.TYPE_1) : 0 == i && 0 == n ? void UserTips.ins().showTips("|C:0xff0000&T:没有物品可买！|") : void Shop.ins().sendBuy(2, e);
    }, e.prototype.refreshShop = function(t) {
        if (Shop.ins().shopData.times < GlobalConfig.ins().StoreCommonConfig.refreshLimit) {
            if (Actor.yb < GlobalConfig.ins().StoreCommonConfig.refreshYuanBao) return void UserWarn.ins().showWanTips0(WarnTipsWin0.TYPE_1);
            Shop.ins().sendRefreshShop();
        } else UserTips.ins().showTips("|C:0xff0000&T:今日刷新次数已用完！|");
    }, e.prototype.previewTouc = function(t) {
        ViewManager.ins().open(MarketPreviewWin);
    }, e.prototype.onTap = function(t) {
        if ("buy" == t.target.name) {
            if (UserBag.ins().getSurplusCount() <= 0) {
                var e = "背包已满，无法购买";
                return void UserTips.ins().showTips(e);
            }
            var i = t.target.parent.goodsID, n = Shop.ins().shopData.getShopEquipDataByIndex(i);
            if (1 == n.costType) {
                if (Actor.gold < n.costNum) return void UserWarn.ins().setBuyGoodsWarn(1);
            } else if (Actor.yb < n.costNum) return void UserWarn.ins().showWanTips0(WarnTipsWin0.TYPE_1);
            var s = n.item;
            if (0 == s.itemConfig.type && 0 != s.itemConfig.job) {
                var a = UserBag.ins().calculationScore(s);
                if (a > 0) {
                    var o = [ i, 1 ];
                    Shop.ins().sendBuy(2, [ o ]);
                } else WarnWin.show("购买失败\n\n<font color='#FF0000'>该装备评分过低无法购买</font>", function() {}, this, null, null, "sure");
            } else {
                var o = [ i, 1 ];
                Shop.ins().sendBuy(2, [ o ]);
            }
        }
        if ("speical" == t.target.name) {
            if (UserBag.ins().getSurplusCount() <= 0) {
                var e = "背包已满，无法购买";
                return void UserTips.ins().showTips(e);
            }
            var i = t.target.parent.goodsID;
            Shop.ins().sendBuySpecial(i);
        }
    }, e.prototype.buyResultCB = function(t) {
        1 == t ? UserTips.ins().showTips("购买成功") : UserTips.ins().showTips("|C:0xff0000&T:购买失败|");
    }, e.prototype.upSpecialData = function() {
        var t = [], e = BlackMarkerSpecialData.ins();
        if (null != e.id) {
            var i = e.arr.length > 0;
            if (0 != e.id || i) {
                this.specialList.visible = !0, this.listView.y = this.specialList.height;
                for (var n = 0; n < e.id; n++) null != e.arr[n] && t.push(e.arr[n]);
                this.specialList.dataProvider = new eui.ArrayCollection(t);
            } else this.specialList.visible = !1, this.listView.y = 0;
        } else this.specialList.visible = !1, this.listView.y = 0;
    }, e.prototype.updateData = function() {
        this.upSpecialData();
        for (var t = [], e = Shop.ins().shopData, i = e.getShopEquipDataLength(), n = null, s = 0; i > s; s++) n = e.getShopEquipDataByIndex(s), 
        null != n && t.push(n);
        this.listView.dataProvider = new eui.ArrayCollection(t), TimerManager.ins().isExists(this.refushEndTime, this) || (TimerManager.ins().doTimer(1e3, Shop.ins().shopData.refushTime, this.refushEndTime, this), 
        this.refushEndTime()), t.length <= 0 ? this.noGoods.visible = !0 : this.noGoods.visible = !1, 
        this.point.text = "我的积分：" + Shop.ins().shopData.point;
    }, e.prototype.refushEndTime = function() {
        this.tip.text = "下批商品刷新时间：" + DateUtils.getFormatBySecond(Shop.ins().shopData.refushTime);
    }, e;
}(BaseView);

__reflect(BlackMarketPanel.prototype, "BlackMarketPanel"), ViewManager.ins().reg(BlackMarketPanel, LayerManager.UI_Main);

window.BlackMarketPanel = BlackMarketPanel;

var IntegrationPanel = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.name = "荣誉商城", e.skinName = "ShopPointSkin", e.list.itemRenderer = IntegrationItemRenderer, 
        e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onTap, this), this.addTouchEvent(this.btnGetHonor, this.clickGetHonor), 
        this.observe(Shop.ins().postHonorDataRefresh, this.updateData), this.observe(GameLogic.ins().postHonorChange, this.honorChange), 
        Shop.ins().sendHonorData();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.onTap, this), this.removeTouchEvent(this.btnGetHonor, this.clickGetHonor), 
        this.removeObserve();
    }, e.prototype.clickGetHonor = function(t) {
        ViewManager.ins().open(ShopGoodsWarn).setData(10, 1);
    }, e.prototype.honorChange = function() {
        this.label1.text = "我的荣誉：" + CommonUtils.overLength(Actor.honor) + "（竞技场挑战获得）";
    }, e.prototype.updateData = function() {
        var t, e = (Shop.ins().honorData, []), i = GlobalConfig.ins().HonorStore;
        for (var n in i) t = i[n], e.push(t);
        this.prePos = this.list.scrollV, this.list.dataProvider = new eui.ArrayCollection(e), 
        this.list.validateNow(), this.list.scrollV = this.prePos, this.label1.text = "我的荣誉：" + CommonUtils.overLength(Actor.honor) + "（竞技场挑战获得）";
    }, e.prototype.onTap = function(t) {
        if ("buy" == t.target.name) {
            var e = t.target.parent.goodsID, i = GlobalConfig.ins().HonorStore, n = void 0;
            for (var s in i) {
                var a = i[s];
                a.index == e && (n = a);
            }
            if (1 != n.type && UserBag.ins().getSurplusCount() <= 0) {
                var o = "背包已满，无法购买";
                return void UserTips.ins().showTips(o);
            }
            if (Actor.honor < n.honor) return void UserTips.ins().showTips("|C:0xff0000&T:荣誉不足！|");
            Shop.ins().sendHonorBuy(e);
        }
    }, e;
}(BaseView);

__reflect(IntegrationPanel.prototype, "IntegrationPanel");

window.IntegrationPanel = IntegrationPanel;

var ItemShopPanel = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.name = "道具商城", e.skinName = "ItemShopSkin", e.listView.itemRenderer = ItemShopItemRenderer, 
        e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onTap, this), this.updateData();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.onTap, this);
    }, e.prototype.updateData = function() {
        var t = [], e = GlobalConfig.ins().ItemStoreConfig;
        for (var i in e) t.push(e[i]);
        this.listView.dataProvider = new eui.ArrayCollection(t);
    }, e.prototype.onTap = function(t) {
        if ("buy" == t.target.name) {
            var e = t.target.parent.goodsID;
            ViewManager.ins().open(BuyWin, e);
        }
    }, e;
}(BaseView);

__reflect(ItemShopPanel.prototype, "ItemShopPanel"), ViewManager.ins().reg(ItemShopPanel, LayerManager.UI_Main);

window.ItemShopPanel = ItemShopPanel;

var MedalShopPanel = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.coin = 0, e.name = "功勋商城", e.skinName = "FeatsShopSkin", e.labelGetCoin.textFlow = new egret.HtmlTextParser().parser('<a href="event:"><u>' + e.labelGetCoin.text + "</u></a>"), 
        e.list.itemRenderer = MedalShopItemRenderer, e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        Shop.ins().sendMedalMessage(), this.observe(Shop.ins().postRefresMedalMessage, this.updataData), 
        this.observe(Shop.ins().postUpdateBuyMedal, this.buyResult), this.addTouchEvent(this.list, this.onBuy), 
        this.addTouchEvent(this.labelGetCoin, this.onGetCoin);
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeTouchEvent(this.list, this.onBuy), this.removeTouchEvent(this.labelGetCoin, this.onGetCoin), 
        this.removeObserve();
    }, e.prototype.updataData = function() {
        var t = GlobalConfig.ins().FeatsStore, e = Shop.ins().medalData;
        for (var i in t) {
            var n = e.exchangeCount[t[i].index];
            isNaN(n) ? t[i].exchangeCount = 0 : t[i].exchangeCount = n;
        }
        this.setListData(t);
    }, e.prototype.onBuy = function(t) {
        if ("buy" == t.target.name) {
            var e = Actor.feats, i = t.target.parent, n = i.data;
            if (n.exchangeCount >= n.daycount && 0 != n.daycount) {
                var s = "今日可兑换次数用完，请明日再试";
                UserTips.ins().showTips(s);
            } else if (n.feats > e) {
                var s = "功勋值不足，无法兑换物品";
                UserTips.ins().showTips(s);
            } else Shop.ins().sendBuyMedal(n.index);
        }
    }, e.prototype.buyResult = function(t) {
        var e = "成功兑换，消耗", i = 0, n = GlobalConfig.ins().FeatsStore;
        for (var s in n) n[s].index == t[0] && (n[s].exchangeCount = t[1], i = n[s].feats);
        e = e + i + "功勋", UserTips.ins().showTips(e), this.setListData(n);
    }, e.prototype.setListData = function(t) {
        var e = [];
        for (var i in t) e.push(t[i]);
        this.list.dataProvider = new eui.ArrayCollection(e);
        Actor.feats;
        this.labelCoin.text = Actor.feats.toString();
    }, e.prototype.onGetCoin = function(t) {
        ViewManager.ins().open(ShopGoodsWarn).setData(7, 1);
    }, e;
}(BaseView);

__reflect(MedalShopPanel.prototype, "MedalShopPanel");

window.MedalShopPanel = MedalShopPanel;

var OtherSkillPanel = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e._roleId = 0, e.curIndex = 0, e.skinName = "SkillPanelSkin", e.oneKeyUpgrade.visible = !1, 
        e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.otherPlayerData = t[0], this.updateAllSkillItem();
    }, e.prototype.updateAllSkillItem = function() {
        for (var t = 0; t < Role.SKILL_MAX; t++) {
            var e = this["skillItem" + (t + 1)];
            e.select.visible = e.costAll.visible = e.coinIcon1.visible = e.grewUpAllBtn.visible = e.lock.visible = !1;
            var i = this.otherPlayerData.roleData[0].getCurSkillIDs(), n = i[t], s = this.otherPlayerData.roleData[0].skillsData[t], a = GlobalConfig.ins().SkillsConfig(n);
            e.icon.source = "skill_icon" + (a.icon + this.otherPlayerData.roleData[0].sex), 
            e.skillName.text = a.skinName + "", e.skillDesc.text = a.desc + "", s > 0 ? e.lv.text = "Lv." + s : e.lv.text = "Lv.0";
        }
    }, e;
}(BaseView);

__reflect(OtherSkillPanel.prototype, "OtherSkillPanel");

window.OtherSkillPanel = OtherSkillPanel;

var SkillAdvancedPanel = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.roleId = 0, e.skinName = "SkillAdvancedPanelSkin", e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.init();
    }, e.prototype.init = function() {
        this.skillPropList.itemRenderer = SkillAdvancedPropItemRender, this.tabList.itemRenderer = SkillAdvancedTabItem, 
        this.fightPower = BitmapNumber.ins().createNumPic(0, BitmapNumber.numType0, 10), 
        this.powerContainer.addChild(this.fightPower), this._curIndex = 0, this.tabList.selectedIndex = 0;
    }, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEvent(this.materialTxt, this.onTouch), this.addTouchEvent(this.tabList, this.onTabTouch), 
        this.addTouchEvent(this.compositeBtn, this.onTouch), this.addTouchEvent(this.operateBtn, this.onTouch), 
        this.addTouchEvent(this.getMaterialLink, this.onTouch), this.observe(UserBag.ins().postItemAdd, this.updataFun), 
        this.observe(UserBag.ins().postItemDel, this.updataFun), this.observe(UserSkill.ins().postBreakSkill, this.updataFun);
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeTouchEvent(this.materialTxt, this.onTouch), this.removeTouchEvent(this.tabList, this.onTabTouch), 
        this.removeTouchEvent(this.compositeBtn, this.onTouch), this.removeTouchEvent(this.operateBtn, this.onTouch), 
        this.removeTouchEvent(this.getMaterialLink, this.onTouch), this.removeObserve();
    }, e.prototype.onTouch = function(t) {
        var e = this;
        switch (t.target) {
          case this.getMaterialLink:
            UserWarn.ins().setBuyGoodsWarn(this._materialCfg.id, this._needMaterialNum);
            break;

          case this.materialTxt:
            GlobalFun.showItemTip(this._materialCfg.id);
            break;

          case this.compositeBtn:
            var i = GlobalConfig.ins().ItemConfig(this._debris.srcItemId), n = UserBag.ins().getBagItemById(i.id);
            n && n.count >= this._debris.srcCount ? WarnWin.show("是否消耗" + i.name + "随机合成技能进阶道具?", function() {
                UserBag.ins().sendCompositeItem(e._debris.srcItemId, e._debris.srcCount);
            }, this) : UserWarn.ins().setBuyGoodsWarn(this._debris.srcItemId, this._needMaterialNum);
            break;

          case this.operateBtn:
            this._needMaterialNum <= 0 ? UserSkill.ins().sendBreakSkill(this.roleId, this._curIndex + 1) : UserTips.ins().showTips(this._materialCfg.name + "不足!");
        }
    }, e.prototype.onTabTouch = function(t) {
        var e = this.tabList.selectedIndex;
        this.chooseTab(e);
    }, e.prototype.setRoleId = function(t) {
        this.roleId = t, this.roleDt = SubRoles.ins().getSubRoleByIndex(this.roleId), this.updataFun();
    }, e.prototype.chooseTab = function(t) {
        this._curIndex = t, this.updata();
    }, e.prototype.updataFun = function(t) {
        BitmapNumber.ins().changeNum(this.fightPower, UserSkill.ins().calcAllBreakSkillPower(), BitmapNumber.numType0, 2), 
        this.tabList.dataProvider = GlobalFun.formatListData(this.roleDt.getSkillStageInfoList().slice(0, Role.SKILL_MAX)), 
        this.updata(), this.updataRedPoint(UserSkill.ins().canBreakSkill());
    }, e.prototype.updata = function() {
        if (this.roleDt) {
            var t = GlobalConfig.ins().SkillsBreakUpgradeConfig[this.roleDt.job][this._curIndex];
            this.skillPropList.dataProvider = GlobalFun.formatListData(this.getItemListData(this.roleDt, t, this._curIndex));
            var e = t[this.roleDt.skillBreakData[this._curIndex]];
            if (!e) {
                this.operateBtn.visible = !1, this.materialTxt.visible = !1, this.maxTxt.visible = !0, 
                this.maxTxt.text = "技能已进阶到满级", this.maxTxt.textColor = 16775896, this.getMaterialLink.visible = !1, 
                this.consumeLabel.visible = !1, e = t[t.length - 1], this._debris = ItemComposeConfig.getDebrisCfgByItemId(e.itemidex);
                var i = UserBag.ins().getBagItemById(this._debris.srcItemId), n = i ? i.count : 0;
                return this.depleteTxt.text = "(" + n + "/" + this._debris.srcCount + ")", this.depleteTxt.textColor = n < this._debris.srcCount ? ColorUtil.C_RED : ColorUtil.C_GREEN, 
                void (this.redPoint4.visible = n >= this._debris.srcCount);
            }
            this.operateBtn.visible = !0, this.materialTxt.visible = !0, this.maxTxt.visible = !1, 
            this.consumeLabel.visible = !0, this._debris = ItemComposeConfig.getDebrisCfgByItemId(e.itemidex);
            var s = UserBag.ins().getBagItemById(this._debris.srcItemId), a = s ? s.count : 0;
            this.depleteTxt.text = "(" + a + "/" + this._debris.srcCount + ")", this.depleteTxt.textColor = a < this._debris.srcCount ? ColorUtil.C_RED : ColorUtil.C_GREEN, 
            this.redPoint4.visible = a >= this._debris.srcCount;
            var o = UserBag.ins().getBagItemById(e.itemidex), r = e.itemidex, h = e.countex;
            this._materialCfg = GlobalConfig.ins().ItemConfig(r), a = o ? o.count : 0, this.materialTxt.text = this._materialCfg.name + " X" + h, 
            this.materialTxt.textColor = h > a ? ColorUtil.C_RED : ColorUtil.C_GREEN, this._needMaterialNum = h - a;
        }
    }, e.prototype.getItemListData = function(t, e, i) {
        for (var n = [], s = 0, a = e; s < a.length; s++) {
            var o = a[s];
            n.push({
                stage: t.skillBreakData[i],
                dp: o
            });
        }
        return n;
    }, e.prototype.updataRedPoint = function(t) {
        for (var e = 0; e < this.tabList.numElements; e++) this["redPoint" + e].visible = t[this.roleDt.job][e];
    }, e;
}(BaseView);

__reflect(SkillAdvancedPanel.prototype, "SkillAdvancedPanel");

window.SkillAdvancedPanel = SkillAdvancedPanel;

var SkillForbiddenPanel = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.WEAPON_ICON_RES = [ "", "", "", "" ], e.skinName = "SkilllForbiddenPanelSkin", 
        e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.init(), this.propList.itemRenderer = SkillAdvancedPropItemRender;
    }, e.prototype.init = function() {}, e.prototype.setRoleId = function(t) {
        this._roleId = t, this._roleDt = SubRoles.ins().getSubRoleByIndex(t), egret.callLater(this.updata, this);
    }, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEvent(this.operateBtn, this.onTouch), this.observe(UserSkill.ins().postBreakSkill, this.updata, UserSkill.ins()), 
        this.observe(UserSkill.ins().postForbiddenBreakSkill, this.updata, UserSkill.ins());
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeTouchEvent(this.operateBtn, this.onTouch), this.removeObserve();
    }, e.prototype.onTouch = function() {
        switch (this.operateBtn.label) {
          case "获得材料":
            UserWarn.ins().setBuyGoodsWarn(this._materialCfg.id, this._needMaterialNum < 0 ? 1 : this._needMaterialNum);
            break;

          case "激活":
          case "升阶":
            this._needMaterialNum <= 0 ? UserSkill.ins().sendUpgradeForbiddenSkill(this._roleId) : UserWarn.ins().setBuyGoodsWarn(this._materialCfg.id, this._needMaterialNum);
        }
    }, e.prototype.updata = function(t) {
        var e = this._roleDt.getCurSkillIDs()[3], i = GlobalConfig.ins().SkillsConfig(e);
        this.icon.source = this.WEAPON_ICON_RES[this._roleDt.job - 1], this.weaponName.source = "h7_skill_name" + this._roleDt.job, 
        this.nameTxt.text = this._roleDt.ultSkillsStage ? this._roleDt.ultSkillsStage + "阶" : "未激活", 
        this.inactivatedLabel.text = "激活后解锁" + i.skinName;
        var n = GlobalConfig.ins().UltimateSkillsConfig, s = n[this._roleDt.job][this._roleDt.ultSkillsStage];
        this.curPropTxt.text = AttributeData.getAttStr(s.attr, 0, 1, " ");
        var a = n[this._roleDt.job][this._roleDt.ultSkillsStage + 1];
        a ? this.nextPropTxt.text = AttributeData.getAttStr(a.attr, 0, 1, "+", !1, !1) : this.nextPropTxt.text = "";
        var o = GlobalConfig.ins().UltimateSkillsConfig[this._roleDt.job];
        this.propList.dataProvider.replaceAll(this.getItemListData(this._roleDt, o));
        var r = o[this._roleDt.ultSkillsStage];
        if (o[this._roleDt.ultSkillsStage + 1]) {
            this.operateBtn.visible = !0;
            for (var h = 0; 6 > h; h++) this["hide" + h].visible = !0;
            this.depleteTxt.x = 143, this._materialCfg = GlobalConfig.ins().ItemConfig(r.itemid);
            var l = UserBag.ins().getBagItemById(r.itemid), u = l ? l.count : 0;
            this.depleteTxt.text = this._materialCfg.name + " X" + r.count, u < r.count ? this.depleteTxt.textColor = ColorUtil.C_RED : this.depleteTxt.textColor = ColorUtil.C_GREEN, 
            0 == this._roleDt.ultSkillsStage ? this.operateBtn.label = "激活" : u < r.count ? this.operateBtn.label = "获得材料" : this.operateBtn.label = "升阶", 
            this.inactivatedLabel.visible = 0 == this._roleDt.ultSkillsStage, this._needMaterialNum = r.count - u;
        } else {
            this.operateBtn.visible = !1, this.depleteTxt.textColor = ColorUtil.C_GREEN, this.depleteTxt.text = "禁术武器已达最高阶数", 
            this.depleteTxt.x = 212;
            for (var h = 0; 6 > h; h++) this["hide" + h].visible = !1;
        }
    }, e.prototype.getItemListData = function(t, e) {
        var i = [];
        for (var n in e) e[n].level > 0 && i.push({
            stage: t.ultSkillsStage,
            dp: e[n]
        });
        return i;
    }, e;
}(BaseView);

__reflect(SkillForbiddenPanel.prototype, "SkillForbiddenPanel");

window.SkillForbiddenPanel = SkillForbiddenPanel;

var SkillPanel = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e._roleId = 0, e.skinName = "SkillPanelSkin", e.name = "技能", e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.init();
    }, e.prototype.init = function() {
        this.curIndex = 0;
    }, e.prototype.open = function() {
        for (var t = this, e = [], i = 0; i < arguments.length; i++) e[i] = arguments[i];
        this.addTouchEvent(this.oneKeyUpgrade, this.grewUpAllSkillBtnCB);
        for (var n = 0; n < Role.SKILL_MAX; n++) {
            var s = this["skillItem" + (n + 1)];
            this.addTouchEvent(s, this.onSelect), this.addTouchEvent(s.grewUpAllBtn, this.onSingleUpgrade);
        }
        this.observe(UserSkill.ins().postGrewupSkill, this.updateAllSkillItem), this.observe(UserSkill.ins().postSkillUpgrade, this.grewupSkillCB), 
        this.observe(UserSkill.ins().postSkillUpgradeAll, this.grewupAllSkillCB), this.observe(UserSkill.ins().postForbiddenBreakSkill, this.updateAllSkillItemAndDesc), 
        this.updateAllSkillItem(), TimerManager.ins().doTimer(300, 1, function() {
            BeginnerGuideLogic.ins().playGuide(SkillWin, t.oneKeyUpgrade);
        }, this);
        var a = SubRoles.ins().getSubRoleByIndex(0);
        this.skillArr = a.skillsData;
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        for (var i = 0; i < Role.SKILL_MAX; i++) {
            var n = this["skillItem" + (i + 1)];
            this.removeTouchEvent(n, this.onSelect), this.removeTouchEvent(n.grewUpAllBtn, this.onSingleUpgrade);
        }
        this.removeObserve();
    }, e.prototype.grewUpSkillBtnCB = function(t) {
        var e = SubRoles.ins().getSubRoleByIndex(this._roleId), i = e.getSkillsDataByIndex(this.curIndex), n = UserSkill.ins().getSkillLimitLevel();
        n > i ? Actor.gold >= GlobalConfig.ins().SkillsUpgradeConfig[i].cost ? UserSkill.ins().sendGrewUpSkill(this._roleId, this.curIndex) : UserWarn.ins().setBuyGoodsWarn(1) : Actor.gold < GlobalConfig.ins().SkillsUpgradeConfig[i].cost ? UserWarn.ins().setBuyGoodsWarn(1) : this.showHint();
    }, e.prototype.grewUpAllSkillBtnCB = function(t) {
        return UserSkill.ins().canGrewupAllSkills(this._roleId) ? void (UserSkill.ins().getAllSkillGrewupCost(this._roleId) > 0 ? UserSkill.ins().sendGrewUpAllSkill(this._roleId) : this.checkUpType()) : void this.checkUpType();
    }, e.prototype.checkUpType = function() {
        var t = SubRoles.ins().getSubRoleByIndex(this._roleId), e = t.getSkillsDataByIndex(this.curIndex), i = GlobalConfig.ins().SkillsUpgradeConfig[e].cost, n = UserSkill.ins().getAllSkillGrewupCost(this._roleId);
        0 == n && (n = i), Actor.gold >= n ? this.showHint() : UserWarn.ins().setBuyGoodsWarn(1);
    }, e.prototype.showHint = function() {
        var t;
        t = Actor.level >= Actor.zhuanShengLv ? "|C:0xff0000&T:技能等级达到上限，请提高转生|" : "|C:0xff0000&T:技能等级不能超过人物等级|", 
        UserTips.ins().showTips(t);
    }, e.prototype.unlockSkill = function(t) {
        UserSkill.ins().sendGrewUpSkill(this._roleId, this.curIndex);
    }, e.prototype.onSelect = function(t) {
        var e = UserSkill.ins().getSkillLimitLevel();
        switch (t.currentTarget) {
          case this.skillItem1:
            if (e < GlobalConfig.ins().SkillsOpenConfig[1].level) return;
            this.curIndex = 0;
            break;

          case this.skillItem2:
            if (e < GlobalConfig.ins().SkillsOpenConfig[2].level) return;
            this.curIndex = 1;
            break;

          case this.skillItem3:
            if (e < GlobalConfig.ins().SkillsOpenConfig[3].level) return;
            this.curIndex = 2;
            break;

          case this.skillItem4:
            if (e < GlobalConfig.ins().SkillsOpenConfig[4].level) return;
            this.curIndex = 3;
        }
        this.updateDesc(), this.setSkillItem();
    }, e.prototype.onSingleUpgrade = function(t) {
        switch (t.currentTarget.parent) {
          case this.skillItem1:
            this.onSendUpgrade(0), this.curIndex = 0;
            break;

          case this.skillItem2:
            this.onSendUpgrade(1), this.curIndex = 1;
            break;

          case this.skillItem3:
            this.onSendUpgrade(2), this.curIndex = 2;
            break;

          case this.skillItem4:
            this.onSendUpgrade(3), this.curIndex = 3;
        }
        this.setSkillItem();
    }, e.prototype.onSendUpgrade = function(t) {
        UserSkill.ins().sendGrewUpAllSkill(this._roleId, !1, t);
    }, e.prototype.updateAllSkillItemAndDesc = function() {
        this.updateAllSkillItem(), this.updateDesc(), this.setSkillItem();
    }, e.prototype.updateAllSkillItem = function() {
        for (var t = 0; t < Role.SKILL_MAX; t++) {
            var e = this["skillItem" + (t + 1)], i = (this._roleId, SubRoles.ins().getSubRoleByIndex(this._roleId)), n = i.getCurSkillIDs(), s = n[t], a = i.getSkillsDataByIndex(t), o = GlobalConfig.ins().SkillsConfig(s);
            0 >= a ? (UserSkill.ins().getSkillLimitLevel() >= GlobalConfig.ins().SkillsOpenConfig[t + 1].level ? (e.lock.textColor = 64865, 
            e.lock.text = "开启", e.grewUpAllBtn.visible = !1) : (e.lock.textColor = 16580618, 
            e.lock.text = GlobalConfig.ins().SkillsOpenConfig[t + 1].level + "级开启", e.grewUpAllBtn.visible = !1), 
            e.lock.visible = !0, e.lv.text = "", e.costAll.visible = !1, e.coinIcon1.visible = !1) : (e.lock.visible = !1, 
            e.lv.text = "Lv." + a, e.costAll.visible = !0, e.coinIcon1.visible = !0, e.grewUpAllBtn.visible = !0, 
            this.setCost(e, t, a)), e.icon.source = "skill_icon" + (o.icon + i.sex), e.skillName.text = o.skinName + "", 
            e.skillDesc.text = o.desc + "";
        }
    }, e.prototype.setCost = function(t, e, i) {
        var n = GlobalConfig.ins().SkillsUpgradeConfig[i].cost, s = Actor.level, a = Actor.gold;
        if (t.costAll.visible = t.coinIcon1.visible = !0, i >= UserSkill.ins().getSkillLimitLevel()) {
            if (t.grewUpAllBtn.enabled = !1, t.grewUpAllBtn.filters = [ ColorUtil.colorMat ], 
            i >= UserSkill.MAX_LEVEL) t.grewUpAllBtn.labelDisplay.text = "已满级", t.costAll.visible = t.coinIcon1.visible = !1; else {
                var o = UserZs.ins();
                i >= 80 ? t.grewUpAllBtn.labelDisplay.text = o.lv + 1 + "转可升" : t.grewUpAllBtn.labelDisplay.text = s + 1 + "级可升";
            }
            a >= n ? (t.costAll.textColor = 65280, t.costAll.text = CommonUtils.overLength(n, 1e7)) : (t.costAll.textColor = 16580618, 
            t.costAll.text = CommonUtils.overLength(n, 1e7));
        } else {
            var r = UserSkill.ins().getSingleSkillGrewUpCost(this._roleId, e);
            t.grewUpAllBtn.labelDisplay.text = "一键升级", r > 0 ? (t.costAll.textColor = 65280, 
            t.costAll.text = CommonUtils.overLength(r, 1e7), t.grewUpAllBtn.enabled = !0, t.grewUpAllBtn.filters = null) : (t.costAll.textColor = 16580618, 
            t.costAll.text = CommonUtils.overLength(n, 1e7), t.grewUpAllBtn.enabled = !1, t.grewUpAllBtn.filters = [ ColorUtil.colorMat ]);
        }
    }, e.prototype.setSkillItem = function() {
        for (var t = 0; t < Role.SKILL_MAX; t++) {
            var e = this["skillItem" + (t + 1)];
            t == this.curIndex ? e.select.visible = !0 : e.select.visible = !1;
        }
    }, e.prototype.updateDesc = function() {
        var t = SubRoles.ins().getSubRoleByIndex(this._roleId), e = t.getCurSkillIDs(), i = e[this.curIndex], n = (GlobalConfig.ins().SkillsConfig(i), 
        t.getSkillsDataByIndex(this.curIndex));
        if (0 == n) ; else {
            var s = GlobalConfig.ins().SkillsUpgradeConfig[n].cost, a = UserSkill.ins().getAllSkillGrewupCost(this._roleId);
            0 == a && (a = s);
        }
    }, e.prototype.setRoleId = function(t) {
        this._roleId = t, this.updateAllSkillItemAndDesc();
    }, e.prototype.grewupSkillCB = function(t) {
        var e = t[0], i = t[1], n = t[2], s = SubRoles.ins().getSubRoleByIndex(this._roleId), a = n - s.getSkillsDataByIndex(this.curIndex), o = this["skillItem" + (i + 1)];
        this.grewupTip(o, a), SubRoles.ins().getSubRoleByIndex(e).setSkillsDataByIndex(this.curIndex, n), 
        this.updateAllSkillItemAndDesc(), Actor.level == n && UserRole.ins().showNavBtnRedPoint();
    }, e.prototype.grewupAllSkillCB = function(t) {
        var e = t[0], i = t[1], n = SubRoles.ins().getSubRoleByIndex(e), s = n.skillsData;
        for (var a in s) {
            var o = s[a] - i[a], r = this["skillItem" + (parseInt(a) + 1)];
            o > 0 && (0 != s[a] && this.grewupTip(r, o), n.setSkillsDataByIndex(parseInt(a), s[a]), 
            UserSkill.ins().grewupSkill());
        }
        for (var h = 0; h < Role.SKILL_MAX; h++) {
            var r = this["skillItem" + (h + 1)];
            s[h] && this.skillArr[h] && s[h] > this.skillArr[h] && (this.skillArr[h] = s[h], 
            this.playEff(r));
        }
        this.updateAllSkillItemAndDesc(), UserRole.ins().showNavBtnRedPoint();
    }, e.prototype.grewupTip = function(t, e) {
        TipsView.moveTime = egret.getTimer();
        var i = BitmapNumber.ins().createNumPic("+" + e, "num8"), n = t.x + t.width / 2;
        i.x = n, i.y = t.y + t.height / 4, this.addChild(i);
        var s = egret.Tween.get(i);
        s.to({
            y: i.y - 45
        }, 1e3).to({
            alpha: 0
        }, 500).call(function() {
            DisplayUtils.removeFromParent(i);
        }, this);
    }, e.prototype.updateRadPoint = function() {}, e.prototype.playEff = function(t) {
        this.mc = new MovieClip(), t.mcCon.addChild(this.mc), this.mc.playFile(ResPath.getUIEffectPath(UiEffectType.Type38), 1);
    }, e;
}(BaseView);

__reflect(SkillPanel.prototype, "SkillPanel");

window.SkillPanel = SkillPanel;

var AchievePanel = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "AchievePanelSkin", e.name = "成就", e.list.itemRenderer = AchieveItem, 
        e;
    }
    return __extends(e, t), e.prototype.open = function() {
        this.addTouchEvent(this.list, this.onSendFunc), this.observe(UserTask.ins().postTaskChangeData, this.setPanel), 
        this.setPanel();
    }, e.prototype.close = function() {
        this.removeTouchEvent(this.list, this.onSendFunc), this.removeObserve();
    }, e.prototype.onSendFunc = function(t) {
        if (t.target instanceof eui.Button) {
            var e = t.target.parent;
            switch (t.target) {
              case e.gotoBtn:
                GameGuider.taskGuidance(e.data.id, 1);
                break;

              case e.awardsBtn:
                UserTask.ins().sendGetAchieve(e.data.achievementId);
            }
        }
    }, e.prototype.setPanel = function() {
        this._achieve = UserTask.ins().achiEvement, this.list.dataProvider = new eui.ArrayCollection(this._achieve);
    }, e;
}(BaseView);

__reflect(AchievePanel.prototype, "AchievePanel");

window.AchievePanel = AchievePanel;

var TianLeiEquitPanel1 = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "TianLeiPanel1Skin", e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        for (var t = 0; 6 > t; t++) {
            this.setSkinPart("equit" + t, new TianLeiPanelItem(TianLeiEquitData.leishi, t + 1));
            var e = this["equit" + t];
            e.updataItem();
        }
    }, e.prototype.open = function() {
        this.addTouchEvent(this.link, this.onTap), this.observe(TianLei.ins().postTaiLeiEqUpdate, this.updateGridData), 
        this.observe(TianLei.ins().postRedPointUpdate, this.updateGridData), this.observe(TianLei.ins().postTaiLeiEqUpdate, this.setTZtxt);
        for (var t = 0; 6 > t; t++) {
            var e = this["equit" + t];
            e.open();
        }
        this.setData();
    }, e.prototype.close = function() {
        this.removeObserve(), this.removeEvents();
        for (var t = 0; 6 > t; t++) {
            var e = this["equit" + t];
            e.close();
        }
    }, e.prototype.setData = function() {
        this.updateGridData(), this.setTZtxt();
    }, e.prototype.updateGridData = function() {
        for (var t = 0; 6 > t; t++) {
            var e = this["equit" + t];
            e.updataItem();
        }
    }, e.prototype.setTZtxt = function() {
        var t = TianLeiEquitData.ins(), e = t.getSuitLev(TianLeiEquitData.leishi, 2), i = t.getSuitLev(TianLeiEquitData.leishi, 4), n = t.getSuitLev(TianLeiEquitData.leishi, 6), s = [], a = [], o = [];
        s = e > 0 ? t.getSuitCfg(TianLeiEquitData.leishi, TianLeiEquitData.suitBy2, e).attrsEx : t.getSuitCfg(TianLeiEquitData.leishi, TianLeiEquitData.suitBy2, 1).attrsEx, 
        a = i > 0 ? t.getSuitCfg(TianLeiEquitData.leishi, TianLeiEquitData.suitBy4, i).attrsEx : t.getSuitCfg(TianLeiEquitData.leishi, TianLeiEquitData.suitBy4, 1).attrsEx, 
        o = n > 0 ? t.getSuitCfg(TianLeiEquitData.leishi, TianLeiEquitData.suitBy6, n).attrsEx : t.getSuitCfg(TianLeiEquitData.leishi, TianLeiEquitData.suitBy6, 1).attrsEx, 
        this.attr0.text = "【2件】\n" + AttributeData.getAttStr(a, 0, 1, "："), this.attr0.textColor = e > 0 ? 65280 : 16777215, 
        this.attr1.text = "【4件】\n" + AttributeData.getAttStr(a, 0, 1, "："), this.attr1.textColor = i > 0 ? 65280 : 16777215, 
        this.attr2.text = "【6件】\n" + AttributeData.getAttStr(o, 0, 1, "："), this.attr2.textColor = n > 0 ? 65280 : 16777215;
    }, e.prototype.onTap = function(t) {
        switch (t.target) {
          case this.link:
            ViewManager.ins().open(TianLeiSuitTipWin, 1);
        }
    }, e;
}(BaseView);

__reflect(TianLeiEquitPanel1.prototype, "TianLeiEquitPanel1");

window.TianLeiEquitPanel1 = TianLeiEquitPanel1;

var TianLeiEquitPanel2 = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "TianLeiPanel2Skin", e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        for (var t = 0; 6 > t; t++) {
            this.setSkinPart("equit" + t, new TianLeiPanelItem(TianLeiEquitData.leisha, t + 1));
            var e = this["equit" + t];
            e.updataItem();
        }
    }, e.prototype.open = function() {
        this.addTouchEvent(this.link, this.onTap), this.observe(TianLei.ins().postTaiLeiEqUpdate, this.updateGridData), 
        this.observe(TianLei.ins().postRedPointUpdate, this.updateGridData), this.observe(TianLei.ins().postTaiLeiEqUpdate, this.setTZtxt);
        for (var t = 0; 6 > t; t++) {
            var e = this["equit" + t];
            e.open();
        }
        this.setData();
    }, e.prototype.close = function() {
        this.removeObserve(), this.removeEvents();
        for (var t = 0; 6 > t; t++) {
            var e = this["equit" + t];
            e.close();
        }
    }, e.prototype.setData = function() {
        this.updateGridData(), this.setTZtxt();
    }, e.prototype.updateGridData = function() {
        for (var t = 0; 6 > t; t++) {
            var e = this["equit" + t];
            e.updataItem();
        }
    }, e.prototype.setTZtxt = function() {
        var t = TianLeiEquitData.ins(), e = t.getSuitLev(TianLeiEquitData.leisha, 2), i = t.getSuitLev(TianLeiEquitData.leisha, 4), n = t.getSuitLev(TianLeiEquitData.leisha, 6), s = [], a = [], o = [];
        s = e > 0 ? t.getSuitCfg(TianLeiEquitData.leisha, TianLeiEquitData.suitBy2, e).attrsEx : t.getSuitCfg(TianLeiEquitData.leisha, TianLeiEquitData.suitBy2, 1).attrsEx, 
        a = i > 0 ? t.getSuitCfg(TianLeiEquitData.leisha, TianLeiEquitData.suitBy4, i).attrsEx : t.getSuitCfg(TianLeiEquitData.leisha, TianLeiEquitData.suitBy4, 1).attrsEx, 
        o = n > 0 ? t.getSuitCfg(TianLeiEquitData.leisha, TianLeiEquitData.suitBy6, n).attrsEx : t.getSuitCfg(TianLeiEquitData.leisha, TianLeiEquitData.suitBy6, 1).attrsEx, 
        this.attr0.text = "【2件】\n" + AttributeData.getAttStr(a, 0, 1, "："), this.attr0.textColor = e > 0 ? 65280 : 16777215, 
        this.attr1.text = "【4件】\n" + AttributeData.getAttStr(a, 0, 1, "："), this.attr1.textColor = i > 0 ? 65280 : 16777215, 
        this.attr2.text = "【6件】\n" + AttributeData.getAttStr(o, 0, 1, "："), this.attr2.textColor = n > 0 ? 65280 : 16777215;
    }, e.prototype.onTap = function(t) {
        switch (t.target) {
          case this.link:
            ViewManager.ins().open(TianLeiSuitTipWin, 2);
        }
    }, e;
}(BaseView);

__reflect(TianLeiEquitPanel2.prototype, "TianLeiEquitPanel2");

window.TianLeiEquitPanel2 = TianLeiEquitPanel2;

var TianleiEquitView = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "TianLeiEquitViewSkin", e.totalPower = BitmapNumber.ins().createNumPic(0, BitmapNumber.numType0, 10), 
        e.powerContainer.addChild(e.totalPower), e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addSubView("tianLeiEquitPanel1", TianLeiEquitPanel1, this.viewCon), this.addSubView("tianLeiEquitPanel2", TianLeiEquitPanel2, this.viewCon), 
        this.observe(TianLei.ins().postTaiLeiEqUpdate, this.setPower), this.observe(TianLei.ins().postTaiLeiEqUpdate, this.updateTabList), 
        this.observe(TianLei.ins().postRedPointUpdate, this.updateTabList), this.tab.itemRenderer = TianLeiTapItem, 
        this.tab.dataProvider = new eui.ArrayCollection([ {
            id: 1,
            name: "雷饰"
        }, {
            id: 2,
            name: "雷杀"
        } ]), this.addTouchEvent(this.tab, this.onTabChange);
        var i = t[0] ? t[0] : 0;
        this.selectIndex = i, i = t[1] ? t[1] : 0, this.setIndex(this.selectIndex);
    }, e.prototype.close = function() {
        this.removeObserve(), this.removeEvents(), TianLeiEquitData.ins().clear();
    }, e.prototype.updateTabList = function() {
        this.tab.dataProvider = new eui.ArrayCollection([ {
            id: 1,
            name: "雷饰"
        }, {
            id: 2,
            name: "雷杀"
        } ]);
    }, e.prototype.onTabChange = function(t) {
        this.setIndex(t.currentTarget.selectedIndex);
    }, e.prototype.setIndex = function(t) {
        this.checkIndex(t) && (this.openSubView(t), this.selectIndex = t), this.tab.selectedIndex = this.selectIndex, 
        this.setPower();
    }, e.prototype.checkIndex = function(t) {
        return !0;
    }, e.prototype.setPower = function() {
        var t = this.selectIndex + 1, e = TianLeiEquitData.ins().getPower(t);
        BitmapNumber.ins().changeNum(this.totalPower, e, BitmapNumber.numType0, 2);
    }, e;
}(BaseView);

__reflect(TianleiEquitView.prototype, "TianleiEquitView");

window.TianleiEquitView = TianleiEquitView;

var TianLeiPanelItem = function(t) {
    function e(e, i) {
        var n = t.call(this) || this;
        return n.skinName = "TianLeiPanelItemSkin", n.setSkinPart("grid", new TianLeiPanelGrid()), 
        n.type = e, n.idx = i, n;
    }
    return __extends(e, t), e.prototype.open = function() {
        this.addTouchEvent(this.bg, this.onTap);
    }, e.prototype.close = function() {
        this.removeTouchEvent(this.bg, this.onTap);
    }, e.prototype.updataItem = function() {
        this.bg.source = "tianleiequip_" + this.type + "_" + this.idx + "_png";
        var t = TianLeiEquitData.ins().equitInfo[this.type][this.idx - 1];
        if (t > 0) {
            this.grid.visible = !0, this.bg.visible = !1;
            var e = GlobalConfig.ins().LTZBEquipConfig[this.type][this.idx - 1][t - 1].itemId;
            this.grid.data = e, this.grid.setNameText("");
            var i = GlobalConfig.ins().ItemConfig(e);
            this.nameTxt.textColor = ItemBase.QUALITY_COLOR[i.quality], this.nameTxt.text = i.name;
        } else this.nameTxt.text = "", this.grid.visible = !1, this.bg.visible = !0;
        this.redPoint.visible = TianLeiEquitData.ins().canChangeEquips[this.type][this.idx - 1];
    }, e.prototype.onTap = function() {
        var t = GlobalConfig.ins().LTZBEquipConfig[this.type][this.idx - 1][1].itemId;
        ViewManager.ins().open(SpecialItemChangeWin, ItemConfig.TYPE12, t);
    }, e;
}(BaseView);

__reflect(TianLeiPanelItem.prototype, "TianLeiPanelItem");

window.TianLeiPanelItem = TianLeiPanelItem;

var TipsGoodEquip = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "OrangeEquipNoticeSkin", e.isUsing = !1, e.horizontalCenter = 0, 
        e;
    }
    return __extends(e, t), Object.defineProperty(e.prototype, "data", {
        set: function(t) {
            this.item && (this.item.data = t, 4 == t.itemConfig.quality ? this.desc.text = "恭喜获得橙色装备—" : 5 == t.itemConfig.quality && (this.desc.text = "恭喜获得红色装备—"), 
            this.itemName.text = t.itemConfig.name, this.itemName.textColor = ItemBase.QUALITY_COLOR[t.itemConfig.quality]);
        },
        enumerable: !0,
        configurable: !0
    }), e;
}(BaseView);

__reflect(TipsGoodEquip.prototype, "TipsGoodEquip");

window.TipsGoodEquip = TipsGoodEquip;

var TransactNotice = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "TransactNoticeSkin", e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.init();
    }, e.prototype.init = function() {
        this.touchEnabled = !1, this.touchChildren = !0;
    }, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEvent(this.transactBtn, this.onClick), this.observe(Transact.ins().postServerData11, this.updateData), 
        this.observe(Transact.ins().postCloseNotice, this.hide), TransactManager.ins().noticeData ? this.visible = !0 : this.hide();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeObserve(), this.removeEvents();
    }, e.prototype.updateData = function(t) {
        this.sData = t, TransactManager.ins().isOpenTransactWin(this.sData.mainType) ? Transact.ins().postCloseNotice() : this.visible = !0;
    }, e.prototype.onClick = function(t) {
        switch (this.sData.mainType) {
          case TransactManager.ins().mainType1:
            TransactManager.ins().openTypeTransactWin(TransactManager.ins().mainType1), this.hide();
        }
    }, e.prototype.hide = function() {
        this.visible = !1;
    }, e;
}(BaseView);

__reflect(TransactNotice.prototype, "TransactNotice");

window.TransactNotice = TransactNotice;

var LegendEquipPanel = function(t) {
    function e() {
        return t.call(this) || this;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.init();
    }, e.prototype.init = function() {
        this.name = "至尊", this.skinName = "LegendEquipSkin", this.curIndex = 0, this.getTreasureBtn.labelDisplay.text = "获得至尊碎片", 
        this.getTreasureBtn.underline.width = 105, this.chargeEff1 = new MovieClip(), this.chargeEff1.x = 335, 
        this.chargeEff1.y = 530;
    }, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEvent(this.mixSwordBtn, this.onSelect), this.addTouchEvent(this.mixArmorBtn, this.onSelect), 
        this.addTouchEvent(this.armorIcon, this.onSelect), this.addTouchEvent(this.swordIcon, this.onSelect), 
        this.addTouchEvent(this.executeBtn, this.executeCB), this.addTouchEvent(this.imgGet, this.openSmeltView), 
        this.addTouchEvent(this.getTreasureBtn, this.openSmeltView), this.observe(UserEquip.ins().postMixGodEquip, this.mixCB), 
        this.observe(UserBag.ins().postItemAdd, this.updateView), this.observe(UserBag.ins().postItemDel, this.updateView), 
        this.observe(UserBag.ins().postItemChange, this.updateView), this.observe(GameLogic.ins().postSubRoleChange, this.updateSubRoleChange), 
        this.updateView();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeTouchEvent(this.mixSwordBtn, this.onSelect), this.removeTouchEvent(this.mixArmorBtn, this.onSelect), 
        this.removeTouchEvent(this.armorIcon, this.onSelect), this.removeTouchEvent(this.swordIcon, this.onSelect), 
        this.removeTouchEvent(this.executeBtn, this.executeCB), this.removeTouchEvent(this.getTreasureBtn, this.openSmeltView), 
        this.removeObserve();
    }, e.prototype.executeCB = function(t) {
        return parseInt(this.cur.text) < parseInt(this.need.text.substr(1)) ? void UserTips.ins().showTips("|C:0xff0000&T:至尊装备碎片不足|") : void (this.executeBtn.label == OrangeEquipPanel.c_grewup ? this.grewup() : this.executeBtn.label == OrangeEquipPanel.c_mix && this.mix());
    }, e.prototype.grewup = function() {
        var t = GlobalConfig.ins().ItemConfig(GlobalConfig.ins().LegendLevelupConfig[this.curEquipConfigId].newEquipId);
        if (t) return t.level > Actor.level || t.zsLevel > UserZs.ins().lv ? void UserTips.ins().showTips("|C:0xff0000&T:升级后超过角色等级，无法升级|") : void UserEquip.ins().sendGrewupEquip(this._roleId, this.curIndex);
    }, e.prototype.grewupCB = function(t, e, i) {
        return 0 == e ? void UserTips.ins().showTips("|C:0xff0000&T:升级失败|") : (UserTips.ins().showTips("升级成功"), 
        void this.updateView());
    }, e.prototype.mix = function() {
        var t = SubRoles.ins().getSubRoleByIndex(this._roleId), e = UserEquip.ins().getEquipConfigIDByPosAndQuality(this.curIndex, 5, t.job), i = GlobalConfig.ins().ItemConfig(e);
        i.level <= Actor.level && i.zsLevel <= UserZs.ins().lv ? UserEquip.ins().sendMixEquip(this._roleId, this.curEquipConfigId, this.curIndex) : UserTips.ins().showTips("|C:0xff0000&T:等级不满足，无法合成|");
    }, e.prototype.mixCB = function(t, e, i) {
        return 0 == e ? void UserTips.ins().showTips("|C:0xff0000&T:合成失败|") : (UserTips.ins().showTips("合成成功,已自动穿戴至角色身上"), 
        void this.updateView());
    }, e.prototype.openSmeltView = function(t) {
        ViewManager.ins().open(BreakDownListview, 5);
    }, e.prototype.onSelect = function(t) {
        Actor.level;
        switch (t.currentTarget) {
          case this.mixSwordBtn:
          case this.swordIcon:
            this.curIndex = 0;
            break;

          case this.mixArmorBtn:
          case this.armorIcon:
            this.curIndex = 2;
        }
        this.updateView();
    }, e.prototype.setRoleId = function(t) {
        this._roleId = t;
        var e = SubRoles.ins().getSubRoleByIndex(this._roleId), i = e.getEquipByIndex(0), n = e.getEquipByIndex(2);
        i && this.checkQuality(i) ? this.curIndex = 0 : n && this.checkQuality(n) && (this.curIndex = 2), 
        this.updateView();
    }, e.prototype.updateView = function() {
        this.updateAttrPanel(), this.updateIconAndDesc(), UserEquip.ins().checkRedPoint(5) ? (this.chargeEff1.visible = !0, 
        this.chargeEff1.playFile(ResPath.getUIEffectPath(UiEffectType.Type12), -1), this.addChild(this.chargeEff1)) : this.chargeEff1.visible = !1, 
        this.setRedPoint(), this.updateRedPoint();
    }, e.prototype.updateSubRoleChange = function() {
        this.setRedPoint();
    }, e.prototype.checkQuality = function(t) {
        var e = !1;
        return t && t.item && t.item.itemConfig && (e = 5 == t.item.itemConfig.quality), 
        e;
    }, e.prototype.updateAttrPanel = function() {
        var t = SubRoles.ins().getSubRoleByIndex(this._roleId).getEquipByIndex(this.curIndex), e = 0;
        GlobalConfig.ins().LegendLevelupConfig[t.item.configID] && (e = GlobalConfig.ins().LegendLevelupConfig[t.item.configID].newEquipId);
        var i = GlobalConfig.ins().ItemConfig(e), n = 0, s = 0;
        if (void 0 == i && 0 != t.item.handle && 5 == GlobalConfig.ins().ItemConfig(t.item.configID).quality) this.mixAttributes.visible = !0, 
        this.grewupAttributes.visible = !1, this.curEquipConfigId = this.updateMixPanel(), 
        this.topLevel.visible = !0, this.executeBtn.visible = !1, this.need.text = "", this.cur.text = ""; else {
            if (void 0 != i && 0 != t.item.handle && 5 == GlobalConfig.ins().ItemConfig(t.item.configID).quality) {
                this.mixAttributes.visible = !1, this.grewupAttributes.visible = !0, this.curEquipConfigId = this.updateGrewupPanel(), 
                this.executeBtn.label = OrangeEquipPanel.c_grewup;
                var a = GlobalConfig.ins().LegendLevelupConfig[this.curEquipConfigId];
                a && (n = a.count, s = a.itemId);
            } else {
                if (this.mixAttributes.visible = !0, this.grewupAttributes.visible = !1, this.curEquipConfigId = this.updateMixPanel(), 
                null == this.curEquipConfigId) return;
                this.executeBtn.label = OrangeEquipPanel.c_mix;
                var o = GlobalConfig.ins().LegendComposeConfig[this.curEquipConfigId];
                o && (n = o.count, s = o.itemId);
            }
            this.executeBtn.visible = !0, this.topLevel.visible = !1;
            var r = UserBag.ins().getBagGoodsCountById(0, s);
            this.need.text = "/" + n, this.cur.text = r + "", r >= n ? this.cur.textColor = 3066402 : this.cur.textColor = 16711680;
        }
    }, e.prototype.updateRedPoint = function() {}, e.prototype.updateMixPanel = function() {
        var t = Actor.level;
        if (10 > t) return void console.log("error: 10级开启");
        var e = SubRoles.ins().getSubRoleByIndex(this._roleId), i = UserEquip.ins().getEquipConfigIDByPosAndQuality(this.curIndex, 5, e.job), n = GlobalConfig.ins().EquipConfig(i), s = [], a = [], o = [];
        for (var r in AttributeData.translate) n[r] && (a.push(n[r] + ""), s.push(AttributeData.getAttrStrByType(AttributeData.translate[r])), 
        o.push(" +" + Math.floor(n.additionRange / 100 * n[r])));
        return this.mixAttributes.baseAttr.text = ItemData.getStringByNextList(a, o), this.mixAttributes.nameAttr.text = ItemData.getStringByList(s), 
        this.mixAttributes.randAttr.text = "", this.mixAttributes.score.text = ItemConfig.pointCalNumber(GlobalConfig.ins().ItemConfig(i)), 
        i;
    }, e.prototype.updateGrewupPanel = function() {
        var t = SubRoles.ins().getSubRoleByIndex(this._roleId).getEquipByIndex(this.curIndex), e = t.item.configID, i = GlobalConfig.ins().ItemConfig(e), n = 0;
        GlobalConfig.ins().LegendLevelupConfig[e] && (n = GlobalConfig.ins().LegendLevelupConfig[e].newEquipId);
        var s = GlobalConfig.ins().ItemConfig(n);
        if (void 0 == s) ; else {
            this.grewupAttributes.arrow.visible = !1;
            var a = [], o = [], r = [], h = [], l = [], u = GlobalConfig.ins().EquipConfig(e), p = GlobalConfig.ins().EquipConfig(n), c = t.item, g = 1;
            for (var d in AttributeData.translate) if (u[d]) {
                if (void 0 != c) for (var f = c.att, m = 0; m < f.length; m++) if (f[m].type == AttributeData.translate[d]) {
                    r.push(" +" + f[m].value);
                    break;
                }
                this.grewupAttributes.arrow.visible = !0, g++, o.push(u[d] + ""), h.push(p[d] + ""), 
                l.push(" +" + Math.floor(p.additionRange / 100 * p[d])), a.push(AttributeData.getAttrStrByType(AttributeData.translate[d]));
            }
            this.grewupAttributes.curBaseAttr.text = ItemData.getStringByNextList(o, r), this.grewupAttributes.nextBaseAttr.text = ItemData.getStringByNextList(h, l), 
            this.grewupAttributes.nameAttr.text = ItemData.getStringByList(a), this.grewupAttributes.curScore.text = "评分：" + ItemConfig.pointCalNumber(i), 
            this.grewupAttributes.nextScore.text = "评分：" + ItemConfig.pointCalNumber(s);
        }
        return e;
    }, e.prototype.updateIconAndDesc = function() {
        var t = SubRoles.ins().getSubRoleByIndex(this._roleId), e = t.getEquipByIndex(0), i = t.getEquipByIndex(2);
        this.arrow.visible = !1, this.nextLevel.visible = !1, 0 == this.curIndex ? (this.swordSelect.visible = !0, 
        this.armorSelect.visible = !1) : (this.swordSelect.visible = !1, this.armorSelect.visible = !0), 
        this.updateItem(e, this.swordIcon, this.swordLevel, this.mixSwordBtn, 0, this.swordName, this.swordLevelImg), 
        this.updateItem(i, this.armorIcon, this.armorLevel, this.mixArmorBtn, 2, this.armorName, this.armorLevelImg);
    }, e.prototype.updateItem = function(t, e, i, n, s, a, o) {
        var r = SubRoles.ins().getSubRoleByIndex(this._roleId), h = GlobalConfig.ins().ItemConfig(UserEquip.ins().getEquipConfigIDByPosAndQuality(s, 5, r.job)), l = h.zsLevel;
        if (0 != t.item.handle && 5 == GlobalConfig.ins().ItemConfig(t.item.configID).quality) {
            var u = GlobalConfig.ins().ItemConfig(t.item.configID);
            a.source = "treasure_name" + u.id, o.source = "treasure_zhuan" + u.zsLevel, e.setData(u), 
            n.visible = !1, i.text = u.zsLevel + "转";
            for (var p = void 0, c = this.curEquipConfigId; c % 100 != 99; c++) {
                var g = UserEquip.ins().getEquipConfigIDByPosAndQuality(this._roleId, 5, r.job, !1);
                if (p = GlobalConfig.ins().ItemConfig(g), void 0 != p) break;
            }
            this.curIndex == t.item.itemConfig.subType && void 0 != p ? (i.x = n.x - 4, this.nextLevel.text = p.zsLevel + "转", 
            this.arrow.x = i.x + i.width + 6, this.nextLevel.x = this.arrow.x + this.arrow.width + 4) : i.x = n.x + n.width / 2 - i.width / 2;
        } else e.setData(h), a.source = "treasure_name" + h.id, o.source = "treasure_zhuan" + h.zsLevel, 
        n.visible = !1, i.text = l + "转", i.x = n.x + n.width / 2 - i.width / 2;
    }, e.prototype.setRedPoint = function() {
        for (var t = !1, e = 0; 2 > e; e++) t = UserEquip.ins().setLegendEquipItemUpState(e > 0 ? 2 : 0, SubRoles.ins().getSubRoleByIndex(this._roleId)), 
        t = UserEquip.ins().setLegendEquipItemState(e > 0 ? 2 : 0, SubRoles.ins().getSubRoleByIndex(this._roleId)) || t, 
        this["redPoint" + e].visible = t;
    }, e;
}(BaseView);

__reflect(LegendEquipPanel.prototype, "LegendEquipPanel");

window.LegendEquipPanel = LegendEquipPanel;

var MZHuntPanel = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "CycleHuntPanel", e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.init();
    }, e.prototype.init = function() {
        this.name = "魔装";
        var t = GlobalConfig.ins().MZXBCommonConfig;
        this.num1.text = t.ybCostArr[0].cost + "", this.num10.text = t.ybCostArr[1].cost + "", 
        this.setSkinPart("item0", new ItemBase()), this.item0.data = t.reward[0], this.item0.isShowName(!1);
        for (var e = 1; e < t.reward.length; e++) this["item" + e] && (this.setSkinPart("item" + e, new ItemBase()), 
        this["item" + e].data = t.reward[e]);
        this.blessPower = BitmapNumber.ins().createNumPic(0, "num20"), this.blessValue.addChild(this.blessPower), 
        this.square = new egret.Shape(), this.square.graphics.beginFill(16711680), this.square.graphics.drawRect(0, 0, 0, 0), 
        this.square.graphics.endFill(), this.expMainCon.addChild(this.square), this.topsquare = new egret.Shape(), 
        this.topsquare.graphics.beginFill(16711680), this.topsquare.graphics.drawCircle(60, 56, 55), 
        this.topsquare.graphics.endFill(), this.expMainCon.addChild(this.topsquare), this.expMc = new MovieClip(), 
        this.expMc.x = this.expCon.width >> 1, this.expMc.y = this.expCon.height >> 1, this.expMc.playFile(ResPath.getUIEffectPath(UiEffectType.Type49), -1), 
        this.expCon.addChild(this.expMc), this.expMcTop = new MovieClip(), this.expMcTop.x = this.expCon.width >> 1, 
        this.expMcTop.playFile(ResPath.getUIEffectPath(UiEffectType.Type50), -1), this.expMainCon.addChild(this.expMcTop), 
        this.expCon.mask = this.square, this.expMcTop.mask = this.topsquare, this.list.itemRenderer = MZHuntListRenderer;
    }, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEvent(this.buy1, this.onBuy), this.addTouchEvent(this.buy10, this.onBuy), 
        this.addTouchEvent(this.storeBtn, this.onBuy), this.addTouchEvent(this.helpBtn, this.onBuy), 
        this.observe(Hunt.ins().postMZXBData, this.upData), this.observe(UserBag.ins().postItemChange, this.setRedPoint), 
        this.observe(UserBag.ins().postItemAdd, this.setRedPoint), this.observe(UserBag.ins().postItemDel, this.setRedPoint), 
        this.observe(GameLogic.ins().postSubRoleChange, this.setRedPoint), Hunt.ins().sendMZXBData(), 
        Hunt.ins().sendMZXBBar(), this.upData(), this.setRedPoint();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeTouchEvent(this.buy1, this.onBuy), this.removeTouchEvent(this.buy10, this.onBuy), 
        this.removeObserve();
    }, e.prototype.upData = function() {
        var t = CycleHuntData.ins();
        if (t) {
            var e = GlobalConfig.ins().MZXBCommonConfig;
            this.isGold = e.tbCostTimes > t.glodNum;
            var i = t.blessNum;
            if (BitmapNumber.ins().changeNum(this.blessPower, i, "num20", 5), this.con3.visible = t.glodNum < e.tbCostTimes, 
            this.con3.visible) {
                var n = e.tbCostArr[t.glodNum] >= 1e4 ? e.tbCostArr[t.glodNum] / 1e4 + "万" : e.tbCostArr[t.glodNum] + "";
                this.num3.text = n;
            }
            this.con1.visible = t.glodNum >= e.tbCostTimes, this.listRefush(t.barList);
            var s = this.expCon.height, a = t.blessNum / e.maxBless;
            a = a > 1 ? 1 : a;
            var o = a * s, r = s - o;
            this.square.graphics.clear(), this.square.graphics.beginFill(16711680), this.square.graphics.drawRect(0, r, 120, o), 
            this.square.graphics.endFill(), this.expMcTop.y = r + 3;
        }
    }, e.prototype.listRefush = function(t) {
        this.list.dataProvider = new eui.ArrayCollection(t);
    }, e.prototype.onBuy = function(t) {
        switch (t.target) {
          case this.buy1:
            if (this.isGold) {
                Hunt.ins().sendMZXBXunbao(0);
                break;
            }
            Hunt.ins().sendMZXBXunbao(1);
            break;

          case this.buy10:
            Hunt.ins().sendMZXBXunbao(2);
            break;

          case this.storeBtn:
            ViewManager.ins().open(HuntStoreWin, 2);
            break;

          case this.helpBtn:
            ViewManager.ins().open(HuntHelpWin, 2);
        }
    }, e.prototype.setRedPoint = function() {
        this.storeRedPoint.visible = Boolean(UserBag.ins().getHuntGoods().length);
    }, e;
}(BaseView);

__reflect(MZHuntPanel.prototype, "MZHuntPanel");

window.MZHuntPanel = MZHuntPanel;

var NewLegendEquipPanel = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "NewLegendEquipSkin", e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.init();
    }, e.prototype.init = function() {
        this.name = "至尊", this.curIndex = 0, this.imgGet.touchEnabled = !0, this.getTreasureBtn.labelDisplay.text = "获得至尊碎片", 
        this.getTreasureBtn.underline.width = 105, this.chargeEff = new MovieClip(), this.chargeEff.x = 335, 
        this.chargeEff.y = 530;
    }, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEvent(this.imgGet, this.openSmeltView), this.addTouchEvent(this.getTreasureBtn, this.openSmeltView);
        for (var i = 0; 8 > i; i++) {
            var n = this["equip" + i];
            this.addTouchEvent(n, this.onSelect), this.addTouchEvent(n.mixBtn, this.onSelect);
        }
        this.addTouchEvent(this.executeBtn, this.executeCB), this.observe(UserEquip.ins().postMixGodEquip, this.mixCB), 
        this.observe(UserBag.ins().postItemAdd, this.updateView), this.observe(UserBag.ins().postItemDel, this.updateView), 
        this.observe(UserBag.ins().postItemChange, this.updateView), this.observe(UserEquip.ins().postGrewupEquip, this.setItemRedPoint), 
        this.curIndex = 0, this.setSelected(!0, this.curIndex);
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        for (var i = 0; 8 > i; i++) {
            var n = this["equip" + i];
            this.removeTouchEvent(n, this.onSelect), this.removeTouchEvent(n.mixBtn, this.onSelect);
        }
        this.removeTouchEvent(this.executeBtn, this.executeCB), this.removeTouchEvent(this.imgGet, this.openSmeltView), 
        this.removeTouchEvent(this.getTreasureBtn, this.openSmeltView), this.removeObserve();
    }, e.prototype.onSelect = function(t) {
        Actor.level;
        switch (t.currentTarget) {
          case this.equip0:
          case this.equip0.mixBtn:
            this.curIndex = 0;
            break;

          case this.equip1:
          case this.equip1.mixBtn:
            this.curIndex = 1;
            break;

          case this.equip2:
          case this.equip2.mixBtn:
            this.curIndex = 2;
            break;

          case this.equip3:
          case this.equip3.mixBtn:
            this.curIndex = 3;
            break;

          case this.equip4:
          case this.equip4.mixBtn:
            this.curIndex = 4;
            break;

          case this.equip5:
          case this.equip5.mixBtn:
            this.curIndex = 5;
            break;

          case this.equip6:
          case this.equip6.mixBtn:
            this.curIndex = 6;
            break;

          case this.equip7:
          case this.equip7.mixBtn:
            this.curIndex = 7;
        }
        this.setSelected(!0, this.curIndex), this.updateView();
    }, e.prototype.executeCB = function(t) {
        return parseInt(this.cur.text) < parseInt(this.need.text.substr(1)) ? void UserTips.ins().showTips("|C:0xff0000&T:至尊碎片不足|") : void (this.executeBtn.label == OrangeEquipPanel.c_grewup ? this.grewup() : this.executeBtn.label == OrangeEquipPanel.c_mix && this.mix());
    }, e.prototype.grewup = function() {
        var t = UserEquip.ins().getEquipConfigIDByPosAndQuality(this.curIndex, 5, SubRoles.ins().getSubRoleByIndex(this._roleId).job), e = GlobalConfig.ins().ItemConfig(t);
        return e.level > Actor.level || e.zsLevel > UserZs.ins().lv ? void UserTips.ins().showTips("|C:0xff0000&T:升级后超过角色等级，无法升级|") : void UserEquip.ins().sendGrewupEquip(this._roleId, this.curIndex);
    }, e.prototype.mix = function() {
        var t = SubRoles.ins().getSubRoleByIndex(this._roleId), e = UserEquip.ins().getEquipConfigIDByPosAndQuality(this.curIndex, 5, t.job), i = GlobalConfig.ins().ItemConfig(e);
        i.level <= Actor.level && i.zsLevel <= UserZs.ins().lv ? UserEquip.ins().sendMixEquip(this._roleId, this.curEquipConfigId, this.curIndex) : UserTips.ins().showTips("|C:0xff0000&T:等级不满足，无法合成|");
    }, e.prototype.mixCB = function(t, e, i) {
        return 0 == e ? void UserTips.ins().showTips("|C:0xff0000&T:合成失败|") : void UserTips.ins().showTips("合成成功,已自动穿戴至角色身上");
    }, e.prototype.openSmeltView = function(t) {
        ViewManager.ins().open(BreakDownListview, 5);
    }, e.prototype.updateView = function() {
        this.updateAllEquipItem(), this.updateDetailPanel(), this.setItemRedPoint(), this.updateRedPoint();
    }, e.prototype.updateRedPoint = function() {
        UserEquip.ins().checkRedPoint(5) ? (this.chargeEff.playFile(ResPath.getUIEffectPath(UiEffectType.Type12), -1), 
        this.addChild(this.chargeEff)) : this.chargeEff.parent && (this.chargeEff.stop(), 
        this.removeChild(this.chargeEff));
    }, e.prototype.updateDetailPanel = function() {
        var t = SubRoles.ins().getSubRoleByIndex(this._roleId).getEquipByIndex(this.curIndex);
        if (null != t) {
            var e = UserEquip.ins().getEquipConfigIDByPosAndQuality(this.curIndex, 5, SubRoles.ins().getSubRoleByIndex(this._roleId).job, !1), i = GlobalConfig.ins().ItemConfig(e), n = 0, s = 0;
            if (void 0 == i && 0 != t.item.handle && 5 == GlobalConfig.ins().ItemConfig(t.item.configID).quality) this.mixPanel.visible = !0, 
            this.grewupPanel.visible = !1, this.curEquipConfigId = this.updateMixPanel(), this.topLevel.visible = !0, 
            this.executeBtn.visible = !1, this.xiaohaoCon.visible = !1, this.need.text = "", 
            this.cur.text = ""; else {
                if (this.xiaohaoCon.visible = !0, void 0 != i && 0 != t.item.handle && 5 == t.item.itemConfig.quality) {
                    this.mixPanel.visible = !1, this.grewupPanel.visible = !0, this.curEquipConfigId = this.updateGrewupPanel(), 
                    this.executeBtn.label = OrangeEquipPanel.c_grewup;
                    var a = GlobalConfig.ins().LegendLevelupConfig[this.curEquipConfigId];
                    a && (n = a.count, s = a.itemId);
                } else {
                    this.mixPanel.visible = !0, this.grewupPanel.visible = !1, this.curEquipConfigId = this.updateMixPanel(), 
                    this.executeBtn.label = OrangeEquipPanel.c_mix;
                    var o = GlobalConfig.ins().LegendComposeConfig[this.curEquipConfigId];
                    o && (n = o.count, s = o.itemId);
                }
                var r = UserBag.ins().getBagGoodsCountById(0, s);
                this.need.text = "/" + n, this.cur.text = r + "", r >= n ? this.cur.textColor = 3066402 : this.cur.textColor = 16711680, 
                this.executeBtn.visible = !0, this.topLevel.visible = !1;
            }
        }
    }, e.prototype.updateMixPanel = function() {
        var t = Actor.level;
        if (10 > t) return void console.log("error: 10级开启");
        var e, i;
        if (t >= 1) {
            var n = this.curIndex;
            i = UserEquip.ins().getEquipConfigIDByPosAndQuality(n, 5, SubRoles.ins().getSubRoleByIndex(this._roleId).job), 
            e = GlobalConfig.ins().ItemConfig(i);
        }
        void 0 != e && (e.zsLevel > 0 ? this.mixPanel.level.text = e.zsLevel + "转传世神兵" : this.mixPanel.level.text = "Lv." + e.level, 
        this.mixPanel.equipName.text = e.name, this.mixPanel.itemIcon.setData(e));
        var s = [], a = [], o = [], r = GlobalConfig.ins().EquipConfig(i);
        for (var h in AttributeData.translate) void 0 == r[h] || r[h] <= 0 || (a.push(r[h] + ""), 
        s.push(AttributeData.getAttrStrByType(AttributeData.translate[h])), o.push(" +" + Math.floor(r.additionRange * r[h] / 100)));
        return this.mixPanel.attributes.baseAttr.text = ItemData.getStringByNextList(a, o), 
        this.mixPanel.attributes.randAttr.text = "", this.mixPanel.attributes.nameAttr.text = ItemData.getStringByList(s), 
        this.mixPanel.attributes.score.text = ItemConfig.pointCalNumber(e), i;
    }, e.prototype.updateGrewupPanel = function() {
        var t = SubRoles.ins().getSubRoleByIndex(this._roleId).getEquipByIndex(this.curIndex), e = t.item.configID, i = GlobalConfig.ins().ItemConfig(e), n = UserEquip.ins().getEquipConfigIDByPosAndQuality(this.curIndex, 5, SubRoles.ins().getSubRoleByIndex(this._roleId).job, !1), s = GlobalConfig.ins().ItemConfig(n);
        if (void 0 == s) ; else {
            this.grewupPanel.curName.text = i.name + "", this.grewupPanel.nextName.text = s.name + "", 
            i.zsLevel > 0 ? this.grewupPanel.curLevel.text = i.zsLevel + "转" : this.grewupPanel.curLevel.text = "Lv." + i.level, 
            s.zsLevel > 0 ? this.grewupPanel.nextLevel.text = s.zsLevel + "转" : this.grewupPanel.nextLevel.text = "Lv." + s.level, 
            this.grewupPanel.curItemIcon.setData(i), this.grewupPanel.nextItemIcon.setData(s), 
            this.grewupPanel.attributes.arrow.visible = !1;
            var a = [], o = [], r = [], h = [], l = [], u = GlobalConfig.ins().EquipConfig(e), p = GlobalConfig.ins().EquipConfig(n), c = t.item;
            for (var g in AttributeData.translate) if (!(u[g] <= 0)) {
                if (void 0 != c) for (var d = c.att, f = 0; f < d.length; f++) if (d[f].type == AttributeData.translate[g]) {
                    r.push(" +" + d[f].value), o.push(u[g] + ""), h.push(p[g] + ""), l.push(" +" + Math.floor(p.additionRange * p[g] / 100)), 
                    a.push(AttributeData.getAttrStrByType(AttributeData.translate[g]));
                    break;
                }
                this.grewupPanel.attributes.arrow.visible = !0;
            }
            this.grewupPanel.attributes.curBaseAttr.text = ItemData.getStringByNextList(o, r), 
            this.grewupPanel.attributes.nextBaseAttr.text = ItemData.getStringByNextList(h, l), 
            this.grewupPanel.attributes.nameAttr.text = ItemData.getStringByList(a), this.grewupPanel.attributes.curScore.text = "战力：" + ItemConfig.pointCalNumber(i), 
            this.grewupPanel.attributes.nextScore.text = "战力：" + ItemConfig.pointCalNumber(s);
        }
        return e;
    }, e.prototype.updateAllEquipItem = function() {
        for (var t = 0; 8 > t; t++) this.updateEquipItem(t);
    }, e.prototype.updateEquipItem = function(t) {
        var i = this["equip" + t];
        if (null != i) {
            var n = SubRoles.ins().getSubRoleByIndex(this._roleId).getEquipByIndex(t), s = i.itemIcon;
            0 == n.item.handle || n.item.itemConfig.quality < 5 ? (s.setData(null), s.setImgIcon(e.defaultEquipIcon[t]), 
            i.level.text = "", i.mixBtn.visible = !1) : (i.mixBtn.visible = !1, n.item.itemConfig.zsLevel > 0 ? i.level.text = n.item.itemConfig.zsLevel + "转" : i.level.text = "Lv." + n.item.itemConfig.level, 
            s.setData(n.item.itemConfig)), this.curIndex == t ? i.select.visible = !0 : i.select.visible = !1;
        }
    }, e.prototype.setItemRedPoint = function() {
        for (var t = 0; 8 > t; t++) {
            var e = this["equip" + t];
            e.redPoint.visible = UserEquip.ins().setNewLegendEquipItemState(t, SubRoles.ins().getSubRoleByIndex(this._roleId));
        }
    }, e.prototype.setSelected = function(t, e) {
        for (var i = 0; 8 > i; i++) {
            var n = void 0;
            n = this["equip" + i], n.currentState = "up";
        }
        this["equip" + e].currentState = t ? "down" : "up";
    }, e.prototype.setRoleId = function(t) {
        this._roleId = t, this.curIndex = 0, this.updateView();
    }, e.defaultEquipIcon = [ "common_part11", "common_part0", "common_part10", "common_part1", "common_part12", "common_part3", "common_part9", "common_part8" ], 
    e;
}(BaseView);

__reflect(NewLegendEquipPanel.prototype, "NewLegendEquipPanel");

window.NewLegendEquipPanel = NewLegendEquipPanel;

var OrangeEquipPanel = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "OrangeEquipSkin", e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.init();
    }, e.prototype.init = function() {
        this.name = "橙装", this.curIndex = 0, this.imgGet.touchEnabled = !0, this.getTreasureBtn.labelDisplay.text = "获得橙装碎片", 
        this.getTreasureBtn.underline.width = 105, this.chargeEff = new MovieClip(), this.chargeEff.x = 335, 
        this.chargeEff.y = 530;
    }, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEvent(this.imgGet, this.openSmeltView), this.addTouchEvent(this.getTreasureBtn, this.openSmeltView);
        for (var i = 0; 8 > i; i++) {
            var n = this["equip" + i];
            this.addTouchEvent(n, this.onSelect), this.addTouchEvent(n.mixBtn, this.onSelect);
        }
        this.addTouchEvent(this.executeBtn, this.executeCB), this.observe(UserEquip.ins().postMixEquip, this.mixCB), 
        this.observe(UserBag.ins().postItemAdd, this.updateView), this.observe(UserBag.ins().postItemDel, this.updateView), 
        this.observe(UserBag.ins().postItemChange, this.updateView), this.observe(UserEquip.ins().postGrewupEquip, this.setItemRedPoint), 
        this.curIndex = 0, this.setSelected(!0, this.curIndex);
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        for (var i = 0; 8 > i; i++) {
            var n = this["equip" + i];
            this.removeTouchEvent(n, this.onSelect), this.removeTouchEvent(n.mixBtn, this.onSelect);
        }
        this.removeTouchEvent(this.executeBtn, this.executeCB), this.removeTouchEvent(this.imgGet, this.openSmeltView), 
        this.removeTouchEvent(this.getTreasureBtn, this.openSmeltView), this.removeObserve();
    }, e.prototype.onSelect = function(t) {
        Actor.level;
        switch (t.currentTarget) {
          case this.equip0:
          case this.equip0.mixBtn:
            this.curIndex = 0;
            break;

          case this.equip1:
          case this.equip1.mixBtn:
            this.curIndex = 1;
            break;

          case this.equip2:
          case this.equip2.mixBtn:
            this.curIndex = 2;
            break;

          case this.equip3:
          case this.equip3.mixBtn:
            this.curIndex = 3;
            break;

          case this.equip4:
          case this.equip4.mixBtn:
            this.curIndex = 4;
            break;

          case this.equip5:
          case this.equip5.mixBtn:
            this.curIndex = 5;
            break;

          case this.equip6:
          case this.equip6.mixBtn:
            this.curIndex = 6;
            break;

          case this.equip7:
          case this.equip7.mixBtn:
            this.curIndex = 7;
        }
        this.setSelected(!0, this.curIndex), this.updateView();
    }, e.prototype.executeCB = function(t) {
        var i = this;
        if (parseInt(this.cur.text) < parseInt(this.need.text.substr(1))) return void UserTips.ins().showTips("|C:0xff0000&T:橙装碎片不足|");
        if (this.executeBtn.label == e.c_grewup) this.grewup(); else if (this.executeBtn.label == e.c_mix) {
            var n = SubRoles.ins().getSubRoleByIndex(this._roleId).getEquipByIndex(this.curIndex), s = n.item.configID, a = GlobalConfig.ins().ItemConfig(s);
            if (void 0 != a && 5 == a.quality) {
                var o = GlobalConfig.ins().ItemConfig(n.item.configID), r = o.zsLevel > 0 ? o.zsLevel + "转" : o.level + "级";
                WarnWin.show('当前部位上已穿着<font color="#c5281d">' + r + "传奇装备</font>，是否继续合成橙色装备？\n", function() {
                    i.mix();
                }, this);
            } else this.mix();
        }
    }, e.prototype.grewup = function() {
        var t = UserEquip.ins().getEquipConfigIDByPosAndQuality(this.curIndex, 4, SubRoles.ins().getSubRoleByIndex(this._roleId).job), e = GlobalConfig.ins().ItemConfig(t);
        return e.level > Actor.level || e.zsLevel > UserZs.ins().lv ? void UserTips.ins().showTips("|C:0xff0000&T:升级后超过角色等级，无法升级|") : void UserEquip.ins().sendGrewupEquip(this._roleId, this.curIndex);
    }, e.prototype.mix = function() {
        UserEquip.ins().sendMixEquip(this._roleId, this.curEquipConfigId, this.curIndex);
    }, e.prototype.mixCB = function(t, e, i) {
        return 0 == e ? void UserTips.ins().showTips("|C:0xff0000&T:合成失败|") : void UserTips.ins().showTips("合成成功,已自动穿戴至角色身上");
    }, e.prototype.openSmeltView = function(t) {
        ViewManager.ins().open(BreakDownListview, 4);
    }, e.prototype.updateView = function() {
        this.updateAllEquipItem(), this.updateDetailPanel(), this.setItemRedPoint(), this.updateRedPoint();
    }, e.prototype.updateRedPoint = function() {
        UserEquip.ins().checkRedPoint(4) ? (this.chargeEff.playFile(ResPath.getUIEffectPath(UiEffectType.Type12), -1), 
        this.addChild(this.chargeEff)) : this.chargeEff.parent && (this.chargeEff.stop(), 
        this.removeChild(this.chargeEff));
    }, e.prototype.updateDetailPanel = function() {
        var t = SubRoles.ins().getSubRoleByIndex(this._roleId).getEquipByIndex(this.curIndex);
        if (null != t) {
            var i = UserEquip.ins().getEquipConfigIDByPosAndQuality(this.curIndex, 4, SubRoles.ins().getSubRoleByIndex(this._roleId).job, !1), n = GlobalConfig.ins().ItemConfig(i), s = 0, a = 0;
            if (void 0 == n && 0 != t.item.handle && 4 == GlobalConfig.ins().ItemConfig(t.item.configID).quality) this.mixPanel.visible = !0, 
            this.grewupPanel.visible = !1, this.curEquipConfigId = this.updateMixPanel(), this.topLevel.visible = !0, 
            this.executeBtn.visible = !1, this.xiaohaoCon.visible = !1, this.need.text = "", 
            this.cur.text = ""; else {
                if (this.xiaohaoCon.visible = !0, void 0 != n && 0 != t.item.handle && 4 == t.item.itemConfig.quality) {
                    this.mixPanel.visible = !1, this.grewupPanel.visible = !0, this.curEquipConfigId = this.updateGrewupPanel(), 
                    this.executeBtn.label = e.c_grewup;
                    var o = GlobalConfig.ins().LegendLevelupConfig[this.curEquipConfigId];
                    o && (s = o.count, a = o.itemId);
                } else {
                    this.mixPanel.visible = !0, this.grewupPanel.visible = !1, this.curEquipConfigId = this.updateMixPanel(), 
                    this.executeBtn.label = e.c_mix;
                    var r = GlobalConfig.ins().LegendComposeConfig[this.curEquipConfigId];
                    r && (s = r.count, a = r.itemId);
                }
                var h = UserBag.ins().getBagGoodsCountById(0, a);
                this.need.text = "/" + s, this.cur.text = h + "", h >= s ? this.cur.textColor = 3066402 : this.cur.textColor = 16711680, 
                this.executeBtn.visible = !0, this.topLevel.visible = !1;
            }
        }
    }, e.prototype.updateMixPanel = function() {
        var t, e, i = Actor.level;
        if (i >= 1) {
            var n = this.curIndex;
            e = UserEquip.ins().getEquipConfigIDByPosAndQuality(n, 4, SubRoles.ins().getSubRoleByIndex(this._roleId).job), 
            t = GlobalConfig.ins().ItemConfig(e);
        }
        void 0 != t && (t.zsLevel > 0 ? this.mixPanel.level.text = t.zsLevel + "转橙装" : this.mixPanel.level.text = "Lv." + t.level, 
        this.mixPanel.equipName.text = t.name, this.mixPanel.itemIcon.setData(t));
        var s = [], a = [], o = [], r = GlobalConfig.ins().EquipConfig(e);
        for (var h in AttributeData.translate) void 0 == r[h] || r[h] <= 0 || (a.push(r[h] + ""), 
        s.push(AttributeData.getAttrStrByType(AttributeData.translate[h])), o.push(" +" + Math.floor(r.additionRange * r[h] / 100)));
        return this.mixPanel.attributes.baseAttr.text = ItemData.getStringByNextList(a, o), 
        this.mixPanel.attributes.randAttr.text = "", this.mixPanel.attributes.nameAttr.text = ItemData.getStringByList(s), 
        this.mixPanel.attributes.score.text = ItemConfig.pointCalNumber(t), e;
    }, e.prototype.updateGrewupPanel = function() {
        var t = SubRoles.ins().getSubRoleByIndex(this._roleId).getEquipByIndex(this.curIndex), e = t.item.configID, i = GlobalConfig.ins().ItemConfig(e), n = UserEquip.ins().getEquipConfigIDByPosAndQuality(this.curIndex, 4, SubRoles.ins().getSubRoleByIndex(this._roleId).job, !1), s = GlobalConfig.ins().ItemConfig(n);
        if (void 0 == s) ; else {
            this.grewupPanel.curName.text = i.name + "", this.grewupPanel.nextName.text = s.name + "", 
            i.zsLevel > 0 ? this.grewupPanel.curLevel.text = i.zsLevel + "转" : this.grewupPanel.curLevel.text = "Lv." + i.level, 
            s.zsLevel > 0 ? this.grewupPanel.nextLevel.text = s.zsLevel + "转" : this.grewupPanel.nextLevel.text = "Lv." + s.level, 
            this.grewupPanel.curItemIcon.setData(i), this.grewupPanel.nextItemIcon.setData(s), 
            this.grewupPanel.attributes.arrow.visible = !1;
            var a = [], o = [], r = [], h = [], l = [], u = GlobalConfig.ins().EquipConfig(e), p = GlobalConfig.ins().EquipConfig(n), c = t.item;
            for (var g in AttributeData.translate) if (!(u[g] <= 0)) {
                if (void 0 != c) for (var d = c.att, f = 0; f < d.length; f++) if (d[f].type == AttributeData.translate[g]) {
                    r.push(" +" + d[f].value), o.push(u[g] + ""), h.push(p[g] + ""), l.push(" +" + Math.floor(p.additionRange * p[g] / 100)), 
                    a.push(AttributeData.getAttrStrByType(AttributeData.translate[g]));
                    break;
                }
                this.grewupPanel.attributes.arrow.visible = !0;
            }
            this.grewupPanel.attributes.curBaseAttr.text = ItemData.getStringByNextList(o, r), 
            this.grewupPanel.attributes.nextBaseAttr.text = ItemData.getStringByNextList(h, l), 
            this.grewupPanel.attributes.nameAttr.text = ItemData.getStringByList(a), this.grewupPanel.attributes.curScore.text = "战力：" + ItemConfig.pointCalNumber(i), 
            this.grewupPanel.attributes.nextScore.text = "战力：" + ItemConfig.pointCalNumber(s);
        }
        return e;
    }, e.prototype.updateAllEquipItem = function() {
        for (var t = 0; 8 > t; t++) this.updateEquipItem(t);
    }, e.prototype.updateEquipItem = function(t) {
        var i = this["equip" + t];
        if (null != i) {
            var n = SubRoles.ins().getSubRoleByIndex(this._roleId).getEquipByIndex(t), s = i.itemIcon;
            0 == n.item.handle || n.item.itemConfig.quality < 4 ? (s.setData(null), s.setImgIcon(e.defaultEquipIcon[t]), 
            i.level.text = "", i.mixBtn.visible = !1) : (i.mixBtn.visible = !1, n.item.itemConfig.zsLevel > 0 ? i.level.text = n.item.itemConfig.zsLevel + "转" : i.level.text = "Lv." + n.item.itemConfig.level, 
            s.setData(n.item.itemConfig)), this.curIndex == t ? i.select.visible = !0 : i.select.visible = !1;
        }
    }, e.prototype.setItemRedPoint = function() {
        for (var t = 0; 8 > t; t++) {
            var e = this["equip" + t];
            e.redPoint.visible = UserEquip.ins().setOrangeEquipItemState(t, SubRoles.ins().getSubRoleByIndex(this._roleId));
        }
    }, e.prototype.setSelected = function(t, e) {
        for (var i = 0; 8 > i; i++) {
            var n = void 0;
            n = this["equip" + i], n.currentState = "up";
        }
        this["equip" + e].currentState = t ? "down" : "up";
    }, e.prototype.setRoleId = function(t) {
        this._roleId = t, this.curIndex = 0, this.updateView();
    }, e.c_grewup = "升 级", e.c_mix = "合 成", e.defaultEquipIcon = [ "common_part11", "common_part0", "common_part10", "common_part1", "common_part12", "common_part3", "common_part9", "common_part8" ], 
    e;
}(BaseView);

__reflect(OrangeEquipPanel.prototype, "OrangeEquipPanel");

window.OrangeEquipPanel = OrangeEquipPanel;

var TreasureHuntPanel = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "TreasureHuntPanelSkin", e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.init();
    }, e.prototype.init = function() {
        this.name = "寻宝", this.num1.text = GlobalConfig.ins().TreasureHuntConfig.huntOnce + "", 
        this.num10.text = GlobalConfig.ins().TreasureHuntConfig.huntTenth + "";
        var t = GlobalConfig.ins().ItemConfig(GlobalConfig.ins().TreasureHuntConfig.huntOnceItemId), e = GlobalConfig.ins().ItemConfig(GlobalConfig.ins().TreasureHuntConfig.huntTenthItemId);
        t && (this.itemImg3.source = ResPath.getItemIconPath(t.icon)), e && (this.itemImg4.source = ResPath.getItemIconPath(e.icon));
        for (var i = GlobalConfig.ins().TreasureHuntPoolConfig, n = i[1].id, s = i[2].id, a = 0; 15 > a; a++) this["item" + a] && (this.setSkinPart("item" + a, new ItemBase()), 
        this["item" + a].data = i[a].id);
        this.setSkinPart("itemBig0", new ItemBase()), this.setSkinPart("itemBig1", new ItemBase()), 
        GlobalConfig.ins().ItemConfig(n) && (this.itemBig0.data = n), GlobalConfig.ins().ItemConfig(s) && (this.itemBig1.data = s), 
        this.itemBig0.isShowName(!1), this.itemBig1.isShowName(!1), this.swordName.source = "treasure_name" + n, 
        this.armorName.source = "treasure_name" + s, this.list.itemRenderer = HuntListRenderer, 
        this.listRefush([]), this.open();
    }, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEvent(this.buy1, this.onBuy), this.addTouchEvent(this.buy10, this.onBuy), 
        this.addTouchEvent(this.helpBtn, this.onBuy), this.addTouchEvent(this.storeBtn, this.onBuy), 
        this.observe(Hunt.ins().postBestListInfo, this.listRefush), this.observe(UserBag.ins().postItemChange, this.changeItem), 
        this.observe(UserBag.ins().postItemAdd, this.changeItem), this.observe(UserBag.ins().postItemDel, this.changeItem), 
        this.observe(UserBag.ins().postItemChange, this.setRedPoint), this.observe(UserBag.ins().postItemAdd, this.setRedPoint), 
        this.observe(UserBag.ins().postItemDel, this.setRedPoint), this.observe(GameLogic.ins().postSubRoleChange, this.setRedPoint), 
        this.changeItem(), this.listRefush([]), this.setRedPoint(), Hunt.ins().sendHuntList();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeTouchEvent(this.buy1, this.onBuy), this.removeTouchEvent(this.buy10, this.onBuy), 
        this.removeTouchEvent(this.storeBtn, this.onBuy), this.removeObserve();
    }, e.prototype.listRefush = function(t) {
        this.list.dataProvider = new eui.ArrayCollection(t);
    }, e.prototype.changeItem = function() {
        var t = UserBag.ins().getBagItemById(GlobalConfig.ins().TreasureHuntConfig.huntOnceItemId);
        this.con3.visible = null != t, this.con1.visible = !this.con3.visible, this.num3.text = t ? t.count + "" : "";
        var e = UserBag.ins().getBagItemById(GlobalConfig.ins().TreasureHuntConfig.huntTenthItemId);
        this.con4.visible = null != e, this.con2.visible = !this.con4.visible, this.num4.text = e ? e.count + "" : "";
    }, e.prototype.onBuy = function(t) {
        switch (t.target) {
          case this.buy1:
            if (this.con3.visible) {
                Hunt.ins().sendHunt(0);
                break;
            }
            this.buyHunt(0);
            break;

          case this.buy10:
            if (this.con4.visible) {
                Hunt.ins().sendHunt(1);
                break;
            }
            this.buyHunt(1);
            break;

          case this.storeBtn:
            ViewManager.ins().open(HuntStoreWin, 0);
            break;

          case this.helpBtn:
            ViewManager.ins().open(HuntHelpWin, 0);
        }
    }, e.prototype.setRedPoint = function() {
        this.storeRedPoint.visible = Boolean(UserBag.ins().getHuntGoods().length);
    }, e.prototype.buyHunt = function(t) {
        var e = 0 == t ? GlobalConfig.ins().TreasureHuntConfig.huntOnce : GlobalConfig.ins().TreasureHuntConfig.huntTenth, i = Actor.yb;
        i >= e ? Hunt.ins().sendHunt(t) : UserWarn.ins().showWanTips0(WarnTipsWin0.TYPE_1);
    }, e;
}(BaseView);

__reflect(TreasureHuntPanel.prototype, "TreasureHuntPanel");

window.TreasureHuntPanel = TreasureHuntPanel;

var TreasureStorePanel = function(t) {
    function e() {
        return t.call(this) || this;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.init();
    }, e.prototype.init = function() {
        this.skinName = "TreasureStore", this.list.itemRenderer = ItemBaseStore, this.listScroller.viewport = this.list;
    }, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEvent(this.get, this.getGoods), this.observe(UserBag.ins().postHuntStore, this.updateData), 
        this.updateData();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeTouchEvent(this.get, this.getGoods), this.removeObserve();
    }, e.prototype.updateData = function() {
        var t = UserBag.ins().getHuntGoodsBySort();
        this.list.dataProvider = new eui.ArrayCollection(t);
    }, e.prototype.getGoods = function(t) {
        this.list.dataProvider.length > 0 && UserBag.ins().sendGetGoodsByStore(0);
    }, e;
}(BaseView);

__reflect(TreasureStorePanel.prototype, "TreasureStorePanel");

window.TreasureStorePanel = TreasureStorePanel;

var WanbaPrivilegeGiftWin = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "WanbaPrivilegeGiftSkin", e.list.itemRenderer = WanbaPrivilegeGiftItemWin, 
        e.listData = new eui.ArrayCollection(), e.list.dataProvider = e.listData, e;
    }
    return __extends(e, t), e.prototype.init = function() {}, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEvent(this.list, this.onBuy), this.observe(PfActivity.ins().postWanbaVipFuliData, this.upData), 
        PfActivity.ins().sendWanbaVipFuliData();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeEvents(), this.removeObserve();
    }, e.prototype.upData = function() {
        if (this.data = WanbaPrivilegeData.ins(), this.data) {
            this.arr = this.data.getGiftArr(), this.arr.sort(this.sorData);
            var t = [], e = this.arr[0].vip, i = this.arr[this.arr.length - 1].vip, n = this.data.vipLv >= this.arr[this.arr.length - 1].vip ? this.arr[this.arr.length - 1].vip : this.data.vipLv;
            e > n ? t.push(this.arr[0]) : n >= i ? t.push(this.arr[this.arr.length - 1]) : (t.push(this.arr[n - 1]), 
            t.push(this.arr[n])), this.listData.replaceAll(t), this.list.dataProvider = this.listData;
        }
    }, e.prototype.sorData = function(t, e) {
        return t.vip < e.vip ? -1 : t.vip > e.vip ? 1 : 0;
    }, e.prototype.onBuy = function(t) {
        if (t.target instanceof eui.Button && t.target.parent instanceof WanbaPrivilegeGiftItemWin) {
            var e = t.target.parent.isCanGet;
            e ? PfActivity.ins().sendGetWanbaVipGift(t.target.parent.index) : UserTips.ins().showTips("|C:0xff0000&T:玩吧特权等级不足|");
        }
    }, e;
}(BaseView);

__reflect(WanbaPrivilegeGiftWin.prototype, "WanbaPrivilegeGiftWin");

window.WanbaPrivilegeGiftWin = WanbaPrivilegeGiftWin;

var WanbaPrivilegeShopWin = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "WanbaPrivilegeShopSkin", e.list.itemRenderer = WanbaPrivilegeShopItemWin, 
        e.listData = new eui.ArrayCollection(), e.list.dataProvider = e.listData, e;
    }
    return __extends(e, t), e.prototype.init = function() {}, e.prototype.open = function() {
        for (var t = [], i = 0; i < arguments.length; i++) t[i] = arguments[i];
        this.addTouchEvent(this.list, this.onBuy), this.observe(PfActivity.ins().postWanbaVipFuliData, this.upData), 
        PfActivity.ins().sendWanbaVipFuliData(), e.firstTap || (e.firstTap = !0);
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeEvents(), this.removeObserve();
    }, e.prototype.upData = function() {
        var t = WanbaPrivilegeData.ins();
        if (t) {
            var e = GlobalConfig.ins().WanBaVipSellAwardConfig, i = [];
            for (var n in e) i.push(e[n]);
            this.listData.replaceAll(i), this.list.dataProvider = this.listData;
        }
    }, e.prototype.onBuy = function(t) {
        if (t.target instanceof eui.Button && t.target.parent instanceof WanbaPrivilegeShopItemWin) {
            var e = t.target.parent.isCanGet;
            e ? PfActivity.ins().sendBuyWanbaVipFuli(t.target.parent.index) : UserTips.ins().showTips("|C:0xff0000&T:玩吧特权等级不足|");
        }
    }, e;
}(BaseView);

__reflect(WanbaPrivilegeShopWin.prototype, "WanbaPrivilegeShopWin");

window.WanbaPrivilegeShopWin = WanbaPrivilegeShopWin;

var DailySignPanel = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.isInit = !1, e;
    }
    return __extends(e, t), e.prototype.init = function() {
        this.skinName = "DailySignSkin", this.touchEnabled = !1, this.touchChildren = !0, 
        this.list.dataProvider = null, this.list.itemRenderer = DailySignItem;
    }, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.isInit || (this.isInit = !0, this.init()), this.addTouchEndEvent(this.buqianBtn, this.onBtnClick), 
        this.observe(WelfareHall.ins().postSignBaseData, this.updateData), this.updateData();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.isInit && (this.removeEvents(), this.removeObserve());
    }, e.prototype.onBtnClick = function(t) {
        ViewManager.ins().open(DailySignBuyBuqianWin);
    }, e.prototype.updateData = function() {
        var t = DailySignBaseData.ins(), e = new Date(t.year, t.month, 0), i = e.getDate(), n = [];
        for (var s in GlobalConfig.ins().EveryDaySignConfig) {
            var a = GlobalConfig.ins().EveryDaySignConfig[s];
            a.id <= i && n.push(a);
        }
        this.list.dataProvider = new eui.ArrayCollection(n), this.signDayTxt.text = t.signDay + "天", 
        this.buqianTimeTxt.text = t.buqianTime + "次";
        var o = "", r = 3473189;
        0 == t.againFlag ? o = "0/1" : 1 == t.againFlag ? (o = "今日已使用", r = 16652572) : 2 == t.againFlag && (o = "1/1"), 
        this.againTxt.text = o, this.againTxt.textColor = r;
    }, e;
}(BaseView);

__reflect(DailySignPanel.prototype, "DailySignPanel");

window.DailySignPanel = DailySignPanel;

var DailyWelfarePanel = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.isInit = !1, e;
    }
    return __extends(e, t), e.prototype.init = function() {
        this.skinName = "DailyWelfareSkin", this.touchEnabled = !1, this.touchChildren = !0, 
        this.rewardList.itemRenderer = ItemBase, this.itemList.dataProvider = new eui.ArrayCollection(), 
        this.itemList.itemRenderer = DailyWelfareItem;
    }, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.isInit || (this.isInit = !0, this.init()), this.addTouchEndEvent(this.itemList, this.onBtnClick), 
        this.observe(WelfareHall.ins().postDailyWelfareData, this.updateData), this.updateData();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.isInit && (this.removeEvents(), this.removeObserve(), TimerManager.ins().remove(this.updateTime, this));
    }, e.prototype.onBtnClick = function(t) {
        if (t.target instanceof eui.Image && t.target.parent instanceof DailyWelfareItem) if (t.target.parent.isCanGet()) WelfareHall.ins().sendGetDailyWelfare(t.target.parent.id); else {
            var e = GlobalConfig.ins().EveryDayWelfareConfig[t.target.parent.id].award;
            this.rewardList.dataProvider = new eui.ArrayCollection(e);
        }
    }, e.prototype.updateData = function() {
        var t = DailyWelfareData.ins(), e = t.getActivityItem();
        if (e) {
            this.timeCon.visible = !0;
            var i = DateUtils.formatMiniDateTime(e.eTime) - GameServer.serverTime;
            this.totalTime = i + egret.getTimer(), TimerManager.ins().isExists(this.updateTime, this) || TimerManager.ins().doTimer(1e3, 0, this.updateTime, this), 
            this.updateTime();
        } else this.timeCon.visible = !1, TimerManager.ins().isExists(this.updateTime, this) && TimerManager.ins().remove(this.updateTime, this);
        e || (e = t.getNextActivityItem());
        var n = GlobalConfig.ins().EveryDayWelfareConfig[e.id].award;
        this.rewardList.dataProvider = new eui.ArrayCollection(n), this.itemList.dataProvider = new eui.ArrayCollection(t.list);
    }, e.prototype.updateTime = function() {
        var t = DailyWelfareData.ins(), e = t.getActivityItem();
        return e ? void (this.timeTxt.text = CountdownHelp.countdown(e.sTime, e.eTime, this.totalTime)) : (this.timeCon.visible = !1, 
        void (TimerManager.ins().isExists(this.updateTime, this) && TimerManager.ins().remove(this.updateTime, this)));
    }, e;
}(BaseView);

__reflect(DailyWelfarePanel.prototype, "DailyWelfarePanel");

window.DailyWelfarePanel = DailyWelfarePanel;

var WorldBossSceneTips = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.countDownTime = 5e3, e.skinName = "WorldBossSceneTipsSkin", e.touchChildren = !1, 
        e.touchEnabled = !1, e.mc = new MovieClip(), e;
    }
    return __extends(e, t), e.prototype.open = function(t) {
        this.close(), this.addMc(), t && t.addChild(this), TimerManager.ins().remove(this.close, this), 
        TimerManager.ins().doTimer(this.countDownTime, 1, this.close, this);
    }, e.prototype.close = function() {
        this.removeMc(), DisplayUtils.removeFromParent(this), TimerManager.ins().remove(this.close, this);
    }, e.prototype.addMc = function(t) {
        void 0 === t && (t = UiEffectType.Type15), this.mc.playFile(ResPath.getUIEffectPath(t), -1), 
        this.mcCon.addChild(this.mc);
    }, e.prototype.removeMc = function() {
        DisplayUtils.removeFromParent(this.mc), this.mc.stop();
    }, e;
}(BaseView);

__reflect(WorldBossSceneTips.prototype, "WorldBossSceneTips");

window.WorldBossSceneTips = WorldBossSceneTips;

var WulinbazhuSub0Panel = function(t) {
    function e() {
        var e = t.call(this) || this;
        e.skinName = "WulinbazhuSub0Skin", e.curPower = BitmapNumber.ins().createNumPic(0, BitmapNumber.numType0, 10), 
        e.curPowerCon.addChild(e.curPower), e.roleFigure = new RoleFigure(), e.roleCon.addChild(e.roleFigure);
        var i = "<u>" + e.challengeListBtn.text + "</u>";
        return e.challengeListBtn.textFlow = new egret.HtmlTextParser().parser(i), e.con3.text = "此活动开服第" + GlobalConfig.ins().WuLinBaZhuConst.openDayx + "天开启", 
        e.init(), e;
    }
    return __extends(e, t), e.prototype.init = function() {
        this.curInfoCon.visible = !1, this.defenseTimeTxt.text = "", this.curHpBar.maximum = 0, 
        this.curHpBar.value = 0, this.challengeNumTxt.text = "0人";
    }, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEvent(this.defenseRankBtn, this.onBtnClick), this.addTouchEvent(this.bazhutequanBtn, this.onBtnClick), 
        this.addTouchEvent(this.dailyRewardBtn, this.onBtnClick), this.addTouchEvent(this.challengeBtn, this.onBtnClick), 
        this.addTouchEvent(this.preHead, this.onBtnClick), this.addTouchEvent(this.challengeListBtn, this.onBtnClick), 
        this.addTouchEvent(this.buyTimeBtn, this.onBtnClick), this.observe(UserReadPlayer.ins().postPlayerResult, this.updatePreBazhu), 
        this.observe(UserReadPlayer.ins().postPlayerSimpleInfo, this.updateRoleFigure), 
        this.observe(Wulinbazhu.ins().postBaseInfo, this.updateServerTime), this.observe(Wulinbazhu.ins().postDefenseData, this.updateData), 
        this.observe(Wulinbazhu.ins().postPreBazhuData, this.updatePreData), this.observe(Wulinbazhu.ins().postChallengeTime, this.updateFreeTime), 
        this.observe(Wulinbazhu.ins().postDailtRewardData, this.updateRedPoint), Wulinbazhu.ins().sendDailtRewardData(), 
        Wulinbazhu.ins().sendBaseInfo(), Wulinbazhu.ins().sendDefenseData(), Wulinbazhu.ins().sendPreBazhuData();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        TimerManager.ins().remove(this.updateTime, this), this.removeEvents(), this.removeObserve(), 
        this.checkPreBazhu = !1;
    }, e.prototype.updateRedPoint = function(t) {
        this.redPoint.visible = t.canGetTime > 0;
    }, e.prototype.updatePreBazhu = function(t) {
        this.preBazhuId == t.id && this.checkPreBazhu && (ViewManager.ins().open(OtherRoleWin, t), 
        this.checkPreBazhu = !1);
    }, e.prototype.updateRoleFigure = function(t) {
        WulinbazhuDefenseData.ins().id == t.id && (this.roleFigure.setData(t.sex, t.getBodyResId(), t.getWeaponResId(), t.getFootResId(), t.wingLv, t.wingFlyLv, t.gangqiLv, t.gangqiFlyLv, t.zujiLv, t.zujiFlyLv, t.fabaoLv, t.fabaoFlyLv, 0), 
        this.curHpBar.maximum = t.maxHp, this.curHpBar.value = -1 == WulinbazhuDefenseData.ins().curHp ? t.maxHp : WulinbazhuDefenseData.ins().curHp, 
        this.vip.visible = t.vipLevel > 0, this.monthCard.visible = !1);
    }, e.prototype.updateServerTime = function() {
        var t = WulinbazhuBaseData.ins(), e = DateUtils.formatMiniDateTime(t.eTime) - GameServer.serverTime;
        this.totalTime = e + egret.getTimer(), CountdownHelp.isOpen(t.sTime, t.eTime) ? (TimerManager.ins().isExists(this.updateTime, this) || TimerManager.ins().doTimer(1e3, 0, this.updateTime, this), 
        this.updateTime()) : (TimerManager.ins().isExists(this.updateTime, this) && TimerManager.ins().remove(this.updateTime, this), 
        this.timeTxt.text = "未开启"), Wulinbazhu.ins().sendChallengeTime();
    }, e.prototype.updateFreeTime = function() {
        var t = WulinbazhuBaseData.ins(), e = Wulinbazhu.ins().leaveChallengeTime;
        if (t.openDay < GlobalConfig.ins().WuLinBaZhuConst.openDayx) this.con0.visible = !1, 
        this.con1.visible = !1, this.con2.visible = !1, this.con3.visible = !0; else if (0 == t.state) this.con0.visible = !1, 
        this.con1.visible = !1, this.con2.visible = !0, this.con3.visible = !1, this.challengeBtn.enabled = !1, 
        this.challengeBtn.filters = [ ColorUtil.colorMat ]; else {
            this.con3.visible = !1, this.challengeBtn.enabled = !0, this.challengeBtn.filters = [];
            var i = !1;
            i ? (this.con0.visible = !1, this.con1.visible = !0, this.con2.visible = !1, this.challengeCostTxt.text = GlobalConfig.ins().WuLinBaZhuLimit.yuanbao + "") : (this.con0.visible = !0, 
            this.con1.visible = !1, this.con2.visible = !1, this.freeTimeTxt.textColor = 0 == e ? 16652572 : 3473189, 
            this.freeTimeTxt.text = e + "/" + GlobalConfig.ins().WuLinBaZhuLimit.timesMax);
        }
        Wulinbazhu.ins().nextGetTime > 0 ? (this.nextTime = 1e3 * Wulinbazhu.ins().nextGetTime + egret.getTimer(), 
        this.freeTimeTxt.parent.addChild(this.nextTimeTxt), this.updateTime()) : (this.nextTime = -1, 
        this.nextTimeTxt.text = "", DisplayUtils.removeFromParent(this.nextTimeTxt));
    }, e.prototype.updateData = function() {
        var t = WulinbazhuDefenseData.ins();
        -1 == t.id ? (this.curInfoCon.visible = !1, this.noBazhuImg.visible = !0, BitmapNumber.ins().changeNum(this.curPower, 0, BitmapNumber.numType0, 2), 
        this.curHpBar.maximum = 0, this.curHpBar.value = 0, this.defenseTimeTxt.text = "暂无", 
        this.challengeNumTxt.text = "0人") : (this.curInfoCon.visible = !0, this.noBazhuImg.visible = !1, 
        UserReadPlayer.ins().sendFindPlayerSimpleInfo(t.id), this.defenseTimeTxt.text = DateUtils.getFormatBySecond(t.defenseTime, DateUtils.TIME_FORMAT_9), 
        this.challengeNumTxt.text = t.onListNum + "人", this.curInfo.text = t.name + " Lv" + t.level, 
        BitmapNumber.ins().changeNum(this.curPower, t.power, BitmapNumber.numType0, 2));
    }, e.prototype.updatePreData = function(t) {
        this.preBazhuId = t.id, this.preBazhuName.text = -1 == this.preBazhuId ? "虚位以待" : t.name, 
        this.preHead.source = -1 == this.preBazhuId ? ResPath.getHeadIcon(0, 1) : ResPath.getHeadIcon(t.sex, 1);
    }, e.prototype.onBtnClick = function(t) {
        switch (t.target) {
          case this.defenseRankBtn:
            ViewManager.ins().open(WulinbazhuDefenseRankWin);
            break;

          case this.bazhutequanBtn:
            ViewManager.ins().open(WulinbazhuMainWin, 2);
            break;

          case this.dailyRewardBtn:
            ViewManager.ins().open(WulinbazhuDailyRewardWin);
            break;

          case this.challengeBtn:
            if (Actor.level < GlobalConfig.ins().WuLinBaZhuLimit.level) return void UserTips.ins().showTips("等级未到" + GlobalConfig.ins().WuLinBaZhuLimit.level + "级");
            GameMap.canEnterFb() && Wulinbazhu.ins().sendChallengeOnlist();
            break;

          case this.challengeListBtn:
            ViewManager.ins().open(WulinbazhuChallengeWin);
            break;

          case this.preHead:
            if (-1 == this.preBazhuId) return void UserTips.ins().showTips("无上届霸主");
            this.checkPreBazhu = !0, UserReadPlayer.ins().sendFindPlayer(this.preBazhuId);
            break;

          case this.buyTimeBtn:
            e.isNoShowTips ? Wulinbazhu.ins().sendBuyTime() : WarnWin.show("是否花费" + GlobalConfig.ins().WuLinBaZhuLimit.yuanbao + "元宝购买一次挑战次数", function() {
                Wulinbazhu.ins().sendBuyTime();
            }, this, null, null, "", [], !0, "今日不再提示", function(t) {
                e.isNoShowTips = t;
            }, this);
        }
    }, e.prototype.updateTime = function() {
        var t = WulinbazhuBaseData.ins();
        if (this.timeTxt.text = CountdownHelp.countdown1(t.sTime, t.eTime, this.totalTime), 
        !(this.nextTime < 0)) {
            var e = Math.floor(.001 * (this.nextTime - egret.getTimer()));
            return 0 >= e ? void (this.nextTimeTxt.text = "") : void (this.nextTimeTxt.text = DateUtils.getFormatBySecond(e, DateUtils.TIME_FORMAT_1));
        }
    }, e.isNoShowTips = !1, e;
}(BaseView);

__reflect(WulinbazhuSub0Panel.prototype, "WulinbazhuSub0Panel");

window.WulinbazhuSub0Panel = WulinbazhuSub0Panel;

var WulinbazhuSub1Panel = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "WulinbazhuSub1Skin", e.curPower = BitmapNumber.ins().createNumPic(0, BitmapNumber.numType0, 10), 
        e.curPowerCon.addChild(e.curPower), e.roleFigure = new RoleFigure(), e.roleCon.addChild(e.roleFigure), 
        e.list.dataProvider = new eui.ArrayCollection(GlobalConfig.ins().WuLinBaZhuWorship.reward), 
        e.list.itemRenderer = ItemBase, e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEvent(this.mobaiBtn, this.onBtnClick), this.observe(UserReadPlayer.ins().postPlayerResult, this.updateRoleFigure), 
        this.observe(Wulinbazhu.ins().postPreBazhuData, this.updateData), this.observe(Wulinbazhu.ins().postMobaiData, this.updateMobaiData), 
        Wulinbazhu.ins().sendPreBazhuData();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeTouchEvent(this.mobaiBtn, this.onBtnClick), this.removeObserve();
    }, e.prototype.updateRoleFigure = function(t) {
        if (this.preBazhuId == t.id) {
            var e = t.roleData[0];
            this.roleFigure.setData(e.sex, e.getBodyResId(), e.getWeaponResId(), e.getFootResId(), e.wingsData.lv, e.wingsData.fiyUpLv, e.gangqisData.lv, e.gangqisData.fiyUpLv, e.zujisData.lv, e.zujisData.fiyUpLv, e.fabaosData.lv, e.fabaosData.fiyUpLv, e.dragonData.dragonLv), 
            this.vip.visible = t.vipLevel > 0, this.monthCard.visible = !1, this.curInfo.text = t.name + " Lv" + t.level, 
            BitmapNumber.ins().changeNum(this.curPower, e.power, BitmapNumber.numType0, 2);
        }
    }, e.prototype.updateData = function(t) {
        this.preBazhuId = t.id, -1 == this.preBazhuId ? (this.curInfo.text = "虚位以待", this.vip.visible = !1, 
        this.monthCard.visible = !1, BitmapNumber.ins().changeNum(this.curPower, 0, BitmapNumber.numType0, 2), 
        this.bazhuInfo.visible = !1) : (UserReadPlayer.ins().sendFindPlayer(this.preBazhuId), 
        this.bazhuInfo.visible = !0), this.noBazhuImg.visible = !this.bazhuInfo.visible, 
        Wulinbazhu.ins().sendMobaiData();
    }, e.prototype.updateMobaiData = function(t) {
        t.canMobaiTime > 0 ? (this.mobaiBtn.enabled = !0, this.mobaiBtn.filters = [], this.mobaiBtn.label = "膜 拜") : (this.mobaiBtn.enabled = !1, 
        this.mobaiBtn.filters = [ ColorUtil.colorMat ], this.mobaiBtn.label = -1 == this.preBazhuId ? "膜拜" : "已膜拜");
    }, e.prototype.onBtnClick = function(t) {
        return -1 == this.preBazhuId ? void UserTips.ins().showTips("无上届霸主") : Actor.level < GlobalConfig.ins().WuLinBaZhuWorship.level ? void UserTips.ins().showTips("等级未到" + GlobalConfig.ins().WuLinBaZhuWorship.level + "级") : void Wulinbazhu.ins().sendMobai();
    }, e;
}(BaseView);

__reflect(WulinbazhuSub1Panel.prototype, "WulinbazhuSub1Panel");

window.WulinbazhuSub1Panel = WulinbazhuSub1Panel;

var WulinbazhuSub2Panel = function(t) {
    function e() {
        var e = t.call(this) || this;
        e.attrNameList = [ "坐骑", "飞翎", "暗器", "武踪", "罡气", "剑童", "界灵" ], e.skinName = "WulinbazhuSub2Skin", 
        e.setSkinPart("bazhuRewardItem", new ItemBase()), e.titleMC = new MovieClip(), e.titleCon.addChild(e.titleMC), 
        e.titleMC.playFile(ResPath.getTitlePath(21), -1);
        for (var i = "", n = 0; n < e.attrNameList.length; n++) i += e.attrNameList[n] + "属性 +5%\n";
        return e.attrTxt.text = i, i = "<u>" + e.rewardBtn.text + "</u>", e.rewardBtn.textFlow = new egret.HtmlTextParser().parser(i), 
        e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEvent(this.rewardBtn, this.onBtnClick), this.observe(Wulinbazhu.ins().postPreBazhuData, this.updateData), 
        Wulinbazhu.ins().sendPreBazhuData(), this.updateReward(), this.pifengMC = new MovieClip(), 
        this.pifengMCCon.addChild(this.pifengMC), this.pifengMC.playFile(ResPath.getUIEffectPath(UiEffectType.Type24), -1);
    }, e.prototype.updateReward = function() {
        var t, e = WulinbazhuBaseData.ins().index <= 2;
        t = e ? GlobalConfig.ins().WuLinBaZhuBossGift.rewardFirst[0] : GlobalConfig.ins().WuLinBaZhuBossGift.rewardOthers[0], 
        t.isNoShowName = !0, this.bazhuRewardItem.data = t;
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeTouchEvent(this.rewardBtn, this.onBtnClick), this.removeObserve();
    }, e.prototype.updateData = function(t) {
        this.isActivity.visible = t.id == Actor.actorID;
    }, e.prototype.onBtnClick = function(t) {
        ViewManager.ins().open(WulinbazhuMainWin, 3);
    }, e;
}(BaseView);

__reflect(WulinbazhuSub2Panel.prototype, "WulinbazhuSub2Panel");

window.WulinbazhuSub2Panel = WulinbazhuSub2Panel;

var WulinbazhuSub3Panel = function(t) {
    function e() {
        var e = t.call(this) || this;
        e.skinName = "WulinbazhuSub3Skin", e.rewardList.dataProvider = new eui.ArrayCollection(GlobalConfig.ins().WuLinBaZhuGuildGift.reward), 
        e.rewardList.itemRenderer = ItemBase;
        var i = [];
        for (var n in GlobalConfig.ins().WuLinBaZhuRankReward) {
            var s = GlobalConfig.ins().WuLinBaZhuRankReward[n];
            i.push(s);
        }
        return e.rankRewardList.dataProvider = new eui.ArrayCollection(i), e.rankRewardList.itemRenderer = WulinbazhuSubItem0, 
        e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEvent(this.getRewardBtn, this.onBtnClick), this.observe(Wulinbazhu.ins().postCifuRewardData, this.updateData), 
        this.observe(Wulinbazhu.ins().postPreBazhuData, this.updatePreData), Wulinbazhu.ins().sendPreBazhuData(), 
        Wulinbazhu.ins().sendCifuRewardData();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeTouchEvent(this.getRewardBtn, this.onBtnClick), this.removeObserve();
    }, e.prototype.updateData = function(t) {
        1 == t ? (this.getRewardBtn.enabled = !0, this.getRewardBtn.filters = [], this.getRewardBtn.label = "领取奖励") : 2 == t ? (this.getRewardBtn.enabled = !1, 
        this.getRewardBtn.filters = [ ColorUtil.colorMat ], this.getRewardBtn.label = "已领取") : 0 == t && (this.getRewardBtn.enabled = !1, 
        this.getRewardBtn.filters = [ ColorUtil.colorMat ], this.getRewardBtn.label = "不可领");
    }, e.prototype.updatePreData = function(t) {
        -1 == t.id ? this.guildName.text = "虚位以待" : this.guildName.text = t.guildName;
    }, e.prototype.onBtnClick = function(t) {
        Wulinbazhu.ins().sendGetCifuReward();
    }, e;
}(BaseView);

__reflect(WulinbazhuSub3Panel.prototype, "WulinbazhuSub3Panel");

window.WulinbazhuSub3Panel = WulinbazhuSub3Panel;

var XianJieItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.playerId = 0, e.skinName = "XianJieItemSkin", e.initUI(), e;
    }
    return __extends(e, t), e.prototype.initUI = function() {
        this.roleFigure = new RoleFigure(), this.mcCon.addChild(this.roleFigure);
    }, e.prototype.setData = function(t) {
        if (t instanceof RankDataXianJie) {
            this.currentState = "has", this.playerId = t.id, this.rankTxt.text = "第" + t.pos + "名";
            var e = GlobalConfig.ins().XianjieConfig[t.curJie][t.curStar - 1];
            if (!e) return;
            this.nameTxt.text = t.player + "", this.jieTxt.text = e.name + "";
        } else "number" == typeof t && (this.currentState = "no", this.rankTxt.text = "第" + (t + 1) + "名");
    }, e.prototype.setRoleData = function(t) {
        this.roleFigure.setData(t.sex, t.getBodyResId(), t.getWeaponResId(), t.getFootResId(), t.wingsData.lv, t.wingsData.fiyUpLv, t.gangqisData.lv, t.gangqisData.fiyUpLv, 0, 0, t.fabaosData.lv, t.fabaosData.fiyUpLv, t.dragonData.dragonLv);
    }, e;
}(BaseView);

__reflect(XianJieItem.prototype, "XianJieItem");

window.XianJieItem = XianJieItem;

var XianLvFbPanel = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "XianLvFbPanelSkin", e.name = "誓约之地", e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEvent(this.btnEnter, this.onClick), this.addTouchEvent(this.buyBtn, this.onClick), 
        this.observe(XianLv.ins().postFbInfoData, this.setDataInfo), XianLv.ins().sendFbInfo();
        var i = GlobalConfig.ins().XLXTCommonConfig;
        this.txtRule.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(LangManager.xianlv_str6, i.fbTmsEvr)), 
        this.priceTxt.text = i.fbBuyCost + "";
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeEvents(), this.removeObserve();
    }, e.prototype.setDataInfo = function() {
        var t, e = XianLvFbData.ins();
        t = e.num > 0 ? "|C:0x00ff00&T:" + e.num + "次|" : "|C:0xff0000&T:" + e.num + "次|", 
        this.countTxt.textFlow = TextFlowMaker.generateTextFlow(t), this.redPoint.visible = e.getRedPoint();
    }, e.prototype.onClick = function(t) {
        switch (t.target) {
          case this.btnEnter:
            XianLvFbData.ins().num > 0 ? (XianLvFbData.firstTap = !0, ViewManager.ins().open(XianLvFbPiPeiWin)) : UserTips.ins().showTips("|C:0xff0000&T:次数不足|");
            break;

          case this.buyBtn:
        }
    }, e;
}(BaseView);

__reflect(XianLvFbPanel.prototype, "XianLvFbPanel");

window.XianLvFbPanel = XianLvFbPanel;

var XianLvPanel = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "XianLvPanelSkin", e.name = "夫 妻", e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.init();
    }, e.prototype.init = function() {
        this.eff || (this.eff = new MovieClip(), this.eff.x = (this.width >> 1) - 50, this.eff.y = (this.height >> 1) - 50), 
        this.btnMc1 = new MovieClip(), this.btnMc2 = new MovieClip(), this.btnMc1.x = this.btnCon.width >> 1, 
        this.btnMc2.x = this.btnCon.width >> 1, this.btnMc1.y = this.stoneBtn.y + 40, this.btnMc2.y = this.cmBtn.y + 40, 
        this.btnCon.addChildAt(this.btnMc1, 1), this.btnCon.addChild(this.btnMc2), this.btnMc1.playFile(ResPath.getUIEffectPath(UiEffectType.Type5), -1), 
        this.btnMc2.playFile(ResPath.getUIEffectPath(UiEffectType.Type5), -1);
    }, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEndEvent(this.applyBtn, this.onClick), this.addTouchEndEvent(this.cmBtn, this.onClick), 
        this.addTouchEndEvent(this.lgNameTxt, this.onClick), this.addTouchEndEvent(this.lpNameTxt, this.onClick), 
        this.addTouchEndEvent(this.stoneBtn, this.onClick), this.observe(XianLv.ins().postDataInfo, this.upDataInfo), 
        this.observe(XianLv.ins().postChanMianData, this.upRedpoint), this.observe(XianLv.ins().postXianLvShiInfo, this.upRedpoint), 
        this.observe(XianLv.ins().postDataInfo, this.upRedpoint), this.observe(UserReadPlayer.ins().postPlayerResult, this.openOtherPlayerView), 
        this.observe(XianLv.ins().postResultWin, this.upResult), XianLv.ins().sendDataInfo(), 
        XianLv.ins().sendChanMianInfo(), XianLv.ins().sendSanShengShiInfo(), this.upRedpoint(), 
        this.upDataInfo();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeEvents(), this.removeObserve();
    }, e.prototype.upDataInfo = function() {
        var t = XianLvData.ins();
        this.btnCon.visible = 0 == t.result;
        var e = SubRoles.ins().getSubRoleByIndex(0), i = t.fereName ? t.fereName : "暂无";
        null == this.mc && (this.mc = new MovieClip(), this.mc.scaleX = .8, this.mc.scaleY = .7, 
        this.mc.y = 600), 0 == t.result ? (this.applyBtn.visible = !1, this.mc.stop(), null != this.mc.parent && this.mc.parent.removeChild(this.mc)) : (this.applyBtn.visible = !0, 
        this.mc.playFile(ResPath.getUIEffectPath(UiEffectType.Type19), -1), this.addChild(this.mc)), 
        0 == e.sex ? this.applyBtn.x = 132 : this.applyBtn.x = 289, this.mc.x = this.applyBtn.x + 40, 
        0 == e.sex ? (this.lpNameTxt.text = i, this.lgNameTxt.text = e.name, this.lgNameTxt.touchEnabled = !1, 
        this.lpNameTxt.touchEnabled = t.fereName ? !0 : !1, t.fereName && (this.lpNameTxt.textFlow = new egret.HtmlTextParser().parser("<u>" + i + "</u>"))) : (this.lpNameTxt.text = e.name, 
        this.lgNameTxt.text = i, this.lpNameTxt.touchEnabled = !1, this.lgNameTxt.touchEnabled = t.fereName ? !0 : !1, 
        t.fereName && (this.lgNameTxt.textFlow = new egret.HtmlTextParser().parser("<u>" + i + "</u>")));
    }, e.prototype.upResult = function() {
        this.eff.playFile(ResPath.getUIEffectPath(UiEffectType.Type36), 3), this.addChild(this.eff);
    }, e.prototype.onClick = function(t) {
        switch (t.target) {
          case this.applyBtn:
            XianLvData.firstTap = !0, XianLv.ins().postDataInfo(), ViewManager.ins().open(XianLvProposalWin);
            break;

          case this.cmBtn:
            ViewManager.ins().open(XianLvChanMianWin);
            break;

          case this.stoneBtn:
            ViewManager.ins().open(XianLvShiWin);
            break;

          case this.lgNameTxt:
            UserReadPlayer.ins().sendFindPlayer(XianLvData.ins().fereId);
            break;

          case this.lpNameTxt:
            UserReadPlayer.ins().sendFindPlayer(XianLvData.ins().fereId);
        }
    }, e.prototype.openOtherPlayerView = function(t) {
        ViewManager.ins().open(OtherRoleWin, t);
    }, e.prototype.upRedpoint = function() {
        this.redPoint0.visible = XianLvShiData.ins().getRedPoint(), this.redPoint1.visible = XianLvChanMianData.ins().getRedPoint(), 
        this.redPoint2.visible = !1;
    }, e;
}(BaseView);

__reflect(XianLvPanel.prototype, "XianLvPanel");

window.XianLvPanel = XianLvPanel;

var XianLvTXJPanel = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.exp = 0, e.skinName = "XianLvTXJPanelSkin", e.name = "同心结", e.list.itemRenderer = XianLvTXJItemWin, 
        e.list.dataProvider = new eui.ArrayCollection(), e.star = new XinList(5, 0, 0), 
        e.starCon.addChild(e.star), e.expBar.slideDuration = 0, e.totalPower || (e.totalPower = BitmapNumber.ins().createNumPic(0, BitmapNumber.numType0, 10), 
        e.powerContainer.addChild(e.totalPower)), e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEndEvent(this.buyBtn, this.onClick), this.addTouchEndEvent(this.skillBtn, this.onClick), 
        this.addTouchEndEvent(this.wayBtn, this.onClick), this.observe(XianLv.ins().postTXJInfo, this.upDataInfo), 
        XianLv.ins().sendTXJInfo(), this.upDataInfo();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeEvents(), this.removeObserve();
    }, e.prototype.upDataInfo = function() {
        var t = XianLvTXJData.ins();
        if (this.itemId = GlobalConfig.ins().XLXTCommonConfig.iidTxj, t.index > 0) {
            var e = XianLvItem.quality[t.index - 1];
            this.buyCon.visible = !1, this.activeCon.visible = !0, this.itemIcon.data = t.index, 
            this.nameTxt.text = XianLvTXJItemWin.itemName[t.index - 1] + (" Lv." + t.lv), this.nameTxt.textColor = ItemBase.QUALITY_COLOR[e];
            var i = GlobalConfig.ins().TXJLevelConfig[t.index][t.lv - 1], n = GlobalConfig.ins().TXJLevelConfig[t.index][t.lv];
            i && (this.curAttrTxt.textFlow = TextFlowMaker.generateTextFlow(AttributeData.getAttStr1(i.attrs, AttributeFormat.FORMAT_4())), 
            this.setPoewr(i));
            var s = UserBag.ins().getBagGoodsCountById(UserBag.BAG_TYPE_OTHTER, this.itemId);
            this.activeImg.source = this.getIdIcon(this.itemId), n ? (this.currentState = "not", 
            this.countTxt.textFlow = TextFlowMaker.generateTextFlow(this.getCountStr(s, n.cost)), 
            this.nextAttrTxt.textFlow = TextFlowMaker.generateTextFlow(AttributeData.getAttStr1(n.attrs, AttributeFormat.FORMAT_4())), 
            this.star.starNum = t.xinNum, this.expBar.maximum = n.expLup, this.expBar.value = t.exp, 
            this.redPoint.visible = XianLvTXJData.ins().getRedPoint()) : (this.currentState = "max", 
            this.redPoint.visible = !1);
        } else {
            this.buyCon.visible = !0, this.activeCon.visible = !1;
            var i = GlobalConfig.ins().TXJLevelConfig, a = [];
            for (var o in i) a.push(i[o][0]);
            this.list.dataProvider = new eui.ArrayCollection(a);
        }
    }, e.prototype.getCountStr = function(t, e) {
        var i = "";
        return i = t >= e ? "|C:0x00ff00&T:" + t + "|/" + e + "|" : "|C:0xff0000&T:" + t + "|/" + e + "|";
    }, e.prototype.setPoewr = function(t) {
        var e = 0;
        t && (e += UserBag.getAttrPower(t.attrs), e += t.powerEx), BitmapNumber.ins().changeNum(this.totalPower, e, BitmapNumber.numType0, 2);
    }, e.prototype.setSkill = function() {}, e.prototype.onClick = function(t) {
        switch (t.target) {
          case this.buyBtn:
            XianLv.ins().sendUpTXJ();
            break;

          case this.skillBtn:
            break;

          case this.wayBtn:
            UserWarn.ins().setBuyGoodsWarn(this.itemId);
        }
    }, e.prototype.getIdIcon = function(t) {
        var e = "", i = GlobalConfig.ins().ItemConfig(t);
        return i && (e = ResPath.getItemIconPath(i.icon)), e;
    }, e;
}(BaseView);

__reflect(XianLvTXJPanel.prototype, "XianLvTXJPanel");

window.XianLvTXJPanel = XianLvTXJPanel;

var YuanGuBossGuishuItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "GaoBaoBossGuishuSkin", e.bar = new CoolingQueueMcForCircle(e.hpBar, 90), 
        e;
    }
    return __extends(e, t), e.prototype.open = function() {
        this.observe(YuanGuBoss.ins().postResultInfo, this.update), this.observe(GameLogic.ins().postOtherHpChange, this.updateHp), 
        this.observe(GameLogic.ins().postHpChange, this.updateHp), YuanGuBoss.ins().sendguishuInfo();
    }, e.prototype.close = function() {
        this.removeEvents();
    }, e.prototype.updateHp = function() {
        var t = EntityManager.ins().getEntityByHandle(YuanGuBossData.ins().guishuItem.handle);
        if (t) {
            var e = t.getHP() / t.getMaxHP() * 360;
            this.bar.setProgress(e, 360);
        } else this.bar.setProgress(0, 100);
    }, e.prototype.update = function() {
        0 != YuanGuBossData.ins().guishuItem.handle && YuanGuBossData.ins().guishuItem.handle == YuanGuBoss.ins().curEnemyHandle ? this.addeff() : this.removeeff();
    }, e.prototype.addeff = function() {
        this.mc || (this.mc = new MovieClip(), this.mc.playFile(ResPath.getUIEffectPath(UiEffectType.Type28), -1), 
        this.mcCon.addChild(this.mc));
    }, e.prototype.removeeff = function() {
        this.mc && (DisplayUtils.removeFromParent(this.mc), this.mc.stop(), this.mc = null);
    }, e.prototype.setData = function() {
        var t = YuanGuBossData.ins().guishuItem;
        this.headIcon.source = ResPath.getHeadIcon(t.sex, 1), this.nameTxt.text = t.playerName;
    }, e;
}(BaseView);

__reflect(YuanGuBossGuishuItem.prototype, "YuanGuBossGuishuItem");

window.YuanGuBossGuishuItem = YuanGuBossGuishuItem;

var YuanGuPersonalBossPanel = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "YuanGuPersonalBossSkin", e.name = "个人挑战", e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.init();
    }, e.prototype.init = function() {
        this.mc = new MovieClip(), this.mcCon.addChild(this.mc), this.butEff = new MovieClip(), 
        this.butEff.x = 250, this.butEff.y = 630, this.addChild(this.butEff), this.rewardList.itemRenderer = ItemBase, 
        this.rewardList.dataProvider = new eui.ArrayCollection(GlobalConfig.ins().YuanGuBossCommon.aBossReward), 
        this.bar.slideDuration = 0;
    }, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEndEvent(this.challengeBtn, this.onClick), this.addTouchEndEvent(this.helpBtn, this.onClick), 
        this.observe(YuanGuBoss.ins().postBaseInfo, this.upBarData), this.observe(YuanGuBoss.ins().postBarValue, this.upBarData), 
        this.observe(YuanGuBoss.ins().postBossInfo, this.upBossInfo), YuanGuBoss.ins().sendBarValue(), 
        YuanGuBoss.ins().sendBossInfo(), this.upBossInfo();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeEvents(), this.removeObserve();
    }, e.prototype.upBossInfo = function() {
        var t = YuanGuBossData.ins(), e = t.bossIndex > 0 ? t.bossIndex - 1 : 0, i = GlobalConfig.ins().YuanGuBossCommon.bossIdPri[e], n = GlobalConfig.ins().MonstersConfig(i);
        n && (this.mc.playFile("" + ResPath.RES_DIR_MONSTER + MonstersConfig.realAvatar(n) + "_" + EntityAction.STAND + CharDirEnum.SOUTH_EAST, -1), 
        this.bossInfoTxt.text = "(Lv." + n.level + ")");
    }, e.prototype.upBarData = function() {
        var t = YuanGuBossData.ins(), e = GlobalConfig.ins().YuanGuBossCommon.valuePri, i = YuanGuBossData.ins().personalValue;
        this.bar.maximum = e, this.bar.value = i;
        var n = "剩余挑战次数:|C:0x34FF25&T:(" + t.perNum + "/" + GlobalConfig.ins().YuanGuBossCommon.timesPri + ")|次";
        this.numTxt.textFlow = TextFlowMaker.generateTextFlow(n), i >= e && this.butEff.playFile(ResPath.getUIEffectPath(UiEffectType.Type19), -1), 
        t.getPersonalValue() && this.butEff.playFile(ResPath.getUIEffectPath(UiEffectType.Type19), -1);
    }, e.prototype.onClick = function(t) {
        switch (t.target) {
          case this.challengeBtn:
            if (!GameMap.canEnterFb()) return;
            if (YuanGuBossData.ins().personalValue < GlobalConfig.ins().YuanGuBossCommon.valuePri) return void UserTips.ins().showTips("进度值未满");
            YuanGuBossData.ins().perNum > 0 ? YuanGuBoss.ins().sendChallenge(2) : UserTips.ins().showTips("挑战次数不足");
            break;

          case this.helpBtn:
            UserWarn.ins().showCommonTips(LangManager.yuanguboos_str1, !0);
        }
    }, e;
}(BaseView);

__reflect(YuanGuPersonalBossPanel.prototype, "YuanGuPersonalBossPanel");

window.YuanGuPersonalBossPanel = YuanGuPersonalBossPanel;

var YuanGuPublicBossPanel = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "YuanGuPublicBossSkin", e.name = "全民挑战", e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.init();
    }, e.prototype.init = function() {
        this.mc = new MovieClip(), this.mcCon.addChild(this.mc), this.butEff = new MovieClip(), 
        this.butEff.x = 250, this.butEff.y = 630, this.addChild(this.butEff), this.rewardList.itemRenderer = ItemBase, 
        this.rewardList.dataProvider = new eui.ArrayCollection(GlobalConfig.ins().YuanGuBossCommon.allBoossReward), 
        this.bar.slideDuration = 0;
    }, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEndEvent(this.challengeBtn, this.onClick), this.addTouchEndEvent(this.helpBtn, this.onClick), 
        this.observe(YuanGuBoss.ins().postBaseInfo, this.updateBaseInfo), this.observe(YuanGuBoss.ins().postResultInfo, this.updateTxt), 
        this.observe(YuanGuBoss.ins().postBossInfo, this.upBossInfo), this.observe(YuanGuBoss.ins().postBarValue, this.upBarData), 
        YuanGuBoss.ins().sendBaseInfo(), YuanGuBoss.ins().sendBossInfo(), YuanGuBoss.ins().sendSkillInfo(), 
        YuanGuBoss.ins().sendguishuInfo(), YuanGuBoss.ins().sendBarValue();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeEvents(), this.removeObserve();
    }, e.prototype.updateTxt = function() {
        var t = YuanGuBossData.ins();
        this.firstHurtTxt.text = t.guishuItem.playerName ? t.guishuItem.playerName : "无", 
        this.lastAttackTxt.text = t.killerItem.playerName ? t.killerItem.playerName : "无";
    }, e.prototype.upBossInfo = function() {
        var t = YuanGuBossData.ins(), e = t.bossIndex > 0 ? t.bossIndex - 1 : 0, i = GlobalConfig.ins().YuanGuBossCommon.boss[e], n = GlobalConfig.ins().MonstersConfig(i);
        n && (this.mc.playFile("" + ResPath.RES_DIR_MONSTER + MonstersConfig.realAvatar(n) + "_" + EntityAction.STAND + CharDirEnum.SOUTH_EAST, -1), 
        this.bossInfoTxt.text = "(Lv." + n.level + ")");
    }, e.prototype.upBarData = function() {
        this.bar.maximum = GlobalConfig.ins().YuanGuBossCommon.valuePub, this.bar.value = YuanGuBossData.ins().publicValue;
    }, e.prototype.updateBaseInfo = function() {
        var t = YuanGuBossData.ins();
        t.getPublicValue() && this.butEff.playFile(ResPath.getUIEffectPath(UiEffectType.Type19), -1), 
        t.challengeCD > 0 ? (this.challengeBtn.enabled = !1, this.challengeBtn.filters = [ ColorUtil.colorMat ], 
        this.totalTime = 1e3 * t.challengeCD + egret.getTimer() + 500, TimerManager.ins().remove(this.updateTime, this), 
        TimerManager.ins().doTimer(1e3, 0, this.updateTime, this)) : (this.challengeBtn.enabled = !0, 
        this.challengeBtn.filters = null), this.updateTime();
    }, e.prototype.updateTime = function() {
        var t;
        if (0 == this.challengeBtn.enabled) {
            if (t = Math.floor((this.totalTime - egret.getTimer()) / 1e3), 0 >= t) return this.challengeBtn.enabled = !0, 
            this.challengeBtn.filters = null, void (this.challengeBtn.label = "挑 战");
            this.challengeBtn.label = "挑 战(" + t + "S)";
        }
    }, e.prototype.onClick = function(t) {
        switch (t.target) {
          case this.challengeBtn:
            if (!GameMap.canEnterFb()) return;
            YuanGuBoss.ins().sendChallenge(1);
            break;

          case this.helpBtn:
            UserWarn.ins().showCommonTips(LangManager.yuanguboos_str0, !0);
        }
    }, e;
}(BaseView);

__reflect(YuanGuPublicBossPanel.prototype, "YuanGuPublicBossPanel");

window.YuanGuPublicBossPanel = YuanGuPublicBossPanel;

var YuanxiaoBossGuishuItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "GaoBaoBossGuishuSkin", e.bar = new CoolingQueueMcForCircle(e.hpBar, 90), 
        e;
    }
    return __extends(e, t), e.prototype.open = function() {
        this.observe(YuanxiaoBoss.ins().postStartAttackPlayer, this.update), this.observe(YuanxiaoBoss.ins().postStopAttackPlayer, this.update), 
        this.observe(GameLogic.ins().postOtherHpChange, this.updateHp), this.observe(GameLogic.ins().postHpChange, this.updateHp);
    }, e.prototype.close = function() {
        this.removeEvents();
    }, e.prototype.updateHp = function() {
        var t = EntityManager.ins().getEntityByHandle(YuanxiaoBoss.ins().guishuItem.handle);
        if (t) {
            var e = t.getHP() / t.getMaxHP() * 360;
            this.bar.setProgress(e, 360);
        } else this.bar.setProgress(0, 100);
    }, e.prototype.update = function() {
        0 != YuanxiaoBoss.ins().guishuItem.handle && YuanxiaoBoss.ins().guishuItem.handle == YuanxiaoBoss.ins().curEnemyHandle ? this.addeff() : this.removeeff();
    }, e.prototype.addeff = function() {
        this.mc || (this.mc = new MovieClip(), this.mc.playFile(ResPath.getUIEffectPath(UiEffectType.Type28), -1), 
        this.mcCon.addChild(this.mc));
    }, e.prototype.removeeff = function() {
        this.mc && (DisplayUtils.removeFromParent(this.mc), this.mc.stop(), this.mc = null);
    }, e.prototype.setData = function() {
        var t = YuanxiaoBoss.ins().guishuItem;
        this.headIcon.source = ResPath.getHeadIcon(t.sex, 1), this.nameTxt.text = t.playerName;
    }, e;
}(BaseView);

__reflect(YuanxiaoBossGuishuItem.prototype, "YuanxiaoBossGuishuItem");

window.YuanxiaoBossGuishuItem = YuanxiaoBossGuishuItem;

var YuanxiaoBossMyItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        e.skinName = "GaoBaoBossGuishuSkin", e.guishuTxt.text = "自己", e.bar = new CoolingQueueMcForCircle(e.hpBar, 90);
        var i = SubRoles.ins().getSubRoleByIndex(0);
        return e.headIcon.source = ResPath.getHeadIcon(i.sex, 1), e.nameTxt.text = i.name, 
        e;
    }
    return __extends(e, t), e.prototype.open = function() {
        this.observe(GameLogic.ins().postHpChange, this.updateMyHp), this.observe(GameLogic.ins().postRoleState, this.updateMyHp);
    }, e.prototype.close = function() {
        this.removeEvents();
    }, e.prototype.updateMyHp = function() {
        var t = SubRoles.ins().getSubRoleByIndex(0), e = t.getAtt(AttributeType.atHp) || 0, i = t.getAtt(AttributeType.atMaxHp) || 0;
        GameLogic.ins().roleAlive || (e = 0);
        var n = e / i * 360;
        this.bar.setProgress(n, 360);
    }, e;
}(BaseView);

__reflect(YuanxiaoBossMyItem.prototype, "YuanxiaoBossMyItem");

window.YuanxiaoBossMyItem = YuanxiaoBossMyItem;

var YuanxiaoSubPanel0 = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "YuanxiaoSubPanelSkin0", e.listData = new eui.ArrayCollection(), 
        e.list.itemRenderer = YuanxiaoSubItem0, e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEndEvent(this.btnRecharge, this.onBtnClick), this.addTouchEvent(this.list, this.onBtnClick), 
        this.observe(NewyearActivity.ins().postYxLianxuInfo, this.updateData), this.updateData();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeTouchEvent(this.btnRecharge, this.onBtnClick), this.removeTouchEvent(this.list, this.onBtnClick);
    }, e.prototype.updateData = function() {
        var t = YuanxiaoData0.ins();
        this.hasRecharge.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(LangManager.rechargeStr1, t.recharge));
        var e = DateUtils.formatMiniDateTime(t.eTime) - GameServer.serverTime;
        this.totalTime = e + egret.getTimer(), this.updateTime();
        var i = GlobalConfig.ins().ChunjieLianxuConfig, n = [];
        for (var s in i) n.push(i[s]);
        n.sort(this.sortData), this.listData.replaceAll(n), this.list.dataProvider = this.listData;
    }, e.prototype.sortData = function(t, e) {
        var i = YuanxiaoData0.ins(), n = 1 == (i.flag >> t.index - 1 & 1), s = 1 == (i.flag >> e.index - 1 & 1);
        return n && s || !n && !s ? t.index > e.index ? 1 : t.index < e.index ? -1 : 0 : n ? 1 : -1;
    }, e.prototype.onBtnClick = function(t) {
        if (t.target instanceof eui.Button) if (t.target.parent instanceof YuanxiaoSubItem0) {
            if (!t.target.parent.isCanGet) return void UserTips.ins().showTips("未达到条件");
            NewyearActivity.ins().sendGetYxLianxu(t.target.parent.index);
        } else t.target == this.btnRecharge && Recharge.ins().gameCharge(1);
    }, e.prototype.updateTime = function() {
        var t = YuanxiaoData0.ins();
        this.timeTxt.text = CountdownHelp.countdown1(t.sTime, t.eTime, this.totalTime);
    }, e;
}(BaseView);

__reflect(YuanxiaoSubPanel0.prototype, "YuanxiaoSubPanel0");

window.YuanxiaoSubPanel0 = YuanxiaoSubPanel0;

var YuanxiaoSubPanel3 = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "YuanxiaoSubPanelSkin3", e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.init();
    }, e.prototype.init = function() {
        this.mc = new MovieClip(), this.mcCon.addChild(this.mc), this.butEff = new MovieClip(), 
        this.butEff.x = 250, this.butEff.y = 614, this.addChild(this.butEff), this.rewardList.itemRenderer = ItemBase;
        var t = GlobalConfig.ins().YuanxiaoBossCommonConfig.bossId, e = GlobalConfig.ins().MonstersConfig(t);
        this.mc.playFile("" + ResPath.RES_DIR_MONSTER + MonstersConfig.realAvatar(e) + "_" + EntityAction.STAND + CharDirEnum.SOUTH_EAST, -1), 
        this.rewardList.dataProvider = new eui.ArrayCollection(GlobalConfig.ins().YuanxiaoBossCommonConfig.bossRewardList), 
        this.bossTxt.text = GlobalConfig.ins().YuanxiaoBossCommonConfig.timeTxt, this.ruleTxt.text = GlobalConfig.ins().YuanxiaoBossCommonConfig.ruleTips;
    }, e.prototype.open = function() {
        this.observe(YuanxiaoBoss.ins().postBaseInfo, this.updateBossInfo), this.addTouchEvent(this.challengeBtn, this.onClick), 
        this.addTouchEvent(this.rewardBtn, this.onClick), YuanxiaoBoss.ins().sendBaseInfo();
    }, e.prototype.close = function() {
        this.removeEvents(), this.removeObserve();
    }, e.prototype.updateBossInfo = function() {
        var t = YuanxiaoBossData0.ins();
        t.isOpenBoss && t.curHp > 0 && this.butEff.playFile(ResPath.getUIEffectPath(UiEffectType.Type19), -1), 
        t.challengeCD > 0 ? (this.challengeBtn.enabled = !1, this.challengeBtn.filters = [ ColorUtil.colorMat ]) : (this.challengeBtn.enabled = !0, 
        this.challengeBtn.filters = null), t.challengeCD = 1e3 * t.challengeCD + egret.getTimer() + 500, 
        this.updateTime();
    }, e.prototype.updateTime = function() {
        var t = Math.floor((YuanxiaoBossData0.ins().totalTime - egret.getTimer()) / 1e3);
        if (0 >= t) return void (this.timeTxt.text = "已结束");
        var e;
        if (e = t > DateUtils.SECOND_PER_DAY ? DateUtils.getFormatBySecond(t, DateUtils.TIME_FORMAT_5, 4) : DateUtils.getFormatBySecond(t, DateUtils.TIME_FORMAT_9), 
        this.timeTxt.text = e, 0 == this.challengeBtn.enabled) {
            if (t = Math.floor((YuanxiaoBossData0.ins().challengeCD - egret.getTimer()) / 1e3), 
            0 >= t) return this.challengeBtn.enabled = !0, this.challengeBtn.filters = null, 
            void (this.challengeBtn.label = "挑 战");
            this.challengeBtn.label = "挑 战(" + t + "S)";
        }
    }, e.prototype.onClick = function(t) {
        switch (t.target) {
          case this.challengeBtn:
            if (!GameMap.canEnterFb()) return;
            YuanxiaoBoss.ins().sendChallenge();
            break;

          case this.rewardBtn:
            ViewManager.ins().open(YuanxiaoBossRewardWin);
        }
    }, e;
}(BaseView);

__reflect(YuanxiaoSubPanel3.prototype, "YuanxiaoSubPanel3");

window.YuanxiaoSubPanel3 = YuanxiaoSubPanel3;

var ShenJianLevelView = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "ShenJianLevelSkin", e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.init();
    }, e.prototype.init = function() {
        this.touchEnabled = !1, this.touchChildren = !1;
        for (var t = 40, e = 1; 9 >= e; e++) {
            var i = this["ball" + e], n = MathUtils.getDirMove(t * (e - 1) - 90, 200);
            i.x = n.x - 29 + 180, i.y = n.y - 29 + 150;
        }
    }, e.prototype.setData = function(t, e) {
        var i = GlobalConfig.ins().ItemConfig(e);
        this.tupoCostImg.source = 0 == e ? "" : ResPath.getItemIconPath(i.icon);
        for (var n = 1; 9 >= n; n++) t >= n ? this["ball" + n].icon = "zhenbaosystem_shenjian_ball0_png" : this["ball" + n].icon = "zhenbaosystem_shenjian_ball1_png";
    }, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeEvents();
    }, e.prototype.onClick = function(t) {}, e;
}(BaseView);

__reflect(ShenJianLevelView.prototype, "ShenJianLevelView");

window.ShenJianLevelView = ShenJianLevelView;

var ShenJianPartCostItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "ShenJianPartCostSkin", e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.init();
    }, e.prototype.init = function() {
        this.touchEnabled = !1, this.touchChildren = !1, this.setSkinPart("item", new ItemBase());
    }, e.prototype.setData = function(t, e) {
        this.id = t, this.costNum = e, this.item.data = t;
    }, e.prototype.updateCount = function() {
        var t = UserBag.ins().getBagGoodsCountById(0, this.id);
        this.numTxt.text = t + "/" + this.costNum, this.numTxt.textColor = t >= this.costNum ? 3473189 : 16711680;
    }, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeEvents();
    }, e.prototype.onClick = function(t) {}, e;
}(BaseView);

__reflect(ShenJianPartCostItem.prototype, "ShenJianPartCostItem");

window.ShenJianPartCostItem = ShenJianPartCostItem;

var ShenJianPartItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "ShenJianPartItemSkin", e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.init();
    }, e.prototype.init = function() {
        this.touchEnabled = !0, this.touchChildren = !1;
    }, e.prototype.setData = function(t, e) {
        this.id = t, this.part = e;
        var i = ShenJianData.ins().itemList[t].partList[e], n = ShenJianManager.ins().getCurPartLevelConfig(this.id, this.part, i.level);
        this.nameTxt.text = n.name, this.iconImg.source = "zhenbaosystem_shenjian_part" + this.id + this.part, 
        this.curLv.text = i.level + "", this.updateRedPoint();
    }, e.prototype.updateRedPoint = function() {
        this.redPoint.visible = ShenJianManager.ins().getPartRedPoint(this.id, this.part);
    }, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEvent(this, this.onClick);
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeEvents();
    }, e.prototype.onClick = function(t) {
        ViewManager.ins().open(ShenJianPartWin, this.id, this.part);
    }, e;
}(BaseView);

__reflect(ShenJianPartItem.prototype, "ShenJianPartItem");

window.ShenJianPartItem = ShenJianPartItem;

var ShenJianSkillItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "ShenJianSkillItemSkin", e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.init();
    }, e.prototype.init = function() {
        this.touchEnabled = !0, this.touchChildren = !1;
    }, e.prototype.setData = function(t, e) {
        this.id = t, this.skillLv = e;
        var i = GlobalConfig.ins().ShenJianSkillCfg[this.id][this.skillLv];
        this.nameTxt.text = i.name, this.curLv.text = i.level + "级", this.iconImg.source = "zhenbaosystem_shenjian_skillicon" + this.id;
    }, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEvent(this, this.onClick);
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeEvents();
    }, e.prototype.onClick = function(t) {
        ViewManager.ins().open(ShenJianSkillWin, this.id, this.skillLv);
    }, e;
}(BaseView);

__reflect(ShenJianSkillItem.prototype, "ShenJianSkillItem");

window.ShenJianSkillItem = ShenJianSkillItem;

var ShenJianView = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e._itemWidth = 89, e.skinName = "ShenJianSkin", e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.init();
    }, e.prototype.init = function() {
        this.touchEnabled = !1, this.touchChildren = !0, this.itemList.dataProvider = null, 
        this.itemList.itemRenderer = ShenJianItem, this.initList(), this.setSkinPart("partItem0", new ShenJianPartItem()), 
        this.setSkinPart("partItem1", new ShenJianPartItem()), this.setSkinPart("partItem2", new ShenJianPartItem()), 
        this.setSkinPart("partItem3", new ShenJianPartItem()), this.setSkinPart("skillItem", new ShenJianSkillItem()), 
        this.power = BitmapNumber.ins().createNumPic(0, BitmapNumber.numType0), this.powerContainer.addChild(this.power), 
        this.mcMain = new MovieClip(), this.mcMainCon.addChild(this.mcMain), this.mcPart1 = new MovieClip(), 
        this.mcPartCon.addChild(this.mcPart1), this.mcPart2 = new MovieClip(), this.mcPartCon.addChild(this.mcPart2), 
        this.mcPart3 = new MovieClip(), this.mcPartCon.addChild(this.mcPart3), this.mcPart4 = new MovieClip(), 
        this.mcPartCon.addChild(this.mcPart4), this.mc = new MovieClip(), this.mc.playFile(ResPath.getUIEffectPath(UiEffectType.Type42), -1), 
        this.mcCon.addChild(this.mc);
    }, e.prototype.initList = function() {
        var t = [];
        for (var e in GlobalConfig.ins().ShenJianOpenCfg) t.push(GlobalConfig.ins().ShenJianOpenCfg[e]);
        this.itemList.dataProvider = new eui.ArrayCollection(t);
    }, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.itemList.dataProvider.refresh(), this.itemList.addEventListener(eui.ItemTapEvent.ITEM_TAP, this.onItemSelect, this), 
        this.scroller.addEventListener(egret.Event.CHANGE, this.upRedpoint, this), this.addTouchEvent(this.taozhuangBtn, this.onTouchBtn), 
        this.addTouchEvent(this.leftBtn, this.onTouchBtn), this.addTouchEvent(this.rightBtn, this.onTouchBtn), 
        this.addTouchEvent(this.activityBtn, this.onTouchBtn), this.observe(ShenJian.ins().postLevelUp, this.updateItem), 
        this.observe(ShenJian.ins().postUpdateData, this.updateRedPoint), this.observe(Recharge.ins().postShenjianSellData, this.upShenjianSell), 
        this.partItem0.open(), this.partItem1.open(), this.partItem2.open(), this.partItem3.open(), 
        this.skillItem.open();
        var i = t[0] ? t[0] : 0;
        this.itemList.selectedIndex = i, this.selectItem(GlobalConfig.ins().ShenJianOpenCfg[i + 1].id), 
        this.upRedpoint(), this.upShenjianSell();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.itemList.removeEventListener(eui.ItemTapEvent.ITEM_TAP, this.onItemSelect, this), 
        this.scroller.removeEventListener(egret.Event.CHANGE, this.upRedpoint, this), this.removeObserve(), 
        this.removeEvents(), this.partItem0.close(), this.partItem1.close(), this.partItem2.close(), 
        this.partItem3.close(), this.skillItem.close();
    }, e.prototype.upRedpoint = function(t) {
        void 0 === t && (t = null);
        var e = this.itemList.contentWidth - this.itemList.width;
        this.rightBtn.visible = this.itemList.scrollH != e, this.leftBtn.visible = 0 != this.itemList.scrollH, 
        5 == this.itemList.dataProvider.length && (this.rightBtn.visible = !1, this.leftBtn.visible = !1), 
        this.rightBtn.visible = !1, this.leftBtn.visible = !1;
    }, e.prototype.updateItem = function() {
        this.selectItem(this.itemList.selectedItem.id);
    }, e.prototype.onItemSelect = function(t) {
        this.selectItem(this.itemList.selectedItem.id);
    }, e.prototype.selectItem = function(t) {
        this.selectId = t;
        var e = ShenJianManager.ins().getIsOpen(this.selectId), i = 0, n = ShenJianData.ins().itemList[this.selectId], s = GlobalConfig.ins().ShenJianLevelCfg[n.id][n.level];
        this.openCon.visible = e, this.conditionTxt.text = ShenJianManager.ins().getNoOpenTips(this.selectId), 
        this.conditionTxt.visible = !this.openCon.visible;
        var a;
        n.level > 0 ? (this.mcMain.filters = null, this.mcPartCon.visible = !1, this.mcMain.stopFrame = 0, 
        a = ShenJianManager.ins().getCurShenJianAttr(this.selectId)) : (this.mcMain.filters = [ ColorUtil.colorMat ], 
        this.mcMain.stopFrame = 1, this.mcPartCon.visible = !0, this.setPart(this.selectId), 
        a = ShenJianManager.ins().getShenJianTotalPartAttr(this.selectId)), i = UserBag.getAttrPower(a), 
        this.curLvAttr.text = AttributeData.getAttStr(a, 0, 1, "："), this.mcMain.playFile(ResPath.getUIShenJianPath(this.selectId), -1, null, !1, !0), 
        BitmapNumber.ins().changeNum(this.power, i, BitmapNumber.numType0), this.infoTxt.text = s.name + "-" + n.level + "阶", 
        this.partItem0.setData(this.selectId, 1), this.partItem1.setData(this.selectId, 2), 
        this.partItem2.setData(this.selectId, 3), this.partItem3.setData(this.selectId, 4), 
        this.skillItem.setData(this.selectId, s.skillLv);
        var o = GlobalConfig.ins().ShenJianSkillCfg[this.selectId][s.skillLv];
        this.skillDescTxt.text = o.skillDesc;
    }, e.prototype.setPart = function(t) {
        var e = ShenJianData.ins().itemList[t];
        e.partList[1].level >= 10 ? (this.mcPart1.stopFrame = 1, this.mcPart1.playFile(ResPath.getUIShenJianPartPath(t), -1, null, !1, !1), 
        this.mcPart1.visible = !0) : (this.mcPart1.stop(), this.mcPart1.visible = !1), e.partList[2].level >= 10 ? (this.mcPart2.stopFrame = 2, 
        this.mcPart2.playFile(ResPath.getUIShenJianPartPath(t), -1, null, !1, !1), this.mcPart2.visible = !0) : (this.mcPart2.stop(), 
        this.mcPart2.visible = !1), e.partList[3].level >= 10 ? (this.mcPart3.stopFrame = 3, 
        this.mcPart3.playFile(ResPath.getUIShenJianPartPath(t), -1, null, !1, !1), this.mcPart3.visible = !0) : (this.mcPart3.stop(), 
        this.mcPart3.visible = !1), e.partList[4].level >= 10 ? (this.mcPart4.stopFrame = 4, 
        this.mcPart4.playFile(ResPath.getUIShenJianPartPath(t), -1, null, !1, !1), this.mcPart4.visible = !0) : (this.mcPart4.stop(), 
        this.mcPart4.visible = !1);
    }, e.prototype.updateRedPoint = function() {
        this.partItem0.updateRedPoint(), this.partItem1.updateRedPoint(), this.partItem2.updateRedPoint(), 
        this.partItem3.updateRedPoint();
        for (var t = 0; t < this.itemList.numElements; t++) {
            var e = this.itemList.getElementAt(t);
            e && e.updateData();
        }
    }, e.prototype.onTouchBtn = function(t) {
        var e = 4 * this._itemWidth;
        switch (t.target) {
          case this.leftBtn:
            this.itemList.scrollH <= e ? this.itemList.scrollH = 0 : this.itemList.scrollH -= e;
            break;

          case this.rightBtn:
            var i = this.itemList.contentWidth - this.itemList.width;
            if (0 >= i) return;
            e > i ? this.itemList.scrollH = i : this.itemList.scrollH += e;
            break;

          case this.taozhuangBtn:
            ViewManager.ins().open(ShenJianTaoZhuangWin);
            break;

          case this.activityBtn:
            if (QiriQdActivityData0.ins().checkShowIcon()) ViewManager.ins().open(QiriQdActivityWin); else if (this.totalTime > 0) {
                var n = GlobalConfig.ins().RechargeShenjianSellConfig[1].pay;
                LocationProperty.pf == LocationProperty.zwwxxyx ? UserTips.ins().showTips("领取时间未到，不可领取|C:0x34ff25&T:400|元宝") : UserTips.ins().showTips("领取时间未到，不可领取|C:0x34ff25&T:" + n + "|元宝");
            } else QiriQdActivityData0.ins().checkShowIconFan() && Recharge.ins().sendShenjianSellYbGet();
        }
        this.upRedpoint(null);
    }, e.prototype.upShenjianSell = function() {
        var t = QiriQdActivityData0.ins();
        GlobalConfig.ins().RechargeShenjianSellConfig;
        t.checkShowIcon() ? (this.activityBtn.visible = !0, this.activityBtn.icon = "qiriqdactivitysell_btn1", 
        this.activityBtn.label = "") : (this.activityBtn.icon = "qiriqdactivitysell_btn2", 
        this.activityBtn.visible = t.checkShowIconFan(), this.activityBtn.labelDisplay.textColor = 3473189, 
        this.activityBtn.labelDisplay.bottom = -12, this.activityBtn.labelDisplay.width = 100, 
        t.time > 0 && (TimerManager.ins().isExists(this.upShenjianTime, this) && TimerManager.ins().remove(this.upShenjianTime, this), 
        TimerManager.ins().doTimer(1e3, 0, this.upShenjianTime, this), this.upShenjianTime()));
    }, e.prototype.upShenjianTime = function() {
        var t;
        QiriQdActivityData0.ins().checkShowIconFan() && (t = DateUtils.formatMiniDateTime(QiriQdActivityData0.ins().time));
        var e = t - GameServer.serverTime, i = e + egret.getTimer();
        this.totalTime = Math.floor((i - egret.getTimer()) / 1e3);
        var n;
        n = this.totalTime > 0 ? this.totalTime > DateUtils.SECOND_PER_DAY ? "" + DateUtils.getFormatBySecond(this.totalTime, DateUtils.TIME_FORMAT_11, 4) : "" + DateUtils.getFormatBySecond(this.totalTime, DateUtils.TIME_FORMAT_1) : "可领取", 
        this.activityBtn.label = n;
    }, e;
}(BaseView);

__reflect(ShenJianView.prototype, "ShenJianView");

window.ShenJianView = ShenJianView;

var ZhenBaoSystemActivityView = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "ZhenBaoSystemActivitySkin", e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.init();
    }, e.prototype.init = function() {
        this.touchEnabled = !1, this.touchChildren = !0, this.setSkinPart("costItem", new ItemBase());
    }, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEvent(this.activityBtn, this.onClick), this.addTouchEvent(this.getItemBtn, this.onGetItemClick);
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeEvents(), this.removeEff();
    }, e.prototype.onClick = function(t) {
        ZhenBaoSystem.ins().sendServerData11(this.tabId, this.itemId);
    }, e.prototype.onGetItemClick = function(t) {
        UserWarn.ins().setBuyGoodsWarn(this.config.item.id, 1);
    }, e.prototype.setData = function(t, e) {
        this.tabId = t, this.itemId = e, this.config = GlobalConfig.ins().ZhenBaoActivityCfg[this.tabId][this.itemId - 1], 
        this.costItem.data = this.config.item, this.costItem.setCountVisible(!1), this.pathImg.source = "zhenbaosystem_path" + this.config.zhenbaoID + this.config.slotID;
        var i = GlobalConfig.ins().ItemConfig(this.config.item.id);
        this.costNameTxt.text = i.name, this.setCount();
    }, e.prototype.setCount = function() {
        if (this.config) {
            var t = UserBag.ins().getBagGoodsCountById(0, this.config.item.id), e = t >= this.config.item.count ? LangManager.commonStr42 : LangManager.commonStr41;
            this.costNumTxt.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(e, t, this.config.item.count)), 
            t >= this.config.item.count ? this.addEff() : this.removeEff();
        }
    }, e.prototype.addEff = function() {
        this.eff || (this.eff = new MovieClip(), this.activityBtn.addChild(this.eff), this.eff.x = this.activityBtn.width >> 1, 
        this.eff.y = this.activityBtn.height >> 1, this.eff.scaleX = .8), this.eff.playFile(ResPath.getUIEffectPath(UiEffectType.Type19), -1), 
        this.activityBtn.icon = "common_tab_down0_png";
    }, e.prototype.removeEff = function() {
        this.eff && (this.eff.stop(), DisplayUtils.removeFromParent(this.eff), this.eff = null), 
        this.activityBtn.icon = "common_tab_up0_png";
    }, e;
}(BaseView);

__reflect(ZhenBaoSystemActivityView.prototype, "ZhenBaoSystemActivityView");

window.ZhenBaoSystemActivityView = ZhenBaoSystemActivityView;

var ZhenBaoSystemUpStarView = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "ZhenBaoSystemUpStarSkin", e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.init();
    }, e.prototype.init = function() {
        this.touchEnabled = !1, this.touchChildren = !0, this.starList = new StarListNew(10, 0, 3), 
        this.starCon.addChild(this.starList);
    }, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEvent(this.upBtn, this.onClick), this.addTouchEvent(this.getItemBtn, this.onClick);
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeEvents();
    }, e.prototype.onClick = function(t) {
        switch (t.target) {
          case this.upBtn:
            ZhenBaoSystem.ins().sendServerData15(this.tabId, this.itemId);
            break;

          case this.getItemBtn:
            UserWarn.ins().setBuyGoodsWarn(this.nextConfig.item.id, 1);
        }
    }, e.prototype.setData = function(t, e) {
        var i = ZhenBaoSystemManager.ins().getServerData(t, e), n = ZhenBaoSystemManager.ins().getCurStarConfig(t, e, i.level, i.star), s = ZhenBaoSystemManager.ins().getCurMaxStar(t, e, 0);
        if (this.tabId != t || this.itemId != e ? this.starList.init(s, i.star) : this.starList.maxNum != s ? this.starList.init(s, i.star) : this.starList.starNum = i.star, 
        this.tabId = t, this.itemId = e, this.nextConfig = ZhenBaoSystemManager.ins().getNextStarConfig(t, e, i.level, i.star), 
        this.currentState = this.nextConfig ? "common" : "max", this.nextConfig) {
            var a = GlobalConfig.ins().ItemConfig(this.nextConfig.item.id);
            this.costItemImg.source = ResPath.getItemIconPath(a.icon), this.nextLvAttr.text = AttributeData.getAttStr(this.nextConfig.attrs, 0, 1, "：");
        }
        this.curLvAttr.text = AttributeData.getAttStr(n.attrs, 0, 1, "："), this.setCount();
    }, e.prototype.setCount = function() {
        if (this.nextConfig) {
            var t = UserBag.ins().getBagGoodsCountById(0, this.nextConfig.item.id), e = t >= this.nextConfig.item.count ? LangManager.commonStr38 : LangManager.commonStr37;
            this.costTxt.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(e, t, this.nextConfig.item.count));
        }
    }, e;
}(BaseView);

__reflect(ZhenBaoSystemUpStarView.prototype, "ZhenBaoSystemUpStarView");

window.ZhenBaoSystemUpStarView = ZhenBaoSystemUpStarView;

var RYSZDecomPanel = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "RYSZDecomSkin", e.name = "分解", e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.init();
    }, e.prototype.init = function() {
        this.list.itemRenderer = ItemBase, this.list.dataProvider = new eui.ArrayCollection([]), 
        this.useTxt0.text = "", this.countTxt0.text = "", this.useTxt1.text = "", this.countTxt1.text = "";
    }, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEvent(this.decomposeBtn, this.onClick), this.observe(UserBag.ins().postItemChange, this.setBagData), 
        this.observe(UserBag.ins().postItemAdd, this.setBagData), this.observe(UserBag.ins().postItemDel, this.setBagData), 
        this.setBagData();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeEvents(), this.removeObserve();
    }, e.prototype.setBagData = function() {
        var t, e, i, n = [], s = GlobalConfig.ins().RYTZDetailConfig, a = (GlobalConfig.ins().RYTZCommonConfig.rsvLst, 
        {}), o = 0;
        for (i in s) {
            var r = s[i][0].cost.id, h = GlobalConfig.ins().RYTZCommonConfig.rsvLst[i - 1];
            if (a[h.id] || (a[h.id] = 0), t = UserBag.ins().getBagItemById(r)) {
                e = new ItemData(), e.itemConfig = t.itemConfig, e.configID = t.configID, o = RYSZData.ins().getNoAcitvityNum(t.configID), 
                e.count = t.count - o > 0 ? t.count - o : 0;
                var l = h.count;
                a[h.id] += e.count * l, e.count > 0 && n.push(e);
            }
        }
        var u = 0;
        for (i in a) {
            if (this["countTxt" + u]) {
                var p = GlobalConfig.ins().ItemConfig(i);
                p && (this["countTxt" + u].text = "可得" + p.name + "：", this["upImg" + u].source = ResPath.getItemIconPath(p.icon));
            }
            this["useTxt" + u] && (this["useTxt" + u].text = a[i] + ""), u++;
        }
        this.list.dataProvider = new eui.ArrayCollection(n);
    }, e.prototype.onClick = function(t) {
        switch (t.target) {
          case this.decomposeBtn:
            ZhuzaiEquip.ins().sendRYSZlResolve();
        }
    }, e;
}(BaseView);

__reflect(RYSZDecomPanel.prototype, "RYSZDecomPanel");

window.RYSZDecomPanel = RYSZDecomPanel;

var RYSZEquipItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "RYSZItemSkin", e.mc = new MovieClip(), e.mc.x = 45, e.mc.y = 45, 
        e.addChild(e.mc), e.mc.blendMode = egret.BlendMode.ADD, e.effect = new MovieClip(), 
        e.effect.x = e.effect.y = 45, e.effect.blendMode = egret.BlendMode.ADD, e.addChild(e.effect), 
        e.setChildIndex(e.redPoint, 5), e;
    }
    return __extends(e, t), e.prototype.open = function() {}, e.prototype.close = function() {}, 
    e.prototype.updateData = function(t, e) {
        var i = RYSZData.ins();
        if (this.imgIcon.source = "rysz_zb_icon" + e, this.nameTxt.text = i.nameStr[e], 
        i.equipData) {
            var n = i.equipData[e - 1].lv;
            if (this.lvTxt.text = n + "", this.redPoint.visible = i.getSelectRedPoint(e), n > 0) {
                var s = 5;
                this.mc.playFile(ResPath.getItemEffectPath(s, 1), -1), this.effect.playFile(ResPath.getItemEffectPath(s), -1), 
                this.coCon.filters = [];
            } else this.coCon.filters = [ ColorUtil.colorMat ];
        }
    }, e.prototype.setSelect = function(t) {
        this.select.visible = t;
    }, e;
}(BaseView);

__reflect(RYSZEquipItem.prototype, "RYSZEquipItem");

window.RYSZEquipItem = RYSZEquipItem;

var RYSZPanel = function(t) {
    function e() {
        var e = t.call(this) || this;
        e.index = 1, e.skinName = "RYSZPanelSkin", e.name = "升级", e.star = new StarList(5, 0, 3), 
        e.starCon.addChild(e.star), e.totalPower = BitmapNumber.ins().createNumPic(0, BitmapNumber.numType0, 10), 
        e.powerContainer.addChild(e.totalPower);
        var i = GlobalConfig.ins().RYTZDetailConfig;
        e.equip = [];
        for (var n in i) e.setSkinPart("equip" + n, new RYSZEquipItem()), e["equip" + n].updateData(i[n], n), 
        e.equip.push(e["equip" + n]);
        return e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEvent(this.executeBtn, this.onClick), this.addTouchEvent(this.wayBtn, this.onClick);
        for (var i = 0; i < this.equip.length; i++) this.addTouchEvent(this.equip[i], this.onClick);
        this.observe(ZhuzaiEquip.ins().postRYSZInfo, this.upDataInfo), this.observe(UserBag.ins().postItemChange, this.upDataInfo), 
        this.observe(UserBag.ins().postItemAdd, this.upDataInfo), this.observe(UserBag.ins().postItemDel, this.upDataInfo), 
        ZhuzaiEquip.ins().sendRYSZInfo();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeEvents(), this.removeObserve();
    }, e.prototype.upDataInfo = function() {
        var t = GlobalConfig.ins().RYTZDetailConfig;
        for (var e in t) this["equip" + e].updateData(t[e], e);
        this.setIndexData(this.index);
    }, e.prototype.setIndexData = function(t) {
        var e = RYSZData.ins();
        if (e.equipData) {
            var i = e.equipData[t - 1].lv, n = GlobalConfig.ins().RYTZDetailConfig[t];
            if (this.iconImg.source = "rysz_big_icon" + t, this.nameImg.source = "rysz_name" + t, 
            n) {
                this.equipLevel.text = e.equipData[t - 1].jie + "级";
                var s = n[i];
                if (s) {
                    this.needlvTxt.textFlow = TextFlowMaker.generateTextFlow(RYTZDetailConfig.getNextLvStrig(s)), 
                    this.id = s.cost.id;
                    var a = UserBag.ins().getBagGoodsCountById(UserBag.BAG_TYPE_OTHTER, this.id);
                    this.numTxt.textFlow = TextFlowMaker.generateTextFlow(this.getCountStr(a, s.cost.count)), 
                    this.nextAtt.textFlow = TextFlowMaker.generateTextFlow(AttributeData.getAttStr1(s.attrs, AttributeFormat.FORMAT_4())), 
                    this.countNameTxt.text = "消耗" + GlobalConfig.ins().ItemConfig(this.id).name + "：";
                }
                0 == i ? (this.currentState = "one", this.executeBtn.label = "激 活", this.iconImg.filters = [ ColorUtil.colorMat ]) : (this.iconImg.filters = [], 
                n[i - 1] && (this.curAtt.textFlow = TextFlowMaker.generateTextFlow(AttributeData.getAttStr1(n[i - 1].attrs, AttributeFormat.FORMAT_4()))), 
                s ? this.currentState = "not" : this.currentState = "max", this.executeBtn.label = i % 5 == 0 ? "升 级" : "升 星");
                for (var o = 0; 4 > o; o++) this["equip" + (o + 1)].setSelect(!1), this["equip" + t].setSelect(!0);
                this.redPoint.visible = e.getSelectRedPoint(t), this.setStarData(RYSZData.ins().equipData[t - 1]), 
                this.setPoewr(t);
            }
        }
    }, e.prototype.setStarData = function(t) {
        this.isIndex != this.index ? (this.isIndex = this.index, this.star.isPlayStar(!0)) : this.star.isPlayStar(!1), 
        this.star.starNum = t.star;
    }, e.prototype.setPoewr = function(t) {
        BitmapNumber.ins().changeNum(this.totalPower, RYSZData.ins().getSelectPower(t), BitmapNumber.numType0, 2);
    }, e.prototype.getCountStr = function(t, e) {
        var i = "";
        return t >= e ? (i = "|C:0x00ff00&T:" + t + "|/" + e + "|", this.isExpUp = !0) : (i = "|C:0xff0000&T:" + t + "|/" + e + "|", 
        this.isExpUp = !1), i;
    }, e.prototype.onClick = function(t) {
        var e = this.equip.indexOf(t.currentTarget);
        if (e >= 0) return this.index = e + 1, void this.setIndexData(this.index);
        switch (t.target) {
          case this.wayBtn:
            this.id && UserWarn.ins().setBuyGoodsWarn(this.id);
            break;

          case this.executeBtn:
            ZhuzaiEquip.ins().sendUpRYSZ(this.index);
        }
    }, e;
}(BaseView);

__reflect(RYSZPanel.prototype, "RYSZPanel");

window.RYSZPanel = RYSZPanel;

var ZlActivityItem5 = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "ZlActivityItemSkin5", e.setSkinPart("item", new ItemBase()), 
        e;
    }
    return __extends(e, t), e.prototype.open = function() {}, e.prototype.close = function() {}, 
    e.prototype.updateData = function(t) {
        this.item.data = t.awardList, this.isGetImg.visible = ZLActivityData5.ins().isGet(t.index), 
        this.item.setIconBg("common_grid2_png");
    }, e;
}(BaseView);

__reflect(ZlActivityItem5.prototype, "ZlActivityItem5");

window.ZlActivityItem5 = ZlActivityItem5;

var ZlActivityPamel11 = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "ZlActivityPamelSkin11", e.listData = new eui.ArrayCollection(), 
        e.list.itemRenderer = ZlActivityItem11, e.list.dataProvider = e.listData, e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {}, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEndEvent(this.btnInvest, this.onBtnClick), this.observe(ZLActivity.ins().postInvestSevenDayData, this.updateData), 
        this.observe(ZLActivity.ins().postActivityData, this.updateData), ZLActivity.ins().sendZlActivityData(ZLActivityIndex.Index11), 
        ZLActivity.ins().sendInvestSevenDataInfo(), this.upBaseDataInfo();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeTouchEvent(this.btnInvest, this.onBtnClick), this.removeObserve(), this.removeEff();
    }, e.prototype.onBtnClick = function(t) {
        if (t.target instanceof eui.Button) if (t.target.parent instanceof ZlActivityItem11) ; else if (t.target == this.btnInvest) if (ZLActivityData11.ins().isInvest) {
            for (var e = ZLActivityData11.ins(), i = void 0, n = void 0, s = 1; s <= e.openDay; s++) i = 1 == (e.flag >> s - 1 & 1), 
            i || (n = !0, ZLActivity.ins().sendGetInvestSevenDay(s));
            n || UserTips.ins().showTips("今日已领取");
        } else ZLActivity.ins().sendInvestSevenDay();
    }, e.prototype.removeEff = function() {
        this.eff && (this.eff.stop(), DisplayUtils.removeFromParent(this.eff), this.eff = null);
    }, e.prototype.updateData = function() {
        this.listData.refresh();
        var t = ZLActivityData11.ins();
        this.isGet7.visible = t.isGetAll(), t.isInvest && !t.getRedPoint() ? (this.removeEff(), 
        this.btnInvest.enabled = !1, this.btnInvest.filters = [ ColorUtil.colorMat ]) : (this.eff || (this.eff = new MovieClip(), 
        this.btnInvest.addChild(this.eff), this.eff.playFile(ResPath.getUIEffectPath(UiEffectType.Type18), -1), 
        this.eff.x = this.btnInvest.width >> 1, this.eff.y = this.btnInvest.height >> 1), 
        this.btnInvest.enabled = !0, this.btnInvest.filters = null), this.btnInvest.icon = t.isInvest ? "investment_title2" : "investment_title1";
        var e = DateUtils.formatMiniDateTime(t.data.eTime) - GameServer.serverTime;
        this.totalTime = e + egret.getTimer(), this.updateTime();
    }, e.prototype.upBaseDataInfo = function() {
        var t = ZLActivityData11.ins();
        this.seventhList.itemRenderer = ItemBase;
        var e = GlobalConfig.ins().ZhiLingInvestConfig[t.data.awardId];
        if (e) {
            for (var i = [], n = 0; n < e.length - 1; n++) i.push(e[n]);
            this.listData = new eui.ArrayCollection(i), this.list.dataProvider = this.listData, 
            this.list.itemRenderer = ZlActivityItem11;
            for (var n = 0; n < e[6].rewardList.length; n++) e[6].rewardList[n].isNoShowName = !0;
            this.seventhList.dataProvider = new eui.ArrayCollection(e[6].rewardList), this.investTxt.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(LangManager.investment_str0, e[1].pay)), 
            this.vipTxt.text = "(VIP" + e[1].grade + "可购买)";
        }
    }, e.prototype.updateTime = function() {
        var t = ZLActivityData11.ins(), e = CountdownHelp.isOpen(t.data.sTime, t.data.eTime);
        e ? this.timeTxt.text = CountdownHelp.countdown(t.data.sTime, t.data.eTime, this.totalTime) : this.timeTxt.text = "活动已结束";
    }, e;
}(BaseView);

__reflect(ZlActivityPamel11.prototype, "ZlActivityPamel11");

window.ZlActivityPamel11 = ZlActivityPamel11;

var ZlActivityPamel13 = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "ZlActivityPamelSkin13", e.listData = new eui.ArrayCollection(), 
        e.list.itemRenderer = ZlActivityItem13, e.list.dataProvider = e.listData, e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEvent(this.list, this.onTop), this.addTouchEvent(this.helpBtn, this.onTop), 
        this.observe(ZLActivity.ins().postActivityData, this.upData), this.observe(ZLActivity.ins().postRechargeData, this.upData), 
        ZLActivity.ins().sendZlActivityData(13), ZLActivity.ins().sendRechargeData();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeEvents(), this.removeObserve();
    }, e.prototype.upData = function() {
        var t = ZLActivityData13.ins();
        if (t) {
            this.charge.text = t.charge + "元宝";
            var e = GlobalConfig.ins().ZhiLingRechargeConfig[t.data.awardId];
            if (e) {
                var i = [];
                for (var n in e) i.push(e[n]);
                i.sort(this.sortData), this.listData.replaceAll(i), this.list.dataProvider = this.listData, 
                this.updateTime();
            }
        }
    }, e.prototype.sortData = function(t, e) {
        var i = ZLActivityData13.ins(), n = BitUtil.getBitValue(i.flag, t.id), s = BitUtil.getBitValue(i.flag, e.id);
        return n && s || !n && !s ? t.id > e.id ? 1 : t.id < e.id ? -1 : 0 : n ? 1 : -1;
    }, e.prototype.onTop = function(t) {
        switch (t.target) {
          case this.helpBtn:
            ViewManager.ins().open(ZlActivityRechargeHelpWin);
        }
        if (t.target instanceof eui.Button && t.target.parent instanceof ZlActivityItem13) {
            var e = ZLActivityData13.ins(), i = GlobalConfig.ins().ZhiLingRechargeConfig[e.data.awardId][t.target.parent.id];
            if (!i) return;
            e.day >= i.day ? ZLActivity.ins().sendGetRecharge(t.target.parent.id) : Recharge.ins().gameCharge(1);
        }
    }, e.prototype.updateTime = function() {
        var t = ZLActivityData13.ins().data, e = DateUtils.formatMiniDateTime(t.eTime) - GameServer.serverTime;
        this.totalTime = e + egret.getTimer(), this.timeTxt.text = CountdownHelp.countdown1(t.sTime, t.eTime, this.totalTime);
    }, e;
}(BaseView);

__reflect(ZlActivityPamel13.prototype, "ZlActivityPamel13");

window.ZlActivityPamel13 = ZlActivityPamel13;

var ZlActivityPamel14 = function(t) {
    function e() {
        var e = t.call(this) || this;
        e.skinName = "ZlActivityPamelSkin14";
        var i = GlobalConfig.ins().XFXBCommonConfig;
        e.state.text = LangManager.getLang(LangManager.zlactivity_str0, i.ybUnit);
        for (var n = 0; n < i.reward.length; n++) {
            var s = n + 1;
            e["item" + s] && (e.setSkinPart("item" + s, new ItemBase()), i.reward[n].isNoShowName = !0, 
            e["item" + s].data = i.reward[n]);
        }
        return e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEvent(this.logBtn, this.onTop), this.addTouchEvent(this.bagBtn, this.onTop), 
        this.addTouchEvent(this.buy1, this.onTop), this.addTouchEvent(this.buy10, this.onTop), 
        this.observe(UserBag.ins().postHuntStore, this.upBagRedPoint), this.observe(Hunt.ins().postXFXBData, this.upData), 
        this.observe(ZLActivity.ins().postActivityData, this.upData), Hunt.ins().sendXFXBInfo(), 
        ZLActivity.ins().sendZlActivityData(14), this.upBagRedPoint();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeEvents(), this.removeObserve();
    }, e.prototype.upData = function() {
        var t = ZLActivityData14.ins();
        this.num.text = t.residue + "", this.updateTime();
    }, e.prototype.upBagRedPoint = function() {
        var t = UserBag.ins().getHuntGoodsBySort();
        this.bagRedPointImg.visible = t.length > 0;
    }, e.prototype.onTop = function(t) {
        switch (t.target) {
          case this.logBtn:
            ViewManager.ins().open(ZlActivityHuntLogWin);
            break;

          case this.bagBtn:
            ViewManager.ins().open(HuntStoreWin, 0);
            break;

          case this.buy1:
            Hunt.ins().sendXFXBHunt(1);
            break;

          case this.buy10:
            Hunt.ins().sendXFXBHunt(10);
        }
    }, e.prototype.updateTime = function() {
        var t = ZLActivityData14.ins().data, e = DateUtils.formatMiniDateTime(t.eTime) - GameServer.serverTime;
        this.totalTime = e + egret.getTimer(), this.timeTxt.text = CountdownHelp.countdown1(t.sTime, t.eTime, this.totalTime);
    }, e;
}(BaseView);

__reflect(ZlActivityPamel14.prototype, "ZlActivityPamel14");

window.ZlActivityPamel14 = ZlActivityPamel14;

var ZlActivityPamel17 = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.baseData = ZLActivityData17.ins(), e.skinName = "ZlActivityPamelSkin17", 
        e.getItemTxt.textFlow = new egret.HtmlTextParser().parser('<a href="event:"><u>' + e.getItemTxt.text + "</u></a>"), 
        e.winNum.dataProvider = new eui.ArrayCollection(), e.winNum.itemRenderer = ZlActivityItem17Num, 
        e.winner.dataProvider = new eui.ArrayCollection(), e.winner.itemRenderer = ZlActivityItem17Winner, 
        e.menuList.itemRenderer = ItemBase, e.menuList.dataProvider = new eui.ArrayCollection(), 
        e;
    }
    return __extends(e, t), e.prototype.initUI = function() {}, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEvent(this.helpBtn, this.onClick), this.addTouchEvent(this.getItemTxt, this.onClick), 
        this.addTouchEvent(this.onceBtn, this.onClick), this.addTouchEvent(this.tenBtn, this.onClick), 
        this.addTouchEvent(this.item, this.onTop), this.observe(ZLActivity.ins().postLuckyNumInfo, this.upBaseData), 
        this.observe(ZLActivity.ins().postBuyTimeResult, this.redPoint), ZLActivity.ins().sendLuckyNumData();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeEvents(), this.removeObserve(), TimerManager.ins().removeAll(this);
    }, e.prototype.upBaseData = function() {
        this.onceBtn.enabled = !0, this.tenBtn.enabled = !0, this.baseData.data = ZLActivity.ins().activityData[ZLActivityIndex.Index17 - 1];
        var t = GlobalConfig.ins().ZhilingZhuanpanBaseConfig, e = GlobalConfig.ins().ZlNumGreatRewardConfig[this.baseData.data.awardId];
        if (e) {
            var i = this.baseData.index, n = GlobalConfig.ins().ZlNumGreatRewardConfig[this.baseData.data.awardId];
            if (n) {
                var s, a = n[i - 1], o = a.awardList[0].count, r = a.awardList[0].type, h = a.awardList[0].id;
                switch (r) {
                  case RewardType.Currency:
                    this.itemIcon.setImgIcon(RewardData.getCurrencyRes(h)), this.itemIcon.setImgQuality("common_quality4"), 
                    s = "<font color=" + HuntListRenderer.QUALITY_COLOR[4] + "'>" + RewardData.getCurrencyName(h) + "</font>×<font color = '#34FF25'>" + o + "</font>";
                    break;

                  case RewardType.Item:
                  case RewardType.PetPiece:
                    var l = GlobalConfig.ins().ItemConfig(a.awardList[0].id);
                    this.itemIcon.setData(l), s = 0 == l.type ? "<font color='" + HuntListRenderer.QUALITY_COLOR[l.quality] + "'>" + this.makeNameList(l) + "</font>×<font color = '#34FF25'>" + o + "</font>" : "<font color='" + HuntListRenderer.QUALITY_COLOR[l.quality] + "'>" + l.name + "</font>×<font color = '#34FF25'>" + o + "</font>";
                }
                this.grandProp.textFlow = TextFlowMaker.generateTextFlow(s), this.onceCost.text = t.num1 + "", 
                this.tenCost.text = t.num2 + "", this.dataChanged(), this.upWinData(), this.updateTime(), 
                this.redPoint(), this.upTotalTime();
            }
        }
    }, e.prototype.upWinData = function() {
        var t = this.baseData.getRewardInfo, e = [], i = [];
        for (var n in t) e.push(t[n]), i.push(t[n]);
        this.winNum.dataProvider = new eui.ArrayCollection(e), this.winner.dataProvider = new eui.ArrayCollection(i);
    }, e.prototype.dataChanged = function() {
        var t = GlobalConfig.ins().ZlNumCountRewardConfig[this.baseData.data.awardId], e = GlobalConfig.ins().ZlNumGreatRewardConfig[this.baseData.data.awardId][this.baseData.index - 1];
        if (e) {
            var i = [];
            i.push(e.award), e.award.isNoShowName = !0;
            for (var n = 0; n < t.length - 1; n++) i.push(t[n].awardList), t[n].awardList.isNoShowName = !0;
            this.menuList.dataProvider = new eui.ArrayCollection(i);
        }
    }, e.prototype.onTop = function(t) {
        var e = ZLActivityData17.ins();
        e.data = ZLActivity.ins().activityData[ZLActivityIndex.Index17 - 1];
        var i = GlobalConfig.ins().ZlNumGreatRewardConfig[e.data.awardId];
        if (i) {
            var n = i[e.index - 1], s = GlobalConfig.ins().ItemConfig(n.awardList[0].id);
            void 0 != s && s && void 0 != s.type && ViewManager.ins().open(ItemDetailedWin, 0, n.awardList[0].id, n.awardList[0].count);
        }
    }, e.prototype.onClick = function(t) {
        switch (t.target) {
          case this.helpBtn:
            ViewManager.ins().open(ZlActivityPamel17Help);
            break;

          case this.getItemTxt:
            ViewManager.ins().open(ZlActivityPamel17NumWin);
            break;

          case this.onceBtn:
            this.cost(1);
            break;

          case this.tenBtn:
            this.cost(2);
        }
    }, e.prototype.cost = function(t) {
        ZLActivity.ins().sendBuyTime(t);
    }, e.prototype.costChange = function() {
        this.redPoint();
    }, e.prototype.updateTime = function() {
        this.baseData.data = ZLActivity.ins().activityData[ZLActivityIndex.Index17 - 1];
        var t = GameServer.serverTime, e = DateUtils.formatMiniDateTime(this.baseData.data.eTime), i = e - t;
        this.totalTime = i + egret.getTimer(), this.timeTxt.text = CountdownHelp.countdown1(this.baseData.data.sTime, this.baseData.data.eTime, this.totalTime), 
        this.upTotalTime();
        var n = this.baseData.totalTime - egret.getTimer();
        0 >= n && ZLActivity.ins().sendReset();
    }, e.prototype.upTotalTime = function() {
        var t = this.baseData.totalTime;
        this.countdown.text = CountdownHelp.countdown7(t);
    }, e.prototype.redPoint = function() {
        this.baseData.rate > 0 ? this.luckyNumRedPoint.visible = !0 : this.luckyNumRedPoint.visible = !1;
    }, e.prototype.makeNameList = function(t) {
        var e = "";
        return e = t.name, e += t.zsLevel > 0 ? "(" + t.zsLevel + "转" : "(" + t.level + "级", 
        e += ")";
    }, e;
}(BaseView);

__reflect(ZlActivityPamel17.prototype, "ZlActivityPamel17");

window.ZlActivityPamel17 = ZlActivityPamel17;

var ZlActivityPamel18 = function(t) {
    function e() {
        var e = t.call(this) || this;
        e._tar = -1, e.boxId = 0, e.skinName = "ChargeRebateSkin", e.listData = new eui.ArrayCollection(), 
        e.list.itemRenderer = ZLActivityServerLogItem18;
        var i = GlobalConfig.ins().LuckyRebateBaseConfig;
        LocationProperty.isTaiWan ? e.chargeTxt.text = "每充值" + i.yb / 10 * 5 + "圆可免费抽奖1次" : e.chargeTxt.text = "每充值" + i.yb / 10 + "元可免费抽奖1次";
        var n = ZLActivityData18.ins();
        if (!n) return e;
        n.data = ZLActivity.ins().activityData[ZLActivityIndex.Index18 - 1];
        var s = GlobalConfig.ins().LuckyZLARebateRewardConfig[n.data.awardId];
        if (!s) return e;
        for (var a = 0; a < s.length; a++) s[a] && e.setSkinPart("prize" + s[a].sort, new ZLActivityItem18());
        return e.mc || (e.mc = new MovieClip(), e.mc.x = e.awardBtn.x + e.awardBtn.width / 2, 
        e.mc.y = e.awardBtn.y + e.awardBtn.height / 2 + 448), e.expBar.value = 0, e.expBar.slideDuration = 0, 
        e.expBar.labelDisplay.visible = !1, e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEndEvent(this.awardBtn, this.onTop), this.addTouchEndEvent(this.recordBtn, this.onTop), 
        this.addTouchEndEvent(this.onceBtn, this.onTop), this.addTouchEndEvent(this.tenBtn, this.onTop), 
        this.observe(ZLActivity.ins().postChargeRebateData, this.upData), this.observe(ZLActivity.ins().postSeverLogData, this.upServerLog), 
        this.updateTime(), this.upAwardData(), ZLActivity.ins().sendServerLodData(), ZLActivity.ins().sendChargeRebateInfo(), 
        ZLActivityData18.firstTap || (ZLActivityData18.firstTap = !0);
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeEvents(), this.removeObserve();
    }, e.prototype.upAwardData = function() {
        var t = ZLActivityData18.ins();
        t.data = ZLActivity.ins().activityData[ZLActivityIndex.Index18 - 1];
        var e = GlobalConfig.ins().LuckyZLARebateRewardConfig[t.data.awardId];
        if (e) for (var i = 0; i < e.length; i++) e[i] && (this["prize" + e[i].sort].data = e[i]);
    }, e.prototype.upData = function() {
        var t = ZLActivityData18.ins();
        t && (this.gradeTxt.text = t.num + "", this.upBox());
    }, e.prototype.upServerLog = function() {
        var t = ZLActivityData18.ins();
        t && (this.listData.replaceAll(t.serverLogList), this.list.dataProvider = this.listData);
    }, e.prototype.upBox = function() {
        var t = ZLActivityData18.ins();
        if (t) {
            t.data = ZLActivity.ins().activityData[ZLActivityIndex.Index18 - 1];
            var e = GlobalConfig.ins().LuckyZLARebateDBRewardConfig[t.data.awardId];
            if (e) {
                var i = t.flag >= e.length ? e[e.length - 1].id : e[t.flag].id;
                e[i - 1] && (this.expBar.maximum = e[i - 1].tar, this._tar != t.tar && (this.expBar.value = t.tar, 
                this.expBarTxt.text = t.tar + " / " + e[i - 1].tar, this._tar = t.tar), this.boxId = e[i - 1].id, 
                this.canGetBox = t.canGetTarAward(), this.canGetBox ? (this.addChild(this.mc), this.mc.playFile(ResPath.getUIEffectPath(UiEffectType.Type27), -1)) : this.mc.parent && DisplayUtils.removeFromParent(this.mc));
            }
        }
    }, e.prototype.onTop = function(t) {
        switch (t.target) {
          case this.awardBtn:
            this.canGetBox ? ZLActivity.ins().sendGetBoxAward(this.boxId) : ViewManager.ins().open(ZLActivityPamel18AwardWin);
            break;

          case this.recordBtn:
            ViewManager.ins().open(ZLActivityPamel18LogWin);
            break;

          case this.onceBtn:
            ZLActivity.ins().sendChargeDraw(1);
            break;

          case this.tenBtn:
            ZLActivity.ins().sendChargeDraw(2);
        }
    }, e.prototype.updateTime = function() {
        var t = ZLActivityData18.ins();
        if (t) {
            t.data = ZLActivity.ins().activityData[ZLActivityIndex.Index18 - 1];
            var e = GameServer.serverTime, i = DateUtils.formatMiniDateTime(t.data.eTime), n = i - e;
            this.totalTime = n + egret.getTimer(), this.timeTxt.text = CountdownHelp.countdown1(t.data.sTime, t.data.eTime, this.totalTime);
        }
    }, e;
}(BaseView);

__reflect(ZlActivityPamel18.prototype, "ZlActivityPamel18");

window.ZlActivityPamel18 = ZlActivityPamel18;

var ZlActivityPamel6 = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.data = ZLActivityData6.ins(), e.skinName = "ZlActivityPamelSkin6", e.listData = new eui.ArrayCollection(), 
        e.list.itemRenderer = ZlActivityItem6, e.list.dataProvider = e.listData, e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.observe(ZLActivity.ins().postTreasureData, this.upBasedata), this.addTouchEvent(this.list, this.onTop), 
        ZLActivity.ins().sendTreasureData();
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeEvents(), this.removeObserve();
    }, e.prototype.upBasedata = function() {
        this.data.data = ZLActivity.ins().activityData[ZLActivityIndex.Index6 - 1];
        var t = GlobalConfig.ins().ZlTreasureAwardConfig[this.data.data.awardId];
        if (t) {
            var e = [];
            for (var i in t) e.push(t[i]);
            e.sort(this.sortData), this.listData.replaceAll(e), this.list.dataProvider = this.listData, 
            this.updateTime();
        }
    }, e.prototype.sortData = function(t, e) {
        var i = ZLActivityData6.ins().listArr, n = i[t.id].personNum >= t.personNum, s = i[e.id].personNum >= e.personNum;
        return n && s || !n && !s ? t.id > e.id ? 1 : t.id < e.id ? -1 : 0 : n ? 1 : -1;
    }, e.prototype.onTop = function(t) {
        t.target instanceof eui.Button && t.target.parent instanceof ZlActivityItem6 && ZLActivity.ins().sendGetTreasure(t.target.parent.id);
    }, e.prototype.updateTime = function() {
        var t = GameServer.serverTime;
        this.data.data = ZLActivity.ins().activityData[ZLActivityIndex.Index6 - 1];
        var e = DateUtils.formatMiniDateTime(this.data.data.eTime), i = e - t;
        this.totalTime = i + egret.getTimer(), this.timeTxt.text = CountdownHelp.countdown1(this.data.data.sTime, this.data.data.eTime, this.totalTime);
    }, e;
}(BaseView);

__reflect(ZlActivityPamel6.prototype, "ZlActivityPamel6");

window.ZlActivityPamel6 = ZlActivityPamel6;

var ZsWin = function(t) {
    function e() {
        return t.call(this) || this;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.init();
    }, e.prototype.init = function() {
        this.skinName = "NewZsPanelSkin", this.powerContainer.parent && (this.power = BitmapNumber.ins().createNumPic(0, BitmapNumber.numType0), 
        this.power.x = this.powerContainer.x, this.power.y = this.powerContainer.y, this.addChild(this.power), 
        this.powerContainer.parent.removeChild(this.powerContainer)), this.lvContainer.parent && (this.lvNum = BitmapNumber.ins().createNumPic(0, BitmapNumber.numType0), 
        this.lvNum.x = this.lvContainer.x, this.lvNum.y = this.lvContainer.y, this.addChild(this.lvNum), 
        this.lvContainer.parent.removeChild(this.lvContainer)), this.chargeEff = new MovieClip(), 
        this.chargeEff.scaleX = .7, this.chargeEff.x = this.getItemBtn.x - 4, this.chargeEff.y = this.getItemBtn.y - 8;
    }, e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addTouchEvent(this.upGradeBtn, this.onClick), this.addTouchEvent(this.getItemBtn, this.onClick), 
        this.observe(UserZs.ins().postZsData, this.updataInfo), this.observe(UserZs.ins().postQualityData, this.updataInfo), 
        this.observe(GameLogic.ins().postLevelChange, this.updataInfo), this.updataInfo();
    }, e.prototype.updateRedPoint = function() {
        UserZs.ins().isCanGet() ? (this.chargeEff.playFile(ResPath.getUIEffectPath(UiEffectType.Type12), -1), 
        this.upgradeContainer.addChild(this.chargeEff)) : this.chargeEff.parent && (this.chargeEff.stop(), 
        this.upgradeContainer.removeChild(this.chargeEff));
    }, e.prototype.onClick = function(t) {
        switch (t.currentTarget) {
          case this.upGradeBtn:
            UserZs.ins().canUpgrade() ? UserZs.ins().sendZsUpgrade() : UserTips.ins().showTips(LangManager.zs_str2);
            break;

          case this.getItemBtn:
            ViewManager.ins().open(GainZsWin);
        }
    }, e.prototype.updataInfo = function() {
        this.updateAttr(), this.updateCost(), this.updateRedPoint();
    }, e.prototype.updateAttr = function() {
        var t = UserZs.ins().lv;
        BitmapNumber.ins().changeNum(this.lvNum, t, BitmapNumber.numType0), this.lvNum.x = this.lvContainer.x + (this.lvContainer.width - this.lvNum.width) / 2 >> 0;
        var e = ZsData.ins().getAttr(t), i = UserBag.getAttrPower(e);
        BitmapNumber.ins().changeNum(this.power, i, BitmapNumber.numType0), this.curAtt.textFlow = TextFlowMaker.generateTextFlow(AttributeData.getAttStr1(e, AttributeFormat.FORMAT_4(16775896, 16775896, 6))), 
        UserZs.ins().isMaxLv() ? this.nextAtt.textFlow = null : (e = ZsData.ins().getAttr(t + 1), 
        this.nextAtt.textFlow = TextFlowMaker.generateTextFlow(AttributeData.getAttStr1(e, AttributeFormat.FORMAT_4(9107241, 9107241, 6))));
    }, e.prototype.updateCost = function() {
        if (UserZs.ins().isMaxLv()) this.tip1.visible = !0, this.tip2.visible = !1, this.upgradeContainer.visible = !1; else {
            this.redPoint.visible = UserZs.ins().canUpgrade(), this.tip1.visible = !1, this.tip2.visible = !0, 
            this.upgradeContainer.visible = !0;
            var t = UserZs.ins().lv + 1, e = GlobalConfig.ins().ZhuanShengLevelConfig[t];
            this.costNum.text = e.exp.toString(), this.curNum.textColor = UserZs.ins().exp >= e.exp ? 65280 : 16711680, 
            this.curNum.text = UserZs.ins().exp.toString();
        }
    }, e.prototype.close = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.removeEvents(), this.removeObserve();
    }, e;
}(BaseView);

__reflect(ZsWin.prototype, "ZsWin");

window.ZsWin = ZsWin;

var ItemBase = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.errorId = -1, e.skinName = "ItemSkin", e.init(), e;
    }
    return __extends(e, t), e.prototype.init = function() {
        this.addEventListener(egret.TouchEvent.TOUCH_END, this.onClick, this);
    }, e.prototype.setItemImg = function(t) {
        this.itemIcon.setImgIcon(t);
    }, e.prototype.setIconBg = function(t) {
        this.itemIcon.setImgQuality(t);
    }, e.prototype.getNameTxt = function() {
        return this.nameTxt;
    }, e.prototype.grayItemImg = function(t) {
        t ? this.itemIcon.imgIcon.filters = [ ColorUtil.colorMat ] : this.itemIcon.imgIcon.filters = null;
    }, e.prototype.setCountVisible = function(t) {
        this.count.visible = t;
    }, e.prototype.setDataByConfig = function(t) {
        if (this.itemIcon && "function" == typeof this.itemIcon.setData && this.itemIcon.setData(t), 
        0 == t.type) {
            var i = t.zsLevel > 0 ? t.zsLevel + "转" : t.level + "级";
            t.subType == EquipPos.DZI && (i = t.name), this.setNameText(i);
        } else this.setNameText(t.name);
        0 != t.type && (this.nameTxt.textColor = e.QUALITY_COLOR[t.quality]), void 0 != this.num && this.setCount(this.num + "");
    }, e.prototype.dataChanged = function() {
        if (this.clear(), this.data) {
            if (isNaN(this.data)) if (this.data instanceof ItemData) {
                if (this.itemConfig = this.data.itemConfig, !this.itemConfig) return void (this.errorId = this.data._configID);
                this.setDataByConfig(this.itemConfig), this.data.count > 1 ? this.setCount(this.data.count + "") : this.setCount("");
            } else {
                if (this.data.type == RewardType.Currency) {
                    this.itemIcon.setImgIcon(RewardData.getCurrencyRes(this.data.id)), this.setNameText(RewardData.getCurrencyName(this.data.id));
                    var t = this.data.count;
                    void 0 != t && t > 1 ? this.setCount(t + "") : this.setCount(""), this.itemIcon.setImgQuality("common_quality4");
                } else if (this.data.type == RewardType.Item || this.data.type == RewardType.PetPiece) {
                    if (this.itemConfig = GlobalConfig.ins().ItemConfig(this.data.id), !this.itemConfig) return void (this.errorId = this.data.id);
                    this.setDataByConfig(this.itemConfig);
                    var t = this.data.count;
                    t > 1 ? this.setCount(t + "") : this.setCount("");
                } else if (this.data.type == RewardType.FuWen) {
                    var e = this.data.id;
                    if (0 == e) this.setItemImg("fuwen_json.fuwen_11"), this.setNameText("解锁符文孔"); else if (e > 0) {
                        var i = Rune.ins().getRuneBaseConfigById(e);
                        this.setItemImg(i.getIcon()), this.nameTxt.textFlow = new egret.HtmlTextParser().parser(StringUtils.addColor(i.runeName + "lv." + i.level, RuneItem.QUALITY_COLOR[i.quality])), 
                        this.nameBg.visible = !0;
                    }
                }
                if (this.isShowName(!this.data.isNoShowName), this.data.isNoShowCount) {
                    var t = this.data.count;
                    t > 0 ? this.setCount(t + "") : this.setCount("");
                }
            } else {
                if (this.itemConfig = GlobalConfig.ins().ItemConfig(this.data), !this.itemConfig) return void (this.errorId = this.data);
                this.setDataByConfig(this.itemConfig);
            }
            this.redPoint.visible = this.data.canbeUsed;
        }
    }, e.prototype.clear = function() {
        this.itemConfig = null, this.itemIcon && "function" == typeof this.itemIcon.setData && this.itemIcon.setData(null), 
        this.count.text = "", this.nameTxt.text = "", this.nameTxt.textColor = 14668213, 
        this.nameBg.visible = !1;
    }, e.prototype.destruct = function() {
        this.removeEventListener(egret.TouchEvent.TOUCH_END, this.onClick, this);
    }, e.prototype.onClick = function() {
        this.showDetail();
    }, e.prototype.showDetail = function() {
        void 0 != this.itemConfig && this.itemConfig && void 0 != this.itemConfig.type && (AdvanceCommonData.ins().isAdvanceEquipByType(this.itemConfig.type) ? ViewManager.ins().open(AdvanceEquipDetailedWin, this.itemConfig, this.data) : 0 == this.itemConfig.type ? this.openEquipsTips() : ViewManager.ins().open(ItemDetailedWin, 0, this.itemConfig.id, this.data.count));
    }, e.prototype.setCount = function(t) {
        if (t.length > 4) {
            var e = parseInt(t);
            t = e.toString();
        }
        if (t.length > 4) {
            var i = Math.floor(Number(t) / 1e3);
            t = i / 10 + "万";
        }
        this.count.text = t;
    }, e.prototype.openEquipsTips = function() {
        ViewManager.ins().open(EquipDetailedWin, 1, this.data.handle, this.itemConfig.id, this.data);
    }, e.prototype.isShowName = function(t) {
        this.nameTxt.visible = t, this.nameBg.visible = t;
    }, e.prototype.hideName = function(t) {
        this.nameTxt.visible = t;
    }, e.prototype.getItemSoure = function() {
        var t = "";
        if (0 == this.data.type) switch (this.data.id) {
          case MoneyConst.exp:
            t = "";
            break;

          case MoneyConst.gold:
            t = RewardData.getCurrencyRes(RewardDataCurrency.Glod);
            break;

          case MoneyConst.yuanbao:
            t = RewardData.getCurrencyRes(RewardDataCurrency.Yb);
        } else t = "" + this.data.id;
        return t;
    }, e.prototype.getText = function() {
        return this.nameTxt.text;
    }, e.prototype.getTextColor = function() {
        return this.nameTxt.textColor;
    }, e.prototype.setNameText = function(t, e) {
        this.nameTxt.text = t, this.nameTxt.textColor = e ? e : 14668213, this.nameBg.visible = t ? !0 : !1;
    }, e.prototype.showEquipEffect = function() {}, e.prototype.removeEff = function() {
        this.EquipEffect && (this.EquipEffect.stop(), DisplayUtils.removeFromParent(this.EquipEffect));
    }, e.QUALITY_COLOR = [ 16775896, 9171070, 8374254, 15230445, 16754241, 13893632 ], 
    e;
}(BaseItemRender);

__reflect(ItemBase.prototype, "ItemBase");

window.ItemBase = ItemBase;

var RuneItem = function(t) {
    function e() {
        var i = t.call(this) || this;
        return i.isSelect = !1, i.isLock = !1, i.isNew = !1, i.showState = e.STATE_LOCK, 
        i.skinName = "RuneItemSkin", i.init(), i;
    }
    return __extends(e, t), e.prototype.init = function() {
        this.touchChildren = !0, this.touchEnabled = !1, this.mc = new MovieClip(), this.mc.x = 45, 
        this.mc.y = 48;
        for (var t = 0, e = this.numChildren; e > t; t++) this.getChildAt(t).touchEnabled = !1;
        this.img.touchEnabled = !0;
    }, e.prototype.getShowState = function() {
        return this.showState;
    }, e.prototype.dataChanged = function() {
        if ("number" == typeof this.data) this.data == e.STATE_LOCK ? (this.img.source = "fuwen_json.fuwen_11", 
        this.showState = e.STATE_LOCK) : this.data == e.STATE_IDLE && (this.showState = e.STATE_IDLE, 
        this.img.source = "fuwen_json.fuwen_10"), this.setShowName(!1), this.setShowAttr(!1); else if (this.data && this.data.id) {
            var t = this.data;
            this.img.source = t.getIcon(), 99 == t.type ? (this.nameTxt.textFlow = new egret.HtmlTextParser().parser(StringUtils.addColor(t.runeName, e.QUALITY_COLOR[t.quality])), 
            this.setCountTxt(t.count + "")) : (this.nameTxt.textFlow = new egret.HtmlTextParser().parser(StringUtils.addColor(t.runeName + "lv." + t.level, e.QUALITY_COLOR[t.quality])), 
            this.countTxt.visible = !1), this.attTxt.textFlow = TextFlowMaker.generateTextFlow(AttributeData.getAttStr1(t.attr1, AttributeFormat.FORMAT_2())), 
            this.setShowName(!0), this.setShowAttr(!0), this.showState = e.STATE_EQUIP;
        }
    }, e.prototype.setShowName = function(t) {
        this.nameTxt.visible = t;
    }, e.prototype.setShowRedPoint = function(t) {
        this.redPoint.visible = t;
    }, e.prototype.setShowAttr = function(t) {
        this.attTxt.visible = t;
    }, e.prototype.setIsSelect = function(t) {
        t != this.isSelect && (this.selectImg.visible = this.isSelect = t);
    }, e.prototype.getIsSelect = function() {
        return this.isSelect;
    }, e.prototype.setIsLock = function(t) {
        this.imgLock.visible = this.isLock = t;
    }, e.prototype.getIsLock = function() {
        return this.isLock;
    }, e.prototype.setIsNew = function(t) {
        this.imgNew.visible = this.isNew = t;
    }, e.prototype.getIsNew = function() {
        return this.isNew;
    }, e.prototype.setCountTxt = function(t) {
        this.countTxt.text = t, this.countTxt.visible = !0;
    }, e.prototype.playEff = function() {
        this.parent && (this.mc.playFile(ResPath.getUIEffectPath(UiEffectType.Type7)), this.addChild(this.mc));
    }, e.QUALITY_COLOR = [ 16249072, 65286, 3582689, 16056574, 16742916, 16712708 ], 
    e.STATE_LOCK = 0, e.STATE_IDLE = 1, e.STATE_EQUIP = 2, e;
}(BaseItemRender);

__reflect(RuneItem.prototype, "RuneItem");

window.RuneItem = RuneItem;

var FuliActBtnRenderer = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "ActBtnSkin", e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        switch (this.iconDisplay.source = this.data.icon, this.data.type) {
          case 2:
            this.redPoint.visible = UserFuLi.ins().isHaveReward();
            break;

          case 3:
            this.redPoint.visible = !1;
            break;

          case 5:
            this.redPoint.visible = 1 == Activity.ins().nextDayState;
        }
        if (UserFuLi.ins().isOpen[this.data.type]) DisplayUtils.removeFromParent(this.mc); else {
            if (1 == this.data.type || 3 == this.data.type) return;
            this.mc || (this.mc = new MovieClip(), this.mc.x = 35, this.mc.y = 35), this.mc.playFile(ResPath.RES_DIR_EFF + "actIconCircle", -1), 
            this.addChild(this.mc);
        }
    }, e;
}(BaseItemRender);

__reflect(FuliActBtnRenderer.prototype, "FuliActBtnRenderer");

window.FuliActBtnRenderer = FuliActBtnRenderer;

var AttributeItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "AttributeItemSkin", e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = this.data;
        this.txt0.textFlow = TextFlowMaker.generateTextFlow(t.curTxt), -1 != t.curTxtWidth && (this.txt0.width = t.curTxtWidth), 
        this.currentState = t.isShowNext ? "com" : "nonext", t.isShowNext && (this.txt1.textFlow = TextFlowMaker.generateTextFlow(t.nextTxt));
    }, e;
}(BaseItemRender);

__reflect(AttributeItem.prototype, "AttributeItem");

window.AttributeItem = AttributeItem;

var EncounterInfoItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "ZaoYuInfoItemSkin", e;
    }
    return __extends(e, t), e.prototype.createChildren = function() {
        t.prototype.createChildren.call(this), this.nameTxt.text = "", this.awardList.itemRenderer = ItemBase, 
        this.awardArrayCollection = new eui.ArrayCollection(), this.awardList.dataProvider = this.awardArrayCollection, 
        this.challengeBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onTap, this);
    }, e.prototype.onTap = function(t) {
        if ("4" == this.currentState) ViewManager.ins().open(FindEnemyWin); else {
            if (!GameMap.canEnterFb()) return;
            if (UserBag.ins().getSurplusCount() < UserBag.BAG_ENOUGH) return void ViewManager.ins().open(BagFullTipsWin);
            t.target.parent.type == EncounterData.ENCOUNTER ? (EntityManager.ins().createEncounter(t.target.parent.encountIndex), 
            ViewManager.ins().close(EncounterBgWin)) : EntityManager.ins().willBoss && (EntityManager.ins().willBoss.dispatchEventWith(egret.TouchEvent.TOUCH_BEGIN), 
            ViewManager.ins().close(EncounterBgWin));
            var e = ViewManager.ins().getView(UIView2);
            e.onBackNormalFight();
        }
    }, e.prototype.close = function() {
        TimerManager.ins().removeAll(this);
    }, e.prototype.updateTime = function() {
        if (this.type == EncounterData.NOBOSS) {
            var t = Math.floor((DateUtils.formatMiniDateTime(Encounter.ins().refreshTime) - GameServer.serverTime) / 1e3);
            this.time.text = DateUtils.getFormatBySecond(t, DateUtils.TIME_FORMAT_9) + "刷新Boss";
        } else if (this.type == EncounterData.NOENCOUNTER) {
            var t = Math.floor(EncounterModel.lastTime - egret.getTimer()) / 1e3;
            this.time.text = DateUtils.getFormatBySecond(t, DateUtils.TIME_FORMAT_9) + "刷新一名玩家";
        }
    }, e.prototype.dataChanged = function() {
        var t = this, e = this.data;
        this.currentState = "" + e.type, this.type = e.type, egret.callLater(function() {
            if ("4" != t.currentState) {
                t.nameTxt.text = e.name, t.face.source = e.face, t.encountIndex = e.index, t.imgLevel.source = "zaoyu_award" + e.rewardlevel;
                var i = [], n = new RewardData();
                n.type = 0, n.id = RewardDataCurrency.Glod, n.count = e.gold, i.push(n), n = new RewardData(), 
                n.type = 0, n.id = RewardDataCurrency.Exp, n.count = e.exp, i.push(n), n = new RewardData(), 
                n.type = 1, n.id = e.goodId, n.count = e.goodCount, i.push(n), t.awardArrayCollection.replaceAll(i);
            }
        }, this), TimerManager.ins().removeAll(this), (e.type == EncounterData.NOENCOUNTER || e.type == EncounterData.NOBOSS) && (TimerManager.ins().doTimer(1e3, 0, this.updateTime, this), 
        this.updateTime());
    }, e;
}(BaseItemRender);

__reflect(EncounterInfoItem.prototype, "EncounterInfoItem");

window.EncounterInfoItem = EncounterInfoItem;

var FbItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "DailyFbItemSkin", e;
    }
    return __extends(e, t), e.prototype.createChildren = function() {
        t.prototype.createChildren.call(this), this.setSkinPart("price", new PriceIcon()), 
        this.setSkinPart("item", new ItemBase()), this.item.isShowName(!1), this.starValue = 0, 
        this.bar.value = this.starValue;
    }, e.prototype.starSaoDang = function() {
        TimerManager.ins().doTimer(50, 20, this.refushBar, this, this.overPlay, this), this.bar.visible = !0, 
        this.price.visible = !1, this.bar.labelFunction = function() {
            return "扫荡中";
        };
    }, e.prototype.refushBar = function() {
        this.challengeBtn.enabled = !1, this.starValue += 5, this.bar.value = this.starValue;
    }, e.prototype.overPlay = function() {
        if (0 != this.starValue) {
            this.bar.visible = !1, this.price.visible = !0, this.challengeBtn.enabled = !0, 
            this.starValue = 0;
            var t = UserFb.ins().getFbDataById(this.data);
            if (!t) return;
            var e = t.getCount();
            e > 0 ? UserFb.ins().sendChallenge(this.data) : UserFb.ins().sendAddCount(this.data);
        }
    }, e.prototype.dataChanged = function() {
        var t = GlobalConfig.ins().NewYbBaseFbconfig.fbId;
        if (this.data == t) {
            this.price.visible = !1, this.redPoint.visible = !1, this.challengeBtn.label = "挑  战";
            var i = YiBaoFbData.ins(), n = GlobalConfig.ins().NewYbBaseFbconfig, s = GlobalConfig.ins().NewYbfbAwardConfig[1];
            this.item.data = s.waveAward[0].id, this.titleImg.source = "yibaofb_title1", this.bg.source = "fb_yibao_bg_jpg", 
            this.levelRequire.text = n.id[0] + "转开启";
            var a = n.freeCount - i.count, o = void 0;
            a > 0 ? (o = "今日挑战次数：|C:0x00ff00&T:" + a + "次|", this.challengeBtn.enabled = !0, 
            this.challengeBtn.filters = []) : (o = "今日挑战次数：|C:0xff0000&T:" + a + "次|", this.challengeBtn.enabled = !1, 
            this.challengeBtn.filters = [ ColorUtil.colorMat ]), this.count.textFlow = TextFlowMaker.generateTextFlow(o), 
            UserZs.ins().lv >= n.id[0] && Actor.level >= n.id[1] ? (this.currentState = "canChallenge", 
            this.count.verticalCenter = -45, this.challengeBtn.visible = !0) : this.currentState = "noChallenge", 
            GameServer.serverOpenDay < n.openDay && (this.levelRequire.text = "开服第" + n.openDay + "天开启", 
            this.currentState = "noChallenge");
        } else {
            this.bg.source = "fb_material_bg" + (Number(this.data) - 3e3) + "_jpg", this.titleImg.source = "fb_material_name" + (Number(this.data) - 3e3);
            var n = GlobalConfig.ins().DailyFubenConfig[this.data];
            if (this.item.data = n.showItem[0], n.zsLevel > 0 ? (this.levelRequire.text = n.zsLevel + "转开启", 
            this.currentState = UserZs.ins().lv >= n.zsLevel ? "canChallenge" : "noChallenge") : (this.levelRequire.text = n.levelLimit + "级开启", 
            this.currentState = Actor.level >= n.levelLimit ? "canChallenge" : "noChallenge"), 
            3009 == this.data && GameServer.serverOpenDay < n.param && (this.levelRequire.text = "开服第" + n.param + "天开启", 
            this.currentState = "noChallenge"), "canChallenge" != this.currentState) return;
            var r = UserFb.ins().getFbDataById(this.data);
            if (!r) return;
            var h = r.getCount(), l = h > 0 ? "#40D016" : "#DFD1B5";
            this.redPoint.visible = !1, this.count.textFlow = new egret.HtmlTextParser().parser('今日挑战次数：<font color="' + l + '">' + h + "次</font>"), 
            this.price.visible = 0 == h && "canChallenge" == this.currentState, this.challengeBtn.label = h ? UserZs.ins().lv >= e.SaoDangZsLv ? "扫  荡" : "挑  战" : "扫  荡", 
            this.challengeBtn.name = h ? "" : "add", this.challengeBtn.enabled = !0;
            var u = [ .3, .6, 0, 0, 0, .3, .6, 0, 0, 0, .3, .6, 0, 0, 0, 0, 0, 0, 1, 0 ];
            this.challengeBtn.filters = [], this.count.verticalCenter = -45, this.count.right = 20;
            var p = r.getResetCount(), c = r.getNextVip();
            if (0 == h) {
                if (0 >= p) switch (c) {
                  case -1:
                    this.count.text = "今日扫荡次数已经用完", this.count.verticalCenter = 0, this.count.right = 20, 
                    this.challengeBtn.visible = !1, this.price.visible = !1;
                    break;

                  default:
                    UserVip.ins().lv < c ? (this.count.textFlow = new egret.HtmlTextParser().parser(StringUtils.addColor("VIP" + c, 14942722) + "可额外扫荡1次"), 
                    this.challengeBtn.filters = [ new egret.ColorMatrixFilter(u) ], this.challengeBtn.enabled = !1, 
                    this.challengeBtn.visible = !0) : (this.count.text = "VIP" + c + "可额外扫荡1次", this.challengeBtn.enabled = !0, 
                    this.challengeBtn.visible = !0);
                } else this.challengeBtn.visible = !0, this.count.textFlow = new egret.HtmlTextParser().parser('今日挑战次数：<font color="#40D016">' + p + "次</font>");
                this.price.setPrice(n.buyPrice[r.vipBuyCount]);
            } else "canChallenge" == this.currentState && (this.challengeBtn.visible = !0);
        }
    }, e.SaoDangZsLv = 5, e;
}(BaseItemRender);

__reflect(FbItem.prototype, "FbItem");

window.FbItem = FbItem;

var ItemShopItemRenderer = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.goodsID = 0, e.skinName = "ItemShopItem", e.itemIcon.addEventListener(egret.TouchEvent.TOUCH_TAP, e.showTip, e), 
        e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = this.data, e = GlobalConfig.ins().ItemConfig(t.itemId);
        if (void 0 != e) {
            this.goodsID = t.id;
            var i = "";
            i = t.price > 1e5 ? Math.floor(t.price / 1e4) + "万" : t.price + "", this.money.text = i, 
            this.itemName.text = e.name, this.itemName.textColor = ItemBase.QUALITY_COLOR[e.quality], 
            this.used.text = "（" + t.use + "）", this.used.x = this.itemName.x + this.itemName.width, 
            this.itemIcon && this.itemIcon.setData && this.itemIcon.setData(e);
        }
    }, e.prototype.showTip = function() {
        var t, e = GlobalConfig.ins().ItemStoreConfig;
        for (var i in e) e[i].id == this.goodsID && (t = e[i].itemId);
        void 0 == t && new Error("竟然没有找到该商品ID");
        var n = GlobalConfig.ins().ItemConfig(t);
        ViewManager.ins().open(ItemDetailedWin, 0, n.id, 1);
    }, e;
}(BaseItemRender);

__reflect(ItemShopItemRenderer.prototype, "ItemShopItemRenderer");

window.ItemShopItemRenderer = ItemShopItemRenderer;

var MijiItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "MijiItemSkin", e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        null == this.data ? (this.icon.source = "suo_01", this.count.text = "") : this.data instanceof ItemData ? (this.icon.source = this.data.configID + "", 
        this.count.text = this.data.count + "") : isNaN(this.data) || (this.icon.source = this.data ? GlobalConfig.ins().MiJiSkillConfig[this.data].item + "" : "");
    }, e;
}(BaseItemRender);

__reflect(MijiItem.prototype, "MijiItem");

window.MijiItem = MijiItem;

var PersonRewardRenderer = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "PersonRewardRendererSkin", e.itemList.itemRenderer = ItemBase, 
        e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        this.desc.text = +this.data.integral + "", this.itemList.dataProvider = new eui.ArrayCollection(this.data.award);
    }, e;
}(BaseItemRender);

__reflect(PersonRewardRenderer.prototype, "PersonRewardRenderer");

window.PersonRewardRenderer = PersonRewardRenderer;

var PriceReward = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "PriceRewardSkin", e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = this.data;
        if (0 == t.type) this.iconImg.source = RewardData.getSmallCurrencyRes(t.id); else {
            var e = GlobalConfig.ins().ItemConfig(t.id);
            this.iconImg.source = ResPath.getItemIconPath(e.icon);
        }
        this.priceLabel.text = t.count + "";
    }, e;
}(BaseItemRender);

__reflect(PriceReward.prototype, "PriceReward");

window.PriceReward = PriceReward;

var PubBossRemindItem = function(t) {
    function e() {
        return t.call(this) || this;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = this.data, e = GlobalConfig.ins().PublicBossConfig[t.id];
        this.checkBoxs.visible = e.level <= Actor.level, e.level <= Actor.level && e.zsLevel <= UserZs.ins().lv ? (this.checkBoxs.visible = e.level <= Actor.level, 
        this.checkBoxs.selected = UserBoss.ins().getRemindByIndex(this.itemIndex)) : this.checkBoxs.visible = !1, 
        this.txt.visible = !this.checkBoxs.visible, this.checkBoxs.name = t.id - 1 + "";
        var i = GlobalConfig.ins().MonstersConfig(e.bossId);
        this.bossName.text = i.name, this.levelShow.text = e.zsLevel > 0 ? e.zsLevel + "转" : e.level + "级";
    }, e;
}(BaseItemRender);

__reflect(PubBossRemindItem.prototype, "PubBossRemindItem");

window.PubBossRemindItem = PubBossRemindItem;

var RankItemRenderer = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.touchEnabled = !0, e.touchChildren = !1, e.skinName = "RankItemPowerSkin", 
        e.vipNum = BitmapNumber.ins().createNumPic(0, "num4", 4), e.vipNum.touchEnabled = !1, 
        e.vip.addChild(e.vipNum), e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        if (null != this.data && null != e.dataFormat) {
            this.invalidateState(), this.currentState = e.dataFormat.states;
            for (var t in this.data) {
                var i = this[t];
                i && this.updateValue(i, t, this.data[t]);
            }
            var n = this.data[RankDataType.DATA_POS];
            if (n > 0 && 4 > n ? this.rankImg.source = "rank_num" + (n - 1) : this.rankImg.source = null, 
            "xianjie" == this.currentState) {
                var s = this.data, a = GlobalConfig.ins().XianjieConfig[s.curJie][s.curStar - 1];
                a ? (this.xianjieName.text = "武境：" + a.name, this.starTxt.text = s.curJie + "阶" + s.curStar + "星") : (this.xianjieName.text = "", 
                this.starTxt.text = "");
            }
            "power" == this.currentState && (this.powerTitle.text = this.getPowerTitle(this.data.pos));
        }
        this.visible = null != this.data;
    }, e.prototype.getPowerTitle = function(t) {
        return 10 >= t ? "十大仙尊" : t >= 11 && 50 >= t ? "皇级高手" : "初窥仙界";
    }, e.prototype.updateValue = function(t, i, n) {
        switch (i) {
          case RankDataType.DATA_VIP:
            return this.vipTxt.visible = n > 0, this.vipTxt.source = Chat.ins().getVipIcon(n, 1), 
            t.visible = !1, void (this.vipNum && BitmapNumber.ins().changeNum(this.vipNum, n, "num4", 4));

          case RankDataType.DATA_MONTH:
            return void (t.visible = 1 == n);

          case RankDataType.DATA_LEVEL:
            n = (this.data[RankDataType.DATA_ZHUAN] ? this.data[RankDataType.DATA_ZHUAN] + "转" : "") + n + "级";
            break;

          case RankDataType.DATA_CHALLGE_ID:
            var s = Ladder.ins().getLevelConfig(this.data.challgeLevel, this.data.challgeId);
            n = s.showDan;
        }
        t instanceof eui.Label ? ("number" == typeof n && (n = CommonUtils.overLength(n)), 
        t.text = i in e.dataFormat ? e.dataFormat[i].replace("{value}", n) : n) : t instanceof eui.Image && (t.source = i in e.dataFormat ? e.dataFormat[i].replace("{value}", n) : n);
    }, e;
}(BaseItemRender);

__reflect(RankItemRenderer.prototype, "RankItemRenderer");

window.RankItemRenderer = RankItemRenderer;

var RedBagRenderer = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "RedBagRendererSkin", e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        this.num.text = this.data.robNum, this.nameLabel.text = this.data.robName;
    }, e;
}(BaseItemRender);

__reflect(RedBagRenderer.prototype, "RedBagRenderer");

window.RedBagRenderer = RedBagRenderer;

var WingEquipItemrender = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "WingEquipItemSkin", e.addEventListener(egret.TouchEvent.TOUCH_END, e.onClick, e), 
        e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = this.data, e = t.curRole, i = t.data;
        this.role = SubRoles.ins().getSubRoleByIndex(e), this.itemConfig = i.itemConfig, 
        this.item0.setData(i.itemConfig), this.equipXuqiu.text = "需求：翅膀达到" + (this.itemConfig.level + 1) + "阶", 
        this.equipXuqiu.textColor = 16711680, this.equipName.text = i.itemConfig.name, this.score.text = "评分：" + ItemConfig.calculateBagItemScore(i);
    }, e.prototype.descut = function() {
        this.removeEventListener(egret.TouchEvent.TOUCH_END, this.onClick, this);
    }, e.prototype.onClick = function() {
        this.openEquipsTips();
    }, e.prototype.openEquipsTips = function() {
        ViewManager.ins().open(EquipDetailedWin, 1, this.data.data.handle, this.itemConfig.id, this.data.data, this.role);
    }, e;
}(BaseItemRender);

__reflect(WingEquipItemrender.prototype, "WingEquipItemrender");

window.WingEquipItemrender = WingEquipItemrender;

var ZsTermItemRender = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "ZsTermItemSkin", e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        t.prototype.childrenCreated.call(this), this.init();
    }, e.prototype.init = function() {
        this.goLink.textFlow = HtmlUtils.makeLink(this.goLink.text), this.goLink.touchEnabled = !0, 
        this.accomplish.visible = !1, this.goLink.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onTou, this);
    }, e.prototype.onTou = function() {
        GameGuider.taskGuidance(this.data.taskId, 1);
    }, e.prototype.removeFromStage = function() {
        t.prototype.removeFromStage.call(this), this.goLink.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.onTou, this);
    }, e.prototype.addFromStage = function() {
        t.prototype.addFromStage.call(this), this.goLink.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onTou, this);
    }, e.prototype.dataChanged = function() {
        if (this.data && this.data.taskId) {
            var t = this.data, e = GlobalConfig.ins().AchievementTaskConfig;
            for (var i in e) if (e[i].taskId == t.taskId) {
                var n = UserTask.ins().getAchieveDataById(e[i].achievementId);
                this.termTxt.text = e[i].name + " " + (n ? n.value : 0) + "/" + e[i].target, n.value >= e[i].target ? (this.accomplish.visible = !0, 
                this.goLink.visible = !1) : this.goLink.visible = 1 == e[i].control;
                break;
            }
        }
    }, e;
}(BaseItemRender);

__reflect(ZsTermItemRender.prototype, "ZsTermItemRender");

window.ZsTermItemRender = ZsTermItemRender;

var commandItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "ProItemRenderSkin", e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        this.data.value ? this.valueLabel.text = "值：" + this.data.value + "  类型：" + this.data.type : this.valueLabel.text = "";
    }, e;
}(BaseItemRender);

__reflect(commandItem.prototype, "commandItem");

window.commandItem = commandItem;

var ActivityGiftItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e._index = 0, e.skinName = "ActGiftItemSkin", e.list.itemRenderer = ItemBase, 
        e.buyBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, e.reward, e), e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        this.list.dataProvider = new eui.ArrayCollection(this.data.rewards), this.config = GlobalConfig.ins().ActivityType2Config[12][this.data.index - 1], 
        this.bg.source = "kfhd_bg_" + (this.data.index + 2) + "_jpg", this.icon.source = "kfhd_img_lb" + this.data.index + "_png";
        var t = Activity.ins().getActivityDataById(12);
        0 == t.buyData[this.data.index - 1] ? (this.buyBtn.labelDisplay.text = "立即购买", this.buyBtn.enabled = !0) : (this.buyBtn.labelDisplay.text = "已购买", 
        this.buyBtn.enabled = !1), this._index = this.data.index - 1, this.priceLabel.text = this.data.price;
    }, e.prototype.reward = function(t) {
        var e = this;
        if (this.config.vip && UserVip.ins().lv < this.config.vip) UserTips.ins().showTips("vip等级不足"); else {
            if (UserBag.ins().getSurplusCount() < 1 && 3 == this._index) return void UserTips.ins().showTips("|C:0xff0000&T:背包已满，请清理背包|");
            Actor.yb >= this.config.price ? WarnWin.show("确定消耗" + this.config.price + "元宝购买特惠商品吗？", function() {
                Activity.ins().sendReward(12, e._index + 1);
            }, this) : UserTips.ins().showTips("元宝不足");
        }
    }, e;
}(BaseItemRender);

__reflect(ActivityGiftItem.prototype, "ActivityGiftItem");

window.ActivityGiftItem = ActivityGiftItem;

var ActivityType1ItemRenderer = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "ActLevelSonSkin", e.list.itemRenderer = ItemBase, e.rewardBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, e.reward, e), 
        e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = this.data, e = Activity.ins().getActivityDataById(t.Id);
        t.zslevel > 0 ? (this.level.source = "level_" + (8 + t.zslevel), this.levelTxt.text = t.zslevel + "阶") : (this.level.source = "level_" + t.level / 10, 
        this.levelTxt.text = t.level + "级"), this.currentState = e.getRewardStateById(t.index - 1) + "", 
        this.list.dataProvider = new eui.ArrayCollection(t.rewards);
    }, e.prototype.reward = function(t) {
        var e = this.data;
        UserBag.ins().getSurplusCount() < 1 && 13 == this.data.index ? UserTips.ins().showTips("|C:0xff0000&T:背包已满，请清理背包|") : Activity.ins().sendReward(e.Id, e.index);
    }, e;
}(BaseItemRender);

__reflect(ActivityType1ItemRenderer.prototype, "ActivityType1ItemRenderer");

window.ActivityType1ItemRenderer = ActivityType1ItemRenderer;

var ActivityType4ItemRenderer = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "ActraceSkinson", e.list.itemRenderer = ItemBase, e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = this.data;
        this.data.ranking > 0 ? this.rankImg.source = "rankDabiao_" + this.data.ranking : this.rankImg.source = "rankDabiao_" + this.data.rankType + "_" + this.data.ranking, 
        this.list.dataProvider = new eui.ArrayCollection(t.rewards);
        var e = Activity.ins().getrankInfoListByIndex(this.itemIndex);
        if (e) {
            this.y = 21, this.rankName.text = e.name, this.value.visible = !0;
            var i = void 0;
            switch (this.data.rankType) {
              case RankDataType.TYPE_LEVEL:
                i = e.zsLevel > 0 ? e.zsLevel + "阶" + e.level + "级" : e.level + "级";
                break;

              case RankDataType.TYPE_POWER:
              case RankDataType.TYPE_WING:
              case RankDataType.TYPE_JOB_ZS:
              case RankDataType.TYPE_JOB_FS:
              case RankDataType.TYPE_JOB_DS:
                i = CommonUtils.overLength(e.numType);
                break;

              case RankDataType.TYPE_BAOSHI:
                i = e.numType + "级";
            }
            this.value.text = i;
        } else this.y = 33, this.rankName.text = "暂无", this.value.visible = !1;
    }, e;
}(BaseItemRender);

__reflect(ActivityType4ItemRenderer.prototype, "ActivityType4ItemRenderer");

window.ActivityType4ItemRenderer = ActivityType4ItemRenderer;

var AdvanceHeChengItemWin = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.index = 0, e.skinName = "AdvanceHeChengItemSkin", e.mc || (e.mc = new MovieClip(), 
        e.mc.x = 35, e.mc.y = 35), e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        if (this.clear(), this.data) if (this.data.id) {
            var t = GlobalConfig.ins().ItemConfig(this.data.id);
            this.imgIcon.source = ResPath.getItemIconPath(t.icon), this.bg.source = "common_quality" + t.quality, 
            this.count.text = "" + this.data.count, this.nameTxt.visible = !0, 0 != t.type && (this.nameTxt.textColor = ItemBase.QUALITY_COLOR[t.quality]), 
            this.nameTxt.text = t.name, t.quality >= 3 ? (null == this.effect && (this.effect = new MovieClip()), 
            this.effect.x = 34, this.effect.y = 36, this.addChildAt(this.effect, 2), this.effect.blendMode = egret.BlendMode.ADD, 
            this.effect.playFile(ResPath.getItemEffectPath(t.quality), -1)) : null != this.effect && (this.effect.stop(), 
            DisplayUtils.removeFromParent(this.effect)), t.quality >= 3 ? (null == this.effect5 && (this.effect5 = new MovieClip()), 
            this.effect5.x = 34, this.effect5.y = 36, this.addChildAt(this.effect5, 2), this.effect5.blendMode = egret.BlendMode.ADD, 
            this.effect5.playFile(ResPath.getItemEffectPath(t.quality, 1), -1)) : null != this.effect5 && (this.effect5.stop(), 
            DisplayUtils.removeFromParent(this.effect5));
        } else this.itemIndex == this.data.index && (this.imgIcon.source = "bag_btn0");
    }, e.prototype.clear = function() {
        this.imgIcon.source = 0 == this.itemIndex ? "bag_btn0" : "anima_jia1", this.bg.source = "common_quality0", 
        this.redPoint.visible = !1, this.nameTxt.visible = !1, this.count.text = "", this.nameTxt.text = "", 
        this.effect && (this.effect.stop(), DisplayUtils.removeFromParent(this.effect)), 
        this.effect5 && (this.effect5.stop(), DisplayUtils.removeFromParent(this.effect5));
    }, e.prototype.playEff = function() {
        this.data && (this.mc.playFile(ResPath.getUIEffectPath(UiEffectType.Type7)), this.addChild(this.mc), 
        this.effect5.stop(), this.effect.stop(), DisplayUtils.removeFromParent(this.effect), 
        DisplayUtils.removeFromParent(this.effect5));
    }, e;
}(BaseItemRender);

__reflect(AdvanceHeChengItemWin.prototype, "AdvanceHeChengItemWin");

window.AdvanceHeChengItemWin = AdvanceHeChengItemWin;

var AdvanceFaBaoEquipItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "AdvanceEquipItemSkin", e.touchChildren = !1, e.touchEnabled = !0, 
        e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        this.itemIcon.hideName(!1), this.playEff();
        var t = this.data;
        if (this.equipdata = t.equipdata[this.itemIndex], 0 == this.equipdata.item.handle ? (this.lvTxt.visible = !1, 
        this.itemIcon.setItemImg("advance_fabao" + this.itemIndex), this.itemIcon.setCount(""), 
        this.itemIcon.grayItemImg(!0)) : (this.itemIcon.grayItemImg(!1), this.lvTxt.visible = !0, 
        this.itemIcon.data = this.equipdata.item.configID, this.lvTxt.textColor = ItemBase.QUALITY_COLOR[this.equipdata.item.itemConfig.quality], 
        this.lvTxt.text = LangManager.getLang(LangManager.commonStr17, this.equipdata.item.itemConfig.level, this.equipdata.item.starLv)), 
        t == AdvanceFaBao.ins().data) {
            var e = t.getEquipState();
            this.redPoint.visible = null != e[this.itemIndex], this.tipTxt.visible = this.redPoint.visible;
        } else this.tipTxt.visible = this.redPoint.visible = !1;
        this._lastData = this.equipdata.item.configID;
    }, e.prototype.playEff = function() {
        (this._lastData || 0 == this._lastData) && this._lastData != this.equipdata.item.configID && (this.mc || (this.mc = new MovieClip()), 
        this.mc.x = 38, this.mc.y = 37, this.mc.playFile(ResPath.getUIEffectPath(UiEffectType.Type38), 1), 
        this.addChild(this.mc));
    }, e;
}(BaseItemRender);

__reflect(AdvanceFaBaoEquipItem.prototype, "AdvanceFaBaoEquipItem");

window.AdvanceFaBaoEquipItem = AdvanceFaBaoEquipItem;

var AdvanceFaBaoEquipUseItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "AdvanceEquipUseItemSkin", e;
    }
    return __extends(e, t), e.prototype.addFromStage = function() {
        t.prototype.addFromStage.call(this), this.takeOnBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onClick, this);
    }, e.prototype.onClick = function() {
        AdvanceFaBao.ins().dressFaBaoEquip(this.itemData.handle, AdvanceFaBao.ins().curRole, AdvanceFaBao.ins().data.curSelectEquiplId), 
        ViewManager.ins().close(AdvanceFaBaoEquipUseWin);
    }, e.prototype.removeFromStage = function() {
        t.prototype.removeFromStage.call(this), this.takeOnBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.onClick, this);
    }, e.prototype.dataChanged = function() {
        this.itemIcon.isShowName(!1);
        var t = AdvanceFaBao.ins().data.curSelectEquiplId;
        this.itemData = this.data, this.itemData.handle == AdvanceFaBao.ins().data.equipdata[t].item.handle ? (this.takeOnImg.visible = !0, 
        this.takeOnBtn.visible = !1) : (this.takeOnImg.visible = !1, this.takeOnBtn.visible = !0), 
        this.itemIcon.data = this.itemData, this.nmTxt.textColor = ItemBase.QUALITY_COLOR[this.itemData.itemConfig.quality], 
        this.nmTxt.text = LangManager.getLang(LangManager.commonStr16, this.itemData.itemConfig.name);
        for (var e = [], i = 0; i < this.itemData.starLv; i++) e.push(i);
        this.starList.touchEnabled = this.starList.touchChildren = !1, this.starList.selectedIndices = e;
        var n = AttributeData.getEquipAllAttr(this.itemData.configID, this.itemData, !1), s = n[0], a = AttributeData.getAttrStrByType(s.type), o = LangManager.getLang(LangManager.commonStr15, a, s.value, AdvanceCommonData.ins().extAttrValue(this.itemData.starLv, s.value));
        this.attrTxt.text = o, this.powerTxt.text = LangManager.getLang(LangManager.commonStr14, ItemConfig.calculateBagItemScore(this.itemData));
    }, e;
}(BaseItemRender);

__reflect(AdvanceFaBaoEquipUseItem.prototype, "AdvanceFaBaoEquipUseItem");

window.AdvanceFaBaoEquipUseItem = AdvanceFaBaoEquipUseItem;

var AdvanceFaBaoGlowAttrItemRenderer = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "AdvanceAttrItemSkin", e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = this.data, e = GlobalConfig.ins().FaBaoCommonConfig.chengZhangDanItemAttr;
        this.attrNameTxt.text = AttributeData.getAttrStrByType(e[this.itemIndex].type), 
        this.nextNameTxt.text = this.attrNameTxt.text, this.attrValueTxt.text = AttributeData.getAttStrByType(e[this.itemIndex], 4, "+", !1, !1, t.hasUsedChenzhandanCount), 
        this.nextValueTxt.text = AttributeData.getAttStrByType(e[this.itemIndex], 4, "+", !1, !1);
    }, e;
}(BaseItemRender);

__reflect(AdvanceFaBaoGlowAttrItemRenderer.prototype, "AdvanceFaBaoGlowAttrItemRenderer");

window.AdvanceFaBaoGlowAttrItemRenderer = AdvanceFaBaoGlowAttrItemRenderer;

var AdvanceFaBaoHuanhuaItemRenderer = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "AdvaneHuanhuaItemSkin", e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = this.data;
        this.iconDisplay.source = ResPath.RES_DIR + "uimodule/advance/fabao/huanhua/" + t.appearance + "_icon.png", 
        this.nmTxt.text = t.name;
    }, e;
}(BaseItemRender);

__reflect(AdvanceFaBaoHuanhuaItemRenderer.prototype, "AdvanceFaBaoHuanhuaItemRenderer");

window.AdvanceFaBaoHuanhuaItemRenderer = AdvanceFaBaoHuanhuaItemRenderer;

var AdvanceFaBaoSkillItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "AdvanceSkillItemSkin", e.touchChildren = !1, e.touchEnabled = !0, 
        e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = this.data, e = t.skillLev[this.itemIndex];
        if (this.skillIcon.source = "advance_fabaoskill" + this.itemIndex, AdvanceFaBao.ins().data != t) return e > 0 ? (this.curLv.text = LangManager.getLang(LangManager.commonStr18, e), 
        this.skillIcon.filters = null) : (this.curLv.text = "", this.skillIcon.filters = [ ColorUtil.colorMat ]), 
        this.tipTxt.textFlow = null, void (this.redPoint.visible = !1);
        var i = t.getSkillState(this.itemIndex), n = GlobalConfig.ins().FaBaoCommonConfig.skillOpenLevel[this.itemIndex];
        0 == i ? (this.skillIcon.filters = [ ColorUtil.colorMat ], this.tipTxt.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(LangManager.advanceStr29, n)), 
        this.redPoint.visible = !1) : 2 == i ? (this.skillIcon.filters = null, this.tipTxt.textFlow = TextFlowMaker.generateTextFlow(LangManager.advanceStr30), 
        this.redPoint.visible = !0) : (this.skillIcon.filters = null, this.tipTxt.textFlow = null, 
        this.redPoint.visible = !1), e > 0 ? this.curLv.text = LangManager.getLang(LangManager.commonStr18, e) : this.curLv.text = "";
    }, e;
}(BaseItemRender);

__reflect(AdvanceFaBaoSkillItem.prototype, "AdvanceFaBaoSkillItem");

window.AdvanceFaBaoSkillItem = AdvanceFaBaoSkillItem;

var AdvanceFaBaoSuperUpItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "AdvanceSuperUpItemSkin", e;
    }
    return __extends(e, t), e.prototype.addFromStage = function() {
        t.prototype.addFromStage.call(this), this.btn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onClick, this);
    }, e.prototype.onClick = function() {
        AdvanceFaBao.ins().sendBigUpLevel(this.itemIndex + 1);
    }, e.prototype.removeFromStage = function() {
        t.prototype.removeFromStage.call(this), this.btn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.onClick, this);
    }, e.prototype.dataChanged = function() {
        var t = GlobalConfig.ins().FaBaoCommonConfig.levelItemid[this.itemIndex], e = GlobalConfig.ins().ItemConfig(t);
        this.item.isShowName(!1), this.item.data = t, this.infoTxt.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(LangManager.advanceStr53, e.name, GlobalConfig.ins().FaBaoCommonConfig.levelItemidStage[this.itemIndex], LangManager.advanceStr4[1], GlobalConfig.ins().FaBaoCommonConfig.levelExpChange[this.itemIndex]));
        var i = UserBag.ins().getBagGoodsCountById(UserBag.BAG_TYPE_OTHTER, t);
        this.toDay.text = LangManager.getLang(LangManager.advanceStr54, i);
    }, e;
}(BaseItemRender);

__reflect(AdvanceFaBaoSuperUpItem.prototype, "AdvanceFaBaoSuperUpItem");

window.AdvanceFaBaoSuperUpItem = AdvanceFaBaoSuperUpItem;

var AdvanceFaBaoZizhiAttrItemRenderer = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "AdvanceAttrItemSkin", e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = this.data, e = GlobalConfig.ins().FaBaoLevelConfig[t.lv - 1], i = e.attr, n = .01 * GlobalConfig.ins().FaBaoCommonConfig.ziZhiDanAddRate;
        this.attrNameTxt.text = AttributeData.getAttrStrByType(i[this.itemIndex].type), 
        this.nextNameTxt.text = this.attrNameTxt.text, this.attrValueTxt.text = "+" + (n * t.hasUsedZizhidanCount).toFixed(2) + "%", 
        this.nextValueTxt.text = "+" + n + "%";
    }, e;
}(BaseItemRender);

__reflect(AdvanceFaBaoZizhiAttrItemRenderer.prototype, "AdvanceFaBaoZizhiAttrItemRenderer");

window.AdvanceFaBaoZizhiAttrItemRenderer = AdvanceFaBaoZizhiAttrItemRenderer;

var AdvanceGangQiEquipItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "AdvanceEquipItemSkin", e.touchChildren = !1, e.touchEnabled = !0, 
        e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        this.itemIcon.hideName(!1), this.playEff();
        var t = this.data;
        if (this.equipdata = t.equipdata[this.itemIndex], 0 == this.equipdata.item.handle ? (this.lvTxt.visible = !1, 
        this.itemIcon.setItemImg("advance_gangqi" + this.itemIndex), this.itemIcon.setCount(""), 
        this.itemIcon.grayItemImg(!0)) : (this.itemIcon.grayItemImg(!1), this.lvTxt.visible = !0, 
        this.itemIcon.data = this.equipdata.item.configID, this.lvTxt.textColor = ItemBase.QUALITY_COLOR[this.equipdata.item.itemConfig.quality], 
        this.lvTxt.text = LangManager.getLang(LangManager.commonStr17, this.equipdata.item.itemConfig.level, this.equipdata.item.starLv)), 
        t == AdvanceGangQi.ins().data) {
            var e = t.getEquipState();
            this.redPoint.visible = null != e[this.itemIndex], this.tipTxt.visible = this.redPoint.visible;
        } else this.tipTxt.visible = this.redPoint.visible = !1;
        this._lastData = this.equipdata.item.configID;
    }, e.prototype.playEff = function() {
        (this._lastData || 0 == this._lastData) && this._lastData != this.equipdata.item.configID && (this.mc || (this.mc = new MovieClip()), 
        this.mc.x = 38, this.mc.y = 37, this.mc.playFile(ResPath.getUIEffectPath(UiEffectType.Type38), 1), 
        this.addChild(this.mc));
    }, e;
}(BaseItemRender);

__reflect(AdvanceGangQiEquipItem.prototype, "AdvanceGangQiEquipItem");

window.AdvanceGangQiEquipItem = AdvanceGangQiEquipItem;

var AdvanceGangQiEquipUseItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "AdvanceEquipUseItemSkin", e;
    }
    return __extends(e, t), e.prototype.addFromStage = function() {
        t.prototype.addFromStage.call(this), this.takeOnBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onClick, this);
    }, e.prototype.onClick = function() {
        AdvanceGangQi.ins().dressGangQiEquip(this.itemData.handle, AdvanceGangQi.ins().curRole, AdvanceGangQi.ins().data.curSelectEquiplId), 
        ViewManager.ins().close(AdvanceGangQiEquipUseWin);
    }, e.prototype.removeFromStage = function() {
        t.prototype.removeFromStage.call(this), this.takeOnBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.onClick, this);
    }, e.prototype.dataChanged = function() {
        this.itemIcon.isShowName(!1);
        var t = AdvanceGangQi.ins().data.curSelectEquiplId;
        this.itemData = this.data, this.itemData.handle == AdvanceGangQi.ins().data.equipdata[t].item.handle ? (this.takeOnImg.visible = !0, 
        this.takeOnBtn.visible = !1) : (this.takeOnImg.visible = !1, this.takeOnBtn.visible = !0), 
        this.itemIcon.data = this.itemData, this.nmTxt.textColor = ItemBase.QUALITY_COLOR[this.itemData.itemConfig.quality], 
        this.nmTxt.text = LangManager.getLang(LangManager.commonStr16, this.itemData.itemConfig.name);
        for (var e = [], i = 0; i < this.itemData.starLv; i++) e.push(i);
        this.starList.touchEnabled = this.starList.touchChildren = !1, this.starList.selectedIndices = e;
        var n = AttributeData.getEquipAllAttr(this.itemData.configID, this.itemData, !1), s = n[0], a = AttributeData.getAttrStrByType(s.type), o = LangManager.getLang(LangManager.commonStr15, a, s.value, AdvanceCommonData.ins().extAttrValue(this.itemData.starLv, s.value));
        this.attrTxt.text = o, this.powerTxt.text = LangManager.getLang(LangManager.commonStr14, ItemConfig.calculateBagItemScore(this.itemData));
    }, e;
}(BaseItemRender);

__reflect(AdvanceGangQiEquipUseItem.prototype, "AdvanceGangQiEquipUseItem");

window.AdvanceGangQiEquipUseItem = AdvanceGangQiEquipUseItem;

var AdvanceGangQiGlowAttrItemRenderer = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "AdvanceAttrItemSkin", e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = this.data, e = GlobalConfig.ins().GangQiCommonConfig.chengZhangDanItemAttr;
        this.attrNameTxt.text = AttributeData.getAttrStrByType(e[this.itemIndex].type), 
        this.nextNameTxt.text = this.attrNameTxt.text, this.attrValueTxt.text = AttributeData.getAttStrByType(e[this.itemIndex], 4, "+", !1, !1, t.hasUsedChenzhandanCount), 
        this.nextValueTxt.text = AttributeData.getAttStrByType(e[this.itemIndex], 4, "+", !1, !1);
    }, e;
}(BaseItemRender);

__reflect(AdvanceGangQiGlowAttrItemRenderer.prototype, "AdvanceGangQiGlowAttrItemRenderer");

window.AdvanceGangQiGlowAttrItemRenderer = AdvanceGangQiGlowAttrItemRenderer;

var AdvanceGangQiHuanhuaItemRenderer = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "AdvaneHuanhuaItemSkin", e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = this.data;
        this.iconDisplay.source = ResPath.RES_DIR + "uimodule/advance/gangqi/huanhua/" + t.appearance + "_icon.png", 
        this.nmTxt.text = t.name;
    }, e;
}(BaseItemRender);

__reflect(AdvanceGangQiHuanhuaItemRenderer.prototype, "AdvanceGangQiHuanhuaItemRenderer");

window.AdvanceGangQiHuanhuaItemRenderer = AdvanceGangQiHuanhuaItemRenderer;

var AdvanceGangQiSkillItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "AdvanceSkillItemSkin", e.touchChildren = !1, e.touchEnabled = !0, 
        e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = this.data, e = t.skillLev[this.itemIndex];
        if (this.skillIcon.source = "advance_gangqiskill" + this.itemIndex, AdvanceGangQi.ins().data != t) return e > 0 ? (this.curLv.text = LangManager.getLang(LangManager.commonStr18, e), 
        this.skillIcon.filters = null) : (this.curLv.text = "", this.skillIcon.filters = [ ColorUtil.colorMat ]), 
        this.tipTxt.textFlow = null, void (this.redPoint.visible = !1);
        var i = t.getSkillState(this.itemIndex), n = GlobalConfig.ins().GangQiCommonConfig.skillOpenLevel[this.itemIndex];
        0 == i ? (this.skillIcon.filters = [ ColorUtil.colorMat ], this.tipTxt.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(LangManager.advanceStr29, n)), 
        this.redPoint.visible = !1) : 2 == i ? (this.skillIcon.filters = null, this.tipTxt.textFlow = TextFlowMaker.generateTextFlow(LangManager.advanceStr30), 
        this.redPoint.visible = !0) : (this.skillIcon.filters = null, this.tipTxt.textFlow = null, 
        this.redPoint.visible = !1), e > 0 ? this.curLv.text = LangManager.getLang(LangManager.commonStr18, e) : this.curLv.text = "";
    }, e;
}(BaseItemRender);

__reflect(AdvanceGangQiSkillItem.prototype, "AdvanceGangQiSkillItem");

window.AdvanceGangQiSkillItem = AdvanceGangQiSkillItem;

var AdvanceGangQiSuperUpItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "AdvanceSuperUpItemSkin", e;
    }
    return __extends(e, t), e.prototype.addFromStage = function() {
        t.prototype.addFromStage.call(this), this.btn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onClick, this);
    }, e.prototype.onClick = function() {
        AdvanceGangQi.ins().sendBigUpLevel(this.itemIndex + 1);
    }, e.prototype.removeFromStage = function() {
        t.prototype.removeFromStage.call(this), this.btn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.onClick, this);
    }, e.prototype.dataChanged = function() {
        var t = GlobalConfig.ins().GangQiCommonConfig.levelItemid[this.itemIndex], e = GlobalConfig.ins().ItemConfig(t);
        this.item.isShowName(!1), this.item.data = t, this.infoTxt.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(LangManager.advanceStr53, e.name, GlobalConfig.ins().GangQiCommonConfig.levelItemidStage[this.itemIndex], LangManager.advanceStr4[4], GlobalConfig.ins().GangQiCommonConfig.levelExpChange[this.itemIndex]));
        var i = UserBag.ins().getBagGoodsCountById(UserBag.BAG_TYPE_OTHTER, t);
        this.toDay.text = LangManager.getLang(LangManager.advanceStr54, i);
    }, e;
}(BaseItemRender);

__reflect(AdvanceGangQiSuperUpItem.prototype, "AdvanceGangQiSuperUpItem");

window.AdvanceGangQiSuperUpItem = AdvanceGangQiSuperUpItem;

var AdvanceGangQiZizhiAttrItemRenderer = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "AdvanceAttrItemSkin", e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = this.data, e = GlobalConfig.ins().GangQiLevelConfig[t.lv - 1], i = e.attr, n = .01 * GlobalConfig.ins().GangQiCommonConfig.ziZhiDanAddRate;
        this.attrNameTxt.text = AttributeData.getAttrStrByType(i[this.itemIndex].type), 
        this.nextNameTxt.text = this.attrNameTxt.text, this.attrValueTxt.text = "+" + (n * t.hasUsedZizhidanCount).toFixed(2) + "%", 
        this.nextValueTxt.text = "+" + n + "%";
    }, e;
}(BaseItemRender);

__reflect(AdvanceGangQiZizhiAttrItemRenderer.prototype, "AdvanceGangQiZizhiAttrItemRenderer");

window.AdvanceGangQiZizhiAttrItemRenderer = AdvanceGangQiZizhiAttrItemRenderer;

var AdvanceHorseEquipItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "AdvanceEquipItemSkin", e.touchChildren = !1, e.touchEnabled = !0, 
        e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        this.itemIcon.hideName(!1), this.playEff();
        var t = this.data;
        if (this.equipdata = t.equipdata[this.itemIndex], 0 == this.equipdata.item.handle ? (this.lvTxt.visible = !1, 
        this.itemIcon.setItemImg("advance_horse" + this.itemIndex), this.itemIcon.setCount(""), 
        this.itemIcon.grayItemImg(!0)) : (this.itemIcon.grayItemImg(!1), this.lvTxt.visible = !0, 
        this.itemIcon.data = this.equipdata.item.configID, this.lvTxt.textColor = ItemBase.QUALITY_COLOR[this.equipdata.item.itemConfig.quality], 
        this.lvTxt.text = LangManager.getLang(LangManager.commonStr17, this.equipdata.item.itemConfig.level, this.equipdata.item.starLv)), 
        t == AdvanceHorse.ins().data) {
            var e = t.getEquipState();
            this.redPoint.visible = null != e[this.itemIndex], this.tipTxt.visible = this.redPoint.visible;
        } else this.tipTxt.visible = this.redPoint.visible = !1;
        this._lastData = this.equipdata.item.configID;
    }, e.prototype.playEff = function() {
        (this._lastData || 0 == this._lastData) && this._lastData != this.equipdata.item.configID && (this.mc || (this.mc = new MovieClip()), 
        this.mc.x = 38, this.mc.y = 37, this.mc.playFile(ResPath.getUIEffectPath(UiEffectType.Type38), 1), 
        this.addChild(this.mc));
    }, e;
}(BaseItemRender);

__reflect(AdvanceHorseEquipItem.prototype, "AdvanceHorseEquipItem");

window.AdvanceHorseEquipItem = AdvanceHorseEquipItem;

var AdvanceHorseEquipUseItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "AdvanceEquipUseItemSkin", e;
    }
    return __extends(e, t), e.prototype.addFromStage = function() {
        t.prototype.addFromStage.call(this), this.takeOnBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onClick, this);
    }, e.prototype.onClick = function() {
        AdvanceHorse.ins().dressHorseEquip(this.itemData.handle, AdvanceHorse.ins().curRole, AdvanceHorse.ins().data.curSelectEquiplId), 
        ViewManager.ins().close(AdvanceHorseEquipUseWin);
    }, e.prototype.removeFromStage = function() {
        t.prototype.removeFromStage.call(this), this.takeOnBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.onClick, this);
    }, e.prototype.dataChanged = function() {
        this.itemIcon.isShowName(!1);
        var t = AdvanceHorse.ins().data.curSelectEquiplId;
        this.itemData = this.data, this.itemData.handle == AdvanceHorse.ins().data.equipdata[t].item.handle ? (this.takeOnImg.visible = !0, 
        this.takeOnBtn.visible = !1) : (this.takeOnImg.visible = !1, this.takeOnBtn.visible = !0), 
        this.itemIcon.data = this.itemData, this.nmTxt.textColor = ItemBase.QUALITY_COLOR[this.itemData.itemConfig.quality], 
        this.nmTxt.text = LangManager.getLang(LangManager.commonStr16, this.itemData.itemConfig.name);
        for (var e = [], i = 0; i < this.itemData.starLv; i++) e.push(i);
        this.starList.touchEnabled = this.starList.touchChildren = !1, this.starList.selectedIndices = e;
        var n = AttributeData.getEquipAllAttr(this.itemData.configID, this.itemData, !1), s = n[0], a = AttributeData.getAttrStrByType(s.type), o = LangManager.getLang(LangManager.commonStr15, a, s.value, AdvanceCommonData.ins().extAttrValue(this.itemData.starLv, s.value));
        this.attrTxt.text = o, this.powerTxt.text = LangManager.getLang(LangManager.commonStr14, ItemConfig.calculateBagItemScore(this.itemData));
    }, e;
}(BaseItemRender);

__reflect(AdvanceHorseEquipUseItem.prototype, "AdvanceHorseEquipUseItem");

window.AdvanceHorseEquipUseItem = AdvanceHorseEquipUseItem;

var AdvanceHorseGlowAttrItemRenderer = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "AdvanceAttrItemSkin", e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = this.data, e = GlobalConfig.ins().HorseCommonConfig.chengZhangDanItemAttr;
        this.attrNameTxt.text = AttributeData.getAttrStrByType(e[this.itemIndex].type), 
        this.nextNameTxt.text = this.attrNameTxt.text, this.attrValueTxt.text = AttributeData.getAttStrByType(e[this.itemIndex], 4, "+", !1, !1, t.hasUsedChenzhandanCount), 
        this.nextValueTxt.text = AttributeData.getAttStrByType(e[this.itemIndex], 4, "+", !1, !1);
    }, e;
}(BaseItemRender);

__reflect(AdvanceHorseGlowAttrItemRenderer.prototype, "AdvanceHorseGlowAttrItemRenderer");

window.AdvanceHorseGlowAttrItemRenderer = AdvanceHorseGlowAttrItemRenderer;

var AdvanceHorseHuanhuaItemRenderer = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "AdvaneHuanhuaItemSkin", e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = this.data;
        this.iconDisplay.source = "advanceHorse_huanhua" + t.id + "_icon_png", this.nmTxt.text = t.name;
    }, e;
}(BaseItemRender);

__reflect(AdvanceHorseHuanhuaItemRenderer.prototype, "AdvanceHorseHuanhuaItemRenderer");

window.AdvanceHorseHuanhuaItemRenderer = AdvanceHorseHuanhuaItemRenderer;

var AdvanceHorseSkillItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "AdvanceSkillItemSkin", e.touchChildren = !1, e.touchEnabled = !0, 
        e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = this.data, e = t.skillLev[this.itemIndex];
        if (this.skillIcon.source = "advance_horseskill" + this.itemIndex, AdvanceHorse.ins().data != t) return e > 0 ? (this.curLv.text = LangManager.getLang(LangManager.commonStr18, e), 
        this.skillIcon.filters = null) : (this.curLv.text = "", this.skillIcon.filters = [ ColorUtil.colorMat ]), 
        this.tipTxt.textFlow = null, void (this.redPoint.visible = !1);
        var i = t.getSkillState(this.itemIndex), n = GlobalConfig.ins().HorseCommonConfig.skillOpenLevel[this.itemIndex];
        0 == i ? (this.skillIcon.filters = [ ColorUtil.colorMat ], this.tipTxt.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(LangManager.advanceStr29, n)), 
        this.redPoint.visible = !1) : 2 == i ? (this.skillIcon.filters = null, this.tipTxt.textFlow = TextFlowMaker.generateTextFlow(LangManager.advanceStr30), 
        this.redPoint.visible = !0) : (this.skillIcon.filters = null, this.tipTxt.textFlow = null, 
        this.redPoint.visible = !1), e > 0 ? this.curLv.text = LangManager.getLang(LangManager.commonStr18, e) : this.curLv.text = "";
    }, e;
}(BaseItemRender);

__reflect(AdvanceHorseSkillItem.prototype, "AdvanceHorseSkillItem");

window.AdvanceHorseSkillItem = AdvanceHorseSkillItem;

var AdvanceHorseSuperUpItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "AdvanceSuperUpItemSkin", e;
    }
    return __extends(e, t), e.prototype.addFromStage = function() {
        t.prototype.addFromStage.call(this), this.btn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onClick, this);
    }, e.prototype.onClick = function() {
        AdvanceHorse.ins().sendBigUpLevel(this.itemIndex + 1);
    }, e.prototype.removeFromStage = function() {
        t.prototype.removeFromStage.call(this), this.btn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.onClick, this);
    }, e.prototype.dataChanged = function() {
        var t = GlobalConfig.ins().HorseCommonConfig.levelItemid[this.itemIndex], e = GlobalConfig.ins().ItemConfig(t);
        this.item.isShowName(!1), this.item.data = t, this.infoTxt.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(LangManager.advanceStr53, e.name, GlobalConfig.ins().HorseCommonConfig.levelItemidStage[this.itemIndex], LangManager.advanceStr4[3], GlobalConfig.ins().HorseCommonConfig.levelExpChange[this.itemIndex]));
        var i = UserBag.ins().getBagGoodsCountById(UserBag.BAG_TYPE_OTHTER, t);
        this.toDay.text = LangManager.getLang(LangManager.advanceStr54, i);
    }, e;
}(BaseItemRender);

__reflect(AdvanceHorseSuperUpItem.prototype, "AdvanceHorseSuperUpItem");

window.AdvanceHorseSuperUpItem = AdvanceHorseSuperUpItem;

var AdvanceHorseZizhiAttrItemRenderer = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "AdvanceAttrItemSkin", e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = this.data, e = GlobalConfig.ins().HorseLevelConfig[t.lv - 1], i = e.attr, n = .01 * GlobalConfig.ins().HorseCommonConfig.ziZhiDanAddRate;
        this.attrNameTxt.text = AttributeData.getAttrStrByType(i[this.itemIndex].type), 
        this.nextNameTxt.text = this.attrNameTxt.text, this.attrValueTxt.text = "+" + (n * t.hasUsedZizhidanCount).toFixed(2) + "%", 
        this.nextValueTxt.text = "+" + n + "%";
    }, e;
}(BaseItemRender);

__reflect(AdvanceHorseZizhiAttrItemRenderer.prototype, "AdvanceHorseZizhiAttrItemRenderer");

window.AdvanceHorseZizhiAttrItemRenderer = AdvanceHorseZizhiAttrItemRenderer;

var AdvanceJianTongEquipItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "AdvanceEquipItemSkin", e.touchChildren = !1, e.touchEnabled = !0, 
        e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        this.itemIcon.hideName(!1), this.playEff();
        var t = this.data;
        if (this.equipdata = t.equipdata[this.itemIndex], 0 == this.equipdata.item.handle ? (this.lvTxt.visible = !1, 
        this.itemIcon.setItemImg("advance_jiantong" + this.itemIndex), this.itemIcon.setCount(""), 
        this.itemIcon.grayItemImg(!0)) : (this.itemIcon.grayItemImg(!1), this.lvTxt.visible = !0, 
        this.itemIcon.data = this.equipdata.item.configID, this.lvTxt.textColor = ItemBase.QUALITY_COLOR[this.equipdata.item.itemConfig.quality], 
        this.lvTxt.text = LangManager.getLang(LangManager.commonStr17, this.equipdata.item.itemConfig.level, this.equipdata.item.starLv)), 
        t == AdvanceJianTong.ins().data) {
            var e = t.getEquipState();
            this.redPoint.visible = null != e[this.itemIndex], this.tipTxt.visible = this.redPoint.visible;
        } else this.tipTxt.visible = this.redPoint.visible = !1;
        this._lastData = this.equipdata.item.configID;
    }, e.prototype.playEff = function() {
        (this._lastData || 0 == this._lastData) && this._lastData != this.equipdata.item.configID && (this.mc || (this.mc = new MovieClip()), 
        this.mc.x = 38, this.mc.y = 37, this.mc.playFile(ResPath.getUIEffectPath(UiEffectType.Type38), 1), 
        this.addChild(this.mc));
    }, e;
}(BaseItemRender);

__reflect(AdvanceJianTongEquipItem.prototype, "AdvanceJianTongEquipItem");

window.AdvanceJianTongEquipItem = AdvanceJianTongEquipItem;

var AdvanceJianTongEquipUseItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "AdvanceEquipUseItemSkin", e;
    }
    return __extends(e, t), e.prototype.addFromStage = function() {
        t.prototype.addFromStage.call(this), this.takeOnBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onClick, this);
    }, e.prototype.onClick = function() {
        AdvanceJianTong.ins().dressJianTongEquip(this.itemData.handle, AdvanceJianTong.ins().curRole, AdvanceJianTong.ins().data.curSelectEquiplId), 
        ViewManager.ins().close(AdvanceJianTongEquipUseWin);
    }, e.prototype.removeFromStage = function() {
        t.prototype.removeFromStage.call(this), this.takeOnBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.onClick, this);
    }, e.prototype.dataChanged = function() {
        this.itemIcon.isShowName(!1);
        var t = AdvanceJianTong.ins().data.curSelectEquiplId;
        this.itemData = this.data, this.itemData.handle == AdvanceJianTong.ins().data.equipdata[t].item.handle ? (this.takeOnImg.visible = !0, 
        this.takeOnBtn.visible = !1) : (this.takeOnImg.visible = !1, this.takeOnBtn.visible = !0), 
        this.itemIcon.data = this.itemData, this.nmTxt.textColor = ItemBase.QUALITY_COLOR[this.itemData.itemConfig.quality], 
        this.nmTxt.text = LangManager.getLang(LangManager.commonStr16, this.itemData.itemConfig.name);
        for (var e = [], i = 0; i < this.itemData.starLv; i++) e.push(i);
        this.starList.touchEnabled = this.starList.touchChildren = !1, this.starList.selectedIndices = e;
        var n = AttributeData.getEquipAllAttr(this.itemData.configID, this.itemData, !1), s = n[0], a = AttributeData.getAttrStrByType(s.type), o = LangManager.getLang(LangManager.commonStr15, a, s.value, AdvanceCommonData.ins().extAttrValue(this.itemData.starLv, s.value));
        this.attrTxt.text = o, this.powerTxt.text = LangManager.getLang(LangManager.commonStr14, ItemConfig.calculateBagItemScore(this.itemData));
    }, e;
}(BaseItemRender);

__reflect(AdvanceJianTongEquipUseItem.prototype, "AdvanceJianTongEquipUseItem");

window.AdvanceJianTongEquipUseItem = AdvanceJianTongEquipUseItem;

var AdvanceJianTongGlowAttrItemRenderer = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "AdvanceAttrItemSkin", e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = this.data, e = GlobalConfig.ins().JianTongCommonConfig.chengZhangDanItemAttr;
        this.attrNameTxt.text = AttributeData.getAttrStrByType(e[this.itemIndex].type), 
        this.nextNameTxt.text = this.attrNameTxt.text, this.attrValueTxt.text = AttributeData.getAttStrByType(e[this.itemIndex], 4, "+", !1, !1, t.hasUsedChenzhandanCount), 
        this.nextValueTxt.text = AttributeData.getAttStrByType(e[this.itemIndex], 4, "+", !1, !1);
    }, e;
}(BaseItemRender);

__reflect(AdvanceJianTongGlowAttrItemRenderer.prototype, "AdvanceJianTongGlowAttrItemRenderer");

window.AdvanceJianTongGlowAttrItemRenderer = AdvanceJianTongGlowAttrItemRenderer;

var AdvanceJianTongHuanhuaItemRenderer = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "AdvaneHuanhuaItemSkin", e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = this.data;
        this.iconDisplay.source = ResPath.RES_DIR + "uimodule/advance/jiantong/huanhua/" + t.appearance + "_icon.png", 
        this.nmTxt.text = t.name;
    }, e;
}(BaseItemRender);

__reflect(AdvanceJianTongHuanhuaItemRenderer.prototype, "AdvanceJianTongHuanhuaItemRenderer");

window.AdvanceJianTongHuanhuaItemRenderer = AdvanceJianTongHuanhuaItemRenderer;

var AdvanceJianTongSkillItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "AdvanceSkillItemSkin", e.touchChildren = !1, e.touchEnabled = !0, 
        e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = this.data, e = t.skillLev[this.itemIndex];
        if (this.skillIcon.source = "advance_jiantongskill" + this.itemIndex, AdvanceJianTong.ins().data != t) return e > 0 ? (this.curLv.text = LangManager.getLang(LangManager.commonStr18, e), 
        this.skillIcon.filters = null) : (this.curLv.text = "", this.skillIcon.filters = [ ColorUtil.colorMat ]), 
        this.tipTxt.textFlow = null, void (this.redPoint.visible = !1);
        var i = t.getSkillState(this.itemIndex), n = GlobalConfig.ins().JianTongCommonConfig.skillOpenLevel[this.itemIndex];
        0 == i ? (this.skillIcon.filters = [ ColorUtil.colorMat ], this.tipTxt.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(LangManager.advanceStr29, n)), 
        this.redPoint.visible = !1) : 2 == i ? (this.skillIcon.filters = null, this.tipTxt.textFlow = TextFlowMaker.generateTextFlow(LangManager.advanceStr30), 
        this.redPoint.visible = !0) : (this.skillIcon.filters = null, this.tipTxt.textFlow = null, 
        this.redPoint.visible = !1), e > 0 ? this.curLv.text = LangManager.getLang(LangManager.commonStr18, e) : this.curLv.text = "";
    }, e;
}(BaseItemRender);

__reflect(AdvanceJianTongSkillItem.prototype, "AdvanceJianTongSkillItem");

window.AdvanceJianTongSkillItem = AdvanceJianTongSkillItem;

var AdvanceJianTongSuperUpItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "AdvanceSuperUpItemSkin", e;
    }
    return __extends(e, t), e.prototype.addFromStage = function() {
        t.prototype.addFromStage.call(this), this.btn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onClick, this);
    }, e.prototype.onClick = function() {
        AdvanceJianTong.ins().sendBigUpLevel(this.itemIndex + 1);
    }, e.prototype.removeFromStage = function() {
        t.prototype.removeFromStage.call(this), this.btn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.onClick, this);
    }, e.prototype.dataChanged = function() {
        var t = GlobalConfig.ins().JianTongCommonConfig.levelItemid[this.itemIndex], e = GlobalConfig.ins().ItemConfig(t);
        this.item.isShowName(!1), this.item.data = t, this.infoTxt.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(LangManager.advanceStr53, e.name, GlobalConfig.ins().JianTongCommonConfig.levelItemidStage[this.itemIndex], LangManager.advanceStr4[6], GlobalConfig.ins().JianTongCommonConfig.levelExpChange[this.itemIndex]));
        var i = UserBag.ins().getBagGoodsCountById(UserBag.BAG_TYPE_OTHTER, t);
        this.toDay.text = LangManager.getLang(LangManager.advanceStr54, i);
    }, e;
}(BaseItemRender);

__reflect(AdvanceJianTongSuperUpItem.prototype, "AdvanceJianTongSuperUpItem");

window.AdvanceJianTongSuperUpItem = AdvanceJianTongSuperUpItem;

var AdvanceJianTongZizhiAttrItemRenderer = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "AdvanceAttrItemSkin", e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = this.data, e = GlobalConfig.ins().JianTongLevelConfig[t.lv - 1], i = e.attr, n = .01 * GlobalConfig.ins().JianTongCommonConfig.ziZhiDanAddRate;
        this.attrNameTxt.text = AttributeData.getAttrStrByType(i[this.itemIndex].type), 
        this.nextNameTxt.text = this.attrNameTxt.text, this.attrValueTxt.text = "+" + (n * t.hasUsedZizhidanCount).toFixed(2) + "%", 
        this.nextValueTxt.text = "+" + n + "%";
    }, e;
}(BaseItemRender);

__reflect(AdvanceJianTongZizhiAttrItemRenderer.prototype, "AdvanceJianTongZizhiAttrItemRenderer");

window.AdvanceJianTongZizhiAttrItemRenderer = AdvanceJianTongZizhiAttrItemRenderer;

var AdvanceMoShenEquipItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "AdvanceEquipItemSkin", e.touchChildren = !1, e.touchEnabled = !0, 
        e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        this.itemIcon.hideName(!1), this.playEff();
        var t = this.data;
        if (this.equipdata = t.equipdata[this.itemIndex], 0 == this.equipdata.item.handle ? (this.lvTxt.visible = !1, 
        this.itemIcon.setItemImg("advance_moshen" + this.itemIndex), this.itemIcon.setCount(""), 
        this.itemIcon.grayItemImg(!0)) : (this.itemIcon.grayItemImg(!1), this.lvTxt.visible = !0, 
        this.itemIcon.data = this.equipdata.item.configID, this.lvTxt.textColor = ItemBase.QUALITY_COLOR[this.equipdata.item.itemConfig.quality], 
        this.lvTxt.text = LangManager.getLang(LangManager.commonStr17, this.equipdata.item.itemConfig.level, this.equipdata.item.starLv)), 
        t == AdvanceMoShen.ins().data) {
            var e = t.getEquipState();
            this.redPoint.visible = null != e[this.itemIndex], this.tipTxt.visible = this.redPoint.visible;
        } else this.tipTxt.visible = this.redPoint.visible = !1;
        this._lastData = this.equipdata.item.configID;
    }, e.prototype.playEff = function() {
        (this._lastData || 0 == this._lastData) && this._lastData != this.equipdata.item.configID && (this.mc || (this.mc = new MovieClip()), 
        this.mc.x = 38, this.mc.y = 37, this.mc.playFile(ResPath.getUIEffectPath(UiEffectType.Type38), 1), 
        this.addChild(this.mc));
    }, e;
}(BaseItemRender);

__reflect(AdvanceMoShenEquipItem.prototype, "AdvanceMoShenEquipItem");

window.AdvanceMoShenEquipItem = AdvanceMoShenEquipItem;

var AdvanceMoShenEquipUseItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "AdvanceEquipUseItemSkin", e;
    }
    return __extends(e, t), e.prototype.addFromStage = function() {
        t.prototype.addFromStage.call(this), this.takeOnBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onClick, this);
    }, e.prototype.onClick = function() {
        AdvanceMoShen.ins().dressMoShenEquip(this.itemData.handle, AdvanceMoShen.ins().curRole, AdvanceMoShen.ins().data.curSelectEquiplId), 
        ViewManager.ins().close(AdvanceMoShenEquipUseWin);
    }, e.prototype.removeFromStage = function() {
        t.prototype.removeFromStage.call(this), this.takeOnBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.onClick, this);
    }, e.prototype.dataChanged = function() {
        this.itemIcon.isShowName(!1);
        var t = AdvanceMoShen.ins().data.curSelectEquiplId;
        this.itemData = this.data, this.itemData.handle == AdvanceMoShen.ins().data.equipdata[t].item.handle ? (this.takeOnImg.visible = !0, 
        this.takeOnBtn.visible = !1) : (this.takeOnImg.visible = !1, this.takeOnBtn.visible = !0), 
        this.itemIcon.data = this.itemData, this.nmTxt.textColor = ItemBase.QUALITY_COLOR[this.itemData.itemConfig.quality], 
        this.nmTxt.text = LangManager.getLang(LangManager.commonStr16, this.itemData.itemConfig.name);
        for (var e = [], i = 0; i < this.itemData.starLv; i++) e.push(i);
        this.starList.touchEnabled = this.starList.touchChildren = !1, this.starList.selectedIndices = e;
        var n = AttributeData.getEquipAllAttr(this.itemData.configID, this.itemData, !1), s = n[0], a = AttributeData.getAttrStrByType(s.type), o = LangManager.getLang(LangManager.commonStr15, a, s.value, AdvanceCommonData.ins().extAttrValue(this.itemData.starLv, s.value));
        this.attrTxt.text = o, this.powerTxt.text = LangManager.getLang(LangManager.commonStr14, ItemConfig.calculateBagItemScore(this.itemData));
    }, e;
}(BaseItemRender);

__reflect(AdvanceMoShenEquipUseItem.prototype, "AdvanceMoShenEquipUseItem");

window.AdvanceMoShenEquipUseItem = AdvanceMoShenEquipUseItem;

var AdvanceMoShenGlowAttrItemRenderer = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "AdvanceAttrItemSkin", e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = this.data, e = GlobalConfig.ins().MoShenCommonConfig.chengZhangDanItemAttr;
        this.attrNameTxt.text = AttributeData.getAttrStrByType(e[this.itemIndex].type), 
        this.nextNameTxt.text = this.attrNameTxt.text, this.attrValueTxt.text = AttributeData.getAttStrByType(e[this.itemIndex], 4, "+", !1, !1, t.hasUsedChenzhandanCount), 
        this.nextValueTxt.text = AttributeData.getAttStrByType(e[this.itemIndex], 4, "+", !1, !1);
    }, e;
}(BaseItemRender);

__reflect(AdvanceMoShenGlowAttrItemRenderer.prototype, "AdvanceMoShenGlowAttrItemRenderer");

window.AdvanceMoShenGlowAttrItemRenderer = AdvanceMoShenGlowAttrItemRenderer;

var AdvanceMoShenHuanhuaItemRenderer = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "AdvaneHuanhuaItemSkin", e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = this.data;
        this.iconDisplay.source = ResPath.RES_DIR + "uimodule/advance/moshen/huanhua/" + t.appearance + "_icon.png", 
        this.nmTxt.text = t.name;
    }, e;
}(BaseItemRender);

__reflect(AdvanceMoShenHuanhuaItemRenderer.prototype, "AdvanceMoShenHuanhuaItemRenderer");

window.AdvanceMoShenHuanhuaItemRenderer = AdvanceMoShenHuanhuaItemRenderer;

var AdvanceMoShenSkillItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "AdvanceSkillItemSkin", e.touchChildren = !1, e.touchEnabled = !0, 
        e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = this.data, e = t.skillLev[this.itemIndex];
        if (this.skillIcon.source = "advance_moshenskill" + this.itemIndex, AdvanceMoShen.ins().data != t) return e > 0 ? (this.curLv.text = LangManager.getLang(LangManager.commonStr18, e), 
        this.skillIcon.filters = null) : (this.curLv.text = "", this.skillIcon.filters = [ ColorUtil.colorMat ]), 
        this.tipTxt.textFlow = null, void (this.redPoint.visible = !1);
        var i = t.getSkillState(this.itemIndex), n = GlobalConfig.ins().MoShenCommonConfig.skillOpenLevel[this.itemIndex];
        0 == i ? (this.skillIcon.filters = [ ColorUtil.colorMat ], this.tipTxt.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(LangManager.advanceStr29, n)), 
        this.redPoint.visible = !1) : 2 == i ? (this.skillIcon.filters = null, this.tipTxt.textFlow = TextFlowMaker.generateTextFlow(LangManager.advanceStr30), 
        this.redPoint.visible = !0) : (this.skillIcon.filters = null, this.tipTxt.textFlow = null, 
        this.redPoint.visible = !1), e > 0 ? this.curLv.text = LangManager.getLang(LangManager.commonStr18, e) : this.curLv.text = "";
    }, e;
}(BaseItemRender);

__reflect(AdvanceMoShenSkillItem.prototype, "AdvanceMoShenSkillItem");

window.AdvanceMoShenSkillItem = AdvanceMoShenSkillItem;

var AdvanceMoShenSuperUpItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "AdvanceSuperUpItemSkin", e;
    }
    return __extends(e, t), e.prototype.addFromStage = function() {
        t.prototype.addFromStage.call(this), this.btn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onClick, this);
    }, e.prototype.onClick = function() {
        AdvanceMoShen.ins().sendBigUpLevel(this.itemIndex + 1);
    }, e.prototype.removeFromStage = function() {
        t.prototype.removeFromStage.call(this), this.btn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.onClick, this);
    }, e.prototype.dataChanged = function() {
        var t = GlobalConfig.ins().MoShenCommonConfig.levelItemid[this.itemIndex], e = GlobalConfig.ins().ItemConfig(t);
        this.item.isShowName(!1), this.item.data = t, this.infoTxt.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(LangManager.advanceStr53, e.name, GlobalConfig.ins().MoShenCommonConfig.levelItemidStage[this.itemIndex], LangManager.advanceStr4[5], GlobalConfig.ins().MoShenCommonConfig.levelExpChange[this.itemIndex]));
        var i = UserBag.ins().getBagGoodsCountById(UserBag.BAG_TYPE_OTHTER, t);
        this.toDay.text = LangManager.getLang(LangManager.advanceStr54, i);
    }, e;
}(BaseItemRender);

__reflect(AdvanceMoShenSuperUpItem.prototype, "AdvanceMoShenSuperUpItem");

window.AdvanceMoShenSuperUpItem = AdvanceMoShenSuperUpItem;

var AdvanceMoShenZizhiAttrItemRenderer = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "AdvanceAttrItemSkin", e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = this.data, e = GlobalConfig.ins().MoShenLevelConfig[t.lv - 1], i = e.attr, n = .01 * GlobalConfig.ins().MoShenCommonConfig.ziZhiDanAddRate;
        this.attrNameTxt.text = AttributeData.getAttrStrByType(i[this.itemIndex].type), 
        this.nextNameTxt.text = this.attrNameTxt.text, this.attrValueTxt.text = "+" + (n * t.hasUsedZizhidanCount).toFixed(2) + "%", 
        this.nextValueTxt.text = "+" + n + "%";
    }, e;
}(BaseItemRender);

__reflect(AdvanceMoShenZizhiAttrItemRenderer.prototype, "AdvanceMoShenZizhiAttrItemRenderer");

window.AdvanceMoShenZizhiAttrItemRenderer = AdvanceMoShenZizhiAttrItemRenderer;

var AdvanceWingEquipItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "AdvanceEquipItemSkin", e.touchChildren = !1, e.touchEnabled = !0, 
        e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        this.itemIcon.hideName(!1), this.playEff();
        var t = this.data;
        if (this.equipdata = t.equipdata[this.itemIndex], 0 == this.equipdata.item.handle ? (this.lvTxt.visible = !1, 
        this.itemIcon.setItemImg("advance_wing" + this.itemIndex), this.itemIcon.setCount(""), 
        this.itemIcon.grayItemImg(!0)) : (this.itemIcon.grayItemImg(!1), this.lvTxt.visible = !0, 
        this.itemIcon.data = this.equipdata.item.configID, this.lvTxt.textColor = ItemBase.QUALITY_COLOR[this.equipdata.item.itemConfig.quality], 
        this.lvTxt.text = LangManager.getLang(LangManager.commonStr17, this.equipdata.item.itemConfig.level, this.equipdata.item.starLv)), 
        t == AdvanceWing.ins().data) {
            var e = t.getEquipState();
            this.redPoint.visible = null != e[this.itemIndex], this.tipTxt.visible = this.redPoint.visible;
        } else this.tipTxt.visible = this.redPoint.visible = !1;
        this._lastData = this.equipdata.item.configID;
    }, e.prototype.playEff = function() {
        (this._lastData || 0 == this._lastData) && this._lastData != this.equipdata.item.configID && (this.mc || (this.mc = new MovieClip()), 
        this.mc.x = 38, this.mc.y = 37, this.mc.playFile(ResPath.getUIEffectPath(UiEffectType.Type38), 1), 
        this.addChild(this.mc));
    }, e;
}(BaseItemRender);

__reflect(AdvanceWingEquipItem.prototype, "AdvanceWingEquipItem");

window.AdvanceWingEquipItem = AdvanceWingEquipItem;

var AdvanceWingEquipUseItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "AdvanceEquipUseItemSkin", e;
    }
    return __extends(e, t), e.prototype.addFromStage = function() {
        t.prototype.addFromStage.call(this), this.takeOnBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onClick, this);
    }, e.prototype.onClick = function() {
        AdvanceWing.ins().dressWingEquip(this.itemData.handle, AdvanceWing.ins().curRole, AdvanceWing.ins().data.curSelectEquiplId), 
        ViewManager.ins().close(AdvanceWingEquipUseWin);
    }, e.prototype.removeFromStage = function() {
        t.prototype.removeFromStage.call(this), this.takeOnBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.onClick, this);
    }, e.prototype.dataChanged = function() {
        this.itemIcon.isShowName(!1);
        var t = AdvanceWing.ins().data.curSelectEquiplId;
        this.itemData = this.data, this.itemData.handle == AdvanceWing.ins().data.equipdata[t].item.handle ? (this.takeOnImg.visible = !0, 
        this.takeOnBtn.visible = !1) : (this.takeOnImg.visible = !1, this.takeOnBtn.visible = !0), 
        this.itemIcon.data = this.itemData, this.nmTxt.textColor = ItemBase.QUALITY_COLOR[this.itemData.itemConfig.quality], 
        this.nmTxt.text = LangManager.getLang(LangManager.commonStr16, this.itemData.itemConfig.name);
        for (var e = [], i = 0; i < this.itemData.starLv; i++) e.push(i);
        this.starList.touchEnabled = this.starList.touchChildren = !1, this.starList.selectedIndices = e;
        var n = AttributeData.getEquipAllAttr(this.itemData.configID, this.itemData, !1), s = n[0], a = AttributeData.getAttrStrByType(s.type), o = LangManager.getLang(LangManager.commonStr15, a, s.value, AdvanceCommonData.ins().extAttrValue(this.itemData.starLv, s.value));
        this.attrTxt.text = o, this.powerTxt.text = LangManager.getLang(LangManager.commonStr14, ItemConfig.calculateBagItemScore(this.itemData));
    }, e;
}(BaseItemRender);

__reflect(AdvanceWingEquipUseItem.prototype, "AdvanceWingEquipUseItem");

window.AdvanceWingEquipUseItem = AdvanceWingEquipUseItem;

var AdvanceWingGlowAttrItemRenderer = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "AdvanceAttrItemSkin", e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = this.data, e = GlobalConfig.ins().WingCommonConfig.chengZhangDanItemAttr;
        this.attrNameTxt.text = AttributeData.getAttrStrByType(e[this.itemIndex].type), 
        this.nextNameTxt.text = this.attrNameTxt.text, this.attrValueTxt.text = AttributeData.getAttStrByType(e[this.itemIndex], 4, "+", !1, !1, t.hasUsedChenzhandanCount), 
        this.nextValueTxt.text = AttributeData.getAttStrByType(e[this.itemIndex], 4, "+", !1, !1);
    }, e;
}(BaseItemRender);

__reflect(AdvanceWingGlowAttrItemRenderer.prototype, "AdvanceWingGlowAttrItemRenderer");

window.AdvanceWingGlowAttrItemRenderer = AdvanceWingGlowAttrItemRenderer;

var AdvanceWingHuanhuaItemRenderer = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "AdvaneHuanhuaItemSkin", e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = this.data;
        this.iconDisplay.source = "advanceWing_huanhua" + t.id + "_icon_png", this.nmTxt.text = t.name;
    }, e;
}(BaseItemRender);

__reflect(AdvanceWingHuanhuaItemRenderer.prototype, "AdvanceWingHuanhuaItemRenderer");

window.AdvanceWingHuanhuaItemRenderer = AdvanceWingHuanhuaItemRenderer;

var AdvanceWingSkillItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "AdvanceSkillItemSkin", e.touchChildren = !1, e.touchEnabled = !0, 
        e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = this.data, e = t.skillLev[this.itemIndex];
        if (this.skillIcon.source = "advance_wingskill" + this.itemIndex, AdvanceWing.ins().data != t) return e > 0 ? (this.curLv.text = LangManager.getLang(LangManager.commonStr18, e), 
        this.skillIcon.filters = null) : (this.curLv.text = "", this.skillIcon.filters = [ ColorUtil.colorMat ]), 
        this.tipTxt.textFlow = null, void (this.redPoint.visible = !1);
        var i = t.getSkillState(this.itemIndex), n = GlobalConfig.ins().WingCommonConfig.skillOpenLevel[this.itemIndex];
        0 == i ? (this.skillIcon.filters = [ ColorUtil.colorMat ], this.tipTxt.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(LangManager.advanceStr29, n)), 
        this.redPoint.visible = !1) : 2 == i ? (this.skillIcon.filters = null, this.tipTxt.textFlow = TextFlowMaker.generateTextFlow(LangManager.advanceStr30), 
        this.redPoint.visible = !0) : (this.skillIcon.filters = null, this.tipTxt.textFlow = null, 
        this.redPoint.visible = !1), e > 0 ? this.curLv.text = LangManager.getLang(LangManager.commonStr18, e) : this.curLv.text = "";
    }, e;
}(BaseItemRender);

__reflect(AdvanceWingSkillItem.prototype, "AdvanceWingSkillItem");

window.AdvanceWingSkillItem = AdvanceWingSkillItem;

var AdvanceWingSuperUpItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "AdvanceSuperUpItemSkin", e;
    }
    return __extends(e, t), e.prototype.addFromStage = function() {
        t.prototype.addFromStage.call(this), this.btn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onClick, this);
    }, e.prototype.onClick = function() {
        AdvanceWing.ins().sendBigUpLevel(this.itemIndex + 1);
    }, e.prototype.removeFromStage = function() {
        t.prototype.removeFromStage.call(this), this.btn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.onClick, this);
    }, e.prototype.dataChanged = function() {
        var t = GlobalConfig.ins().WingCommonConfig.levelItemid[this.itemIndex], e = GlobalConfig.ins().ItemConfig(t);
        this.item.isShowName(!1), this.item.data = t, this.infoTxt.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(LangManager.advanceStr53, e.name, GlobalConfig.ins().WingCommonConfig.levelItemidStage[this.itemIndex], LangManager.advanceStr4[0], GlobalConfig.ins().WingCommonConfig.levelExpChange[this.itemIndex]));
        var i = UserBag.ins().getBagGoodsCountById(UserBag.BAG_TYPE_OTHTER, t);
        this.toDay.text = LangManager.getLang(LangManager.advanceStr54, i);
    }, e;
}(BaseItemRender);

__reflect(AdvanceWingSuperUpItem.prototype, "AdvanceWingSuperUpItem");

window.AdvanceWingSuperUpItem = AdvanceWingSuperUpItem;

var AdvanceWingZizhiAttrItemRenderer = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "AdvanceAttrItemSkin", e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = this.data, e = GlobalConfig.ins().WingLevelConfig[t.lv - 1], i = e.attr, n = .01 * GlobalConfig.ins().WingCommonConfig.ziZhiDanAddRate;
        this.attrNameTxt.text = AttributeData.getAttrStrByType(i[this.itemIndex].type), 
        this.nextNameTxt.text = this.attrNameTxt.text, this.attrValueTxt.text = "+" + (n * t.hasUsedZizhidanCount).toFixed(2) + "%", 
        this.nextValueTxt.text = "+" + n + "%";
    }, e;
}(BaseItemRender);

__reflect(AdvanceWingZizhiAttrItemRenderer.prototype, "AdvanceWingZizhiAttrItemRenderer");

window.AdvanceWingZizhiAttrItemRenderer = AdvanceWingZizhiAttrItemRenderer;

var AdvanceZuJiEquipItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "AdvanceEquipItemSkin", e.touchChildren = !1, e.touchEnabled = !0, 
        e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        this.itemIcon.hideName(!1), this.playEff();
        var t = this.data;
        if (this.equipdata = t.equipdata[this.itemIndex], 0 == this.equipdata.item.handle ? (this.lvTxt.visible = !1, 
        this.itemIcon.setItemImg("advance_zuji" + this.itemIndex), this.itemIcon.setCount(""), 
        this.itemIcon.grayItemImg(!0)) : (this.itemIcon.grayItemImg(!1), this.lvTxt.visible = !0, 
        this.itemIcon.data = this.equipdata.item.configID, this.lvTxt.textColor = ItemBase.QUALITY_COLOR[this.equipdata.item.itemConfig.quality], 
        this.lvTxt.text = LangManager.getLang(LangManager.commonStr17, this.equipdata.item.itemConfig.level, this.equipdata.item.starLv)), 
        t == AdvanceZuJi.ins().data) {
            var e = t.getEquipState();
            this.redPoint.visible = null != e[this.itemIndex], this.tipTxt.visible = this.redPoint.visible;
        } else this.tipTxt.visible = this.redPoint.visible = !1;
        this._lastData = this.equipdata.item.configID;
    }, e.prototype.playEff = function() {
        (this._lastData || 0 == this._lastData) && this._lastData != this.equipdata.item.configID && (this.mc || (this.mc = new MovieClip()), 
        this.mc.x = 38, this.mc.y = 37, this.mc.playFile(ResPath.getUIEffectPath(UiEffectType.Type38), 1), 
        this.addChild(this.mc));
    }, e;
}(BaseItemRender);

__reflect(AdvanceZuJiEquipItem.prototype, "AdvanceZuJiEquipItem");

window.AdvanceZuJiEquipItem = AdvanceZuJiEquipItem;

var AdvanceZuJiEquipUseItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "AdvanceEquipUseItemSkin", e;
    }
    return __extends(e, t), e.prototype.addFromStage = function() {
        t.prototype.addFromStage.call(this), this.takeOnBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onClick, this);
    }, e.prototype.onClick = function() {
        AdvanceZuJi.ins().dressZuJiEquip(this.itemData.handle, AdvanceZuJi.ins().curRole, AdvanceZuJi.ins().data.curSelectEquiplId), 
        ViewManager.ins().close(AdvanceZuJiEquipUseWin);
    }, e.prototype.removeFromStage = function() {
        t.prototype.removeFromStage.call(this), this.takeOnBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.onClick, this);
    }, e.prototype.dataChanged = function() {
        var t = AdvanceZuJi.ins().data.curSelectEquiplId;
        this.itemData = this.data, this.itemData.handle == AdvanceZuJi.ins().data.equipdata[t].item.handle ? (this.takeOnImg.visible = !0, 
        this.takeOnBtn.visible = !1) : (this.takeOnImg.visible = !1, this.takeOnBtn.visible = !0), 
        this.itemIcon.data = this.itemData, this.nmTxt.textColor = ItemBase.QUALITY_COLOR[this.itemData.itemConfig.quality], 
        this.nmTxt.text = LangManager.getLang(LangManager.commonStr16, this.itemData.itemConfig.name);
        for (var e = [], i = 0; i < this.itemData.starLv; i++) e.push(i);
        this.starList.touchEnabled = this.starList.touchChildren = !1, this.starList.selectedIndices = e;
        var n = AttributeData.getEquipAllAttr(this.itemData.configID, this.itemData, !1), s = n[0], a = AttributeData.getAttrStrByType(s.type), o = LangManager.getLang(LangManager.commonStr15, a, s.value, AdvanceCommonData.ins().extAttrValue(this.itemData.starLv, s.value));
        this.attrTxt.text = o, this.powerTxt.text = LangManager.getLang(LangManager.commonStr14, ItemConfig.calculateBagItemScore(this.itemData));
    }, e;
}(BaseItemRender);

__reflect(AdvanceZuJiEquipUseItem.prototype, "AdvanceZuJiEquipUseItem");

window.AdvanceZuJiEquipUseItem = AdvanceZuJiEquipUseItem;

var AdvanceZuJiGlowAttrItemRenderer = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "AdvanceAttrItemSkin", e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = this.data, e = GlobalConfig.ins().ZuJiCommonConfig.chengZhangDanItemAttr;
        this.attrNameTxt.text = AttributeData.getAttrStrByType(e[this.itemIndex].type), 
        this.nextNameTxt.text = this.attrNameTxt.text, this.attrValueTxt.text = AttributeData.getAttStrByType(e[this.itemIndex], 4, "+", !1, !1, t.hasUsedChenzhandanCount), 
        this.nextValueTxt.text = AttributeData.getAttStrByType(e[this.itemIndex], 4, "+", !1, !1);
    }, e;
}(BaseItemRender);

__reflect(AdvanceZuJiGlowAttrItemRenderer.prototype, "AdvanceZuJiGlowAttrItemRenderer");

window.AdvanceZuJiGlowAttrItemRenderer = AdvanceZuJiGlowAttrItemRenderer;

var AdvanceZuJiHuanhuaItemRenderer = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "AdvaneHuanhuaItemSkin", e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = this.data;
        this.iconDisplay.source = ResPath.RES_DIR + "uimodule/advance/zuji/huanhua/" + t.appearance + "_icon.png", 
        this.nmTxt.text = t.name;
    }, e;
}(BaseItemRender);

__reflect(AdvanceZuJiHuanhuaItemRenderer.prototype, "AdvanceZuJiHuanhuaItemRenderer");

window.AdvanceZuJiHuanhuaItemRenderer = AdvanceZuJiHuanhuaItemRenderer;

var AdvanceZuJiSkillItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "AdvanceSkillItemSkin", e.touchChildren = !1, e.touchEnabled = !0, 
        e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = this.data, e = t.skillLev[this.itemIndex];
        if (this.skillIcon.source = "advance_zujiskill" + this.itemIndex, AdvanceZuJi.ins().data != t) return e > 0 ? (this.curLv.text = LangManager.getLang(LangManager.commonStr18, e), 
        this.skillIcon.filters = null) : (this.curLv.text = "", this.skillIcon.filters = [ ColorUtil.colorMat ]), 
        this.tipTxt.textFlow = null, void (this.redPoint.visible = !1);
        var i = t.getSkillState(this.itemIndex), n = GlobalConfig.ins().ZuJiCommonConfig.skillOpenLevel[this.itemIndex];
        0 == i ? (this.skillIcon.filters = [ ColorUtil.colorMat ], this.tipTxt.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(LangManager.advanceStr29, n)), 
        this.redPoint.visible = !1) : 2 == i ? (this.skillIcon.filters = null, this.tipTxt.textFlow = TextFlowMaker.generateTextFlow(LangManager.advanceStr30), 
        this.redPoint.visible = !0) : (this.skillIcon.filters = null, this.tipTxt.textFlow = null, 
        this.redPoint.visible = !1), e > 0 ? this.curLv.text = LangManager.getLang(LangManager.commonStr18, e) : this.curLv.text = "";
    }, e;
}(BaseItemRender);

__reflect(AdvanceZuJiSkillItem.prototype, "AdvanceZuJiSkillItem");

window.AdvanceZuJiSkillItem = AdvanceZuJiSkillItem;

var AdvanceZuJiSuperUpItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "AdvanceSuperUpItemSkin", e;
    }
    return __extends(e, t), e.prototype.addFromStage = function() {
        t.prototype.addFromStage.call(this), this.btn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onClick, this);
    }, e.prototype.onClick = function() {
        AdvanceZuJi.ins().sendBigUpLevel(this.itemIndex + 1);
    }, e.prototype.removeFromStage = function() {
        t.prototype.removeFromStage.call(this), this.btn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.onClick, this);
    }, e.prototype.dataChanged = function() {
        var t = GlobalConfig.ins().ZuJiCommonConfig.levelItemid[this.itemIndex], e = GlobalConfig.ins().ItemConfig(t);
        this.item.isShowName(!1), this.item.data = t, this.infoTxt.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(LangManager.advanceStr53, e.name, GlobalConfig.ins().ZuJiCommonConfig.levelItemidStage[this.itemIndex], LangManager.advanceStr4[2], GlobalConfig.ins().ZuJiCommonConfig.levelExpChange[this.itemIndex]));
        var i = UserBag.ins().getBagGoodsCountById(UserBag.BAG_TYPE_OTHTER, t);
        this.toDay.text = LangManager.getLang(LangManager.advanceStr54, i);
    }, e;
}(BaseItemRender);

__reflect(AdvanceZuJiSuperUpItem.prototype, "AdvanceZuJiSuperUpItem");

window.AdvanceZuJiSuperUpItem = AdvanceZuJiSuperUpItem;

var AdvanceZuJiZizhiAttrItemRenderer = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "AdvanceAttrItemSkin", e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = this.data, e = GlobalConfig.ins().ZuJiLevelConfig[t.lv - 1], i = e.attr, n = .01 * GlobalConfig.ins().ZuJiCommonConfig.ziZhiDanAddRate;
        this.attrNameTxt.text = AttributeData.getAttrStrByType(i[this.itemIndex].type), 
        this.nextNameTxt.text = this.attrNameTxt.text, this.attrValueTxt.text = "+" + (n * t.hasUsedZizhidanCount).toFixed(2) + "%", 
        this.nextValueTxt.text = "+" + n + "%";
    }, e;
}(BaseItemRender);

__reflect(AdvanceZuJiZizhiAttrItemRenderer.prototype, "AdvanceZuJiZizhiAttrItemRenderer");

window.AdvanceZuJiZizhiAttrItemRenderer = AdvanceZuJiZizhiAttrItemRenderer;

var AnimaBagItemWin = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "AnimaBagItemSkin", e.changeBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, function() {}.bind(e), e), 
        e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        this.data.isPass ? (this.changeBtn.label = "穿 戴", this.changeBtn.icon = "common_btn5_png") : (this.changeBtn.label = "替 换", 
        this.changeBtn.icon = "common_btn4_png");
        var t = this.data.item.itemConfig;
        this.id = t.id, this.type = this.data.type;
        var e = GlobalConfig.ins().LingqiDetailConfig[t.id];
        this.title.text = t.name + " Lv." + e.level, this.count.text = "" + this.data.item.count, 
        this.attr.text = AttributeData.getAttStr(e.attr, 0, 1, ": ");
        var i = "评分：|C:0x34FF25&T:" + e.point + "|";
        this.powerTxt.textFlow = TextFlowMaker.generateTextFlow(i);
        var n = GlobalConfig.ins().ItemConfig(t.id);
        this.itemIcon.setData(n);
    }, e;
}(BaseItemRender);

__reflect(AnimaBagItemWin.prototype, "AnimaBagItemWin");

window.AnimaBagItemWin = AnimaBagItemWin;

var AnimaGoodsItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "AnimaGoodsItemSkin", e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        this.indexTxt.text = this.data.index + 1 + ".", this.desc.textFlow = new egret.HtmlTextParser().parser("<u>" + this.data.way[0] + "</u>");
    }, Object.defineProperty(e.prototype, "userData", {
        get: function() {
            return this.data.way;
        },
        enumerable: !0,
        configurable: !0
    }), e;
}(BaseItemRender);

__reflect(AnimaGoodsItem.prototype, "AnimaGoodsItem");

window.AnimaGoodsItem = AnimaGoodsItem;

var AnimaItemWin = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.index = 1, e.skinName = "AnimaItemSkin", e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        this.lvTxt.visible = !1;
        var t = this.data;
        if (t) if (this.index = t.index, this.id = t.id, 0 == t.id) {
            this.imgIcon.source = "anima_jia";
            var e = UserBag.ins().getAnimaEquips(), i = e[1];
            i[t.index - 1] ? this.redPoint.visible = !0 : this.redPoint.visible = !1;
        } else if (-1 == t.id) this.imgIcon.source = "anima_suo", this.redPoint.visible = !1; else {
            this.imgIcon.visible = !1;
            var n = GlobalConfig.ins().ItemConfig(t.id), s = GlobalConfig.ins().LingqiDetailConfig[t.id];
            this.lvTxt.visible = !0, this.lvTxt.text = n.name + " Lv." + s.level, null != ItemConfig ? (null == this.lingqiMc && (this.lingqiMc = new MovieClip()), 
            this.lingqiMc.x = 42, this.lingqiMc.y = 41, this.addChildAt(this.lingqiMc, 2), this.lingqiMc.playFile(ResPath.getAnimaPath(n.subType, n.quality), -1), 
            n.quality >= 3 && (null == this.effect ? (this.effect = new MovieClip(), this.effect.x = 36, 
            this.effect.y = 36, this.addChildAt(this.effect, 3), this.effect.blendMode = egret.BlendMode.ADD, 
            this.effect.playFile(ResPath.getItemEffectPath(n.quality), -1)) : null != this.effect && (this.effect.stop(), 
            DisplayUtils.removeFromParent(this.effect)))) : (null != this.effect && (this.effect.stop(), 
            DisplayUtils.removeFromParent(this.effect)), null != this.lingqiMc && (this.lingqiMc.stop(), 
            DisplayUtils.removeFromParent(this.lingqiMc)));
            var e = UserBag.ins().getAnimaEquips(), i = e[1][t.index - 1], a = AnimaData.ins().pointAnima(t.id), o = void 0;
            if (i) o = i.point, o > a && i.itemConfig.quality >= n.quality && (this.redPoint.visible = !0), 
            i.itemConfig.quality > n.quality && (this.redPoint.visible = !0); else for (var r = 0; r < e[2].length; r++) if (e[2][r].itemConfig.subType == t.index && (o = e[2][r].point, 
            o > a && e[2][r].itemConfig.quality >= n.quality)) {
                this.redPoint.visible = !0;
                break;
            }
            s && !this.redPoint.visible && (s.levelup > 0 ? this.arrow.visible = Actor.lingli >= s.levelup : this.arrow.visible = !1);
        }
    }, e;
}(BaseItemRender);

__reflect(AnimaItemWin.prototype, "AnimaItemWin");

window.AnimaItemWin = AnimaItemWin;

var AnimaListRendererWin = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.QUALITY_COLOR = [ "0xFFFAD8", "0x8BF07E", "0x7FC7EE", "0xB68AF1", "0xFFA641", "0xD40000" ], 
        e.skinName = "AnimaListRendererSkin", e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = this.data, e = GlobalConfig.ins().ItemConfig(t.id), i = GlobalConfig.ins().ItemConfig(t.id);
        if (i) {
            var n = "|C:0x00d8ff&T:" + t.name + "| 获得 |C:" + this.QUALITY_COLOR[i.quality] + "&T:" + e.name + " x" + t.count + "|";
            this.showText.textFlow = TextFlowMaker.generateTextFlow(n);
        }
    }, e;
}(BaseItemRender);

__reflect(AnimaListRendererWin.prototype, "AnimaListRendererWin");

window.AnimaListRendererWin = AnimaListRendererWin;

var AnimaResolveItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "AnimaResolveItemSkin", e.touchChildren = !1, e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        if (this.data instanceof ItemData) {
            var t = this.data;
            if (this.itemConfig = t.itemConfig, !this.itemConfig) return;
            this.itemIcon.setData(this.itemConfig), this.count.text = "" + t.count, this.lvLabel.text = this.itemConfig.name;
            var e = t.configID, i = GlobalConfig.ins().LingqiDetailConfig[e];
            if (i) {
                var n = Math.floor(UserBag.getAttrPower(i.attr)) * SubRoles.ins().subRolesLen;
                this.gradeLabel.text = "评分：" + n;
            }
            this.checkBoxs.selected = !1;
            for (var s = AnimaData.ins().checkList, a = s.length, o = 0; a > o; o++) if (s[o] == this.data) {
                this.checkBoxs.selected = !0;
                break;
            }
        }
    }, e;
}(BaseItemRender);

__reflect(AnimaResolveItem.prototype, "AnimaResolveItem");

window.AnimaResolveItem = AnimaResolveItem;

var ArenaRankItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.playerId = 0, e.skinName = "ArenaRankItemSkin", e.initUI(), e;
    }
    return __extends(e, t), e.prototype.initUI = function() {
        this.roleFigure = new SceneRoleFigure(), this.roleCon.addChild(this.roleFigure), 
        this.powerNum || (this.powerNum = BitmapNumber.ins().createNumPic(0, BitmapNumber.numType0, 10), 
        this.powerCon.addChild(this.powerNum)), this.eff = new MovieClip(), this.effCon.addChild(this.eff);
    }, e.prototype.init = function() {
        this.nameTxt.text = "", this.rankTxt.text = "";
    }, e.prototype.open = function() {
        this.btnChangeEnemy.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onBtnClick, this), 
        this.eff.playFile(ResPath.getUIEffectPath(UiEffectType.Type28), -1);
    }, e.prototype.close = function() {
        this.btnChangeEnemy.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.onBtnClick, this), 
        this.playerId = 0, this.eff.stop();
    }, e.prototype.setData = function(t) {
        if (this.sData = t, this.playerId = this.sData.id, this.nameTxt.text = t.name, this.rankTxt.text = "第" + t.rank + "名", 
        1 == t.type) this.roleFigure.setData(t.sex, t.sex + 1, t.sex + 1, 0, t.wingLv, 0, t.gangqiLv, 0, t.zujiLv, 0, t.fabaoLv, 0); else {
            var e = t.sex;
            this.roleFigure.setData(e, e + 1, e + 1, 0, 5, 0, 5, 0, 5, 0, 5, 0);
        }
        this.btnChangeEnemy.visible = !(this.sData.rank == ArenaBaseData.ins().rank), BitmapNumber.ins().changeNum(this.powerNum, t.power, BitmapNumber.numType0, 2);
    }, e.prototype.setRoleData = function(t, e) {
        this.roleFigure.setRole(t), BitmapNumber.ins().changeNum(this.powerNum, e, BitmapNumber.numType0, 2);
    }, e.prototype.onBtnClick = function(t) {
        this.sData ? (Arena.ins().sendChallengePlayer(this.sData.type, this.sData.id, this.sData.rank, 0), 
        console.log("挑战id是" + this.sData.id + " | 挑战名次是" + this.sData.rank)) : UserTips.ins().showTips("系统临时维护中，请稍后再试");
    }, e;
}(BaseItemRender);

__reflect(ArenaRankItem.prototype, "ArenaRankItem");

window.ArenaRankItem = ArenaRankItem;

var ArenaRankItem1 = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "ArenaRankItemSkin1", e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = this.data;
        this.type = t.type, this.id = t.actorID, this.rank = t.rank, this.rankTxt.text = t.rank + "", 
        this.nameTxt.text = t.name, this.powerTxt.text = t.power + "", this.btnCheck.visible = 0 == this.type, 
        this.btnPK.visible = t.rank <= 10;
    }, e;
}(BaseItemRender);

__reflect(ArenaRankItem1.prototype, "ArenaRankItem1");

window.ArenaRankItem1 = ArenaRankItem1;

var ArenaRankTipsItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "ArenaRankTipsItemSkin", e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = this.data;
        this.showText.text = t.rank_max + "-" + t.rank_min;
        var e, i = GlobalConfig.ins().AreanaRewardRankConfig[t.item_index + 1];
        e = i ? t.rank_max == t.rank_min ? "第" + t.rank_max + "名" : "第" + t.rank_max + "-" + t.rank_min + "名" : t.rank_max + "名以后";
        var n = t.reward[0].count, s = t.reward[1].count;
        this.showText.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(LangManager.arena_str1, e, n, s));
    }, e;
}(BaseItemRender);

__reflect(ArenaRankTipsItem.prototype, "ArenaRankTipsItem");

window.ArenaRankTipsItem = ArenaRankTipsItem;

var ArenaReportItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "ArenaReportItemSkin", e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = this.data, e = DateUtils.formatMiniDateTime(t.time), i = new Date(e), n = i.getSeconds() < 10 ? "0" + i.getSeconds() : i.getSeconds() + "", s = i.getMinutes() < 10 ? "0" + i.getMinutes() : i.getMinutes() + "", a = i.getHours() + ":" + s + ":" + n, o = 1 == t.type ? "你" : t.rivalName, r = 1 == t.type ? t.rivalName : "你", h = 1 == t.ret ? "胜利" : "失败", l = -1 == t.ret ? "|C:0x2dd02d&T:不变" : 1 == t.type ? "上升到|C:0x2dd02d&T:" + t.rank : "下降至|C:0x2dd02d&T:" + t.rank;
        this.timeTxt.text = a, this.contentTxt.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(LangManager.arena_str2, o, r, h, l));
    }, e;
}(BaseItemRender);

__reflect(ArenaReportItem.prototype, "ArenaReportItem");

window.ArenaReportItem = ArenaReportItem;

var ArenaRewardItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "ArenaRewardItemSkin", e.list.itemRenderer = ItemBase, e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = this.data;
        this.index = t.index;
        var e = GlobalConfig.ins().AreanaRewardRankUpConfig[t.index];
        this.rankTxt.text = e.rank_min + "名";
        for (var i = 0; i < e.reward.length; i++) e.reward[i].isNoShowName = !0;
        this.list.dataProvider = new eui.ArrayCollection(e.reward), this.isGet.visible = 1 == t.isGet, 
        this.btnGet.visible = !this.isGet.visible, 1 == t.isEnough ? (this.btnGet.enabled = !0, 
        this.btnGet.filters = []) : (this.btnGet.enabled = !1, this.btnGet.filters = [ ColorUtil.colorMat ]);
    }, e;
}(BaseItemRender);

__reflect(ArenaRewardItem.prototype, "ArenaRewardItem");

window.ArenaRewardItem = ArenaRewardItem;

var ArenaScoreItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "ArenaScoreItemSkin", e.list.itemRenderer = ItemBase, e.score || (e.score = BitmapNumber.ins().createNumPic(0, BitmapNumber.numType0, 10), 
        e.scoreCon.addChild(e.score)), e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = this.data;
        this.index = t.index;
        var e = GlobalConfig.ins().AreanaRewardScoredConfig[t.index];
        BitmapNumber.ins().changeNum(this.score, e.score, BitmapNumber.numType0, 2);
        for (var i = 0; i < e.reward.length; i++) e.reward[i].isNoShowName = !0;
        this.list.dataProvider = new eui.ArrayCollection(e.reward), this.isGet.visible = 1 == t.isGet, 
        this.btnGet.visible = !this.isGet.visible, 1 == t.isEnough ? (this.btnGet.enabled = !0, 
        this.btnGet.filters = []) : (this.btnGet.enabled = !1, this.btnGet.filters = [ ColorUtil.colorMat ]);
    }, e;
}(BaseItemRender);

__reflect(ArenaScoreItem.prototype, "ArenaScoreItem");

window.ArenaScoreItem = ArenaScoreItem;

var ArouseFBPanelItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "ArouseFBItemSkin", e.mc = new MovieClip(), e;
    }
    return __extends(e, t), e.prototype.open = function() {}, e.prototype.close = function() {
        TimerManager.ins().remove(this.updataTime, this);
    }, e.prototype.dataChanged = function() {
        var t = this.data, e = ArouseFBData.ins();
        this.index = t.idxFb, this.itemBg.source = "arouse_fbbg0" + t.idxFb + "_png", this.fbType.source = "arouse_fbtitle" + t.idxFb, 
        this.fbIcon.visible = 1 == t.idxFb, this.fbIcon.source = 1 == t.idxFb ? "arouse_fbicon" + t.idxFb + "_png" : "", 
        1 == t.idxFb ? DisplayUtils.removeFromParent(this.mc) : (this.mcCon.addChild(this.mc), 
        this.mc.playFile(ResPath.getLunhuiEquipPath(5), -1)), this.numBg.source = "arouse_fbbg" + t.idxFb;
        var i = 1 == t.idxFb ? e.expNum : e.itemNum;
        this.fbnumTxt.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(LangManager.arouse_str1, i, t.tmsEvr));
        var n = 1 == t.idxFb ? 1e3 * e.expTime : 1e3 * e.itemTime;
        this.totalTime = n + egret.getTimer(), Math.floor((this.totalTime - egret.getTimer()) / 1e3) > 0 ? (TimerManager.ins().remove(this.updataTime, this), 
        TimerManager.ins().doTimer(1e3, 0, this.updataTime, this), this.updataTime()) : this.timeTxt.text = "";
    }, e.prototype.updataTime = function() {
        var t = Math.floor((this.totalTime - egret.getTimer()) / 1e3);
        t > 0 ? t > DateUtils.SECOND_PER_HOUR ? this.timeTxt.text = "冷却：" + DateUtils.getFormatBySecond(t, DateUtils.TIME_FORMAT_1) : this.timeTxt.text = "冷却：" + DateUtils.getFormatBySecond(t, DateUtils.TIME_FORMAT_3) : this.timeTxt.text = "";
    }, e;
}(BaseItemRender);

__reflect(ArouseFBPanelItem.prototype, "ArouseFBPanelItem");

window.ArouseFBPanelItem = ArouseFBPanelItem;

var ArouseGiftPanelItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "ArouseGiftItemSkin", e.list.itemRenderer = ItemBase, e.list.dataProvider = new eui.ArrayCollection(), 
        e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = this.data;
        if (t) {
            this.id = t.idxLib;
            var e = ArouseGiftData.ins();
            if (e) {
                this.list.dataProvider = new eui.ArrayCollection(t.awards), this.discountIcon.source = "shop_discount_0" + t.iscount, 
                this.rulingNum.text = t.cost + "";
                var i = e.listArr[t.idxLib - 1];
                this.buyTxt.text = t.buyMax - i + "", i >= t.buyMax ? (this.getBtn.filters = [ ColorUtil.colorMat ], 
                this.getBtn.enabled = !1) : (this.getBtn.filters = [], this.getBtn.enabled = !0), 
                this.redPoint.visible = t.buyMax > i && Actor.yb >= t.cost && !ArouseGiftPanel.canGet;
            }
        }
    }, e;
}(BaseItemRender);

__reflect(ArouseGiftPanelItem.prototype, "ArouseGiftPanelItem");

window.ArouseGiftPanelItem = ArouseGiftPanelItem;

var ArouseTaskPanelItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "ArouseTaskItemSkin", e.list.dataProvider = new eui.ArrayCollection(), 
        e.list.itemRenderer = ItemBase, e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = this.data;
        if (t) {
            var e = ArouseTaskData.ins();
            if (e) {
                this.list.dataProvider = new eui.ArrayCollection(t.awards);
                var i = e.taskList[t.idxTsk - 1];
                this.title.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(LangManager.arouse_str0, t.taskTitle, i.rate, t.target)), 
                this.isGet.visible = 2 == i.status, this.getBtn.visible = !this.isGet.visible, this.getBtn.label = 0 == i.status ? "前 往" : "领 取", 
                this.redPoint.visible = 1 == i.status, this.id = t.idxTsk, this.status = i.status;
            }
        }
    }, e;
}(BaseItemRender);

__reflect(ArouseTaskPanelItem.prototype, "ArouseTaskPanelItem");

window.ArouseTaskPanelItem = ArouseTaskPanelItem;

var ArtifactConditionItemRenderer = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "ArtifactsItemSkin", e.go.addEventListener(egret.TextEvent.LINK, e.onGo, e), 
        e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = this.data.taskId, e = UserTask.ins().getAchieveByTaskId(t);
        if (e) {
            this.config = UserTask.ins().getAchieveConfById(e.id);
            var i;
            e.value >= this.config.target ? (i = "0x00FF00", this.go.visible = !1, this.complete.visible = !0) : (i = "0xFF0000", 
            this.go.textFlow = new egret.HtmlTextParser().parser("<a href='event:' color=0x00FF00><u>前往</u></a>"), 
            this.go.visible = !0, this.complete.visible = !1, void 0 == this.config.controlTarget && (this.go.visible = !1));
            var n = this.config.name + "(<font color=" + i + ">" + e.value + "</font>/" + this.config.target + ")";
            this.desc.textFlow = new egret.HtmlTextParser().parser(n);
        }
    }, e.prototype.destruct = function() {
        this.go.removeEventListener(egret.TextEvent.LINK, this.onGo, this);
    }, e.prototype.onGo = function() {
        void 0 == this.config.controlTarget ? new Error("配置表没有配跳转界面ID") : (ViewManager.ins().close(this.config.controlTarget[0].toString()), 
        ViewManager.ins().open(this.config.controlTarget[0].toString(), [ this.config.controlTarget[1] ]));
    }, e;
}(BaseItemRender);

__reflect(ArtifactConditionItemRenderer.prototype, "ArtifactConditionItemRenderer");

window.ArtifactConditionItemRenderer = ArtifactConditionItemRenderer;

var ArtifactItemRenderer = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "ArtifactBtnSkin", MessageCenter.addListener(UserBag.ins().postItemAdd, e.updateRedPoint, e), 
        MessageCenter.addListener(UserTask.ins().postTaskChangeData, e.updateRedPoint, e), 
        e;
    }
    return __extends(e, t), e.prototype.open = function() {
        this.eff || (this.eff = new MovieClip(), this.eff.parent || this.selectCon.addChild(this.eff)), 
        this.eff.playFile(ResPath.getUIEffectPath(UiEffectType.Type23), -1);
    }, e.prototype.close = function() {
        this.eff.stop(), DisplayUtils.removeFromParent(this.eff), MessageCenter.ins().removeAll(this);
    }, e.prototype.dataChanged = function() {
        0 == this.data.rank ? this.rank.text = "未激活" : this.data.rank && (this.rank.text = this.data.rank + "阶");
        var t = GlobalConfig.ins().ArtifactsConfig[this.data.id], e = GlobalConfig.ins().ItemConfig(t.activationItem.id);
        this.iconDisplay.source = ResPath.getItemIconPath(e.icon), this.bg.source = "common_quality" + e.quality, 
        this.updateRedPoint();
    }, e.prototype.destruct = function() {
        MessageCenter.ins().removeAll(this);
    }, e.prototype.updateRedPoint = function() {
        var t = Artifact.ins().canRankArtifacts();
        this.redPoint.visible = t[this.data.id];
    }, e;
}(BaseItemRender);

__reflect(ArtifactItemRenderer.prototype, "ArtifactItemRenderer");

window.ArtifactItemRenderer = ArtifactItemRenderer;

var NewShenqiConditionItemRenderer = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "ArtifactsItemSkin", e.go.addEventListener(egret.TextEvent.LINK, e.onGo, e), 
        e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = this.data.taskId, e = UserTask.ins().getAchieveByTaskId(t);
        if (e) {
            this.config = UserTask.ins().getAchieveConfById(e.id);
            var i;
            e.value >= this.config.target ? (i = "0x00FF00", this.go.visible = !1, this.complete.visible = !0) : (i = "0xFF0000", 
            this.go.textFlow = new egret.HtmlTextParser().parser("<a href='event:' color=0x00FF00><u>前往</u></a>"), 
            this.go.visible = !0, this.complete.visible = !1, void 0 == this.config.controlTarget && (this.go.visible = !1));
            var n = this.config.name + "(<font color=" + i + ">" + e.value + "</font>/" + this.config.target + ")";
            this.desc.textFlow = new egret.HtmlTextParser().parser(n);
        }
    }, e.prototype.destruct = function() {
        this.go.removeEventListener(egret.TextEvent.LINK, this.onGo, this);
    }, e.prototype.onGo = function() {
        void 0 == this.config.controlTarget ? new Error("配置表没有配跳转界面ID") : (ViewManager.ins().close(this.config.controlTarget[0].toString()), 
        ViewManager.ins().open(this.config.controlTarget[0].toString(), [ this.config.controlTarget[1] ]));
    }, e;
}(BaseItemRender);

__reflect(NewShenqiConditionItemRenderer.prototype, "NewShenqiConditionItemRenderer");

window.NewShenqiConditionItemRenderer = NewShenqiConditionItemRenderer;

var NewShenqiItemRenderer = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "ArtifactBtnSkin", MessageCenter.addListener(UserBag.ins().postItemAdd, e.updateRedPoint, e), 
        MessageCenter.addListener(UserTask.ins().postTaskChangeData, e.updateRedPoint, e), 
        e;
    }
    return __extends(e, t), e.prototype.open = function() {
        this.eff || (this.eff = new MovieClip(), this.eff.parent || this.selectCon.addChild(this.eff)), 
        this.eff.playFile(ResPath.getUIEffectPath(UiEffectType.Type23), -1);
    }, e.prototype.close = function() {
        this.eff.stop(), DisplayUtils.removeFromParent(this.eff), MessageCenter.ins().removeAll(this);
    }, e.prototype.dataChanged = function() {
        0 == this.data.rank ? this.rank.text = "未激活" : this.data.rank && (this.rank.text = this.data.rank + "阶");
        var t = GlobalConfig.ins().NewShenqiConfig[this.data.id], e = GlobalConfig.ins().ItemConfig(t.activationItem.id);
        this.iconDisplay.source = ResPath.getItemIconPath(e.icon), this.bg.source = "common_quality" + e.quality, 
        this.updateRedPoint();
    }, e.prototype.destruct = function() {
        MessageCenter.ins().removeAll(this);
    }, e.prototype.updateRedPoint = function() {
        var t = Artifact.ins().canRankNewShenqi();
        this.redPoint.visible = t[this.data.id];
    }, e;
}(BaseItemRender);

__reflect(NewShenqiItemRenderer.prototype, "NewShenqiItemRenderer");

window.NewShenqiItemRenderer = NewShenqiItemRenderer;

var DecomposeConsumeItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "SynthesisConsumeItemSkin", e;
    }
    return __extends(e, t), e.prototype.createChildren = function() {
        t.prototype.createChildren.call(this), this.setSkinPart("item", new ItemBase()), 
        this.item.setCountVisible(!1);
    }, e.prototype.dataChanged = function() {
        var t = this.data;
        this.item.data = t, this.updateNum();
    }, e.prototype.updateNum = function() {
        var t = UserBag.ins().getBagGoodsCountById(UserBag.BAG_TYPE_OTHTER, this.data.id);
        this.count.text = t + "", this.count.textColor = t >= this.data.count ? 65280 : 16711680;
    }, e;
}(BaseItemRender);

__reflect(DecomposeConsumeItem.prototype, "DecomposeConsumeItem");

window.DecomposeConsumeItem = DecomposeConsumeItem;

var DecomposeItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "SynthesisItemSkin0", e;
    }
    return __extends(e, t), e.prototype.createChildren = function() {
        t.prototype.createChildren.call(this), this.subList.dataProvider = null, this.subList.itemRenderer = DecomposeSubItem;
    }, e.prototype.open = function() {
        this.clickCon.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onTap, this);
    }, e.prototype.close = function() {
        this.clickCon.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.onTap, this);
    }, e.prototype.onTap = function(t) {
        this.setSelected(!this.getSelected());
    }, e.prototype.setSelected = function(t) {
        this.isSelected = t, this.invalidateState(), MessageCenter.ins().dispatch(SynthesisAssist.DECOMPOSE_SELECTED_MAIN_TAB, this, this.isSelected);
    }, e.prototype.getSelected = function() {
        return this.isSelected;
    }, e.prototype.getCurrentState = function() {
        return this.isSelected ? "down" : "up";
    }, e;
}(BaseItemRender);

__reflect(DecomposeItem.prototype, "DecomposeItem");

window.DecomposeItem = DecomposeItem;

var DecomposeSubItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "SynthesisItemSkin1", e.selectImg.visible = !1, e;
    }
    return __extends(e, t), e.prototype.createChildren = function() {
        t.prototype.createChildren.call(this);
    }, e.prototype.open = function() {
        this.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onTap, this);
    }, e.prototype.close = function() {
        this.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.onTap, this);
    }, e.prototype.onTap = function(t) {}, e.prototype.getCurrentState = function() {
        return MessageCenter.ins().dispatch(SynthesisAssist.DECOMPOSE_SELECTED_ITEM, this.data), 
        t.prototype.getCurrentState.call(this);
    }, e;
}(BaseItemRender);

__reflect(DecomposeSubItem.prototype, "DecomposeSubItem");

window.DecomposeSubItem = DecomposeSubItem;

var SynthesisConsumeItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "SynthesisConsumeItemSkin", e;
    }
    return __extends(e, t), e.prototype.createChildren = function() {
        t.prototype.createChildren.call(this), this.setSkinPart("item", new ItemBase()), 
        this.item.setCountVisible(!1);
    }, e.prototype.dataChanged = function() {
        var t = this.data;
        this.item.data = t, this.updateNum();
    }, e.prototype.updateNum = function() {
        var t = UserBag.ins().getBagGoodsCountById(UserBag.BAG_TYPE_OTHTER, this.data.id);
        this.count.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(LangManager.commonStr28, t >= this.data.count ? "0x00ff00" : "0xff0000", t, this.data.count));
    }, e;
}(BaseItemRender);

__reflect(SynthesisConsumeItem.prototype, "SynthesisConsumeItem");

window.SynthesisConsumeItem = SynthesisConsumeItem;

var SynthesisItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "SynthesisItemSkin0", e;
    }
    return __extends(e, t), e.prototype.createChildren = function() {
        t.prototype.createChildren.call(this), this.subList.dataProvider = null, this.subList.itemRenderer = SynthesisSubItem;
    }, e.prototype.open = function() {
        this.clickCon.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onTap, this);
    }, e.prototype.close = function() {
        this.clickCon.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.onTap, this);
    }, e.prototype.onTap = function(t) {
        this.setSelected(!this.getSelected());
    }, e.prototype.setSelected = function(t) {
        this.isSelected = t, this.invalidateState(), MessageCenter.ins().dispatch(SynthesisAssist.SYNTHESIS_SELECTED_MAIN_TAB, this, this.isSelected);
    }, e.prototype.getSelected = function() {
        return this.isSelected;
    }, e.prototype.getCurrentState = function() {
        return this.isSelected ? "down" : "up";
    }, e;
}(BaseItemRender);

__reflect(SynthesisItem.prototype, "SynthesisItem");

window.SynthesisItem = SynthesisItem;

var SynthesisSubItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "SynthesisItemSkin1", e.selectImg.visible = !1, e;
    }
    return __extends(e, t), e.prototype.createChildren = function() {
        t.prototype.createChildren.call(this);
    }, e.prototype.open = function() {
        this.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onTap, this);
    }, e.prototype.close = function() {
        this.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.onTap, this);
    }, e.prototype.onTap = function(t) {}, e;
}(BaseItemRender);

__reflect(SynthesisSubItem.prototype, "SynthesisSubItem");

window.SynthesisSubItem = SynthesisSubItem;

var EquipChangeItemWin = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e._equipPower = 0, e._totalPower = 0, e.maxAttrNum = 4, e.curRole = 0, e.point = 0, 
        e.skinName = "EquipChangeItemSkim", e.totalPower = BitmapNumber.ins().createNumPic(0, BitmapNumber.numType0), 
        e.powerContainer.addChild(e.totalPower), e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = this.data.config;
        this.handle = t.handle, this.pos = UserBag.ins().getPosItem(t);
        var e = SubRoles.ins().getSubRoleByIndex(this.curRole), i = e.getEquipByIndex(t.itemConfig.subType);
        0 != i.item.configID && i.item.itemConfig && (this.point = i.item.point), 0 == this.data.index ? (this.changeBtn.visible = !1, 
        this.atEquip.visible = !0, this.forgeGroup.visible = !1) : (this.changeBtn.visible = !0, 
        this.atEquip.visible = !1, this.forgeGroup.visible = !0), this.setData(t.itemConfig.type, t.handle, t.configID, t);
    }, e.prototype.setData = function(t, e, i, n) {
        var s, a = n instanceof ItemData ? n : void 0;
        if (this._totalPower = 0, void 0 != e && void 0 == a) {
            if (a = UserBag.ins().getBagGoodsByHandle(t, e), !a) for (var o = SubRoles.ins().subRolesLen, r = 0; o > r; r++) for (var h = SubRoles.ins().getSubRoleByIndex(r), l = h.getEquipLen(), u = 0; l > u; u++) if (h.getEquipByIndex(u).item.handle == e) {
                a = h.getEquipByIndex(u).item;
                break;
            }
            if (!a) for (var p = Shop.ins().shopData, o = p.getShopEquipDataLength(), c = null, r = 0; o > r; r++) c = p.getShopEquipDataByIndex(r), 
            null != c && e == c.item.handle && (a = c.item);
            a || new Error("请检查handle是否传错！"), s = a.itemConfig, i = a.configID;
        } else s = GlobalConfig.ins().ItemConfig(i);
        this.nameLabel.text = s.name, this.nameLabel.textColor = ItemBase.QUALITY_COLOR[s.quality], 
        this.itemIcon.setData(s), (a instanceof ItemData || null != s) && (this.levelKey.text = s.zsLevel > 0 ? "转生：" : "等级：", 
        this.type.text = Role.getEquipNameByType(s.subType), this.lv.text = s.zsLevel > 0 ? s.zsLevel + "转" : s.level + "级", 
        Actor.level < s.level || UserZs.ins().lv < s.zsLevel ? (this.lv.textFlow = TextFlowMaker.generateTextFlow("|C:0xff0000&T:" + this.lv.text + "|"), 
        this.changeBtn.label = "不可穿戴", this.changeBtn.enabled = !1, this.changeBtn.filters = [ ColorUtil.colorMat ]) : (this.lv.textFlow = TextFlowMaker.generateTextFlow("|C:0x00ff00&T:" + this.lv.text + "|"), 
        this.changeBtn.label = "穿戴", this.changeBtn.enabled = !0, this.changeBtn.filters = []));
        var g;
        if (a) g = AttributeData.getEquipAllAttr(a.configID, a, !1); else {
            var d = GlobalConfig.ins().EquipConfig(i);
            g = EquipConfig.getAttr(d);
        }
        for (var f = "", r = 0; r < this.maxAttrNum; r++) {
            var m = g[r];
            if (null != m) {
                var v = AttributeData.getAttrStrByType(m.type);
                f += m.extValue > 0 ? LangManager.getLang(LangManager.commonStr15, v, m.value, m.extValue) : LangManager.getLang(LangManager.commonStr19, v, m.value), 
                f += "\n";
            }
        }
        this.attrBase.text = f, this._equipPower = UserBag.getAttrPower(g), this._totalPower += this._equipPower;
        var y;
        this.point <= a.point ? (y = a.point - this.point, this.score.textFlow = TextFlowMaker.generateTextFlow("C:0x34ff25&T:" + y + "|"), 
        this.arrow.source = "common_upArrow0", this.title.textColor = 3473189) : (y = this.point - a.point, 
        this.score.textFlow = TextFlowMaker.generateTextFlow("C:0xff0000&T:" + y + "|"), 
        this.arrow.source = "common_upArrow1", this.title.textColor = 16711680), BitmapNumber.ins().changeNum(this.totalPower, this._totalPower, BitmapNumber.numType0);
    }, e.prototype.setForge = function(t, e) {
        for (var i = 0, n = 0; 4 > n; n++) {
            switch (n) {
              case ForgeConst.TYPE_BOOST:
                i = t.strengthen;
                break;

              case ForgeConst.TYPE_GEM:
                i = t.gem;
                break;

              case ForgeConst.TYPE_ZHULING:
                i = t.zhuling;
                break;

              case ForgeConst.TYPE_QILING:
                i = t.zhuling;
            }
            if (i > 0) {
                var s = UserForge.ins().getForgeConfigByPos(e, i, n), a = 0;
                a = 3 == n ? Math.floor(this._equipPower * (Number(s.attr) / 100)) : Math.floor(UserBag.getAttrPower(s.attr)), 
                this._totalPower += a;
            }
        }
    }, e;
}(BaseItemRender);

__reflect(EquipChangeItemWin.prototype, "EquipChangeItemWin");

window.EquipChangeItemWin = EquipChangeItemWin;

var BatchItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "BatchItemSkin", e;
    }
    return __extends(e, t), e.prototype.open = function() {
        this.smeltBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onClick, this);
    }, e.prototype.close = function() {
        this.smeltBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.onClick, this);
    }, e.prototype.onClick = function(t) {}, e.prototype.dataChanged = function() {}, 
    e;
}(BaseItemRender);

__reflect(BatchItem.prototype, "BatchItem");

window.BatchItem = BatchItem;

var SmeltSelectItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.translate = {
            hp: AttributeType.atMaxHp,
            atk: AttributeType.atAttack,
            def: AttributeType.atDef,
            res: AttributeType.atRes,
            crit: AttributeType.atCrit,
            tough: AttributeType.atTough
        }, e.skinName = "SmeltSeletctItemSkin", e.touchChildren = !1, e;
    }
    return __extends(e, t), e.prototype.createChildren = function() {
        t.prototype.createChildren.call(this);
    }, e.prototype.dataChanged = function() {
        if (this.data instanceof ItemData) {
            var t = this.data;
            if (this.itemConfig = t.itemConfig, this.arrowIcon.visible = !1, !this.itemConfig) return;
            if (this.itemIcon.setData(this.itemConfig), AdvanceCommonData.ins().isAdvanceEquip(t)) this.arrowIcon.visible = UserBag.ins().checkAdvanceEquipLow(t) ? !1 : !0, 
            this.lvLabel.text = this.itemConfig.name; else if (0 == this.itemConfig.type) if (this.itemConfig.subType == ForgeConst.EQUIP_POS_TO_SUB[EquipPos.DZI]) {
                for (var e = ItemConfig.calculateBagItemScore(t), i = SubRoles.ins().subRolesLen, n = 0; i > n; n++) {
                    var s = SubRoles.ins().getSubRoleByIndex(n);
                    if (!s.getEquipByIndex(EquipPos.DZI).item.itemConfig || e > ItemConfig.calculateBagItemScore(s.getEquipByIndex(EquipPos.DZI).item)) {
                        this.arrowIcon.visible = !0;
                        break;
                    }
                }
                this.lvLabel.text = this.itemConfig.name;
            } else this.lvLabel.text = this.itemConfig.zsLevel ? this.itemConfig.zsLevel + "转" : "lv." + this.itemConfig.level; else this.lvLabel.text = "";
            this.nameLabel.textColor = ItemBase.QUALITY_COLOR[this.itemConfig.quality], this.nameLabel.text = this.itemConfig.name, 
            this.gradeLabel.text = "评分：" + ItemConfig.calculateBagItemScore(t), this.attrLabel.text = AttributeData.getAttrInfoByItemData(t), 
            this.checkBoxs.selected = !1;
        }
    }, e;
}(BaseItemRender);

__reflect(SmeltSelectItem.prototype, "SmeltSelectItem");

window.SmeltSelectItem = SmeltSelectItem;

var SpecialItemChangeItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e._equipPower = 0, e._totalPower = 0, e.maxAttrNum = 4, e.curRole = 0, e.point = 0, 
        e.skinName = "SpecialItemChangeItemSkin", e.totalPower = BitmapNumber.ins().createNumPic(0, BitmapNumber.numType0), 
        e.powerContainer.addChild(e.totalPower), e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = this.data;
        this.pos = UserBag.ins().getPosItem(t.data), 0 == t.index ? (this.changeBtn.visible = !1, 
        this.atEquip.visible = !0, this.forgeGroup.visible = !1) : (this.changeBtn.visible = !0, 
        this.atEquip.visible = !1, this.forgeGroup.visible = !0);
        var e = t.data;
        this.setData(e.itemConfig.type, e.handle, e.configID, e);
    }, e.prototype.setData = function(t, e, i, n) {
        var s, a = n instanceof ItemData ? n : void 0;
        if (this._totalPower = 0, void 0 != e && void 0 == a) {
            if (a = UserBag.ins().getBagGoodsByHandle(t, e), !a) for (var o = SubRoles.ins().subRolesLen, r = 0; o > r; r++) for (var h = SubRoles.ins().getSubRoleByIndex(r), l = h.getEquipLen(), u = 0; l > u; u++) if (h.getEquipByIndex(u).item.handle == e) {
                a = h.getEquipByIndex(u).item;
                break;
            }
            if (!a) for (var p = Shop.ins().shopData, o = p.getShopEquipDataLength(), c = null, r = 0; o > r; r++) c = p.getShopEquipDataByIndex(r), 
            null != c && e == c.item.handle && (a = c.item);
            a || new Error("请检查handle是否传错！"), s = a.itemConfig, i = a.configID;
        } else s = GlobalConfig.ins().ItemConfig(i);
        this.nameLabel.text = s.name, this.nameLabel.textColor = ItemBase.QUALITY_COLOR[s.quality], 
        this.itemIcon.setData(s), (a instanceof ItemData || null != s) && (this.levelKey.text = s.zsLevel > 0 ? "转生：" : "等级：", 
        this.type.text = Role.getEquipNameByType(s.subType), this.lv.text = s.zsLevel > 0 ? s.zsLevel + "转" : s.level + "级", 
        Actor.level < s.level || UserZs.ins().lv < s.zsLevel ? (this.lv.textFlow = TextFlowMaker.generateTextFlow("|C:0xff0000&T:" + this.lv.text + "|"), 
        this.changeBtn.label = "不可穿戴", this.changeBtn.enabled = !1, this.changeBtn.filters = [ ColorUtil.colorMat ]) : (this.lv.textFlow = TextFlowMaker.generateTextFlow("|C:0x00ff00&T:" + this.lv.text + "|"), 
        this.changeBtn.label = "穿戴", this.changeBtn.enabled = !0, this.changeBtn.filters = []));
        var g, d;
        t == ItemConfig.TYPE12 && (d = TianLeiEquitData.ins().equitAttrCfg[i], g = d.attrs);
        for (var f = "", r = 0; r < this.maxAttrNum; r++) {
            var m = g[r];
            if (null != m) {
                var v = AttributeData.getAttrStrByType(m.type);
                f += LangManager.getLang(LangManager.commonStr19, v, m.value), f += "\n";
            }
        }
        this.attrBase.text = f, this._equipPower = UserBag.getAttrPower(g), this._totalPower += this._equipPower;
        var y;
        this.point <= a.point ? (y = a.point - this.point, this.score.textFlow = TextFlowMaker.generateTextFlow("C:0x34ff25&T:" + y + "|"), 
        this.arrow.source = "common_upArrow0", this.title.textColor = 3473189) : (y = this.point - a.point, 
        this.score.textFlow = TextFlowMaker.generateTextFlow("C:0xff0000&T:" + y + "|"), 
        this.arrow.source = "common_upArrow1", this.title.textColor = 16711680), this.score.text = "" + this._totalPower, 
        BitmapNumber.ins().changeNum(this.totalPower, this._totalPower, BitmapNumber.numType0);
    }, e;
}(BaseItemRender);

__reflect(SpecialItemChangeItem.prototype, "SpecialItemChangeItem");

window.SpecialItemChangeItem = SpecialItemChangeItem;

var BetaActivityTab = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.msgList = [ BetaActivity.ins().postBaseInfo, BetaActivity.ins().postBossGrade, BetaActivity.ins().postBaseInfo ], 
        e.skinName = "WelfareHallTabSkin", e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        this.data;
        this.msgList[this.data.id] && MessageCenter.addListener(this.msgList[this.data.id], this.updateRedpoint, this, null), 
        this.updateRedpoint();
    }, e.prototype.open = function() {}, e.prototype.close = function() {
        MessageCenter.ins().removeAll(this);
    }, e.prototype.updateRedpoint = function() {
        var t;
        switch (this.data.id) {
          case 0:
            t = BetaSubData0.ins().getRedPoint();
            break;

          case 1:
            t = BetaSubData1.ins().getRedPoint();
            break;

          case 2:
            t = BetaSubData2.ins().getRedPoint();
        }
        this.redpoint.visible = t;
    }, e;
}(BaseItemRender);

__reflect(BetaActivityTab.prototype, "BetaActivityTab");

window.BetaActivityTab = BetaActivityTab;

var BetaSubItem2 = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "BetaSubItemSkin2", e.tokenList.dataProvider = new eui.ArrayCollection(), 
        e.tokenList.itemRenderer = ItemBase, e.treasure.dataProvider = new eui.ArrayCollection(), 
        e.treasure.itemRenderer = ItemBase, e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = BetaSubData2.ins(), e = this.data;
        this.id = this.data.id;
        var i = t.listArr, n = i[this.id].personNum, s = i[this.id].serviceNum, a = e.personNum, o = e.serviceNum;
        if (this.title.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(LangManager.gem_str0, n, a, s, o)), 
        this.tokenList.dataProvider = new eui.ArrayCollection(e.costList), this.treasure.dataProvider = new eui.ArrayCollection(e.awardList), 
        a > n && o > s) for (var r = 0; r < e.costList.length; r++) t.tokenArr[r].count >= e.costList[r].count ? (this.btnGet.icon = "rebatehall_title1", 
        this.btnGet.enabled = !0, this.btnGet.filters = [], this.redPoint.visible = !0) : (this.btnGet.enabled = !1, 
        this.btnGet.icon = "rebatehall_title2", this.btnGet.filters = [ ColorUtil.colorMat ], 
        this.redPoint.visible = !1); else this.btnGet.icon = "rebatehall_title1", this.btnGet.enabled = !1, 
        this.btnGet.filters = [ ColorUtil.colorMat ], this.redPoint.visible = !1;
    }, e;
}(BaseItemRender);

__reflect(BetaSubItem2.prototype, "BetaSubItem2");

window.BetaSubItem2 = BetaSubItem2;

var BetaSubItem0 = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "BetaSubItemSkin0", e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = this.data;
        this.dayImg.source = "betaactivity_day" + t.day, this.redPoint.visible = BetaSubData0.ins().day >= t.day && 0 == (BetaSubData0.ins().flag >> t.day & 1);
        var e = 1 == (BetaSubData0.ins().flag >> t.day & 1);
        this.imgGet.visible = e;
    }, e;
}(BaseItemRender);

__reflect(BetaSubItem0.prototype, "BetaSubItem0");

window.BetaSubItem0 = BetaSubItem0;

var BetaSubItem1 = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "BetaBoxItemSkin", e.boxMc = new MovieClip(), e.boxMc.x = 55, 
        e.boxMc.y = 46, e.boxMc.scaleX = 1.3, e.boxMc.scaleY = 1.1, e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = this.data;
        this.index = t.day, this.numTxt.text = t.integer + "积分";
        var e = BetaSubData1.ins(), i = 1 == (e.flag >> t.day - 1 & 1), n = e.grade >= t.integer;
        DisplayUtils.removeFromParent(this.boxMc), n && !i && (this.boxMc.playFile(ResPath.getUIEffectPath(UiEffectType.Type27), -1), 
        this.addChild(this.boxMc));
    }, e.prototype.clearMC = function() {
        DisplayUtils.removeFromParent(this.boxMc);
    }, e;
}(BaseItemRender);

__reflect(BetaSubItem1.prototype, "BetaSubItem1");

window.BetaSubItem1 = BetaSubItem1;

var BossItem = function(t) {
    function e() {
        return t.call(this) || this;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.list.itemRenderer = ItemBase;
    }, e.prototype.dataChanged = function() {
        var t, e, i = "", n = "", s = "";
        if (this.data instanceof TeamFubenConfig) {
            var a = this.data;
            e = GlobalConfig.ins().MonstersConfig(a.bossId), a.zsLevel > 0 ? (t = UserZs.ins().lv >= a.zsLevel, 
            n = t ? "23CA23" : "f15a25", i = a.zsLevel + "转开启", s = a.zsLevel + "转") : (t = Actor.level >= a.levelLimit, 
            n = t ? "23CA23" : "f15a25", i = a.levelLimit + "级开启", s = a.levelLimit + "级"), 
            this.levelRequire.text = i, this.bar.visible = !1, this.timeTxt.text = "", this.infoTxt.visible = !1, 
            this.infoTxt0.visible = !1, this.list.dataProvider = new eui.ArrayCollection(a.showItem);
        } else if (this.data instanceof PublicBossInfo) {
            var o = this.data, r = GlobalConfig.ins().PublicBossConfig[o.id];
            this.config = r, this.list.dataProvider = new eui.ArrayCollection(r.desc);
            var h = o.isDie;
            if (this.infoTxt.touchEnabled = !0, this.infoTxt.addEventListener(egret.TextEvent.LINK, this.onLink, this), 
            this.infoTxt0.touchEnabled = !0, this.infoTxt0.addEventListener(egret.TextEvent.LINK, this.onLink, this), 
            r.zsLevel > 0 ? (t = UserZs.ins().lv >= r.zsLevel, n = t ? "23CA23" : "f15a25", 
            i = r.zsLevel + "转开启", s = r.zsLevel + "转") : (t = Actor.level >= r.level, n = t ? "23CA23" : "f15a25", 
            i = r.level + "级开启", s = r.level + "级"), this.levelRequire.text = i, this.infoTxt.textFlow = new egret.HtmlTextParser().parser('争夺：<a href="event:2">' + o.people + "人</a>" + (o.challengeing ? '<font color="#23C42A">（挑战中）</font>' : "")), 
            this.infoTxt0.textFlow = new egret.HtmlTextParser().parser('<u><a href="event:1" color="#00ff00">查看击杀记录</a></u>'), 
            this.infoTxt.visible = !h, this.infoTxt0.visible = h, this.bar.value = o.hp, e = GlobalConfig.ins().MonstersConfig(r.bossId), 
            this.timeTxt.visible = h, this.timeTxt.visible && (this.updateTime(), TimerManager.ins().doTimer(1e3, 0, this.updateTime, this)), 
            this.challengeBtn.visible = !h, this.challengeBtn.name = "publicChallenge", this.challengeBtn.visible) {
                var l = (UserBoss.ins().cdTime - egret.getTimer()) / 1e3;
                o.challengeing && l > 0 ? (this.challengeBtn.enabled = !1, this.challengeBtn.touchEnabled = !1, 
                this.updateCDTime(), TimerManager.ins().doTimer(1e3, 0, this.updateCDTime, this)) : (this.challengeBtn.label = "挑战", 
                this.challengeBtn.enabled = !0, this.challengeBtn.touchEnabled = !0, TimerManager.ins().remove(this.updateCDTime, this));
            }
            this.bar.visible = !0;
        } else if (DailyFubenConfig.isContains(this.data)) {
            var u = this.data;
            if (this.config = u, this.infoTxt0.visible = !1, this.list.dataProvider = new eui.ArrayCollection(u.showItem), 
            u.zsLevel > 0) {
                t = UserZs.ins().lv >= u.zsLevel;
                i = u.zsLevel + "转开启", s = u.zsLevel + "转";
            } else {
                t = Actor.level >= u.levelLimit;
                i = u.levelLimit + "级开启", s = u.levelLimit + "级";
            }
            if (this.levelRequire.text = i, !UserFb.ins().getFbDataById(u.id)) return;
            var p = UserFb.ins().getFbDataById(u.id).getCount(), c = p > 0 ? "#40D016" : "#DFD1B5";
            this.infoTxt.textFlow = new egret.HtmlTextParser().parser('剩余次数：<font color="' + c + '">' + p + "次</font>"), 
            e = GlobalConfig.ins().MonstersConfig(u.bossId);
            var g = [ .3, .6, 0, 0, 0, .3, .6, 0, 0, 0, .3, .6, 0, 0, 0, 0, 0, 0, 1, 0 ];
            this.challengeBtn.filters = p > 0 ? [] : [ new egret.ColorMatrixFilter(g) ], this.challengeBtn.visible = t, 
            this.challengeBtn.name = "pChallenge", this.challengeBtn.enabled = UserFb.ins().getFbDataById(u.id).getCount() > 0, 
            this.challengeBtn.touchEnabled = this.challengeBtn.enabled, this.timeTxt.text = "", 
            this.bar.visible = !1;
        }
        this.barBg.visible = this.bar.visible, e && (this.head.source = "boss_" + e.head + "_png", 
        this.nameTxt.text = s + " " + e.name), this.needLv.visible = !t, this.challengeBtn.visible = this.challengeBtn.visible && t;
    }, e.prototype.updateCDTime = function() {
        var t = (UserBoss.ins().cdTime - egret.getTimer()) / 1e3;
        this.challengeBtn.label = "冷却中（" + t.toFixed(0) + "）", 0 >= t && (this.challengeBtn.label = "挑战", 
        this.challengeBtn.enabled = !0, this.challengeBtn.touchEnabled = !0, TimerManager.ins().remove(this.updateCDTime, this));
    }, e.prototype.updateTime = function() {
        var t = this.data, e = t.reliveTime - egret.getTimer();
        this.timeTxt.text = DateUtils.getFormatBySecond(Math.floor(e / 1e3), 1) + "后重生", 
        0 >= e && (UserBoss.ins().sendBossList(), TimerManager.ins().remove(this.updateTime, this));
    }, e.prototype.onLink = function(t) {
        var e = this.data;
        switch (t.text) {
          case "1":
            UserBoss.ins().sendChallengeRecord(e.id), ViewManager.ins().open(WildBossRecordWin);
            break;

          case "2":
            UserBoss.ins().sendRank(e.id), ViewManager.ins().open(WildBossJoinWin);
        }
    }, e;
}(BaseItemRender);

__reflect(BossItem.prototype, "BossItem");

window.BossItem = BossItem;

var NewTeamItem = function(t) {
    function e() {
        return t.call(this) || this;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.list.itemRenderer = ItemBase, this.arr = new eui.ArrayCollection([ 0, 0, 0 ]), 
        this.list.dataProvider = this.arr, this.challengeBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onTap, this), 
        this.starValue = 0, this.bar.value = this.starValue, this.bar.x = 360, this.bar.y = 132;
    }, e.prototype.removeFromStage = function() {
        t.prototype.removeFromStage.call(this), this.challengeBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.onTap, this);
    }, e.prototype.addFromStage = function() {
        t.prototype.addFromStage.call(this), this.challengeBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onTap, this);
    }, e.prototype.dataChanged = function() {
        var t, e, i = "", n = "", s = "", a = this.data;
        e = GlobalConfig.ins().MonstersConfig(a.bossId), a.zsLevel > 0 ? (t = UserZs.ins().lv >= a.zsLevel, 
        n = t ? "23CA23" : "f15a25", i = a.zsLevel + "转开启", s = a.zsLevel + "转") : (t = Actor.level >= a.levelLimit, 
        n = t ? "23CA23" : "f15a25", i = a.levelLimit + "级开启", s = a.levelLimit + "级"), 
        this.levelRequire.text = i, this.bar.visible = !1, this.timeTxt.text = "", this.infoTxt.visible = !1, 
        this.infoTxt0.visible = !1, this.arr.replaceAll(a.showItem.concat()), e && (this.head.source = "boss_" + e.head + "_png", 
        this.nameTxt.text = s + " " + e.name), this.needLv.visible = !t, this.challengeBtn.visible = t, 
        GameServer.serverOpenDay >= GlobalConfig.ins().TeamFubenBase.sweepOpenDay ? (this.challengeBtn.label = "扫荡", 
        this.isSaoDang = !0) : (this.challengeBtn.label = "挑战", this.isSaoDang = !1);
    }, e.prototype.onTap = function(t) {
        return this.isSaoDang ? void (UserFb.ins().teamFbCanChallengeCount > 0 ? this.starSaoDang() : UserTips.ins().showTips("|C:0xff0000&T:剩余挑战次数不足|")) : void (GameMap.canEnterFb() && (UserFb.ins().teamFbCanChallengeCount > 0 ? (UserFb.ins().curTeamFbId = this.data.id, 
        ViewManager.ins().open(NewTeamChoosePanel)) : UserTips.ins().showTips(LangManager.commonStr36)));
    }, e.prototype.starSaoDang = function() {
        TimerManager.ins().doTimer(50, 20, this.refushBar, this, this.overPlay, this), this.bar.visible = !0, 
        this.bar.labelFunction = function() {
            return "扫荡中";
        };
    }, e.prototype.refushBar = function() {
        this.challengeBtn.enabled = !1, this.starValue += 5, this.bar.value = this.starValue;
    }, e.prototype.overPlay = function() {
        0 != this.starValue && (this.bar.visible = !1, this.challengeBtn.enabled = !0, this.starValue = 0, 
        UserFb.ins().sendTeamFbSaoDang(this.data.id));
    }, e;
}(BaseItemRender);

__reflect(NewTeamItem.prototype, "NewTeamItem");

window.NewTeamItem = NewTeamItem;

var PersonalBossItem = function(t) {
    function e() {
        return t.call(this) || this;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.list.itemRenderer = ItemBase, this.arr = new eui.ArrayCollection([ 0, 0, 0 ]), 
        this.list.dataProvider = this.arr;
        var t = [ .3, .6, 0, 0, 0, .3, .6, 0, 0, 0, .3, .6, 0, 0, 0, 0, 0, 0, 1, 0 ];
        this.filterArr = [ new egret.ColorMatrixFilter(t) ], this.starValue = 0, this.bar.value = this.starValue, 
        this.bar.x = 360, this.bar.y = 132;
    }, e.prototype.dataChanged = function() {
        var t, e, i = "", n = "", s = this.data;
        if (this.config = s, this.infoTxt0.visible = !1, this.arr.replaceAll(s.showItem.concat()), 
        s.zsLevel > 0) {
            t = UserZs.ins().lv >= s.zsLevel;
            i = s.zsLevel + "转开启", n = s.zsLevel + "转";
        } else {
            t = Actor.level >= s.levelLimit;
            i = s.levelLimit + "级开启", n = s.levelLimit + "级";
        }
        if (this.levelRequire.text = i, UserFb.ins().getFbDataById(s.id)) {
            var a = UserFb.ins().getFbDataById(s.id).getCount(), o = a > 0 ? "#40D016" : "#DFD1B5";
            this.infoTxt.textFlow = new egret.HtmlTextParser().parser('剩余次数：<font color="' + o + '">' + a + "次</font>"), 
            e = GlobalConfig.ins().MonstersConfig(s.bossId), GameServer.serverOpenDay >= GlobalConfig.ins().DailyFubenCommonConfig.sweepOpenDay && UserFb.ins().getIsFbPass(s.id) ? this.challengeBtn.label = "扫荡" : this.challengeBtn.label = "挑战", 
            this.challengeBtn.filters = a > 0 ? [] : this.filterArr, this.challengeBtn.visible = t, 
            this.challengeBtn.name = "pChallenge", this.challengeBtn.enabled = UserFb.ins().getFbDataById(s.id).getCount() > 0, 
            this.challengeBtn.touchEnabled = this.challengeBtn.enabled, this.timeTxt.text = "", 
            this.bar.visible = !1, e && (this.head.source = "boss_" + e.head + "_png", this.nameTxt.text = n + " " + e.name), 
            this.needLv.visible = !t, this.challengeBtn.visible = this.challengeBtn.visible && t;
        }
    }, e.prototype.updateCDTime = function() {
        var t = (UserBoss.ins().cdTime - egret.getTimer()) / 1e3;
        this.challengeBtn.label = "冷却中（" + t.toFixed(0) + "）", 0 >= t && (this.challengeBtn.label = "挑战", 
        this.challengeBtn.enabled = !0, this.challengeBtn.touchEnabled = !0, TimerManager.ins().remove(this.updateCDTime, this));
    }, e.prototype.updateTime = function() {
        var t = this.data, e = t.reliveTime - egret.getTimer();
        this.timeTxt.text = DateUtils.getFormatBySecond(Math.floor(e / 1e3), 1) + "后重生", 
        0 >= e && (UserBoss.ins().sendBossList(), TimerManager.ins().remove(this.updateTime, this));
    }, e.prototype.onLink = function(t) {
        var e = this.data;
        switch (t.text) {
          case "1":
            UserBoss.ins().sendChallengeRecord(e.id), ViewManager.ins().open(WildBossRecordWin);
            break;

          case "2":
            UserBoss.ins().sendRank(e.id), ViewManager.ins().open(WildBossJoinWin);
        }
    }, e.prototype.starSaoDang = function() {
        TimerManager.ins().doTimer(50, 20, this.refushBar, this, this.overPlay, this), this.bar.visible = !0, 
        this.bar.labelFunction = function() {
            return "扫荡中";
        };
    }, e.prototype.refushBar = function() {
        this.challengeBtn.enabled = !1, this.starValue += 5, this.bar.value = this.starValue;
    }, e.prototype.overPlay = function() {
        0 != this.starValue && (this.bar.visible = !1, this.challengeBtn.enabled = !0, this.starValue = 0, 
        UserFb.ins().sendBossSaoDang(this.config.id));
    }, e;
}(BaseItemRender);

__reflect(PersonalBossItem.prototype, "PersonalBossItem");

window.PersonalBossItem = PersonalBossItem;

var PublicBossItem = function(t) {
    function e() {
        return t.call(this) || this;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        this.list.itemRenderer = ItemBase, this.arr = new eui.ArrayCollection([ 0, 0, 0 ]), 
        this.list.dataProvider = this.arr, this.infoTxt.touchEnabled = !0, this.infoTxt.addEventListener(egret.TextEvent.LINK, this.onLink, this), 
        this.infoTxt0.touchEnabled = !0, this.infoTxt0.addEventListener(egret.TextEvent.LINK, this.onLink, this), 
        this.infoTxt0.textFlow = new egret.HtmlTextParser().parser('<u><a href="event:1" color="#00ff00">查看击杀记录</a></u>');
    }, e.prototype.close = function() {
        TimerManager.ins().removeAll(this);
    }, e.prototype.dataChanged = function() {
        var t, e, i = "", n = "", s = "", a = this.data, o = GlobalConfig.ins().PublicBossConfig[a.id];
        this.config = o, this.arr.replaceAll(o.desc.concat());
        var r = a.isDie;
        if (o.zsLevel > 0 ? (t = UserZs.ins().lv >= o.zsLevel, n = t ? "23CA23" : "f15a25", 
        i = o.zsLevel + "转开启", s = o.zsLevel + "转") : (t = Actor.level >= o.level, n = t ? "23CA23" : "f15a25", 
        i = o.level + "级开启", s = o.level + "级"), this.levelRequire.text = i, this.infoTxt.textFlow = new egret.HtmlTextParser().parser('争夺：<a href="event:2">' + a.people + "人</a>" + (a.challengeing ? '<font color="#23C42A">（挑战中）</font>' : "")), 
        this.infoTxt.visible = !r, this.infoTxt0.visible = r, this.bar.value = a.hp, e = GlobalConfig.ins().MonstersConfig(o.bossId), 
        this.timeTxt.visible = r, this.timeTxt.visible && (this.updateTime(), TimerManager.ins().isExists(this.updateTime, this) || TimerManager.ins().doTimer(1e3, 0, this.updateTime, this)), 
        this.challengeBtn.visible = !r, this.challengeBtn.name = "publicChallenge", this.challengeBtn.visible) {
            var h = (UserBoss.ins().cdTime - egret.getTimer()) / 1e3;
            a.challengeing && h > 0 ? (this.challengeBtn.enabled = !1, this.challengeBtn.touchEnabled = !1, 
            this.updateCDTime(), TimerManager.ins().isExists(this.updateCDTime, this) || TimerManager.ins().doTimer(1e3, 0, this.updateCDTime, this)) : (this.challengeBtn.label = "挑战", 
            this.challengeBtn.enabled = !0, this.challengeBtn.touchEnabled = !0);
        }
        this.bar.visible = !0, e && (this.head.source = "boss_" + e.head + "_png", this.nameTxt.text = s + " " + e.name), 
        this.needLv.visible = !t, this.challengeBtn.visible = this.challengeBtn.visible && t;
    }, e.prototype.updateCDTime = function() {
        if (this.challengeBtn.enabled) return void TimerManager.ins().remove(this.updateCDTime, this);
        var t = (UserBoss.ins().cdTime - egret.getTimer()) / 1e3;
        this.challengeBtn.label = "冷却中（" + t.toFixed(0) + "）", 0 >= t && (this.challengeBtn.label = "挑战", 
        this.challengeBtn.enabled = !0, this.challengeBtn.touchEnabled = !0, TimerManager.ins().remove(this.updateCDTime, this));
    }, e.prototype.updateTime = function() {
        if (!this.timeTxt.visible) return void TimerManager.ins().remove(this.updateTime, this);
        var t = this.data, e = t.reliveTime - egret.getTimer();
        this.timeTxt.text = DateUtils.getFormatBySecond(Math.floor(e / 1e3), 1) + "后重生", 
        0 >= e && TimerManager.ins().remove(this.updateTime, this);
    }, e.prototype.onLink = function(t) {
        var e = this.data;
        switch (t.text) {
          case "1":
            UserBoss.ins().sendChallengeRecord(e.id), ViewManager.ins().open(WildBossRecordWin);
            break;

          case "2":
            UserBoss.ins().sendRank(e.id), ViewManager.ins().open(WildBossJoinWin);
        }
    }, e;
}(BaseItemRender);

__reflect(PublicBossItem.prototype, "PublicBossItem");

window.PublicBossItem = PublicBossItem;

var WildBossJoinItem = function(t) {
    function e() {
        return t.call(this) || this;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        this.bg.visible = this.itemIndex % 2 == 0, this.data[3] ? this.txt0.text = this.data[0] : this.txt0.text = this.itemIndex + 1 + "", 
        this.txt1.text = this.data[1], this.txt2.text = this.data[2];
    }, e;
}(BaseItemRender);

__reflect(WildBossJoinItem.prototype, "WildBossJoinItem");

window.WildBossJoinItem = WildBossJoinItem;

var PubBossChallengeItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "RemindInfoSkin", e.checkBoxs.label = LangManager.publicBossStr0, 
        e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = this.data, e = GlobalConfig.ins().PublicBossConfig[t.id];
        this.checkBoxs.visible = e.level <= Actor.level, e.level <= Actor.level && e.zsLevel <= UserZs.ins().lv ? (this.checkBoxs.visible = e.level <= Actor.level, 
        this.checkBoxs.selected = UserBoss.ins().getChallengeByIndex(this.itemIndex)) : this.checkBoxs.visible = !1, 
        this.txt.visible = !this.checkBoxs.visible, this.checkBoxs.name = t.id - 1 + "";
        var i = GlobalConfig.ins().MonstersConfig(e.bossId);
        this.bossName.text = i.name, this.levelShow.text = e.zsLevel > 0 ? e.zsLevel + "阶" : e.level + "级";
    }, e;
}(BaseItemRender);

__reflect(PubBossChallengeItem.prototype, "PubBossChallengeItem");

window.PubBossChallengeItem = PubBossChallengeItem;

var WuShuangBossItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "WuShuangBossItemSkin", e.imgSelect.visible = !1, e.touchEnabled = !0, 
        e.touchChildren = !1, e;
    }
    return __extends(e, t), e.prototype.open = function() {
        this.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onClick, this);
    }, e.prototype.close = function() {
        this.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.onClick, this), TimerManager.ins().remove(this.updateTime, this);
    }, e.prototype.dataChanged = function() {
        this.bossId = this.data;
        var t = GlobalConfig.ins().WuShuangBossBossCfg[this.bossId], e = WuShuangBossData0.ins().getBossData(this.bossId);
        e && (this.bossNameTxt.text = t.name, TimerManager.ins().remove(this.updateTime, this), 
        0 == t.levelReq.min.zsLevel && Actor.level < t.levelReq.min.level || UserZs.ins().lv < t.levelReq.min.zsLevel ? (this.refreshTimeTxt.text = UserZs.ins().lv < t.levelReq.min.zsLevel ? t.levelReq.min.zsLevel + "转可进" : Actor.level < t.levelReq.min.level ? t.levelReq.min.level + "级可进" : "", 
        this.refreshTimeTxt.textColor = 16652572) : e.time > 0 ? (TimerManager.ins().doTimer(500, 0, this.updateTime, this), 
        this.updateTime(), this.refreshTimeTxt.textColor = 16652572) : (this.refreshTimeTxt.text = "已刷新", 
        this.refreshTimeTxt.textColor = 15457982), this.updateSelect(WuShuangBoss.ins().selectBossId));
    }, e.prototype.updateTime = function() {
        var t = WuShuangBossData0.ins().getBossData(this.bossId), e = Math.floor((t.time - egret.getTimer()) / 1e3);
        return 0 > e ? (this.refreshTimeTxt.text = "已刷新", this.refreshTimeTxt.textColor = 15457982, 
        TimerManager.ins().remove(this.updateTime, this), t && (t.time = 0), void WuShuangBoss.ins().postRefreshBossTime()) : void (this.refreshTimeTxt.text = DateUtils.getFormatBySecond(e, DateUtils.TIME_FORMAT_1));
    }, e.prototype.updateSelect = function(t) {
        this.imgSelect.visible = t == this.bossId;
    }, e.prototype.onClick = function(t) {
        WuShuangBoss.ins().postSelectBossItem(this.bossId);
    }, e;
}(BaseItemRender);

__reflect(WuShuangBossItem.prototype, "WuShuangBossItem");

window.WuShuangBossItem = WuShuangBossItem;

var WuShuangBossMainItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "WuShuangBossMainItemSkin", e.bossList.dataProvider = null, 
        e.bossList.itemRenderer = WuShuangBossItem, e;
    }
    return __extends(e, t), e.prototype.open = function() {}, e.prototype.close = function() {}, 
    e.prototype.dataChanged = function() {
        var t = this.data[0], e = GlobalConfig.ins().WuShuangBossBossCfg[t];
        this.bossNameImg.source = "boss_wushuang_title" + e.typevalue, this.bossList.dataProvider = new eui.ArrayCollection(this.data);
    }, e;
}(BaseItemRender);

__reflect(WuShuangBossMainItem.prototype, "WuShuangBossMainItem");

window.WuShuangBossMainItem = WuShuangBossMainItem;

var WuShuangGuishuRewardItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "WuShuangGuishuRewardSkin", e.setSkinPart("item", new ItemBase()), 
        e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = this.data;
        this.item.data = t.item, this.img.visible = 0 != t.type, this.img.source = 1 == t.type ? "boss_title6" : "boss_title5";
    }, e;
}(BaseItemRender);

__reflect(WuShuangGuishuRewardItem.prototype, "WuShuangGuishuRewardItem");

window.WuShuangGuishuRewardItem = WuShuangGuishuRewardItem;

var WuShuangSceneItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "WorldBossSceneItemSkin", e.bar = new CoolingQueueMcForCircle(e.hpBar, 90), 
        e;
    }
    return __extends(e, t), e.prototype.open = function() {
        this.headBtn.addEventListener(egret.TouchEvent.TOUCH_BEGIN, this.onClick, this);
    }, e.prototype.close = function() {
        this.headBtn.removeEventListener(egret.TouchEvent.TOUCH_BEGIN, this.onClick, this), 
        this.removeeff();
    }, e.prototype.onClick = function(t) {
        Actor.handle == this.data ? UserTips.ins().showTips("你不能攻击自己") : EntityManager.ins().getEntityByHandle(this.data) ? WuShuangBoss.ins().sendAttack(this.data) : UserTips.ins().showTips("敌人已死亡");
    }, e.prototype.setHp = function(t) {
        var e;
        if (t) {
            e = t.infoModel;
            var i = (t.getHP() / t.getMaxHP() * 100, t.getHP() / t.getMaxHP() * 360);
            this.bar.setProgress(i, 360);
        } else this.bar.setProgress(0, 100);
    }, e.prototype.addeff = function() {
        this.mc || (this.mc = new MovieClip(), this.mc.playFile(ResPath.getUIEffectPath(UiEffectType.Type28), -1), 
        this.mcCon.addChild(this.mc));
    }, e.prototype.removeeff = function() {
        this.mc && (DisplayUtils.removeFromParent(this.mc), this.mc.stop(), this.mc = null);
    }, e.prototype.dataChanged = function() {
        if (isNaN(this.data)) this.removeeff(); else {
            var t = EntityManager.ins().getEntityByHandle(this.data);
            t || (t = EntityManager.ins().getEntityBymasterhHandle(this.data));
            var e = void 0;
            t && (e = t.infoModel, this.guildNameTxt.text = e.guildName, this.nameTxt.text = e.name, 
            this.headBtn.icon = ResPath.getHeadIcon(e.sex, 1)), this.setHp(t), !e || CustomEnemyManager.ins().curEnemyHandle != e.handle && CustomEnemyManager.ins().curEnemyHandle != e.masterHandle ? this.removeeff() : this.addeff();
        }
    }, e;
}(BaseItemRender);

__reflect(WuShuangSceneItem.prototype, "WuShuangSceneItem");

window.WuShuangSceneItem = WuShuangSceneItem;

var ChatEmjioItemer = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "ChatEmjioItemSkin", e;
    }
    return __extends(e, t), e.prototype.open = function() {
        this.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onTouch, this);
    }, e.prototype.close = function() {
        this.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.onTouch, this);
    }, e.prototype.onTouch = function(t) {
        Chat.ins().postEmjioStr("#" + DataUtil.addZero(this.itemIndex.toString(), 2) + "#");
    }, e.prototype.dataChanged = function() {
        this.face.source = "chat_face" + DataUtil.addZero(this.itemIndex.toString(), 2);
    }, e;
}(BaseItemRender);

__reflect(ChatEmjioItemer.prototype, "ChatEmjioItemer");

window.ChatEmjioItemer = ChatEmjioItemer;

var ChatGuildItemRender = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "ChatGuildItemSkin", e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        var e = this;
        t.prototype.childrenCreated.call(this), this.addEventListener(egret.TouchEvent.TOUCH_TAP, function() {
            e.data.roleId && e.group_friend && e.data.roleId != Actor.actorID && (e.group_friend.visible = !e.group_friend.visible), 
            MessageCenter.ins().dispatch(Friends.CLOSS_FRIEND_LIST_BUTTON, e);
        }, this), this.btn_friend.addEventListener(egret.TouchEvent.TOUCH_TAP, function() {
            Friends.ins().sendAddFriend(e.data.roleId, e.data.name), e.closeFriendGroup();
        }, this), this.btn_blackList.addEventListener(egret.TouchEvent.TOUCH_TAP, function() {
            Friends.ins().sendAddBlackList(e.data.roleId, e.data.name), e.closeFriendGroup();
        }, this), MessageCenter.ins().addListener(Friends.CLOSS_FRIEND_LIST_BUTTON, this.check, this), 
        this.group_friend && (this.group_friend.visible = !1), this.showText.text = "", 
        this.richText = new RichText(), this.richText.y = this.showText.y, this.addChildAt(this.richText, this.numChildren - 2);
    }, e.prototype.check = function(t) {
        t != this && this.group_friend && (this.group_friend.visible = !1);
    }, e.prototype.open = function() {
        MessageCenter.ins().addListener(Friends.CLOSS_FRIEND_LIST_BUTTON, this.check, this);
    }, e.prototype.close = function() {
        MessageCenter.ins().removeAll(this);
    }, e.prototype.setProp = function() {
        this.richText.setProp(this.showText.width - 25, 18, this.showText.textColor, this.showText.lineSpacing);
    }, e.prototype.dataChanged = function() {
        if (this.data instanceof GuildMessageInfo) {
            var t = this.data;
            this.head.source = t.sex ? ResPath.getHeadIcon(t.sex, 2) : ResPath.getHeadIcon(0, 2), 
            this.sexImg.source = Chat.ins().getSexIcon(t.sex, 1), this.monthcard.visible = 1 == t.monthCard;
            var e = ("|C:0x01883d&T:[" + GuildLanguage.guildOffice[t.office] + "]|", ""), i = "";
            if (1 == t.type) {
                e = "|C:0xEED9B5&T:" + t.content + "|", this.playerName.visible = !0, this.officeName.visible = !0;
                var n = GuildLanguage.guildOffice[t.office], s = GuildLanguage.guildOfficeColor[t.office], a = "|C:0x" + s + "&T:[" + n + "]|";
                this.officeName.textFlow = TextFlowMaker.generateTextFlow(a), this.officeName.$setStroke(2), 
                this.playerName.text = t.name, i = t.name;
            } else e = "|C:0xD006F6&T:[宗门]||C:0xEED9B5&T:" + t.content + "|", this.playerName.visible = !1, 
            this.officeName.visible = !1;
            this.setProp(), this.richText.setText(e, i), this.richText.x = 15 + this.headBg.width + 20, 
            t.roleId == Actor.actorID ? this.currentState = "self" : this.currentState = "other", 
            t.vipLevel > 0 ? (this.vipLv || (this.vipLv = BitmapNumber.ins().createNumPic(t.vipLevel, "num4", 5), 
            this.vipLvCon.addChild(this.vipLv)), BitmapNumber.ins().changeNum(this.vipLv, t.vipLevel, "num4", 5), 
            this.vipImg.visible = !0, this.vipImg.source = Chat.ins().getVipIcon(t.vipLevel, 1), 
            this.vipLvCon.visible = !1) : (this.vipImg.visible = !1, this.vipLvCon.visible = !1), 
            this.selected || this.group_friend && (this.group_friend.visible = !1);
            var o = this.monthcard.x;
            this.monthcard.visible && (o += this.monthcard.width + 1), this.vipImg.visible && (this.vipImg.x = o, 
            o = this.vipImg.x + this.vipImg.width + 1), this.playerName.x = o, this.officeName.x = this.playerName.x + this.playerName.width + 1, 
            o = this.officeName.x + this.officeName.width + 1, this.sexImg.x = o, this.sexImg.visible = !1;
        }
    }, e.prototype.closeFriendGroup = function() {
        this.group_friend && (this.group_friend.visible = !1);
    }, e;
}(BaseItemRender);

__reflect(ChatGuildItemRender.prototype, "ChatGuildItemRender");

window.ChatGuildItemRender = ChatGuildItemRender;

var ChatListItemRenderer = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "ChatItemSkin", e;
    }
    return __extends(e, t), e.prototype.setProp = function() {
        this.richText.setProp(this.showText.width - 25, 18, this.showText.textColor, this.showText.lineSpacing);
    }, e.prototype.childrenCreated = function() {
        var e = this;
        t.prototype.childrenCreated.call(this), this.addEventListener(egret.TouchEvent.TOUCH_TAP, function() {
            e.group_friend && e.data.id != Actor.actorID && (e.group_friend.visible = !e.group_friend.visible), 
            MessageCenter.ins().dispatch(Friends.CLOSS_FRIEND_LIST_BUTTON, e);
        }, this), this.btn_friend.addEventListener(egret.TouchEvent.TOUCH_TAP, function() {
            Friends.ins().sendAddFriend(e.data.id, e.data.name), e.closeFriendGroup();
        }, this), this.btn_blackList.addEventListener(egret.TouchEvent.TOUCH_TAP, function() {
            Friends.ins().sendAddBlackList(e.data.id, e.data.name), e.closeFriendGroup();
        }, this), MessageCenter.ins().addListener(Friends.CLOSS_FRIEND_LIST_BUTTON, this.check, this), 
        this.group_friend && (this.group_friend.visible = !1), this.richText = new RichText(), 
        this.richText.y = this.showText.y, this.addChildAt(this.richText, this.numChildren - 2);
    }, e.prototype.check = function(t) {
        t != this && this.group_friend && (this.group_friend.visible = !1);
    }, e.prototype.open = function() {
        MessageCenter.ins().addListener(Friends.CLOSS_FRIEND_LIST_BUTTON, this.check, this);
    }, e.prototype.close = function() {
        MessageCenter.ins().removeAll(this);
    }, e.prototype.dataChanged = function() {
        var t = this.data;
        Actor.actorID;
        this.nameLabel.text = "S" + t.svid + "." + t.name, this.head.source = ResPath.getHeadIcon(t.sex, 2), 
        this.sexImg.source = Chat.ins().getSexIcon(t.sex, 1), t.id == Actor.actorID ? this.currentState = "self" : this.currentState = "other", 
        this.monthcard.visible = 1 == t.monthCard;
        var e = "|C:0xeed9b5&T:" + t.str + "|", i = t.name;
        this.setProp(), this.richText.setText(e, i), this.richText.x = 15 + this.headBg.width + 20, 
        t.vip > 0 ? (this.vipLv || (this.vipLv = BitmapNumber.ins().createNumPic(t.vip, "num4", 5), 
        this.vipLvCon.addChild(this.vipLv)), BitmapNumber.ins().changeNum(this.vipLv, t.vip, "num4", 5), 
        this.vipImg.source = Chat.ins().getVipIcon(t.vip, 1), this.vipImg.visible = !0, 
        this.vipLvCon.visible = !1) : (this.vipImg.visible = !1, this.vipLvCon.visible = !1), 
        this.selected || this.group_friend && (this.group_friend.visible = !1);
        var n = this.monthcard.x;
        this.monthcard.visible && (n += this.monthcard.width + 1), this.vipImg.visible && (this.vipImg.x = n, 
        n = this.vipImg.x + this.vipImg.width + 1), this.nameLabel.x = n, n = this.nameLabel.x + this.nameLabel.width + 1, 
        this.sexImg.x = n, this.sexImg.visible = !1;
    }, e.prototype.closeFriendGroup = function() {
        this.group_friend && (this.group_friend.visible = !1);
    }, e;
}(BaseItemRender);

__reflect(ChatListItemRenderer.prototype, "ChatListItemRenderer");

window.ChatListItemRenderer = ChatListItemRenderer;

var ChatListItemRenderer2 = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.richText = new RichText(), e.addChild(e.richText), e;
    }
    return __extends(e, t), e.prototype.setProp = function() {
        this.parent.parent.parent instanceof ChatSceneWin ? this.richText.setProp(Chat.ins().itemSceneWidth, 18) : this.richText.setProp(Chat.ins().itemWidth, 18);
    }, e.prototype.dataChanged = function() {
        var t = "", e = "";
        if (this.data instanceof ChatInfoData) {
            var i = this.data, n = 1 == i.monthCard ? "#92#" : "", s = ("|C:0xffa810&T:" + i.vip + "|", 
            i.vip > 0 ? "" + n + Chat.ins().getVipIcon(i.vip) : ""), a = 1 != this.data.channel ? "世界" : "宗门", o = 1 != this.data.channel ? "0x8af729" : "0x8bf07e", r = Chat.ins().getSexIcon(i.sex);
            t = i.name != Actor.myName ? "|C:" + o + "&T:[" + a + "] ||C:0xfffad8&T:[S" + i.svid + "." + i.name + r + "]|" + s + "：|C:0xfffad8&T:" + i.str + "|" : "|C:" + o + "&T:[" + a + "] ||C:0x7fc7ee&T:[S" + i.svid + "." + i.name + r + "]|" + s + "：|C:0x7fc7ee&T:" + i.str + "|", 
            e = i.name;
        } else if (this.data instanceof ChatSystemData) {
            var h = this.data;
            t = "|C:0xffa641&T:[公告] ||C:0xEED9B5&T:" + h.str + "|";
        } else if (this.data instanceof GuildMessageInfo) {
            var l = this.data, n = 1 == l.monthCard ? "#92#" : "", s = ("|C:0xffa810&T:" + l.vipLevel + "|", 
            l.vipLevel > 0 ? "" + n + Chat.ins().getVipIcon(l.vipLevel) : ""), r = l.name ? Chat.ins().getSexIcon(l.sex) : "";
            t = l.name != Actor.myName ? "|C:0x8bf07e&T:[宗门] ||C:0xfffad8&T:[" + (l.name ? l.name : "公告") + r + "]|" + s + "：|C:0xfffad8&T:" + l.content + "|" : "|C:0x8bf07e&T:[宗门] ||C:0x7fc7ee&T:[" + l.name + r + "]|" + s + "：|C:0x7fc7ee&T:" + l.content + "|", 
            e = l.name;
        }
        this.setProp(), this.richText.setText(t, e);
    }, e;
}(BaseItemRender);

__reflect(ChatListItemRenderer2.prototype, "ChatListItemRenderer2");

window.ChatListItemRenderer2 = ChatListItemRenderer2;

var ChatSystemItemRenderer = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "SysMesItemSkin", e.richText = new RichText(), e.addChild(e.richText), 
        e.richText.x = e.showText.x, e.richText.y = e.showText.y, e;
    }
    return __extends(e, t), e.prototype.setProp = function() {
        this.richText.setProp(this.showText.width - 25, 18, this.showText.textColor, this.showText.lineSpacing);
    }, e.prototype.dataChanged = function() {
        var t;
        1 == this.data.type ? (t = "|C:0xFFFAD8&T:" + this.data.str + "|", this.type.source = "chat_bg01") : (t = this.data.str, 
        this.type.source = "chat_bg02"), this.setProp(), this.richText.setText(t, "");
    }, e;
}(BaseItemRender);

__reflect(ChatSystemItemRenderer.prototype, "ChatSystemItemRenderer");

window.ChatSystemItemRenderer = ChatSystemItemRenderer;

var ChiJiResultItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "ChiJiZhanKuangItemSkin", e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = this.data;
        this.nameTxt.text = t.name, this.rankTxt.text = t.rank + "", this.scoreTxt.text = t.score + "";
    }, e;
}(BaseItemRender);

__reflect(ChiJiResultItem.prototype, "ChiJiResultItem");

window.ChiJiResultItem = ChiJiResultItem;

var ChiJiRewardItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "ChiJiRewardItemSkin", e.rewardList.itemRenderer = ItemBase, 
        e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = this.data;
        if (t.id <= 3) this.rankImg.visible = !0, this.rankTxt.visible = !1, this.rankImg.source = "rank_num" + (t.id - 1); else {
            this.rankImg.visible = !1, this.rankTxt.visible = !0;
            var e = void 0;
            e = t.rank_min == t.rank_max ? "第" + t.rank_min + "名" : "第" + t.rank_min + "-" + t.rank_max + "名", 
            this.rankTxt.text = e;
        }
        for (var i = 0; i < t.reward.length; i++) t.reward[i].isNoShowName = !0;
        this.rewardList.dataProvider = new eui.ArrayCollection(t.reward);
    }, e;
}(BaseItemRender);

__reflect(ChiJiRewardItem.prototype, "ChiJiRewardItem");

window.ChiJiRewardItem = ChiJiRewardItem;

var ChiJiRewardItem1 = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "PersonRewardRendererSkin", e.itemList.itemRenderer = ItemBase, 
        e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = this.data;
        this.desc.text = +t.rank_min + "", this.itemList.dataProvider = new eui.ArrayCollection(t.reward);
    }, e;
}(BaseItemRender);

__reflect(ChiJiRewardItem1.prototype, "ChiJiRewardItem1");

window.ChiJiRewardItem1 = ChiJiRewardItem1;

var ChiJiSceneRightItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "ChiJiSceneItemSkin", e.bar = new CoolingQueueMcForCircle(e.hpBar, 90), 
        e;
    }
    return __extends(e, t), e.prototype.open = function() {
        this.headBtn.addEventListener(egret.TouchEvent.TOUCH_BEGIN, this.onClick, this);
    }, e.prototype.close = function() {
        this.headBtn.removeEventListener(egret.TouchEvent.TOUCH_BEGIN, this.onClick, this), 
        this.removeeff();
    }, e.prototype.onClick = function(t) {
        Actor.handle == this.data ? UserTips.ins().showTips("你不能攻击自己") : EntityManager.ins().getEntityByHandle(this.data) ? ChiJi.ins().sendServerData25(this.data) : UserTips.ins().showTips("敌人已死亡");
    }, e.prototype.setHp = function(t) {
        var e;
        if (t) {
            e = t.infoModel;
            var i = (t.getHP() / t.getMaxHP() * 100, t.getHP() / t.getMaxHP() * 360);
            this.bar.setProgress(i, 360);
        } else this.bar.setProgress(0, 100);
    }, e.prototype.addeff = function() {
        this.mc || (this.mc = new MovieClip(), this.mc.playFile(ResPath.getUIEffectPath(UiEffectType.Type28), -1), 
        this.mcCon.addChild(this.mc));
    }, e.prototype.removeeff = function() {
        this.mc && (DisplayUtils.removeFromParent(this.mc), this.mc.stop(), this.mc = null);
    }, e.prototype.dataChanged = function() {
        if (isNaN(this.data)) this.removeeff(); else {
            var t = EntityManager.ins().getEntityByHandle(this.data);
            t || (t = EntityManager.ins().getEntityBymasterhHandle(this.data));
            var e = void 0;
            t && (e = t.infoModel, this.guildNameTxt.text = e.guildName, this.nameTxt.text = e.name, 
            this.headBtn.icon = ResPath.getHeadIcon(e.sex, 1));
            var i = ChiJi.ins().getListDataByHandle(this.data);
            i ? (this.rankTxt.text = i.rank + "", this.scoreTxt.text = i.score + "") : (this.rankTxt.text = "", 
            this.scoreTxt.text = ""), this.setHp(t), !e || CustomEnemyManager.ins().curEnemyHandle != e.handle && CustomEnemyManager.ins().curEnemyHandle != e.masterHandle ? this.removeeff() : this.addeff();
        }
    }, e;
}(BaseItemRender);

__reflect(ChiJiSceneRightItem.prototype, "ChiJiSceneRightItem");

window.ChiJiSceneRightItem = ChiJiSceneRightItem;

var ChiJiSceneLeftItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "ChiJiSceneItemSkin", e.bar = new CoolingQueueMcForCircle(e.hpBar, 90), 
        e.scoreTxt.visible = !1, e.scoreBg.visible = !1, e.rankCon.visible = !1, e;
    }
    return __extends(e, t), e.prototype.open = function() {
        this.headBtn.addEventListener(egret.TouchEvent.TOUCH_BEGIN, this.onClick, this);
    }, e.prototype.close = function() {
        this.headBtn.removeEventListener(egret.TouchEvent.TOUCH_BEGIN, this.onClick, this), 
        this.removeeff();
    }, e.prototype.onClick = function(t) {
        Actor.handle == this.data ? UserTips.ins().showTips("你不能攻击自己") : EntityManager.ins().getEntityByHandle(this.data) ? ChiJi.ins().sendServerData25(this.data) : UserTips.ins().showTips("敌人已死亡");
    }, e.prototype.setHp = function(t) {
        var e;
        if (t) {
            e = t.infoModel;
            var i = (t.getHP() / t.getMaxHP() * 100, t.getHP() / t.getMaxHP() * 360);
            this.bar.setProgress(i, 360);
        } else this.bar.setProgress(0, 100);
    }, e.prototype.addeff = function() {
        this.mc || (this.mc = new MovieClip(), this.mc.playFile(ResPath.getUIEffectPath(UiEffectType.Type28), -1), 
        this.mcCon.addChild(this.mc));
    }, e.prototype.removeeff = function() {
        this.mc && (DisplayUtils.removeFromParent(this.mc), this.mc.stop(), this.mc = null);
    }, e.prototype.dataChanged = function() {
        if (isNaN(this.data)) this.removeeff(); else {
            var t = EntityManager.ins().getEntityByHandle(this.data);
            t || (t = EntityManager.ins().getEntityBymasterhHandle(this.data));
            var e = void 0;
            t && (e = t.infoModel, this.guildNameTxt.text = e.guildName, this.nameTxt.text = e.name, 
            this.headBtn.icon = ResPath.getHeadIcon(e.sex, 1)), this.setHp(t), !e || CustomEnemyManager.ins().curEnemyHandle != e.handle && CustomEnemyManager.ins().curEnemyHandle != e.masterHandle ? this.removeeff() : this.addeff();
        }
    }, e;
}(BaseItemRender);

__reflect(ChiJiSceneLeftItem.prototype, "ChiJiSceneLeftItem");

window.ChiJiSceneLeftItem = ChiJiSceneLeftItem;

var ChiJiZhanKuangItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "ChiJiZhanKuangItemSkin", e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = this.data;
        this.nameTxt.text = t.name, this.rankTxt.text = t.rank + "", this.scoreTxt.text = t.score + "";
    }, e;
}(BaseItemRender);

__reflect(ChiJiZhanKuangItem.prototype, "ChiJiZhanKuangItem");

window.ChiJiZhanKuangItem = ChiJiZhanKuangItem;

var ClimbTowerItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.leftX0 = 90, e.rightX0 = 146, e.leftX1 = 69, e.rightX1 = 164, e.skinName = "ClimbTowerItemSkin", 
        e.imgSelect.blendMode = egret.BlendMode.ADD, e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = this.data;
        t.layer % 2 == 0 ? (this.con0.x = this.leftX0, this.con1.x = this.leftX1) : (this.con0.x = this.rightX0, 
        this.con1.x = this.rightX1), this.layerImg.source = "climbtower_name" + t.layer;
        var e = ClimbTowerData0.ins().starList[t.layer - 1];
        this.star0.currentState = e >= 1 ? "2" : "1", this.star1.currentState = e >= 2 ? "2" : "1", 
        this.star2.currentState = e >= 3 ? "2" : "1", ClimbTowerData0.ins().curLayer < t.layer ? this.currentState = "disabled" : this.currentState = "", 
        this.curCon.visible = ClimbTowerData0.ins().curLayer == t.layer, this.curCon.visible ? this.addEff() : this.removeEff(), 
        this.bottomImg.visible = 1 == t.layer, this.height = 1 == t.layer ? 147 : 116;
    }, e.prototype.close = function() {
        this.removeEff();
    }, e.prototype.addEff = function() {
        this.eff || (this.eff = new MovieClip(), this.eff.playFile(ResPath.getUIEffectPath(UiEffectType.Type37), -1), 
        this.curCon.addChild(this.eff));
    }, e.prototype.removeEff = function() {
        this.eff && (this.eff.stop(), DisplayUtils.removeFromParent(this.eff), this.eff = null);
    }, e;
}(BaseItemRender);

__reflect(ClimbTowerItem.prototype, "ClimbTowerItem");

window.ClimbTowerItem = ClimbTowerItem;

var ClimbTowerRankItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "ClimbTowerRankItemSkin", e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = this.data;
        t.rank <= 3 ? (this.rankTxt.visible = !1, this.rankImg.visible = !0, this.rankImg.source = "rank_num" + (t.rank - 1)) : (this.rankImg.visible = !1, 
        this.rankTxt.visible = !0, this.rankTxt.text = t.rank + ""), this.vipImg.source = Chat.ins().getVipIcon(t.vipLv, 1), 
        this.nameTxt.text = t.name, this.layerTxt.text = t.chapter + "重天" + t.layer + "层";
    }, e;
}(BaseItemRender);

__reflect(ClimbTowerRankItem.prototype, "ClimbTowerRankItem");

window.ClimbTowerRankItem = ClimbTowerRankItem;

var ConsumeItemWin = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "ConsumeItemSkin", e.list.itemRenderer = ItemBase, e.list.dataProvider = new eui.ArrayCollection(), 
        e.pos.visible = !1, e.rankImg.visible = !1, e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = this.data;
        t.i <= 3 ? (this.pos.visible = !1, this.rankImg.visible = !0, this.rankImg.source = "rank_num" + (t.i - 1)) : (this.pos.visible = !0, 
        this.rankImg.visible = !1, this.pos.text = "" + t.i), t.name ? this.playName.text = t.name : this.playName.text = "";
        var e = GlobalConfig.ins().ConsumepmcRewardConfig[t.i];
        this.list.dataProvider = new eui.ArrayCollection(e.awardList);
    }, e;
}(BaseItemRender);

__reflect(ConsumeItemWin.prototype, "ConsumeItemWin");

window.ConsumeItemWin = ConsumeItemWin;

var ConsumeRankBoxItemWin = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "ConsumeRankBoxItemSkin", e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        this.sureImg.visible = !1;
        var t = this.data;
        this.id = t.id;
        var e = GlobalConfig.ins().ConsumeRewardConfig[t.id];
        this.getReward = ConsumeDataBase.ins().getReward;
        var i = BitUtil.getBitValue(this.getReward, this.id);
        this.expenseTxt.text = e.pay + "", this.sureImg.visible = i;
    }, e;
}(BaseItemRender);

__reflect(ConsumeRankBoxItemWin.prototype, "ConsumeRankBoxItemWin");

window.ConsumeRankBoxItemWin = ConsumeRankBoxItemWin;

var ConsumeRankItemWin = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "ConsumeRankItemSkin", e.list.itemRenderer = ItemBase, e.list.dataProvider = new eui.ArrayCollection(), 
        e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        this.pos.visible = !1, this.rankImg.visible = !1;
        var t = ConsumeDataBase.ins().rankArr, e = this.data.index;
        if (3 >= e) {
            this.rankImg.visible = !0;
            for (var i = 0, n = 1; 3 > i; i++, n++) switch (e) {
              case n:
                this.rankImg.source = "rank_num" + i;
            }
        } else e > 3 && (this.pos.visible = !0, this.pos.text = e + "");
        for (var i = 0, n = 1; 10 > i; i++, n++) switch (e) {
          case n:
            t[i].userId ? this.player.text = t[i].userId : this.player.text = "";
        }
        var s = GlobalConfig.ins().ConsumeRankRewardConfig[e];
        if (s) {
            for (var i = 0; i < s.awardList.length; i++) s.awardList[i].isNoShowName = !0;
            this.list.dataProvider = new eui.ArrayCollection(s.awardList);
        }
    }, e;
}(BaseItemRender);

__reflect(ConsumeRankItemWin.prototype, "ConsumeRankItemWin");

window.ConsumeRankItemWin = ConsumeRankItemWin;

var CrossSceneItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "WorldBossSceneItemSkin", e.bar = new CoolingQueueMcForCircle(e.hpBar, 90), 
        e;
    }
    return __extends(e, t), e.prototype.open = function() {
        this.headBtn.addEventListener(egret.TouchEvent.TOUCH_BEGIN, this.onClick, this);
    }, e.prototype.close = function() {
        this.headBtn.removeEventListener(egret.TouchEvent.TOUCH_BEGIN, this.onClick, this), 
        this.removeeff();
    }, e.prototype.onClick = function(t) {
        Actor.handle == this.data ? UserTips.ins().showTips("你不能攻击自己") : EntityManager.ins().getEntityByHandle(this.data) ? CrossBoss.ins().sendServerData12(this.data) : UserTips.ins().showTips("敌人已死亡");
    }, e.prototype.setHp = function(t) {
        var e;
        if (t) {
            e = t.infoModel;
            var i = (t.getHP() / t.getMaxHP() * 100, t.getHP() / t.getMaxHP() * 360);
            this.bar.setProgress(i, 360);
        } else this.bar.setProgress(0, 100);
    }, e.prototype.addeff = function() {
        this.mc || (this.mc = new MovieClip(), this.mc.playFile(ResPath.getUIEffectPath(UiEffectType.Type28), -1), 
        this.mcCon.addChild(this.mc));
    }, e.prototype.removeeff = function() {
        this.mc && (DisplayUtils.removeFromParent(this.mc), this.mc.stop(), this.mc = null);
    }, e.prototype.dataChanged = function() {
        if (isNaN(this.data)) this.removeeff(); else {
            var t = EntityManager.ins().getEntityByHandle(this.data);
            t || (t = EntityManager.ins().getEntityBymasterhHandle(this.data));
            var e = void 0;
            t && (e = t.infoModel, this.guildNameTxt.text = e.guildName, this.nameTxt.text = e.name, 
            this.headBtn.icon = ResPath.getHeadIcon(e.sex, 1)), this.setHp(t), !e || CustomEnemyManager.ins().curEnemyHandle != e.handle && CustomEnemyManager.ins().curEnemyHandle != e.masterHandle ? this.removeeff() : this.addeff();
        }
    }, e;
}(BaseItemRender);

__reflect(CrossSceneItem.prototype, "CrossSceneItem");

window.CrossSceneItem = CrossSceneItem;

var CrossCityNpcItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "CrossCityNpcItemSkin", e.gotoBtn.labelDisplay.text = "立即前往", 
        e;
    }
    return __extends(e, t), e.prototype.open = function() {
        this.gotoBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onClick, this);
    }, e.prototype.close = function() {
        this.gotoBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.onClick, this);
    }, e.prototype.onClick = function(t) {
        var e = this.data;
        CrossCity.ins().sendServerData10(e.id), ViewManager.ins().close(CrossCityNpcWin);
    }, e.prototype.dataChanged = function() {
        var t = this.data;
        this.nameTxt.text = t.name, this.ruleTxt.text = t.rule, this.rewardTxt.text = t.desc;
    }, e;
}(BaseItemRender);

__reflect(CrossCityNpcItem.prototype, "CrossCityNpcItem");

window.CrossCityNpcItem = CrossCityNpcItem;

var CrossCitySceneNpcItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "CrossCitySceneNpcItemSkin", e;
    }
    return __extends(e, t), e.prototype.open = function() {
        this.npcBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onClick, this);
    }, e.prototype.close = function() {
        this.npcBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.onClick, this);
    }, e.prototype.onClick = function(t) {
        var e = this.data;
        CrossCity.ins().sendServerData10(e.id);
    }, e.prototype.dataChanged = function() {
        var t = this.data;
        this.npcBtn.icon = "crossactivity_npc_btn" + t.ruleType;
    }, e;
}(BaseItemRender);

__reflect(CrossCitySceneNpcItem.prototype, "CrossCitySceneNpcItem");

window.CrossCitySceneNpcItem = CrossCitySceneNpcItem;

var CrossWarPlayerListItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "CrossWarPlayerListItemSkin", e;
    }
    return __extends(e, t), e.prototype.open = function() {
        this.btnAttack.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onClick, this);
    }, e.prototype.close = function() {
        this.btnAttack.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.onClick, this);
    }, e.prototype.onClick = function(t) {
        Actor.handle == this.data ? UserTips.ins().showTips("你不能攻击自己") : EntityManager.ins().getEntityByHandle(this.data) ? CustomEnemyManager.ins().curEnemyHandle == this.data ? UserTips.ins().showTips("正在攻击中") : (CrossWar.ins().sendServerData40(this.data), 
        ViewManager.ins().close(CrossWarPlayerListWin)) : UserTips.ins().showTips("敌人已死亡");
    }, e.prototype.dataChanged = function() {
        if (!isNaN(this.data)) {
            var t = EntityManager.ins().getEntityByHandle(this.data);
            t || (t = EntityManager.ins().getEntityBymasterhHandle(this.data));
            var e = void 0;
            t && (e = t.infoModel, this.nameTxt.text = e.name), !e || CustomEnemyManager.ins().curEnemyHandle != e.handle && CustomEnemyManager.ins().curEnemyHandle != e.masterHandle || (this.btnAttack.label = "攻击中");
        }
    }, e;
}(BaseItemRender);

__reflect(CrossWarPlayerListItem.prototype, "CrossWarPlayerListItem");

window.CrossWarPlayerListItem = CrossWarPlayerListItem;

var CrossWarSceneItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "WorldBossSceneItemSkin", e.bar = new CoolingQueueMcForCircle(e.hpBar, 90), 
        e;
    }
    return __extends(e, t), e.prototype.open = function() {
        this.headBtn.addEventListener(egret.TouchEvent.TOUCH_BEGIN, this.onClick, this);
    }, e.prototype.close = function() {
        this.headBtn.removeEventListener(egret.TouchEvent.TOUCH_BEGIN, this.onClick, this), 
        this.removeeff();
    }, e.prototype.onClick = function(t) {
        Actor.handle == this.data ? UserTips.ins().showTips("你不能攻击自己") : EntityManager.ins().getEntityByHandle(this.data) ? CrossWar.ins().sendServerData40(this.data) : UserTips.ins().showTips("敌人已死亡");
    }, e.prototype.addeff = function() {
        this.mc || (this.mc = new MovieClip(), this.mc.playFile(ResPath.getUIEffectPath(UiEffectType.Type28), -1), 
        this.mcCon.addChild(this.mc));
    }, e.prototype.removeeff = function() {
        this.mc && (DisplayUtils.removeFromParent(this.mc), this.mc.stop(), this.mc = null);
    }, e.prototype.dataChanged = function() {
        if (isNaN(this.data)) this.removeeff(); else {
            var t = EntityManager.ins().getEntityByHandle(this.data);
            t || (t = EntityManager.ins().getEntityBymasterhHandle(this.data));
            var e = void 0;
            if (t) {
                e = t.infoModel, this.guildNameTxt.text = e.guildName, this.nameTxt.text = e.name, 
                this.headBtn.icon = ResPath.getHeadIcon(e.sex, 1);
                var i = (t.getHP() / t.getMaxHP() * 100, t.getHP() / t.getMaxHP() * 360);
                this.bar.setProgress(i, 360);
            } else this.bar.setProgress(0, 100);
            !e || CustomEnemyManager.ins().curEnemyHandle != e.handle && CustomEnemyManager.ins().curEnemyHandle != e.masterHandle ? this.removeeff() : this.addeff();
        }
    }, e;
}(BaseItemRender);

__reflect(CrossWarSceneItem.prototype, "CrossWarSceneItem");

window.CrossWarSceneItem = CrossWarSceneItem;

var CrossWarTaskItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "KuaFuWarTaskItemSkin", e.gotoBtn.labelDisplay.text = "立即前往", 
        e;
    }
    return __extends(e, t), e.prototype.open = function() {
        this.gotoBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onClick, this), this.nameTxt.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onClick, this);
    }, e.prototype.close = function() {
        this.gotoBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.onClick, this), 
        this.nameTxt.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.onClick, this), 
        TimerManager.ins().remove(this.updateTime, this), this.removeEff();
    }, e.prototype.onClick = function(t) {
        if (!this.isFinish || t.currentTarget instanceof eui.Label) {
            if (CrossWar.ins().isCrossWarBossMap) {
                if (7 != this.data.id) return void UserTips.ins().showTips("当前地图无法到达");
            } else if (7 == this.data.id) return void CrossWar.ins().sendServerData120();
            CrossWar.ins().sendServerData12(this.data.id), ViewManager.ins().close(CrossWarTaskWin);
        } else CrossWar.ins().sendServerData4(this.data.id);
    }, e.prototype.addEff = function() {
        this.eff || (this.eff = new MovieClip(), this.eff.playFile(ResPath.getUIEffectPath(UiEffectType.Type12), -1), 
        this.gotoBtn.addChild(this.eff), this.eff.scaleX = .65, this.eff.scaleY = .65);
    }, e.prototype.removeEff = function() {
        this.eff && (this.eff.stop(), DisplayUtils.removeFromParent(this.eff), this.eff = null);
    }, e.prototype.dataChanged = function() {
        var t = this.data, e = GlobalConfig.ins().YWZCTaskCfg[CrossWar.ins().idx][t.id - 1];
        this.nameTxt.text = e.name, this.targetTxt.text = t.tokenTimes < t.curAllTimes ? e.timesReq + "/" + e.timesReq : t.progress + "/" + e.timesReq, 
        this.timeTxt.visible = t.time > 0, this.isFinish = t.tokenTimes < t.curAllTimes, 
        this.gotoBtn.labelDisplay.text = this.isFinish ? "领取奖励" : "立即前往", this.isFinish ? this.addEff() : this.removeEff(), 
        this.nameTxt.textFlow = new egret.HtmlTextParser().parser('<font color="#fa820d"><u>' + this.nameTxt.text + "</u></font>"), 
        this.nameTxt.touchEnabled = !0, TimerManager.ins().remove(this.updateTime, this), 
        t.tokenTimes == e.limitCnt ? (this.countTime = -1, this.timeTxt.text = "今日已做完", 
        this.timeTxt.textColor = 3473189, this.targetTxt.text = e.timesReq + "/" + e.timesReq, 
        this.timeTxt.visible = !0, this.listReward.dataProvider = new eui.ArrayCollection(this.getRewardList(16768512))) : (this.timeTxt.textColor = 16417293, 
        t.time > 0 ? (this.targetTxt.textColor = 10724259, this.listReward.dataProvider = new eui.ArrayCollection(this.getRewardList(10724259)), 
        this.countTime = 1e3 * t.time + egret.getTimer(), TimerManager.ins().doTimer(500, 0, this.updateTime, this)) : (this.targetTxt.textColor = 16579836, 
        this.listReward.dataProvider = new eui.ArrayCollection(this.getRewardList(16768512)), 
        this.countTime = -1)), this.gotoBtn.visible = !this.timeTxt.visible, this.updateTime();
    }, e.prototype.updateTime = function() {
        if (!(this.countTime <= 0)) {
            var t = Math.floor((this.countTime - egret.getTimer()) / 1e3);
            this.timeTxt.text = "(" + DateUtils.getFormatBySecond(t) + "恢复)";
        }
    }, e.prototype.getRewardList = function(t) {
        for (var e = this.data, i = GlobalConfig.ins().YWZCTaskCfg[CrossWar.ins().idx][e.id - 1], n = [], s = 0; s < i.awards.length; s++) {
            var a = "";
            if (i.awards[s].type == RewardType.Currency) a = i.awards[s].count + LangManager.rewardStr0[i.awards[s].id]; else {
                var o = GlobalConfig.ins().ItemConfig(i.awards[s].id);
                o && (a = i.awards[s].count + o.name);
            }
            n.push({
                content: a,
                contentColor: t
            });
        }
        return n;
    }, e;
}(BaseItemRender);

__reflect(CrossWarTaskItem.prototype, "CrossWarTaskItem");

window.CrossWarTaskItem = CrossWarTaskItem;

var CrossWarTaskReward = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "KuaFuWarTaskRewardSkin", e.setSkinPart("rewardItem", new ItemBase()), 
        e;
    }
    return __extends(e, t), e.prototype.open = function() {
        this.click.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onClick, this);
    }, e.prototype.close = function() {
        this.click.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.onClick, this), 
        this.eff && (this.eff.stop(), DisplayUtils.removeFromParent(this.eff), this.eff = null);
    }, e.prototype.onClick = function(t) {
        CrossWar.ins().sendServerData6();
    }, e.prototype.dataChanged = function() {
        var t = this.data;
        this.rewardItem.data = t.reward[0], this.rewardItem.isShowName(!1), this.click.visible = CrossWar.ins().progress >= t.weiwang, 
        this.imgGet.visible = CrossWar.ins().getIsProgressReward(t.id), this.click.visible && !this.imgGet.visible ? this.eff || (this.eff = new MovieClip(), 
        this.eff.playFile(ResPath.getItemEffectPath(5, 1), -1), this.click.addChild(this.eff), 
        this.eff.x = this.click.width >> 1, this.eff.y = this.click.height >> 1) : this.eff && (this.eff.stop(), 
        DisplayUtils.removeFromParent(this.eff), this.eff = null), CrossWar.ins().progress >= t.weiwang ? this.img0.filters = null : this.img0.filters = [ ColorUtil.colorMat ];
    }, e;
}(BaseItemRender);

__reflect(CrossWarTaskReward.prototype, "CrossWarTaskReward");

window.CrossWarTaskReward = CrossWarTaskReward;

var CrossWarTaskProgressItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "KuaFuWarProgressSkin", e;
    }
    return __extends(e, t), e.prototype.open = function() {}, e.prototype.close = function() {}, 
    e.prototype.dataChanged = function() {
        var t = this.data;
        this.progressTxt.text = t.weiwang + "", CrossWar.ins().progress < t.weiwang ? this.filters = [ ColorUtil.colorMat ] : this.filters = null;
    }, e;
}(BaseItemRender);

__reflect(CrossWarTaskProgressItem.prototype, "CrossWarTaskProgressItem");

window.CrossWarTaskProgressItem = CrossWarTaskProgressItem;

var CrossZhanGongRankItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "CrossZhanGongRankItemSkin", e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = this.data;
        this.rankTxt.text = t.rank + "", t.rank <= 3 && (this.rankImg.source = "rank_num" + (t.rank - 1)), 
        this.rankImg.visible = t.rank <= 3, this.nameTxt.text = t.name, this.zhangongTxt.text = t.zhangong + "", 
        this.serverTxt.text = t.serverId + "区";
    }, e;
}(BaseItemRender);

__reflect(CrossZhanGongRankItem.prototype, "CrossZhanGongRankItem");

window.CrossZhanGongRankItem = CrossZhanGongRankItem;

var CrossZhanGongRewardItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "CrossZhanGongRewardItemSkin", e.list.dataProvider = null, e.list.itemRenderer = ItemBase, 
        e;
    }
    return __extends(e, t), e.prototype.open = function() {
        this.getBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onClick, this);
    }, e.prototype.close = function() {
        this.getBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.onClick, this);
    }, e.prototype.onClick = function(t) {
        CrossZhanGong.ins().sendServerData13();
    }, e.prototype.dataChanged = function() {
        var t = this.data;
        this.list.dataProvider = new eui.ArrayCollection(t.awards), t.rank_max <= 1 && (this.rankImg.source = "rank_num" + (t.rank_max - 1)), 
        this.rankImg.visible = t.rank_max <= 1, this.rankTxt.visible = !this.rankImg.visible, 
        t.rank_min != t.rank_max ? this.rankTxt.text = t.rank_min + "-" + t.rank_max + "名" : this.rankTxt.text = t.rank_min + "名";
        var e = t.type == CrossZhanGong.ins().myResultType && CrossZhanGong.ins().myResultRank >= t.rank_min && CrossZhanGong.ins().myResultRank <= t.rank_max;
        this.isGet.visible = ServerCross.ins().isInCross() && e && 1 == CrossZhanGong.ins().myResultFlag, 
        this.getBtn.visible = ServerCross.ins().isInCross() && e && 0 == CrossZhanGong.ins().myResultFlag;
    }, e;
}(BaseItemRender);

__reflect(CrossZhanGongRewardItem.prototype, "CrossZhanGongRewardItem");

window.CrossZhanGongRewardItem = CrossZhanGongRewardItem;

var CrossZSBossGuishuRewardItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "WuShuangGuishuRewardSkin", e.setSkinPart("item", new ItemBase()), 
        e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = this.data;
        this.item.data = t.item, this.img.visible = !1, this.img.source = 1 == t.type ? "boss_title6" : "boss_title5";
    }, e;
}(BaseItemRender);

__reflect(CrossZSBossGuishuRewardItem.prototype, "CrossZSBossGuishuRewardItem");

window.CrossZSBossGuishuRewardItem = CrossZSBossGuishuRewardItem;

var CrossZSBossSceneItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "WorldBossSceneItemSkin", e.bar = new CoolingQueueMcForCircle(e.hpBar, 90), 
        e;
    }
    return __extends(e, t), e.prototype.open = function() {
        this.headBtn.addEventListener(egret.TouchEvent.TOUCH_BEGIN, this.onClick, this);
    }, e.prototype.close = function() {
        this.headBtn.removeEventListener(egret.TouchEvent.TOUCH_BEGIN, this.onClick, this), 
        this.removeeff();
    }, e.prototype.onClick = function(t) {
        Actor.handle == this.data ? UserTips.ins().showTips("你不能攻击自己") : EntityManager.ins().getEntityByHandle(this.data) ? CrossZSBoss.ins().sendAttack(this.data) : UserTips.ins().showTips("敌人已死亡");
    }, e.prototype.setHp = function(t) {
        var e;
        if (t) {
            e = t.infoModel;
            var i = (t.getHP() / t.getMaxHP() * 100, t.getHP() / t.getMaxHP() * 360);
            this.bar.setProgress(i, 360);
        } else this.bar.setProgress(0, 100);
    }, e.prototype.addeff = function() {
        this.mc || (this.mc = new MovieClip(), this.mc.playFile(ResPath.getUIEffectPath(UiEffectType.Type28), -1), 
        this.mcCon.addChild(this.mc));
    }, e.prototype.removeeff = function() {
        this.mc && (DisplayUtils.removeFromParent(this.mc), this.mc.stop(), this.mc = null);
    }, e.prototype.dataChanged = function() {
        if (isNaN(this.data)) this.removeeff(); else {
            var t = EntityManager.ins().getEntityByHandle(this.data);
            t || (t = EntityManager.ins().getEntityBymasterhHandle(this.data));
            var e = void 0;
            t && (e = t.infoModel, this.guildNameTxt.text = e.guildName, this.nameTxt.text = e.name, 
            this.headBtn.icon = ResPath.getHeadIcon(e.sex, 1)), this.setHp(t), !e || CustomEnemyManager.ins().curEnemyHandle != e.handle && CustomEnemyManager.ins().curEnemyHandle != e.masterHandle ? this.removeeff() : this.addeff();
        }
    }, e;
}(BaseItemRender);

__reflect(CrossZSBossSceneItem.prototype, "CrossZSBossSceneItem");

window.CrossZSBossSceneItem = CrossZSBossSceneItem;

var CrossZSBossItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "WuShuangBossItemSkin", e;
    }
    return __extends(e, t), e.prototype.open = function() {}, e.prototype.close = function() {
        TimerManager.ins().remove(this.updateTime, this);
    }, e.prototype.dataChanged = function() {
        var t = this.data;
        this.bossNameTxt.text = t.name, TimerManager.ins().remove(this.updateTime, this), 
        0 == t.levelReq.min.zsLevel && Actor.level < t.levelReq.min.level || UserZs.ins().lv < t.levelReq.min.zsLevel ? (this.refreshTimeTxt.text = UserZs.ins().lv < t.levelReq.min.zsLevel ? t.levelReq.min.zsLevel + "转可进" : Actor.level < t.levelReq.min.level ? t.levelReq.min.level + "级可进" : "", 
        this.refreshTimeTxt.textColor = 16652572) : t.sData.time > 0 ? (TimerManager.ins().doTimer(500, 0, this.updateTime, this), 
        this.updateTime(), this.refreshTimeTxt.textColor = 16652572) : (this.refreshTimeTxt.text = "已刷新", 
        this.refreshTimeTxt.textColor = 15457982);
    }, e.prototype.updateTime = function() {
        var t = Math.floor((this.data.sData.time - egret.getTimer()) / 1e3);
        return 0 > t ? (this.refreshTimeTxt.text = "已刷新", this.refreshTimeTxt.textColor = 15457982, 
        TimerManager.ins().remove(this.updateTime, this), this.data.sData.time = 0, void CrossZSBoss.ins().postRefreshBossTime()) : void (this.refreshTimeTxt.text = DateUtils.getFormatBySecond(t, DateUtils.TIME_FORMAT_1));
    }, e;
}(BaseItemRender);

__reflect(CrossZSBossItem.prototype, "CrossZSBossItem");

window.CrossZSBossItem = CrossZSBossItem;

var DailyGiftItemRender = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.title1Icon = "dailygift_title3", e.getBtnIcon = "dailygift_title4", e.skinName = "DailyGiftItemSkin", 
        e.list.dataProvider = new eui.ArrayCollection(), e.list.itemRenderer = GiftItem, 
        e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = DailygiftData.ins(), e = this.data;
        this.title1.source = LocationProperty.changeLangResPath(this.title1Icon) + "_png", 
        this.index = this.data.index;
        var i = e.pay / 10, n = "dailygift_pricetitle" + i;
        this.dailyGigt.source = LocationProperty.changeLangResPath(n) + "_png";
        var s = "dailygift_price" + this.index;
        this.price.source = LocationProperty.changeLangResPath(s) + "_png";
        var a = "dailygift_itemsong" + i;
        this.yb.source = LocationProperty.changeLangResPath(a) + "_png", this.list.dataProvider = new eui.ArrayCollection(e.awardList);
        var o = BitUtil.getBitValue(t.flag, this.index - 1), r = BitUtil.getBitValue(t.isGet, this.index - 1);
        o ? r ? (this.get.enabled = !1, this.get.filters = [ ColorUtil.colorMat ], this.get.icon = "dailygift_title6") : (this.get.enabled = !0, 
        this.get.filters = [], this.get.icon = "rebatehall_title1") : (this.get.enabled = !0, 
        this.get.filters = [], this.get.icon = LocationProperty.changeLangResPath(this.getBtnIcon) + "_png");
    }, e;
}(BaseItemRender);

__reflect(DailyGiftItemRender.prototype, "DailyGiftItemRender");

window.DailyGiftItemRender = DailyGiftItemRender;

var GiftItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.errorId = -1, e.skinName = "GiftItemSkin", e.init(), e;
    }
    return __extends(e, t), e.prototype.init = function() {
        this.addEventListener(egret.TouchEvent.TOUCH_END, this.onClick, this);
    }, e.prototype.dataChanged = function() {
        this.clear();
        var t = GlobalConfig.ins().ItemConfig(this.data.id);
        if (this.data.id) {
            this.data.type == RewardType.Currency ? this.item.source = "award_icon" + this.data.id + "_png" : (this.data.type == RewardType.Item || this.data.type == RewardType.PetPiece) && (this.item.source = ResPath.getItemIconPath(t.icon), 
            this.setDataByConfig(t), 0 != t.type && this.speciaEffect(t.quality));
            var e = this.data.count;
            void 0 != e && e > 1 ? this.setCount(e + "") : this.setCount("");
        }
    }, e.prototype.setDataByConfig = function(t) {
        if (0 == t.type) {
            t.zsLevel > 0 ? t.zsLevel + "转" : t.level + "级";
        }
        0 != t.type && (this.nameTxt.textColor = ItemBase.QUALITY_COLOR[t.quality]);
    }, e.prototype.setNameText = function(t, e) {
        this.nameTxt.text = t, this.nameTxt.textColor = e ? e : 14668213, this.nameBg.visible = t ? !0 : !1;
    }, e.prototype.setCount = function(t) {
        if (t.length > 4) {
            var e = parseInt(t);
            t = e.toString();
        }
        if (t.length > 4) {
            var i = Math.floor(Number(t) / 1e3);
            t = i / 10 + "万";
        }
        this.count.text = t;
    }, e.prototype.clear = function() {
        this.item.source = "", this.count.text = "", this.nameTxt.text = "", this.nameTxt.textColor = 14668213, 
        this.nameBg.visible = !1;
    }, e.prototype.onClick = function() {
        this.data && this.data.id > 100 && ViewManager.ins().open(ItemDetailedWin, 0, GlobalConfig.ins().ItemConfig(this.data.id).id, this.data.count);
    }, e.prototype.speciaEffect = function(t) {
        var e = GlobalConfig.ins().ItemConfig(this.data.id);
        this.nameTxt.textColor = LuckyitemWin.QUALITY_COLOR[t], this.data.id && null != e ? (e.quality >= 3 ? (null == this.effect && (this.effect = new MovieClip()), 
        this.effect.x = 40, this.effect.y = 50, this.addChildAt(this.effect, 2), this.effect.blendMode = egret.BlendMode.ADD, 
        this.effect.playFile(ResPath.getItemEffectPath(t), -1)) : null != this.effect && (this.effect.stop(), 
        DisplayUtils.removeFromParent(this.effect)), e.script > 0 ? (this.imgScript.visible = !0, 
        this.imgScript.source = "common_jiao biao" + e.script) : this.imgScript.visible = !1) : (this.effect = new MovieClip(), 
        this.effect.x = 40, this.effect.y = 50, this.addChildAt(this.effect, 2), this.effect.blendMode = egret.BlendMode.ADD, 
        this.effect.playFile(ResPath.getItemEffectPath(t), -1));
    }, e.QUALITY_COLOR = [ 16775896, 9171070, 8374254, 11963121, 16754241, 13893632 ], 
    e;
}(BaseItemRender);

__reflect(GiftItem.prototype, "GiftItem");

window.GiftItem = GiftItem;

var OpenSevenDayGiftItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "OpenSevenDayGiftItemSkin", e.list.dataProvider = new eui.ArrayCollection(), 
        e.list.itemRenderer = ItemBase, e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = this.data;
        this.index = t.day;
        var e = OpenSevenDayGiftData.ins();
        this.day.source = "act14log_day" + t.day, this.list.dataProvider = new eui.ArrayCollection(t.awardList);
        var i = BitUtil.getBitValue(e.flag, t.day - 1), n = BitUtil.getBitValue(e.isGet, t.day - 1);
        if (this.buyBtn.label = i && !n ? "领取" : t.pay / 10 + "元购", this.leftDay.visible = t.day > e.num, 
        this.buyBtn.visible = t.day >= e.num && !n, this.buyBtn.enabled = e.num == t.day, 
        this.buyBtn.filters = e.num == t.day ? [] : [ ColorUtil.colorMat ], this.isGet.visible = i && n, 
        this.redPoint.visible = t.day == e.num && i && !n, this.isOver.visible = e.num > t.day && !this.isGet.visible, 
        this.buyBtn.y = e.num == t.day ? 54 : 69, e.num < t.day) {
            var s = t.day - e.num;
            this.leftDay.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(LangManager.opensevendaydailygift_str0, s));
        }
    }, e;
}(BaseItemRender);

__reflect(OpenSevenDayGiftItem.prototype, "OpenSevenDayGiftItem");

window.OpenSevenDayGiftItem = OpenSevenDayGiftItem;

var SevendayDailyGiftItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.title1Icon = "dailygift_title3", e.skinName = "DailyGiftItemSkin", e.list.dataProvider = new eui.ArrayCollection(), 
        e.list.itemRenderer = GiftItem, e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = SevendayDailyGiftData.ins(), e = this.data;
        this.index = this.data.index;
        var i = e.pay / 10, n = "dailygift_pricetitle" + i;
        this.dailyGigt.source = LocationProperty.changeLangResPath(n) + "_png";
        var s = "dailygift_price" + e.value / 100;
        this.price.source = LocationProperty.changeLangResPath(s) + "_png";
        var a = "dailygift_itemsong" + i;
        this.yb.source = LocationProperty.changeLangResPath(a) + "_png", this.list.dataProvider = new eui.ArrayCollection(e.awardList);
        var o = BitUtil.getBitValue(t.flag, this.index - 1), r = BitUtil.getBitValue(t.isGet, this.index - 1);
        o ? r ? (this.get.enabled = !1, this.get.filters = [ ColorUtil.colorMat ], this.get.icon = "dailygift_title6") : (this.get.enabled = !0, 
        this.get.filters = [], this.get.icon = "rebatehall_title1") : (this.get.enabled = !0, 
        this.get.icon = LocationProperty.changeLangResPath("dailygift_title4") + "_png", 
        this.get.filters = []);
    }, e;
}(BaseItemRender);

__reflect(SevendayDailyGiftItem.prototype, "SevendayDailyGiftItem");

window.SevendayDailyGiftItem = SevendayDailyGiftItem;

var DragonHintItemWin = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "DragonHintItemSkin", e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = this.itemIndex + 1, e = GlobalConfig.ins().DragonCommonConfig.longzhuSkill[0] ? GlobalConfig.ins().DragonCommonConfig.longzhuSkill[0] : 10, i = t * e;
        this.hintTxt.text = "【龙盾技能-" + DragonData.ins().skillName[this.data.id] + "】提升至lv" + t + " (" + DragonData.ins().lingzhuName[this.data.id] + i + "级激活)", 
        this.hintTxt.textColor = this.data.lv >= i ? 65280 : 12566463;
    }, e;
}(BaseItemRender);

__reflect(DragonHintItemWin.prototype, "DragonHintItemWin");

window.DragonHintItemWin = DragonHintItemWin;

var DragonItemWin = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "DragonItemSkin", e.addEventListener(egret.TouchEvent.TOUCH_TAP, e.onTap, e), 
        e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = this.data, e = GlobalConfig.ins().DragonCommonConfig, i = t.index - 1;
        this.nameTxt.text = "" + DragonData.ins().skillName[i], this.imgIcon.source = "dragon_skill" + t.index;
        var n = Math.floor(t.lv / e.longzhuSkill[0]);
        n > 0 ? (this.imgIcon.filters = [], this.hintTxt.visible = !1, this.lvTxt.visible = !0, 
        this.hintTxt.text = "", this.lvTxt.text = n + "级") : (this.imgIcon.filters = [ ColorUtil.colorMat ], 
        this.hintTxt.visible = !0, this.lvTxt.visible = !1, this.hintTxt.text = DragonData.ins().lingzhuName[i] + "\n" + e.longzhuSkill[0] + "开启", 
        this.lvTxt.text = "");
    }, e.prototype.onTap = function(t) {
        ViewManager.ins().open(DragonZhuUpWin, this.data);
    }, e.prototype.close = function() {
        this.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.onTap, this);
    }, e;
}(BaseItemRender);

__reflect(DragonItemWin.prototype, "DragonItemWin");

window.DragonItemWin = DragonItemWin;

var DragonStarWin = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "FireItemSkin", e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        this.data && (this.mc || (this.mc = new MovieClip()), this.mc.playFile(ResPath.getUIEffectPath(UiEffectType.Type35), -1), 
        this.fireCon.addChild(this.mc));
    }, e.prototype.clearEff = function() {
        this.mc && (this.mc.stop(), DisplayUtils.removeFromParent(this.mc));
    }, e;
}(BaseItemRender);

__reflect(DragonStarWin.prototype, "DragonStarWin");

window.DragonStarWin = DragonStarWin;

var DragonZhuItemWin = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.index = 0, e.skinName = "DragonZhuItemSkin", e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = this.data;
        this.index = t.index - 1, this.imgIcon.source = "dragon_k" + t.index;
        var e = GlobalConfig.ins().DragonStageConfig[DragonData.ins().dragonLv];
        t.count >= DragonData.ins().config[this.index][t.lv].cost && t.lv < e.maxUpLevel && !DragonData.ins().isDragonZhuMax(this.index) ? this.arrow.visible = !0 : this.arrow.visible = !1;
    }, e;
}(BaseItemRender);

__reflect(DragonZhuItemWin.prototype, "DragonZhuItemWin");

window.DragonZhuItemWin = DragonZhuItemWin;

var DressItemRenderer = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "DressItemSkin", e.levellabel.visible = !1, e;
    }
    return __extends(e, t), e.prototype.open = function() {
        this.eff || (this.eff = new MovieClip(), this.eff.parent || this.selectCon.addChild(this.eff)), 
        this.eff.playFile(ResPath.getUIEffectPath(UiEffectType.Type23), -1);
    }, e.prototype.close = function() {
        this.eff.stop(), DisplayUtils.removeFromParent(this.eff);
    }, e.prototype.dataChanged = function() {
        var t = this.data;
        if (null != t) {
            this.huanhuaImage.visible = t.isDress, this.redPoint0.visible = !1;
            var e = t.zhuanban.cost.itemId, i = GlobalConfig.ins().ItemConfig(e);
            if (this.bg.source = "common_quality" + i.quality, t.isUser) {
                this.timelabel.visible = !0, this.imgIcon.source = ResPath.getItemIconPath(i.icon);
                var n = GlobalConfig.ins().ZhuangBanLevelConfig[t.zhuanban.id][t.level], s = 0;
                n && (s = UserBag.ins().getBagGoodsCountById(0, n.itmId)), this.redPoint0.visible = n && s >= n.itmCnt;
            } else {
                this.timelabel.visible = !1, this.imgIcon.source = ResPath.getItemIconPath(i.icon);
                var a = t.zhuanban.cost.num;
                UserBag.ins().getBagGoodsCountById(0, e) >= a && (3 == t.zhuanban.pos && Actor.level <= 16 ? this.redPoint0.visible = !1 : this.redPoint0.visible = !0);
            }
            this.imageName.text = i.name, this.reTime();
        }
    }, e.prototype.updateTimer = function(t) {
        var e = "", i = (DateUtils.formatMiniDateTime(t) - GameServer.serverTime) / 1e3;
        return i >= 0 && (e = DateUtils.getFormatBySecond(i, 5, 2)), e;
    }, e.prototype.reTime = function() {
        this.data instanceof DressItemInfo && (0 == this.data.timer ? this.timelabel.textFlow = new egret.HtmlTextParser().parser(StringUtils.addColor("永久", 65280)) : this.data.timer > 0 ? this.timelabel.text = this.updateTimer(this.data.timer) : this.timelabel.visible = !1);
    }, e;
}(BaseItemRender);

__reflect(DressItemRenderer.prototype, "DressItemRenderer");

window.DressItemRenderer = DressItemRenderer;

var DressShopItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "DressShopItemSkin", e.setSkinPart("item", new ItemBase()), 
        e.item.isShowName(!1), e;
    }
    return __extends(e, t), e.prototype.open = function() {
        this.getGiftBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onClick, this);
    }, e.prototype.close = function() {
        this.getGiftBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.onClick, this);
    }, e.prototype.onClick = function(t) {
        switch (this.type) {
          case DressShop.ins().type0:
            DressShop.ins().sendServerData25(this.index);
            break;

          case DressShop.ins().type1:
            DressShop.ins().sendServerData27(this.index);
            break;

          case DressShop.ins().type2:
            DressShop.ins().sendServerData29(this.index);
        }
    }, e.prototype.dataChanged = function() {
        var t, e = this.data;
        switch (this.type = e.type, this.type) {
          case DressShop.ins().type0:
            t = GlobalConfig.ins().SZSCListConfig[e.index];
            break;

          case DressShop.ins().type1:
            t = GlobalConfig.ins().WQSCListConfig[e.index];
            break;

          case DressShop.ins().type2:
            t = GlobalConfig.ins().CHSCListConfig[e.index];
        }
        this.index = t.idx, this.labelTimes.text = e.num + "/" + t.tmsEvr;
        var i = GlobalConfig.ins().ItemConfig(t.awards[0].id);
        this.itemName.text = i.name, i = GlobalConfig.ins().ItemConfig(t.itmId), this.labelPrice.text = t.itmCnt + "", 
        this.itemImg.source = ResPath.getItemIconPath(i.icon), this.item.data = t.awards[0], 
        this.itemName.textColor = ItemBase.QUALITY_COLOR[i.quality];
    }, e;
}(BaseItemRender);

__reflect(DressShopItem.prototype, "DressShopItem");

window.DressShopItem = DressShopItem;

var DressSellItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "DressSellItemSkin", e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = this.itemIndex;
        if (this.config = GlobalConfig.ins().ShiZhuangTeMaiListConfig[t + 1], this.config) {
            var e = this.config.awards[0].id;
            GlobalConfig.ins().ItemConfig(e);
            this.itemIcon.data = this.config.awards[0];
            var i = .1 * this.config.charge;
            1 == this.config.id && LocationProperty.pf == LocationProperty.zwwxxyx && (i = 12);
            var n;
            LocationProperty.isTaiWan ? (i *= Currency.TB, n = "单笔充值" + i + "圆可领") : n = "单笔充值" + i + "元可领", 
            this.numTxt.text = n, this.redPoint.visible = 1 == this.data.state, this.isGet.visible = 2 == this.data.state, 
            0 == this.data.state ? (this.buyBug.enabled = !0, this.buyBug.visible = !0, this.buyBug.icon = "dailygift_title4_png") : 1 == this.data.state ? (this.buyBug.enabled = !0, 
            this.buyBug.visible = !0, this.buyBug.icon = "rebatehall_title1") : 2 == this.data.state && (this.buyBug.enabled = !1, 
            this.buyBug.visible = !1);
        }
    }, e;
}(BaseItemRender);

__reflect(DressSellItem.prototype, "DressSellItem");

window.DressSellItem = DressSellItem;

var DuanwuAcitvityHallTab = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.msgList = [ NewyearActivity.ins().postDataInfo, Recharge.ins().postHolidayTotalRechargeData, LuckyGuy.ins().postYxData, Box.ins().postHuaDengInfo, Treasure.ins().postBossIntegralData, Treasure.ins().postBossIntegralData, NewyearActivity.ins().postFubaoInfo ], 
        e.skinName = "DuanwuAcitvityHallTabSkin", e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = this.data;
        this.iconDisplay.source = "duanwuacitvity_tabIcon" + t, this.title.source = "duanwuacitvity_tab" + t, 
        this.msgList[this.data] && MessageCenter.addListener(this.msgList[this.data], this.updateRedpoint, this, null), 
        this.updateRedpoint();
    }, e.prototype.open = function() {}, e.prototype.close = function() {
        MessageCenter.ins().removeAll(this);
    }, e.prototype.updateRedpoint = function() {
        var t;
        switch (this.data) {
          case 0:
            t = NewYearActivityData0.ins().getRedPoint();
            break;

          case 1:
            t = HolidayActivityData0.ins().getRedPoint();
            break;

          case 2:
            t = YuanxiaoData1.ins().getRedPoint();
            break;

          case 3:
            t = YuanxiaoData2.ins().getRedPoint();
            break;

          case 4:
            MayDayData3.ins().checkShowIcon() && (t = !MayDaySubPanel3.firstTap);
            break;

          case 5:
            MayDayData3.ins().checkShowIcon() && (t = MayDayData3.ins().getRedpoint() ? !MayDaySubPanel4.canGet || !MayDaySubPanel4.firstTap : !MayDaySubPanel4.firstTap);
            break;

          case 6:
            t = NewYearActivityData4.ins().getredpoint();
        }
        this.redpoint.visible = t;
    }, e.prototype.setSelectIndex = function() {
        var t;
        switch (this.data) {
          case 2:
            YuanxiaoData1.firstTap = !1, t = YuanxiaoData1.firstTap, this.redpoint.visible = t;
            break;

          case 4:
            MayDaySubPanel3.firstTap = !0, t = !MayDaySubPanel3.firstTap, this.redpoint.visible = t;
            break;

          case 5:
            MayDayData3.ins().checkShowIcon() && (MayDayData3.ins().getRedpoint() ? (MayDaySubPanel4.canGet = MayDaySubPanel4.firstTap = !0, 
            t = !MayDaySubPanel4.canGet || !MayDaySubPanel4.firstTap) : (MayDaySubPanel4.firstTap = !0, 
            t = !MayDaySubPanel4.firstTap)), this.redpoint.visible = t;
        }
    }, e.prototype.getCurrentState = function() {
        return this.setSelectIndex(), t.prototype.getCurrentState.call(this);
    }, e;
}(BaseItemRender);

__reflect(DuanwuAcitvityHallTab.prototype, "DuanwuAcitvityHallTab");

window.DuanwuAcitvityHallTab = DuanwuAcitvityHallTab;

var DuanwuAcitvitySubItem0 = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "DuanwuAcitvitySubItemSkin0", e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        this.day = this.data.day;
        var t = this.data;
        this.dayImg.source = "duanwuacitvity_loadday" + t.day;
    }, e;
}(BaseItemRender);

__reflect(DuanwuAcitvitySubItem0.prototype, "DuanwuAcitvitySubItem0");

window.DuanwuAcitvitySubItem0 = DuanwuAcitvitySubItem0;

var DuanwuAcitvitySubItem1 = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "DuanwuAcitvitySubItemSkin1", e.list.itemRenderer = ItemBase, 
        e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = HolidayActivityData0.ins(), e = this.data;
        this.index = e.index;
        var i;
        this.list.dataProvider = new eui.ArrayCollection(e.awardList), t.recharge >= e.pay ? this.title.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(LangManager.totalrecharge_str0, e.pay, t.recharge, e.pay)) : this.title.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(LangManager.totalrecharge_str1, e.pay, t.recharge, e.pay)), 
        i = 1 == (t.flag >> e.index & 1), this.isCanGet = t.recharge >= e.pay, this.isCanGet ? (this.btnGet.enabled = !0, 
        this.btnGet.icon = "rebatehall_title1", this.btnGet.filters = []) : (this.btnGet.enabled = !1, 
        this.btnGet.icon = "rebatehall_title2", this.btnGet.filters = [ ColorUtil.colorMat ]), 
        this.isGet.visible = i, this.btnGet.visible = !i, this.redPoint.visible = !i && this.isCanGet;
    }, e;
}(BaseItemRender);

__reflect(DuanwuAcitvitySubItem1.prototype, "DuanwuAcitvitySubItem1");

window.DuanwuAcitvitySubItem1 = DuanwuAcitvitySubItem1;

var DuanwuAcitvitySubItem5 = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "DuanwuAcitvitySubItemSkin5", e.list.itemRenderer = ItemBase, 
        e.list.dataProvider = new eui.ArrayCollection(), e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = MayDayData3.ins(), e = this.data;
        if (e.awardList && t.logArr) {
            this.id = e.id;
            var i = t.logArr[e.id].person, n = t.logArr[e.id].service, s = e.personNum, a = e.serviceNum;
            this.cost.text = e.integral + "", this.cost.textColor = t.integrate >= e.integral ? 3473189 : 16711680, 
            a > n ? s > i ? this.title.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(LangManager.gem_str2, i, s, n, a)) : this.title.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(LangManager.gem_str3, i, s, n, a)) : this.title.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(LangManager.gem_str0, i, s, n, a));
            var o = GlobalConfig.ins().ItemConfig(e.awardList.id);
            if (!o) return;
            var r = [];
            e.awardList.isNoShowName = !0, r.push(e.awardList), this.list.dataProvider = new eui.ArrayCollection(r), 
            this.itemName.text = o.name, 0 != o.type ? this.itemName.textColor = ItemBase.QUALITY_COLOR[o.quality] : this.itemName.textColor = ItemBase.QUALITY_COLOR[4], 
            s > i && a > n && t.integrate >= e.integral ? (this.btnGet.enabled = !0, this.btnGet.filters = []) : (this.btnGet.enabled = !1, 
            this.btnGet.filters = [ ColorUtil.colorMat ]);
        }
    }, e;
}(BaseItemRender);

__reflect(DuanwuAcitvitySubItem5.prototype, "DuanwuAcitvitySubItem5");

window.DuanwuAcitvitySubItem5 = DuanwuAcitvitySubItem5;

var EggRewardItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "EggRewardItemSkin", e.icon.addEventListener(egret.TouchEvent.TOUCH_TAP, e.showTip, e), 
        e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = this.data;
        this.index = t.index, this.reward = t.reward, this.indexImg.source = "egg_reward_title" + t.index;
        var e = EggData.ins();
        this.isGetImg.visible = e.rewardList && 1 == e.rewardList[t.index], this.isCanGet = e.hasOpenTime >= t.times, 
        !this.isGetImg.visible && this.isCanGet ? (this.eff || (this.eff = new MovieClip()), 
        this.eff.playFile(ResPath.getUIEffectPath(UiEffectType.Type27), -1), this.effCon.addChild(this.eff)) : this.eff && (this.eff.stop(), 
        DisplayUtils.removeFromParent(this.eff));
    }, e.prototype.showTip = function() {
        this.isCanGet ? Egg.ins().sendGetReward(this.index) : ViewManager.ins().open(EggTargetRewardWin, this.reward);
    }, e;
}(BaseItemRender);

__reflect(EggRewardItem.prototype, "EggRewardItem");

window.EggRewardItem = EggRewardItem;

var ZaoYuRecordItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "ZaoYuRecordInfoSkin", e;
    }
    return __extends(e, t), e.prototype.createChildren = function() {
        t.prototype.createChildren.call(this), this.awardList.itemRenderer = ItemBase, this.awardArrayCollection = new eui.ArrayCollection(), 
        this.awardList.dataProvider = this.awardArrayCollection;
    }, e.prototype.dataChanged = function() {
        var t = this.data;
        this.time.text = DateUtils.getFormatBySecond(DateUtils.formatMiniDateTime(t[0]) / 1e3, 2), 
        this.playerName.textFlow = new egret.HtmlTextParser().parser('遭遇玩家：<font color="#3681FC">' + t[2] + "</font>");
        var e = [], i = new RewardData();
        i.type = 0, i.id = RewardDataCurrency.Exp, i.count = t[3], e.push(i), i = new RewardData(), 
        i.type = 0, i.id = RewardDataCurrency.Glod, i.count = t[4], e.push(i), i = new RewardData(), 
        i.type = 1, i.id = t[7], i.count = t[8], e.push(i), this.awardArrayCollection.replaceAll(e), 
        t[1] ? this.currentState = "win" : this.currentState = "lose";
    }, e;
}(BaseItemRender);

__reflect(ZaoYuRecordItem.prototype, "ZaoYuRecordItem");

window.ZaoYuRecordItem = ZaoYuRecordItem;

var EscortDetailItemWin = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "EscortDetailItemSkin", e;
    }
    return __extends(e, t), e.prototype.open = function() {
        this.statrTxt.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onClick, this);
    }, e.prototype.close = function() {
        this.statrTxt.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.onClick, this);
    }, e.prototype.dataChanged = function() {
        var t = this.data;
        this.sData = this.data, this.dayTime.text = EscortData.ins().getDataTime(t.sTime), 
        this.statrTxt.touchEnabled = !1, 1 == t.type ? (this.infoTxt.textFlow = TextFlowMaker.generateTextFlow(LangManager.escort_str3), 
        this.statrTxt.visible = !1) : 2 == t.type ? (this.statrTxt.visible = !0, this.infoTxt.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(LangManager.escort_str1, t.name)), 
        1 == t.result ? this.statrTxt.textFlow = TextFlowMaker.generateTextFlow(LangManager.escort_str4) : 0 == t.result ? this.statrTxt.textFlow = TextFlowMaker.generateTextFlow(LangManager.escort_str6) : -1 == t.result && (this.statrTxt.textFlow = TextFlowMaker.generateTextFlow(LangManager.escort_str5))) : 3 == t.type && (this.infoTxt.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(LangManager.escort_str0, t.name)), 
        1 == t.result ? 1 == t.fuchouRet ? this.statrTxt.textFlow = TextFlowMaker.generateTextFlow(LangManager.escort_str7) : 0 == t.fuchouRet ? (this.statrTxt.textFlow = new egret.HtmlTextParser().parser("<u>复仇</u>"), 
        this.statrTxt.touchEnabled = !0) : -1 == t.fuchouRet && (this.statrTxt.textFlow = TextFlowMaker.generateTextFlow(LangManager.escort_str8)) : -1 == t.result ? this.statrTxt.textFlow = TextFlowMaker.generateTextFlow(LangManager.escort_str5) : this.statrTxt.text = "");
        var e = HuSongMeiMeiMeiMeiBaseConfig.nameList(t.quality);
        this.nameTxt.textFlow = TextFlowMaker.generateTextFlow(e);
    }, e.prototype.onClick = function(t) {
        ViewManager.ins().open(EscortFuChouWin, this.sData);
    }, e;
}(BaseItemRender);

__reflect(EscortDetailItemWin.prototype, "EscortDetailItemWin");

window.EscortDetailItemWin = EscortDetailItemWin;

var EscortMache = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "EscortMacheItemSkin", e.macheMC = new MovieClip(), e.macheMC.scaleX = .75, 
        e.macheMC.scaleY = .75, e.macheCon.addChild(e.macheMC), e;
    }
    return __extends(e, t), e.prototype.open = function() {
        this.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onClick, this);
    }, e.prototype.close = function() {
        this.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.onClick, this), TimerManager.ins().remove(this.updataTime, this), 
        this.macheMC && (this.macheMC.stop(), DisplayUtils.removeFromParent(this.macheMC));
    }, e.prototype.dataChanged = function() {
        var t = this.data;
        if (this.sData = this.data, this.setMache(t.type), this.data) {
            var e = GlobalConfig.ins().HuSongMeiMeiConstConfig;
            this.baoImg.visible = t.toubao;
            var i, n = e.dajieTimesProtection - t.dajieNum;
            i = n > 0 ? "可打劫：|C:0x00ff00&T:" + n + "|次" : "可打劫：|C:0xff0000&T:" + n + "|次", this.numTxt.textFlow = TextFlowMaker.generateTextFlow(i);
            var s = DateUtils.formatMiniDateTime(t.stopT) - GameServer.serverTime;
            this.totalTime = s + egret.getTimer(), TimerManager.ins().remove(this.updataTime, this), 
            TimerManager.ins().doTimer(1e3, 0, this.updataTime, this), this.updataTime();
            var a = GlobalConfig.ins().HuSongMeiMeiMeiMeiBaseConfig[t.type];
            this.nameTxt.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(LangManager.escort_str9, t.name, Escort.ins().color[t.type], a.name));
        }
    }, e.prototype.onClick = function(t) {
        this.sData.triggermanID == Actor.actorID ? UserTips.ins().showTips("不能抢夺自己护送的美女") : this.sData.toubao ? UserTips.ins().showTips("对方已投保,不能打劫") : ViewManager.ins().open(EscortHintWin, this.data);
    }, e.prototype.setMache = function(t) {
        this.macheMC.playFile(ResPath.getMaChePath(t), -1);
    }, e.prototype.updataTime = function() {
        var t = Math.floor((this.totalTime - egret.getTimer()) / 1e3);
        t > 0 ? this.timeTxt.text = DateUtils.getFormatBySecond(t, DateUtils.TIME_FORMAT_3) : (this.timeTxt.textFlow = TextFlowMaker.generateTextFlow("|C:0x00ff00&T:护送完成|"), 
        this.numTxt.visible = !1, this.hintTxt.text = "", TimerManager.ins().remove(this.updataTime, this), 
        this.isRefresh || (this.isRefresh = !0, Escort.ins().sendMeiList()));
    }, e;
}(BaseItemRender);

__reflect(EscortMache.prototype, "EscortMache");

window.EscortMache = EscortMache;

var EscortMeiItemWin = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "EscortMeiMeiItem", e;
    }
    return __extends(e, t), e.prototype.open = function() {}, e.prototype.close = function() {
        egret.Tween.removeTweens(this.select);
    }, e.prototype.dataChanged = function() {
        this.upImg.visible = !1;
        var t = this.data;
        this.config = this.data;
        var e = this.itemIndex + 1;
        this.bgImg.source = "escort_belle" + e + "_jpg", this.itemIndex > 0 ? this.typeImg.source = "escort_k" + e : this.typeImg.source = "", 
        this.nameTxt.textFlow = TextFlowMaker.generateTextFlow(HuSongMeiMeiMeiMeiBaseConfig.nameList(t.type)), 
        this.nameTxt.textColor = Escort.ins().color[t.type], this.select.visible = !1, this.gCon.filters = [ ColorUtil.colorMat ], 
        t.type == EscortData.ins().type && 1 == EscortData.ins().code && (this.gCon.filters = [], 
        this.setSelect());
    }, e.prototype.setSelect = function() {
        this.select.visible = !0, egret.Tween.get(this.select, {
            loop: !0
        }).to({
            alpha: 1
        }, 400).to({
            alpha: 0
        }, 400).to({
            alpha: 1
        }, 400);
    }, e;
}(BaseItemRender);

__reflect(EscortMeiItemWin.prototype, "EscortMeiItemWin");

window.EscortMeiItemWin = EscortMeiItemWin;

var EscortTextWin = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "EscortTextSkin", e.fuchouTxt.textFlow = new egret.HtmlTextParser().parser("<u>复仇</u>"), 
        e;
    }
    return __extends(e, t), e.prototype.open = function() {
        this.fuchouTxt.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onClick, this);
    }, e.prototype.close = function() {
        this.fuchouTxt.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.onClick, this);
    }, e.prototype.dataChanged = function() {
        var t = this.data;
        this.sData = this.data, this.fuchouTxt.touchEnabled = !1;
        var e = HuSongMeiMeiMeiMeiBaseConfig.nameList(t.quality);
        this.infoTxt.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(LangManager.escort_str0, t.name)), 
        this.nameTxt.textFlow = TextFlowMaker.generateTextFlow(e), 1 == t.result ? 1 == t.fuchouRet ? this.fuchouTxt.textFlow = TextFlowMaker.generateTextFlow(LangManager.escort_str7) : 0 == t.fuchouRet ? (this.fuchouTxt.textFlow = new egret.HtmlTextParser().parser("<u>复仇</u>"), 
        this.fuchouTxt.touchEnabled = !0) : -1 == t.fuchouRet && (this.fuchouTxt.textFlow = TextFlowMaker.generateTextFlow(LangManager.escort_str8)) : -1 == t.result ? this.fuchouTxt.textFlow = TextFlowMaker.generateTextFlow(LangManager.escort_str5) : this.fuchouTxt.text = "";
    }, e.prototype.onClick = function(t) {
        ViewManager.ins().open(EscortFuChouWin, this.sData);
    }, e;
}(BaseItemRender);

__reflect(EscortTextWin.prototype, "EscortTextWin");

window.EscortTextWin = EscortTextWin;

var EscortRobItemWin = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "EscortRobItemSkin", e;
    }
    return __extends(e, t), e.prototype.open = function() {
        this.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onTop, this);
    }, e.prototype.close = function() {
        this.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.onTop, this);
    }, e.prototype.dataChanged = function() {
        var t = this.data;
        this.sData = this.data;
        var e = GlobalConfig.ins().HuSongMeiMeiConstConfig.dajieTimesProtection;
        this.nameTxt.textFlow = TextFlowMaker.generateTextFlow(HuSongMeiMeiMeiMeiBaseConfig.nameList(t.type)), 
        this.head.source = t.type > 0 ? "escort_icon" + t.type : "", this.playName.text = t.name + "", 
        CommonUtils.labelIsOverLenght(this.goldTxt, t.power);
        var i, n = e - t.dajieNum;
        n > 0 ? (i = "|C:0x00ff00&T:" + n + "|/" + e, this.isDajie = !1) : (i = "|C:0xff0000&T:" + n + "|/" + e, 
        this.isDajie = !0), this.numTxt.textFlow = TextFlowMaker.generateTextFlow(i), t.toubao ? this.bao.textFlow = TextFlowMaker.generateTextFlow("|C:0xff0000&T:保|") : this.bao.textFlow = TextFlowMaker.generateTextFlow("|C:0xffffff&T:无|");
    }, e.prototype.onTop = function(t) {
        switch (t.target) {
          case this.robBtn:
            this.sData.toubao ? UserTips.ins().showTips("对方已投保,不能打劫") : this.isDajie ? UserTips.ins().showTips("|C:0xff0000&T:美人被打劫次数达到上限|") : ViewManager.ins().open(EscortHintWin, this.sData);
        }
    }, e;
}(BaseItemRender);

__reflect(EscortRobItemWin.prototype, "EscortRobItemWin");

window.EscortRobItemWin = EscortRobItemWin;

var ChooseTeammateItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "ChooseTeammateItemSkin", e;
    }
    return __extends(e, t), e.prototype.createChildren = function() {
        t.prototype.createChildren.call(this);
    }, e.prototype.dataChanged = function() {
        if (this.data instanceof TeammateData) {
            var t = this.data;
            0 == t.roleId ? this.currentState = "none" : (this.currentState = "state" + this.data.type, 
            this.headIcon.source = "head_" + t.job + t.sex, this.combatTxt.text = t.power + "", 
            0 == t.zs ? this.nameTxt.text = t.name + " (" + t.lv + "级)" : this.nameTxt.text = t.name + " (" + t.zs + "转" + t.lv + "级)", 
            t.type == TeammateType.Niubi ? this.costLabel.text = "X" + GlobalConfig.ins().TeamFubenBase.ladderInviteCost : t.type == TeammateType.Friends && (this.countTxt.text = this.data.lefttimes + "次"));
        }
    }, e;
}(BaseItemRender);

__reflect(ChooseTeammateItem.prototype, "ChooseTeammateItem");

window.ChooseTeammateItem = ChooseTeammateItem;

var FBTeamItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "TeamFbItemSkin", e;
    }
    return __extends(e, t), e.prototype.createChildren = function() {
        t.prototype.createChildren.call(this);
    }, e.prototype.dataChanged = function() {
        if (this.data) {
            var t = void 0, e = "", i = this.data, n = GlobalConfig.ins().MonstersConfig(i.bossId);
            this.bossIcon.source = "big" + n.head, i.zsLevel > 0 ? (t = UserZs.ins().lv >= i.zsLevel, 
            e = i.zsLevel + "转开启", this.nameLev = i.zsLevel + "转") : (t = Actor.level >= i.levelLimit, 
            e = i.levelLimit + "级开启", this.nameLev = i.levelLimit + "级"), this.bossNameTxt.text = this.nameLev + " " + n.name, 
            t ? (this.limitTermLabel.text = "", this.limitTermBg.visible = !1, this.limitTermLabel.visible = !1) : (this.limitTermLabel.text = e, 
            this.limitTermBg.visible = !0, this.limitTermLabel.visible = !0), this.chooseTeammateBtn.visible = t;
            for (var s = 0; 3 > s; s++) this["item" + s].data = i.showItem[s];
        }
    }, e;
}(BaseItemRender);

__reflect(FBTeamItem.prototype, "FBTeamItem");

window.FBTeamItem = FBTeamItem;

var CheckRankItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "GuanqiaRankItemSkin", e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = this.data;
        this.rankLabel.text = t.pos, this.vipImg.visible = t.vip > 0, this.vip.visible = t.vip > 0, 
        t.vip > 0 && (BitmapNumber.ins().changeNum(this.vip, t.vip, "zv0", 0), this.vip.x = this.vipImg.x + 34), 
        this.nameLabel.text = t.player, CommonUtils.labelIsOverLenght(this.fightLabel, t.power);
        var e = t.count, i = GlobalConfig.ins().ChaptersConfig(e);
        i ? this.ce.text = i.desc + " " + i.cid : this.ce.text = "";
    }, e;
}(BaseItemRender);

__reflect(CheckRankItem.prototype, "CheckRankItem");

window.CheckRankItem = CheckRankItem;

var FlopItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.pokeInfoList = [ 0, 1, 2, 3, 4, 5, 6, 7, 8 ], e.dis = 0, e.index = 0, e.num1 = 3, 
        e.num2 = 4, e.num3 = 0, e.skinName = "FlopItemSkin", e.mc || (e.mc = new MovieClip(), 
        e.mc.x = 66, e.mc.y = 97), e;
    }
    return __extends(e, t), e.prototype.open = function() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onShow, this);
    }, e.prototype.close = function() {
        this.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.onShow, this);
    }, e.prototype.dataChanged = function() {
        var t = this.data;
        if (t) {
            this._index = t.index, this.priceIndex = t.id, this.normalPoke.visible = 0 != this.priceIndex, 
            this.refushROllInfo(this.priceIndex), this.lingchongCon.visible = 0 == this.priceIndex, 
            this.isShowMC = 0 == this.priceIndex;
            var e = GlobalConfig.ins().LuckyFlopBaseConfig.lingchongId;
            this.isShowMC ? (this.lingchongCon.addChild(this.mc), this.mc.playFile(ResPath.getUILingChongPath(e), -1, null, !1, !1)) : this.mc.parent && DisplayUtils.removeFromParent(this.mc);
        }
    }, e.prototype.startScrollHead = function() {
        this.rollTime = this.priceIndex, this.refushROllInfo(this.priceIndex), this.num3 = 0, 
        TimerManager.ins().doTimerDelay(100, 200, 10, this.startScroll, this, this.rollOver, this);
    }, e.prototype.rollOver = function() {
        this.stopScrollHead(), this.showPointPlayerInfo(), null != this.comFun && this.comFun();
    }, e.prototype.stopScrollHead = function() {
        TimerManager.ins().remove(this.startScroll, this);
    }, e.prototype.startScroll = function() {
        var t = this.num2;
        this.num3 >= this.dis * (this.num1 * this.num2 - 4) && (t = this.num2 - 2), this.rollTime += 1, 
        this.refushROllInfo(this.rollTime);
    }, e.prototype.refushROllInfo = function(t) {
        t >= this.pokeInfoList.length && (t %= this.pokeInfoList.length);
        var e = this.pokeInfoList[t];
        this.normalPoke.source = "flop_poke" + e, this.bg.source = 0 == e ? "flop_pokebg1" : "flop_pokebg";
    }, e.prototype.showPointPlayerInfo = function() {
        var t = FlopData.ins().pokeList[this._index - 1];
        if (t) {
            this.priceIndex = t.id, this.normalPoke.visible = 0 != this.priceIndex, this.refushROllInfo(this.priceIndex), 
            this.lingchongCon.visible = 0 == this.priceIndex, this.isShowMC = 0 == this.priceIndex;
            var e = GlobalConfig.ins().LuckyFlopBaseConfig.lingchongId;
            this.isShowMC ? (this.lingchongCon.addChild(this.mc), this.mc.playFile(ResPath.getUILingChongPath(e), -1, null, !1, !1)) : this.mc.parent && DisplayUtils.removeFromParent(this.mc), 
            FlopData.endBtn || (FlopData.endBtn = !0), this.parent instanceof eui.Group && this.parent.parent instanceof FlopWin && this.parent.parent.upSuccessMC();
        }
    }, e.prototype.onShow = function(t) {
        this.isShowMC && ViewManager.ins().open(FlopShowWin);
    }, e;
}(BaseItemRender);

__reflect(FlopItem.prototype, "FlopItem");

window.FlopItem = FlopItem;

var FlopShowSkillItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "FlopShowSkillItemSkin", e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = this.data;
        if (t) {
            var e = GlobalConfig.ins().LingChongSkillConfig[t.id][t.level];
            e && (this.curLv.text = t.level + "级", this.curNmTxt.text = e.skillName, this.curDes.textFlow = TextFlowMaker.generateTextFlow(e.desc), 
            this.curSkillIcon.source = "lingchong_skill" + e.id + "_png");
        }
    }, e;
}(BaseItemRender);

__reflect(FlopShowSkillItem.prototype, "FlopShowSkillItem");

window.FlopShowSkillItem = FlopShowSkillItem;

var BlackListItemRender = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "BlackListItemSkin", e.vipNum = BitmapNumber.ins().createNumPic(0, "num4", 4), 
        e.vipNum.touchEnabled = !1, e.vip.addChild(e.vipNum), e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        var e = this;
        t.prototype.childrenCreated.call(this), this.btn_delete.addEventListener(egret.TouchEvent.TOUCH_TAP, function() {
            Friends.ins().sendDelete(4, e.data.id);
        }, this);
    }, e.prototype.dataChanged = function() {
        t.prototype.dataChanged.call(this);
        var e = this.data;
        this.label_name.text = e.name + "(" + (e.zs > 0 ? e.zs + "转" : "") + e.lv + "级)", 
        this.label_power.text = "战斗力:" + e.power, this.img_userIcon.source = ResPath.getHeadIcon(e.sex, 2), 
        this.vipTxt.visible = e.vip > 0, this.vipTxt.source = Chat.ins().getVipIcon(e.vip, 1), 
        this.vip.visible = !1, this.vipNum && BitmapNumber.ins().changeNum(this.vipNum, e.vip, "num4", 4), 
        this.Txt.y = this.vipTxt.visible ? 47 : 35;
    }, e;
}(BaseItemRender);

__reflect(BlackListItemRender.prototype, "BlackListItemRender");

window.BlackListItemRender = BlackListItemRender;

var FriendAppListItemRender = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "FriendsAppListItemSkin", e.vipNum = BitmapNumber.ins().createNumPic(0, "num4", 4), 
        e.vipNum.touchEnabled = !1, e.vip.addChild(e.vipNum), e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        var e = this;
        t.prototype.childrenCreated.call(this), this.btn_yes.addEventListener(egret.TouchEvent.TOUCH_TAP, function() {
            Friends.ins().sendAgreeApp(e.data.id, 1);
        }, this), this.btn_no.addEventListener(egret.TouchEvent.TOUCH_TAP, function() {
            Friends.ins().sendAgreeApp(e.data.id, 0);
        }, this);
    }, e.prototype.dataChanged = function() {
        t.prototype.dataChanged.call(this);
        var e = this.data;
        this.label_name.text = e.name + "(" + (e.zs > 0 ? e.zs + "转" : "") + e.lv + "级)", 
        this.label_power.text = "战斗力:" + e.power, this.img_userIcon.source = ResPath.getHeadIcon(e.sex, 2), 
        this.vipTxt.visible = e.vip > 0, this.vipTxt.source = Chat.ins().getVipIcon(e.vip, 1), 
        this.vip.visible = !1, this.vipNum && BitmapNumber.ins().changeNum(this.vipNum, e.vip, "num4", 4), 
        this.Txt.y = this.vipTxt.visible ? 47 : 35;
    }, e;
}(BaseItemRender);

__reflect(FriendAppListItemRender.prototype, "FriendAppListItemRender");

window.FriendAppListItemRender = FriendAppListItemRender;

var FriendListItemRender = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "FriendsItemSkin", e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        var e = this;
        t.prototype.childrenCreated.call(this), this.hasEventListener(egret.Event.REMOVED_FROM_STAGE) || this.addEventListener(egret.Event.REMOVED_FROM_STAGE, function() {
            MessageCenter.ins().removeAll(e);
        }, this), this.btn_chat.addEventListener(egret.TouchEvent.TOUCH_TAP, function() {
            Friends.ins().postChatToFriend(e.data.id);
        }, this), this.btn_delete.addEventListener(egret.TouchEvent.TOUCH_TAP, function() {
            WarnWin.show("确定要删除<font color='#ff0000'>" + e.data.name + "</font>吗?", function() {
                Friends.ins().sendDelete(1, e.data.id);
            }, e);
        }, this), this.btn_blackList.addEventListener(egret.TouchEvent.TOUCH_TAP, function() {
            Friends.ins().sendAddBlackList(e.data.id, e.data.name);
        }, this), this.addEventListener(egret.TouchEvent.TOUCH_TAP, function() {
            e.group_friend && (e.group_friend.visible = !e.group_friend.visible), Friends.ins().postCloseFriendList();
        }, this), MessageCenter.ins().addListener(Friends.CLOSS_FRIEND_LIST_BUTTON, this.check, this), 
        this.group_friend && (this.group_friend.visible = !1);
    }, e.prototype.check = function(t) {
        t != this && this.group_friend && (this.group_friend.visible = !1);
    }, e.prototype.open = function() {
        MessageCenter.ins().addListener(Friends.CLOSS_FRIEND_LIST_BUTTON, this.check, this);
    }, e.prototype.close = function() {
        MessageCenter.ins().removeAll(this);
    }, e.prototype.dataChanged = function() {
        t.prototype.dataChanged.call(this);
        var e = this.data;
        this.label_name.text = e.name + "(" + (e.zs > 0 ? e.zs + "转" : "") + e.lv + "级)", 
        this.label_power.text = "战斗力:" + e.power, 1 == e.online ? (this.label_lastLogin.text = "在线", 
        this.label_lastLogin.textColor = 2610714, this.label_name.textColor = 15974912, 
        this.label_power.textColor = 15974912) : (this.label_lastLogin.text = DateUtils.getFormatBySecond(Math.max(e.offLineSec, 60), 4), 
        this.label_lastLogin.textColor = 16579836, this.label_name.textColor = 13549749, 
        this.label_power.textColor = 13549749), this.img_userIcon.source = ResPath.getHeadIcon(e.sex, 2), 
        1 == e.online ? this.img_userIcon.filters = [] : this.img_userIcon.filters = [ ColorUtil.colorMat ];
        var i = this.monthcard.x;
        this.monthcard.visible = 1 == e.monthCard, this.vipImg.visible = e.vip > 0, this.vipImg.source = Chat.ins().getVipIcon(e.vip, 1), 
        this.vipLvCon.visible = !1, e.vip > 0 ? this.vipLv ? BitmapNumber.ins().changeNum(this.vipLv, e.vip, "num4", 5) : (this.vipLv = BitmapNumber.ins().createNumPic(e.vip, "num4", 5), 
        this.vipLvCon.addChild(this.vipLv)) : (this.vipLv = null, DisplayUtils.removeFromParent(this.vipLv)), 
        this.monthcard.visible && (i += this.monthcard.width + 3), this.vipImg.x = i, this.vipImg.visible && (i += this.vipImg.width + 3), 
        this.vipLvCon.x = i, this.vipLvCon.visible && (i += this.vipLv.width + 3), this.label_name.x = i;
    }, e;
}(BaseItemRender);

__reflect(FriendListItemRender.prototype, "FriendListItemRender");

window.FriendListItemRender = FriendListItemRender;

var FriendOneKeyAddItemRender = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "FriendsOneKeyAddItemSkin", e.vipNum = BitmapNumber.ins().createNumPic(0, "num4", 4), 
        e.vipNum.touchEnabled = !1, e.vip.addChild(e.vipNum), e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        var e = this;
        t.prototype.childrenCreated.call(this), this.btn_add.addEventListener(egret.TouchEvent.TOUCH_TAP, function() {
            Friends.ins().sendAddFriend(e.data.id, e.label_name.text), e.btn_add.enabled = !1, 
            e.btn_add.labelDisplay.text = "已申请";
        }, this);
    }, e.prototype.dataChanged = function() {
        if (t.prototype.dataChanged.call(this), this.data instanceof FriendData) {
            var e = this.data;
            this.label_name.text = e.name + "(" + (e.zs > 0 ? e.zs + "转" : "") + e.lv + "级)", 
            this.label_power.text = "战斗力:" + e.power, this.img_userIcon.source = ResPath.getHeadIcon(e.sex, 2), 
            this.vipTxt.visible = e.vip > 0, this.vipTxt.source = Chat.ins().getVipIcon(e.vip, 1), 
            this.vip.visible = !1, this.vipNum && BitmapNumber.ins().changeNum(this.vipNum, e.vip, "num4", 4), 
            this.Txt.y = this.vipTxt.visible ? 47 : 35, this.btn_add.enabled = !0, this.btn_add.labelDisplay.text = "加为好友";
        }
    }, e.prototype.setApplied = function() {
        this.btn_add.enabled = !1, this.btn_add.labelDisplay.text = "已申请";
    }, e;
}(BaseItemRender);

__reflect(FriendOneKeyAddItemRender.prototype, "FriendOneKeyAddItemRender");

window.FriendOneKeyAddItemRender = FriendOneKeyAddItemRender;

var FriendRecentListItemRender = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "FriendsRecentItemSkin", e.vipNum = BitmapNumber.ins().createNumPic(0, "num4", 4), 
        e.vipNum.touchEnabled = !1, e.vip.addChild(e.vipNum), e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        t.prototype.childrenCreated.call(this);
    }, e.prototype.dataChanged = function() {
        t.prototype.dataChanged.call(this);
        var e = this.data;
        this.label_name.text = e.name + "(" + (e.zs > 0 ? e.zs + "转" : "") + e.lv + "级)", 
        this.label_lastChat.text = e.lastMsg, this.img_userIcon.source = ResPath.getHeadIcon(e.sex, 2), 
        this.img_userIcon.filters = 1 == e.online ? [] : [ ColorUtil.colorMat ], this.redPoint.visible = Friends.ins().newMsg[e.id], 
        this.vipTxt.visible = e.vip > 0, this.vipTxt.source = Chat.ins().getVipIcon(e.vip, 1), 
        this.vip.visible = !1, this.vipNum && BitmapNumber.ins().changeNum(this.vipNum, e.vip, "num4", 4), 
        this.Txt.y = this.vipTxt.visible ? 47 : 35;
    }, e;
}(BaseItemRender);

__reflect(FriendRecentListItemRender.prototype, "FriendRecentListItemRender");

window.FriendRecentListItemRender = FriendRecentListItemRender;

var FriendsChatItemRender = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "FriendsChatItemSkin", e;
    }
    return __extends(e, t), e.prototype.childrenCreated = function() {
        t.prototype.childrenCreated.call(this), this.label_msg && (this.label_msg.wordWrap = !1);
    }, e.prototype.dataChanged = function() {
        if (t.prototype.dataChanged.call(this), this.data instanceof ChatData) {
            var e = this.data;
            this.currentState = e.fromActor.id == Actor.actorID ? "s1" : "s0", this.label_msg.text = e.msg, 
            this.img_userIcon.source = ResPath.getHeadIcon(e.fromActor.sex, 2), this.label_date.text = e.dateStr, 
            this.label_date.parent != this ? this.label_date.parent.visible = e.showDate : this.label_date.visible = e.showDate, 
            this.height = e.showDate ? 130 : 120;
        }
    }, e;
}(BaseItemRender);

__reflect(FriendsChatItemRender.prototype, "FriendsChatItemRender");

window.FriendsChatItemRender = FriendsChatItemRender;

var GaoBaoBossRewardItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "GaoBaoBossRewardItemSkin", e.list.itemRenderer = ItemBase, 
        e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = this.data;
        this.titleTxt.text = t.head, this.list.dataProvider = new eui.ArrayCollection(t.awards);
    }, e;
}(BaseItemRender);

__reflect(GaoBaoBossRewardItem.prototype, "GaoBaoBossRewardItem");

window.GaoBaoBossRewardItem = GaoBaoBossRewardItem;

var GaoBaoBossSceneItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.touchChildren = !0, e.touchEnabled = !0, e.skinName = "WorldBossSceneItemSkin", 
        e.bar = new CoolingQueueMcForCircle(e.hpBar, 90), e;
    }
    return __extends(e, t), e.prototype.open = function() {
        this.headBtn.addEventListener(egret.TouchEvent.TOUCH_BEGIN, this.onClick, this);
    }, e.prototype.close = function() {
        this.headBtn.removeEventListener(egret.TouchEvent.TOUCH_BEGIN, this.onClick, this), 
        this.removeeff();
    }, e.prototype.onClick = function(t) {
        GaoBaoBoss.ins().sendChangeTarget(this.data.id, this.data.handle);
    }, e.prototype.addeff = function() {
        this.mc || (this.mc = new MovieClip(), this.mc.touchEnabled = !1, this.mc.playFile(ResPath.getUIEffectPath(UiEffectType.Type28), -1), 
        this.mcCon.addChild(this.mc));
    }, e.prototype.removeeff = function() {
        this.mc && (DisplayUtils.removeFromParent(this.mc), this.mc.stop(), this.mc = null);
    }, e.prototype.dataChanged = function() {
        var t = this.data;
        this.headBtn.icon = ResPath.getHeadIcon(t.sex, 1), this.nameTxt.text = t.playerName, 
        this.guildNameTxt.text = t.guildName, this.rankCon.visible = t.isShowRank, this.rankTxt.text = t.rank + "";
        var e = EntityManager.ins().getEntityByHandle(t.handle);
        if (e) {
            var i = e.getHP() / e.getMaxHP() * 360;
            this.bar.setProgress(i, 360);
        } else this.bar.setProgress(0, 100);
        GaoBaoBoss.ins().curEnemyHandle == t.handle ? this.addeff() : this.removeeff();
    }, e;
}(BaseItemRender);

__reflect(GaoBaoBossSceneItem.prototype, "GaoBaoBossSceneItem");

window.GaoBaoBossSceneItem = GaoBaoBossSceneItem;

var GodRankDaBiaoItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "GodRankDaBiaoItemSkin", e.list.itemRenderer = ItemBase, e;
    }
    return __extends(e, t), e.prototype.getAward = function() {
        GodRank.ins().sendGetJiFenAwardReq(this.cfg.idx);
    }, e.prototype.dataChanged = function() {
        var t = this.data, e = this.cfg = GodRankData.instance.getDaBiaoCfgByIdx(t.idx), i = e.award.concat();
        this.title.textFlow = TextFlowMaker.generateTextFlow("积分达到：|C:0x34FF25&T:" + e.score + "|"), 
        this.list.dataProvider = new eui.ArrayCollection(i), 2 == t.state ? (this.btnGet.visible = !0, 
        this.btnGet.enabled = !0, this.btnGet.filters = [], this.redPoint.visible = !0, 
        this.isGet.visible = !1) : 0 == t.state ? (this.btnGet.visible = !0, this.btnGet.enabled = !1, 
        this.btnGet.filters = [ ColorUtil.colorMat ], this.redPoint.visible = !1, this.isGet.visible = !1) : (this.btnGet.visible = !1, 
        this.redPoint.visible = !1, this.isGet.visible = !0);
    }, e;
}(BaseItemRender);

__reflect(GodRankDaBiaoItem.prototype, "GodRankDaBiaoItem");

window.GodRankDaBiaoItem = GodRankDaBiaoItem;

var GodRankItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "GodRankItemSkin", e.list.itemRenderer = ItemBase, e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = this.data, e = GodRankData.instance.rankVoArr.concat();
        e.shift();
        var i = "";
        i = e.length <= 0 || !e[this.itemIndex] || 0 == e[this.itemIndex].rank || 0 == e[this.itemIndex].serverId ? "虚位以待" : "S" + e[this.itemIndex].serverId + "." + e[this.itemIndex].name, 
        this.title.text = "第" + (this.itemIndex + 2) + "名：" + i;
        var n = t.award.concat();
        this.list.dataProvider = new eui.ArrayCollection(n);
    }, e;
}(BaseItemRender);

__reflect(GodRankItem.prototype, "GodRankItem");

window.GodRankItem = GodRankItem;

var GodRankLiBaoItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "GodRankLiBaoItemSkin", e.setSkinPart("item", new ItemBase()), 
        e;
    }
    return __extends(e, t), e.prototype.buyGift = function() {
        GodRank.ins().sendBuyGiftReq(this.cfg.giftIndex);
    }, e.prototype.dataChanged = function() {
        var t = this.cfg = this.data;
        this.item.data = t.gifts[0], this.zheImg.source = "godRank_zhe" + t.discount, this.original.text = t.price + "", 
        this.present.text = t.disPrice + "";
        var e = GodRankData.instance;
        t.giftIndex < e.giftIndex ? (this.sellout.visible = !0, this.btnBuy.visible = !1, 
        this.countTx.text = "") : t.giftIndex > e.giftIndex ? (this.sellout.visible = !1, 
        this.btnBuy.visible = !0, this.btnBuy.enabled = !1, this.btnBuy.filters = [ ColorUtil.colorMat ], 
        t.vipLimit > 0 ? this.countTx.text = "0/" + t.limitNum + "（V" + t.vipLimit + "专享）" : this.countTx.text = "0/" + t.limitNum) : e.giftCount < t.limitNum && UserVip.ins().lv >= t.vipLimit ? (this.sellout.visible = !1, 
        this.btnBuy.visible = !0, this.btnBuy.enabled = !0, this.btnBuy.filters = [], t.vipLimit > 0 ? this.countTx.text = e.giftCount + "/" + t.limitNum + "（V" + t.vipLimit + "专享）" : this.countTx.text = e.giftCount + "/" + t.limitNum) : UserVip.ins().lv < t.vipLimit ? (this.sellout.visible = !1, 
        this.btnBuy.visible = !0, this.btnBuy.enabled = !1, this.btnBuy.filters = [ ColorUtil.colorMat ], 
        t.vipLimit > 0 ? this.countTx.text = "0/" + t.limitNum + "（V" + t.vipLimit + "专享）" : this.countTx.text = "0/" + t.limitNum) : (this.sellout.visible = !0, 
        this.btnBuy.visible = !1, this.countTx.text = "");
    }, e;
}(BaseItemRender);

__reflect(GodRankLiBaoItem.prototype, "GodRankLiBaoItem");

window.GodRankLiBaoItem = GodRankLiBaoItem;

var GodRankPayItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "GodRankDaBiaoItemSkin", e.list.itemRenderer = ItemBase, e;
    }
    return __extends(e, t), e.prototype.getAward = function() {
        GodRank.ins().sendGetPayAwardReq(this.cfg.idx);
    }, e.prototype.dataChanged = function() {
        var t = this.data, e = this.cfg = GodRankData.instance.getPayCfgByIdx(t.idx), i = e.award.concat(), n = GodRankData.instance;
        n.payMoney >= e.recharge ? this.title.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(LangManager.totalrecharge_str0, e.recharge, n.payMoney, e.recharge)) : this.title.textFlow = TextFlowMaker.generateTextFlow(LangManager.getLang(LangManager.totalrecharge_str1, e.recharge, n.payMoney, e.recharge)), 
        this.list.dataProvider = new eui.ArrayCollection(i), 2 == t.state ? (this.btnGet.visible = !0, 
        this.btnGet.enabled = !0, this.btnGet.filters = [], this.redPoint.visible = !0, 
        this.isGet.visible = !1) : 0 == t.state ? (this.btnGet.visible = !0, this.btnGet.enabled = !1, 
        this.btnGet.filters = [ ColorUtil.colorMat ], this.redPoint.visible = !1, this.isGet.visible = !1) : (this.btnGet.visible = !1, 
        this.redPoint.visible = !1, this.isGet.visible = !0);
    }, e;
}(BaseItemRender);

__reflect(GodRankPayItem.prototype, "GodRankPayItem");

window.GodRankPayItem = GodRankPayItem;

var GodRankSumeItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "GodRankDaBiaoItemSkin", e.list.itemRenderer = ItemBase, e;
    }
    return __extends(e, t), e.prototype.getAward = function() {
        GodRank.ins().sendGetSumeAwardReq(this.cfg.idx);
    }, e.prototype.dataChanged = function() {
        var t, e = this.data, i = this.cfg = GodRankData.instance.getSumeCfgByIdx(e.idx), n = i.award.concat(), s = GodRankData.instance;
        t = s.sumeMoney >= i.consume ? "元宝消耗达到" + i.consume + "|C:0x34FF25&T:(" + s.sumeMoney + "/" + i.consume + ")|,可获得" : "元宝消耗达到" + i.consume + "|C:0xfe191c&T:(" + s.sumeMoney + "/" + i.consume + ")|,可获得", 
        this.title.textFlow = TextFlowMaker.generateTextFlow(t), this.list.dataProvider = new eui.ArrayCollection(n), 
        2 == e.state ? (this.btnGet.visible = !0, this.btnGet.enabled = !0, this.btnGet.filters = [], 
        this.redPoint.visible = !0, this.isGet.visible = !1) : 0 == e.state ? (this.btnGet.visible = !0, 
        this.btnGet.enabled = !1, this.btnGet.filters = [ ColorUtil.colorMat ], this.redPoint.visible = !1, 
        this.isGet.visible = !1) : (this.btnGet.visible = !1, this.redPoint.visible = !1, 
        this.isGet.visible = !0);
    }, e;
}(BaseItemRender);

__reflect(GodRankSumeItem.prototype, "GodRankSumeItem");

window.GodRankSumeItem = GodRankSumeItem;

var GodRankTab = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "GodRankTabSkin", e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = this.data;
        switch (t) {
          case 0:
            this.icon.source = "godRank_tab0";
            break;

          default:
            this.icon.source = "godRank_tab" + t;
        }
        this.updateRedPoint();
    }, e.prototype.updateRedPoint = function() {
        var t = this.data;
        switch (t) {
          case 0:
            this.redPoint.visible = !1;
            break;

          case 1:
            GodRankData.instance.daBiaoHasDone() ? this.redPoint.visible = !0 : this.redPoint.visible = !1;
            break;

          case 2:
            GodRankData.instance.liBaoCanBuy() ? this.redPoint.visible = !0 : this.redPoint.visible = !1;
            break;

          case 3:
            GodRankData.instance.payHasDone() ? this.redPoint.visible = !0 : this.redPoint.visible = !1;
            break;

          case 4:
            GodRankData.instance.sumeHasDone() ? this.redPoint.visible = !0 : this.redPoint.visible = !1;
        }
    }, e;
}(BaseItemRender);

__reflect(GodRankTab.prototype, "GodRankTab");

window.GodRankTab = GodRankTab;

var GuildActityItemRender = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "GuildActityItemSkin", e;
    }
    return __extends(e, t), e.prototype.onTap = function(t) {
        switch (t) {
          case this.goBtn0:
            this.conBtnOnCLick();
        }
    }, e.prototype.conBtnOnCLick = function() {
        var t = this.data;
        return GuildRobber.ins().robberTotal - GuildRobber.ins().robberDealNum <= 0 ? void UserTips.ins().showTips("|C:0xff0000&T:宗门兽人军团已经全部被击杀了！|") : void (1 == t.id && ViewManager.ins().close(GuildActivityWin));
    }, e.prototype.dataChanged = function() {
        var t = this.data;
        if (t) {
            if (t.id && (this.taskIcon.source = "guildActity_" + t.id), t.context) {
                var e = t.context;
                if (t.openDay && GameServer.serverOpenDay < t.openDay) {
                    var i = TextFlowMaker.getCStr(t.openDay);
                    e = e.replace("\n", "|C:0x00FF00&S:14&T:（开服第" + i + "天开启）|\n");
                }
                this.nameLab.textFlow = TextFlowMaker.generateTextFlow1(e);
            }
            1 == t.id && (this.descLab.text = "本轮剩余强盗：" + (GuildRobber.ins().robberTotal - GuildRobber.ins().robberDealNum) + "/" + GuildRobber.ins().robberTotal), 
            this.label.text = GlobalConfig.ins().robberfbconfig.challengeMax - GuildRobber.ins().robberChanllge + "/" + GlobalConfig.ins().robberfbconfig.challengeMax;
        }
    }, e;
}(BaseItemRender);

__reflect(GuildActityItemRender.prototype, "GuildActityItemRender");

window.GuildActityItemRender = GuildActityItemRender;

var GuildAppltListItemRender = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "MemberApplyItemSkin", e;
    }
    return __extends(e, t), e.prototype.onTap = function(t) {
        switch (t) {
          case this.ok:
            if (Guild.ins().getMemberNum() >= GlobalConfig.ins().GuildConfig.maxMember[Guild.ins().guildLv - 1]) return void UserTips.ins().showTips("|C:0xff0000&T:宗门成员已满|");
            Guild.ins().sendProcessJoin(this.data.roleID, 1), this.removeOne();
            break;

          case this.cancel:
            Guild.ins().sendProcessJoin(this.data.roleID, 0), this.removeOne();
        }
    }, e.prototype.removeOne = function() {
        for (var t = Guild.ins().applyPlayers, e = 0; e < t.length; e++) {
            var i = t[e];
            i.roleID == this.data.roleID && (t.splice(e, 1), Guild.ins().hasApply = t.length > 0, 
            Guild.ins().postGuildApplysInfos());
        }
    }, e.prototype.dataChanged = function() {
        if (this.data instanceof GuildApplyInfo) {
            var t = this.data, e = "<font color='#ffa810'>" + t.name + "</font>";
            e = t.vipLevel > 0 ? "[VIP" + t.vipLevel + "]" + e : e, this.nameLab.textFlow = new egret.HtmlTextParser().parser(e), 
            this.attack.text = "战斗力：" + t.attack, this.attack.textColor = 3473189, this.myFace.source = ResPath.getHeadIcon(t.sex, 2);
        }
    }, e;
}(BaseItemRender);

__reflect(GuildAppltListItemRender.prototype, "GuildAppltListItemRender");

window.GuildAppltListItemRender = GuildAppltListItemRender;

var GuildBuildItemRender = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e._maxLevel = 0, e._curLevel = 0, e._nextMoney = 0, e.skinName = "GuildManageItemSkin", 
        e;
    }
    return __extends(e, t), e.prototype.onTap = function(t) {
        switch (t) {
          case this.upBtn:
            var e = this.data;
            if (Guild.ins().myOffice < GuildOffice.GUILD_FUBANGZHU) return void UserTips.ins().showTips("仅宗主可操作");
            if (e == GuildBuilding.GUILD_HALL && this._curLevel >= this._maxLevel) return void UserTips.ins().showTips("等级已满");
            if (e != GuildBuilding.GUILD_HALL) {
                if (this._curLevel >= this._maxLevel) return void UserTips.ins().showTips("等级已满");
                if (this._curLevel >= Guild.ins().guildLv) return void UserTips.ins().showTips("请先升级宗门旗帜");
            }
            if (Guild.ins().money < this._nextMoney) return void UserTips.ins().showTips("资金不足");
            Guild.ins().sendUpBuilding(e);
        }
    }, e.prototype.dataChanged = function() {
        var t = this.data;
        this._curLevel = Guild.ins().getBuildingLevels(t - 1);
        var e = GlobalConfig.ins().GuildLevelConfig[t], i = null, n = null;
        for (var s in e) if (e.hasOwnProperty(s)) {
            var a = e[s];
            this._maxLevel = a.level > this._maxLevel ? a.level : this._maxLevel, a.level == this._curLevel && (i = a), 
            a.level == this._curLevel + 1 && (n = a);
        }
        (i || n || t == GuildBuilding.GUILD_LIANGONGFANG) && (this.nameLab.text = (null == this._curLevel ? 0 : this._curLevel) + "级" + GlobalConfig.ins().GuildConfig.buildingNames[t - 1], 
        null == this._curLevel || this._curLevel < this._maxLevel ? (this._nextMoney = n.upFund, 
        this.upLevelLab.text = t == GuildBuilding.GUILD_HALL ? "" : "升级要求：宗门旗帜达到" + (this._curLevel + 1) + "级", 
        this.money.text = Guild.ins().money + "/" + n.upFund, this.bar.scaleX = Guild.ins().money >= n.upFund ? 1 : Guild.ins().money / n.upFund) : (this.upLevelLab.text = "等级已满", 
        i ? this.money.text = Guild.ins().money + "/" + i.upFund : this.money.text = "已满级", 
        this.bar.scaleX = 1), this.buildingLab.text = GlobalConfig.ins().GuildConfig.buildingTips[t - 1]);
    }, e;
}(BaseItemRender);

__reflect(GuildBuildItemRender.prototype, "GuildBuildItemRender");

window.GuildBuildItemRender = GuildBuildItemRender;

var GuildDailyRewardItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "GuildDailyRewardItemSkin", e.list.itemRenderer = ItemBase, 
        e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = this.data;
        t.level_min == t.level_max ? this.title.text = t.level_min + "级宗门每日福利" : this.title.text = t.level_min + "-" + t.level_max + "级宗门每日福利", 
        this.list.dataProvider = new eui.ArrayCollection(t.reward);
        var e = GuildRewardData.ins();
        -1 == e.index || e.index != t.index ? (this.btnGet.enabled = !1, this.btnGet.filters = [ ColorUtil.colorMat ], 
        this.isGetImg.visible = !1, this.btnGet.visible = !0) : (this.btnGet.enabled = !0, 
        this.btnGet.filters = [], this.isGetImg.visible = 1 == e.isGet, this.btnGet.visible = !this.isGetImg.visible);
    }, e.prototype.onTap = function(t) {
        switch (t) {
          case this.btnGet:
            GuildStore.ins().sendGuildGetReward();
        }
    }, e;
}(BaseItemRender);

__reflect(GuildDailyRewardItem.prototype, "GuildDailyRewardItem");

window.GuildDailyRewardItem = GuildDailyRewardItem;

var GuildEventItenRender = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "GuildEventItemSkin", e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        if ("string" == typeof this.data) {
            var t = this.data;
            t && "" != t && (this.info.textFlow = new egret.HtmlTextParser().parser(t)), this.imgLine.y = this.info.y + this.info.height + 5;
        }
    }, e;
}(BaseItemRender);

__reflect(GuildEventItenRender.prototype, "GuildEventItenRender");

window.GuildEventItenRender = GuildEventItenRender;

var GuildFBRankItemRender = function(t) {
    function e() {
        return t.call(this) || this;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        this.data instanceof GuildFBRankInfo ? (this.rankinfo = this.data, this.rank.text = this.rankinfo.rank + "", 
        this.rolename.text = this.rankinfo.name + "", this.guanka.text = this.rankinfo.guanka + "关", 
        this.item && (this.item.isShowName(!1), this.item.data = GuildFB.ins().getRewardByRank(this.rankinfo.rank))) : (this.rank.text = this.data.rank, 
        this.rolename.text = this.data.name, this.guanka.text = "");
    }, e;
}(BaseItemRender);

__reflect(GuildFBRankItemRender.prototype, "GuildFBRankItemRender");

window.GuildFBRankItemRender = GuildFBRankItemRender;

var GuildFBRewardItemRender = function(t) {
    function e() {
        return t.call(this) || this;
    }
    return __extends(e, t), e.prototype.createChildren = function() {
        t.prototype.createChildren.call(this), this.skinName = "GuildFBRewardItemSkin", 
        this.btn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onTap, this);
    }, e.prototype.dataChanged = function() {
        var t = this.data;
        this.info = t.info;
        var e = t.id;
        this.label.text = this.info.wave + "关奖励", e > GuildFB.ins().rewardNum ? this.btn.enabled = !1 : this.btn.enabled = !0;
    }, e.prototype.onTap = function(t) {
        GuildFB.ins().sendGuildFBGKRoleInfo(this.info.wave), ViewManager.ins().open(GuildFBRewardInfoWin, this.info);
    }, e;
}(BaseItemRender);

__reflect(GuildFBRewardItemRender.prototype, "GuildFBRewardItemRender");

window.GuildFBRewardItemRender = GuildFBRewardItemRender;

var GuildListItem2Render = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "GuildListItemSkin", e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        if (this.data instanceof GuildListInfo) {
            var t = this.data, e = GlobalConfig.ins().GuildConfig;
            t && e && (this.numLab.text = t.guildRank + "", this.nameLab.textFlow = new egret.HtmlTextParser().parser(t.guildName + ("<font color='#0FEE27'>(Lv." + t.guildLevel + ")</font>")), 
            this.president.text = t.guildPresident, this.member.textColor = t.guildMember < e.maxMember[t.guildLevel - 1] ? 5226466 : 16711680, 
            this.member.text = t.guildMember + "/" + e.maxMember[t.guildLevel - 1]);
        }
    }, e;
}(BaseItemRender);

__reflect(GuildListItem2Render.prototype, "GuildListItem2Render");

window.GuildListItem2Render = GuildListItem2Render;

var GuildListItemRender = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "ApplyItemSkin", e;
    }
    return __extends(e, t), e.prototype.onTap = function() {
        var t = this.data;
        if (-1 == Guild.ins().applyGuilds.indexOf(t.guildID)) {
            if (this.data.attr > Actor.power) return void UserTips.ins().showTips("|C:0xff0000&T:战斗力过低|");
            if (1 == GuildWar.ins().getModel().getIsShowGuildWarBtn()) return void UserTips.ins().showTips("|C:0xff0000&T:宗门大战开启期间，无法进行此操作。|");
            this.applyBtn.enabled = !1, this.applyBtn.label = "已申请", this.applyBtn.filters = [ ColorUtil.colorMat ], 
            Guild.ins().applyGuilds.push(t.guildID), Guild.ins().sendJoinGuild(t.guildID);
        }
    }, e.prototype.dataChanged = function() {
        if (this.data instanceof GuildListInfo) {
            var t = this.data, e = GlobalConfig.ins().GuildConfig;
            if (t && e) {
                this.numLab.text = t.guildRank + "", this.nameLab.textFlow = new egret.HtmlTextParser().parser(t.guildName + ("<font color='#f3c200'>(Lv." + t.guildLevel + ")</font>")), 
                this.president.text = t.guildPresident;
                var i = "|C:0x8af729&T:" + t.guildMember + "|/|C:0xfffad8&T:" + e.maxMember[t.guildLevel - 1] + "|";
                this.member.textFlow = TextFlowMaker.generateTextFlow(i);
                var n = "";
                n = -1 == t.attr ? "|C:0x8af729&T:需审核|" : 0 == t.attr ? "|C:0x8af729&T:无限制|" : "战斗力：|C:0xf3c200&T:" + CommonUtils.overLength(t.attr) + "|", 
                this.attrLabel.textFlow = TextFlowMaker.generateTextFlow(n), Guild.ins().applyGuilds.indexOf(t.guildID) > -1 ? (this.applyBtn.enabled = !1, 
                this.applyBtn.label = "已申请", this.applyBtn.filters = [ ColorUtil.colorMat ]) : (this.applyBtn.enabled = !0, 
                this.applyBtn.label = "申请", this.applyBtn.filters = []);
            }
        }
    }, e.prototype.destruct = function() {}, e;
}(BaseItemRender);

__reflect(GuildListItemRender.prototype, "GuildListItemRender");

window.GuildListItemRender = GuildListItemRender;

var GuildMapMemberItemRender = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "gongxianitemSkin", e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        if (this.data instanceof GuildMemberInfo) {
            var t = this.data;
            t && (this.conLab.textColor = this.office.textColor = this.nameLab.textColor = 16777215, 
            this.nameLab.text = t.name, this.office.text = GuildLanguage.guildOffice[t.office], 
            this.conLab.text = t.curContribution + "");
        }
    }, e;
}(BaseItemRender);

__reflect(GuildMapMemberItemRender.prototype, "GuildMapMemberItemRender");

window.GuildMapMemberItemRender = GuildMapMemberItemRender;

var GuildMemberItem1Render = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "MemberItemSkin", e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        if (this.data instanceof GuildMemberInfo) {
            var t = this.data;
            t && (this.nameLab.text = t.name, this.office.text = GuildLanguage.guildOffice[t.office], 
            this.conLab.text = t.contribution + "", this.monthcard.visible = 1 == t.monthCard, 
            this.vip.removeChildren(), t.vipLevel < 10 ? this.vip.addChild(BitmapNumber.ins().createNumPic(t.vipLevel, "xv_0")) : this.vip.addChild(BitmapNumber.ins().createNumPic(0, "xv_01")), 
            this.vip.visible = t.vipLevel > 0, this.vipTitle.visible = t.vipLevel > 0);
        }
    }, e;
}(BaseItemRender);

__reflect(GuildMemberItem1Render.prototype, "GuildMemberItem1Render");

window.GuildMemberItem1Render = GuildMemberItem1Render;

var GuildMemberItem2Render = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "MemberItem2Skin", e;
    }
    return __extends(e, t), e.prototype.onTap = function(t) {
        var e = this.data, i = e.roleID;
        switch (t) {
          case this.impeachBtn:
            WarnWin.show("是否消耗" + GlobalConfig.ins().GuildConfig.impeachCost + "元宝弹劾宗主?(弹劾后成为宗主)", function() {
                Actor.yb >= GlobalConfig.ins().GuildConfig.impeachCost ? Guild.ins().sendDemise() : UserWarn.ins().showWanTips0(WarnTipsWin0.TYPE_1);
            }, this);
            break;

          case this.demiseBtn:
            WarnWin.show("是否禅让宗主职位给[" + e.name + "]", function() {
                Guild.ins().sendChangeOffice(i, GuildOffice.GUILD_BANGZHU);
            }, this);
            break;

          case this.downBtn:
            WarnWin.show("是否免除[" + e.name + "]副宗主之职", function() {
                Guild.ins().sendChangeOffice(i, GuildOffice.GUILD_MEMBER);
            }, this);
            break;

          case this.kickBtn:
            WarnWin.show("确定将[" + e.name + "]踢出宗门？", function() {
                Guild.ins().sendKick(i);
            }, this);
            break;

          case this.appointBtn:
            WarnWin.show("确定任命[" + e.name + "]为副宗主？", function() {
                Guild.ins().canAppointFHZ() ? Guild.ins().sendChangeOffice(i, GuildOffice.GUILD_FUBANGZHU) : UserTips.ins().showTips("副宗主人数已达上限");
            }, this);
        }
    }, e.prototype.dataChanged = function() {
        if (this.data instanceof GuildMemberInfo) {
            var t = this.data, e = "";
            e = 0 == t.office ? "<font color='#FFE87F'>[" + GuildLanguage.guildOffice[t.office] + "]</font>" : "[" + GuildLanguage.guildOffice[t.office] + "]", 
            this.nameLab.textFlow = new egret.HtmlTextParser().parser(e + "<font color='#FFA810'>" + t.name + "</font>"), 
            this.conLab.text = "贡献度：" + t.contribution, this.attack.text = "战斗力：" + t.attack, 
            this.face.source = ResPath.getHeadIcon(t.sex, 2);
            var i = 0;
            t.downTime > 0 ? (i = .001 * (GameServer.serverTime - DateUtils.formatMiniDateTime(t.downTime)), 
            this.onLine.textFlow = TextFlowMaker.generateTextFlow("|C:0xff0000&T:" + DateUtils.getFormatBySecond(i, 4) + "|")) : this.onLine.textFlow = new egret.HtmlTextParser().parser("<font color='#8AF729'>在线</font>"), 
            this.group1.visible = !1, this.group2.visible = !1, this.group3.visible = !1;
            var n = Guild.ins().myOffice;
            switch (this.impeachBtn.visible = i >= 432e3, n) {
              case 6:
                if (6 == t.office) break;
                5 == t.office ? this.group2.visible = !0 : (this.group3.visible = !0, this.appointBtn.visible = !0);
                break;

              case 5:
                if (6 == t.office) this.group1.visible = !0; else {
                    if (5 == t.office) break;
                    this.group3.visible = !0, this.appointBtn.visible = !1;
                }
                break;

              case 4:
              case 3:
              case 2:
                6 == t.office && (this.group1.visible = !0);
            }
        }
    }, e;
}(BaseItemRender);

__reflect(GuildMemberItem2Render.prototype, "GuildMemberItem2Render");

window.GuildMemberItem2Render = GuildMemberItem2Render;

var GuildNewShopItem = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "GuildNewShopItemSkin", e.setSkinPart("item", new ItemBase()), 
        e.btnBuy.addEventListener(egret.TouchEvent.TOUCH_TAP, e.showBuy, e), e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        var t = GuildShopData.ins().level, e = this.data;
        this.sData = e;
        var i = GlobalConfig.ins().GuildStoreConfig[e.index];
        this.currentState = t >= i.level ? "open" : "lock", this.lockTxt.text = "商店" + i.level + "级解锁", 
        this.configId = i.reward[0].id, this.item.data = i.reward[0], this.item.isShowName(!1);
        var n = GlobalConfig.ins().ItemConfig(this.configId);
        n && (this.nameTxt.text = n.name), this.moneyTxt.text = i.contribute + "", this.limitTxt.text = "限购(" + e.buyTime + "/" + i.limit + ")";
    }, e.prototype.showBuy = function() {
        var t = GlobalConfig.ins().GuildStoreConfig[this.sData.index];
        return this.sData.buyTime >= t.limit ? void UserTips.ins().showTips("购买次数已满") : void ViewManager.ins().open(GuildNewShopBuyWin, this.sData);
    }, e;
}(BaseItemRender);

__reflect(GuildNewShopItem.prototype, "GuildNewShopItem");

window.GuildNewShopItem = GuildNewShopItem;

var GuildShopRecordItemRender = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "GuildStoreItemSkin", e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        if (this.data instanceof GuildStoreRecordInfo) {
            var t = GlobalConfig.ins().ItemConfig(this.data.itemId);
            t ? this.rank.textFlow = new egret.HtmlTextParser().parser(this.data.roleName + "   获得了   <font color=" + ItemBase.QUALITY_COLOR[t.quality] + ">" + t.name + "</font>") : this.rank.text = "";
        }
    }, e;
}(BaseItemRender);

__reflect(GuildShopRecordItemRender.prototype, "GuildShopRecordItemRender");

window.GuildShopRecordItemRender = GuildShopRecordItemRender;

var GuildTaskItemRender = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "GuildTaskItemSkin", e.isFinishImg.visible = !1, e;
    }
    return __extends(e, t), e.prototype.onTap = function(t) {
        switch (t) {
          case this.conBtn:
          case this.goBtn:
            this.conBtnOnCLick();
        }
    }, e.prototype.conBtnOnCLick = function() {
        var t = this.data;
        switch (t.stdTask.type) {
          case 31:
            t.param >= t.stdTask.target ? UserTips.ins().showTips("本日捐献次数已满") : Actor.yb > t.stdTask.param ? Guild.ins().sendCon(t.stdTask.conID) : UserWarn.ins().showWanTips0(WarnTipsWin0.TYPE_1);
            break;

          case 32:
            t.param >= t.stdTask.target ? UserTips.ins().showTips("本日捐献次数已满") : Actor.gold > t.stdTask.param ? Guild.ins().sendCon(t.stdTask.conID) : UserWarn.ins().setBuyGoodsWarn(1);
            break;

          case 33:
            t.param >= t.stdTask.target ? UserTips.ins().showTips("本日捐献次数已满") : UserBag.ins().getBagGoodsCountById(0, t.stdTask.param) >= 1 ? Guild.ins().sendCon(t.stdTask.conID) : UserTips.ins().showTips("道具不足");
            break;

          default:
            GameGuider.guidance(t.stdTask.controlTarget[0], t.stdTask.controlTarget[1]);
        }
    }, e.prototype.dataChanged = function() {
        if (this.data instanceof GuildTaskInfo) {
            var t = this.data;
            if (t) {
                if (this.nameLab.text = t.stdTask.name, this.descLab.text = t.stdTask.desc, this.conGroup.visible = !0, 
                this.getGroup.visible = !1, this.numLab.text = t.param + "/" + t.stdTask.target, 
                this.conBtn.enabled = t.param < t.stdTask.target, t.param < t.stdTask.target) switch (t.stdTask.type) {
                  case 31:
                  case 32:
                  case 33:
                    this.conBtn.label = "捐 献";
                    break;

                  default:
                    this.conBtn.label = "前 往";
                } else this.conBtn.label = "完 成";
                this.conBtn.visible = t.param < t.stdTask.target, this.isFinishImg.visible = !this.conBtn.visible;
            }
        }
    }, e;
}(BaseItemRender);

__reflect(GuildTaskItemRender.prototype, "GuildTaskItemRender");

window.GuildTaskItemRender = GuildTaskItemRender;

var GuildInteRankItemRenderer = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "GuildInteRankItemSkin", e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        this.rank.text = this.itemIndex + 1 + "", this.guildName.text = this.data.guildName, 
        this.guildOwn.text = this.data.ownName, this.point.text = this.data.guildPoint;
    }, e;
}(BaseItemRender);

__reflect(GuildInteRankItemRenderer.prototype, "GuildInteRankItemRenderer");

window.GuildInteRankItemRenderer = GuildInteRankItemRenderer;

var GuildInteRewardItemRenderer = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "GuildInteRewardItemSkin", e.list.itemRenderer = ItemBase, e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        this.rankLabel.text = "第" + (this.itemIndex + 1) + "名", this.data.rank ? this.list.dataProvider = new eui.ArrayCollection(this.data.award) : this.list.dataProvider = new eui.ArrayCollection(GuildWar.ins().getModel().creatGuildRankReward(this.data));
    }, e;
}(BaseItemRender);

__reflect(GuildInteRewardItemRenderer.prototype, "GuildInteRewardItemRenderer");

window.GuildInteRewardItemRenderer = GuildInteRewardItemRenderer;

var GuildWarMemberHeadRender = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "MemberHeadSkin", e.clickEffc = new MovieClip(), e.clickEffc.x = 49, 
        e.clickEffc.y = 28, e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        if (isNaN(this.data)) this.data instanceof SelectInfoData && (this.currentState = "panel", 
        this.num.textFlow = new egret.HtmlTextParser().parser(this.data.num + "份"), this.roleName.textFlow = new egret.HtmlTextParser().parser(this.data.data.name), 
        this.roleHead.source = ResPath.getHeadIcon(this.data.data.sex, 1)); else {
            this.currentState = "war";
            var t = EntityManager.ins().getEntityBymasterhHandle(this.data);
            if (t) {
                var e = t.infoModel;
                this.guildName.textFlow = new egret.HtmlTextParser().parser(e.guildName), this.roleName.textFlow = new egret.HtmlTextParser().parser(e.name), 
                this.roleHead.source = ResPath.getHeadIcon(e.sex, 1), GuildWar.ins().getModel().attHandle && GuildWar.ins().getModel().attHandle == this.data && this.addAttEffect();
            } else this.removeChildren();
        }
    }, e.prototype.addAttEffect = function() {}, e.prototype.showEffect = function() {}, 
    e.prototype.clearEffect = function() {
        DisplayUtils.removeFromParent(this.clickEffc), DisplayUtils.removeFromParent(this.attEffect);
    }, e;
}(BaseItemRender);

__reflect(GuildWarMemberHeadRender.prototype, "GuildWarMemberHeadRender");

window.GuildWarMemberHeadRender = GuildWarMemberHeadRender;

var GuildWarMemberHeadRender2 = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.btn1 = !0, e.skinName = "MemberHeadSkin2", e.attEffect || (e.attEffect = new MovieClip(), 
        e.attEffect.x = 49, e.attEffect.y = 40, e.attEffect.scaleX = .8, e.attEffect.scaleY = .8), 
        e.clickEffc || (e.clickEffc = new MovieClip(), e.clickEffc.x = 50, e.clickEffc.y = 40, 
        e.clickEffc.scaleX = .9, e.clickEffc.scaleY = .9), e;
    }
    return __extends(e, t), e.prototype.open = function() {
        this.roleHead.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onClick, this);
    }, e.prototype.close = function() {
        this.roleHead.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.onClick, this), 
        this.clearEffect(), TimerManager.ins().removeAll;
    }, e.prototype.onClick = function(t) {
        var e = this;
        if (this.showEffect(), GuildWar.ins().getModel().canClick) {
            if (GuildWar.ins().getModel().flagAcId == Actor.actorID) return void WarnWin.show("封印中攻击玩家会导致封印<font color='#FFB82A'>进度归0</font>，确定要攻击玩家嘛？", function() {
                GameLogic.ins().sendChangeAttrPoint(e.data), EntityManager.ins().showHideSomeOne(e.data);
            }, this);
            GameLogic.ins().sendChangeAttrPoint(this.data), GuildWar.ins().getModel().attHandle != this.data && EntityManager.ins().showHideSomeOne(this.data);
        }
    }, e.prototype.dataChanged = function() {
        var t = this;
        if (this.cont.x = this.cont.width / 2, this.cont.y = this.cont.height / 2, this.cont.scaleX = this.cont.scaleY = 1, 
        isNaN(this.data)) this.clearEffect(); else {
            var e = EntityManager.ins().getEntityBymasterhHandle(this.data);
            if (e) {
                var i = e.infoModel;
                this.guildName.textFlow = new egret.HtmlTextParser().parser(i.guildName), this.roleName.textFlow = new egret.HtmlTextParser().parser(i.name), 
                this.roleHead.icon = ResPath.getHeadIcon(i.sex, 1);
                var n = e.getHP() / e.getMaxHP() * 100;
                this.cooling = new CoolingQueueMcForCircle(this.playerBar, 100), this.cooling.setProgress(n, 100), 
                this.btn1 && (this.btn1 = !1, TimerManager.ins().doTimer(8e3, 0, function() {
                    t.showEffect();
                }, this));
            } else this.clearEffect();
        }
    }, e.prototype.addAttEffect = function() {
        this.attEffect.playFile(ResPath.getUIEffectPath(UiEffectType.Type28), -1), this.cont.addChild(this.attEffect);
    }, e.prototype.showEffect = function() {
        this.clickEffc.playFile(ResPath.getUIEffectPath(UiEffectType.Type15), 3), this.cont.addChild(this.clickEffc);
    }, e.prototype.clearEffect = function() {
        DisplayUtils.removeFromParent(this.clickEffc), DisplayUtils.removeFromParent(this.attEffect);
    }, e;
}(BaseItemRender);

__reflect(GuildWarMemberHeadRender2.prototype, "GuildWarMemberHeadRender2");

window.GuildWarMemberHeadRender2 = GuildWarMemberHeadRender2;

var GuildWarMemListRenderer = function(t) {
    function e() {
        var e = t.call(this) || this;
        return e.skinName = "WarMemSkin", e;
    }
    return __extends(e, t), e.prototype.dataChanged = function() {
        this.face.source = ResPath.getHeadIcon(this.data.sex, 2), this.nameLab.text = "[" + GuildLanguage.guildOffice[this.data.office] + "]", 
        this.nameLab0.text = this.data.myName, this.conLab.text = this.data.point + "", 
        this.attack.text = this.data.attr + "", this.onLine.text = "" == this.data.mapName ? "不在宗门战" : this.data.mapName;
    }, e;
}(BaseItemRender);

__reflect(GuildWarMemListRenderer.prototype, "GuildWarMemListRenderer");

window.GuildWarMemListRenderer = GuildWarMemListRenderer;