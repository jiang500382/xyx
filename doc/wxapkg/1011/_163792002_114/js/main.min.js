var egret = window.egret;

function FriendRewardsRefresh(e) {
    for (var t in e) "mapInfo" != t && ("stealIslands" != t || e[t]) && (_.isUndefined(FriendRewards[t]) || (FriendRewards[t] = e[t]));
}

function testNotice(e) {
    0 == e && g_Notice.test(game.NotificationMainType.friend_quick, game.NotificationSubType.none), 
    1 == e && g_Notice.test(game.NotificationMainType.couple, game.NotificationSubType.none), 
    2 == e && g_Notice.test(game.NotificationMainType.couple, game.NotificationSubType.none), 
    3 == e && g_Notice.test(game.NotificationMainType.couple, game.NotificationSubType.none), 
    4 == e && g_Notice.test(game.NotificationMainType.friend_request, game.NotificationSubType.none), 
    5 == e && g_Notice.test(game.NotificationMainType.receive_donate, game.NotificationSubType.jigsaw), 
    6 == e && g_Notice.test(game.NotificationMainType.receive_donate, game.NotificationSubType.kite), 
    7 == e && g_Notice.test(game.NotificationMainType.receive_donate, game.NotificationSubType.octopus), 
    8 == e && g_Notice.test(game.NotificationMainType.exchange_success, game.NotificationSubType.none), 
    9 == e && g_Notice.test(game.NotificationMainType.exchange_success, game.NotificationSubType.none), 
    10 == e && g_Notice.test(game.NotificationMainType.login_msg, game.NotificationSubType.none), 
    11 == e && g_Notice.test(game.NotificationMainType.receive_donate, game.NotificationSubType.beach);
}

var __reflect = this && this.__reflect || function(e, t, i) {
    e.__class__ = t, i ? i.push(t) : i = [ t ], e.__types__ = e.__types__ ? i.concat(e.__types__) : i;
}, __extends = this && this.__extends || function(e, t) {
    function i() {
        this.constructor = e;
    }
    for (var n in t) t.hasOwnProperty(n) && (e[n] = t[n]);
    i.prototype = t.prototype, e.prototype = new i();
}, __awaiter = this && this.__awaiter || function(e, t, i, n) {
    return new (i || (i = Promise))(function(o, a) {
        function r(e) {
            try {
                l(n.next(e));
            } catch (t) {
                a(t);
            }
        }
        function s(e) {
            try {
                l(n["throw"](e));
            } catch (t) {
                a(t);
            }
        }
        function l(e) {
            e.done ? o(e.value) : new i(function(t) {
                t(e.value);
            }).then(r, s);
        }
        l((n = n.apply(e, t || [])).next());
    });
}, __generator = this && this.__generator || function(e, t) {
    function i(e) {
        return function(t) {
            return n([ e, t ]);
        };
    }
    function n(i) {
        if (o) throw new TypeError("Generator is already executing.");
        for (;l; ) try {
            if (o = 1, a && (r = a[2 & i[0] ? "return" : i[0] ? "throw" : "next"]) && !(r = r.call(a, i[1])).done) return r;
            switch (a = 0, r && (i = [ 0, r.value ]), i[0]) {
              case 0:
              case 1:
                r = i;
                break;

              case 4:
                return l.label++, {
                    value: i[1],
                    done: !1
                };

              case 5:
                l.label++, a = i[1], i = [ 0 ];
                continue;

              case 7:
                i = l.ops.pop(), l.trys.pop();
                continue;

              default:
                if (r = l.trys, !(r = r.length > 0 && r[r.length - 1]) && (6 === i[0] || 2 === i[0])) {
                    l = 0;
                    continue;
                }
                if (3 === i[0] && (!r || i[1] > r[0] && i[1] < r[3])) {
                    l.label = i[1];
                    break;
                }
                if (6 === i[0] && l.label < r[1]) {
                    l.label = r[1], r = i;
                    break;
                }
                if (r && l.label < r[2]) {
                    l.label = r[2], l.ops.push(i);
                    break;
                }
                r[2] && l.ops.pop(), l.trys.pop();
                continue;
            }
            i = t.call(e, l);
        } catch (n) {
            i = [ 6, n ], a = 0;
        } finally {
            o = r = 0;
        }
        if (5 & i[0]) throw i[1];
        return {
            value: i[0] ? i[1] : void 0,
            done: !0
        };
    }
    var o, a, r, s, l = {
        label: 0,
        sent: function() {
            if (1 & r[0]) throw r[1];
            return r[1];
        },
        trys: [],
        ops: []
    };
    return s = {
        next: i(0),
        throw: i(1),
        return: i(2)
    }, "function" == typeof Symbol && (s[Symbol.iterator] = function() {
        return this;
    }), s;
}, hortor;

!function(e) {
    var t = function(t) {
        function i(i) {
            void 0 === i && (i = !0);
            var n = t.call(this) || this;
            return n.agent = new e.ViewAgent(n, i, n.onInit, n.onData, n.onOpen, n.onClose, n.onDispose), 
            n;
        }
        return __extends(i, t), i.prototype.load = function(e, t, i, n, o) {
            return this.agent.load(e, t, i, n, o);
        }, i.prototype.prepare = function(e, t) {
            e();
        }, i.prototype.show = function(e, t, i, n, o) {
            return void 0 === i && (i = null), void 0 === n && (n = null), void 0 === o && (o = null), 
            this.agent.show(e, t, i, n, o);
        }, i.prototype.hide = function(e, t) {
            return void 0 === e && (e = !1), void 0 === t && (t = !0), this.agent.hide(e, t);
        }, i.prototype.centerStage = function() {
            this.agent.centerStage();
        }, i.prototype.dispose = function() {
            this.agent.dispose();
        }, Object.defineProperty(i.prototype, "resource", {
            get: function() {
                return this.agent.resource;
            },
            set: function(e) {
                this.agent.resource = e;
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(i.prototype, "data", {
            get: function() {
                return this.agent.data;
            },
            set: function(e) {
                this.agent.data = e;
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(i.prototype, "id", {
            get: function() {
                return this.agent.id;
            },
            set: function(e) {
                this.agent.id = e;
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(i.prototype, "effect", {
            get: function() {
                return this.agent.effect;
            },
            set: function(e) {
                this.agent.effect = e;
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(i.prototype, "isInitialized", {
            get: function() {
                return this.agent.isInitialized;
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(i.prototype, "isOpen", {
            get: function() {
                return this.agent.isOpen;
            },
            enumerable: !0,
            configurable: !0
        }), i.prototype.onInit = function() {}, i.prototype.onOpen = function() {}, i.prototype.onClose = function() {}, 
        i.prototype.onData = function() {}, i.prototype.onDispose = function() {}, i.prototype.partAdded = function(e, i) {
            t.prototype.partAdded.call(this, e, i), this.agent.partAdded(e, i);
        }, i.prototype.resetSkinParts = function() {
            this.agent.resetSkinParts();
        }, i.prototype.setNotchFit = function(e) {
            this.agent.setNotchFit(e);
        }, i.prototype.callSafe = function(e, t, i) {
            this.agent.callSafe(e, t, i);
        }, i.prototype.addClick = function(e, t, i) {
            this.agent.addClick(e, t, i);
        }, i.prototype.removeClick = function(e, t, i) {
            this.agent.removeClick(e, t, i);
        }, i.prototype.removeFromParent = function(e) {
            void 0 === e && (e = !1), this.agent.removeFromParent(e);
        }, i;
    }(eui.Component);
    e.View = t, __reflect(t.prototype, "hortor.View", [ "hortor.IView" ]);
}(hortor || (hortor = {}));

window.hortor = hortor;

var hortor;

!function(e) {
    var t = function(t) {
        function i(i) {
            void 0 === i && (i = !0);
            var n = t.call(this) || this;
            return n.agent = new e.ViewAgent(n, i, n.onInit, n.onData, n.onOpen, n.onClose), 
            n.addEventListener(egret.Event.REMOVED_FROM_STAGE, n.resetSkinParts, n), n;
        }
        return __extends(i, t), i.prototype.load = function(e, t, i, n, o) {
            this.agent.load(e, t, i, n, o);
        }, i.prototype.dataChanged = function() {
            var e = this;
            this.callSafe(function() {
                t.prototype.dataChanged.call(e), e.agent.data = e.data, e.invalidateState();
            });
        }, Object.defineProperty(i.prototype, "isInitialized", {
            get: function() {
                return this.agent.isInitialized;
            },
            enumerable: !0,
            configurable: !0
        }), i.prototype.onInit = function() {}, i.prototype.onData = function() {}, i.prototype.onOpen = function() {}, 
        i.prototype.onClose = function() {}, i.prototype.partAdded = function(e, i) {
            t.prototype.partAdded.call(this, e, i), this.agent.partAdded(e, i);
        }, i.prototype.resetSkinParts = function() {
            this.agent.resetSkinParts();
        }, i.prototype.callSafe = function(e, t, i) {
            this.agent.callSafe(e, t, i);
        }, i.prototype.addClick = function(e, t, i) {
            this.agent.addClick(e, t, i);
        }, i.prototype.removeClick = function(e, t, i) {
            this.agent.removeClick(e, t, i);
        }, i.prototype.removeFromParent = function(e) {
            void 0 === e && (e = !1), this.agent.removeFromParent(e);
        }, i;
    }(eui.ItemRenderer);
    e.ItemRenderer = t, __reflect(t.prototype, "hortor.ItemRenderer");
}(hortor || (hortor = {}));

var hortor;

!function(e) {
    var t = function(t) {
        function i(e, i) {
            void 0 === e && (e = !0), void 0 === i && (i = !0);
            var n = t.call(this, e) || this;
            return n.autoCenter = i, n.touchEnabled = !0, n;
        }
        return __extends(i, t), i.prototype.load = function(i, n, o, a, r) {
            var s = this;
            return t.prototype.load.call(this, i, n, function() {
                s.skin && e.StageManager.addResizeListener(function() {
                    s.autoCenter && s.centerStage(), s.onResize();
                }, s), null != o && o.call(r, s);
            }, a, r);
        }, i.prototype.onResize = function() {}, Object.defineProperty(i.prototype, "backGround", {
            set: function(t) {
                function i(e) {
                    null == this.backGroundContent && (this.backGroundContent = new egret.Bitmap(), 
                    this.addChildAt(this.backGroundContent, 0)), this.backGroundContent.texture = e, 
                    this.validate();
                }
                e.ResourceManager.loadResource(t, i, this);
            },
            enumerable: !0,
            configurable: !0
        }), i;
    }(e.View);
    e.Window = t, __reflect(t.prototype, "hortor.Window", [ "hortor.IWindow" ]);
}(hortor || (hortor = {}));

var game;

!function(e) {
    var t = function(t) {
        function i(e) {
            return void 0 === e && (e = !0), t.call(this, e) || this;
        }
        return __extends(i, t), Object.defineProperty(i.prototype, "skinPath", {
            set: function(t) {
                this.load(e.ResourcePath.getSkinRes(t));
            },
            enumerable: !0,
            configurable: !0
        }), i;
    }(hortor.View);
    e.ViewBase = t, __reflect(t.prototype, "game.ViewBase");
}(game || (game = {}));

window.game = game;

var hortor;

!function(e) {
    var t = function() {
        function t(e) {
            void 0 === e && (e = null), null != e && this.inject(e);
        }
        return t.prototype.bind = function(t, i, n) {
            void 0 === n && (n = "text"), null == this._binder && (this._binder = new e.Binder(this, this.onPropertyChange)), 
            null == t && n instanceof Function ? this._onChangeFunc = n : this._binder.bind(t, i, n);
        }, t.prototype.unbind = function(e, t) {
            void 0 === t && (t = null), null != this._binder && this._binder.unbind(e, t);
        }, t.prototype.dispose = function() {
            this.isPersistant || (this._binder && (this._binder.dispose(), this._binder = null), 
            this._onChangeFunc = null);
        }, t.prototype.inject = function(e, t) {
            void 0 === t && (t = !0);
            for (var i in e) this.hasOwnProperty(i) && (t ? this.setProperty(i, e[i]) : this[i] = e[i]);
        }, t.prototype.setProperty = function(e, t, i) {
            void 0 === i && (i = !1), null != this._binder ? this._binder.setProperty(e, t, i) : this[e] = t;
        }, t.prototype.updateProperty = function(e) {
            null != this._binder && this._binder.updateProperty(e);
        }, Object.defineProperty(t.prototype, "source", {
            get: function() {
                return this._binder ? this._binder.source : this;
            },
            enumerable: !0,
            configurable: !0
        }), t.prototype.clone = function() {
            var t = e.construct(this);
            return t.inject(this.source), t;
        }, t.prototype.onPropertyChange = function() {
            null != this._onChangeFunc && this._onChangeFunc();
        }, t;
    }();
    e.Model = t, __reflect(t.prototype, "hortor.Model", [ "hortor.IBindable" ]);
}(hortor || (hortor = {}));

var hortor;

!function(e) {
    var t = function(t) {
        function i(e) {
            return void 0 === e && (e = !0), t.call(this, e) || this;
        }
        return __extends(i, t), i.prototype.registView = function(t, i) {
            null == this.viewNavigator && (this.viewNavigator = new e.WindowNavigator(this)), 
            this.viewNavigator.registWindow(t, i, null, null, !1, !1);
        }, i.prototype.unRegisterView = function(e) {
            this.viewNavigator.unRegisterWindow(e);
        }, i.prototype.hasView = function(e) {
            return this.viewNavigator.hasWindow(e);
        }, i.prototype.getView = function(e) {
            return this.viewNavigator.getWindow(e);
        }, Object.defineProperty(i.prototype, "currentView", {
            get: function() {
                return this.viewNavigator.currentWindow;
            },
            set: function(e) {
                this.viewNavigator.currentWindow = e;
            },
            enumerable: !0,
            configurable: !0
        }), i.prototype.showView = function(e, t) {
            void 0 === t && (t = null), this.viewNavigator.showWindow(e, t);
        }, i.prototype.onClose = function() {
            t.prototype.onClose.call(this), this.viewNavigator && (this.viewNavigator.currentWindow = -1);
        }, i;
    }(e.Window);
    e.Screen = t, __reflect(t.prototype, "hortor.Screen", [ "hortor.IScreen", "hortor.IView" ]);
}(hortor || (hortor = {}));

var hortor;

!function(e) {
    var t = function() {
        function e(e) {
            void 0 === e && (e = !0), this.autoCenter = !0, this.autoCenter = e;
        }
        return e.prototype.init = function(e) {
            var t = this;
            e.hasEffect = !0, this.target = e, this.autoCenter && egret.callLater(function() {
                t.target.width > 0 && 0 == t.target.anchorOffsetX && (t.target.anchorOffsetX = .5 * t.target.width, 
                t.target.anchorOffsetY = .5 * t.target.height, t.target.x += t.target.anchorOffsetX, 
                t.target.y += t.target.anchorOffsetY, t.initX = t.target.x, t.initY = t.target.y);
            }, this), this.hasOwnProperty("initX") || (this.initX = this.target.x, this.initY = this.target.y);
        }, e.prototype.start = function(e, t) {
            void 0 === t && (t = null), this.init(e);
        }, e.prototype.stop = function(e, t) {
            void 0 === t && (t = null), this.init(e);
        }, e;
    }();
    e.EffectBase = t, __reflect(t.prototype, "hortor.EffectBase", [ "hortor.IEffect" ]);
}(hortor || (hortor = {}));

var game;

!function(e) {
    var t = function(t) {
        function i(e) {
            return void 0 === e && (e = !0), t.call(this, e) || this;
        }
        return __extends(i, t), Object.defineProperty(i.prototype, "skinPath", {
            set: function(t) {
                this.load(e.ResourcePath.getSkinRes(t));
            },
            enumerable: !0,
            configurable: !0
        }), i;
    }(hortor.ItemRenderer);
    e.ItemRenderBase = t, __reflect(t.prototype, "game.ItemRenderBase");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i(e, i) {
            return void 0 === e && (e = !0), void 0 === i && (i = !0), t.call(this, e, i) || this;
        }
        return __extends(i, t), Object.defineProperty(i.prototype, "skinPath", {
            set: function(t) {
                this.load(e.ResourcePath.getSkinRes(t));
            },
            enumerable: !0,
            configurable: !0
        }), i;
    }(hortor.Window);
    e.WindowBase = t, __reflect(t.prototype, "game.WindowBase");
}(game || (game = {}));

var game;

!function(e) {
    var t = function() {
        function t() {}
        return t.initialize = function(e) {
            if (e) for (var t = 0; t < e.length; t++) {
                var i = e[t], n = this.shareConfigMap[i.type];
                n || (n = []), n.push(i), this.shareConfigMap[i.type] = n;
            }
            hortor.SystemManager.isWxGame && wx.updateShareMenu({
                withShareTicket: !0
            });
        }, t.registShare = function(e, t) {
            null == this.shareMap[e] && (this.shareMap[e] = new t(), this.shareMap[e].type = e);
        }, t.share = function(t, i, n) {
            var o = "", a = t.split(",");
            a.length > 1 ? (o = a[1], e.PlatformManager.LogEvent("share_" + a[0] + "_" + a[1])) : o = t, 
            null != this.shareMap[o] ? this.shareMap[o].share(i, n) : console.error("PlatformManager error,pls regist share:" + o);
        }, t.onAppStatus = function(e) {
            if (this.timeOutCallback) if (e) this.sharing && (this.pauseTime = egret.getTimer()); else {
                if (this.pauseTime > 0 && this.currentShare) {
                    var t = egret.getTimer(), i = t - this.pauseTime;
                    if (i >= 3e3) {
                        var n = {
                            shareTickets: !0
                        };
                        console.log("分享回调计时触发 type:" + this.currentShare.type), this.onShareResult(n);
                    }
                }
                this.pauseTime = 0;
            }
        }, t.onShareEnter = function(e) {
            var t = e.shareType;
            if (hortor.Log.log(this, "onShareEnter shareType:" + t), t) {
                t = t.substring(3);
                var i = this.shareMap[t];
                hortor.Log.log(this, "onShareEnter parse type:" + t + "," + i), null != i ? (i.shareOwnerId = e.shareOwnerId, 
                hortor.Log.log(this, "onShareEnter shareOwnerId:" + i.shareOwnerId + ",uid:" + playerModel.uid + ",ignoreMe:" + i.ignoreMe), 
                i.shareOwnerId == playerModel.uid.toString() && i.ignoreMe || (i.shareConfigId = e.shareConfigId, 
                i.onShareEnter(e))) : console.error("PlatformManager error,pls regist share:" + t);
            }
        }, t.shareSimple = function(t, i, n, o, a, r) {
            this.onShareCallback = i, this.onShareFailCallback = n, this.onShareThisobj = o, 
            this.currentShare = this.shareMap[t], e.PlatformManager.isWxgame ? (console.log("shareWX"), 
            this.shareWX(t, a, r)) : (console.log("shareH5"), this.shareH5(t, a, r));
        }, t.getShareConfig = function(e) {
            var t = {
                id: "0",
                category: 1,
                type: "default",
                name: "默认",
                title: "我靠！刚才我竟然挨了一炮！",
                desc: "没有什么是一炮解决不了的，如果有，那就两炮",
                img: "",
                active: !0
            };
            if (this.shareConfigMap[e] && this.shareConfigMap[e].length > 0) {
                var i = this.shareConfigMap[e].length, n = Math.floor(Math.random() * i);
                t = this.shareConfigMap[e][n];
            }
            return t;
        }, t.shareWX = function(e, i, n) {
            var o = this;
            t.sharing = !0;
            var a = this.getShareConfig(e), r = a.title.replace("$0", hortor.StringUtil.substring(playerModel.name, 10)), s = a.img;
            if (null != n) {
                if (n.hasOwnProperty("title")) for (var l in n.title) r = r.replace(l, n.title[l]);
                if (n.hasOwnProperty("img")) for (var d in n.img) s = s.replace(d, n.img[d]);
            }
            var u = "shareType=WX_" + e + "&shareConfigId=" + a.id + "&shareOwnerId=" + playerModel.uid + "&shareUid=" + playerModel.uid;
            if (i) for (var l in i) u += "&" + l + "=" + i[l];
            u += "&friendCode=" + playerModel.shareCode, platform.share.shareAppMessage(r, s, u, this.onShareResult.bind(this), function() {
                o.onShareResult(-1);
            }, function() {
                console.log("分享结束"), t.sharing = !1;
            });
        }, t.shareH5 = function(i, n, o) {
            t.sharing = !0;
            var a = this.getShareConfig(i);
            if (a) {
                var r = "H5_" + i, s = a.title.replace("$0", hortor.StringUtil.substring(playerModel.name, 10)), l = a.desc.replace("$0", hortor.StringUtil.substring(playerModel.name, 10));
                if (null != o) {
                    if (o.hasOwnProperty("title")) for (var d in o.title) s = s.replace(d, o.title[d]);
                    if (o.hasOwnProperty("desc")) for (var d in o.desc) l = a.desc.replace(d, o.desc[d]);
                }
                var u = playerModel.headImg, h = {
                    cp_shareType: r,
                    cp_shareConfigId: a.id,
                    cp_shareOwnerId: playerModel.uid
                };
                if (n) for (var d in n) h["cp_" + d] = n[d];
                hortor.WindowManager.currentWindow = e.WindowType.WINDOW_SHARE_GUIDE;
                try {
                    HORTOR_AGENT.config({
                        share: {
                            timeline: {
                                title: s,
                                imgUrl: u,
                                success: this.onShareResult.bind(this, i)
                            },
                            friend: {
                                title: s,
                                imgUrl: u,
                                desc: l,
                                shareConfigId: a.id,
                                success: this.onShareResult.bind(this, i)
                            },
                            shareCustomParam: h
                        }
                    });
                } catch (c) {
                    this.onShareResult(-1), console.log("share error:" + c);
                }
            }
        }, t.onShareResult = function(i) {
            t.sharing = !1, hortor.WindowManager.hideWindow(e.WindowType.WINDOW_SHARE_GUIDE), 
            -1 == i ? this.onShareFailCallback && (console.log("分享失败"), this.onShareFailCallback.call(this.onShareThisobj), 
            this.onShareFailCallback = null) : this.onShareCallback && (console.log("分享成功 shareTickets:" + i.shareTickets + "," + i), 
            e.PlatformManager.isWxgame && !i.shareTickets && this.currentShare.shareTickets || this.onShareCallback.call(this.onShareThisobj, i), 
            this.onShareCallback = null);
        }, t.showShareMenu = function() {
            gateModel.isWxgame && (platform.share.showShareMenu(function(e) {}, function(e) {}, function(e) {}), 
            this.onShareAppMessage());
        }, t.onShareAppMessage = function() {
            var e = this, i = Const["default"], n = this.getShareConfig(i), o = n.title.replace("$0", hortor.StringUtil.substring(playerModel.name, 10)), a = n.img, r = "shareType=WX_" + i + "&shareConfigId=" + n.id + "&shareOwnerId=" + playerModel.uid + "&shareUid=" + playerModel.uid;
            r += "&friendCode=" + playerModel.shareCode, platform.share.onShareAppMessage(o, a, r, function() {}, function() {}, function() {}, function() {
                t.sharing = !0, e.currentShare = null;
            });
        }, t.shareConfigMap = {}, t.shareMap = {}, t.sharing = !1, t.timeOutCallback = !1, 
        t.pauseTime = 0, t;
    }();
    e.ShareManager = t, __reflect(t.prototype, "game.ShareManager");
    var i = function() {
        function e() {
            this.shareTickets = !0, this.ignoreMe = !0;
        }
        return e.prototype.share = function(e, i) {
            t.shareSimple(this.type, this.onShareSuc, this.onShareFail, this, e, i);
        }, e.prototype.onShareSuc = function(e) {
            void 0 === e && (e = null);
        }, e.prototype.onShareFail = function() {}, e.prototype.onShareEnter = function(e) {}, 
        e;
    }();
    e.BaseShare = i, __reflect(i.prototype, "game.BaseShare");
}(game || (game = {}));

var hortor;

!function(e) {
    var t = function(e) {
        function t() {
            var t = e.call(this) || this;
            return t._color = 16777215, t._shadowColor = 0, t._strokeColor = 0, t._stroke = 0, 
            t._shadow = 0, t.touchEnabled = !1, t.addEventListener(egret.Event.COMPLETE, t.onInit, t), 
            t;
        }
        return __extends(t, e), t.prototype.onInit = function() {
            this.updateEffect();
        }, Object.defineProperty(t.prototype, "color", {
            get: function() {
                return this._color;
            },
            set: function(e) {
                this._color != e && (this._color = e, 16777215 == e ? this._colorFilter = null : this._colorFilter = this.createColor(!0), 
                this.updateEffect());
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(t.prototype, "strokeColor", {
            get: function() {
                return this._strokeColor;
            },
            set: function(e) {
                this._strokeColor != e && (this._strokeColor = e, this._strokeFilter = this.createStroke(!0), 
                this.updateEffect());
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(t.prototype, "shadowColor", {
            get: function() {
                return this._shadowColor;
            },
            set: function(e) {
                this._shadowColor != e && (this._shadowColor = e, this._shadowFilter = this.createShadow(!0), 
                this.updateEffect());
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(t.prototype, "stroke", {
            get: function() {
                return this._stroke;
            },
            set: function(e) {
                this._stroke != e && (this._stroke = e, 0 >= e ? this._strokeFilter = null : this._strokeFilter = this.createStroke(!0), 
                this.updateEffect());
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(t.prototype, "shadow", {
            get: function() {
                return this._shadow;
            },
            set: function(e) {
                this._shadow != e && (this._shadow = e, this._shadow <= 0 ? this._shadowFilter = null : this._shadowFilter = this.createShadow(!0), 
                this.updateEffect());
            },
            enumerable: !0,
            configurable: !0
        }), t.prototype.updateEffect = function() {
            var e = [];
            this._strokeFilter && e.push(this._strokeFilter), this._shadowFilter && e.push(this._shadowFilter), 
            this._colorFilter && e.push(this._colorFilter), this.filters = e.length > 0 ? e : null;
        }, t.prototype.createStroke = function(e) {
            void 0 === e && (e = !1);
            var t = "strokeFilter", i = this[t];
            return (!i || e) && (i = this[t] = new egret.GlowFilter(this.strokeColor, 1, this.stroke, this.stroke, 5)), 
            i;
        }, t.prototype.createShadow = function(e) {
            void 0 === e && (e = !1);
            var t = "shadowFilter", i = this[t];
            return (!i || e) && (i = this[t] = new egret.DropShadowFilter(2, 90, this.shadowColor, .6, this.shadow, this.shadow, 5)), 
            i;
        }, t.prototype.createColor = function(e) {
            void 0 === e && (e = !1);
            var t = "colorFilter", i = this[t];
            if (!i || e) {
                var n = function(e) {
                    var t = {
                        r: -1,
                        g: -1,
                        b: -1
                    };
                    return t.b = e % 256, t.g = Math.floor(e / 256) % 256, t.r = Math.floor(e / 256 / 256), 
                    t;
                }, o = n(this._color), a = [ 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0 ];
                a[0] = o.r / 255, a[6] = o.g / 255, a[12] = o.b / 255;
                var r = new egret.ColorMatrixFilter(a);
                i = this[t] = r;
            }
            return i;
        }, t;
    }(eui.Image);
    e.BaseImage = t, __reflect(t.prototype, "hortor.BaseImage");
}(hortor || (hortor = {})), window.hortor.BaseImage = hortor.BaseImage;

var hortor;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.isBreathing = !1, e.mSoundId = "panel_open", e.addEventListener(egret.Event.COMPLETE, e.onInit, e), 
            e.addEventListener(egret.TouchEvent.TOUCH_TAP, e.onTouchTap, e), e.addEventListener(egret.TouchEvent.TOUCH_RELEASE_OUTSIDE, e.onTouchTap, e), 
            e;
        }
        return __extends(i, t), i.prototype.onTouchTap = function(t) {
            this.mSoundId && e.SoundManager.playSound(this.mSoundId);
        }, Object.defineProperty(i.prototype, "soundId", {
            set: function(e) {
                this.mSoundId = e;
            },
            enumerable: !0,
            configurable: !0
        }), i.prototype.onInit = function() {
            var t = this;
            egret.callLater(function() {
                t.touchScaleEffect = new e.TouchScaleEffect(), t.breathEffect = new e.BreathEffect(), 
                t.touchScaleEffect.start(t), t.isBreathing && t.startBreath();
            }, this);
        }, i.prototype.startBreath = function() {
            this.isBreathing = !0, this.breathEffect && this.breathEffect.start(this);
        }, i.prototype.stopBreath = function() {
            this.isBreathing = !1, this.breathEffect && this.breathEffect.stop(this);
        }, i;
    }(eui.Image);
    e.EffectImageButton = t, __reflect(t.prototype, "hortor.EffectImageButton");
}(hortor || (hortor = {})), window.hortor.EffectImageButton = hortor.EffectImageButton;

var hortor;

!function(e) {
    var t = function() {
        function t() {
            this.initialize();
        }
        return t.prototype.initialize = function() {
            throw new Error("此接口必须由子类覆盖");
        }, t.initialize = function(t) {
            e.singletonFactory(t);
        }, t;
    }();
    e.Register = t, __reflect(t.prototype, "hortor.Register");
}(hortor || (hortor = {}));

var hortor;

!function(e) {
    var t = function() {
        function t(t, i) {
            this.windowMap = new Object(), this.mWindowScaleFactor = 1, this.modalId = 0, this.windowContainer = t, 
            this.defaultEffectType = i, this.activeWindows = new Array(), this.windowSequence = [], 
            this.modalBlocker = e.StageManager.createStageModalBlocker(this.onStageModalTouch, this);
        }
        return Object.defineProperty(t.prototype, "windowScaleFactor", {
            get: function() {
                return this.mWindowScaleFactor;
            },
            set: function(e) {
                this.mWindowScaleFactor = e;
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(t.prototype, "defaultEffectType", {
            get: function() {
                return this.mDefaultEffectType;
            },
            set: function(e) {
                this.mDefaultEffectType = e;
            },
            enumerable: !0,
            configurable: !0
        }), t.prototype.registWindow = function(t, i, n, o, a, r, s, l) {
            return void 0 === n && (n = null), void 0 === a && (a = !0), void 0 === r && (r = !0), 
            void 0 === s && (s = !1), void 0 === l && (l = 1), null == this.windowMap[t] && (this.windowMap[t] = new e.WindowData(t, i, a, r, s, n, o, l)), 
            this.windowMap[t];
        }, t.prototype.unRegisterWindow = function(e) {
            e in this.windowMap && delete this.windowMap[e];
        }, t.prototype.hasWindow = function(e) {
            return e in this.windowMap;
        }, t.prototype.getWindow = function(t) {
            t in this.windowMap || e.Log.error(this, "ViewNavigator未找到对应的windowId！");
            var i = this.windowMap[t], n = i.instance;
            return n.id = t, "undefined" == typeof n.effect && this.defaultEffectType && (n.effect = new this.defaultEffectType()), 
            n;
        }, t.prototype.getWindowData = function(e) {
            return this.windowMap[e];
        }, Object.defineProperty(t.prototype, "currentWindow", {
            get: function() {
                var e = this.activeWindows.length;
                return e > 0 ? this.activeWindows[e - 1] : -1;
            },
            set: function(t) {
                function i(t) {
                    l = d.windowMap[t.id], d.activeWindows.push(u), d.changeWindowState(t, e.WindowState.PREPARE), 
                    t.prepare(function(e) {
                        e && (l = d.windowMap[t.id], l.data = e), n(t);
                    }, function(i) {
                        d.activeWindows.splice(d.activeWindows.indexOf(t.id), 1), d.changeWindowState(t, e.WindowState.CLOSE);
                    });
                }
                function n(t) {
                    if (l = d.windowMap[t.id], l.state != e.WindowState.CLOSE) {
                        if (l.openId && !l.resGroup) {
                            var i = d.getWindowData(l.openId).resGroup;
                            l.resGroup = i;
                        }
                        var n = p.load(l.skinUrl, l.resGroup, o);
                        n && d.changeWindowState(t, e.WindowState.LOADING);
                    }
                }
                function o(i) {
                    l = d.windowMap[i.id], l.state != e.WindowState.CLOSE && (d.hideCurrentOpen(l.level), 
                    d.windowSequence.push(t), i.scaleX = i.scaleY = d.mWindowScaleFactor, i.show(l.parent || d.windowContainer, l.data, a, r), 
                    d.changeWindowState(i, e.WindowState.OPEN), l.parent = null);
                }
                function a(t) {
                    e.Log.log(d, "WindowOpened:" + t.id), d.changeWindowState(t, e.WindowState.OPEN), 
                    l = d.windowMap[t.id], l.onOpen && l.onOpen.call(l.thisObj);
                }
                function r(t) {
                    e.Log.log(d, "WindowClosed:" + t.id), l = d.windowMap[t.id], l.onClose && l.onClose.call(l.thisObj), 
                    l.data = null, l.onOpen = null, l.onClose = null, s = d.activeWindows.indexOf(t.id), 
                    s >= 0 && (d.activeWindows.splice(s, 1), d.isWindowGroup(t.id) && (d.hideWindow(l.openId), 
                    l.openId = -1)), d.changeWindowState(t, e.WindowState.CLOSE);
                }
                -1 == t || t in this.windowMap || e.Log.warn(this, "ViewNavigator未找到对应的windowId:" + t);
                var s, l, d = this;
                if (-1 == t) this.hideCurrentOpen(1); else if (this.windowMap[t]) {
                    var u = d.getRealWindowId(t);
                    if (e.Log.log(this, "OpenWindow ID:" + t + "|realWindowId:" + u), d.isWindowGroup(u)) {
                        l = this.windowMap[t];
                        var h = d.getWindowData(u), c = h.openList.getItemAt(0);
                        if (!c) return void e.Log.warn(this, "group has no open:" + u);
                        if (t != u) {
                            if (-1 == h.openList.getItemIndex(t)) return void e.Log.warn(this, "no open:" + t);
                            c = t, l.manualCloseOnly = !1, this.isActive(u) && l.parent && (u = t);
                        }
                        h.openId = c, h.data = c;
                    }
                    var p = this.getWindow(u);
                    l = this.windowMap[u], this.isActive(u) ? l.isOpen && (p.data = l.data, l.parent = null) : i(p);
                }
            },
            enumerable: !0,
            configurable: !0
        }), t.prototype.back = function() {
            this.windowSequence.length > 1 && (this.windowSequence.pop(), this.currentWindow = this.windowSequence.pop());
        }, t.prototype.hideWindow = function(t, i, n, o, a) {
            if (void 0 === o && (o = !1), void 0 === a && (a = !0), this.windowMap[t]) {
                var r = this.windowMap[t];
                i && (r.onClose = i, r.thisObj = n);
                var s = this.getWindow(t);
                return r.isOpen ? s.hide(o, a) : r.isActive && (this.activeWindows.splice(this.activeWindows.indexOf(t), 1), 
                this.changeWindowState(s, e.WindowState.CLOSE)), !0;
            }
            return !1;
        }, t.prototype.hideAllWindow = function(e) {
            void 0 === e && (e = !0);
            for (var t = 0; t < this.activeWindows.length; t++) this.hideWindow(this.activeWindows[t], null, null, !1, e), 
            t--;
        }, t.prototype.toggleWindow = function(e) {
            var t = this.getWindow(e);
            t.isOpen ? this.hideWindow(t.id) : this.showWindow(t.id);
        }, t.prototype.isOpen = function(e) {
            return this.windowMap[e] ? this.windowMap[e].isOpen : !1;
        }, t.prototype.isActive = function(e) {
            return this.windowMap[e] ? this.windowMap[e].isActive : !1;
        }, t.prototype.isLoading = function(e) {
            return this.windowMap[e] ? this.windowMap[e].isLoading : !1;
        }, Object.defineProperty(t.prototype, "isModaling", {
            get: function() {
                return null != this.modalBlocker.parent;
            },
            enumerable: !0,
            configurable: !0
        }), t.prototype.showWindow = function(e, t, i, n, o, a, r) {
            void 0 === t && (t = null), void 0 === i && (i = null), void 0 === r && (r = -1);
            var s = this.windowMap[e];
            s && (-1 != r && (s.level = r), s.onOpen = n, s.onClose = o, s.thisObj = a, s.data = t, 
            s.parent = i, this.currentWindow = e);
        }, t.prototype.changeWindowState = function(e, t) {
            var i = this.windowMap[e.id];
            i && i.state != t && (i.state = t, this.checkWindowModal(), this.onStateChanged(e, t));
        }, t.prototype.onStateChanged = function(t, i) {
            e.Log.log(this, "WindowState changed ID:" + t.id + ",state:" + i);
        }, t.prototype.hideCurrentOpen = function(e) {
            var t = this.activeWindows.length;
            if (t > 0) for (var i = t - 1; i >= 0; i--) {
                var n = this.activeWindows[i], o = this.windowMap[n], a = void 0 == e || o.level == e;
                if (a && o.isOpen && !o.manualCloseOnly) return this.hideWindow(n), n;
            }
            return -1;
        }, t.prototype.checkWindowModal = function() {
            null != this.modalBlocker.parent && this.modalBlocker.parent.removeChild(this.modalBlocker);
            for (var e, t = this.activeWindows.length, i = t - 1; i >= 0; i--) if (e = this.getWindowData(this.activeWindows[i]), 
            e.hasModal) {
                this.modalId = this.activeWindows[i];
                var n = this.windowContainer.getChildIndex(this.getWindow(this.activeWindows[i]));
                this.modalBlocker.alpha = e.modalAlpha, this.windowContainer.addChildAt(this.modalBlocker, Math.max(n, 0));
                break;
            }
        }, t.prototype.onStageModalTouch = function() {
            var e = this.getWindowData(this.modalId);
            e.modalClickHide && e.isOpen && this.hideWindow(this.modalId);
        }, t.prototype.setOpenList = function(e, t) {
            void 0 === t && (t = !1);
            for (var i = 0; i < e.length; i++) {
                var n = e[i];
                this.setOpen(n, !0);
            }
        }, t.prototype.setOpen = function(e, t) {
            for (var i in this.windowMap) {
                var n = this.getWindowData(parseInt(i));
                if (n.fullList) for (var o = n.openList, a = 0; a < n.fullList.length; a++) {
                    var r = n.fullList[a];
                    if (e == r) {
                        var s = o.getItemIndex(e);
                        t ? -1 == s && o.addItemAt(e, this.getInsertIndex(n, e)) : -1 != s && o.removeItemAt(s);
                    }
                }
            }
        }, t.prototype.isWindowGroup = function(e) {
            void 0 === e && (e = 0);
            var t = this.getWindowData(e);
            return t && null != t.fullList;
        }, t.prototype.getInsertIndex = function(e, t) {
            for (var i = 0, n = 0; n < e.fullList.length; n++) {
                var o = e.fullList[n];
                if (o == t) break;
                -1 != e.openList.getItemIndex(o) && i++;
            }
            return i;
        }, t.prototype.getRealWindowId = function(e) {
            void 0 === e && (e = 0);
            for (var t in this.windowMap) {
                var i = this.getWindowData(parseInt(t));
                if (i.fullList) for (var n = i.fullList.length, o = 0; n > o; o++) {
                    var a = i.fullList[o];
                    if (a == e) return parseInt(t);
                }
            }
            return e;
        }, t;
    }();
    e.WindowNavigator = t, __reflect(t.prototype, "hortor.WindowNavigator");
}(hortor || (hortor = {}));

var hortor;

!function(e) {
    var t = function() {
        function e() {
            this.step = -1;
        }
        return e.prototype.execute = function() {}, e;
    }();
    e.Command = t, __reflect(t.prototype, "hortor.Command", [ "hortor.ICommand" ]);
}(hortor || (hortor = {}));

var hortor;

!function(e) {
    var t = function(e) {
        function t() {
            return e.call(this) || this;
        }
        return __extends(t, e), t.prototype.show = function(e, t, i) {
            void 0 === i && (i = null), this.init(e);
        }, t.prototype.hide = function(e, t, i) {
            void 0 === i && (i = null), this.init(e);
        }, t;
    }(e.EffectBase);
    e.WindowEffectBase = t, __reflect(t.prototype, "hortor.WindowEffectBase", [ "hortor.IWindowEffect" ]);
}(hortor || (hortor = {}));

var hortor;

!function(e) {
    var t = function() {
        function e() {}
        return e.add = function(e, t, i) {
            var n = this.notificationMap[e] || new Array();
            -1 == this.getCallBackIndex(n, t, i) && (n.push({
                func: t,
                thisObject: i
            }), this.notificationMap[e] = n);
        }, e.addCommand = function(e, t) {
            var i = this.notificationMap[e] || new Array();
            -1 == i.indexOf(t) && (i.push(t), this.notificationMap[e] = i);
        }, e.dispatch = function(e) {
            for (var t = [], i = 1; i < arguments.length; i++) t[i - 1] = arguments[i];
            this.dispatchByArray(e, t);
        }, e.dispatchByArray = function(e, t) {
            var i = this.notificationMap[e];
            if (i) for (var n = i.length, o = 0; n > o; o++) {
                var a = i[o];
                if (a) if (a.execute) {
                    var r = a;
                    r.execute();
                } else if (a.func) {
                    var s = a.func;
                    0 == s.length ? s.apply(a.thisObject) : s.apply(a.thisObject, t);
                }
            }
        }, e.remove = function(e, t, i) {
            if (t) {
                var n = this.notificationMap[e];
                if (n) {
                    var o = this.getCallBackIndex(n, t, i);
                    o >= 0 && (n.splice(o, 1), n.length <= 0 && delete this.notificationMap[e]);
                }
            } else delete this.notificationMap[e];
        }, e.removeCommand = function(e, t) {
            var i = this.notificationMap[e];
            if (i) {
                var n = i.indexOf(t);
                n >= 0 && (i.splice(n, 1), i.length <= 0 && delete this.notificationMap[e]);
            }
        }, e.clear = function() {
            this.notificationMap = new Object();
        }, e.debug = function(e) {
            if (void 0 === e && (e = null), console.log("------------------NotificationObserver Dump---------------------"), 
            e) this.notificationMap[e] && console.log(e + ": has " + this.notificationMap[e].length + " callbacks."); else for (var t in this.notificationMap) console.log(t + ": has " + this.notificationMap[t].length + " callbacks.");
            console.log("--------------------------Dump End-----------------------------");
        }, e.getCallBackIndex = function(e, t, i) {
            for (var n = e.length, o = 0; n > o; o++) {
                var a = e[o];
                if (a.func === t && a.thisObject === i) return o;
            }
            return -1;
        }, e.notificationMap = new Object(), e;
    }();
    e.NotificationManager = t, __reflect(t.prototype, "hortor.NotificationManager");
}(hortor || (hortor = {}));

var hortor;

!function(e) {
    var t = function() {
        function t(e, t, i) {
            void 0 === e && (e = egret.WebSocket.TYPE_STRING), void 0 === t && (t = 3), void 0 === i && (i = 5e3), 
            this.handleMap = new Object(), this.retryInterval = 5e3, this.retryMaxCount = 3, 
            this.retryCount = 0, this.socket = new egret.WebSocket(), this.socket.type = e, 
            this.retryMaxCount = t, this.retryInterval = i, this.socket.addEventListener(egret.Event.CONNECT, this.onOpenSocket, this), 
            this.socket.addEventListener(egret.ProgressEvent.SOCKET_DATA, this.onDataSocket, this), 
            this.socket.addEventListener(egret.Event.CLOSE, this.onCloseSocket, this), this.socket.addEventListener(egret.IOErrorEvent.IO_ERROR, this.onIoErrorSocket, this);
        }
        return t.prototype.connectByUrl = function(t, i, n) {
            void 0 === n && (n = !0), this.url = t, this.sign = i, e.Log.log(this, "TCPService connect:" + t + ",connected:" + this.socket.connected), 
            this.socket.connected || (n && this.reset(), this.socket.connectByUrl(t));
        }, t.prototype.close = function() {
            this.socket.connected && (e.Log.log(this, "TCPService close"), this.socket.close());
        }, t.prototype.sendPackage = function(t, i) {
            return this.connected ? void 0 : void e.Log.log(this, "TCPService not connect Send:" + t);
        }, Object.defineProperty(t.prototype, "connected", {
            get: function() {
                return this.socket.connected;
            },
            enumerable: !0,
            configurable: !0
        }), t.prototype.onOpen = function() {}, t.prototype.onData = function(e, t) {}, 
        t.prototype.onClose = function() {}, t.prototype.onError = function() {}, t.prototype.registerHandler = function(e, t) {
            null != t && (e in this.handleMap && console.warn("TCPService " + e + " has already registed"), 
            this.handleMap[e] = t);
        }, t.prototype.unRegisterHandler = function(e) {
            e in this.handleMap ? delete this.handleMap[e] : console.error("TCPService Cannot find the type: " + e);
        }, t.prototype.registerReciever = function(e) {
            var t = e.collectObservers();
            for (var i in t) this.registerHandler(i, t[i]);
        }, t.prototype.removeReciver = function(e) {
            var t = e.collectObservers();
            for (var i in t) this.unRegisterHandler(i);
        }, t.prototype.excuteHandler = function(e, t) {
            if (e in this.handleMap) {
                var i = this.handleMap[e];
                return i.func.call(i.obj, t), !0;
            }
            return console.warn(this, "TCPService No handle was found for type: " + e), !1;
        }, t.prototype.onOpenSocket = function(t) {
            e.Log.log(this, "TCPService onOpenSocket"), this.sign && this.socket.writeUTF(this.sign), 
            this.reset(), this.onOpen();
        }, t.prototype.onCloseSocket = function(t) {
            e.Log.log(this, "TCPService onClose"), this.onClose(), this.retry();
        }, t.prototype.onDataSocket = function(e) {
            var t = JSON.parse(this.socket.readUTF());
            this.excuteHandler(t.action, t), this.onData(t.action, t);
        }, t.prototype.onIoErrorSocket = function(t) {
            e.Log.log(this, "TCPService onIoError"), this.onError();
        }, t.prototype.retry = function() {
            null == this.timer && (this.timer = new egret.Timer(this.retryInterval), this.timer.addEventListener(egret.TimerEvent.TIMER, function() {
                this.retryCount++, this.retryCount < this.retryMaxCount ? (e.Log.log(this, "TCPService retry start" + this.retryCount + "/" + this.retryMaxCount), 
                this.connectByUrl(this.url, this.sign, !1)) : e.Log.warn(this, "TCPService retry outof maxCount");
            }, this)), this.timer.reset(), this.timer.start();
        }, t.prototype.reset = function() {
            this.retryCount = 0, null != this.timer && this.timer.stop();
        }, t;
    }();
    e.TCPService = t, __reflect(t.prototype, "hortor.TCPService");
    var i = function() {
        function e() {
            this.cmdObservers = new Object(), this.hasCollected = !1;
        }
        return e.prototype.collectObservers = function() {
            return this.hasCollected || (this.registObservers(), this.hasCollected = !0), this.cmdObservers;
        }, e.prototype.registObservers = function() {
            throw new Error("collectObservers must be implemented by subclass");
        }, e.prototype.register = function(e, t, i) {
            if (e in this.cmdObservers && egret.log("Warning  " + e + " has already been registed"), 
            null == t) throw new Error("Cannot registe a null hanlder");
            this.cmdObservers[e] = {
                func: t,
                obj: i
            };
        }, e;
    }();
    e.AbstractMessageReceiver = i, __reflect(i.prototype, "hortor.AbstractMessageReceiver");
}(hortor || (hortor = {}));

var hortor;

!function(e) {
    var t = function() {
        function e() {
            this.mLength = 0, this.mLength = 0, this.content = new Object();
        }
        return Object.defineProperty(e.prototype, "length", {
            get: function() {
                return this.mLength;
            },
            enumerable: !0,
            configurable: !0
        }), e.prototype.isEmpty = function() {
            return 0 == this.mLength;
        }, e.prototype.keys = function() {
            var e = new Array(this.mLength), t = 0;
            for (var i in this.content) e[t] = i, t++;
            return e;
        }, e.prototype.eachKey = function(e, t) {
            for (var i in this.content) e.call(t, i);
        }, e.prototype.eachValue = function(e, t) {
            for (var i in this.content) {
                var n = this.content[i];
                e.call(t, n);
            }
        }, e.prototype.values = function() {
            var e = new Array(this.mLength), t = 0;
            for (var i in this.content) e[t] = this.content[i], t++;
            return e;
        }, e.prototype.containsValue = function(e) {
            for (var t in this.content) {
                var i = this.content[t];
                if (i === e) return !0;
            }
            return !1;
        }, e.prototype.containsKey = function(e) {
            return e = this.generateKey(e), void 0 != this.content[e] ? !0 : !1;
        }, e.prototype.getValue = function(e) {
            e = this.generateKey(e);
            var t = this.content[e];
            return void 0 !== t ? t : null;
        }, e.prototype.put = function(e, t) {
            if (e = this.generateKey(e), null == e) throw new Error("cannot put a value with undefined or null key!");
            if (null == t) return this.remove(e);
            var i = this.containsKey(e);
            return i || this.mLength++, this.content[e] = t, t;
        }, e.prototype.remove = function(e) {
            e = this.generateKey(e);
            var t = this.containsKey(e);
            if (!t) return null;
            var i = this.content[e];
            return this.content[e] = null, delete this.content[e], this.mLength--, i;
        }, e.prototype.clear = function() {
            this.mLength = 0, this.content = new Object();
        }, e.prototype.clone = function() {
            var t = new e();
            for (var i in this.content) t.put(i, this.content[i]);
            return t;
        }, e.prototype.toString = function() {
            for (var e = this.keys(), t = this.values(), i = "HashMap Content:\n", n = 0; n < e.length; n++) i += e[n] + " -> " + t[n] + "\n";
            return i;
        }, e.prototype.generateKey = function(t) {
            return t && "string" != typeof t && "number" != typeof t && (void 0 == t._hashtableUniqueId && (t._hashtableUniqueId = "___HID___" + e.id++), 
            t = t._hashtableUniqueId), t;
        }, e.id = 0, e;
    }();
    e.HashMap = t, __reflect(t.prototype, "hortor.HashMap");
}(hortor || (hortor = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.share = function(i, n) {
            e.PlatformManager.LogEvent(this.type + "_share"), t.prototype.share.call(this, i, n);
        }, i.prototype.onShareSuc = function(e) {
            EventCenter.sendEvent(EventConst.ReportShareSuccess);
        }, i.prototype.onShareFail = function() {}, i.prototype.onShareEnter = function(e) {}, 
        i;
    }(e.BaseShare);
    e.GameShare = t, __reflect(t.prototype, "game.GameShare");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i(e) {
            void 0 === e && (e = !0);
            var i = t.call(this, e) || this;
            return i.effect = null, i;
        }
        return __extends(i, t), Object.defineProperty(i.prototype, "skinPath", {
            set: function(t) {
                this.load(e.ResourcePath.getSkinRes(t));
            },
            enumerable: !0,
            configurable: !0
        }), i;
    }(hortor.Screen);
    e.ScreenBase = t, __reflect(t.prototype, "game.ScreenBase");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(e) {
        function t() {
            var t = e.call(this, !0, !1) || this;
            return t.effect = null, t;
        }
        return __extends(t, e), t;
    }(e.WindowBase);
    e.TabWindowBase = t, __reflect(t.prototype, "game.TabWindowBase");
}(game || (game = {}));

var hortor;

!function(e) {
    var t = function(t) {
        function i(i) {
            var n = t.call(this) || this;
            n.isLoading = !1;
            var o = i.split("/"), a = o[o.length - 1];
            n.armatureName = "armature_" + a, n.dragonJson = i + "/ske.json", n.textureJson = i + "/tex.json", 
            n.texturePng = i + "/tex.png";
            var r = [];
            return r.push({
                url: n.dragonJson,
                type: RES.ResourceItem.TYPE_JSON
            }), r.push({
                url: n.textureJson,
                type: RES.ResourceItem.TYPE_JSON
            }), r.push({
                url: n.texturePng,
                type: RES.ResourceItem.TYPE_IMAGE
            }), e.ResourceManager.createGroup(n.armatureName, r), n.onLoadCallBacks = new Array(), 
            n.addEventListener(egret.Event.REMOVED_FROM_STAGE, n.stop, n), n;
        }
        return __extends(i, t), i.prototype.preload = function() {
            var t = this;
            e.ResourceManager.loadGroup(this.armatureName, -2, function() {
                console.log("silent load end:" + t.armatureName);
            });
        }, i.prototype.load = function(t, i) {
            var n = this;
            this.armature ? t.call(i) : (null != t && this.onLoadCallBacks.push({
                func: t,
                obj: i
            }), this.isLoading || (this.isLoading = !0, e.ResourceManager.loadGroup(this.armatureName, 0, function() {
                for (n.buildArmature(); n.onLoadCallBacks.length; ) {
                    var e = n.onLoadCallBacks.shift();
                    e.func.call(e.obj);
                }
            }, function(e) {
                n.onPlayComplete && n.onPlayComplete.call(n.thisObj);
            })));
        }, i.prototype.play = function(e, t, i, n, o, a) {
            var r = this;
            void 0 === t && (t = 1), void 0 === a && (a = 0), this.currentActionName = e, this.currentActionCount = 0, 
            this.onPlayComplete = i, this.totalActionCount = t, this.thisObj = n, this.armature ? (this.initDragonClock(), 
            dragonBones.WorldClock.clock.contains(this.armature) || dragonBones.WorldClock.clock.add(this.armature), 
            o && o.call(n), this.display.animation.gotoAndPlayByFrame(e, a, t)) : this.load(function() {
                r.play(e, t, i, n, o, a);
            }, this);
        }, i.prototype.initDragonClock = function() {
            var t;
            i.isClockInited || (i.isClockInited = !0, egret.startTick(function(e) {
                t || (t = e);
                var i = e - t;
                return t = e, dragonBones.WorldClock.clock.advanceTime(i / 1e3), !1;
            }, e.StageManager.stage));
        }, i.prototype.stop = function() {
            var e = this;
            this.armature ? this.armature && this.currentActionName && (this.armature.animation.stop(this.currentActionName), 
            dragonBones.WorldClock.clock.remove(this.armature)) : this.load(function() {
                e.stop();
            }, this);
        }, i.prototype.dispose = function(t) {
            void 0 === t && (t = !1), this.stop(), this.removeEventListener(egret.Event.REMOVED_FROM_STAGE, this.stop, this), 
            this.armature && (this.armature.eventDispatcher.removeDBEventListener(dragonBones.EgretEvent.LOOP_COMPLETE, this.loopComplete, this), 
            this.armature.dispose(), this.armature = null, this.dragonbonesFactory.clear(t), 
            this.dragonbonesFactory = null, e.ResourceManager.getResource(this.dragonJson) && e.ResourceManager.diposeResource(this.armatureName)), 
            this.parent && this.parent.removeChild(this);
        }, i.prototype.setSlotSkin = function(t, i, n, o) {
            function a(e) {
                var i = this.armature.getSlot(t);
                if (i) {
                    var a = new egret.Bitmap();
                    a.texture = e, a.x = i.display.x, a.y = i.display.y, a.width = n ? n : i.display.width, 
                    a.height = o ? o : i.display.height, a.anchorOffsetX = a.width >> 1, a.anchorOffsetY = a.height >> 1, 
                    i.display = a;
                } else console.error("ArmaturePlayer getSlot not found:" + this.armatureName + "," + t);
            }
            var r = this;
            void 0 === n && (n = 0), void 0 === o && (o = 0), this.armature ? e.ResourceManager.loadImage(i, function(e) {
                a.call(r, e);
            }, this) : this.load(function() {
                r.setSlotSkin(t, i);
            }, this);
        }, i.prototype.setSlotArmature = function(e, t) {
            var i = this;
            if (this.armature) {
                var n = this.armature.getSlot(e);
                n.childArmature = t;
            } else this.load(function() {
                i.setSlotArmature(e, t);
            }, this);
        }, i.prototype.getSlotArmature = function(e) {
            if (this.armature) {
                var t = this.armature.getSlot(e);
                return t;
            }
            return null;
        }, i.prototype.buildArmature = function() {
            var e = RES.getRes(this.dragonJson), t = RES.getRes(this.textureJson), i = RES.getRes(this.texturePng);
            this.dragonbonesFactory = new dragonBones.EgretFactory(), this.dragonbonesFactory.parseDragonBonesData(e), 
            this.dragonbonesFactory.parseTextureAtlasData(t, i), this.display = this.dragonbonesFactory.buildArmatureDisplay(e.armature[0].name), 
            this.armature = this.display.armature, this.addChild(this.display), this.display.addEventListener(dragonBones.EventObject.LOOP_COMPLETE, this.loopComplete, this);
        }, i.prototype.loopComplete = function(e) {
            this.currentActionCount > 0 ? (this.currentActionCount++, this.currentActionCount >= this.totalActionCount && this.onPlayComplete && this.onPlayComplete.call(this.thisObj, e)) : this.onPlayComplete && this.onPlayComplete.call(this.thisObj, e);
        }, i.prototype.getActionName = function() {
            return this.currentActionName;
        }, i.prototype.arAddListener = function(e, t, i) {
            this.armature.eventDispatcher.addDBEventListener(e, t, i);
        }, i.isClockInited = !1, i;
    }(egret.DisplayObjectContainer);
    e.ArmaturePlayer = t, __reflect(t.prototype, "hortor.ArmaturePlayer");
}(hortor || (hortor = {}));

var hortor;

!function(e) {
    var t = function(t) {
        function i(i, n) {
            void 0 === n && (n = null);
            var o = t.call(this, n) || this;
            return o.m_path = i, e.SystemManager.addStoreable(o), o;
        }
        return __extends(i, t), i.prototype.dispose = function() {
            t.prototype.dispose.call(this), e.SystemManager.removeStoreable(this);
        }, Object.defineProperty(i.prototype, "path", {
            get: function() {
                return this.m_path;
            },
            enumerable: !0,
            configurable: !0
        }), i.prototype.load = function(e) {}, i.prototype.save = function(e) {}, i;
    }(e.Model);
    e.ModelStoreable = t, __reflect(t.prototype, "hortor.ModelStoreable", [ "hortor.IStoreable" ]);
}(hortor || (hortor = {}));

var hortor;

!function(e) {
    var t = function(e) {
        function t() {
            var t = e.call(this) || this;
            return t.addEventListener(egret.Event.ADDED_TO_STAGE, t.onInit, t), t;
        }
        return __extends(t, e), t.prototype.onInit = function() {
            this.closeBtn.soundId = game.SoundType.SOUND_PANEL_CLOSE, this.closeBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onClose, this);
        }, t.prototype.onClose = function() {
            this.closeWindow();
        }, t.prototype.closeWindow = function() {
            var e = this.parent.parent;
            e && e.hide();
        }, t;
    }(eui.Component);
    e.TemplatePanel = t, __reflect(t.prototype, "hortor.TemplatePanel");
}(hortor || (hortor = {})), window.hortor.TemplatePanel = hortor.TemplatePanel;

var game;

!function(e) {
    var t = function(e) {
        function t(t) {
            var i = e.call(this) || this;
            return i.itemRenderer = t, i;
        }
        return __extends(t, e), t.prototype.onInit = function() {
            this.scroll.viewport = this.tabBar, this.scroll.scrollPolicyV = eui.ScrollPolicy.OFF, 
            this.tabBar.requireSelection = !0, this.tabBar.itemRenderer = this.itemRenderer, 
            this.tabBar.addEventListener(egret.Event.CHANGE, this.onTabChange, this);
        }, Object.defineProperty(t.prototype, "dataProvider", {
            get: function() {
                return this.mDataProvider;
            },
            set: function(e) {
                var t = this;
                this.mDataProvider = e, this.callSafe(function() {
                    t.tabBar.dataProvider = t.mDataProvider, t.mDataProvider.addEventListener(eui.CollectionEvent.COLLECTION_CHANGE, t.onProviderChange, t);
                });
            },
            enumerable: !0,
            configurable: !0
        }), t.prototype.onProviderChange = function(e) {
            0 == this.dataProvider.length && this.hide();
        }, t.prototype.onTabChange = function(e) {
            if (void 0 === e && (e = null), this.tabBar.selectedItem) {
                var t = hortor.WindowManager.getWindowData(this.tabBar.selectedItem), i = 10 * hortor.WindowManager.getWindowData(this.id).level;
                hortor.WindowManager.showWindow(this.tabBar.selectedItem, t.data, this.root.content, t.onOpen, t.onClose, null, i);
            }
        }, t.prototype.onData = function() {
            this.tabBar.selectedIndex = -1;
            var e = this.data ? this.mDataProvider.getItemIndex(this.data) : 0;
            this.tabBar.selectedIndex = e;
        }, t;
    }(e.WindowBase);
    e.WindowGroup = t, __reflect(t.prototype, "game.WindowGroup", [ "hortor.IWindowGroup", "hortor.IWindow", "hortor.IView" ]);
}(game || (game = {}));

var game;

!function(e) {
    var t = function(e) {
        function t() {
            var t = e.call(this) || this;
            return t.effect = new hortor.FadeEffect(), t;
        }
        return __extends(t, e), t;
    }(e.WindowBase);
    e.BaseTipRenderer = t, __reflect(t.prototype, "game.BaseTipRenderer");
}(game || (game = {}));

var game;

!function(e) {
    var t = function() {
        function e() {}
        return e.Jigsaw = "jigsaw", e.KillTitan = "killTitan", e.occasionalGift = "occasionalGift", 
        e.DoubleMoney = "doubleMoney", e.Octopus = "octopus", e.share = "share", e.inviteFriend = "inviteFriend", 
        e.beach = "beach", e.inviteGift = "inviteGift", e.recruit = "recruit", e.dailyGift = "dailyGift", 
        e.tree = "tree", e.newYear = "newYear", e.kite = "kite", e.recall = "recall", e.plane = "plane", 
        e.showBrain = "brain", e.treasureMap = "treasureMap", e.dragonBoat = "dragonBoat", 
        e.inviteReward = "inviteReward", e.boater = "crew", e.monday = "monday", e.worldCup = "worldCup", 
        e.helpGift = "helpGift", e.pirateGift = "pirateGift", e.kiteGift = "kiteGift", e.measureGift = "measureGift", 
        e.partyGift = "partyGift", e.pirateKing = "luffy", e.annualCollect = "annualCollect", 
        e.annualRebate = "annualRebate", e.annualGift = "annualGift", e.luckyBox = "luckyBox", 
        e;
    }();
    e.ActivityType = t, __reflect(t.prototype, "game.ActivityType");
}(game || (game = {}));

var Const = function() {
    function e() {}
    return e.RollerTypeMoney = 0, e.RollerTypeEnergy = 1, e.RollerTypeAttack = 2, e.RollerTypeSteal = 3, 
    e.RollerTypeShield = 4, e.MapGroupPos = [ {
        x: -183,
        y: 270
    }, {
        x: 165,
        y: 269
    }, {
        x: 507,
        y: 271
    } ], e.BuildingName = [ "风景", "船", "神兽", "建筑", "图腾" ], e.BuildingAttackPosX = [ 316, 476.5, 287, 265, 469 ], 
    e.BuildingAttackPosY = [ 550, 764, 658, 581, 610 ], e.BOOMFlipPosX = [ -100, 740, 100, 60, 740 ], 
    e.BOOMFlipPosY = [ 900, 950, 1100, 1100, 900 ], e.BOOMPosX = [ 320, 360, 290, 315, 370 ], 
    e.BOOMPosY = [ 800, 960, 840, 860, 820 ], e.boonm_fixX = [ 5, 50, 25, 20, 30 ], 
    e.moveTime1 = 600, e.moveTime2 = 300, e.moveTime3 = 500, e.tweenTime1 = 800, e.tweenTime2 = 300, 
    e.guideData = {
        2: {
            index: 0,
            type: 0,
            value: 2e3
        },
        3: {
            index: 6,
            type: 0,
            value: 5e3
        },
        4: {
            index: 7,
            type: 1,
            value: 10
        },
        5: {
            index: 2,
            type: 2,
            value: 1
        },
        6: {
            index: 3,
            type: 0,
            value: 15e3
        },
        7: {
            index: 3,
            type: 0,
            value: 2e3
        },
        8: {
            index: 3,
            type: 0,
            value: 15e3
        },
        9: {
            index: 4,
            type: 4,
            value: 1
        },
        10: {
            index: 0,
            type: 0,
            value: 2e3
        },
        11: {
            index: 2,
            type: 2,
            value: 1
        },
        12: {
            index: 8,
            type: 0,
            value: 25e3
        },
        13: {
            index: 9,
            type: 3,
            value: 1
        }
    }, e.KingMoney = 415e3, e.pet_Sleep = "sleep", e.pet_Wait = "wait", e.pet_Eat = "eat", 
    e.pet_Skill = "skill", e.pet_Enter = "enter", e.greenColor = 1681692, e.grayColor = 6250078, 
    e.blueColor = 2976935, e.yellowColor = 12938006, e.purpleColor = 10178778, e.orangeColor = 16155163, 
    e.whiteColor = 16777215, e.grayColor1 = 8748142, e.lightBlueStroke = 30340, e.blueStroke = 938145, 
    e.greenStroke = 1801732, e.redStroke = 10949923, e.yellowStroke = 11424256, e.grayStroke = 6776679, 
    e.manNameColor = 42223, e.womanNameColor = 16081045, e.SoundLoadArray = [ "wheel_button_down", "panel_open", "panel_close", "wheel_rot_start" ], 
    e.worldMapIsland1 = 22, e.worldMapIsland2 = 25, e.worldMapIsland3 = 22, e.worldMapIsland4 = 16, 
    e.H5AppId = "24aeccab4b210e9ccc7fc27c8cc86dae", e.WXAppId = "511a868cc10712235b6ec779c35f8baf", 
    e.gashaponNames = [ "", "鸣人鹅", "悟空鹅", "柯南鹅", "马里奥鹅", "皮卡丘鹅", "海盗鹅" ], e.octopusNames = [ "", "酒杯", "钩子", "望远镜", "短刀", "火枪", "海盗帽" ], 
    e.moonCakeNames = [ "", "腊八豆", "腊八蒜", "腊八豆腐", "腊八面", "腊八粥" ], e.annualFontNames = [ "", "国", "庆", "长", "假", "七", "天", "乐" ], 
    e.dragonBoatNames = {
        zongzi1: "板栗粽",
        zongzi2: "豆沙粽",
        zongzi3: "鲜肉粽",
        zongzi4: "蛋黄肉粽",
        zongzi5: "蜜枣粽"
    }, e.JigsawType = "jigsaw", e.GashaponType = "gashapon", e.BeachType = "beach", 
    e.GuildType = "guild", e.MineType = "mine", e.MonsterType = "monster", e.OctopusType = "octopus", 
    e.MoonCakeType = "moonCake", e.AnnualType = "annual", e.KiteType = "kite", e.AnnualRebate = "annualRebate", 
    e.AnnualLuckyBox = "annualLuckyBox", e.PetType = "pet", e.BeachSailorType = "beachSailor", 
    e.PlaneType = "plane", e.RealName = "realname", e.donateJigsawCount = 5, e.FlowerRebate = "FlowerRebate", 
    e.DragonBoatType = "dragonBoat", e.WorldCupType = "worldCupType", e.BeachGoldNugget = "beachGoldNugget", 
    e.Bet2Type = "bet2", e.Bet3Type = "bet3", e.Bet4Type = "bet4", e.Bet5Type = "bet5", 
    e.RecruitType = "recruit", e.CoupleType = "couple", e.OpenBtnLimit = 20, e.betLimit = 30, 
    e.LimitText_15 = "30星开启", e.octopusLimit = 55, e.LimitText_16 = "55星开启", e.monsterLimit = 90, 
    e.LimitText_17 = "90星开启", e.mineLimit = 70, e.LimitText_18 = "70星开启", e.beachLimit = 4, 
    e.beachLimitText = "日本开启", e.guildOpenLimit = 101, e.guildLimit = 120, e.LimitText_20 = "120星开启", 
    e.petOpenLimit = 91, e.petLimit = 100, e.LimitText_21 = "100星开启", e.bet3Limit = 110, 
    e.LimitText_35 = "110星开启", e.bet4Limit = 280, e.LimitText_36 = "280星开启", e.bet5Limit = 500, 
    e.LimitText_37 = "500星开启", e.mapLimit = 25, e.LimitText_23 = "25星开启", e.coupleLimit = 85, 
    e.coupleLimitText = "85星转转盘开启", e.recruitLimit = 120, e.recruitLimitText = "达到120星将开启招募令", 
    e.FocusLimit = 48, e.CommonUseLimit = 40, e.DailyEnergyLimit = 40, e.DailyRedBagLimit = 50, 
    e.InviteLimit = 80, e.RecallLimit = 500, e.MoneyBoxLimit = 15, e.InviteVipLimit = 500, 
    e.JigsawLimit = 54, e.AllinoneLimit = 600, e.QuickFriend = "quickFriend", e.WorldChat = "worldChat", 
    e.FriendInfo = "friendInfo", e.Buildings = "buildings", e.ChatPerson = "ChatPerson", 
    e.NewsAndMails = "NewsAndMails", e.GuildsChat = "GuildsChat", e.PlaneRank = "planeRank", 
    e.PlaneLogs = "PlaneLogs", e.FriendCity = "friendCity", e.RankToIsland = "rank", 
    e.HateToIsland = "hate", e.RecallToIsland = "recall", e.RecallTaskToIsland = "recallTask", 
    e.ShareCheerToIsland = "ShareCheerToIsland", e.BoaterUserInfo = "BoaterUserInfo", 
    e.islandVersion = "2.0.5", e.MapIslandVersion = "2.0.9", e.JigsawVersion = "2.0.0", 
    e.ShareImageVersion = "2.0.0", e.BannerImageVersion = "2.2.0", e.Hamburger = "hamburger", 
    e.MagicBook = "magicBook", e.BeachPowerPotion = "beachPowerPotion", e.BottomLayer = "bottomLayer", 
    e.EffectLayer = "effectLayer", e.UiLayer = "uiLayer", e.FightLayer = "fightLayer", 
    e.MainLayer = "mainLayer", e.HighestLayer = "highestLayer", e.SpecialLayer = "specialLayer", 
    e.RealHighestLayer = "realHighestLayer", e.NormalStr = "normal", e.SpecialStr = "special", 
    e.IOS = "iOS", e.Android = "Android", e.btnOffY = 90, e.SpecialMobileOffY = 50, 
    e["default"] = "default", e.island = "island", e.boost = "boost", e.boostCheer = "boostCheer", 
    e.boostInvite = "boostInvite", e.boostInviteGift = "boostInviteGift", e.octopus = "octopus", 
    e.kiteAssist = "kiteAssist", e.moonCake = "moonCake", e.shareForGold = "shareForGold", 
    e.shareForWxGold = "shareForWxGold", e.inviteForVIP = "inviteForVIP", e.inviteForAllInOne = "inviteForAllInOne", 
    e.inviteGift = "inviteGift", e.recruitment = "recruitment", e.monster = "monster", 
    e.inviteMoney = "inviteMoney", e.annualCollect = "annualCollect", e.treasure = "treasure", 
    e.annualBalloon = "annualBalloon", e.plane = "plane", e.recall = "recall", e.userRecall = "userRecall", 
    e.groupRank = "groupRank", e.wanbanInvite = "wanbanInvite", e.dayShare = "dayShare", 
    e.dayShare2 = "dayShare2", e.shieldShare = "shieldShare", e.flowerShare = "flower", 
    e.treasureMap = "treasureMap", e.dragonBoat = "dragonBoat", e.dragonBoatMoreRewards = "dragonBoatMoreRewards", 
    e.redPackage = "redPackage", e.inviteReward = "inviteReward", e.carve = "carve", 
    e.boaterHire = "boaterHire", e.boaterHire2 = "boaterHire2", e.boaterRecall = "boaterRecall", 
    e.tree = "tree", e.worldCup = "worldCup", e.worldCup2 = "WorldCup2", e.shareCheer = "shareCheer", 
    e.seniorDailyEnergy = "seniorDailyEnergy", e.GameClubInterFaceId = !1, e.chatLimitTime = 10, 
    e.videoType1 = 1, e.videoType2 = 1, e.Wheel_Energy = "getEnergy", e.Wheel_Shield = "getShield", 
    e.Wheel_Steal = "getSteal", e.Wheel_Attack = "getAttack", e.FocusInterFaceId = "client_focus", 
    e.ShareInterFaceId = "client_share", e.PayInterFaceId = "client_pay", e.DayredbagCount = 5, 
    e.recallLeaveDays = 2, e.KingBarrierShare = "KingBarrierShare", e.KingCircleShare = "KingCircleShare", 
    e.WXOpenImages = [ "wanban_btn.png", "wanban_1.png", "wanban_1_1.png", "wanban_2.png", "wanban_2_1.png", "head_bg7.png", "wanban_star.png" ], 
    e.DeleteFriend = "deleteFriend", e.AddFriend = "addFriend", e.RankWindowBtnLeftX = 4, 
    e.RankWindowBtnRightX = 136, e.RankWindowBtnLeftText = "世界排行", e.RankWindowBtnRightText = "好友排行", 
    e.genderCorlor1 = 42223, e.genderCorlor2 = 16734615, e.updateSelfRankUI = "updateSelfRankUI", 
    e.rankUpdateFriendList = "rankUpdateFriendList", e.rankUpdateWorldList = "rankUpdateWorldList", 
    e.SHOW_BOX_TYPE_NONE = 0, e.SHOW_BOX_TYPE_JBBX = 1, e.SHOW_BOX_TYPE_INVITE_VIP = 2, 
    e.SHOW_BOX_TYPE_INVITE_REWARD = 3, e.INVITAION_VIP_COUNT = 3, e.wxLogin = "pirate-wxLogin", 
    e.skinsComplete = "pirate-skinsComplete", e.resComplete = "pirate-resComplete", 
    e.comResComplete = "pirate-comResComplete", e.loginComplete = "pirate-loginComplete", 
    e.startGame = "pirate-startGame", e.maleColor = 4374271, e.femaleColor = 15950485, 
    e.maleGender = 1, e.femaleGender = 2, e;
}();

__reflect(Const.prototype, "Const");

var ShopConst = {
    Energy: "energy",
    Money: "money",
    Lolly: "lolly",
    GuildMedal: "guildMedal",
    DollCoin: "dollCoin",
    MiniShield: "miniShield",
    NewbieGift: "newbieGift",
    Potion: "potion",
    BeachPowerPotion: "beachPowerPotion",
    OccasionalGift: "occasionalGift",
    InviteGift: "inviteGift",
    Shipwreck: "shipwreck",
    FinishHatch: "finishHatch",
    SummonStone: "summonStone",
    Monthcard: "monthcard",
    Wanted: "wanted",
    Hamburger: "hamburger",
    NewYearGift: "newYearGift",
    Puffer: "puffer",
    DailyShop: "dailyShop",
    Horn: "horn",
    MagicBook: "magicBook",
    HelpGift: "helpGift",
    Cookie: "cookie",
    KillTitanCannonBall: "killTitanCannonBall",
    SpeedGift: "speedGift",
    DailyGift: "dailyGift",
    ExpPotion: "expPotion"
}, Robot = {
    robot0: {
        name: "坤于林",
        headImg: "http://wx.qlogo.cn/mmopen/2WjhI7mNGxlfgPxZTXt2rohktC8JUB32rUHft8vCaWwrJYW6EVhH1eHyOP76ySzY6FtYpx8bibM5LknX7898fdMm1qNGol6pZ/0",
        crowns: 0,
        signature: ""
    },
    robot1: {
        name: "坤于林",
        headImg: "http://wx.qlogo.cn/mmopen/2WjhI7mNGxlfgPxZTXt2rohktC8JUB32rUHft8vCaWwrJYW6EVhH1eHyOP76ySzY6FtYpx8bibM5LknX7898fdMm1qNGol6pZ/0",
        crowns: 0,
        signature: ""
    },
    robot2: {
        name: "坤于林",
        headImg: "http://wx.qlogo.cn/mmopen/2WjhI7mNGxlfgPxZTXt2rohktC8JUB32rUHft8vCaWwrJYW6EVhH1eHyOP76ySzY6FtYpx8bibM5LknX7898fdMm1qNGol6pZ/0",
        crowns: 0,
        signature: ""
    },
    robotSteal: {
        name: "小公举",
        headImg: "billgates_png",
        crowns: 10,
        signature: ""
    }
}, game;

!function(e) {
    var t = function() {
        function e() {}
        return e.ON_GAME_DEACTIVATE = "ON_GAME_DEACTIVATE", e.ON_GAME_ACTIVATE = "ON_GAME_ACTIVATE", 
        e.SCREEN_ENTER = "SCREEN_ENTER", e.SCREEN_CLOSE = "SCREEN_CLOSE", e.WINDOW_ENTER = "WINDOW_ENTER", 
        e.WINDOW_CLOSE = "WINDOW_CLOSE", e.FACEUI_UPDATE = "faceui_update", e.CHAT_UPDATE = "chatUpdate", 
        e.RELOGIN = "relogin", e.PLAYER_UPDATE = "updatePlayerData", e.ISLAND_BUILD_REFRESH = "ISLAND_BUILD_REFRESH", 
        e.ISLAND_BUILD_HIDE = "ISLAND_BUILD_HIDE", e.ISLAND_NEXTISLAND = "ISLAND_NEXTISLAND", 
        e.ISLAND_NEXTISLAND_BACK = "ISLAND_NEXTISLAND_BACK", e.ISLAND_WHEEL_TO_ATTACK = "ISLAND_WHEEL_TO_ATTACK", 
        e.ISLAND_ATTACK_TO_WHEEL = "ISLAND_ATTACK_TO_WHEEL", e.ISLAND_ATTACK_NEW_TARGET = "ISLAND_ATTACK_NEW_TARGET", 
        e.ISLAND_ATTACK_HIDE_BUTTON = "ISLAND_ATTACK_HIDE_BUTTON", e.ISLAND_ATTACK_SHOW_BUTTON = "ISLAND_ATTACK_SHOW_BUTTON", 
        e.ISLAND_BUILD_ATTACKED = "ISLAND_BUILD_ATTACKED", e.WHEEL_TO_ISLAND = "WHEEL_TO_ISLAND", 
        e.ISLAND_RETURN_OVER = "ISLAND_RETURN_OVER", e.ISLAND_ATTACK_HIDELIST = "ISLAND_ATTACK_HIDELIST", 
        e.ISLAND_ATTACK_INITPLAYER = "ISLAND_ATTACK_INITPLAYER", e.ISLAND_ATTACK_SHOWTOP = "ISLAND_ATTACK_SHOWTOP", 
        e.ISLAND_ATTACK_HIDETOP = "ISLAND_ATTACK_HIDETOP", e.ISLAND_WHEEL_TO_STEAL = "ISLAND_WHEEL_TO_STEAL", 
        e.ISLAND_STEAL_TO_WHEEL = "ISLAND_STEAL_TO_WHEEL", e.ISLAND_ATTACK_HIDE_TIPS = "ISLAND_ATTACK_HIDE_TIPS", 
        e.ISLAND_HIDE_OVERGROUP = "ISLAND_HIDE_OVERGROUP", e.BG_ADJUST = "BG_ADJUST", e.BG_ADJUST_V = "BG_ADJUST_V", 
        e.BG_CLOUD_GO = "BG_CLOUD_GO", e.BG_CLOUD_BACK = "BG_CLOUD_BACK", e.GUILD_FEEDBACK_REFFRESH = "GUILD_FEEDBACK_REFFRESH", 
        e.GUILD_WELFARE_BOXESGROUP = "GUILD_WELFARE_BOXESGROUP", e.GUILD_RENAME = "GUILD_RENAME", 
        e.GUILD_RENAME_REFRESH = "GUILD_RENAME_REFRESH", e.SailingStartWave = "SailingStartWave", 
        e.SailingRefreshRedPoint = "SailingRefreshRedPoint", e.SailingScoreChange = "SailingScoreChange", 
        e.SailingDepotChange = "SailingDepotChange", e.SailingRefreshRewardRedPoint = "SailingRefreshRewardRedPoint", 
        e.PIRATE_TEAM_ENTER = "PIRATE_TEAM_ENTER", e.FACEUI_corwns_change = "FACEUI_corwns_change", 
        e.MonthCardRefresh = "MonthCardRefresh", e.SHOP_HORN_REFRESH = "SHOP_HORN_REFRESH", 
        e.ITEM_EFFECT = "ITEM_EFFECT", e.WX_WALL_TASK = "wx_wall_task", e.MYSTICAL_ENERGY_WHEEL_PAY = "MYSTICAL_ENERGY_WHEEL_PAY", 
        e;
    }();
    e.NotificationType = t, __reflect(t.prototype, "game.NotificationType");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function a() {
            var e = t.call(this) || this;
            return e.openAllGate = !1, e.guide = null, e.clearedBadges = null, e.oldBadgesMap = {}, 
            e.isWxgame = !1, e.checkFocus = !1, e.checkShare = !1, e.checkPay = !1, e.checkFreeEnergyDiffGroup = !1, 
            e.checkGameClub = !1, e.checkRest = !1, e.iosPay = !1, e.ShareInterFaceId = !1, 
            e.wxSharing = !1, e.wxCanShowAd = !1, e.timestamp = 0, e.isWxgame = hortor.SystemManager.isWxGame, 
            e.iosPay = !hortor.SystemManager.isIOS || !e.isWxgame || e.checkPay, e.gateMap = {}, 
            e;
        }
        return __extends(a, t), a.prototype.update = function(t) {
            var i = this;
            this.data = t, this.inject(t), e.PlatformManager.checkIPAvailable(e.AreaCheckType.Check_Focus, function(t) {
                i.checkFocus = t, hortor.Log.warn("checkFocus:" + i.checkFocus), gateModel.updateGate(e.WindowType.WINDOW_OFFICIALVIP);
            }), e.PlatformManager.checkIPAvailable(e.AreaCheckType.Check_Share, function(e) {
                i.checkShare = e, i.ShareInterFaceId = e, hortor.Log.warn("checkShare:" + i.checkShare);
            }), e.PlatformManager.checkIPAvailable(e.AreaCheckType.Check_Pay, function(e) {
                i.checkPay = e, i.iosPay = !hortor.SystemManager.isIOS || !i.isWxgame || i.checkPay, 
                i.updateGates(), hortor.Log.warn("checkPay:" + i.checkPay + ",iosPay:" + i.iosPay);
            }), e.PlatformManager.checkIPAvailable(e.AreaCheckType.Check_FreeEnergyDiffGroup, function(e) {
                i.checkFreeEnergyDiffGroup = e, hortor.Log.warn("checkFreeEnergyDiffGroup:" + i.checkFreeEnergyDiffGroup);
            }), e.PlatformManager.checkIPAvailable(e.AreaCheckType.Check_ShareBtn, function(e) {
                i.checkShareBtn = e, hortor.Log.warn("checkShareBtn:" + i.checkShareBtn);
            }), e.PlatformManager.checkIPAvailable(e.AreaCheckType.Check_ShareCallBack, function(t) {
                if (i.checkShareCallBack = t, i.isWxgame) {
                    var n = e.PlatformManager.compareVersion(e.WxSystemInfo.SDKVersion, "2.3.0");
                    n >= 0 && i.checkShareCallBack && (e.ShareManager.timeOutCallback = !0), hortor.Log.warn("ShareManager sdkVersion:" + e.WxSystemInfo.SDKVersion + ",compare:" + n + ",checkShareCallBack:" + gateModel.checkShareCallBack);
                }
            }), e.PlatformManager.checkIPAvailable(e.AreaCheckType.Check_Relogin, function(e) {
                i.checkRelogin = e, hortor.Log.warn("checkRelogin:" + i.checkRelogin);
            }), e.PlatformManager.checkIPAvailable(e.AreaCheckType.Check_GameClub, function(e) {
                i.checkGameClub = e, hortor.Log.warn("checkGameClub:" + i.checkGameClub);
            }), e.PlatformManager.checkIPAvailable(e.AreaCheckType.Check_Rest, function(e) {
                i.checkRest = e, hortor.Log.warn("Check_Rest:" + i.checkRest);
            });
        }, a.prototype.updateGates = function() {
            this.initGates(), this.getGate(e.WindowType.GROUP_DAILYREWARD), this.getGate(e.WindowType.GROUP_INVITEREWARD), 
            this.getGate(e.WindowType.GROUP_FRIEND), this.getGate(e.WindowType.GROUP_LIMITSALE), 
            this.getGate(e.WindowType.GROUP_NEWS), this.getGate(e.WindowType.GROUP_FRIEND_RECOMMEND);
        }, Object.defineProperty(a.prototype, "privilegeAvailable", {
            get: function() {
                return this.checkFocus;
            },
            enumerable: !0,
            configurable: !0
        }), a.prototype.initGates = function() {
            var t = this;
            this.addGate(e.WindowType.WINDOW_WXRANK, !0, !0).updateMethod = function(e) {
                e.isUnlock = t.isWxgame, t.isWxgame && (e.logicShow = platform.common.checkSetUserStorage());
            }, this.addGate(e.WindowType.WINDOW_NEWBIE_GIFT, !0, !0).updateMethod = function(t) {
                t.logicRed = playerModel.gotNewbieGift && gateModel.getGate(e.WindowType.WINDOW_NEWBIE_GIFT).red, 
                t.logicShow = !playerModel.gotNewbieGift && gateModel.iosPay;
            }, this.addGate(e.WindowType.WINDOW_REALNAME_GIFT, !0, !0).updateMethod = function(t) {
                t.logicRed = gateModel.getGate(e.WindowType.WINDOW_REALNAME_GIFT).red;
            }, this.addGate(e.WindowType.WINDOW_RECALL_REWARD, !0, !1, o.recall).updateMethod = function(i) {
                i.logicShow = t.guide[o.recall] && playerModel.rollTotalCount >= Const.RecallLimit, 
                i.logicRed = t.guide[o.recall] && (playerModel.recallRedPoint || gateModel.getGate(e.WindowType.WINDOW_RECALL_REWARD).red);
            }, this.addGate(e.WindowType.WINDOW_WNSP, !0, !1, o.allInOne).updateMethod = function(i) {
                var n = t.guide[o.allInOne] && (playerModel.inviteFriendCount > playerModel.inviteFriendRewardCount || gateModel.getGate(e.WindowType.WINDOW_WNSP).red) && 0 == playerModel.showBoxType;
                playerModel.inviteFirendToday && playerModel.inviteFriendCount == playerModel.inviteFriendRewardCount && (n = !1), 
                i.logicShow = playerModel.rollTotalCount >= Const.AllinoneLimit, i.logicRed = i.logicShow && n;
            }, this.addGate(e.WindowType.WINDOW_INVITE_JBBX, !0, !1, o.moneyBox).updateMethod = function(t) {
                t.logicShow = playerModel.showBoxType == Const.SHOW_BOX_TYPE_JBBX, t.logicRed = t.logicShow && (playerModel.inviteMoneyCount > 0 || gateModel.getGate(e.WindowType.WINDOW_INVITE_JBBX).red);
            }, this.addGate(e.WindowType.WINDOW_INVITE_VIP, !1, !1, o.inviteVip).updateMethod = function(e) {
                e.logicShow = playerModel.showBoxType == Const.SHOW_BOX_TYPE_INVITE_VIP, e.logicRed = e.logicShow && playerModel.inviteFriendVIPCount >= Const.INVITAION_VIP_COUNT;
            }, this.addGate(e.WindowType.WINDOW_INVITEREWARD, !0, !1, o.invite).updateMethod = function(i) {
                i.logicShow = playerModel.showBoxType == Const.SHOW_BOX_TYPE_INVITE_REWARD, i.logicRed = i.logicShow && playerModel.friendsRewardCounts > 0 || gateModel.getGate(e.WindowType.WINDOW_INVITEREWARD).red, 
                t.isWxgame && (i.logicRed = i.logicShow && (playerModel.friendsRewardCounts > 0 || gateModel.getGate(e.WindowType.WINDOW_INVITEREWARD).red));
            }, this.addGate(e.WindowType.WINDOW_DAILY_SIGN).updateMethod = function(e) {
                e.logicRed = initModel.signRedPoint, e.logicShow = !0;
            }, this.addGate(e.WindowType.WINDOW_DAILY_ENERGY, !1, !1, o.dailyEnergy).updateMethod = function(e) {
                e.logicRed = t.guide[o.dailyEnergy] && 0 == playerModel.loginRewardRemain;
            }, this.addGate(e.WindowType.WINDOW_FREE_ENERGY, !0, !1, o.dailyRedBag).updateMethod = function(e) {
                e.logicRed = dailyModel.seniorDayShare_remainShareCount > 0 || dailyModel.seniorDayShare_boxEnergy > 0, 
                e.logicShow = !playerModel.isAudit;
            }, this.addGate(e.ScreenType.MAP_SCREEN, !1, !1, o.map).updateMethod = function(e) {}, 
            this.addGate(e.WindowType.WINDOW_OFFICIALVIP).updateMethod = function(e) {
                e.logicShow = t.checkFocus, e.leftTime = t.data.privilegeOverplus, console.log("privilegeOverplus:" + t.data.privilegeOverplus);
            }, this.addGate(e.WindowType.WINDOW_RECOMMEND_NEARBY, !0).updateMethod = function(e) {
                e.logicRed = playerModel.friends && playerModel.friends.length < 3;
            }, this.addGate(e.WindowType.WINDOW_FOCUS_REWARD_TIP).updateMethod = function(e) {
                e.logicShow = gateModel.isWxgame && !playerModel.gotNewSubscribedReward && playerModel.highestCrowns >= Const.FocusLimit;
            }, this.addGate(e.WindowType.WINDOW_ACHIEVE, !1, !1, o.achieve).updateMethod = function(t) {
                t.logicShow = playerModel.hasAchievement, t.logicRed = e.NewPlayerAchievementWindow.redPoint;
            }, this.addGate(e.ScreenType.GUILD_SCREEN, !1, !1, o.guild, !1).updateMethod = function(e) {
                e.logicRed = guildModel.hasRedPoint, e.logicShow = e.isUnlock || playerModel.highestCrowns >= Const.guildOpenLimit;
            }, this.addGate(e.WindowType.WINDOW_WALL_TASK).updateMethod = function(e) {
                e.logicRed = wallSdkModel.wallTaskRed(), e.logicShow = gateModel.isWxgame && playerModel.island > 0;
            }, this.addGate(e.WindowType.WINDOW_MONTHCARD, !1, !1, o.monthCard).updateMethod = function(e) {
                e.logicRed = playerModel.monthCardExpired > 0 && !playerModel.gotMonthCardReward, 
                e.logicShow = !e.red;
            }, this.addGate(e.WindowType.WINDOW_MYSTICAL_ENERGY_WHEEL).updateMethod = function(e) {
                e.logicShow = playerModel.hasMystical && gateModel.iosPay;
            }, this.addGate(e.WindowType.WINDOW_RUNNINGGIFT).updateMethod = function(e) {
                e.logicShow = _.isNumber(playerModel.speedGiftRemain) && playerModel.speedGiftRemain > 0 && t.iosPay, 
                e.logicRed = _.isNumber(playerModel.speedGiftRemain) && playerModel.speedGiftRemain > 0 && t.iosPay;
            }, this.addGate(e.WindowType.WINDOW_PIRATEGIFT).updateMethod = function(t) {
                var i = activityModel.getActivityInfo(e.ActivityType.occasionalGift, e.ActivityType.partyGift), n = i && i.isRunning && gateModel.iosPay && !i.playerData.gotOccasionalGift && playerModel.island > 0;
                t.logicShow = n;
            }, this.addGate(e.WindowType.WINDOW_KITEGIFT).updateMethod = function(t) {
                var i = activityModel.getActivityInfo(e.ActivityType.occasionalGift, e.ActivityType.kiteGift), n = i && i.isRunning && gateModel.iosPay && !i.playerData.gotOccasionalGift && playerModel.island > 0;
                t.logicShow = n;
            }, this.addGate(e.WindowType.WINDOW_SHOP).updateMethod = function(e) {
                e.logicShow = gateModel.iosPay;
                var t = hortor.SystemManager.isAndroid, i = gateModel.isWxgame && shopModel.newGift && t || !gateModel.isWxgame && shopModel.newGift;
                e.logicRed = i;
            }, this.addGate(e.WindowType.WINDOW_PLAYER_EDIT).updateMethod = function(e) {
                e.logicRed = 0 == playerModel.constellation && 0 == playerModel.province;
            }, this.addGate(e.WindowType.WINDOW_MAIL).updateMethod = function(e) {
                e.logicRed = messageModel.mailCountNotOpen > 0;
            }, this.addGate(e.WindowType.WINDOW_FRIEND).updateMethod = function(e) {
                e.logicRed = playerModel.requestsLength > 0;
            }, this.addGate(e.WindowType.WINDOW_PRIVATE_CHAT_LIST).updateMethod = function(e) {
                e.logicRed = chatModel.ChatCache.chatBtnPoint;
            };
        }, a.prototype.updateGate = function(e) {
            var t = this.getGate(e);
            t && (t.update(!0), hortor.Log.log(this, "update:" + e + ",show:" + t.show + ",red:" + t.red + ",unlock:" + t.unlock));
        }, a.prototype.addGate = function(e, t, n, o, a) {
            void 0 === t && (t = !1), void 0 === n && (n = !0), void 0 === o && (o = null), 
            void 0 === a && (a = !0);
            var r = this.getGate(e);
            return r || (r = new i(e.toString(), t, n, o, a), this.gateMap[e] = r), r;
        }, a.prototype.addGroupGate = function(e, t) {
            var i = this.gateMap[e.toString()];
            return i || (i = new n(e.toString(), t), this.gateMap[e] = i), i;
        }, a.prototype.getGroupOpenList = function(e) {
            var t = hortor.WindowManager.getWindowData(e), i = [];
            if (t && t.fullList) for (var n = 0; n < t.fullList.length; n++) {
                var o = t.fullList[n], a = this.getGate(o);
                (a && a.show || !a) && i.push(o);
            }
            return console.log("openList type:" + e + "|" + i.join(",")), i;
        }, a.prototype.getGate = function(e) {
            if (!e) return null;
            var t = this.gateMap[e.toString()];
            if (!t && "number" == typeof e) {
                var i = parseInt(e.toString()), n = hortor.WindowManager.getWindowData(i);
                if (n && n.fullList) {
                    for (var o = [], a = 0; a < n.fullList.length; a++) {
                        var r = n.fullList[a], s = this.gateMap[r.toString()];
                        s && o.push(s);
                    }
                    t = this.addGroupGate(e, o);
                }
            }
            return t;
        }, a.prototype.getGateByLockType = function(e) {
            for (var t in this.gateMap) {
                var i = this.gateMap[t];
                if (i.lockType == e) return i;
            }
            return null;
        }, a.prototype.isRed = function(e) {
            var t = this.getGate(e);
            return t ? t.red : !1;
        }, a.prototype.isUnclock = function(e) {
            return 1 == gateModel.guide[e];
        }, a.prototype.saveRed = function(t, i) {
            HttpService.post(e.ServerMsg.CLEARBADGE, "uid=" + playerModel.uid + "&key=" + t.toString() + "&forever=" + i, function(e) {
                e && (gateModel.clearedBadges = e);
            });
        }, a.prototype.initOldGate = function() {
            this.oldBadgesMap[e.WindowType.WINDOW_NEWBIE_GIFT] = "newbieGift";
        }, a;
    }(hortor.Model);
    e.GateModel = t, __reflect(t.prototype, "game.GateModel");
    var i = function(e) {
        function t(t, i, n, o, a) {
            void 0 === i && (i = !1), void 0 === n && (n = !0), void 0 === o && (o = null), 
            void 0 === a && (a = !0);
            var r = e.call(this) || this;
            return r.show = !0, r.red = !1, r.unlock = !0, r.tempShow = !1, r.id = t, r.hideLock = a, 
            r.lockType = o, r.mLogicRed = !1, r.mIsUnlock = !0, r.serverGate = i, r.saveForever = n, 
            r.redPropertyMap = {}, r.unlock = r.isUnlock, i || (r.mIsOpened = !1), r;
        }
        return __extends(t, e), Object.defineProperty(t.prototype, "updateMethod", {
            set: function(e) {
                this.mUpdateMethod = e, this.update(!0);
            },
            enumerable: !0,
            configurable: !0
        }), t.prototype.update = function(e) {
            void 0 === e && (e = !1), e && this.mUpdateMethod && this.mUpdateMethod(this), this.updateShow(), 
            this.updateRed(), this.unlock = this.isUnlock, this.onChange && this.onChange();
        }, t.prototype.addRedProperty = function(e, t) {
            this.redPropertyMap[e] = t, this.update();
        }, Object.defineProperty(t.prototype, "isUnlock", {
            get: function() {
                return this.lockType ? 1 == gateModel.guide[this.lockType] : this.mIsUnlock;
            },
            set: function(e) {
                this.isUnlock != e && (this.mIsUnlock = gateModel.openAllGate ? !0 : e, this.update());
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(t.prototype, "logicShow", {
            get: function() {
                return this.hasOwnProperty("mLogicShow") ? this.mLogicShow : this.isUnlock;
            },
            set: function(e) {
                this.hasOwnProperty("mLogicShow") && this.mLogicShow == e || (this.mLogicShow = e, 
                this.update());
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(t.prototype, "logicRed", {
            get: function() {
                var e = !1;
                if (this.mLogicRed) e = !0; else for (var t in this.redPropertyMap) if (this.redPropertyMap[t]) {
                    e = !0;
                    break;
                }
                return this.serverGate && !this.isOpened ? !0 : this.isUnlock && e;
            },
            set: function(e) {
                this.mLogicRed != e && (this.mLogicRed = e, this.update());
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(t.prototype, "userRed", {
            get: function() {
                return this.mUserRed;
            },
            set: function(e) {
                this.hasOwnProperty("mUserRed") && this.mUserRed == e || (this.mUserRed = e, this.update());
            },
            enumerable: !0,
            configurable: !0
        }), t.prototype.updateRed = function() {
            return this.show ? void (this.red = this.hasOwnProperty("mUserRed") ? this.mUserRed : this.logicRed) : void (this.red = !1);
        }, t.prototype.updateShow = function() {
            gateModel.openAllGate ? this.show = !0 : this.show = this.hideLock ? this.isUnlock && this.logicShow : this.logicShow, 
            parseInt(this.id) > 0 && hortor.WindowManager.setOpen(parseInt(this.id), this.show);
        }, Object.defineProperty(t.prototype, "isOpened", {
            get: function() {
                return this.serverGate ? -1 != gateModel.clearedBadges.indexOf(this.id) : this.mIsOpened;
            },
            set: function(e) {
                this.mIsOpened != e && (this.mIsOpened = e, this.serverGate && gateModel.saveRed(this.id, this.saveForever));
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(t.prototype, "leftTime", {
            get: function() {
                return this.clock ? Math.floor(this.clock.leftTime / 1e3) : 0;
            },
            set: function(e) {
                var t = this;
                this.clock = hortor.TimerManager.addClock(this.id + "_Timer", e), this.clock.registCallBack(this, function() {
                    hortor.TimerManager.removeClock(t.id + "_Timer");
                });
            },
            enumerable: !0,
            configurable: !0
        }), t;
    }(hortor.Model);
    e.Gate = i, __reflect(i.prototype, "game.Gate");
    var n = function(e) {
        function t(t, i) {
            var n = e.call(this, t) || this;
            n.gates = i;
            for (var o = 0, a = n.gates; o < a.length; o++) {
                var r = a[o];
                r.groupId = t, r.onChange = n.update.bind(n);
            }
            return n.initGroupOpenList(parseInt(t)), n.updateShow(), n.updateRed(), n;
        }
        return __extends(t, e), t.prototype.initGroupOpenList = function(e) {
            var t = hortor.WindowManager.getWindowData(e);
            if (t) {
                var i = [];
                if (t && t.fullList) for (var n = 0; n < t.fullList.length; n++) {
                    var o = t.fullList[n], a = gateModel.getGate(o);
                    (a && a.show || !a) && i.push(o);
                }
                console.log("openList type:" + e + "|" + i.join(",")), hortor.WindowManager.setOpenList(i);
            }
        }, t.prototype.updateRed = function() {
            if (this.hasOwnProperty("mUserRed")) this.red = this.userRed; else {
                for (var e = !1, t = 0, i = this.gates; t < i.length; t++) {
                    var n = i[t];
                    if (n.red) {
                        e = !0;
                        break;
                    }
                }
                this.red = e;
            }
        }, t.prototype.updateShow = function() {
            for (var e = !1, t = 0, i = this.gates; t < i.length; t++) {
                var n = i[t];
                if (n.show) {
                    e = !0;
                    break;
                }
            }
            this.show = e;
        }, t;
    }(i);
    e.GroupGate = n, __reflect(n.prototype, "game.GroupGate");
    var o;
    !function(e) {
        e[e.bet = 15] = "bet", e[e.octopus = 16] = "octopus", e[e.taptitans = 17] = "taptitans", 
        e[e.mine = 18] = "mine", e[e.recruit = 19] = "recruit", e[e.guild = 20] = "guild", 
        e[e.pet = 21] = "pet", e[e.shield = 22] = "shield", e[e.map = 23] = "map", e[e.achieve = 24] = "achieve", 
        e[e.jisgaw = 25] = "jisgaw", e[e.inviteVip = 26] = "inviteVip", e[e.moneyBox = 27] = "moneyBox", 
        e[e.invite = 28] = "invite", e[e.dailyRedBag = 29] = "dailyRedBag", e[e.dailyEnergy = 30] = "dailyEnergy", 
        e[e.recall = 31] = "recall", e[e.allInOne = 32] = "allInOne", e[e.monthCard = 33] = "monthCard", 
        e[e.betGuideSave = 34] = "betGuideSave", e[e.bet3 = 35] = "bet3", e[e.bet4 = 36] = "bet4", 
        e[e.bet5 = 37] = "bet5";
    }(o = e.AcLockType || (e.AcLockType = {}));
}(game || (game = {}));

var gateModel, game;

!function(e) {
    var t = function(e) {
        function t() {
            var t = e.call(this) || this;
            return t.effect = null, t;
        }
        return __extends(t, e), t.prototype.onInit = function() {
            this.bg.addEventListener(egret.TouchEvent.TOUCH_TAP, this.bgFunc, this), this.sendBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.sendBtnFunc, this), 
            this.exchangeBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.exchangeBtnFunc, this), 
            this.useBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.useBtnFunc, this);
        }, t.prototype.onOpen = function() {
            var e = this;
            util.setScale(this.group, 0);
            var t = egret.Tween.get(this.group);
            this.group.scaleX = this.group.scaleY = .1, t.to({
                scaleX: 1,
                scaleY: 1
            }, 200, egret.Ease.backOut).call(function() {
                egret.Tween.removeTweens(e.group);
            });
        }, t.prototype.onData = function() {}, t.prototype.prepare = function(e, t) {
            e(null);
        }, t.prototype.bgFunc = function() {
            var e = this;
            e && e.hide();
        }, t.prototype.sendBtnFunc = function() {}, t.prototype.exchangeBtnFunc = function() {}, 
        t.prototype.useBtnFunc = function() {}, t;
    }(e.WindowBase);
    e.ComAcPropBtnWindow = t, __reflect(t.prototype, "game.ComAcPropBtnWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.skinPath = "common/ComFriendItemSkin", e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.addClick(this.btn, this.btnFunc, this);
        }, i.prototype.onData = function() {
            var t = this.data;
            this.btn.icon = "send" == t.btnType ? "comBtnTxt_json.common_txt_zs" : "comBtnTxt_json.common_txt_jh", 
            this.avatarInfo.data = {
                gender: t.gender,
                headImg: t.headImg,
                crowns: t.crowns,
                showStar: !1
            }, this.nameLabel.text = "" + t.name, this.nameLabel.textColor = 1 == t.gender ? Const.manNameColor : Const.womanNameColor;
            var i = t.updateTime || moment().unix(), n = moment().unix() - i < 300;
            this.isOnline.source = n ? "common_json.common_icon_zt1" : "common_json.common_icon_zt0", 
            this.offLine.visible = !n, this.offLine.text = e.ComFunc.showTimeBeforeNew(i);
        }, i.prototype.btnFunc = function() {}, i;
    }(e.ItemRenderBase);
    e.ComFriendItem = t, __reflect(t.prototype, "game.ComFriendItem");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.friendData = [], this.scroller.viewport = this.list, this.baseData = new eui.ArrayCollection([]), 
            this.list.dataProvider = this.baseData, this.inputText.addEventListener(egret.Event.CHANGE, this.inputFunc, this);
        }, i.prototype.onData = function() {}, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.showAllView = function(t) {
            var i = this;
            HttpService.get(e.ServerMsg.FRIEND_RANK, "uid=" + playerModel.uid, function(e) {
                i.friendData = [];
                for (var n = 0; n < e.friends.length; n++) playerModel.uid != e.friends[n].uid && (e.friends[n].btnType = t ? "send" : "exchange", 
                i.friendData.push(e.friends[n]));
                var o = util.cloneArr(i.friendData);
                o.sort(function(e, t) {
                    return t.updateTime - e.updateTime;
                }), i.empty.visible = 0 == o.length, i.baseData.replaceAll(o), i.list.dataProviderRefreshed();
            });
        }, i.prototype.inputFunc = function() {
            for (var e = this.inputText.text, t = [], i = /^[a-zA-Z]+$/, n = 0; n < this.friendData.length; n++) {
                var o = this.friendData[n], a = o.name || o.ownerName;
                i.test(e) ? (a.toLowerCase().indexOf(e.toLowerCase()) >= 0 || a.toUpperCase().indexOf(e.toUpperCase()) >= 0) && t.push(o) : a.indexOf(e) >= 0 && t.push(o);
            }
            this.refreshListFunc(t);
        }, i.prototype.refreshListFunc = function(e) {
            this.baseData.removeAll(), e.sort(function(e, t) {
                return t.updateTime - e.updateTime;
            }), this.baseData = new eui.ArrayCollection(e), this.list.dataProvider = this.baseData;
        }, i;
    }(e.WindowBase);
    e.ComFriendListWindow = t, __reflect(t.prototype, "game.ComFriendListWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(e) {
        function t() {
            return null !== e && e.apply(this, arguments) || this;
        }
        return __extends(t, e), t.prototype.onInit = function() {
            this.panel.registCallBack(this.getFunc, null, this);
        }, t.prototype.getFunc = function() {}, t;
    }(e.WindowBase);
    e.ComGetPropWindow = t, __reflect(t.prototype, "game.ComGetPropWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(e) {
        function t() {
            var t = e.call(this) || this;
            return t.descColor = 6976630, t.targetColor = 15164416, t.skinPath = "common/ComNewsItemSkin", 
            t;
        }
        return __extends(t, e), t.prototype.onInit = function() {
            this.addClick(this.getBtn, this.getBtnFunc, this);
        }, t.prototype.getBtnFunc = function() {}, t;
    }(e.ItemRenderBase);
    e.ComNewsItem = t, __reflect(t.prototype, "game.ComNewsItem");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(e) {
        function t() {
            return null !== e && e.apply(this, arguments) || this;
        }
        return __extends(t, e), t.prototype.onInit = function() {
            this.panel.helpBtn.visible = !1, this.newsLogs = [], this.scroller.viewport = this.list, 
            this.baseData = new eui.ArrayCollection([]), this.list.dataProvider = this.baseData, 
            this.initEvent && this.initEvent();
        }, Object.defineProperty(t.prototype, "logs", {
            get: function() {
                return this.newsLogs;
            },
            set: function(e) {
                this.newsLogs = e, this.empty.visible = 0 == e.length, this.baseData.replaceAll(this.newsLogs), 
                this.list.dataProviderRefreshed();
            },
            enumerable: !0,
            configurable: !0
        }), t;
    }(e.WindowBase);
    e.ComNewsWindow = t, __reflect(t.prototype, "game.ComNewsWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.panelAlert.registCallBack(this.getRewardFunc, null, this);
        }, i.prototype.onData = function() {
            this.rewardGroup.removeChildren();
            for (var t in this.data) if (!("money" != t && "energy" != t && "cookie" != t && "allInOne" != t && "potion" != t && "wanted" != t && "miniShield" != t && "puffer" != t && "lolly" != t && "doubleMoneyCard" != t && "horn" != t && "wishCoin" != t && "monthcard" != t || this.data[t] < 1)) {
                var i = new e.ComRewardNode(), n = {};
                n[t] = this.data[t], this.rewardGroup.addChild(i), i.initNodeView(n);
            }
            this.panelAlert.okBtn.enabled = this.data.isAll;
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.getRewardFunc = function() {}, i;
    }(e.WindowBase);
    e.ComRewardPopWindow = t, __reflect(t.prototype, "game.ComRewardPopWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.panelAlert.registCallBack(this.getRewardFunc, null, this);
        }, i.prototype.onData = function() {
            if (this.rewardGroup.removeChildren(), this.tipLabel.text = "", this.data.reward) {
                for (var t in this.data.reward) if (!("money" != t && "energy" != t && "cookie" != t && "allInOne" != t && "potion" != t && "wanted" != t && "miniShield" != t && "puffer" != t && "lolly" != t && "doubleMoneyCard" != t && "horn" != t && "wishCoin" != t && "monthcard" != t || this.data.reward[t] < 1)) {
                    var i = new e.ComRewardNode(), n = {};
                    n[t] = this.data.reward[t], this.rewardGroup.addChild(i), i.initNodeView(n);
                }
                this.data.title && (this.title.source = this.data.title), this.data.btnLabel && (this.panelAlert.okBtn.icon = this.data.btnLabel), 
                this.data.tip && (this.tipLabel.text = this.data.tip);
            }
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.getRewardFunc = function() {}, i;
    }(e.WindowBase);
    e.ComRewardPopWithCbWindow = t, __reflect(t.prototype, "game.ComRewardPopWithCbWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(e) {
        function t() {
            return null !== e && e.apply(this, arguments) || this;
        }
        return __extends(t, e), t.prototype.onInit = function() {
            this.panel.registCallBack(this.sendFunc, null, this);
        }, t.prototype.onOpen = function() {}, t.prototype.onData = function() {}, t.prototype.prepare = function(e, t) {
            e(null);
        }, t.prototype.sendFunc = function() {}, t;
    }(e.WindowBase);
    e.ComSendPropWindow = t, __reflect(t.prototype, "game.ComSendPropWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(e) {
        function t(t, i, n, o, a) {
            void 0 === a && (a = !0);
            var r = e.call(this) || this;
            return r.index = 0, r.isRandom = !1, r.initIndex = 0, r.isInitShow = !0, r.m_isShowable = !0, 
            r.menuId = t, r.m_hideRedOnClick = a, r.index = n, r.iconName = i, r.onClickCallback = o, 
            r.width = r.height = 88, r.addEventListener(egret.TouchEvent.TOUCH_TAP, r.onClick, r), 
            r.loadSkin(), r;
        }
        return __extends(t, e), t.prototype.loadSkin = function() {
            this.skinPath = "faceUI/MenuSkin";
        }, t.prototype.onInit = function() {
            this.bg.visible = !this.isRandom, this.scaleEffect = new hortor.TouchScaleEffect(), 
            this.scaleEffect.start(this), this.onMenuInit(), this.gate && (this.gate = this.gate), 
            this.isShowable && this.showMenu(this.container), uiModel.onShow(this.name, this);
        }, Object.defineProperty(t.prototype, "iconSource", {
            set: function(e) {
                var t = this;
                this.callSafe(function() {
                    t.icon.source = "faceUI_json." + e;
                });
            },
            enumerable: !0,
            configurable: !0
        }), t.prototype.onMenuInit = function() {
            this.icon.source = "faceUI_json." + this.iconName, this.redPoint.visible = !1;
        }, t.prototype.onClick = function(e) {
            if (this.m_gate && (this.m_gate.isOpened = !0, this.m_hideRedOnClick && (this.m_gate.userRed = !1)), 
            this.onClickCallback) this.onClickCallback(); else {
                var t = this.guide ? parseInt(this.guide) : this.menuId, i = hortor.ScreenManager.hasScreen(t);
                i ? hortor.ScreenManager.currentScreen = t : hortor.WindowManager.currentWindow = t, 
                this.guide = null;
            }
        }, Object.defineProperty(t.prototype, "gate", {
            get: function() {
                return this.m_gate;
            },
            set: function(e) {
                this.m_gate = e, this.isInitialized && (this.m_gate.bind("unlock", this, this.unlockChange), 
                this.m_gate.bind("show", this, "isShowable"), this.m_gate.bind("red", this.redPoint, "visible"), 
                this.m_gate.bind("tempShow", this, "tempShow"));
            },
            enumerable: !0,
            configurable: !0
        }), t.prototype.unlockChange = function() {
            if (this.gate.hideLock || this.gate.unlock) {
                var e = RES.getRes(this.iconName);
                e && (this.icon.source = e);
            } else {
                var e = RES.getRes(this.iconName + "_lock");
                e && (this.icon.source = e);
            }
        }, Object.defineProperty(t.prototype, "red", {
            get: function() {
                return this.m_gate ? this.m_gate.red : this.m_red;
            },
            set: function(e) {
                this.m_gate ? this.m_gate.red = e : this.m_red = e, this.redPoint.visible = this.red;
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(t.prototype, "tempShow", {
            get: function() {
                return this.m_tempShow;
            },
            set: function(e) {
                this.m_tempShow = e, this.onShowChange && this.onShowChange(this, this.isShowable || this.tempShow);
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(t.prototype, "isShow", {
            get: function() {
                return this.isShowable || this.tempShow;
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(t.prototype, "isShowable", {
            get: function() {
                return this.m_gate ? this.m_gate.show : this.m_isShowable;
            },
            set: function(e) {
                this.m_isShowable = e, this.alpha = this.m_isShowable ? 1 : 0, this.onShowChange && this.onShowChange(this, this.isShowable || this.tempShow);
            },
            enumerable: !0,
            configurable: !0
        }), t.prototype.showMenu = function(e) {
            var t = this;
            if (this.container = e, this.alpha = this.isShowable ? 1 : 0, !this.parent) {
                e.addChild(this), this.scaleX = this.scaleY = 0;
                var i = this.isInitShow ? 100 * this.initIndex : 0;
                egret.Tween.get(this).wait(i).to({
                    scaleX: 1,
                    scaleY: 1
                }, 500, egret.Ease.backOut).call(function() {
                    t.isInitShow = !1;
                });
            }
        }, t.prototype.hideMenu = function() {
            var e = this;
            this.parent && egret.Tween.get(this).to({
                scaleX: 0,
                scaleY: 0
            }, 400, egret.Ease.backIn).call(function() {
                e.parent && e.parent.removeChild(e);
            }, this);
        }, t;
    }(e.ViewBase);
    e.Menu = t, __reflect(t.prototype, "game.Menu");
}(game || (game = {}));

var game;

!function(e) {
    var t = function() {
        function t(e) {
            this.waitTime = 0, this.stepInfo = e, this.stepID = e.id, this.parameters = this.stepInfo.parameters;
        }
        return t.prototype.dispose = function() {
            hortor.NotificationManager.remove(e.TutorialManager.ON_CHANGE, this.onConditionRefreshd, this), 
            this.waitTime && egret.clearTimeout(this.waitTime), this.stepInfo = null;
        }, t.prototype.end = function() {
            this.stepInfo && (hortor.Log.log(this, "end id:" + this.stepID), this.stepInfo.autoEnd && e.TutorialManager.instance.completeStep(this.tutorialID, this.stepInfo.id, this.stepInfo.serverid), 
            this.dispose());
        }, t.prototype.execute = function() {
            return this.stepInfo.condition && "" != this.stepInfo.condition && !e.TutorialManager.instance.getCondition(this.stepInfo.condition) ? (hortor.Log.log(this, "wait condition:" + this.stepInfo.condition + ",id:" + this.stepID), 
            void hortor.NotificationManager.add(e.TutorialManager.ON_CHANGE, this.onConditionRefreshd, this)) : (hortor.Log.log(this, "wait time:" + this.stepInfo.waitTime + ",id:" + this.stepID), 
            this.onParse(), void (0 != this.stepInfo.waitTime ? (this.stepInfo.modal >= 0 && (hortor.Log.warn(this, "lockStage"), 
            e.TutorialManager.instance.lockStage()), this.waitTime = egret.setTimeout(this.executeOnce, this, 1e3 * this.stepInfo.waitTime)) : this.executeOnce()));
        }, t.prototype.executeOnce = function() {
            hortor.Log.log(this, "execute id:" + this.stepID), this.stepInfo.sound && hortor.SoundManager.playSound(this.stepInfo.sound), 
            e.TutorialManager.instance.unlockStage(), this.onExecute();
        }, t.prototype.onConditionRefreshd = function(e) {
            e == this.stepInfo.condition && (hortor.Log.log("onConditionRefreshd:" + e), this.execute());
        }, t.prototype.onExecute = function() {}, t.prototype.onParse = function() {}, t.create = function(t) {
            switch (t.type) {
              case 1:
                return new e.JumpStep(t);

              case 2:
                return new e.PointStep(t);

              case 3:
                return new e.TalkStep(t);

              case 4:
                return new e.CloseStep(t);

              case 5:
                return new e.TipStep(t);
            }
            return null;
        }, t;
    }();
    e.TutorialStep = t, __reflect(t.prototype, "game.TutorialStep");
}(game || (game = {}));

var game;

!function(e) {
    var t = function() {
        function t(e) {
            this._nowState = "", this.showTimes = 0, this.arData = e, this.createTiaoDaiArmature(), 
            this.createArmature();
        }
        return t.prototype.createTiaoDaiArmature = function() {
            this.tiaodaiArmature = new e.ArmaturePlayer("tiaodai"), this.arData.parent.addChild(this.tiaodaiArmature);
        }, t.prototype.createArmature = function() {
            this.rewardArmature = new e.ArmaturePlayer(this.arData.name), this.arData.parent.addChild(this.rewardArmature), 
            this.rewardArmature.x = this.arData.posX, this.rewardArmature.y = this.arData.posY;
        }, t.prototype.playTiaoDaiArmature = function() {}, t.prototype.completeHandler = function(e) {}, 
        t.prototype.setState = function(t, i, n) {
            if (void 0 === n && (n = !1), t != this._nowState || n) switch (this._nowState = t, 
            this._nowState) {
              case e.WheelAniType.Enter:
                this.enterStatus(i);
                break;

              case e.WheelAniType.Ready:
                this.readyStatus(i);
                break;

              case e.WheelAniType.Wait:
                this.waitStatus(i);
                break;

              default:
                this.actionStatus(t, i);
            }
        }, t.prototype.enterStatus = function(t) {
            void 0 === t && (t = 0), this.rewardArmature.play(e.WheelAniType.Enter, t, this.completeHandler, this);
        }, t.prototype.readyStatus = function(t) {
            void 0 === t && (t = 0), this.rewardArmature.play(e.WheelAniType.Ready, t, this.completeHandler, this);
        }, t.prototype.waitStatus = function(t) {
            void 0 === t && (t = 0), this.rewardArmature.play(e.WheelAniType.Wait, t, this.completeHandler, this);
        }, t.prototype.actionStatus = function(e, t) {
            void 0 === t && (t = 0), this.rewardArmature.play(e, t, this.completeHandler, this);
        }, t.prototype.dealCbFunc = function() {
            this.arData && this.arData.cbFunc && "function" == typeof this.arData.cbFunc && this.arData.cbFunc(this.arData.newData, this.showTimes);
        }, t.prototype.resetArPos = function() {
            this.rewardArmature && (this.rewardArmature.x = this.arData.posX, this.rewardArmature.y = this.arData.posY, 
            this.rewardArmature.visible = !0);
        }, t.prototype.dispose = function() {
            this.rewardArmature && (egret.Tween.removeTweens(this.rewardArmature), this.rewardArmature.dispose()), 
            this.tiaodaiArmature && (egret.Tween.removeTweens(this.tiaodaiArmature), this.tiaodaiArmature.dispose());
        }, t;
    }();
    e.WheelComGet = t, __reflect(t.prototype, "game.WheelComGet"), e.WheelAniType = {
        Action: "action",
        Enter: "enter",
        Wait: "wait",
        Ready: "ready",
        Energy1: "energy1",
        Energy2: "energy1",
        Energy3: "energy2",
        Energy4: "energy2",
        Energy5: "energy2",
        Dun_nengl: "dun_nengl",
        New: "new",
        Normal: "normal"
    };
}(game || (game = {}));

var hortor;

!function(e) {
    var t = function(t) {
        function i(e, i, n) {
            void 0 === n && (n = !0);
            var o = t.call(this) || this;
            return o.animations = {}, o.isLoading = !1, o.sheetUrl = e, o.defaultAnimation = i, 
            o.preParse = n, o.onLoadCallBacks = new Array(), o;
        }
        return __extends(i, t), i.prototype.onResource = function(e) {
            if (this.sheetResource = e, this.preParse) {
                var t = e.sheetConfig.mc;
                if (t) for (var i in t) this.defaultAnimation || (this.defaultAnimation = i), this.addMovieClip(i);
            }
        }, i.prototype.load = function(t, i) {
            var n = this;
            !this.sheetResource && this.sheetUrl ? (null != t && this.onLoadCallBacks.push({
                func: t,
                obj: i
            }), this.isLoading || (this.isLoading = !0, e.ResourceManager.loadSheet(this.sheetUrl, function(e) {
                for (n.onResource(e); n.onLoadCallBacks.length; ) {
                    var t = n.onLoadCallBacks.shift();
                    t.func.call(t.obj);
                }
            }, null, this))) : t.call(i);
        }, i.prototype.play = function(e, t, i) {
            return void 0 === e && (e = -1), void 0 === t && (t = null), void 0 === i && (i = null), 
            this.playAnimation(this.defaultAnimation, e, !0, t, i);
        }, i.prototype.playAnimation = function(e, t, i, n, o) {
            var a = this;
            if (void 0 === t && (t = -1), void 0 === i && (i = !0), void 0 === n && (n = null), 
            void 0 === o && (o = null), this.sheetResource) {
                if (!this.animations[e] && !this.addMovieClip(e)) throw new Error("找不到对应动作集合:" + e);
                var r;
                return this.currentAnimation != e ? (this.currentAnimation && this.removeChild(this.animations[this.currentAnimation]), 
                this.currentAnimation = e, r = this.animations[e], this.addChild(r)) : r = this.animations[e], 
                r.play(t, i, n, o), r;
            }
            return this.load(function() {
                a.playAnimation(e || a.defaultAnimation, t, i, n, o);
            }, this), null;
        }, i.prototype.pause = function(e) {
            if (this.currentAnimation && null != this.animations[this.currentAnimation]) {
                var t = this.animations[this.currentAnimation];
                e ? t.stop() : t.play();
            }
        }, i.prototype.stop = function() {
            if (this.currentAnimation && null != this.animations[this.currentAnimation]) {
                var e = this.animations[this.currentAnimation];
                e.stop();
            }
        }, i.prototype.dispose = function() {
            if (null != this.currentAnimation && (this.removeChild(this.animations[this.currentAnimation]), 
            this.currentAnimation = null), null != this.animations) {
                for (var t in this.animations) this.animations[t].dispose(), delete this.animations[t];
                this.animations = null, e.ResourceManager.getResource(this.sheetUrl) && e.ResourceManager.diposeResource(this.sheetUrl);
            }
            this.sheetResource = null;
        }, i.prototype.addMovieClip = function(e) {
            var t = this.sheetResource.createMovieClip(e);
            return t && (t.name = e, this.animations[e] = t), t;
        }, i;
    }(egret.Sprite);
    e.MoviePlayer = t, __reflect(t.prototype, "hortor.MoviePlayer");
}(hortor || (hortor = {}));

var game;

!function(e) {
    var t = function(e) {
        function t() {
            var t = e.call(this) || this;
            return t.once(egret.Event.COMPLETE, t.createCompleteEvent, t), t.once(egret.Event.REMOVED_FROM_STAGE, t.removeFunc, t), 
            t.skinPath = "inviteReward/ShareFriendNodeSkin", t;
        }
        return __extends(t, e), t.prototype.createCompleteEvent = function(e) {}, t.prototype.removeFunc = function() {}, 
        t.prototype.prepare = function(e, t) {
            e(null);
        }, t.prototype.onData = function() {
            util.jzlog("dataChangeddataChangeddataChangeddataChangeddataChanged", this.data);
            var e = this.data.id;
            util.jzlog("ShareFriedNode:::::FriendRewards == ", FriendRewards), util.jzlog("_id ===", e);
            var t = FriendRewards.friendRewards, i = t[e];
            util.jzlog("_reward ==", i), i ? (util.jzlog("此处有头像"), this.userGroup.visible = !0, 
            this.emptyImg.visible = !1, util.setRemoteAvatar(this.headImg, i.headImg, 64), util.jzlog("_reward.crowns === ", i.crowns), 
            util.jzlog("this.crownNum ==", this.crownNum), this.crownNum.text = i.crowns.toString()) : (this.userGroup.visible = !1, 
            this.emptyImg.visible = !0);
        }, t;
    }(e.ItemRenderBase);
    e.ShareFriendNode = t, __reflect(t.prototype, "game.ShareFriendNode");
}(game || (game = {}));

var hortor;

!function(e) {
    var t = function(e) {
        function t() {
            return e.call(this) || this;
        }
        return __extends(t, e), t.prototype.show = function(t, i, n) {
            void 0 === n && (n = null), e.prototype.show.call(this, t, i, n), t.scaleX = t.scaleY = .4, 
            egret.Tween.get(t).to({
                scaleX: 1,
                scaleY: 1
            }, 360, egret.Ease.backOut).call(i, t);
        }, t.prototype.hide = function(e, t, i) {
            void 0 === i && (i = null), egret.Tween.removeTweens(e), t();
        }, t;
    }(e.WindowEffectBase);
    e.ScaleBackEffect = t, __reflect(t.prototype, "hortor.ScaleBackEffect");
}(hortor || (hortor = {}));

var hortor;

!function(e) {
    var t = function(t) {
        function i(n, o) {
            void 0 === n && (n = i.LEFT_TO_RIGHT), void 0 === o && (o = .35);
            var a = t.call(this) || this;
            return a.direction = n, a.slidDistance = e.StageManager.stageWidth * o, a;
        }
        return __extends(i, t), i.prototype.show = function(i, n, o) {
            void 0 === o && (o = null), t.prototype.show.call(this, i, n, o);
            var a = 0 == this.direction ? i.anchorOffsetX : e.StageManager.stageWidth - i.width + i.anchorOffsetX, r = 0 == this.direction ? a - this.slidDistance : a + this.slidDistance;
            i.x = r, egret.Tween.get(i).to({
                x: a
            }, 300, egret.Ease.backOut).call(n, i);
        }, i.prototype.hide = function(t, i, n) {
            void 0 === n && (n = null), egret.Tween.removeTweens(t);
            var o = 0 == this.direction ? t.anchorOffsetX : e.StageManager.stageWidth - t.width + t.anchorOffsetX, a = 0 == this.direction ? o - this.slidDistance : o + this.slidDistance;
            egret.Tween.get(t).to({
                x: a
            }, 300, egret.Ease.backIn).call(i, t);
        }, i.LEFT_TO_RIGHT = 0, i.RIGHT_TO_LEFT = 1, i;
    }(e.WindowEffectBase);
    e.SlideEffect = t, __reflect(t.prototype, "hortor.SlideEffect");
}(hortor || (hortor = {}));

var game;

!function(e) {
    var t = function() {
        function t() {
            this.resourceList = [];
        }
        return t.prototype.initialize = function() {
            var t = playerModel.island % playerModel.islandCount + 1;
            this.addRes(e.ResourcePath.getBuildingIconJson(t), RES.ResourceItem.TYPE_SHEET).addRes(e.ResourcePath.getMovieClip("jingbi3_1"), RES.ResourceItem.TYPE_SHEET).addRes(e.ResourcePath.getMovieClip("jingbi3_2"), RES.ResourceItem.TYPE_SHEET), 
            hortor.ResourceManager.createGroup("silentRes", this.resourceList);
        }, t.prototype.addRes = function(e, t) {
            return this.resourceList.push({
                type: t,
                url: e
            }), this;
        }, t.prototype.load = function() {
            hortor.ResourceManager.loadGroup("silentRes", -2, function() {
                console.log("silent load end:silentRes");
            }), new e.ArmaturePlayer("tiaodai").preload(), new e.ArmaturePlayer("paoeffects").preload(), 
            new e.ArmaturePlayer("paodan").preload(), new e.ArmaturePlayer("boom").preload(), 
            new e.ArmaturePlayer("ruin").preload(), new e.ArmaturePlayer("pet_bear").preload(), 
            new e.ArmaturePlayer("pet_seal").preload(), new e.ArmaturePlayer("buildeffects").preload();
        }, t;
    }();
    e.SilentLoader = t, __reflect(t.prototype, "game.SilentLoader");
}(game || (game = {}));

var hortor;

!function(e) {
    var t = function() {
        function e() {}
        return Object.defineProperty(e, "lang", {
            set: function(t) {
                e.langMap = t;
            },
            enumerable: !0,
            configurable: !0
        }), e.getString = function(t, i) {
            if (void 0 === i && (i = !1), !e.langMap) {
                if (!i) return "";
                throw new Error("Locale hasn't been initialized!");
            }
            for (var n = e.langMap, o = t.split("."), a = 0; a < o.length; a++) {
                var r = o[a];
                if ("@text" != r && (r = r.replace("@", ""), n = n[r], !n)) {
                    if (!i) return "";
                    throw new Error("unknow locale definition for key:: " + t);
                }
            }
            return n;
        }, e;
    }();
    e.LocaleManager = t, __reflect(t.prototype, "hortor.LocaleManager");
}(hortor || (hortor = {}));

var hortor;

!function(e) {
    var t = function() {
        function t(e, i) {
            void 0 === i && (i = null), this.propertys = new Object(), this.propertyCount = 0, 
            this.source = e, this.onChange = i, t.bindings.put(e, this);
        }
        return t.prototype.bind = function(e, t, n) {
            void 0 === n && (n = "text");
            var o = this.propertys[e];
            null == o && (o = new i(this.source, e, this.onChange), this.propertys[e] = o, this.propertyCount++), 
            o.bind(t, n);
        }, t.prototype.unbind = function(e, i) {
            function n(i) {
                var n = i.unbind(e);
                n || (delete a.propertys[i.property], a.propertyCount--, a.propertyCount <= 0 && t.bindings.remove(a.source));
            }
            void 0 === i && (i = "text");
            var o, a = this;
            if (i) o = this.propertys[i], o && n(o); else for (var r in this.propertys) o = this.propertys[r], 
            n(o);
        }, t.prototype.setProperty = function(e, t, i) {
            void 0 === i && (i = !1);
            var n = this.propertys[e];
            n ? (n.forceRefresh = i, n.value = t) : this.source[e] = t;
        }, t.prototype.updateProperty = function(e) {
            var t = this.propertys[e];
            t && this.setProperty(e, this.source[e], !0);
        }, t.prototype.getProperty = function(e) {
            return this.source[e];
        }, t.prototype.dispose = function() {
            if (null != this.propertys) {
                for (var e in this.propertys) {
                    var i = this.propertys[e];
                    i.dispose(), delete this.propertys[i.property];
                }
                this.propertys = null;
            }
            null != this.source && (t.bindings.remove(this.source), this.source = null), this.propertyCount = 0, 
            this.onChange = null;
        }, t.create = function(e, i, n, o) {
            void 0 === o && (o = "text");
            var a = t.bindings.getValue(e) || new t(e);
            return a.bind(i, n, o), a;
        }, t.remove = function(e, i) {
            void 0 === i && (i = "text");
            for (var n = t.bindings.length, o = 0; n > o; o++) {
                var a = t.bindings[o];
                a.unbind(e, i);
            }
        }, t.bindings = new e.HashMap(), t;
    }();
    e.Binder = t, __reflect(t.prototype, "hortor.Binder");
    var i = function() {
        function t(t, i, n) {
            void 0 === n && (n = null), this.targets = new e.HashMap(), this.targetCount = 0, 
            this.getF = null, this.setF = null, this.source = t, this.onChange = n, this.property = i, 
            this.oldValue = this.newValue = t[i];
            for (var o = this, a = t.constructor.prototype; !a.hasOwnProperty(i) && (a = Object.getPrototypeOf(a), 
            null != a); ) ;
            a && (this.getF = Object.getOwnPropertyDescriptor(a, i).get, this.setF = Object.getOwnPropertyDescriptor(a, i).set), 
            Object.defineProperty(t, i, {
                set: function(e) {
                    o.setF && o.setF.call(t, e), o.value = e;
                },
                get: function() {
                    return o.getF ? o.getF.call(t) : o.value;
                }
            });
        }
        return t.prototype.bind = function(e, t) {
            void 0 === t && (t = null), e.hasBinder = !0, null == t && (t = this.property), 
            this.targets.containsKey(e) || (this.targets.put(e, new n(e, t)), this.targetCount++), 
            this.oldValue = this.value, this.fixBind(this.targets.getValue(e), this.oldValue);
        }, t.prototype.unbind = function(e) {
            e.hasBinder = !1;
            var t = this.targets.getValue(e);
            return t ? (t.dispose(), this.targets.remove(e), this.targetCount--, this.targetCount > 0) : !0;
        }, Object.defineProperty(t.prototype, "value", {
            get: function() {
                return this.newValue;
            },
            set: function(e) {
                if (this.forceRefresh || this.newValue !== e) {
                    this.oldValue = this.value, this.newValue = e;
                    for (var t in this.targets.content) {
                        var i = this.targets.content[t];
                        this.fixBind(i, e);
                    }
                    null != this.onChange && this.onChange();
                }
            },
            enumerable: !0,
            configurable: !0
        }), t.prototype.fixBind = function(e, t) {
            if (null != e.targetSetter) t = "text" == e.targetSetter ? t : t, e.target[e.targetSetter] = t; else if (null != e.targetFunction) {
                var i = e.targetFunction.length;
                if (0 == i) e.targetFunction.call(e.target); else if (1 == i) e.targetFunction.call(e.target, t); else {
                    if (2 != i) throw new Error("绑定属性的回调函数参数错误!");
                    e.targetFunction.call(e.target, t, this.oldValue);
                }
            }
        }, t.prototype.dispose = function() {
            this.source = null, this.property = null, this.oldValue = null, this.targetCount = 0;
            for (var e in this.targets.content) {
                var t = this.targets.content[e];
                t.dispose();
            }
            this.targets.clear(), this.targets = null;
        }, t;
    }();
    e.BindProperty = i, __reflect(i.prototype, "hortor.BindProperty");
    var n = function() {
        function e(e, t) {
            void 0 === t && (t = null), this.target = e, "function" == typeof t ? (this.targetSetter = null, 
            this.targetFunction = t) : (this.targetSetter = t, this.targetFunction = null);
        }
        return e.prototype.dispose = function() {
            this.target = null, this.targetSetter = null, this.targetFunction = null;
        }, e;
    }();
    e.BindTarget = n, __reflect(n.prototype, "hortor.BindTarget");
}(hortor || (hortor = {}));

var hortor;

!function(e) {
    var t = function() {
        function t() {}
        return t.initialize = function(e) {
            this.navigator = e;
        }, t.registScreen = function(i, n, o, a) {
            return void 0 === o && (o = null), null == t.navigator && (t.navigator = new e.WindowNavigator(e.StageManager.getLayer(e.Layer.SCREEN))), 
            t.navigator.registWindow(i, n, o, a, !1, !1);
        }, t.unRegisterScreen = function(e) {
            t.navigator.unRegisterWindow(e);
        }, t.hasScreen = function(e) {
            return t.navigator.hasWindow(e);
        }, t.getScreen = function(e) {
            return t.navigator.getWindow(e);
        }, t.getScreenData = function(e) {
            return t.navigator.getWindowData(e);
        }, Object.defineProperty(t, "currentScreen", {
            get: function() {
                return t.navigator.currentWindow;
            },
            set: function(e) {
                t.navigator.currentWindow = e;
            },
            enumerable: !0,
            configurable: !0
        }), t.back = function() {
            return t.navigator.back();
        }, t.showScreen = function(e, i, n, o, a) {
            void 0 === i && (i = null), t.navigator.showWindow(e, i, null, n, o, a);
        }, t.hideScreen = function(e, i, n, o, a) {
            void 0 === o && (o = !1), void 0 === a && (a = !0), t.navigator.hideWindow(e, i, n, o, a);
        }, t.hideAllScreen = function(e) {
            void 0 === e && (e = !0), t.navigator.hideAllWindow(e);
        }, t.isOpen = function(e) {
            return t.navigator.isOpen(e);
        }, t.isActive = function(e) {
            return t.navigator.isActive(e);
        }, t;
    }();
    e.ScreenManager = t, __reflect(t.prototype, "hortor.ScreenManager");
}(hortor || (hortor = {}));

var hortor;

!function(e) {
    var t = function() {
        function t() {}
        return t.addSound = function(e, t, i, n, o) {
            void 0 === i && (i = !1), void 0 === n && (n = 0), void 0 === o && (o = !1);
            for (var a = 0; a < this.sounds.length; a++) if (this.sounds[a].name == e) return !1;
            var r = {};
            return r.name = e, r.source = {
                path: t,
                checkPolicyFile: o
            }, r.channel = null, r.position = 0, r.length = n, r.sound = null, r.stoped = !0, 
            r.volume = 1, r.startTime = 0, r.loops = i ? 0 : 1, r.isMusic = i, this.soundsDict.put(e, r), 
            this.sounds.push(r), !0;
        }, t.removeSound = function(e) {
            for (var t = 0; t < this.sounds.length; t++) this.sounds[t].name == e && (this.sounds[t] = null, 
            this.sounds.splice(t, 1));
            this.soundsDict.remove(e);
        }, t.removeAllSounds = function() {
            for (var t = 0; t < this.sounds.length; t++) this.sounds[t] = null;
            this.sounds = new Array(), this.soundsDict = new e.HashMap();
        }, t.playSound = function(i, n, o, a) {
            function r(e) {
                l.sound = e, l.length <= 0 && (l.length = e.length), s();
            }
            function s() {
                t.play(i, 0, a);
            }
            void 0 === n && (n = 1), void 0 === o && (o = 0), void 0 === a && (a = 1);
            var l = this.soundsDict.getValue(i);
            return l ? (l.isMusic && (this.currentMusic != i, this.currentMusic && this.stopSound(this.currentMusic), 
            this.currentMusic = i), void (l.mute || l.isMusic && !this.musicOn || !l.isMusic && !this.soundOn || (l.volume = n, 
            l.startTime = o, a = !l.isMusic && a >= 0 ? a : l.loops, null == l.sound ? e.ResourceManager.loadSound(l.source.path, r, this) : s()))) : void e.Log.warn(this, "playSound not found:" + i);
        }, t.stopSound = function(t) {
            var i = this.soundsDict.getValue(t);
            i && !i.stoped && (i.stoped = !0, i.channel && (e.TimerManager.removeClock("sound" + t), 
            i.channel.stop(), i.channel = null));
        }, t.playAllSounds = function(e, t) {
            void 0 === e && (e = !0), void 0 === t && (t = !0);
            for (var i = 0; i < this.sounds.length; i++) {
                var n = this.sounds[i].name;
                (e && this.isMusic(n) || t && !this.isMusic(n)) && this.playSound(n);
            }
        }, t.stopAllSounds = function(e, t) {
            void 0 === e && (e = !0), void 0 === t && (t = !0);
            for (var i = 0; i < this.sounds.length; i++) {
                var n = this.sounds[i].name;
                (e && this.isMusic(n) || t && !this.isMusic(n)) && this.stopSound(n);
            }
        }, t.muteAllSounds = function(e, t) {
            void 0 === e && (e = !0), void 0 === t && (t = !0);
            for (var i = 0; i < this.sounds.length; i++) {
                var n = this.sounds[i].name;
                (e && this.isMusic(n) || t && !this.isMusic(n)) && this.setVolume(n, 0);
            }
        }, t.unmuteAllSounds = function(e, t) {
            void 0 === e && (e = !0), void 0 === t && (t = !0);
            for (var i = 0; i < this.sounds.length; i++) {
                var n = this.sounds[i].name;
                (e && this.isMusic(n) || t && !this.isMusic(n)) && this.setVolume(n, 1);
            }
        }, t.pause = function(e) {
            var t = this.soundsDict.getValue(e);
            if (t.channel && !t.stoped) {
                var i = t.channel;
                t.position = i.position, this.stopSound(e);
            }
        }, t.resume = function(e) {
            var t = this.soundsDict.getValue(e);
            if (t && t.stoped) {
                if (t.mute || t.isMusic && !this.musicOn || !t.isMusic && !this.soundOn) return;
                this.play(e, t.position, t.loops);
            }
        }, t.setVolume = function(e, t) {
            var i = this.soundsDict.getValue(e);
            i.mute = 0 == t, i.channel && !i.stoped && (i.channel.volume = t);
        }, t.getVolume = function(e) {
            var t = this.soundsDict.getValue(e);
            return t.channel && !t.stoped ? t.channel.volume : 0;
        }, t.getSoundPosition = function(e) {
            var t = this.soundsDict.getValue(e);
            return t.channel ? t.channel.position : 0;
        }, t.isMusic = function(e) {
            return this.soundsDict.getValue(e).isMusic;
        }, Object.defineProperty(t, "soundOn", {
            get: function() {
                return this.mSoundOn;
            },
            set: function(t) {
                this.mSoundOn = t, t || e.SoundManager.stopAllSounds(!1, !0);
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(t, "musicOn", {
            get: function() {
                return this.mMusicOn;
            },
            set: function(t) {
                this.mMusicOn = t, t ? this.currentMusic && e.SoundManager.playSound(this.currentMusic) : e.SoundManager.stopAllSounds(!0, !0);
            },
            enumerable: !0,
            configurable: !0
        }), t.play = function(t, i, n) {
            function o(e, t) {
                var i = e.play(t, 1);
                a.channel = i, a.stoped = !1;
            }
            this.stopSound(t);
            var a = this.soundsDict.getValue(t);
            if (a && a.sound) {
                var r = a.sound;
                o(r, i), 1 != n && (n = n > 0 ? n - 1 : 0, e.TimerManager.addClock("sound" + t, a.length, 1e3, n).registCallBack(this, null, null, function() {
                    o(r, 0);
                }));
            }
        }, t.soundsDict = new e.HashMap(), t.sounds = [], t.mSoundOn = !0, t.mMusicOn = !0, 
        t;
    }();
    e.SoundManager = t, __reflect(t.prototype, "hortor.SoundManager");
}(hortor || (hortor = {}));

var hortor;

!function(e) {
    var t;
    !function(e) {
        e[e.BG = 0] = "BG", e[e.SCREEN = 1] = "SCREEN", e[e.FACEUI = 2] = "FACEUI", e[e.WINDOW = 3] = "WINDOW", 
        e[e.TOP = 4] = "TOP", e[e.TIP = 5] = "TIP";
    }(t = e.Layer || (e.Layer = {}));
    var i = function() {
        function i() {}
        return i.initialize = function(n, o) {
            var a = this;
            i.stage = n, i.root = o, e.SystemManager.isWxGame && (n.scaleMode = egret.StageScaleMode.FIXED_WIDTH), 
            window.onresize = function() {
                i.resizeTimer = egret.setTimeout(a.onStageResize, a, 300);
            }, window.onerror = function(t, i, n) {
                e.Log.error(a, t, i, n);
            };
            var r = 0;
            for (var s in t) isNaN(parseInt(s)) && (this.addLayer(r, s), r++);
            this.onStageResize();
        }, i.addLayer = function(e, t) {
            void 0 === e && (e = -1), e = -1 == e ? this.root.numChildren : e;
            var i = this.root.addChildAt(new egret.Sprite(), e);
            i.name = t;
        }, i.addToLayer = function(e, t) {
            var i = this.getLayer(t);
            null != i && null != e && this.showDisplayObject(e, i);
        }, i.removeFromLayer = function(e, t) {
            var i = this.getLayer(t);
            null != i && null != e && this.hideDisplayObject(e, i);
        }, i.getLayer = function(e) {
            e = "number" == typeof e ? t[e] : e;
            var i = this.root.getChildByName(e);
            return i ? i : null;
        }, i.showLayer = function(e) {
            this.getLayer(e).visible = !0;
        }, i.hideLayer = function(e) {
            this.getLayer(e).visible = !1;
        }, i.showDisplayObject = function(e, t) {
            e.parent == t ? t.setChildIndex(e, t.numChildren - 1) : t.addChild(e);
        }, i.hideDisplayObject = function(e, t) {
            e.parent == t && t.removeChild(e);
        }, i.createStageModalBlocker = function(e, t, i, o) {
            void 0 === e && (e = null), void 0 === t && (t = null), void 0 === i && (i = 0), 
            void 0 === o && (o = .75);
            var a = new n(e, t, i, o);
            return a;
        }, Object.defineProperty(i, "stageWidth", {
            get: function() {
                return i.stage.stageWidth;
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(i, "stageHeight", {
            get: function() {
                return i.stage.stageHeight;
            },
            enumerable: !0,
            configurable: !0
        }), i.addResizeListener = function(e, t) {
            -1 == this.getCallBackIndex(i.resizeListeners, e, t) && (i.resizeListeners.push({
                func: e,
                thisObject: t
            }), e.call(t));
        }, i.removeResizeListener = function(e, t) {
            var n = this.getCallBackIndex(i.resizeListeners, e, t);
            -1 != n && i.resizeListeners.splice(n, 1);
        }, i.onStageResize = function(e) {
            void 0 === e && (e = null), this.resizeTimer = null;
            for (var t = 0; t < i.resizeListeners.length; t++) {
                var n = i.resizeListeners[t], o = n.func, a = n.thisObject;
                o.call(a);
            }
        }, i.getCallBackIndex = function(e, t, i) {
            for (var n = e.length, o = 0; n > o; o++) {
                var a = e[o];
                if (a.func === t && a.thisObject === i) return o;
            }
            return -1;
        }, i.scaleFactor = 1, i.resizeListeners = new Array(), i.stageOffHeight = 0, i;
    }();
    e.StageManager = i, __reflect(i.prototype, "hortor.StageManager");
    var n = function(e) {
        function t(t, n, o, a) {
            void 0 === t && (t = null), void 0 === n && (n = null), void 0 === o && (o = 0), 
            void 0 === a && (a = .75);
            var r = e.call(this, 10, 10, o) || this;
            return r.touchEnabled = !0, r.thisObject = n, r.onTouch = t, r.alpha = a, r.addEventListener(egret.TouchEvent.TOUCH_END, r.onBlockTouch, r, !1), 
            i.addResizeListener(r.onResize, r), r;
        }
        return __extends(t, e), t.prototype.removeFromParent = function(e) {
            void 0 === e && (e = !1), this.stage && this.parent.removeChild(this);
        }, t.prototype.onResize = function() {
            this.scaleX = i.stageWidth / this.width, this.scaleY = i.stageHeight / this.height;
        }, t.prototype.onBlockTouch = function(e) {
            null != this.onTouch && this.onTouch.call(this.thisObject);
        }, t;
    }(eui.Rect);
    e.StageModalBlocker = n, __reflect(n.prototype, "hortor.StageModalBlocker");
}(hortor || (hortor = {}));

var hortor;

!function(e) {
    var t;
    !function(e) {
        e[e.Auto = 0] = "Auto", e[e.Portrait = 1] = "Portrait", e[e.Landscape = 2] = "Landscape";
    }(t = e.AspectRatio || (e.AspectRatio = {}));
    var i = function() {
        function i() {}
        return i.initialize = function() {
            i.initVisibility();
        }, i.initVisibility = function() {
            function e() {
                n() ? i.onAppDeactivate() : i.onAppActivate();
            }
            function t() {
                var e = [ "webkit", "moz", "ms", "o" ];
                if ("hidden" in document) return "hidden";
                for (var t = 0; t < e.length; t++) if (e[t] + "Hidden" in document) return e[t] + "Hidden";
                return null;
            }
            function n() {
                var e = t();
                return e ? document[e] : !1;
            }
            if (egret.Capabilities.runtimeType != egret.RuntimeType.NATIVE) {
                var o = t();
                if (o) {
                    var a = o.replace(/[H|h]idden/, "") + "visibilitychange";
                    document.addEventListener(a, e);
                }
            }
        }, Object.defineProperty(i, "aspectRatio", {
            get: function() {
                return i.mAspectRatio = i.fullScreenWidth > i.fullScreenHeight ? t.Landscape : t.Portrait, 
                i.mAspectRatio;
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(i, "isWxGame", {
            get: function() {
                return egret.Capabilities.runtimeType == egret.RuntimeType.WXGAME;
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(i, "deactivateFrameRate", {
            get: function() {
                return this.mDeactivateFrameRate;
            },
            set: function(e) {
                this.mDeactivateFrameRate = e;
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(i, "fullScreenWidth", {
            get: function() {
                var e = 0;
                e = i.isMobile ? egret.MainContext.instance.stage.stageWidth : document.documentElement.clientWidth;
                var t = window.devicePixelRatio || 1;
                return e *= t;
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(i, "fullScreenHeight", {
            get: function() {
                var e = 0;
                e = i.isMobile ? egret.MainContext.instance.stage.stageHeight : document.documentElement.clientHeight;
                var t = window.devicePixelRatio || 1;
                return e *= t;
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(i, "isMobile", {
            get: function() {
                return egret.MainContext.deviceType == egret.MainContext.DEVICE_MOBILE;
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(i, "isIOS", {
            get: function() {
                return -1 != game.WxSystemInfo.system.indexOf(Const.IOS);
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(i, "isAndroid", {
            get: function() {
                return -1 != game.WxSystemInfo.system.indexOf(Const.Android);
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(i, "isPC", {
            get: function() {
                return egret.MainContext.deviceType == egret.MainContext.DEVICE_PC;
            },
            enumerable: !0,
            configurable: !0
        }), i.registDeviceState = function(e, t, i, n, o) {
            void 0 === i && (i = null), void 0 === n && (n = null), void 0 === o && (o = null), 
            this.thisObject = e, this.onDeactivateFunc = t, this.onBackFunc = n, this.onActiveFunc = i, 
            this.onSuspendFunc = o;
        }, i.exit = function() {
            for (var e = this.models.length, t = 0; e > t; t++) {
                var i = this.models[t];
                this.saveModel(i);
            }
        }, i.loadModel = function(t) {
            var i = e.SharedObject.getLocal(t.path);
            t.load(i.data);
        }, i.saveModel = function(t) {
            var i = e.SharedObject.getLocal(t.path);
            t.save(i.data), i.flush();
        }, i.addStoreable = function(e) {
            this.models.push(e), this.loadModel(e);
        }, i.removeStoreable = function(e) {
            var t = this.models.indexOf(e);
            -1 != t && this.models.splice(t, 1);
        }, Object.defineProperty(i, "platform", {
            get: function() {
                var e = i.getUserAgent();
                "" + e.match(/MicroMessenger/i);
                return "" + e.match(/windows nt/i) == "windows nt" ? "windows" : "" + e.match(/iphone/i) == "iphone" ? "ios" : "" + e.match(/android/i) == "android" ? "android" : "" + e.match(/ipad/i) == "ipad" ? "ipad" : "" + e.match(/linux/i) == "linux" ? "linux" : "" + e.match(/mac/i) == "mac" ? "mac" : "" + e.match(/ucbrower/i) == "ucbrower" ? "ucbrower" : (console.log("未知系统类型"), 
                "");
            },
            enumerable: !0,
            configurable: !0
        }), i.getUserAgent = function() {
            return window.navigator && window.navigator.userAgent ? window.navigator.userAgent.toLowerCase() : "runtime";
        }, i.onAppActivate = function() {
            for (var e = this.models.length, t = 0; e > t; t++) {
                var n = this.models[t];
                i.loadModel(n);
            }
            i.onActiveFunc && i.onActiveFunc.call(i.thisObject);
        }, i.onAppDeactivate = function() {
            for (var e = this.models.length, t = 0; e > t; t++) {
                var n = this.models[t];
                this.saveModel(n);
            }
            i.onDeactivateFunc && i.onDeactivateFunc.call(i.thisObject);
        }, i.onIosSuspend = function(e) {}, i.stageKeyDownHandler = function(e) {}, i.isNotchMobile = !1, 
        i.models = new Array(), i.mDeactivateFrameRate = .01, i;
    }();
    e.SystemManager = i, __reflect(i.prototype, "hortor.SystemManager");
}(hortor || (hortor = {}));

var hortor;

!function(e) {
    var t = function() {
        function e() {}
        return e.addClock = function(t, n, o, a, r, s) {
            void 0 === n && (n = 0), void 0 === o && (o = 1e3), void 0 === a && (a = 1), void 0 === r && (r = -1), 
            void 0 === s && (s = 1);
            var l = e.getClock(t);
            if (null == l && (o = Math.min(1e3 * n, o), l = new i(t, o), e.clockMap[t] = l), 
            !(n >= 0)) throw new Error("[TimerManager]addClock seconds不允许小于0.");
            return e.start(), l.start(n, a, r, s), l;
        }, e.removeClock = function(t) {
            e.clockMap[t] && (e.getClock(t).stop(), delete e.clockMap[t]);
        }, e.getClock = function(t, n) {
            void 0 === n && (n = !1);
            var o = e.clockMap[t];
            return n && null == o && (o = new i(t), e.clockMap[t] = o), o;
        }, e.start = function() {
            e.running || (e.shape = e.shape || new egret.Shape(), e.shape.addEventListener(egret.Event.ENTER_FRAME, e.tick, e), 
            e.lastTime = egret.getTimer(), e.running = !0);
        }, e.stop = function(t) {
            if (void 0 === t && (t = null), null == t) {
                if (!e.running) return;
                e.shape.removeEventListener(egret.Event.ENTER_FRAME, e.tick, e), e.running = !1;
            } else e.clockMap[t] && e.getClock(t).stop();
        }, e.pause = function(t) {
            if (void 0 === t && (t = null), null == t) {
                if (!e.running) return;
                e.shape.removeEventListener(egret.Event.ENTER_FRAME, e.tick, e), e.running = !1;
            } else e.clockMap[t] && e.getClock(t).pause();
        }, e.resume = function(t) {
            if (void 0 === t && (t = null), null == t) {
                if (e.running) return;
                e.shape.addEventListener(egret.Event.ENTER_FRAME, e.tick, e), e.running = !0, e.lastTime = egret.getTimer();
            } else e.clockMap[t] && e.getClock(t).resume();
        }, e.tick = function(t) {
            if (e.running) {
                var i = egret.getTimer(), n = i - e.lastTime;
                e.lastTime = i;
                for (var o in this.clockMap) {
                    var a = e.clockMap[o];
                    a.running && a.update(n, e, e.checkActive);
                }
            }
        }, e.checkActive = function() {
            var t = 0;
            for (var i in this.clockMap) {
                var n = e.clockMap[i];
                t += n.running ? 1 : 0;
            }
            0 == t ? e.pause() : e.resume();
        }, e.clockMap = {}, e.lastTime = 0, e;
    }();
    e.TimerManager = t, __reflect(t.prototype, "hortor.TimerManager");
    var i = function() {
        function t(t, i) {
            void 0 === i && (i = 1e3), this.repeatCount = 0, this.currentCount = 0, this.updateDelay = 0, 
            this.currentUpdateDelay = 0, this.passedUpdateTime = 0, this.callBackMap = new e.HashMap(), 
            this.id = t, this.running = !1, this.updateDelay = i;
        }
        return t.prototype.registCallBack = function(e, t, i, n) {
            this.callBackMap.put(e, {
                thisObject: e,
                onComplete: t,
                loopComplete: n,
                onUpdate: i
            }), null != i && i.call(e, this.progress), null != t && 1 == this.progress && t.call(e);
        }, t.prototype.removeCallBack = function(e) {
            this.callBackMap.remove(e);
        }, t.prototype.start = function(e, t, i, n) {
            void 0 === t && (t = 1), void 0 === i && (i = -1), void 0 === n && (n = 1), this.running && this.stop(), 
            i = i > 0 ? i : e, this.totalTime = 1e3 * i, this.passedTime = 1e3 * (i - e), this.speedFactor = n, 
            this.currentCount = 1, this.repeatCount = t, this.currentUpdateDelay = Math.min(this.updateDelay, this.totalTime), 
            this.totalTime > 0 ? this.running = !0 : this.callBackMap.eachValue(this.postComplete, this);
        }, t.prototype.pause = function() {
            this.running = !1;
        }, t.prototype.resume = function() {
            this.leftTime > 0 && (this.running = !0);
        }, t.prototype.stop = function() {
            this.running = !1, this.passedUpdateTime = 0, this.passedTime = 0, this.currentCount = 1;
        }, t.prototype.dispose = function() {
            this.stop(), this.callBackMap.clear();
        }, t.prototype.update = function(e, t, i) {
            if (this.running) for (e *= this.speedFactor, this.passedTime += e, this.passedUpdateTime += e; this.passedUpdateTime > this.currentUpdateDelay; ) this.passedUpdateTime -= this.currentUpdateDelay, 
            this.leftTime > 0 && (this.currentUpdateDelay = Math.min(this.currentUpdateDelay, this.leftTime)), 
            this.callBackMap.eachValue(this.postProgress, this), this.passedTime >= this.totalTime && (this.currentCount++, 
            this.passedTime -= this.totalTime, this.callBackMap.eachValue(this.postLoopComplete, this), 
            this.repeatCount > 0 && this.currentCount > this.repeatCount && (this.running = !1, 
            this.callBackMap.eachValue(this.postComplete, this), i.call(t)));
        }, Object.defineProperty(t.prototype, "leftTime", {
            get: function() {
                return this.totalTime - this.passedTime;
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(t.prototype, "leftSecond", {
            get: function() {
                return Math.floor(this.leftTime / 1e3);
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(t.prototype, "leftTimeFormat", {
            get: function() {
                return e.NumberFormatter.formatTime(this.leftTime);
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(t.prototype, "leftTimeFormatZh", {
            get: function() {
                return e.NumberFormatter.formatTime(this.leftTime, !0, !0);
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(t.prototype, "passedTime", {
            get: function() {
                return this.m_passedTime;
            },
            set: function(e) {
                this.m_passedTime = Math.min(e, this.totalTime);
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(t.prototype, "progress", {
            get: function() {
                return this.m_passedTime ? this.m_passedTime / this.totalTime : 0;
            },
            enumerable: !0,
            configurable: !0
        }), t.prototype.postProgress = function(e) {
            var t = e.onUpdate, i = e.thisObject;
            t && t.call(i, this.progress);
        }, t.prototype.postLoopComplete = function(e) {
            var t = e.loopComplete, i = e.thisObject;
            t && t.call(i);
        }, t.prototype.postComplete = function(e) {
            var t = e.onComplete, i = e.thisObject;
            t && t.call(i);
        }, t;
    }();
    e.TimerClock = i, __reflect(i.prototype, "hortor.TimerClock");
}(hortor || (hortor = {}));

var hortor;

!function(e) {
    var t = function() {
        function t() {}
        return t.initialize = function(i, n, o, a, r) {
            t.stage = i, t.mDefaultAlertType = n, t.mDefaultTipType = o, t.mDefaultBubbleType = a, 
            t.mDefaultTargetTipRender = r, t.stage.addEventListener(egret.TouchEvent.TOUCH_BEGIN, t.onStageTouch, t), 
            t.modalBlocker = e.StageManager.createStageModalBlocker();
        }, t.registTargetTip = function(e, i, n, o) {
            void 0 === i && (i = null), void 0 === n && (n = 0), void 0 === o && (o = null), 
            e.touchChildren = !1, e.touchEnabled = !0, t.tipDictionary.put(e, {
                tip: i,
                delay: n,
                renderer: o
            });
        }, t.unRegistTip = function(e) {
            t.tipDictionary.remove(e);
        }, t.tip = function(i, n, o) {
            void 0 === n && (n = 2e3), void 0 === o && (o = null);
            var a = o || e.ObjectPool.getObject(t.mDefaultTipType);
            a.show(e.StageManager.getLayer(e.Layer.TIP), i, null, function() {
                e.ObjectPool.disposeObject(a);
            }), n > 0 && (a.timeout = egret.setTimeout(a.hide, a, n));
        }, t.alert = function(e, t, n, o, a, r, s) {
            void 0 === a && (a = !0), void 0 === r && (r = null), void 0 === s && (s = null);
            var l = t ? new i(t, o, s) : null, d = n ? new i(n, o) : null;
            this.alertWithArgment(e, l, d, a, r);
        }, t.alertWithArgment = function(i, n, o, a, r) {
            void 0 === a && (a = !0), void 0 === r && (r = null);
            var s = {
                data: i,
                acceptArgs: n,
                refuseArgs: o,
                hasRefuse: a
            };
            null == t.modalBlocker.stage && e.StageManager.addToLayer(t.modalBlocker, e.Layer.TIP);
            var l = r || e.ObjectPool.getObject(t.mDefaultAlertType);
            l.show(e.StageManager.getLayer(e.Layer.TIP), s, null, function() {
                var i = t.modalBlocker;
                i.parent && i.parent.removeChild(i), e.ObjectPool.disposeObject(l);
            });
        }, t.bubble = function(i, n, o, a, r) {
            void 0 === n && (n = null), void 0 === o && (o = null), void 0 === a && (a = null), 
            void 0 === r && (r = null), n = n || t.stage, r = r || e.ObjectPool.getObject(t.mDefaultBubbleType), 
            r.show(e.StageManager.getLayer(e.Layer.TIP), i, null, o, a);
        }, t.showTip = function(i, n, o) {
            if (void 0 === o && (o = null), t.tipDictionary.containsKey(i)) {
                var a = t.tipDictionary.getValue(i), r = a.renderer || e.ObjectPool.getObject(t.mDefaultTargetTipRender);
                o = o || a.tip, o instanceof Function && (o = o());
                var s = r.getBounds();
                n.x = Math.min(e.StageManager.stageWidth - s.width - s.x, n.x), n.y = Math.min(e.StageManager.stageHeight - s.height - s.y, n.y), 
                n.x = Math.max(-s.x, n.x), n.y = Math.max(-s.y, n.y), r.x = n.x, r.y = n.y, t.currentTipRenderer = r, 
                r.show(e.StageManager.getLayer(e.Layer.TIP), o, null, function() {
                    e.ObjectPool.disposeObject(r);
                }), a.delay > 0 && (r.timeout = egret.setTimeout(r.hide, r, a.delay));
            }
        }, t.onStageTouch = function(i) {
            var n = i.target;
            if (null == t.currentTipRenderer || t.currentTipRenderer.hitTestPoint(i.stageX, i.stageY, !1) || t.currentTipRenderer.hide(), 
            t.tipDictionary.containsKey(n)) {
                var o = e.DisplayUtil.getGlobalBounds(n);
                this.currentTouchPoint.setTo(o.x + .5 * o.width, o.y + .5 * o.height), t.showTip(n, this.currentTouchPoint);
            }
        }, t.tipDictionary = new e.HashMap(), t.currentTouchPoint = new egret.Point(), t;
    }();
    e.TipManager = t, __reflect(t.prototype, "hortor.TipManager");
    var i = function() {
        function e(e, t, i) {
            this.callBack = e, this.thisObj = t, this.icon = i;
        }
        return e;
    }();
    e.AlertArg = i, __reflect(i.prototype, "hortor.AlertArg");
}(hortor || (hortor = {}));

var hortor;

!function(e) {
    var t = function() {
        function t() {}
        return t.initialize = function(e) {
            this.navigator = e;
        }, t.registWindow = function(i, n, o, a, r, s, l, d) {
            return void 0 === o && (o = null), void 0 === r && (r = !0), void 0 === s && (s = !0), 
            void 0 === l && (l = !1), void 0 === d && (d = 1), null == this.navigator && (this.navigator = new e.WindowNavigator(e.StageManager.getLayer(e.Layer.WINDOW))), 
            t.navigator.registWindow(i, n, o, a, r, s, l, d);
        }, t.unRegisterWindow = function(e) {
            void 0 === e && (e = 0), t.navigator.unRegisterWindow(e);
        }, t.hasWindow = function(e) {
            return void 0 === e && (e = 0), t.navigator.hasWindow(e);
        }, t.getWindow = function(e) {
            return void 0 === e && (e = 0), t.navigator.getWindow(e);
        }, t.getWindowData = function(e) {
            return t.navigator.getWindowData(e);
        }, Object.defineProperty(t, "currentWindow", {
            get: function() {
                return t.navigator.currentWindow;
            },
            set: function(e) {
                t.navigator.currentWindow = e;
            },
            enumerable: !0,
            configurable: !0
        }), t.showWindow = function(e, i, n, o, a, r, s) {
            void 0 === i && (i = null), void 0 === n && (n = null), void 0 === s && (s = -1), 
            t.navigator.showWindow(e, i, n, o, a, r, s);
        }, t.hideWindow = function(e, i, n, o, a) {
            void 0 === e && (e = 0), void 0 === o && (o = !1), void 0 === a && (a = !0), t.navigator.hideWindow(e, i, n, o, a);
        }, t.hideAllWindow = function(e) {
            void 0 === e && (e = !0), t.navigator.hideAllWindow(e);
        }, t.toggleWindow = function(e) {
            void 0 === e && (e = 0), t.navigator.toggleWindow(e);
        }, t.isOpen = function(e) {
            return void 0 === e && (e = 0), t.navigator.isOpen(e);
        }, t.isActive = function(e) {
            return void 0 === e && (e = 0), t.navigator.isActive(e);
        }, Object.defineProperty(t, "isModaling", {
            get: function() {
                return t.navigator.isModaling;
            },
            enumerable: !0,
            configurable: !0
        }), t.setOpenList = function(e, i) {
            void 0 === i && (i = !1), t.navigator.setOpenList(e, i);
        }, t.setOpen = function(e, i) {
            t.navigator.setOpen(e, i);
        }, t;
    }();
    e.WindowManager = t, __reflect(t.prototype, "hortor.WindowManager");
}(hortor || (hortor = {}));

var hortor;

!function(e) {
    var t = "2c675b8b17416da3", i = "2c675b8b17416da3a", n = function() {
        function e(e, t, i, n) {
            this.getRequester = new r(e, t, i), this.postRequester = new r(e, t, i), this.loadingView = n;
        }
        return e.prototype.get = function(e, t, i, n, o, a, r) {
            return void 0 === r && (r = !0), this.getRequester.get(e, t, i, o, n, a, r), 
            this.getRequester;
        }, e.prototype.post = function(e, t, i, n, o, a, r) {
            return void 0 === r && (r = !0), this.postRequester.post(e, t, i, o, n, a, r), this.postRequester;
        }, Object.defineProperty(e.prototype, "baseParams", {
            set: function(e) {
                this.getRequester.baseParams = e, this.postRequester.baseParams = e;
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(e.prototype, "secret", {
            set: function(e) {
                this.getRequester.secret = e, this.postRequester.secret = e;
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(e.prototype, "urlRoot", {
            set: function(e) {
                this.getRequester.urlRoot = e, this.postRequester.urlRoot = e;
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(e.prototype, "loadingView", {
            set: function(e) {
                this.getRequester.loadingView = e, this.postRequester.loadingView = e;
            },
            enumerable: !0,
            configurable: !0
        }), e.s = function(e) {
            i = e;
        }, e.u = function(i) {
            t = i.slice(0, i.length - 1);
            var n = i.slice(i.length - 1);
            e.us(n);
        }, e.us = function(e) {
            switch (e.charCodeAt(0)) {
              case 97:
                var n = t.split("");
                n.reverse(), i = n.join("");
                break;

              case 98:
                i = t + 17785;
            }
        }, e.prototype.clear = function() {
            this.getRequester.clear(), this.postRequester.clear(), this.getRequester = null, 
            this.postRequester = null;
        }, e;
    }();
    e.HttpService = n, __reflect(n.prototype, "hortor.HttpService");
    var o = function() {
        function e(e, t, i, n) {
            this.url = e, this.type = t, this.code = i, this.msg = n;
        }
        return e;
    }();
    e.HttpError = o, __reflect(o.prototype, "hortor.HttpError");
    var a;
    !function(e) {
        e[e.IO_ERROR = 0] = "IO_ERROR", e[e.NO_DATA = 1] = "NO_DATA", e[e.DATA_ERROR = 2] = "DATA_ERROR", 
        e[e.UNKNOW = 3] = "UNKNOW", e[e.DECODE_ERROR = 4] = "DECODE_ERROR";
    }(a = e.HttpErrorType || (e.HttpErrorType = {}));
    var r = function() {
        function t(e, t, i) {
            this.signMd5 = new MD5(), this.secret = e ? e : "", this.request = new egret.HttpRequest(), 
            console.log("this.secret =" + this.secret);
            this.request.responseType = egret.HttpResponseType.TEXT, this.isRunning = !1, this.requestError = t, 
            this.requestObj = i, this.requestQuene = new Array();
        }
        return t.prototype.get = function(e, t, i, n, o, a, r) {
            return void 0 === r && (r = !0), this.isRunning ? void this.requestQuene.push(new s(e, egret.HttpMethod.GET, r, t, i, o, a, n)) : (this.currentUrl = e.replace(/\s/gi, ""), 
            this.currentUrl = this.urlRoot && -1 == this.currentUrl.indexOf("http") ? this.urlRoot + this.currentUrl : this.currentUrl, 
            this.isRunning = !0, this.initListener(i, n, o, a), r && (t = this.packetParams(t)), 
            this.request.open(this.currentUrl + "?" + t, egret.HttpMethod.GET), this.request.send(), 
            void (this.loadingState = !0));
        }, t.prototype.post = function(e, t, i, n, o, a, r) {
            if (void 0 === r && (r = !0), this.isRunning) return void this.requestQuene.push(new s(e, egret.HttpMethod.POST, r, t, i, o, a, n));
            this.currentUrl = e.replace(/\s/gi, ""), this.currentUrl = this.urlRoot && -1 == this.currentUrl.indexOf("http") ? this.urlRoot + this.currentUrl : this.currentUrl, 
            this.isRunning = !0, this.initListener(i, n, o, a);
            var l = this.currentUrl;
            r && (t = this.packetParams(t), l += "?" + t), this.request.open(l, egret.HttpMethod.POST), 
            this.request.setRequestHeader("Content-Type", "application/x-www-form-urlencoded"), 
            this.request.send(r ? null : t), this.loadingState = !0;
        }, Object.defineProperty(t.prototype, "baseParams", {
            set: function(e) {
                this.baseParamsMap = this.parseParams(e);
            },
            enumerable: !0,
            configurable: !0
        }), t.prototype.packetParams = function(e) {
            var t = "object" == typeof e, n = this.parseParams(e), o = Date.parse(new Date().toString()) / 1e3;
            if (n.t = o, n.secret = i, this.baseParamsMap) for (var a in this.baseParamsMap) n[a] = this.baseParamsMap[a];
            var r = this.getSignReulst(n, t);
            return r;
        }, t.prototype.getSignReulst = function(e, t) {
            void 0 === t && (t = !1);
            var i = [];
            for (var n in e) i.push(n);
            i.sort();
            for (var o = "", a = "", r = 0; r < i.length; r++) {
                var s = i[r], l = e[s], d = s + "=" + l, u = s + "=" + (t ? this.encodeContent(l) : l);
                "secret" != s && (a += (0 == r ? "" : "&") + u), o += d;
            }
            console.log("1111111="+o);
            console.log("1111111="+this.signMd5.hex_md5(o));

            return o = this.signMd5.hex_md5(o), a += "&sign=" + o, a = a.replace(/#/gi, "%23");
        }, t.prototype.parseParams = function(e) {
            var t = "string" == typeof e, i = {};
            if (t) for (var n = e.split("&"), o = 0, a = n; o < a.length; o++) {
                var r = a[o], s = r.split("=");
                i[s[0]] = s[1];
            } else i = e;
            return i;
        }, t.prototype.encodeContent = function(e) {
            var t = "string" == typeof e;
            return t && (e = e.replace(/%/g, "%25"), e = e.replace(/\+/g, "%2B"), e = e.replace(/\//g, "%2F"), 
            e = e.replace(/\?/g, "%3F"), e = e.replace(/\#/g, "%23"), e = e.replace(/\&/g, "%26"), 
            e = e.replace(/\=/g, "%3d")), e;
        }, t.prototype.clear = function() {
            this.request.removeEventListener(egret.Event.COMPLETE, this.onHttpComplete, this), 
            this.request.removeEventListener(egret.IOErrorEvent.IO_ERROR, this.onHttpIOError, this), 
            this.onProgress && this.request.removeEventListener(egret.ProgressEvent.PROGRESS, this.onHttpProgress, this), 
            this.onComplete = null, this.onError = null, this.onProgress = null, this.request = null, 
            this.requestQuene.length = 0, this.requestQuene = null;
        }, Object.defineProperty(t.prototype, "loadingView", {
            set: function(e) {
                this.mLoadingView = e;
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(t.prototype, "loadingState", {
            get: function() {
                return this.mLoadingState;
            },
            set: function(t) {
                var i = this;
                this.mLoadingState = t, null != this.mLoadingView && (this.mLoadingState ? (this.loadingTimeout && egret.clearTimeout(this.loadingTimeout), 
                this.loadingTimeout = egret.setTimeout(function() {
                    i.mLoadingView.show(e.StageManager.getLayer(e.Layer.TOP));
                }, this, 500)) : (this.loadingTimeout && egret.clearTimeout(this.loadingTimeout), 
                this.mLoadingView.hide()));
            },
            enumerable: !0,
            configurable: !0
        }), t.prototype.runNext = function() {
            if (this.requestQuene.length > 0) {
                var e = this.requestQuene.shift();
                e.method == egret.HttpMethod.GET ? this.get(e.url, e.params, e.onComplete, e.thisObj, e.onError, e.onProgress) : e.method == egret.HttpMethod.POST && this.post(e.url, e.params, e.onComplete, e.thisObj, e.onError, e.onProgress);
            }
        }, t.prototype.initListener = function(e, t, i, n) {
            this.onComplete = e, this.onError = i, this.onProgress = n, this.thisObj = t, this.request.addEventListener(egret.Event.COMPLETE, this.onHttpComplete, this), 
            this.request.addEventListener(egret.IOErrorEvent.IO_ERROR, this.onHttpIOError, this), 
            this.onProgress && this.request.addEventListener(egret.ProgressEvent.PROGRESS, this.onHttpProgress, this);
        }, t.prototype.onHttpComplete = function(e) {
            this.loadingState = !1, this.isRunning = !1;
            var t = this.request.response;
            if ("" != t) {
                var i = JSON.parse(t), n = void 0, r = void 0;
                if (i.edata) try {
                    r = egret.Base64Util.decode(i.edata), r = pako.inflate(r, {
                        to: "string"
                    }), r = JSON.parse(r);
                } catch (s) {
                    n = s, r = i.data;
                } else i.data && (r = i.data);
                r ? (this.onComplete.call(this.thisObj, r), this.runNext()) : i.errcode && 0 != i.errcode ? this.onHttpError(new o(this.currentUrl, a.DATA_ERROR, i.errcode, i.errmsg)) : n ? this.onHttpError(new o(this.currentUrl, a.DECODE_ERROR, 0, n)) : this.onHttpError(new o(this.currentUrl, a.UNKNOW, i));
            } else this.onHttpError(new o(this.currentUrl, a.NO_DATA));
        }, t.prototype.onHttpIOError = function(e) {
            this.onHttpError(new o(this.currentUrl, a.IO_ERROR));
        }, t.prototype.onHttpProgress = function(e) {
            this.onProgress && this.onProgress.call(this.thisObj, e.bytesLoaded / e.bytesTotal);
        }, t.prototype.onHttpError = function(e) {
            this.loadingState = !1, this.isRunning = !1, this.onError && this.onError.call(this.thisObj, e);
            var t = null == this.requestError || this.requestError.call(this.requestObj, e);
            t && this.runNext();
        }, t;
    }();
    __reflect(r.prototype, "HttpRequester");
    var s = function() {
        function e(e, t, i, n, o, a, r, s) {
            this.url = e, this.method = t, this.params = n, this.packData = i, this.onComplete = o, 
            this.onError = a, this.onProgress = r, this.thisObj = s;
        }
        return e;
    }();
    __reflect(s.prototype, "HttpObject");
}(hortor || (hortor = {}));

var HttpService, hortor;

!function(e) {
    function t(e, t) {
        return __awaiter(this, void 0, void 0, function() {
            var i = this;
            return __generator(this, function(n) {
                return [ 2, new Promise(function(n, o) {
                    var a = function() {
                        var t = e.data ? e.data : e.response;
                        n(t);
                    }, r = function() {
                        var e = new RES.ResourceManagerError(1001, t.url);
                        o(e);
                    };
                    e.addEventListener(egret.Event.COMPLETE, a, i), e.addEventListener(egret.IOErrorEvent.IO_ERROR, r, i);
                }) ];
            });
        });
    }
    var i = {}, n = {
        onLoadStart: function(n, o) {
            return __awaiter(this, void 0, void 0, function() {
                var a, r, s, l, d, u, h, c;
                return __generator(this, function(p) {
                    switch (p.label) {
                      case 0:
                        return a = new egret.ImageLoader(), r = RES.getVirtualUrl(o.root + o.url), s = o.name, 
                        a.load(r), [ 4, t(a, o) ];

                      case 1:
                        return l = p.sent(), e.ResourceManager.addMemoryResByHash(l.hashCode, s), void 0 == i[s] ? (d = new egret.Texture(), 
                        d._setBitmapData(l)) : (d = i[s], u = d.bitmapData, u.source = l.source, u.width = l.width, 
                        u.height = l.height, d._setBitmapData(u)), h = n.resourceConfig.getResource(o.name), 
                        h && h.scale9grid && (c = h.scale9grid.split(","), d.scale9Grid = new egret.Rectangle(parseInt(c[0]), parseInt(c[1]), parseInt(c[2]), parseInt(c[3]))), 
                        [ 2, d ];
                    }
                });
            });
        },
        onRemoveStart: function(e, t) {
            var n = e.get(t), o = n.bitmapData, a = t.name;
            return void 0 == i[a] && (i[a] = n), "webgl" == egret.Capabilities.renderMode && o.webGLTexture && (egret.WebGLUtils.deleteWebGLTexture(o.webGLTexture), 
            o.webGLTexture = null), o.source = null, Promise.resolve();
        }
    };
    RES.processor.map("image", n);
}(hortor || (hortor = {}));

var hortor;

!function(e) {
    var t = function() {
        function t() {}
        return t.initialize = function(n, o, a, r) {
            function s(e) {
                console.log("ResourceManager:default.res.json load suc"), game.PlatformManager.LogEvent(Const.resComplete), 
                RES.removeEventListener(RES.ResourceEvent.CONFIG_COMPLETE, s, this), a.call(r);
            }
            var l = this;
            return void 0 === a && (a = null), void 0 === r && (r = null), t.resourceRoot = o ? o : "", 
            console.log("ResourceManager initialize resourceRoot:" + o), RES.setMaxRetryTimes(1), 
            e.SystemManager.isWxGame && e.SystemManager.isIOS && RES.setMaxLoadingThread(1), 
            egret.registerImplementation("eui.IAssetAdapter", new i()), egret.registerImplementation("eui.IThemeAdapter", new e.ThemeAdapter()), 
            RES.processor.map(RES.ResourceItem.TYPE_SHEET, e.SheetProcessor), e.VersionManager.initialize(n, function() {
                e.Log.log(l, "VersionManager init suc"), RES.addEventListener(RES.ResourceEvent.CONFIG_COMPLETE, s, l), 
                RES.loadConfig("default.res.json", o);
            }, this);
        }, Object.defineProperty(t, "jsonSkinMode", {
            get: function() {
                return "undefined" != typeof generateJSON;
            },
            enumerable: !0,
            configurable: !0
        }), t.loadViewResource = function(i, n, o, a) {
            void 0 === n && (n = null), void 0 === o && (o = null), void 0 === a && (a = null);
            var r = t.getViewResource(i);
            return null == r && (r = new e.ViewResource(i), t.viewResMap[i] = r), r.load(n, o, a), 
            r;
        }, t.getViewResource = function(e) {
            return this.viewResMap[e];
        }, t.loadSheet = function(e, t, i, n) {
            void 0 === t && (t = null), void 0 === i && (i = null), void 0 === n && (n = null), 
            this.loadResource(e, t, n, RES.ResourceItem.TYPE_SHEET);
        }, t.loadSkin = function(e, t, i) {
            void 0 === i && (i = null), EXML.load(e, t, i);
        }, t.loadSkinJson = function(i, n, o) {
            var a = this;
            void 0 === o && (o = null), t.loadResource(i, function(t) {
                e.Log.log(a, "load SkinJson:" + i), window.JSONParseClass.setData(t), n.call(o, generateJSON);
            }, this, RES.ResourceItem.TYPE_JSON);
        }, t.createGroup = function(e, t, i) {
            void 0 === i && (i = !1);
            var n = RES.getGroupByName(e);
            if (0 == n.length || i) {
                var o = [];
                n.forEach(function(e) {
                    o.push(e.name);
                }), t.forEach(function(e) {
                    if ("string" == typeof e) o.push(e); else {
                        var t = e.type, i = e.url;
                        RES.hasRes(i) || RES.$addResourceData({
                            name: i,
                            url: i,
                            type: t
                        }), o.push(i);
                    }
                }), RES.createGroup(e, o, i);
            }
        }, t.getSheet = function(e) {
            var t = this.getResource(e);
            return t ? t : null;
        }, t.loadGroup = function(t, i, n, o, a, r) {
            var s = this;
            void 0 === i && (i = 0), RES.loadGroup(t, i).then(function() {
                n && n.call(r);
            }, function(i) {
                e.Log.error(s, "Group loaderror:" + t + "(" + i + ")"), o && o.call(r, i);
            });
        }, t.loadImage = function(e, t, i) {
            void 0 === t && (t = null), void 0 === i && (i = null), this.loadResource(e, t, i, RES.ResourceItem.TYPE_IMAGE);
        }, t.loadText = function(t, i, n, o) {
            var a = this;
            void 0 === o && (o = !0);
            var r = new egret.HttpRequest();
            r.responseType = egret.HttpResponseType.TEXT, o && (t = e.VersionManager.getResUrlByVersion(t)), 
            r.open(t, "get"), r.send();
            var s = function() {
                var e = r.data ? r.data : r.response;
                i.call(n, e);
            }, l = function() {
                e.Log.error(a, "loadText failed:" + t);
            };
            r.addEventListener(egret.Event.COMPLETE, s, this), r.addEventListener(egret.IOErrorEvent.IO_ERROR, l, this);
        }, t.loadSound = function(e, t, i) {
            this.loadResource(e, t, i, RES.ResourceItem.TYPE_SOUND);
        }, t.loadResource = function(i, n, o, a, r) {
            function s(e) {
                1 == n.length ? n.call(o, e) : 2 == n.length ? n.call(o, e, i) : n.call(o);
            }
            var l = this, d = i;
            if (i.prototype && (d = new i()), d instanceof egret.DisplayObject || d instanceof egret.Texture) n.call(o, d, i); else if ("string" == typeof i) if (a || (a = t.getTypeByUrl(i)), 
            RES.hasRes(i)) {
                var u = RES.getRes(i);
                if (u) s(u); else {
                    var h = RES.getResAsync(i);
                    h.then(function(e) {
                        s(e);
                    }, function(t) {
                        r && r.call(o, i), e.Log.error(l, "Load error:" + i + "(" + t + ")");
                    });
                }
            } else RES.getResByUrl(i, s, this, a); else n.call(o, d, i);
        }, t.getResource = function(e) {
            var t = RES.getRes(e);
            return t;
        }, t.diposeResource = function(e) {
            var t = null;
            if (t = "string" == typeof e ? this.getMemoryResByName(e) : e) {
                if (e = t.res, !t.dispose || this.isHeadRes(e)) return;
                t.state = -1;
            }
            RES.destroyRes(e);
        }, t.setDisposeBlackFilter = function(e) {
            function t(e) {
                if (-1 == this.resDisposeBlackMap.indexOf(e)) {
                    this.resDisposeBlackMap.push(e);
                    for (var t in this.resMap) {
                        var i = this.resMap[t];
                        if (-1 != i.res.indexOf(e)) {
                            i.dispose = !1;
                            break;
                        }
                    }
                }
            }
            if ("string" == typeof e) t.call(this, e); else for (var i = 0, n = e; i < n.length; i++) {
                var o = n[i];
                t.call(this, o);
            }
        }, t.needDispose = function(e) {
            for (var t = 0; t < this.resDisposeBlackMap.length; t++) {
                var i = this.resDisposeBlackMap[t];
                if (-1 != e.indexOf(i)) return !1;
            }
            return !0;
        }, t.getMemoryResByHash = function(e) {
            var t = this.resMap[e];
            return t;
        }, t.getMemoryResByName = function(e) {
            for (var t in this.resMap) {
                var i = this.resMap[t];
                if (i.res == e) return i;
            }
            return null;
        }, t.addMemoryResByHash = function(e, t) {
            this.resMap[e] = {
                instances: [],
                state: -2,
                res: t,
                dispose: this.needDispose(t)
            };
        }, t.useRes = function(e, t) {
            var i = this.getMemoryResByHash(e);
            if (i) {
                var n = i.res;
                0 != i.state && (i.state = this.getResource(n) ? 1 : -1);
                var o = i.instances;
                -1 == o.indexOf(t) && (o.push(t), -1 == i.state && (i.state = 0, this.loadResource(n, function() {
                    i.state = 1;
                }, this, RES.ResourceItem.TYPE_IMAGE)));
            }
        }, t.unloadRes = function(e, t, i) {
            void 0 === i && (i = !0);
            var n = this.getMemoryResByHash(e);
            if (n) {
                var o = n.instances, a = o.indexOf(t);
                -1 != a && (o.splice(a, 1), i || 1 != n.state || 0 == o.length && this.diposeResource(n));
            }
        }, t.unloadUnusedRes = function() {
            for (var e in this.resMap) {
                var t = this.resMap[e];
                if (-2 != t.state) {
                    var i = t.instances;
                    0 == i.length && 1 == t.state && this.diposeResource(t);
                }
            }
        }, t.isHeadRes = function(e) {
            return -1 != e.indexOf("http") && -1 == e.indexOf(this.resourceRoot);
        }, t.getTypeByUrl = function(e) {
            var t = e.toLowerCase().split("?")[0];
            t = t.substr(t.lastIndexOf(".") + 1), t && (t = t.toLowerCase());
            var i;
            switch (t) {
              case RES.ResourceItem.TYPE_XML:
              case RES.ResourceItem.TYPE_JSON:
              case RES.ResourceItem.TYPE_SHEET:
                i = t;
                break;

              case "png":
              case "jpg":
              case "gif":
                i = RES.ResourceItem.TYPE_IMAGE;
                break;

              case "fnt":
                i = RES.ResourceItem.TYPE_FONT;
                break;

              case "txt":
              case "exml":
                i = RES.ResourceItem.TYPE_TEXT;
                break;

              case "mp3":
              case "ogg":
              case "mpeg":
              case "wav":
              case "m4a":
              case "mp4":
              case "aiff":
              case "wma":
              case "mid":
                i = RES.ResourceItem.TYPE_SOUND;
                break;

              default:
                i = RES.ResourceItem.TYPE_BIN;
            }
            return i;
        }, t.viewResMap = new Object(), t.resMap = {}, t.resDisposeBlackMap = [], t;
    }();
    e.ResourceManager = t, __reflect(t.prototype, "hortor.ResourceManager");
    var i = function() {
        function e() {}
        return e.prototype.getAsset = function(e, i, n) {
            t.loadResource(e, i, n);
        }, e;
    }();
    __reflect(i.prototype, "ResourceAdapter", [ "eui.IAssetAdapter" ]);
    var n = RES.ResourceLoader.prototype.updatelistPriority;
    RES.ResourceLoader.prototype.updatelistPriority = function(e, t) {
        if (t == Number.NEGATIVE_INFINITY) {
            if (delete this.itemListPriorityDic[Number.NEGATIVE_INFINITY], this.headListChanged) for (var i = this.headList, o = 0, a = i; o < a.length; o++) {
                var r = a[o], s = e.indexOf(r);
                -1 != s && e.splice(s, 1);
            }
            this.itemListPriorityDic[-1] = e, n.call(this, e, -1);
        } else n.call(this, e, t);
    };
    var o = RES.ResourceLoader.prototype.pushResItem;
    RES.ResourceLoader.prototype.pushResItem = function(e) {
        if (t.isHeadRes(e.url)) {
            var i = this.headList;
            i || (i = this.headList = []), i.push(e), this.itemListPriorityDic[-100] = i, this.headListChanged = !0;
        }
        var n = o.call(this, e);
        return this.headListChanged = !1, n;
    };
}(hortor || (hortor = {}));

var hortor;

!function(e) {
    var t = function() {
        function t(e, t, i, n) {
            this.name = e, this.spriteSheet = n, this.texture = t, this.isDisposed = !1, this.sheetConfig = i;
        }
        return t.prototype.dispose = function(e) {
            void 0 === e && (e = !1), e && (this.spriteSheet.dispose(), this.texture = null, 
            this.spriteSheet = null, this.sheetConfig = null, this.mcFactory = null);
        }, t.prototype.getTexture = function(e) {
            return this.spriteSheet.getTexture(e);
        }, t.prototype.getMovieConfig = function(e) {
            return this.sheetConfig.mcConfig ? this.sheetConfig.mcConfig[e] : null;
        }, t.prototype.createImage = function(e, t, i, n, o, a) {
            void 0 === t && (t = 0), void 0 === i && (i = 0), void 0 === n && (n = 0), void 0 === o && (o = 0), 
            void 0 === a && (a = null);
            var r = this.getTexture(e);
            if (!r) return null;
            var s = new eui.Image();
            return s.source = this.getTexture(e), s.x = t, s.y = i, s.width = n ? s.width = n : s.source.textureWidth, 
            s.height = o ? s.height = o : s.source.textureHeight, null != a && (s.scale9Grid = a, 
            s.cacheAsBitmap = !0), s.validateNow(), s;
        }, t.prototype.createMovieClip = function(t, i, n) {
            void 0 === i && (i = 0), void 0 === n && (n = 0), null == this.mcFactory && (this.mcFactory = new egret.MovieClipDataFactory(this.sheetConfig, this.texture));
            var o = this.mcFactory.generateMovieClipData(t);
            if (null == o) return null;
            var a = new e.MovieClip(o), r = this.getMovieConfig(t);
            return null != r && (a.anchorOffsetX = r.pivotX, a.anchorOffsetY = r.pivotY), a.x = i, 
            a.y = n, a;
        }, t.prototype.createMoviePlayer = function(t, i, n) {
            if (void 0 === t && (t = null), void 0 === i && (i = 0), void 0 === n && (n = 0), 
            !this.sheetConfig.mc) return null;
            var o = new e.MoviePlayer(null, t);
            return o.onResource(this), o.x = i, o.y = n, o;
        }, t;
    }();
    e.SheetData = t, __reflect(t.prototype, "hortor.SheetData");
}(hortor || (hortor = {}));

var hortor;

!function(e) {
    e.SheetProcessor = {
        onLoadStart: function(t, i) {
            return __awaiter(this, void 0, void 0, function() {
                var n, o, a, r, s, l, d, u, h, c, p, g;
                return __generator(this, function(m) {
                    switch (m.label) {
                      case 0:
                        return [ 4, t.load(i, "json") ];

                      case 1:
                        return n = m.sent(), n.file ? (o = t.resourceConfig.getResource(RES.nameSelector(n.file)), 
                        o || (a = RES.processor.getRelativePath(i.url, n.file), a = e.VersionManager.removeResUrlVersion(a), 
                        o = {
                            name: a,
                            url: a,
                            type: "image",
                            root: ""
                        }, RES.$addResourceData({
                            name: a,
                            url: a,
                            type: "image"
                        })), [ 4, t.load(o) ]) : (console.error("SheetProcessor no file in json" + i.name), 
                        [ 2, null ]);

                      case 2:
                        r = m.sent(), s = n.frames, l = new egret.SpriteSheet(r), l.$resourceInfo = o;
                        for (d in s) u = s[d], h = l.createTexture(d, u.x, u.y, u.w, u.h, u.offX, u.offY, u.sourceW, u.sourceH), 
                        u.scale9grid && (c = u.scale9grid, p = c.split(","), h.scale9Grid = new egret.Rectangle(parseInt(p[0]), parseInt(p[1]), parseInt(p[2]), parseInt(p[3])));
                        return g = new e.SheetData(o.name, r, n, l), t.save(o, r), [ 2, g ];
                    }
                });
            });
        },
        getData: function(e, t, i, n) {
            var o = e.get(t);
            return o ? o.getTexture(n) : null;
        },
        onRemoveStart: function(e, t) {
            var i = e.get(t), n = i.spriteSheet.$resourceInfo;
            return e.unload(n), i.dispose(), Promise.resolve();
        }
    };
}(hortor || (hortor = {}));

var hortor;

!function(e) {
    var t = function() {
        function t() {}
        return t.prototype.getTheme = function(t, i, n, o) {
            function a(e) {
                i.call(o, e);
            }
            function r(e) {
                e.resItem.url == t && (RES.removeEventListener(RES.ResourceEvent.ITEM_LOAD_ERROR, r, null), 
                n.call(o));
            }
            var s = this;
            if ("undefined" != typeof generateEUI) egret.callLater(function() {
                i.call(o, generateEUI);
            }, this); else if ("undefined" != typeof generateEUI2) RES.getResByUrl("resource/gameEui.json", function(e, t) {
                window.JSONParseClass.setData(e), egret.callLater(function() {
                    i.call(o, generateEUI2);
                }, s);
            }, this, RES.ResourceItem.TYPE_JSON); else if ("undefined" != typeof generateJSON) if (t.indexOf(".exml") > -1) {
                var l = "assets/skins/";
                if (t.indexOf("skins/") > -1) {
                    var d = t.split("/"), u = d.indexOf("skins");
                    u > -1 && (l += d[u + 1] + "_EUI.json");
                }
                generateJSON.paths[t] ? egret.callLater(function() {
                    i.call(o, generateJSON.paths[t]);
                }, this) : e.ResourceManager.loadSkinJson(l, function() {
                    egret.callLater(function() {
                        var e = generateJSON.paths[t];
                        i.call(o, e);
                    }, s);
                });
            } else egret.callLater(function() {
                i.call(o, generateJSON);
            }, this); else RES.addEventListener(RES.ResourceEvent.ITEM_LOAD_ERROR, r, null), 
            RES.getResByUrl(t, a, this, RES.ResourceItem.TYPE_TEXT);
        }, t;
    }();
    e.ThemeAdapter = t, __reflect(t.prototype, "hortor.ThemeAdapter", [ "eui.IThemeAdapter" ]);
}(hortor || (hortor = {}));

var hortor;

!function(e) {
    var t;
    !function(t) {
        t.initialize = function(i, n, o) {
            void 0 === n && (n = null), void 0 === o && (o = null);
            var a = "resource/version.json", r = egret.localStorage.getItem("resVersion");
            t.currentVersion = i;
            var s = function() {
                if (egret.Capabilities.runtimeType == egret.RuntimeType.WXGAME && r != t.currentVersion && (egret.localStorage.setItem("resVersion", t.currentVersion), 
                console.log("资源版本更新,localVersion:" + r + ",currentVersion:" + t.currentVersion), 
                r)) {
                    var e = wx.getFileSystemManager(), i = wx.env.USER_DATA_PATH + "/cache_crc32/assets";
                    e.readdir({
                        dirPath: i,
                        success: function(n) {
                            var o = t.getRemoveList(n.files), a = egret.getTimer(), r = o.length;
                            console.log("removeFiles totalLength:" + o.length), wx.showLoading({
                                title: "更新缓存中",
                                mask: !0
                            });
                            for (var s = 0; r > s; ++s) e.unlinkSync(i + "/" + o[s]);
                            wx.hideLoading(), console.log("removeFiles end totalTime:" + (egret.getTimer() - a));
                        },
                        fail: function(e) {
                            console.log(e);
                        }
                    });
                }
                n.call(o);
            };
            return a ? e.ResourceManager.loadText(a, function(e) {
                t.versionConfig = JSON.parse(e), s();
            }, this, !e.SystemManager.isWxGame) : s(), r != t.currentVersion;
        }, t.clearCache = function() {
            if (egret.Capabilities.runtimeType == egret.RuntimeType.WXGAME) {
                for (var e = [ "/cache_crc32/assets", "/tmp" ], t = wx.getFileSystemManager(), i = [], n = e.length, o = function(n) {
                    var o = wx.env.USER_DATA_PATH + e[n];
                    try {
                        var a = t.readdirSync(o);
                        i = i.concat(a.map(function(e) {
                            return o + "/" + e;
                        }));
                    } catch (r) {
                        console.log(r);
                    }
                }, a = 0; n > a; ++a) o(a);
                var r = egret.getTimer();
                if (console.log("clearCatche start length:" + i.length), n = i.length, n > 0) {
                    wx.showLoading({
                        title: "清理缓存中",
                        mask: !0
                    });
                    for (var a = 0; n > a; ++a) t.statSync(i[a]).isDirectory() ? t.rmdirSync(i[a], !0) : t.unlinkSync(i[a]);
                    wx.hideLoading();
                }
                platform.common.clearCache(), egret.localStorage.setItem("wanbanComplete", "0"), 
                console.log("clearCatche end:" + (egret.getTimer() - r));
            }
        }, t.removeResUrlVersion = function(e) {
            var t = e.indexOf("?v=");
            return -1 != t && (e = e.slice(0, t)), e;
        }, t.getResUrlByVersion = function(i, n) {
            if (void 0 === n && (n = !1), i = i.replace(e.ResourceManager.resourceRoot, ""), 
            0 == i.indexOf("http://") || 0 == i.indexOf("https://")) return i;
            if (i = t.removeResUrlVersion(i), t.versionConfig) {
                var o = i.replace("assets/", "");
                if (t.versionConfig && t.versionConfig[o]) {
                    var a = t.versionConfig[o], r = i.slice(i.lastIndexOf("."));
                    i = "assets/" + a + r;
                }
            } else i = i + "?v=" + t.currentVersion;
            return i = e.ResourceManager.resourceRoot + i;
        }, t.getRemoveList = function(e) {
            var i = [], n = "";
            for (var o in t.versionConfig) n += t.versionConfig[o] + ",";
            for (var a = e.length, r = 0; a > r; ++r) {
                var s = e[r], l = s.slice(0, s.indexOf("."));
                -1 == n.indexOf(l) && i.push(s);
            }
            return i;
        }, RES.registerVersionController({
            init: function() {
                return Promise.resolve("");
            },
            getVirtualUrl: function(e) {
                return t.getResUrlByVersion(e);
            }
        });
    }(t = e.VersionManager || (e.VersionManager = {}));
}(hortor || (hortor = {}));

var hortor;

!function(e) {
    var t = function() {
        function t(e) {
            this.resGroup = e, this.mSheetResources = [];
        }
        return t.prototype.load = function(t, i, n) {
            function o() {
                if (this.mIsDisposed = !1, this.resGroup && !this.mIsLoaded) {
                    this.mIsLoaded = !0;
                    for (var i = RES.getGroupByName(this.resGroup), o = 0; o < i.length; o++) {
                        var a = i[o];
                        a.type == RES.ResourceItem.TYPE_SHEET && this.mSheetResources.push(e.ResourceManager.getSheet(a.name));
                    }
                }
                null != t && (1 == t.length ? t.call(n, this) : t.call(n));
            }
            function a() {}
            return void 0 === t && (t = null), void 0 === i && (i = null), void 0 === n && (n = null), 
            this.isLoaded ? (o.call(this), !1) : (e.Log.log(this, "loadGroup:" + this.resGroup), 
            e.ResourceManager.loadGroup(this.resGroup, 0, o, a, i, this), !0);
        }, Object.defineProperty(t.prototype, "isLoaded", {
            get: function() {
                return this.mIsLoaded;
            },
            enumerable: !0,
            configurable: !0
        }), t.prototype.getTexture = function(e) {
            for (var t = 0, i = this.mSheetResources; t < i.length; t++) {
                var n = i[t], o = n.getTexture(e);
                if (o) return o;
            }
            return null;
        }, Object.defineProperty(t.prototype, "autoDispose", {
            get: function() {
                return this.mAutoDispose;
            },
            set: function(t) {
                if (this.mAutoDispose != t && (this.mAutoDispose = t, this.resGroup && !t)) for (var i = RES.getGroupByName(this.resGroup), n = 0; n < i.length; n++) {
                    var o = i[n], a = o.name;
                    o.type == RES.ResourceItem.TYPE_SHEET && (a = e.VersionManager.removeResUrlVersion(o.url).replace(".json", ".png")), 
                    e.ResourceManager.setDisposeBlackFilter(a);
                }
            },
            enumerable: !0,
            configurable: !0
        }), t.prototype.createImage = function(e, t, i, n, o, a) {
            void 0 === t && (t = 0), void 0 === i && (i = 0), void 0 === n && (n = 0), void 0 === o && (o = 0), 
            void 0 === a && (a = null);
            for (var r = 0, s = this.mSheetResources; r < s.length; r++) {
                var l = s[r], d = l.createImage(e, t, i, n, o, a);
                if (d) return d;
            }
            return null;
        }, t.prototype.createMovieClip = function(e, t, i) {
            void 0 === t && (t = 0), void 0 === i && (i = 0);
            for (var n = 0, o = this.mSheetResources; n < o.length; n++) {
                var a = o[n], r = a.createMovieClip(e, t, i);
                if (r) return r;
            }
            return null;
        }, t.prototype.createMoviePlayer = function(e, t, i) {
            void 0 === e && (e = null), void 0 === t && (t = 0), void 0 === i && (i = 0);
            for (var n = 0, o = this.mSheetResources; n < o.length; n++) {
                var a = o[n], r = a.createMoviePlayer(e, t, i);
                if (r) return r;
            }
            return null;
        }, t;
    }();
    e.ViewResource = t, __reflect(t.prototype, "hortor.ViewResource");
}(hortor || (hortor = {}));

var hortor;

!function(e) {
    var t = function() {
        function e() {}
        return e.CASEINSENSITIVE = 1, e.DESCENDING = 2, e.UNIQUESORT = 4, e.RETURNINDEXEDARRAY = 8, 
        e.NUMERIC = 16, e;
    }();
    e.ArrayConstant = t, __reflect(t.prototype, "hortor.ArrayConstant");
    var i = function() {
        function i() {}
        return i.dup_fn = function(e, n, o) {
            var a = o & t.NUMERIC ? e.map(function(e) {
                return e[n].toFloat();
            }) : o & t.CASEINSENSITIVE ? e.map(function(e) {
                return e[n].toLowerCase();
            }) : e.map(function(e) {
                return e[n];
            });
            return a.length !== i.combine([], a).length;
        }, i.sort_fn = function(e, i, n, o) {
            return function a(n, o) {
                var r, s, l, d = o[0], u = n[0].match(/[^.]+/g);
                return function h(e, t, i) {
                    var n = e[0];
                    e.length > 1 ? h(e.slice(1), t[n], i[n]) : (s = t[n].toString(), l = i[n].toString());
                }(u, e, i), d & t.NUMERIC ? r = parseFloat(s) - parseFloat(l) : (d & t.CASEINSENSITIVE && (s = s.toLowerCase(), 
                l = l.toLowerCase()), r = s > l ? 1 : l > s ? -1 : 0), 0 === r && n.length > 1 ? r = a(n.slice(1), o.slice(1)) : d & t.DESCENDING && (r *= -1), 
                r;
            }(n, o);
        }, i.combine = function(e, t) {
            for (var n = 0, o = t.length; o > n; n++) i.include(e, t[n]);
            return e;
        }, i.include = function(e, t) {
            return i.contains(e, t) || e.push(t), e;
        }, i.contains = function(e, t) {
            for (var i = e.length; i--; ) if (e[i] === t) return !0;
            return !1;
        }, i.sortOn = function(n, o, a) {
            if (o = Array.isArray(o) ? o : [ o ], a = Array.isArray(a) ? a : [ a ], a.length !== o.length && (e.Log.error("ArrayUtil sortOn fields,options�������Ȳ�һ��!"), 
            a = []), a[0] & t.UNIQUESORT && o.some(function(e, t) {
                return i.dup_fn(n, e, a[t]);
            })) return 0;
            var r = function(e, t) {
                return i.sort_fn(e, t, o, a);
            };
            return a[0] & t.RETURNINDEXEDARRAY ? n.slice().sort(r) : n.sort(r);
        }, i;
    }();
    e.ArrayUtil = i, __reflect(i.prototype, "hortor.ArrayUtil");
}(hortor || (hortor = {}));

var hortor;

!function(e) {
    function t(e, t) {
        if (void 0 === t && (t = null), e.prototype || (e = e.constructor), null == t) return new e();
        switch (t.length) {
          case 0:
            return new e();

          case 1:
            return new e(t[0]);

          case 2:
            return new e(t[0], t[1]);

          case 3:
            return new e(t[0], t[1], t[2]);

          case 4:
            return new e(t[0], t[1], t[2], t[3]);

          case 5:
            return new e(t[0], t[1], t[2], t[3], t[4]);

          case 6:
            return new e(t[0], t[1], t[2], t[3], t[4], t[5]);

          case 7:
            return new e(t[0], t[1], t[2], t[3], t[4], t[5], t[6]);

          case 8:
            return new e(t[0], t[1], t[2], t[3], t[4], t[5], t[6], t[7]);

          case 9:
            return new e(t[0], t[1], t[2], t[3], t[4], t[5], t[6], t[7], t[8]);

          case 10:
            return new e(t[0], t[1], t[2], t[3], t[4], t[5], t[6], t[7], t[8], t[9]);

          default:
            return null;
        }
    }
    e.construct = t;
}(hortor || (hortor = {}));

var hortor;

!function(e) {
    var t = function() {
        function e() {}
        return e;
    }();
    e.Dictionary = t, __reflect(t.prototype, "hortor.Dictionary");
}(hortor || (hortor = {}));

var hortor;

!function(e) {
    var t = function() {
        function e() {}
        return e.validateTarget = function(e) {
            if ("validateNow" in e) e.validateNow(); else if (e.numChildren) for (var t = e, i = t.numChildren, n = 0; i > n; n++) {
                var o = t.getChildAt(n);
                this.validateTarget(o);
            }
        }, e.getGlobalBounds = function(t) {
            var i = e.helpBounds;
            i.setEmpty(), i.setTo(0, 0, t.width, t.height);
            var n = t.localToGlobal(i.x, i.y), o = t.localToGlobal(i.right, i.bottom);
            return i.x = Math.max(n.x, 0), i.y = Math.max(n.y, 0), i.width = o.x - n.x, i.height = o.y - n.y, 
            i;
        }, e.fillCenter = function(e, t, i, n) {
            void 0 === n && (n = !0);
            var o = t / e.width, a = i / e.height, r = n ? Math.min(o, a) : Math.max(o, a);
            e.scaleX = r, e.scaleY = r, e.x = t - e.width * e.scaleX >> 1, e.y = i - e.height * e.scaleY >> 1;
        }, e.Gray = function(e) {
            if (e) {
                var t = [ .3, .6, 0, 0, 0, .3, .6, 0, 0, 0, .3, .6, 0, 0, 0, 0, 0, 0, 1, 0 ], i = new egret.ColorMatrixFilter(t);
                e.filters = [ i ];
            }
        }, e.DropShadow = function(e) {
            var t = 10, i = 90, n = 0, o = .7, a = 16, r = 16, s = .65, l = 1, d = !1, u = !1, h = new egret.DropShadowFilter(t, i, n, o, a, r, s, l, d, u);
            e.filters = [ h ];
        }, e.helpBounds = new egret.Rectangle(), e;
    }();
    e.DisplayUtil = t, __reflect(t.prototype, "hortor.DisplayUtil");
}(hortor || (hortor = {}));

var Loading = function(e) {
    function t() {
        var i = e.call(this) || this;
        return t.instance = i, i.once(egret.Event.REMOVED_FROM_STAGE, i.removeFunc, i), 
        i.createView(), i;
    }
    return __extends(t, e), t.prototype.removeFunc = function() {
        this.interval && egret.clearInterval(this.interval);
    }, t.prototype.createView = function() {
        this.width = hortor.StageManager.stageWidth, this.height = hortor.StageManager.stageHeight;
        var e = new eui.Rect(this.width, this.height, 6133220);
        this.addChild(e), this.mainBg = new eui.Image(), this.addChild(this.mainBg), this.mainBg.source = "resource/loading/loding_0.jpg", 
        this.mainBg.bottom = 0, this.titleImg = new eui.Image(), this.addChild(this.titleImg), 
        this.titleImg.width = 400, this.titleImg.height = 192, this.titleImg.source = "resource/loading/loding_1.png", 
        this.titleImg.horizontalCenter = 0, this.titleImg.y = 198;
        var t = new eui.Label("批准文号：新广出审[2017]5934号");
        this.addChild(t), t.x = 15, t.y = 60, t.size = 20;
        var i = new eui.Label("出版物号：ISBN 978-7-7979-9066-0");
        this.addChild(i), i.x = 15, i.y = 85, i.size = 20;
        var n = new eui.Label("文网游备字〔2017〕Ｍ-CSG 0470 号");
        this.addChild(n), n.x = 15, n.y = 160, n.size = 20;
        var o = new eui.Label("著作权人：北京豪腾嘉科科技有限公司");
        this.addChild(o), o.x = 15, o.y = 110, o.size = 20;
        var a = new eui.Label("登记号：2016SR405574");
        this.addChild(a), a.x = 15, a.y = 135, a.size = 20;
        var r = new eui.Label("出版单位：三辰影库音像出版社");
        this.addChild(r), r.x = 15, r.y = 185, r.size = 20;
        var s = game.GameConfig.client + game.GameConfig.version;
        this.version = new eui.Label(s), this.addChild(this.version), this.version.right = 6, 
        this.version.y = 156, this.version.size = 20;
        var l = new eui.Image();
        this.addChild(l), l.width = 486, l.height = 47, l.source = "resource/loading/fileBg.png", 
        l.bottom = 136, l.horizontalCenter = 0, this.progressBg = new eui.Image(), this.addChild(this.progressBg), 
        this.progressBg.width = 470, this.progressBg.height = 31, this.progressBg.source = "resource/loading/fileImg.png", 
        this.progressBg.bottom = 144, this.progressBg.x = 85, this.rectangle = new egret.Rectangle(0, 0, 0, this.progressBg.height), 
        this.progressBg.mask = this.rectangle, this.paoIcon = new eui.Image(), this.addChild(this.paoIcon), 
        this.paoIcon.width = 53, this.paoIcon.height = 66, this.paoIcon.source = "resource/loading/loadIcon.png", 
        this.paoIcon.bottom = 136, this.paoIcon.x = 53, this.progressNum = new eui.Label("加载皮肤文件"), 
        this.addChild(this.progressNum), this.progressNum.horizontalCenter = 0, this.progressNum.bottom = 100, 
        this.progressNum.size = 20, this.progressAction();
    }, t.prototype.setProgress = function(e) {
        this.progressNum && (this.progressNum.text = e);
    }, t.prototype.progressAction = function() {
        var e = this, t = 470, i = 0;
        this.interval = egret.setInterval(function() {
            i += 5, i = i > t ? t : i, e.rectangle.width = i, e.progressBg.mask = this.rectangle, 
            e.paoIcon.x = 53 + i, i >= t && (egret.clearInterval(e.interval), e.interval = null);
        }, this, 20);
    }, t;
}(eui.Component);

__reflect(Loading.prototype, "Loading");

var hortor;

!function(e) {
    var t = function() {
        function e() {}
        return e.showLog = function(e) {
            this.mShowLog = e;
        }, e.log = function(e) {
            for (var t = [], i = 1; i < arguments.length; i++) t[i - 1] = arguments[i];
            this.mShowLog && egret.log(this.getMessage(e, t));
        }, e.warn = function(e) {
            for (var t = [], i = 1; i < arguments.length; i++) t[i - 1] = arguments[i];
            this.mShowLog && egret.warn(this.getMessage(e, t));
        }, e.error = function(e) {
            for (var t = [], i = 1; i < arguments.length; i++) t[i - 1] = arguments[i];
            this.mShowLog && egret.error(this.getMessage(e, t));
        }, e.getMessage = function(e) {
            for (var t = [], i = 1; i < arguments.length; i++) t[i - 1] = arguments[i];
            if (this.mShowLog) {
                for (var n = e && "string" != typeof e ? "[" + egret.getQualifiedClassName(e) + "] " : e || "", o = new Date(), a = o.getHours() + ":" + o.getMinutes() + ":" + o.getMilliseconds() + " ", r = "", s = 0; s < t.length; s++) {
                    var l = t[s];
                    null != l && (r += l);
                }
                var d = a + n + r;
                return d;
            }
        }, e.mShowLog = !1, e;
    }();
    e.Log = t, __reflect(t.prototype, "hortor.Log");
}(hortor || (hortor = {}));

var MD5 = function() {
    function e() {
        this.hexcase = 0, this.b64pad = "";
    }
    return e.prototype.hex_md5 = function(e) {
        return this.rstr2hex(this.rstr_md5(this.str2rstr_utf8(e)));
    }, e.prototype.b64_md5 = function(e) {
        return this.rstr2b64(this.rstr_md5(this.str2rstr_utf8(e)));
    }, e.prototype.any_md5 = function(e, t) {
        return this.rstr2any(this.rstr_md5(this.str2rstr_utf8(e)), t);
    }, e.prototype.hex_hmac_md5 = function(e, t) {
        return this.rstr2hex(this.rstr_hmac_md5(this.str2rstr_utf8(e), this.str2rstr_utf8(t)));
    }, e.prototype.b64_hmac_md5 = function(e, t) {
        return this.rstr2b64(this.rstr_hmac_md5(this.str2rstr_utf8(e), this.str2rstr_utf8(t)));
    }, e.prototype.any_hmac_md5 = function(e, t, i) {
        return this.rstr2any(this.rstr_hmac_md5(this.str2rstr_utf8(e), this.str2rstr_utf8(t)), i);
    }, e.prototype.md5_vm_test = function() {
        return "900150983cd24fb0d6963f7d28e17f72" == this.hex_md5("abc").toLowerCase();
    }, e.prototype.rstr_md5 = function(e) {
        return this.binl2rstr(this.binl_md5(this.rstr2binl(e), 8 * e.length));
    }, e.prototype.rstr_hmac_md5 = function(e, t) {
        var i = this.rstr2binl(e);
        i.length > 16 && (i = this.binl_md5(i, 8 * e.length));
        for (var n = Array(16), o = Array(16), a = 0; 16 > a; a++) n[a] = 909522486 ^ i[a], 
        o[a] = 1549556828 ^ i[a];
        var r = this.binl_md5(n.concat(this.rstr2binl(t)), 512 + 8 * t.length);
        return this.binl2rstr(this.binl_md5(o.concat(r), 640));
    }, e.prototype.rstr2hex = function(e) {
        try {
            this.hexcase;
        } catch (t) {
            this.hexcase = 0;
        }
        for (var i, n = this.hexcase ? "0123456789ABCDEF" : "0123456789abcdef", o = "", a = 0; a < e.length; a++) i = e.charCodeAt(a), 
        o += n.charAt(i >>> 4 & 15) + n.charAt(15 & i);
        return o;
    }, e.prototype.rstr2b64 = function(e) {
        try {
            this.b64pad;
        } catch (t) {
            this.b64pad = "";
        }
        for (var i = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", n = "", o = e.length, a = 0; o > a; a += 3) for (var r = e.charCodeAt(a) << 16 | (o > a + 1 ? e.charCodeAt(a + 1) << 8 : 0) | (o > a + 2 ? e.charCodeAt(a + 2) : 0), s = 0; 4 > s; s++) n += 8 * a + 6 * s > 8 * e.length ? this.b64pad : i.charAt(r >>> 6 * (3 - s) & 63);
        return n;
    }, e.prototype.rstr2any = function(e, t) {
        var i, n, o, a, r, s = t.length, l = Array(Math.ceil(e.length / 2));
        for (i = 0; i < l.length; i++) l[i] = e.charCodeAt(2 * i) << 8 | e.charCodeAt(2 * i + 1);
        var d = Math.ceil(8 * e.length / (Math.log(t.length) / Math.log(2))), u = Array(d);
        for (n = 0; d > n; n++) {
            for (r = Array(), a = 0, i = 0; i < l.length; i++) a = (a << 16) + l[i], o = Math.floor(a / s), 
            a -= o * s, (r.length > 0 || o > 0) && (r[r.length] = o);
            u[n] = a, l = r;
        }
        var h = "";
        for (i = u.length - 1; i >= 0; i--) h += t.charAt(u[i]);
        return h;
    }, e.prototype.str2rstr_utf8 = function(e) {
        for (var t, i, n = "", o = -1; ++o < e.length; ) t = e.charCodeAt(o), i = o + 1 < e.length ? e.charCodeAt(o + 1) : 0, 
        t >= 55296 && 56319 >= t && i >= 56320 && 57343 >= i && (t = 65536 + ((1023 & t) << 10) + (1023 & i), 
        o++), 127 >= t ? n += String.fromCharCode(t) : 2047 >= t ? n += String.fromCharCode(192 | t >>> 6 & 31, 128 | 63 & t) : 65535 >= t ? n += String.fromCharCode(224 | t >>> 12 & 15, 128 | t >>> 6 & 63, 128 | 63 & t) : 2097151 >= t && (n += String.fromCharCode(240 | t >>> 18 & 7, 128 | t >>> 12 & 63, 128 | t >>> 6 & 63, 128 | 63 & t));
        return n;
    }, e.prototype.str2rstr_utf16le = function(e) {
        for (var t = "", i = 0; i < e.length; i++) t += String.fromCharCode(255 & e.charCodeAt(i), e.charCodeAt(i) >>> 8 & 255);
        return t;
    }, e.prototype.str2rstr_utf16be = function(e) {
        for (var t = "", i = 0; i < e.length; i++) t += String.fromCharCode(e.charCodeAt(i) >>> 8 & 255, 255 & e.charCodeAt(i));
        return t;
    }, e.prototype.rstr2binl = function(e) {
        for (var t = Array(e.length >> 2), i = 0; i < t.length; i++) t[i] = 0;
        for (var i = 0; i < 8 * e.length; i += 8) t[i >> 5] |= (255 & e.charCodeAt(i / 8)) << i % 32;
        return t;
    }, e.prototype.binl2rstr = function(e) {
        for (var t = "", i = 0; i < 32 * e.length; i += 8) t += String.fromCharCode(e[i >> 5] >>> i % 32 & 255);
        return t;
    }, e.prototype.binl_md5 = function(e, t) {
        e[t >> 5] |= 128 << t % 32, e[(t + 64 >>> 9 << 4) + 14] = t;
        for (var i = 1732584193, n = -271733879, o = -1732584194, a = 271733878, r = 0; r < e.length; r += 16) {
            var s = i, l = n, d = o, u = a;
            i = this.md5_ff(i, n, o, a, e[r + 0], 7, -680876936), a = this.md5_ff(a, i, n, o, e[r + 1], 12, -389564586), 
            o = this.md5_ff(o, a, i, n, e[r + 2], 17, 606105819), n = this.md5_ff(n, o, a, i, e[r + 3], 22, -1044525330), 
            i = this.md5_ff(i, n, o, a, e[r + 4], 7, -176418897), a = this.md5_ff(a, i, n, o, e[r + 5], 12, 1200080426), 
            o = this.md5_ff(o, a, i, n, e[r + 6], 17, -1473231341), n = this.md5_ff(n, o, a, i, e[r + 7], 22, -45705983), 
            i = this.md5_ff(i, n, o, a, e[r + 8], 7, 1770035416), a = this.md5_ff(a, i, n, o, e[r + 9], 12, -1958414417), 
            o = this.md5_ff(o, a, i, n, e[r + 10], 17, -42063), n = this.md5_ff(n, o, a, i, e[r + 11], 22, -1990404162), 
            i = this.md5_ff(i, n, o, a, e[r + 12], 7, 1804603682), a = this.md5_ff(a, i, n, o, e[r + 13], 12, -40341101), 
            o = this.md5_ff(o, a, i, n, e[r + 14], 17, -1502002290), n = this.md5_ff(n, o, a, i, e[r + 15], 22, 1236535329), 
            i = this.md5_gg(i, n, o, a, e[r + 1], 5, -165796510), a = this.md5_gg(a, i, n, o, e[r + 6], 9, -1069501632), 
            o = this.md5_gg(o, a, i, n, e[r + 11], 14, 643717713), n = this.md5_gg(n, o, a, i, e[r + 0], 20, -373897302), 
            i = this.md5_gg(i, n, o, a, e[r + 5], 5, -701558691), a = this.md5_gg(a, i, n, o, e[r + 10], 9, 38016083), 
            o = this.md5_gg(o, a, i, n, e[r + 15], 14, -660478335), n = this.md5_gg(n, o, a, i, e[r + 4], 20, -405537848), 
            i = this.md5_gg(i, n, o, a, e[r + 9], 5, 568446438), a = this.md5_gg(a, i, n, o, e[r + 14], 9, -1019803690), 
            o = this.md5_gg(o, a, i, n, e[r + 3], 14, -187363961), n = this.md5_gg(n, o, a, i, e[r + 8], 20, 1163531501), 
            i = this.md5_gg(i, n, o, a, e[r + 13], 5, -1444681467), a = this.md5_gg(a, i, n, o, e[r + 2], 9, -51403784), 
            o = this.md5_gg(o, a, i, n, e[r + 7], 14, 1735328473), n = this.md5_gg(n, o, a, i, e[r + 12], 20, -1926607734), 
            i = this.md5_hh(i, n, o, a, e[r + 5], 4, -378558), a = this.md5_hh(a, i, n, o, e[r + 8], 11, -2022574463), 
            o = this.md5_hh(o, a, i, n, e[r + 11], 16, 1839030562), n = this.md5_hh(n, o, a, i, e[r + 14], 23, -35309556), 
            i = this.md5_hh(i, n, o, a, e[r + 1], 4, -1530992060), a = this.md5_hh(a, i, n, o, e[r + 4], 11, 1272893353), 
            o = this.md5_hh(o, a, i, n, e[r + 7], 16, -155497632), n = this.md5_hh(n, o, a, i, e[r + 10], 23, -1094730640), 
            i = this.md5_hh(i, n, o, a, e[r + 13], 4, 681279174), a = this.md5_hh(a, i, n, o, e[r + 0], 11, -358537222), 
            o = this.md5_hh(o, a, i, n, e[r + 3], 16, -722521979), n = this.md5_hh(n, o, a, i, e[r + 6], 23, 76029189), 
            i = this.md5_hh(i, n, o, a, e[r + 9], 4, -640364487), a = this.md5_hh(a, i, n, o, e[r + 12], 11, -421815835), 
            o = this.md5_hh(o, a, i, n, e[r + 15], 16, 530742520), n = this.md5_hh(n, o, a, i, e[r + 2], 23, -995338651), 
            i = this.md5_ii(i, n, o, a, e[r + 0], 6, -198630844), a = this.md5_ii(a, i, n, o, e[r + 7], 10, 1126891415), 
            o = this.md5_ii(o, a, i, n, e[r + 14], 15, -1416354905), n = this.md5_ii(n, o, a, i, e[r + 5], 21, -57434055), 
            i = this.md5_ii(i, n, o, a, e[r + 12], 6, 1700485571), a = this.md5_ii(a, i, n, o, e[r + 3], 10, -1894986606), 
            o = this.md5_ii(o, a, i, n, e[r + 10], 15, -1051523), n = this.md5_ii(n, o, a, i, e[r + 1], 21, -2054922799), 
            i = this.md5_ii(i, n, o, a, e[r + 8], 6, 1873313359), a = this.md5_ii(a, i, n, o, e[r + 15], 10, -30611744), 
            o = this.md5_ii(o, a, i, n, e[r + 6], 15, -1560198380), n = this.md5_ii(n, o, a, i, e[r + 13], 21, 1309151649), 
            i = this.md5_ii(i, n, o, a, e[r + 4], 6, -145523070), a = this.md5_ii(a, i, n, o, e[r + 11], 10, -1120210379), 
            o = this.md5_ii(o, a, i, n, e[r + 2], 15, 718787259), n = this.md5_ii(n, o, a, i, e[r + 9], 21, -343485551), 
            i = this.safe_add(i, s), n = this.safe_add(n, l), o = this.safe_add(o, d), a = this.safe_add(a, u);
        }
        return [ i, n, o, a ];
    }, e.prototype.md5_cmn = function(e, t, i, n, o, a) {
        return this.safe_add(this.bit_rol(this.safe_add(this.safe_add(t, e), this.safe_add(n, a)), o), i);
    }, e.prototype.md5_ff = function(e, t, i, n, o, a, r) {
        return this.md5_cmn(t & i | ~t & n, e, t, o, a, r);
    }, e.prototype.md5_gg = function(e, t, i, n, o, a, r) {
        return this.md5_cmn(t & n | i & ~n, e, t, o, a, r);
    }, e.prototype.md5_hh = function(e, t, i, n, o, a, r) {
        return this.md5_cmn(t ^ i ^ n, e, t, o, a, r);
    }, e.prototype.md5_ii = function(e, t, i, n, o, a, r) {
        return this.md5_cmn(i ^ (t | ~n), e, t, o, a, r);
    }, e.prototype.safe_add = function(e, t) {
        var i = (65535 & e) + (65535 & t), n = (e >> 16) + (t >> 16) + (i >> 16);
        return n << 16 | 65535 & i;
    }, e.prototype.bit_rol = function(e, t) {
        return e << t | e >>> 32 - t;
    }, e;
}();

__reflect(MD5.prototype, "MD5");

var hortor;

!function(e) {
    var t = function() {
        function e() {}
        return Object.defineProperty(e, "locale", {
            get: function() {
                return e.m_locale;
            },
            set: function(t) {
                e.m_locale = t;
            },
            enumerable: !0,
            configurable: !0
        }), e.format = function(e, t, i) {
            void 0 === t && (t = 0), void 0 === i && (i = !1);
            var n = 0, o = Math.pow(10, t), a = Math.round(o * e) / o, r = -1 == a.indexOf("."), s = r ? a.length : a.indexOf("."), l = (r && !t ? "" : i ? "," : ".") + a.substr(s + 1);
            if (t) for (var d = 0; d <= t - (a.length - (r ? s - 1 : s)); d++) l += "0";
            for (;n + 3 < ("-" == a.substr(0, 1) ? s - 1 : s); ) l = (i ? "." : ",") + a.substr(s - (n += 3), 3) + l;
            return a.substr(0, s - n) + l;
        }, e.formatRound = function(t) {
            if (null == t) return "0";
            if (t = t, "en_US" == e.locale || "vi_VN" == e.locale) return e.formatEngNumber(t);
            var i;
            switch (e.locale) {
              case "zh_CN":
                i = [ "亿", "万" ];
                break;

              case "zh_TW":
                i = [ "億", "萬" ];
                break;

              case "ja_JP":
                i = [ "億", "万" ];
                break;

              case "ko_KR":
                i = [ "억", "만" ];
            }
            if (null != i) {
                if (t >= 1e8) return Math.floor(t / 1e8) + i[0];
                if (t >= 1e5) return Math.floor(t / 1e4) + i[1];
            }
            return t.toString();
        }, e.formatTime = function(e, t, i) {
            if (void 0 === t && (t = !1), void 0 === i && (i = !1), isNaN(e) || 0 >= e) return "00:00";
            var n = Math.floor(e / 1e3), o = 0, a = "";
            i && (o = Math.floor(n / 3600 / 24), n -= 86400 * o, a = o + (t ? "天" : ":"));
            var r = Math.floor(n / 3600);
            n -= 3600 * r;
            var s = Math.floor(n / 60);
            n -= 60 * s;
            var l = this.formatTimeNumber(r) + (t ? "小时" : ":"), d = this.formatTimeNumber(s) + (t ? "分" : ":"), u = this.formatTimeNumber(n) + (t ? "秒" : "");
            return a + l + d + u;
        }, e.formatTimeNumber = function(e) {
            return 10 > e ? "0" + e : e.toString();
        }, e.formatEngNumber = function(t) {
            var i, n;
            return t = t, t >= 1e9 ? (n = t / 1e9, i = (.01 * Math.floor(n / .01)).toFixed(2), 
            e.formatEndingZero(i) + "B") : t >= 1e6 ? (n = t / 1e6, i = (.01 * Math.floor(n / .01)).toFixed(2), 
            e.formatEndingZero(i) + "M") : t >= 1e3 ? (n = t / 1e3, i = (.01 * Math.floor(n / .01)).toFixed(2), 
            e.formatEndingZero(i) + "K") : t + "";
        }, e.formatEndingZero = function(t) {
            return e.endWith(t, "00") ? t.substring(0, t.length - 3) : e.endWith(t, "0") ? t.substring(0, t.length - 1) : t;
        }, e.endWith = function(e, t) {
            return t == e.substring(e.length - t.length);
        }, e.m_locale = "zh_CN", e;
    }();
    e.NumberFormatter = t, __reflect(t.prototype, "hortor.NumberFormatter");
}(hortor || (hortor = {}));

var hortor;

!function(e) {
    var t = function() {
        function t() {}
        return t.getPool = function(e) {
            return t.pools.containsKey(e) ? t.pools.getValue(e) : t.pools.put(e, new Array());
        }, t.getObject = function(i, n) {
            for (var o = [], a = 2; a < arguments.length; a++) o[a - 2] = arguments[a];
            var r = t.getPool(n ? n : i);
            return r.length > 0 ? r.pop() : e.construct(i, o);
        }, t.disposeObject = function(e, i) {
            null == i && (i = e.constructor);
            var n = t.getPool(i);
            n.push(e);
        }, t.pools = new e.HashMap(), t;
    }();
    e.ObjectPool = t, __reflect(t.prototype, "hortor.ObjectPool");
}(hortor || (hortor = {}));

var hortor;

!function(e) {
    var t = function() {
        function e(e) {
            this.path = e, this.parseLocalData();
        }
        return e.prototype.parseLocalData = function() {
            this.mData = {};
            var e = egret.localStorage.getItem(this.path);
            if (e) for (var t = e.split(","), i = 0; i < t.length; i++) {
                var n = t[i].split("|"), o = n[1], a = n[2];
                switch (o) {
                  case "n":
                    a = parseInt(a);
                    break;

                  case "b":
                    a = "true" == a;
                }
                this.mData[n[0]] = a;
            }
        }, e.prototype.flush = function() {
            var e = "";
            for (var t in this.mData) {
                var i = this.mData[t];
                if (void 0 != i) {
                    var n = (typeof i).substr(0, 1);
                    e += t + "|" + n + "|" + i + ",";
                }
            }
            e = e.substring(0, e.length - 1), egret.localStorage.setItem(this.path, e);
        }, e.prototype.clear = function() {
            egret.localStorage.removeItem(this.path);
        }, Object.defineProperty(e.prototype, "data", {
            get: function() {
                return this.mData;
            },
            enumerable: !0,
            configurable: !0
        }), e.getLocal = function(t) {
            var i = this.sharedMap[t];
            return i || (i = new e(t), this.sharedMap[t] = i), i;
        }, e.clear = function(e) {
            void 0 === e && (e = null), e ? this.getLocal(e).clear() : egret.localStorage.clear();
        }, e.sharedMap = {}, e;
    }();
    e.SharedObject = t, __reflect(t.prototype, "hortor.SharedObject");
}(hortor || (hortor = {}));

var hortor;

!function(e) {
    function t(e) {
        var t = instances.getValue(e);
        return t ? t : instances.put(e, new e());
    }
    e.singletonFactory = t;
}(hortor || (hortor = {}));

var instances = new hortor.HashMap(), hortor;

!function(e) {
    var t = function() {
        function e() {}
        return e.getTextures = function(e, t) {
            void 0 === t && (t = "");
            var i = new Array(), n = new Array();
            for (var o in e._textureMap) 0 == o.indexOf(t) && n.push(o);
            n.sort();
            for (var a = 0; a < n.length; a++) {
                var r = n[a];
                i.push(e.getTexture(r));
            }
            return i;
        }, e;
    }();
    e.SpriteSheetUtil = t, __reflect(t.prototype, "hortor.SpriteSheetUtil");
}(hortor || (hortor = {}));

var hortor;

!function(e) {
    var t = function() {
        function e() {}
        return e.existString = function(e, t) {
            if (null == e) return !1;
            var i = new RegExp(t, "i");
            return null != e.match(i);
        }, e.strFilter = function(e, t) {
            void 0 === t && (t = null);
            var i;
            return t ? (i = /fuck|操|this.cao|傻逼|屄|this.sb|日|this.ri|骚|this.sao|激情|脱|this.tuo|贱|this.jianren|妈的|傻逼|騷|脫|賤|媽的/gi, 
            e.replace(i, t)) : (i = /fuck|操|this.cao|傻逼|屄|this.sb|日|this.ri|骚|this.sao|激情|脱|this.tuo|贱|this.jianren|妈的|傻逼|騷|脫|賤|媽的/i, 
            null != e.match(i) ? "包含非法字符!" : e);
        }, e.prototype.runPerm = function(e, t) {
            void 0 === t && (t = "");
            for (var i = [], n = 0; n < e.length; n++) {
                var o = e.charAt(e.length - 1) + e;
                e = o.substr(0, o.length - 1), 2 == e.length && i.push(e + t), o = e.substr(1), 
                this.runPerm(o, t + e.charAt(0));
            }
            return i;
        }, e.getStringLen = function(e) {
            for (var t = 0, i = e.length, n = 0; i > n; n++) e.charCodeAt(n) < 0 || e.charCodeAt(n) > 255 ? t += 2 : t++;
            return t;
        }, e.getCutString = function(e, t, i) {
            void 0 === i && (i = "...");
            for (var n = 0, o = 0, a = 0; t > n; a++) e.charCodeAt(a) < 0 || e.charCodeAt(a) > 255 ? (n += 2, 
            n > t && o--) : n++, o++;
            var r = e.substring(0, o);
            return r == e ? e : r + i;
        }, e.stripWhitespace = function(e, t, i, n, o) {
            void 0 === t && (t = !0), void 0 === i && (i = !0), void 0 === n && (n = !0), void 0 === o && (o = !0);
            var a, r = e;
            if (t && (r = r.split("\t").join(" ")), i && (r = r.split("\r").join(" ")), n && (r = r.split("\n").join(" ")), 
            o) {
                a = r.split(" ");
                for (var s = 0; s < a.length; s++) "" == a[s] && (a.splice(s, 1), s--);
                r = a.join(" ");
            }
            return r;
        }, e.substitute = function(e) {
            for (var t = [], i = 1; i < arguments.length; i++) t[i - 1] = arguments[i];
            if (null == e || "" == e) return "";
            var n, o = 0, a = 0;
            switch (typeof t[0]) {
              case "number":
              case "boolean":
              case "string":
                for (o = t.length, n = t, a = 0; o > a; a++) e = e.replace(new RegExp("\\{" + a + "\\}", "gm"), n[a]);
                break;

              case "object":
                if (t[0] instanceof Array) for (n = t[0], o = n.length, a = 0; o > a; a++) e = e.replace(new RegExp("\\{" + a + "\\}", "gm"), n[a]); else {
                    var r;
                    for (var s in t[0]) r = new RegExp("{" + s + "}", "ig"), e = e.replace(r, t[0][s]);
                }
            }
            return e;
        }, e.createHtmlText = function(e, t, i, n) {
            return void 0 === t && (t = "#ff6600"), void 0 === i && (i = 12), void 0 === n && (n = "Arial"), 
            t = "#" == t.substr(0, 1) ? t : "#" + t.substr(2), "<font color='" + t + "' size='" + i + "' font='" + n + "' >" + e + "</font>";
        }, e.createTextLink = function(e, t) {
            return "<a href='event:" + t + "'><u>" + e + "</u></a>";
        }, e.isNumber = function(e) {
            var t = new RegExp("[^0-9]");
            return !e.match(t);
        }, e.substring = function(e, t) {
            return t >= e.length ? e : e.substring(0, t) + "...";
        }, e;
    }();
    e.StringUtil = t, __reflect(t.prototype, "hortor.StringUtil");
}(hortor || (hortor = {}));

var TweenLite;

!function(e) {
    function t(e, t, i) {
        i.onUpdate && (i.onChange = i.onUpdate, i.onChangeObj = i.onUpdateScope);
        var n = egret.Tween.get(e, i);
        n.to(i, 1e3 * t, i.ease), i.onComplete && n.call(i.onComplete, i.onCompleteScope);
    }
    function i(e, t) {
        egret.Tween.removeTweens(e);
    }
    function n(t, i, n) {
        var o = {};
        for (var a in n) "number" == typeof n[a] ? o[a] = t[a] : o[a] = n[a];
        e.fromTo(t, i, n, o);
    }
    function o(t, i, n, o) {
        for (var a in n) "number" == typeof n[a] && (t[a] = n[a]);
        e.to(t, i, o);
    }
    e.to = t, e.killTweensOf = i, e.from = n, e.fromTo = o;
}(TweenLite || (TweenLite = {}));

var game;

!function(e) {
    var t = function(t) {
        function i(i) {
            return t.call(this, e.ResourcePath.getDragonPath(i)) || this;
        }
        return __extends(i, t), i;
    }(hortor.ArmaturePlayer);
    e.ArmaturePlayer = t, __reflect(t.prototype, "game.ArmaturePlayer");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i(i) {
            return t.call(this, e.ResourcePath.getMovieClip(i)) || this;
        }
        return __extends(i, t), i;
    }(hortor.MoviePlayer);
    e.MoviePlayer = t, __reflect(t.prototype, "game.MoviePlayer");
}(game || (game = {}));

var hortor;

!function(e) {
    var t = function(t) {
        function i(i) {
            void 0 === i && (i = null);
            var n = t.call(this) || this;
            return n.commandName = "MacroCommand", n.commandName = i || n.commandName, n.subCommands = new Array(), 
            e.NotificationManager.add(n.commandName, n.execute, n), n;
        }
        return __extends(i, t), i.prototype.addCommand = function(e) {
            this.subCommands.push(e);
        }, i.prototype.execute = function() {
            for (;this.subCommands.length > 0; ) {
                var e = this.subCommands.shift();
                e.execute();
            }
        }, i;
    }(e.Command);
    e.MacroCommand = t, __reflect(t.prototype, "hortor.MacroCommand");
}(hortor || (hortor = {}));

var hortor;

!function(e) {
    var t = function(t) {
        function i(i) {
            void 0 === i && (i = null);
            var n = t.call(this) || this;
            return n.stepCount = 0, n.doneStep = -1, n.queueName = "QueueCommand", n.queueName = i || n.queueName, 
            n.queues = new e.HashMap(), e.NotificationManager.add(n.queueName, n.execute, n), 
            n;
        }
        return __extends(i, t), i.prototype.addCommand = function(e, t) {
            void 0 === t && (t = -1);
            var i = -1 == t ? this.queues.length : t;
            this.queues.put(i, e), this.stepCount = this.queues.length, e.step = i;
        }, Object.defineProperty(i.prototype, "progress", {
            get: function() {
                return (this.stepCount - this.queues.length) / this.stepCount;
            },
            enumerable: !0,
            configurable: !0
        }), i.prototype.onProgress = function(e) {}, i.prototype.execute = function() {
            return this.onProgress(this.progress), this.queues.length < 1 ? (e.NotificationManager.remove(this.queueName, this.execute, this), 
            this.isRunning = !1, void this.done()) : (this.isRunning = !0, void this.doNextCommand());
        }, i.prototype.pause = function() {
            this.isRunning = !1;
        }, i.prototype.resume = function(e) {
            void 0 === e && (e = !0), this.isRunning = !0, e && this.execute();
        }, i.prototype.cancel = function() {
            this.queues.clear(), e.NotificationManager.remove(this.queueName, null, this), this.done();
        }, i.prototype.doNextCommand = function() {
            if (this.queues.length > 0) {
                var e = this.getNextCommand(this.doneStep);
                e ? (e.execute(), this.doneStep = Math.max(e.step, this.doneStep), this.queues.remove(this.doneStep)) : console.log("doNextCommand: step超出索引范围!");
            }
        }, i.prototype.getNextCommand = function(e) {
            void 0 === e && (e = 0);
            var t = -1;
            for (var i in this.queues.content) {
                var n = parseInt(i);
                n > e && (t > n || -1 == t) && (t = n);
            }
            return this.queues.getValue(t);
        }, i.prototype.done = function() {}, i;
    }(e.Command);
    e.QueueCommand = t, __reflect(t.prototype, "hortor.QueueCommand");
}(hortor || (hortor = {}));

var hortor;

!function(e) {
    var t = function(e) {
        function t() {
            var t = e.call(this) || this;
            return t._color = 16777215, t._shadowColor = 13584392, t._strokeColor = 13795328, 
            t._stroke = 0, t._shadow = 0, t.touchEnabled = !1, t;
        }
        return __extends(t, e), Object.defineProperty(t.prototype, "fontColor", {
            get: function() {
                return this._color;
            },
            set: function(e) {
                this._color != e && (this._color = e, 16777215 == e ? this._colorFilter = null : this._colorFilter = this.createColor(!0), 
                this.updateEffect());
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(t.prototype, "strokeColor", {
            get: function() {
                return this._strokeColor;
            },
            set: function(e) {
                this._strokeColor != e && (this._strokeColor = e, this._strokeFilter = this.createStroke(!0), 
                this.updateEffect());
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(t.prototype, "shadowColor", {
            get: function() {
                return this._shadowColor;
            },
            set: function(e) {
                this._shadowColor != e && (this._shadowColor = e, this._shadowFilter = this.createShadow(!0), 
                this.updateEffect());
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(t.prototype, "stroke", {
            get: function() {
                return this._stroke;
            },
            set: function(e) {
                this._stroke != e && (this._stroke = e, 0 >= e ? this._strokeFilter = null : this._strokeFilter = this.createStroke(!0), 
                this.updateEffect());
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(t.prototype, "shadow", {
            get: function() {
                return this._shadow;
            },
            set: function(e) {
                this._shadow != e && (this._shadow = e, this._shadow <= 0 ? this._shadowFilter = null : this._shadowFilter = this.createShadow(!0), 
                this.updateEffect());
            },
            enumerable: !0,
            configurable: !0
        }), t.prototype.updateEffect = function() {
            var e = [];
            this._strokeFilter && e.push(this._strokeFilter), this._shadowFilter && e.push(this._shadowFilter), 
            this._colorFilter && e.push(this._colorFilter), this.filters = e.length > 0 ? e : null;
        }, t.prototype.createStroke = function(e) {
            void 0 === e && (e = !1);
            var t = "strokeFilter", i = this[t];
            return (!i || e) && (i = this[t] = new egret.GlowFilter(this.strokeColor, 1, this.stroke, this.stroke, 5)), 
            i;
        }, t.prototype.createShadow = function(e) {
            void 0 === e && (e = !1);
            var t = "shadowFilter", i = this[t];
            return (!i || e) && (i = this[t] = new egret.DropShadowFilter(2, 90, this.shadowColor, .6, this.shadow, this.shadow, 5)), 
            i;
        }, t.prototype.createColor = function(e) {
            void 0 === e && (e = !1);
            var t = "colorFilter", i = this[t];
            if (!i || e) {
                var n = function(e) {
                    var t = {
                        r: -1,
                        g: -1,
                        b: -1
                    };
                    return t.b = e % 256, t.g = Math.floor(e / 256) % 256, t.r = Math.floor(e / 256 / 256), 
                    t;
                }, o = n(this._color), a = [ 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0 ];
                a[0] = o.r / 255, a[6] = o.g / 255, a[12] = o.b / 255;
                var r = new egret.ColorMatrixFilter(a);
                i = this[t] = r;
            }
            return i;
        }, t;
    }(eui.BitmapLabel);
    e.BitmapLabel = t, __reflect(t.prototype, "hortor.BitmapLabel");
}(hortor || (hortor = {})), window.hortor.BitmapLabel = hortor.BitmapLabel;

var game;

!function(e) {
    var t = function(e) {
        function t() {
            var t = e.call(this) || this;
            return t._data = [], t.selectIndex = -1, t.selectItem = null, t.skinName = ComboBox, 
            t.addEventListener(egret.Event.ADDED, t.onInit, t), t;
        }
        return __extends(t, e), t.prototype.onInit = function() {
            this.scroller.viewport = this.list, this.list.itemRenderer = ComboBoxItemBase, this.listGroup.visible = !1, 
            this.changeBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onChangeFunc, this), 
            this.list.addEventListener(eui.ItemTapEvent.ITEM_TAP, this.onItemTapFunc, this);
        }, t.prototype.setData = function(e) {
            this._data = e, this.initList();
        }, t.prototype.initList = function() {
            if (this._data && (this.listData = new eui.ArrayCollection(), this.list.dataProvider = this.listData, 
            this._data.list && (this.listData.source = this._data.list, this.listData.refresh(), 
            this._data.hasOwnProperty("defaultIndex")))) {
                for (var e = this._data.defaultIndex + "", t = 0; t < this._data.list.length; t++) this._data.list[t].id == e && (this.selectItem = this._data.list[t]);
                this.selectItem && (this.contentLabel.text = this.selectItem.label);
            }
        }, t.prototype.onChangeFunc = function(e) {
            this.listGroup.visible = !this.listGroup.visible, this.changeBtn.source = this.listGroup.visible ? "setting_img_but2" : "setting_img_but1";
        }, t.prototype.onItemTapFunc = function(e) {
            this.selectIndex = e.itemIndex, this.selectItem = e.item, this.hideList(), this.contentLabel.text = this.selectItem.label;
            var t = new egret.Event(ComboBoxEvent.ComboBoxItemTapEvent);
            t.data = {
                selectIndex: this.selectIndex,
                selectItem: this.selectItem
            }, this.dispatchEvent(t);
        }, t.prototype.hideList = function() {
            this.listGroup.visible && (this.listGroup.visible = !1), this.changeBtn.source = this.listGroup.visible ? "setting_img_but2" : "setting_img_but1";
        }, t.prototype.isOpen = function() {
            return this.listGroup.visible;
        }, t.prototype.getData = function() {
            return this.selectItem;
        }, t;
    }(eui.Component);
    e.ComboBoxBase = t, __reflect(t.prototype, "game.ComboBoxBase");
}(game || (game = {})), window.game.ComboBoxBase = game.ComboBoxBase;

var ComboBoxEvent = function(e) {
    function t() {
        return null !== e && e.apply(this, arguments) || this;
    }
    return __extends(t, e), t.ComboBoxItemTapEvent = "ComboBoxItemTapEvent", t;
}(egret.Event);

__reflect(ComboBoxEvent.prototype, "ComboBoxEvent");

var ComboBoxItemBase = function(e) {
    function t() {
        var t = e.call(this) || this;
        return t.skinName = ComboBoxItem, t;
    }
    return __extends(t, e), t.prototype.dataChanged = function() {
        this.data.label && (this.contentLabel.text = this.data.label), this.data.icon && (this.iconImg.source = this.data.icon);
    }, t;
}(eui.ItemRenderer);

__reflect(ComboBoxItemBase.prototype, "ComboBoxItemBase");

var hortor;

!function(e) {
    var t = function(e) {
        function t() {
            var t = e.call(this) || this;
            return t.isInited = !1, t.addEventListener(egret.Event.COMPLETE, t.onInit, t), t;
        }
        return __extends(t, e), t.prototype.onInit = function() {
            this.skin && (this.isInited = !0, this.mData && (this.data = this.mData));
        }, Object.defineProperty(t.prototype, "data", {
            set: function(e) {
                this.mData = e, this.isInited && (this.bgImage.source = 1 == this.mData.gender ? "common_json.common_img_portrait1" : "common_json.common_img_portrait0", 
                util.setRemoteAvatar(this.avatarImage, this.mData.headImg), this.starLabel.text = this.mData.crowns, 
                0 == this.mData.showStar && (this.starLabel.visible = !1, this.starBottom.visible = !1, 
                this.starIcon.visible = !1));
            },
            enumerable: !0,
            configurable: !0
        }), t;
    }(eui.Component);
    e.Avatar = t, __reflect(t.prototype, "hortor.Avatar");
}(hortor || (hortor = {})), window.hortor.Avatar = hortor.Avatar;

var hortor;

!function(e) {
    var t = function(e) {
        function t() {
            var t = e.call(this) || this;
            return t.isInited = !1, t.addEventListener(egret.Event.COMPLETE, t.onInit, t), t;
        }
        return __extends(t, e), t.prototype.onInit = function() {
            this.skin && (this.isInited = !0, this.mData && (this.data = this.mData));
        }, Object.defineProperty(t.prototype, "data", {
            set: function(e) {
                this.mData = e, this.isInited && (this.bgImage.source = 1 == this.mData.gender ? "common_json.common_img_tz1_1" : "common_json.common_img_tz1_0", 
                util.setRemoteAvatar(this.avatarImage, this.mData.headImg), this.starLabel.text = this.mData.crowns, 
                this.starGroup.visible = !!this.mData.showStar);
            },
            enumerable: !0,
            configurable: !0
        }), t;
    }(eui.Component);
    e.AvatarSimple2 = t, __reflect(t.prototype, "hortor.AvatarSimple2");
}(hortor || (hortor = {})), window.hortor.AvatarSimple2 = hortor.AvatarSimple2;

var game;

!function(e) {
    var t = function(e) {
        function t() {
            var t = e.call(this) || this;
            return t.bgidx = 1, t.noticeText = "", t.skinPath = "common/ComEmptyListTipSkin", 
            t;
        }
        return __extends(t, e), t.prototype.onInit = function() {
            this.bg.source = "common_img_kong" + this.bgidx + "_png", this.noticeLabel.text = this.noticeText;
        }, t;
    }(e.ItemRenderBase);
    e.ComEmptyListTip = t, __reflect(t.prototype, "game.ComEmptyListTip");
}(game || (game = {})), window.game.ComEmptyListTip = game.ComEmptyListTip;

var game;

!function(e) {
    var t = function(e) {
        function t() {
            var t = e.call(this) || this;
            return t.skinName = CommonAvatarComponentSkin, t;
        }
        return __extends(t, e), t.prototype.partAdded = function(t, i) {
            e.prototype.partAdded.call(this, t, i);
        }, t.prototype.childrenCreated = function() {
            e.prototype.childrenCreated.call(this), this.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onTouch, this);
        }, t.prototype.onTouch = function() {}, t;
    }(eui.Component);
    e.CommonAvatarComponent = t, __reflect(t.prototype, "game.CommonAvatarComponent", [ "eui.UIComponent", "egret.DisplayObject" ]);
}(game || (game = {})), window.game.CommonAvatarComponent = game.CommonAvatarComponent;

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.skinPath = "common/ComPropTipsNodeSkin", e;
        }
        return __extends(i, t), i.prototype.onInit = function() {}, i.prototype.onData = function() {
            this.titleLabel.text = "" + e.ItemManager.getItemInfo(this.data.name).name, this.descLabel.text = "" + e.ItemManager.getItemInfo(this.data.name).tips, 
            this.bgImage.width = this.descLabel.width + 30;
        }, i;
    }(e.ViewBase);
    e.PropTipsNode = t, __reflect(t.prototype, "game.PropTipsNode");
}(game || (game = {})), window.game.PropTipsNode = game.PropTipsNode;

var hortor;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.addEventListener(egret.Event.COMPLETE, e.onInit, e), e.addEventListener(egret.Event.REMOVED_FROM_STAGE, e.onRemove, e), 
            e.addEventListener(egret.Event.ADDED_TO_STAGE, e.onAdd, e), e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            var t = e.SystemManager.isNotchMobile;
            this.top = t ? 60 : 20;
        }, i.prototype.onAdd = function() {
            this.right = 182;
            var e = 200, t = 10, i = this.right, n = egret.Tween.get(this, {
                loop: !0
            });
            n.to({
                right: i + t
            }, e).to({
                right: i
            }, e).to({
                right: i - t
            }, e).to({
                right: i
            }, e);
        }, i.prototype.onRemove = function() {
            egret.Tween.removeTweens(this);
        }, i;
    }(eui.Component);
    e.Finger = t, __reflect(t.prototype, "hortor.Finger");
}(hortor || (hortor = {})), window.hortor.Finger = hortor.Finger;

var hortor;

!function(e) {
    var t = function(t) {
        function i(e) {
            void 0 === e && (e = null);
            var i = t.call(this) || this;
            return i.source = e, i;
        }
        return __extends(i, t), i.prototype.floatTarget = function(t, i, n, o, a) {
            void 0 === a && (a = null);
            var r = e.DisplayUtil.getGlobalBounds(t), s = new egret.Point(r.x + .5 * r.width, r.y + .5 * r.height);
            this.target = t, this.direction = o, this.floatPosition(s, i, n, o, a);
        }, i.prototype.floatPosition = function(t, i, n, o, a) {
            void 0 === o && (o = 1), void 0 === a && (a = null), this.id = a, this.onCompleteFunc = i, 
            this.thisObject = n, this.postion = t, this.direction = o;
            var r = e.StageManager.getLayer(e.Layer.TOP), s = e.DisplayUtil.getGlobalBounds(this);
            this.x = s.x + .5 * s.width, this.y = s.y + .5 * s.height, r.addChild(this), this.arcMoveToPosition();
        }, i.prototype.arcMoveToPosition = function() {
            var e = this, t = this;
            if (this.id) {
                var i = gateModel.getGateByLockType(this.id);
                i && (t.target.guide = i.id);
            }
            egret.Tween.get(this).to({
                x: this.postion.x,
                y: this.postion.y,
                scaleX: .1,
                scaleY: .1
            }, 600, egret.Ease.quadOut).call(function() {
                t.dispose(), game.TutorialPointer.instance.pointTarget(t.target, function() {
                    t.onCompleteFunc.call(t.thisObject);
                }, 0, e.direction);
            });
        }, i.prototype.dispose = function() {
            this.parent && this.parent.removeChild(this);
        }, i;
    }(e.EffectImageButton);
    e.FloatIcon = t, __reflect(t.prototype, "hortor.FloatIcon");
}(hortor || (hortor = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.effect = null, e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.tiaodaiArmature = new e.ArmaturePlayer("tiaodai"), this.aniGroup.addChild(this.tiaodaiArmature), 
            this.tiaodaiArmature.x = 320, this.tiaodaiArmature.y = 70;
        }, i.prototype.onOpen = function() {
            this.tiaodaiArmature.play("caizhong", 1);
        }, i.prototype.onData = function() {
            var t = e.ItemManager.getItemInfo(this.data);
            this.iconImg.source = t.icon, this.descTxt.text = t.desc;
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i;
    }(e.WindowBase);
    e.ItemTipWindow = t, __reflect(t.prototype, "game.ItemTipWindow");
}(game || (game = {}));

var hortor;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.isInited = !1, e.isShowing = !1, e.noticesList = [], e.addEventListener(egret.Event.COMPLETE, e.onInit, e), 
            e.skinName = NoticeSkin, e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.isInited = !0, this.okBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onOkBtn, this), 
            this.noticesList.length > 0 && this.showNotice();
        }, i.prototype.notice = function(e) {
            this.noticesList.push(e), this.isInited && (this.showNotice(), e && 1 == e.action && EventCenter.sendEvent(EventConst.ReportBuildStatus, e.values));
        }, i.prototype.showNotice = function() {
            var t = this;
            if (!this.isShowing) {
                this.msg_txt.text = "", this.msg_txt.textFlow = [], this.isShowing = !0;
                var i = this.noticesList.shift();
                switch (i.action) {
                  case 1:
                    var n = i.from_name || "", o = "", a = Const.BuildingName[i.values[1]] || "", r = "";
                    0 == i.values[0] ? (o = "攻击了你的", r = "，但被你的护盾防御住了", playerModel.shields--) : 1 == i.values[0] ? (o = "攻击了你的", 
                    r = "，但被你的宠物防御住了") : 2 == i.values[0] ? (o = "损坏了你的", r = "，快去复仇吧", islandModel.buildings[i.values[1]].status = 1, 
                    EventCenter.sendEvent(EventConst.RefreshBuilds)) : 3 == i.values[0] ? (o = "摧毁了你的", 
                    r = "，快去复仇吧", islandModel.buildings[i.values[1]].level = 0, islandModel.buildings[i.values[1]].status = 2, 
                    islandModel.buildings[i.values[1]].attackHeadImg = i.from_headimg, islandModel.buildings[i.values[1]].attackUid = i.from_uid, 
                    islandModel.buildings[i.values[1]].checksum = i.values[3], EventCenter.sendEvent(EventConst.CrownsChange), 
                    EventCenter.sendEvent(EventConst.CheckPaoLock), EventCenter.sendEvent(EventConst.RefreshBuilds)) : 5 == i.values[0] ? (o = "攻击了你的", 
                    r = "，但被你的迷你盾防御住了", islandModel.buildings[i.values[1]].isShield = !1, EventCenter.sendEvent(EventConst.MiniShieldRefresh)) : 6 == i.values[0] ? (o = "攻击了你的", 
                    r = "，但被你的互助盾防御住了", playerModel.shieldEnergy = 0) : 7 == i.values[0] && (o = "攻击了你的", 
                    r = "，但被你的CP成功防御了", playerModel.couple.coupleShieldCount = 0, EventCenter.sendEvent(EventConst.CPShieldChange, {
                        type: "del"
                    })), this.msg_txt.textFlow.push({
                        text: n,
                        style: {
                            textColor: 15363328
                        }
                    }), this.msg_txt.textFlow.push({
                        text: o,
                        style: {
                            textColor: 7408138
                        }
                    }), this.msg_txt.textFlow.push({
                        text: a,
                        style: {
                            textColor: 15363328
                        }
                    }), this.msg_txt.textFlow.push({
                        text: r,
                        style: {
                            textColor: 7408138
                        }
                    });
                    break;

                  case 2:
                    var n = i.from_name || "", o = "偷走了你", s = game.ComFunc.toThousands(i.values[0]), r = "金币，快去复仇吧";
                    this.msg_txt.textFlow.push({
                        text: n,
                        style: {
                            textColor: 15363328
                        }
                    }), this.msg_txt.textFlow.push({
                        text: o,
                        style: {
                            textColor: 7408138
                        }
                    }), this.msg_txt.textFlow.push({
                        text: s,
                        style: {
                            textColor: 15363328
                        }
                    }), this.msg_txt.textFlow.push({
                        text: r,
                        style: {
                            textColor: 7408138
                        }
                    }), playerModel.money -= i.values[0], EventCenter.sendEvent(EventConst.GoldChange);
                    break;

                  case 4:
                    var n = i.from_name || "";
                    this.msg_txt.textFlow.push({
                        text: n,
                        style: {
                            textColor: 15363328
                        }
                    }), this.msg_txt.textFlow.push({
                        text: "通缉了你，请注意防备！",
                        style: {
                            textColor: 7408138
                        }
                    });
                    break;

                  case 537:
                    if ("cpApply" == i.goodsId) {
                        var n = i.from_name || "";
                        this.msg_txt.textFlow.push({
                            text: n,
                            style: {
                                textColor: 15363328
                            }
                        }), this.msg_txt.textFlow.push({
                            text: "邀请你和Ta组CP",
                            style: {
                                textColor: 7408138
                            }
                        });
                    } else if ("cpReply" == i.goodsId) {
                        var n = i.from_name || "";
                        this.msg_txt.textFlow.push({
                            text: n,
                            style: {
                                textColor: 15363328
                            }
                        }), this.msg_txt.textFlow.push({
                            text: "同意和你组成CP啦！快去合成信物吧！",
                            style: {
                                textColor: 7408138
                            }
                        });
                    } else "cpShield" == i.goodsId && (this.msg_txt.textFlow.push({
                        text: "送你了CP盾牌，守护在你的身前",
                        style: {
                            textColor: 7408138
                        }
                    }), playerModel.couple.coupleShieldCount = 1);
                }
                egret.Tween.removeTweens(this.emojiImg), egret.Tween.removeTweens(this), this.emojiImg.scaleX = this.emojiImg.scaleY = 0, 
                this.emojiImg.visible = !1, this.headMask.source = 1 == i.gender ? "common_json.common_img_portrait1" : "common_json.common_img_portrait0", 
                1 == i.action && (this.emojiImg.visible = !0, 0 == i.values[0] || 1 == i.values[0] || 5 == i.values[0] || 6 == i.values[0] ? this.emojiImg.source = "notice_emoij0_png" : 2 == i.values[0] ? this.emojiImg.source = "notice_emoij1_png" : 3 == i.values[0] ? this.emojiImg.source = "notice_emoij2_png" : this.emojiImg.source = "notice_emoij0_png");
                var l = 0;
                islandModel.islandStatus != game.IslandStatus.BUILD ? l = 0 : 1 == i.action && (l = 600), 
                this.x = .5 * (e.StageManager.stageWidth - this.width), this.y = e.StageManager.stageHeight, 
                egret.Tween.get(this, {
                    loop: !1
                }).wait(l).to({
                    y: this.y = e.StageManager.stageHeight - this.height - 25
                }, 500).call(function() {
                    uiModel.onShow(game.UINameType.mainTipOkBtn, t.okBtn), egret.Tween.removeTweens(t), 
                    1 == i.action && t.showEmojiAni();
                }), util.setRemoteAvatar(this.head, i.from_headimg);
            }
        }, i.prototype.showEmojiAni = function() {
            var e = this;
            e && e.emojiImg && (e.emojiImg.scaleX = e.emojiImg.scaleY = .3, e.emojiImg.alpha = .3, 
            egret.Tween.get(e.emojiImg).wait(200).to({
                scaleX: 1.15,
                scaleY: 1.15,
                alpha: 1
            }, 300, egret.Ease.backOut).to({
                scaleX: 1,
                scaleY: 1
            }, 100).wait(200).to({
                scaleX: .8,
                scaleY: .8
            }, 100).to({
                scaleX: 1,
                scaleY: 1
            }, 100).to({
                scaleX: .8,
                scaleY: .8
            }, 100).to({
                scaleX: 1,
                scaleY: 1
            }, 100).to({
                scaleX: .8,
                scaleY: .8
            }, 100).to({
                scaleX: 1,
                scaleY: 1
            }, 100).wait(200).to({
                scaleX: .3,
                scaleY: .3,
                alpha: 0
            }, 200).call(function() {
                e && e.emojiImg && egret.Tween.removeTweens(e.emojiImg);
            }));
        }, i.prototype.hide = function(t) {
            var i = this;
            void 0 === t && (t = !1), egret.Tween.removeTweens(this.emojiImg), egret.Tween.removeTweens(this), 
            this.emojiImg.visible = !1, this.isShowing = !1, uiModel.onHide(game.UINameType.mainTipOkBtn);
            var n = egret.Tween.get(this);
            n.to({
                y: e.StageManager.stageHeight
            }, 300, egret.Ease.quadOut).call(function() {
                egret.Tween.removeTweens(i), t && (i.noticesList = []), i.noticesList.length > 0 && (i.isShowing = !1, 
                i.showNotice());
            });
        }, i.prototype.onOkBtn = function() {
            this.hide();
        }, i;
    }(eui.Component);
    e.Notice = t, __reflect(t.prototype, "hortor.Notice");
}(hortor || (hortor = {})), window.hortor.Notice = hortor.Notice;

var game;

!function(e) {
    var t = function(e) {
        function t() {
            var t = e.call(this) || this;
            return t.effect = null, t;
        }
        return __extends(t, e), t.prototype.onInit = function() {
            this.maskImg.addEventListener(egret.TouchEvent.TOUCH_TAP, this.closeBtnFunc, this);
        }, t.prototype.onOpen = function() {
            egret.Tween.get(this.hand, {
                loop: !0
            }).to({
                y: 11
            }, 200).to({
                y: 16
            }, 200).to({
                y: 21
            }, 200).to({
                y: 16
            }, 200);
        }, t.prototype.onClose = function() {
            egret.Tween.removeTweens(this.hand);
        }, t.prototype.prepare = function(e, t) {
            e(null);
        }, t.prototype.show = function(t, i, n, o, a) {
            return void 0 === n && (n = null), void 0 === o && (o = null), void 0 === a && (a = null), 
            e.prototype.show.call(this, hortor.StageManager.getLayer(hortor.Layer.TIP), i, n, o, a);
        }, t.prototype.closeBtnFunc = function() {
            this.hide();
        }, t;
    }(e.WindowBase);
    e.ShareH5Window = t, __reflect(t.prototype, "game.ShareH5Window");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.skinPath = "common/GuideTalkSkin", e.effect = null, e;
        }
        return __extends(i, t), i.prototype.talk = function(e, t, i) {
            var n = this;
            this.onEnd = t, this.onEndThisObject = i, this.talkInfo = e, this.callSafe(function() {
                n.modalBlocker.alpha = e.modal, n.show(hortor.StageManager.getLayer(hortor.Layer.TOP));
            });
        }, i.prototype.onInit = function() {
            this.modalBlocker = hortor.StageManager.createStageModalBlocker(), this.addChildAt(this.modalBlocker, 0), 
            this.roleArmature = new e.ArmaturePlayer("npc"), this.roleGroup.addChild(this.roleArmature), 
            this.roleArmature.x = 80, this.roleArmature.y = 413, this.group.horizontalCenter = .5 * -hortor.StageManager.stageWidth, 
            this.roleArmature.play(this.talkInfo.role, 1), this.roleArmature.stop();
        }, i.prototype.onOpen = function() {
            var e = this;
            this.fillText(), egret.Tween.get(this.group).to({
                horizontalCenter: 0
            }, 500, egret.Ease.backOut).call(function() {
                e.roleArmature.play(e.talkInfo.role, 1);
            }), this.stage.addEventListener(egret.TouchEvent.TOUCH_END, this.onTouchContinue, this);
        }, i.prototype.hide = function(e) {
            var i = this;
            return void 0 === e && (e = !1), null != this.stage && (this.stage.removeEventListener(egret.TouchEvent.TOUCH_END, this.onTouchContinue, this), 
            egret.Tween.get(this.group).to({
                horizontalCenter: .5 * -hortor.StageManager.stageWidth
            }, 400, egret.Ease.backIn).call(function() {
                return t.prototype.hide.call(i, e);
            })), !0;
        }, i.prototype.updateText = function(e) {
            this.msg_txt.text.length < this.talkInfo.content.length ? this.msg_txt.text = this.talkInfo.content.substr(0, this.msg_txt.text.length + 1) : this.fillText();
        }, i.prototype.fillText = function() {
            this.msg_txt.text = this.talkInfo.content, this.removeEventListener(egret.Event.ENTER_FRAME, this.updateText, this);
        }, i.prototype.onTouchContinue = function(e) {
            void 0 === e && (e = null), this.removeEventListener(egret.Event.ENTER_FRAME, this.updateText, this), 
            this.stage && this.stage.removeEventListener(egret.TouchEvent.TOUCH_END, this.onTouchContinue, this), 
            this.hide();
        }, i.prototype.onClose = function() {
            this.onEnd && (this.onEnd.call(this.onEndThisObject), this.onEnd = null);
        }, i;
    }(e.WindowBase);
    e.Talker = t, __reflect(t.prototype, "game.Talker");
}(game || (game = {}));

var hortor;

!function(e) {
    var t = function(e) {
        function t() {
            return e.call(this) || this;
        }
        return __extends(t, e), t.prototype.registCallBack = function(e, t, i) {
            this.onOkCallback = e, this.onCancleCallback = t, this.thisObj = i;
        }, t.prototype.onInit = function() {
            e.prototype.onInit.call(this), this.okBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onOk, this);
        }, t.prototype.onOk = function() {
            this.closeWindow(), this.onOkCallback && this.onOkCallback.call(this.thisObj);
        }, t.prototype.onClose = function() {
            e.prototype.onClose.call(this), this.onCancleCallback && this.onCancleCallback.call(this.thisObj);
        }, t;
    }(e.TemplatePanel);
    e.TemplateAlert = t, __reflect(t.prototype, "hortor.TemplateAlert");
}(hortor || (hortor = {})), window.hortor.TemplateAlert = hortor.TemplateAlert;

var hortor;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.isBreathing = !1, e.mSoundId = "panel_open", e.addEventListener(egret.Event.COMPLETE, e.onInit, e), 
            e.addEventListener(egret.TouchEvent.TOUCH_TAP, e.onTouchTap, e), e.addEventListener(egret.TouchEvent.TOUCH_RELEASE_OUTSIDE, e.onTouchTap, e), 
            e;
        }
        return __extends(i, t), i.prototype.onTouchTap = function(t) {
            this.mSoundId && e.SoundManager.playSound(this.mSoundId);
        }, Object.defineProperty(i.prototype, "soundId", {
            set: function(e) {
                this.mSoundId = e;
            },
            enumerable: !0,
            configurable: !0
        }), i.prototype.onInit = function() {
            var t = this;
            egret.callLater(function() {
                t.touchScaleEffect = new e.TouchScaleEffect(), t.breathEffect = new e.BreathEffect(), 
                t.touchScaleEffect.start(t), t.isBreathing && t.startBreath();
            }, this);
        }, i.prototype.startBreath = function() {
            this.isBreathing = !0, this.breathEffect && this.breathEffect.start(this);
        }, i.prototype.stopBreath = function() {
            this.isBreathing = !1, this.breathEffect && this.breathEffect.stop(this);
        }, i;
    }(eui.Button);
    e.EffectButton = t, __reflect(t.prototype, "hortor.EffectButton");
}(hortor || (hortor = {})), window.hortor.EffectButton = hortor.EffectButton;

var hortor;

!function(e) {
    var t = function(e) {
        function t() {
            return e.call(this) || this;
        }
        return __extends(t, e), t;
    }(eui.Component);
    e.TemplatePanelTab = t, __reflect(t.prototype, "hortor.TemplatePanelTab");
}(hortor || (hortor = {})), window.hortor.TemplatePanelTab = hortor.TemplatePanelTab;

var hortor;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.addEventListener(egret.Event.ADDED, e.onInit, e), e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.returnBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.returnScreen, this);
        }, i.prototype.returnScreen = function() {
            e.ScreenManager.back();
        }, i;
    }(eui.Component);
    e.TemplateScreen = t, __reflect(t.prototype, "hortor.TemplateScreen");
}(hortor || (hortor = {})), window.hortor.TemplateScreen = hortor.TemplateScreen;

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return t.call(this, hortor.StageManager.getLayer(hortor.Layer.SCREEN)) || this;
        }
        return __extends(i, t), i.prototype.onStateChanged = function(t, i) {
            i == hortor.WindowState.PREPARE ? uiModel.firstEnter || (e.ScreenLoading.instance.loadingState = !0) : i == hortor.WindowState.OPEN ? (e.ScreenLoading.instance.loadingState = !1, 
            hortor.NotificationManager.dispatch(e.NotificationType.SCREEN_ENTER, t.id)) : i == hortor.WindowState.CLOSE && (hortor.ResourceManager.unloadUnusedRes(), 
            hortor.NotificationManager.dispatch(e.NotificationType.SCREEN_CLOSE, t.id));
        }, i;
    }(hortor.WindowNavigator);
    e.GameScreenNavigator = t, __reflect(t.prototype, "game.GameScreenNavigator");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var i = t.call(this, hortor.StageManager.getLayer(hortor.Layer.WINDOW), hortor.ScaleBackEffect) || this;
            return i.wxOpenwindows = [], i.wxOpenwindows.push(e.WindowType.WINDOW_RECALLFRIEND_PLAYERS), 
            i.wxOpenwindows.push(e.WindowType.WINDOW_RECALLFRIEND_GROUP), i.wxOpenwindows.push(e.WindowType.WINDOW_WX_FRIEND), 
            i;
        }
        return __extends(i, t), i.prototype.onStateChanged = function(t, i) {
            if (i == hortor.WindowState.PREPARE) this.updateFrameRate(); else if (i == hortor.WindowState.LOADING) e.WindowLoading.instance.loadingState = !0; else if (i == hortor.WindowState.OPEN) {
                e.WindowLoading.instance.loadingState = !1;
                var n = gateModel.getGate(t.id);
                n && (n.isOpened = !0), hortor.NotificationManager.dispatch(e.NotificationType.WINDOW_ENTER, t.id);
            } else i == hortor.WindowState.CLOSE && (e.WindowLoading.instance.loadingState = !1, 
            this.updateFrameRate(), hortor.NotificationManager.dispatch(e.NotificationType.WINDOW_CLOSE, t.id), 
            e.WindowLoading.instance.loadingState = !1);
        }, i.prototype.updateFrameRate = function() {
            for (var e = !1, t = 0; t < this.wxOpenwindows.length; t++) {
                var i = this.wxOpenwindows[t];
                if (hortor.WindowManager.isActive(i)) {
                    e = !0;
                    break;
                }
            }
            var n = e ? 60 : 40;
            hortor.StageManager.stage.frameRate = n;
        }, i;
    }(hortor.WindowNavigator);
    e.GameWindowNavigator = t, __reflect(t.prototype, "game.GameWindowNavigator");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.opened = !1, e.needHide = !1, e.skinPath = null, e;
        }
        return __extends(i, t), Object.defineProperty(i, "instance", {
            get: function() {
                return hortor.singletonFactory(i);
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(i.prototype, "loadingState", {
            set: function(e) {
                null != e && (e ? this.show(hortor.StageManager.getLayer(hortor.Layer.TIP)) : this.hide());
            },
            enumerable: !0,
            configurable: !0
        }), i.prototype.onInit = function() {
            this.animation = new e.ArmaturePlayer("loading"), this.addChild(this.animation);
        }, i.prototype.onOpen = function() {
            var t = this;
            this.needHide = !1, this.animation.x = .5 * hortor.StageManager.stageWidth, this.animation.y = .5 * hortor.StageManager.stageHeight, 
            soundModel.playSound(e.SoundType.SOUND_COMMON_CLOUD_ENTER), this.animation.play("enter", 1, function() {
                t.opened = !0, t.needHide ? t.hide() : (t.animation.play("loop", 0), soundModel.playSound(e.SoundType.SOUND_COMMON_CLOUD_LOOP, 0));
            });
        }, i.prototype.hide = function(i) {
            var n = this;
            return void 0 === i && (i = !1), this.needHide = !0, this.opened && this.animation && (this.opened = !1, 
            soundModel.stopSound(e.SoundType.SOUND_COMMON_CLOUD_LOOP), soundModel.playSound(e.SoundType.SOUND_COMMON_CLOUD_END), 
            this.animation.play("end", 1, function() {
                return t.prototype.hide.call(n, i);
            })), !0;
        }, i.prototype.onClose = function() {
            this.animation.stop();
        }, i.prototype.onLoading = function(e, t) {}, i;
    }(e.ScreenBase);
    e.ScreenLoading = t, __reflect(t.prototype, "game.ScreenLoading");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return t.call(this, e.CommonTabBig) || this;
        }
        return __extends(i, t), i;
    }(e.WindowGroup);
    e.WindowGroupBig = t, __reflect(t.prototype, "game.WindowGroupBig");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return t.call(this, e.CommonTabSmall) || this;
        }
        return __extends(i, t), i;
    }(e.WindowGroup);
    e.WindowGroupSmall = t, __reflect(t.prototype, "game.WindowGroupSmall");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(e) {
        function t() {
            var t = e.call(this) || this;
            return t.skinPath = "common/WindowLoading", t;
        }
        return __extends(t, e), Object.defineProperty(t, "instance", {
            get: function() {
                return hortor.singletonFactory(t);
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(t.prototype, "loadingState", {
            set: function(e) {
                var t = this;
                e ? (this.loadingTimeout && egret.clearTimeout(this.loadingTimeout), this.loadingTimeout = egret.setTimeout(function() {
                    t.show(hortor.StageManager.getLayer(hortor.Layer.TIP));
                }, this, 500)) : (this.loadingTimeout && egret.clearTimeout(this.loadingTimeout), 
                this.hide());
            },
            enumerable: !0,
            configurable: !0
        }), t.prototype.show = function(t, i, n, o, a) {
            return void 0 === n && (n = null), void 0 === o && (o = null), void 0 === a && (a = null), 
            e.prototype.show.call(this, t, i, n, o, a);
        }, t.prototype.onInit = function() {
            this.aniList = [];
            for (var e = hortor.ResourceManager.getViewResource("common"), t = 0; 4 > t; t++) {
                var i = e.createMovieClip("loadinge");
                i.frameRate = 8, this.aniContainer.addChild(i), i.x = 46 * t + 20, i.stop(), this.aniList.push(i);
            }
        }, t.prototype.onOpen = function() {
            for (var e = 0; 4 > e; e++) {
                var t = this.aniList[e];
                egret.setTimeout(t.play, t, 1e3 * Math.random());
            }
        }, t.prototype.onClose = function() {
            for (var e = 0; 4 > e; e++) {
                var t = this.aniList[e];
                t.stop();
            }
        }, t.prototype.onLoading = function(e, t) {}, t;
    }(e.WindowBase);
    e.WindowLoading = t, __reflect(t.prototype, "game.WindowLoading");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.skinPath = "common/CommonTabBigSkin", e;
        }
        return __extends(i, t), i.prototype.onData = function() {
            this.downIcon.source = e.ResourcePath.getTabbarIcon(this.data + "_icon_down"), this.upIcon.source = e.ResourcePath.getTabbarIcon(this.data + "_icon_up"), 
            this.upTitle.source = e.ResourcePath.getTabbarIcon(this.data + "_title_up"), this.downTitle.source = e.ResourcePath.getTabbarIcon(this.data + "_title_down");
            var t = gateModel.getGate(this.data);
            t ? t.bind("red", this.redPoint, "visible") : this.redPoint.visible = !1;
        }, i;
    }(e.ItemRenderBase);
    e.CommonTabBig = t, __reflect(t.prototype, "game.CommonTabBig");
}(game || (game = {})), window.CommonTabBig = game.CommonTabBig;

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.skinPath = "common/CommonTabSmallSkin", e;
        }
        return __extends(i, t), i.prototype.onData = function() {
            this.upTitle.source = e.ResourcePath.getTabbarIcon(this.data + "_title_up"), this.downTitle.source = e.ResourcePath.getTabbarIcon(this.data + "_title_down");
            var t = gateModel.getGate(this.data);
            t ? t.bind("red", this.redPoint, "visible") : this.redPoint.visible = !1;
        }, i;
    }(e.ItemRenderBase);
    e.CommonTabSmall = t, __reflect(t.prototype, "game.CommonTabSmall");
}(game || (game = {})), window.CommonTabSmall = game.CommonTabSmall;

var game;

!function(e) {
    var t = function(e) {
        function t() {
            var t = e.call(this) || this;
            return t.skinPath = "common/tooltip/SimpleAlertSkin", t.effect = new hortor.ScaleBackEffect(), 
            t;
        }
        return __extends(t, e), t.prototype.onData = function() {
            this.msgLabel.text = this.data.data, this.acceptArgs = this.data.acceptArgs, this.refuseArgs = this.data.refuseArgs, 
            this.root.okBtn.icon = this.acceptArgs && this.acceptArgs.icon ? this.acceptArgs.icon : "common_json.common_txt_qd";
            var e = this.acceptArgs && this.acceptArgs.callBack ? this.acceptArgs.callBack : null, t = this.refuseArgs && this.refuseArgs.callBack ? this.refuseArgs.callBack : null, i = this.acceptArgs && this.acceptArgs.thisObj ? this.acceptArgs.thisObj : null;
            this.root.registCallBack(e, t, i);
        }, t;
    }(e.WindowBase);
    e.SimpleAlertRenderer = t, __reflect(t.prototype, "game.SimpleAlertRenderer");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(e) {
        function t() {
            var t = e.call(this) || this;
            return t.skinPath = "common/tooltip/SimpleBubbleSkin", t.effect = new hortor.BubbleEffect(), 
            t;
        }
        return __extends(t, e), t.prototype.onInit = function() {}, t.prototype.onData = function() {
            this.msgLabel.text = this.data;
        }, t.prototype.onOpen = function() {
            this.hide();
        }, t.prototype.onClose = function() {
            hortor.ObjectPool.disposeObject(this);
        }, t;
    }(e.BaseTipRenderer);
    e.SimpleBubbleRenderer = t, __reflect(t.prototype, "game.SimpleBubbleRenderer");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(e) {
        function t() {
            var t = e.call(this) || this;
            return t.skinPath = "common/tooltip/SimpleTipSkin", t.effect = new hortor.FadeEffect(), 
            t;
        }
        return __extends(t, e), t.prototype.onInit = function() {}, t.prototype.onData = function() {
            this.msgLabel.text = this.data;
        }, t;
    }(e.BaseTipRenderer);
    e.SimpleTipRenderer = t, __reflect(t.prototype, "game.SimpleTipRenderer");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(e) {
        function t() {
            var t = e.call(this) || this;
            return t.skinPath = "common/tooltip/SimpleUiTipSkin", t;
        }
        return __extends(t, e), t.prototype.onInit = function() {
            this.bg.width = 300, this.bg.height = 40, this.msgLabel.x = this.msgLabel.y = 5, 
            this.msgLabel.width = 290;
        }, t.prototype.onData = function() {
            this.msgLabel.text = this.data, this.bg.height = Math.max(this.msgLabel.height + 10, this.bg.height), 
            this.msgLabel.y = this.bg.height - this.msgLabel.height >> 1;
        }, t;
    }(e.ViewBase);
    e.SimpleUiTipRenderer = t, __reflect(t.prototype, "game.SimpleUiTipRenderer");
}(game || (game = {}));

var game;

!function(e) {
    var t = function() {
        function t() {}
        return t.initialize = function(e, t, i) {
            var n = this;
            console.log("GameConfig initialize"), hortor.ResourceManager.loadText(e, function(e) {
                n.fromLocalConfig(e), hortor.SystemManager.isWxGame ? n.fromConfigRemote(t) : t.call(i);
            }, this, !1);
        }, t.fromLocalConfig = function(i) {
            var n = JSON.parse(i);
            t.version = n.version, t.channel = n.channel, t.resRoot = n.resRoot, t.apiRoot = n.apiRoot, 
            t.apiSecret = n.apiSecret, t.tcpRoot = n.tcpRoot, t.sdkServer = n.sdkServer, t.crossBoxId = n.crossBoxId, 
            t.gameId = n.gameId, t.showLog = 1 == n.showLog, t.weakLogin = 1 == n.weakLogin, 
            t.client = n.client, t.userId = n.userId, t.evn = "v" == t.client ? "Prod" : "Test", 
            e.ResourcePath.initialize(), console.log("config fromLocalConfig", n);
        }, t.fromLoginParams = function(e) {
            "" != e.channel && (t.channel = e.channel), "" != e.resourceCDN && (t.resRoot = e.resourceCDN), 
            "" != e.api && (t.apiRoot = e.api), "" != e.apiSecret && (t.apiSecret = e.apiSecret), 
            "" != e.secret && hortor.HttpService.s(e.secret), HttpService.urlRoot = "https://" + t.apiRoot, 
            console.log("config fromLoginParams", e);
        }, t.fromConfigRemote = function(e) {
            var i = "v" == t.client ? "gate" : t.client + "-api", n = "v" == t.client ? ".hortor.net" : ".hortorgames.com", o = "https://pirate-" + i + n + "/game/entry/query", a = t.client + t.version;
            HttpService.get(o, "clientVer=" + a, function(i) {
                console.log("config fromConfigRemote", i), t.apiRoot = i.apiServer, t.resRoot = i.cdnServer, 
                t.gameId = i.gameID, t.resRoot = "https://" + t.resRoot + "/resource/", t.sdkServer = "https://" + i.sdkServer, 
                HttpService.urlRoot = "https://" + t.apiRoot, console.log("sdkInit:", t.sdkServer, t.gameId), 
                platform.user.sdkInit(t.sdkServer, t.gameId, function(e) {
                    console.log("sdk init suc", e), t.wxShowUserBtn = e.openBtnGetUserInfo;
                }, t.evn), e();
            });
        }, t.fromLoginData = function(e) {
            t.apiSecret = e.secret, t.tcpRoot = e.broadcast;
            var i = e.secret;
            if (i && hortor.HttpService.u(i), e.hasOwnProperty("lastPostFriendSign")) {
                var n = e.lastPostFriendSign || 0;
                t.tcpSecret = JSON.stringify({
                    action: 99,
                    from_uid: playerModel.uid,
                    values: [ n ]
                });
            }
        }, Object.defineProperty(t, "showLog", {
            get: function() {
                return t.mShowLog;
            },
            set: function(e) {
                t.mShowLog = e, hortor.Log.showLog(e);
            },
            enumerable: !0,
            configurable: !0
        }), t.evn = "Test", t.wxShowUserBtn = !0, t.wxWallKey = "RFtzpNVAHFxK5H2l", t.wxWallGameId = "pirate-minigame", 
        t.stageWidth = 640, t.stageHeight = 1039, t;
    }();
    e.GameConfig = t, __reflect(t.prototype, "game.GameConfig");
}(game || (game = {}));

var game;

!function(e) {
    var t = function() {
        function e() {}
        return e.initialize = function() {}, e.getResUrlByVersion = function(e) {
            for (var t = [], i = 1; i < arguments.length; i++) t[i - 1] = arguments[i];
            return e = hortor.StringUtil.substitute(e, t);
        }, e.getSoundPath = function(t) {
            return e.getResUrlByVersion("assets/sound/{0}.mp3", t);
        }, e.getMovieClip = function(t) {
            return e.getResUrlByVersion("assets/movieclip/{0}/{0}.json", t);
        }, e.getTextureRes = function(t) {
            return e.getResUrlByVersion("assets/texture/{0}/{0}.json", t);
        }, e.getSkinRes = function(t) {
            return t ? e.getResUrlByVersion("resource/skins/{0}.exml", t) : null;
        }, e.getBgImage = function(t) {
            return e.getResUrlByVersion("assets/image/bg/{0}.jpg", t);
        }, e.getActBannerImage = function(t) {
            return e.getResUrlByVersion("assets/image/activity/{0}.png", t);
        }, e.getDragonPath = function(t) {
            return e.getResUrlByVersion("assets/dragon/{0}", t);
        }, e.getNoticeBannerPath = function(t) {
            return e.getResUrlByVersion("assets/image/banner/notice_img_banner{0}.png", t);
        }, e.getColorJigsaw = function(t) {
            var i = jigsawModel.jigsawInfo;
            return e.getResUrlByVersion("assets/image/jigsaw/piece" + i.series + "/jigsaw_big_" + i.series + "_" + t + ".png");
        }, e.getGrayJigsaw = function(t) {
            var i = jigsawModel.jigsawInfo;
            return e.getResUrlByVersion("assets/image/jigsaw/piece" + i.series + "/jigsaw_gray_" + i.series + "_" + t + ".png");
        }, e.getItemIconByName = function(t) {
            return e.getResUrlByVersion("assets/image/items/" + t + ".png");
        }, e.getTabbarIcon = function(t) {
            return e.getResUrlByVersion("assets/image/tabbar/" + t + ".png");
        }, e.getIslandImage = function(t) {
            return e.getResUrlByVersion("assets/image/islands/planet" + t + "/island_" + t + ".png");
        }, e.getIslandBuildings = function(t) {
            var i = t.split("_");
            return e.getResUrlByVersion("assets/image/islands/planet" + i[0] + "/" + t + ".png");
        }, e.getBuildingIconJson = function(t) {
            return e.getResUrlByVersion("assets/image/islands/planet" + t + "/buildingIcon" + t + ".json");
        }, e.getBuildingIconPng = function(t) {
            return e.getResUrlByVersion("assets/image/islands/planet" + t + "/buildingIcon" + t + ".png");
        }, e.getIslandMapImage = function(t, i) {
            return e.getResUrlByVersion("assets/image/islands/planet" + (t + 1) + "/map_" + t + "_" + i + ".png");
        }, e.getWorldMapIcon = function(t, i) {
            return e.getResUrlByVersion("assets/image/islands/planet" + (t + 1) + "/world_icon" + t + "_" + i + ".png");
        }, e.getWorldMapBg = function(t, i) {
            return e.getResUrlByVersion("assets/image/worldMap/worldN/w_map_" + t + "_" + i + ".png");
        }, e.getModuleUnlockTitle = function(t) {
            return e.getResUrlByVersion("assets/image/gnjs/gnjs_txt_" + t + ".png");
        }, e.getModuleUnlockBanner = function(t) {
            return e.getResUrlByVersion("assets/image/gnjs/gnjs_img_" + t + ".png");
        }, e.getHeadRandomPng = function(e) {
            var t = Math.floor(10 * Math.random() + 1), i = 1 == e ? "female" : "male", n = (util.getUrlParamMap(), 
            "assets/image/headimg/" + i + "/" + t + ".png");
            return n;
        }, e.getOpenFuncImg = function(t) {
            return e.getResUrlByVersion("assets/image/openFunc/icon_" + t + ".png");
        }, e.getCommonImg = function(t) {
            return e.getResUrlByVersion("assets/image/commonImg/" + t + ".png");
        }, e.getOpenFuncTitleImg = function(t) {
            return e.getResUrlByVersion("assets/image/openFunc/title_" + t + ".png");
        }, e.getOpenFuncDescImg = function(t) {
            return e.getResUrlByVersion("assets/image/openFunc/desc_" + t + ".png");
        }, e.getLangPath = function() {
            return e.getResUrlByVersion("assets/config/lang.json");
        }, e.getTutorialConfig = function(t) {
            return e.getResUrlByVersion("assets/config/tutorial/" + t + ".json");
        }, e.getWxAuthImage = function() {
            return hortor.VersionManager.getResUrlByVersion("assets/image/platform/wx_AuthBtn.png");
        }, e.getWxAuthBgImage = function() {
            return hortor.VersionManager.getResUrlByVersion("assets/image/platform/wx_authBg.png");
        }, e.md5Map = {}, e;
    }();
    e.ResourcePath = t, __reflect(t.prototype, "game.ResourcePath");
}(game || (game = {}));

var hortor;

!function(e) {
    var t = function(e) {
        function t() {
            var t = e.call(this) || this;
            return t.stroke = 3, t.shadow = 5, t.shadowColor = 13584392, t.strokeColor = 13795328, 
            t;
        }
        return __extends(t, e), t;
    }(e.BaseImage);
    e.EffectImage = t, __reflect(t.prototype, "hortor.EffectImage");
}(hortor || (hortor = {})), window.hortor.EffectImage = hortor.EffectImage;

var game;

!function(e) {
    var t = function() {
        function e() {}
        return e.Check_Focus = "client_focus", e.Check_Share = "client_share", e.Check_Pay = "client_pay", 
        e.Check_FreeEnergyDiffGroup = "client_freeEnergyDiffGroup", e.Check_ShareBtn = "client_shareBtn", 
        e.Check_ShareCallBack = "client_allShare", e.Check_Relogin = "client_relogin", e.Check_GameClub = "client_gameClub", 
        e.Check_Rest = "client_checkRest", e;
    }();
    e.AreaCheckType = t, __reflect(t.prototype, "game.AreaCheckType");
}(game || (game = {}));

var Province = {
    0: "未设置地区",
    110000: "北京",
    120000: "天津",
    310000: "上海",
    500000: "重庆",
    130000: "河北",
    140000: "山西",
    210000: "辽宁",
    220000: "吉林",
    230000: "黑龙江",
    320000: "江苏",
    330000: "浙江",
    340000: "安徽",
    350000: "福建",
    360000: "江西",
    370000: "山东",
    410000: "河南",
    420000: "湖北",
    430000: "湖南",
    440000: "广东",
    460000: "海南",
    510000: "四川",
    520000: "贵州",
    530000: "云南",
    610000: "陕西",
    620000: "甘肃",
    630000: "青海",
    710000: "台湾",
    540000: "西藏",
    150000: "内蒙古",
    640000: "宁夏",
    450000: "广西",
    650000: "新疆",
    810000: "香港",
    820000: "澳门",
    999999: "海外"
}, City = {
    0: {
        0: "未设置地区"
    },
    110000: {
        0: "北京"
    },
    120000: {
        0: "天津"
    },
    130000: {
        0: "未设置地区",
        130100: "石家庄",
        130200: "唐山",
        130300: "秦皇岛",
        130400: "邯郸",
        130500: "邢台",
        130600: "保定",
        130700: "张家口",
        130800: "承德",
        130900: "沧州",
        131000: "廊坊",
        131100: "衡水"
    },
    140000: {
        0: "未设置地区",
        140100: "太原",
        140200: "大同",
        140300: "阳泉",
        140400: "长治",
        140500: "晋城",
        140600: "朔州",
        140700: "晋中",
        140800: "运城",
        140900: "忻州",
        141000: "临汾",
        141100: "吕梁"
    },
    150000: {
        0: "未设置地区",
        150100: "呼和浩特",
        150200: "包头",
        150300: "乌海",
        150400: "赤峰",
        150500: "通辽",
        150600: "鄂尔多斯",
        150700: "呼伦贝尔",
        150800: "巴彦淖尔",
        150900: "乌兰察布",
        151000: "兴安",
        151100: "锡林郭勒",
        151200: "阿拉善"
    },
    210000: {
        0: "未设置地区",
        210100: "沈阳",
        210200: "大连",
        210300: "鞍山",
        210400: "抚顺",
        210500: "本溪",
        210600: "丹东",
        210700: "锦州",
        210800: "营口",
        210900: "阜新",
        211000: "辽阳",
        211100: "盘锦",
        211200: "铁岭",
        211300: "朝阳",
        211400: "葫芦岛"
    },
    220000: {
        0: "未设置地区",
        220100: "长春",
        220200: "吉林",
        220300: "四平",
        220400: "辽源",
        220500: "通化",
        220600: "白山",
        220700: "松原",
        220800: "白城"
    },
    230000: {
        0: "未设置地区",
        230100: "哈尔滨",
        230200: "齐齐哈尔",
        230300: "鸡西",
        230400: "鹤岗",
        230500: "双鸭山",
        230600: "大庆",
        230700: "伊春",
        230800: "佳木斯",
        230900: "七台河",
        231000: "牡丹江",
        231100: "黑河",
        231200: "绥化"
    },
    310000: {
        0: "上海"
    },
    320000: {
        0: "未设置地区",
        320100: "南京",
        320200: "无锡",
        320300: "徐州",
        320400: "常州",
        320500: "苏州",
        320600: "南通",
        320700: "连云港",
        320800: "淮安",
        320900: "盐城",
        321000: "扬州",
        321100: "镇江",
        321200: "泰州",
        321300: "宿迁"
    },
    330000: {
        0: "未设置地区",
        330100: "杭州",
        330200: "宁波",
        330300: "温州",
        330400: "嘉兴",
        330500: "湖州",
        330600: "绍兴",
        330700: "金华",
        330800: "衢州",
        330900: "舟山",
        331000: "台州",
        331100: "丽水"
    },
    340000: {
        0: "未设置地区",
        340100: "合肥",
        340200: "芜湖",
        340300: "蚌埠",
        340400: "淮南",
        340500: "马鞍山",
        340600: "淮北",
        340700: "铜陵",
        340800: "安庆",
        341000: "黄山",
        341100: "滁州",
        341200: "阜阳",
        341300: "宿州",
        341400: "巢湖",
        341500: "六安",
        341600: "亳州",
        341700: "池州",
        341800: "宣城"
    },
    350000: {
        0: "未设置地区",
        350100: "福州",
        350200: "厦门",
        350300: "莆田",
        350400: "三明",
        350500: "泉州",
        350600: "漳州",
        350700: "南平",
        350800: "龙岩",
        350900: "宁德"
    },
    360000: {
        0: "未设置地区",
        360100: "南昌",
        360200: "景德镇",
        360300: "萍乡",
        360400: "九江",
        360500: "新余",
        360600: "鹰潭",
        360700: "赣州",
        360800: "吉安",
        360900: "宜春",
        361000: "抚州",
        361100: "上饶"
    },
    370000: {
        0: "未设置地区",
        370100: "济南",
        370200: "青岛",
        370300: "淄博",
        370400: "枣庄",
        370500: "东营",
        370600: "烟台",
        370700: "潍坊",
        370800: "济宁",
        370900: "泰安",
        371000: "威海",
        371100: "日照",
        371200: "莱芜",
        371300: "临沂",
        371400: "德州",
        371500: "聊城",
        371600: "滨州",
        371700: "菏泽"
    },
    410000: {
        0: "未设置地区",
        410100: "郑州",
        410200: "开封",
        410300: "洛阳",
        410400: "平顶山",
        410500: "安阳",
        410600: "鹤壁",
        410700: "新乡",
        410800: "焦作",
        410900: "濮阳",
        411000: "许昌",
        411100: "漯河",
        411200: "三门峡",
        411300: "南阳",
        411400: "商丘",
        411500: "信阳",
        411600: "周口",
        411700: "驻马店",
        419001: "济源"
    },
    420000: {
        0: "未设置地区",
        420100: "武汉",
        420200: "黄石",
        420300: "十堰",
        420500: "宜昌",
        420600: "襄阳",
        420700: "鄂州",
        420800: "荆门",
        420900: "孝感",
        421000: "荆州",
        421100: "黄冈",
        421200: "咸宁",
        421300: "随州",
        422800: "恩施州"
    },
    430000: {
        0: "未设置地区",
        430100: "长沙",
        430200: "株洲",
        430300: "湘潭",
        430400: "衡阳",
        430500: "邵阳",
        430600: "岳阳",
        430700: "常德",
        430800: "张家界",
        430900: "益阳",
        431000: "郴州",
        431100: "永州",
        431200: "怀化",
        431300: "娄底"
    },
    440000: {
        0: "未设置地区",
        440100: "广州",
        440200: "韶关",
        440300: "深圳",
        440400: "珠海",
        440500: "汕头",
        440600: "佛山",
        440700: "江门",
        440800: "湛江",
        440900: "茂名",
        441200: "肇庆",
        441300: "惠州",
        441400: "梅州",
        441500: "汕尾",
        441600: "河源",
        441700: "阳江",
        441800: "清远",
        441900: "东莞",
        442000: "中山",
        445100: "潮州",
        445200: "揭阳",
        445300: "云浮"
    },
    450000: {
        0: "未设置地区",
        450100: "南宁",
        450200: "柳州",
        450300: "桂林",
        450400: "梧州",
        450500: "北海",
        450600: "防城港",
        450700: "钦州",
        450800: "贵港",
        450900: "玉林",
        451000: "百色",
        451100: "贺州",
        451200: "河池",
        451300: "来宾",
        451400: "崇左"
    },
    460000: {
        0: "未设置地区",
        460100: "海口",
        460200: "三亚",
        460300: "三沙"
    },
    500000: {
        0: "重庆"
    },
    510000: {
        0: "未设置地区",
        510100: "成都",
        510300: "自贡",
        510400: "攀枝花",
        510500: "泸州",
        510600: "德阳",
        510700: "绵阳",
        510800: "广元",
        510900: "遂宁",
        511000: "内江",
        511100: "乐山",
        511300: "南充",
        511400: "眉山",
        511500: "宜宾",
        511600: "广安",
        511700: "达州",
        511800: "雅安",
        511900: "巴中",
        512000: "资阳"
    },
    520000: {
        0: "未设置地区",
        520100: "贵阳",
        520200: "六盘水",
        520300: "遵义",
        520400: "安顺",
        522200: "铜仁",
        522400: "毕节"
    },
    530000: {
        0: "未设置地区",
        530100: "昆明",
        530300: "曲靖",
        530400: "玉溪",
        530500: "保山",
        530600: "昭通",
        530700: "丽江",
        530800: "普洱",
        530900: "临沧"
    },
    540000: {
        0: "未设置地区",
        540100: "拉萨",
        542100: "昌都",
        542200: "山南",
        542300: "日喀则",
        542400: "那曲",
        542500: "阿里",
        542600: "林芝"
    },
    610000: {
        0: "未设置地区",
        610100: "西安",
        610200: "铜川",
        610300: "宝鸡",
        610400: "咸阳",
        610500: "渭南",
        610600: "延安",
        610700: "汉中",
        610800: "榆林",
        610900: "安康",
        611000: "商洛"
    },
    620000: {
        0: "未设置地区",
        620100: "兰州",
        620200: "嘉峪关",
        620300: "金昌",
        620400: "白银",
        620500: "天水",
        620600: "武威",
        620700: "张掖",
        620800: "平凉",
        620900: "酒泉",
        621000: "庆阳",
        621100: "定西",
        621200: "陇南"
    },
    630000: {
        0: "未设置地区",
        630100: "西宁"
    },
    640000: {
        0: "未设置地区",
        640100: "银川",
        640200: "石嘴山",
        640300: "吴忠",
        640400: "固原",
        640500: "中卫"
    },
    650000: {
        0: "未设置地区",
        650100: "乌鲁木齐",
        650200: "克拉玛依",
        652100: "吐鲁番"
    },
    710000: {
        0: "未设置地区"
    },
    810000: {
        0: "未设置地区"
    },
    820000: {
        0: "未设置地区"
    },
    999999: {
        0: "未设置地区"
    }
}, XingZuo = {
    0: "未设置",
    1: "水瓶座",
    2: "双鱼座",
    3: "白羊座",
    4: "金牛座",
    5: "双子座",
    6: "巨蟹座",
    7: "狮子座",
    8: "处女座",
    9: "天秤座",
    10: "天蝎座",
    11: "射手座",
    12: "摩羯座"
}, FriendInfos = {
    0: "单身狗，求交友~",
    1: "简单的认识一下呗",
    2: "求伙伴，一起玩游戏~",
    3: "无聊！一起聊聊天~",
    4: "来啊！互相伤害啊！",
    5: "互帮互助小伙伴！"
}, SexInfos = {
    0: "女",
    1: "男"
}, game;

!function(e) {
    var t = function() {
        function e() {}
        return e.JIgsawWindow = "jisgawWindow", e.OctopusBgMove = "octopusBgMove", e.OctopusScreen = "octopusScreen", 
        e.OctopusFriend = "octopusFriend", e.OctopusWindow = "octopusWindow", e.RunningGiftWindow = "runningGiftWindow", 
        e.PetSkill = "petSkill", e.PetHatch = "petHatch", e.PetForever = "petForever", e.PetHatchWindow = "petHatchWindow", 
        e.WheelEnergy = "wheelEnergy", e.MapUpdateMoneyBox = "MapUpdateMoneyBox", e.DailyEnergy = "Dailyenergy", 
        e.InvitationVIP = "InvitationVIP", e.AnnualWindow = "AnnualWindow", e;
    }();
    e.ClockType = t, __reflect(t.prototype, "game.ClockType");
}(game || (game = {}));

var EventConst = {
    Test: "changeFroze",
    MovieClip_COMPLETE: "movieClipComplete",
    GoldChange: "goldChange",
    EnergyChange: "EnergyChange",
    CrownsChange: "CrownsChange",
    RefreshBuilds: "RefreshBuilds",
    ShieldChange: "shieldChange",
    OpenMenuBtn: "OpenMenuBtn",
    CloseMenuBtn: "CloseMenuBtn",
    AttackTarget: "AttackTarget",
    CloseShareUI: "CloseShareUI",
    RefreshFreeEnergy: "RefreshFreeEnergy",
    openDAPAO: "openDAPAO",
    closeDAPAO: "closeDAPAO",
    IslandMove: "IslandMove",
    IslandMoveBack: "IslandMoveBack",
    WheelMove: "WheelMove",
    WheelForAttack: "WheelForAttack",
    WheelForAttackBack: "WheelForAttackBack",
    WheelForSteal: "WheelForSteal",
    WheelForStealBack: "WheelForStealBack",
    WheelForStealOver: "WheelForStealOver",
    CloudGO: "CloudGO",
    CloudBACK: "CloudBACK",
    AdjustDAPAO: "AdjustDAPAO",
    AdjustDAPAOOver: "AdjustDAPAOOver",
    islandOver: "islandOver",
    toBuild: "toBuild",
    BuildOrFixEffect: "BuildOrFixEffect",
    BuyMiner: "buyMiner",
    RefreshButton: "RefreshButton",
    RefreshHateNode: "RefreshHateNode",
    hiddenAttackTop: "hiddenAttackTop",
    RequestError: "requestError",
    toRankIslands: "toRankIslands",
    toRankIslandsNew: "toRankIslandsNew",
    WheelForRank: "WheelForRank",
    WheelForRankBack: "WheelForRankBack",
    toRankIslandsBack: "toRankIslandsBack",
    CrownsChangeEffect: "CrownsChangeEffect",
    AllIslandOver: "AllIslandOver",
    ShowMapBtn: "ShowMapBtn",
    MenuRedPoint: "MenuRedPoint",
    FoldBtnRedPoint: "FoldBtnRedPoint",
    loginRewardRedPoint: "loginRewardRedPoint",
    RefreshFriendList: "RefreshFriendList",
    GuideOver: "guideOver",
    GuideMark: "guideMark",
    toBuildRedPointOpen: "toBuildRedPointOpen",
    toBuildRedPointClose: "toBuildRedPointClose",
    IsShowBtnGroup: "isShowBtnGroup",
    GetSeniorShareEnergy: "GetSeniorShareEnergy",
    PlayOpenShareEnergyBoxAnim: "PlayOpenShareEnergyBoxAnim",
    QuickFriendTip: "QuickFriendTip",
    DailyRewardRefresh: "dailyRewardRefresh",
    UseJigsaw: "useJigsaw",
    sendJigsaw: "sendJigsaw",
    CheckJigsawGift: "checkJigsawGift",
    JigsawRefreshTop: "jigsawRefreshTop",
    JigsawRedPoint: "jigsawRedPoint",
    KiteRecvMaterial: "KiteRecvMaterial",
    RecallTakeInviteGift: "RecallTakeInviteGift",
    RecallPrivateChatTask: "RecallPrivateChatTesk",
    DealFriendAdd: "dealFriendAdd",
    MessageRefresh: "messageRefresh",
    MailRefresh: "mailRefresh",
    MailSetBan: "mailSetBan",
    refreshPetStatus: "refreshPetStatus",
    EggHatchOver: "EggHatchOver",
    openButtonLayerButton: "openButtonLayerButton",
    RefreshPetProps: "RefreshPetProps",
    closeFocusPoint: "closeFocusPoint",
    petGroupDown: "petGroupDown",
    petGroupUp: "petGroupUp",
    hideBuildGroup: "hideBuildGroup",
    refreshTaptitansItemCount: "refreshShellCount",
    refreshTaptitansBtnPoint: "refreshTaptitansBtnPoint",
    MiniShieldUsed: "MiniShieldUsed",
    MiniShieldRefresh: "MiniShieldRefresh",
    worldMapRefreshFriendsCountLabel: "worldMapRefreshFriendsCountLabel",
    RefreshWorldMapFriends: "RefreshWorldMapFriends",
    RefreshWorldMapView: "refreshWorldMapView",
    initDoubleGold: "initDoubleGold",
    openRecallTips: "openRecallTips",
    RecallRewardPoint: "RecallRewardPoint",
    SetSignature: "setSignature",
    RefreshTreasureUI: "RefreshTreasureUI",
    TreasureOpenBox: "TreasureOpenBox",
    refreshTreasureJoinCount: "refreshTreasureJoinCount",
    TreasureGoldEffect: "TreasureGoldEffect",
    SendOctopus: "SendOctopus",
    updateMoonCake: "updateMoonCake",
    updateMoonCakeBox: "updateMoonCakeBox",
    GetOctopus: "GetOctopus",
    GetMoonCake: "GetMoonCake",
    OctopusRedPoint: "OctopusRedPoint",
    OctopusRefresh: "OctopusRefresh",
    refreshOctopusProp: "refreshOctopusProp",
    RefreshOctopusFriendsList: "RefreshOctopusFriendsList",
    OctopusPlayerHide: "octopusPlayerHide",
    openCloudEffect: "openCloudEffect",
    OctopusRefreshGift: "octopusRefreshGift",
    OctopusDown: "octopusDown",
    OctopusUp: "octopusUp",
    TreasureWSNews: "TreasureWSNews",
    TreasureVersion: "TreasureVersion",
    TreasureCloseEffect: "TreasureCloseEffect",
    guildChatMsg: "guildChatMsg",
    guildDonateJigsawSelected: "guildDonateJigsawSelected",
    guildDeleteMessage: "guildDeleteMessage",
    GuildSetting: "guildSetting",
    GuildDutyChange: "guildDutyChange",
    guildDonateJigsawClose: "guildDonateJigsawClose",
    guildDonateRefreshCounts: "guildDonateRefreshCounts",
    GuildChatNodeRefresh: "GuildChatNodeRefresh",
    GuildQuitMem: "GuildQuitMem",
    GuildDealApplyMember: "guildDealApplyMember",
    quitGuild: "quitGuild",
    GuildSignReward: "guildSignReward",
    GuildMemberChange: "guildMemberChange",
    GuildHallRefresh: "guildHallRefresh",
    GuildGetTaskReward: "guildGetTaskReward",
    refreshJigsawDonate: "refreshJigsawDonate",
    GuildTaskGoTo: "guildTaskGoTo",
    refreshGuildRedPoint: "refreshGuildRedPoint",
    PlayGuildTaskMC: "playGuildTaskMC",
    refreshGuildNoticeBtn: "refreshGuildNoticeBtn",
    GuildBuyMedal: "guildBuyMedal",
    refreshCashNums: "refreshCashNums",
    shareTypeChange: "shareTypeChange",
    RefreshBalance: "refreshBalance",
    ShareRedBagBack: "shareRedBagBack",
    closeNotices: "closeNotices",
    closeMenuView: "closeMenuView",
    PassIslandOver: "passIslandOver",
    ShieldEffect: "ShieldEffect",
    ClearAllApplyFriend: "clearAllApplyFriend",
    DeleteFriend: "deleteFriend",
    AddFriend: "addFriend",
    RefreshTaptitansRewardUI: "RefreshTaptitansRewardUI",
    gainIslandShare: "gainIslandShare",
    sailingMatchAdjustBoat: "sailingMatchAdjustBoat",
    refreshMatchRank: "refreshMatchRank",
    SailingCloseTask: "sailingCloseTask",
    SailingGetTask: "sailingGetTask",
    SailingTearUpTask: "sailingTearUpTask",
    SailingOver: "sailingOver",
    SailingStart: "sailingStart",
    SailingGetReward: "sailingGetReward",
    openChatPersonDelButton: "openChatPersonDelButton",
    WorldChatMsg: "worldChatMsg",
    PersonChatMsg: "personChatMsg",
    refreshHornCount: "refreshHornCount",
    refreshChatPrivateList: "refreshChatPrivateList",
    Guide11Next: "guide11Next",
    ShareSuccess: "shareSuccess",
    RefreshWheelRedPoint: "refreshWheelRedPoint",
    RefreshCollection: "refreshCollection",
    GetCollection: "getCollection",
    RefreshBeachPropNode: "RefreshBeachPropNode",
    playEffectAlphaOut: "playEffectAlphaOut",
    RefreshMagicBookCount: "refreshMagicBookCount",
    closeBeachNodeAlert: "closeBeachNodeAlert",
    ReBeachPowerView: "reBeachPowerView",
    RefreshOctopusRedPoint: "refreshOctopusRedPoint",
    RefreshMapRedPoint: "refreshMapRedPoint",
    refreshFeedbackNode: "refreshFeedbackNode",
    RefreshBeachRandom: "refreshBeachRandom",
    SailingStopAction: "SailingStopAction",
    SailingreStartAction: "SailingreStartAction",
    refreshMysticalEnergyNode: "refreshMysticalEnergyNode",
    refreshMysticalMoneyNode: "refreshMysticalMoneyNode",
    GetDoubleMoneyCard: "getDoubleMoneyCard",
    NightPlayerNode: "NightPlayerNode",
    planeAttackPlayers: "planeAttackPlayers",
    CheckPaoLock: "checkPaoLock",
    WorldMapFriendsGroup: "WorldMapFriendsGroup",
    treasureMapDigEvent: "treasureMapDigEvent",
    RBListRefresh: "rbListRefresh",
    DailyRedPoint: "dailyRedPoint",
    updateDragonBoatTileData: "updateDragonBoatTileData",
    GetActivityProp: "getActivityProp",
    updateOrdreHelpData: "updateOrdreHelpData",
    CloseKingEventPanel: "CloseKingEventPanel",
    CloseKingFriend: "CloseKingFriend",
    UpdateBoaterBuff: "UpdateBoaterBuff",
    RefreshInviteRedPoint: "refreshInviteRedPoint",
    ReceiveNotification: "ReceiveNotification",
    CoupleDivorce: "CoupleDivorce",
    CPShieldChange: "CPShieldChange",
    OPENFULLBOX_FINISH: "OpenBoxFinish",
    WXCLUBBUTTONHIDE: "WXCLUBBUTTONHIDE",
    WXCLUBBUTTONSHOW: "WXCLUBBUTTONSHOW",
    ReportEnergyCost: "ReportEnergyCost",
    ReportOctopusOpen: "ReportOctopusOpen",
    ReportAttackTitan: "ReportAttackTitan",
    ReportSendPrivateMsg: "ReportSendPrivateMsg",
    ReportGetFriendEnergy: "ReportGetFriendEnergy",
    ReportJigsawComplete: "ReportJigsawComplete",
    ReportGive: "ReportGive",
    ReportExchange: "ReportExchange",
    ReportSendWorldMsg: "ReportSendWorldMsg",
    ReportBuildStatus: "ReportBuildStatus",
    ReportShareSuccess: "ReportShareSuccess",
    updateFace: "updateFace",
    adaptMailList: "adaptMailList",
    updateFriendList: "updateFriendList",
    selectExchangeFinish: "selectExchangeFinish",
    selectExchangeOtherFinish: "selectExchangeOtherFinish",
    exchangeSendSuccess: "exchangeSendSuccess",
    recvPrivateChatMsg: "recvPrivateChatMsg",
    updateRecommendStatus: "updateRecommendStatus",
    showSpeedyAddWay: "showSpeedyAddWay",
    updateNewFriendList: "updateNewFriendList",
    foldEmailItem: "foldEmailItem",
    RefreshApplyShow: "RefreshApplyShow",
    updatePrivateChatReadStatus: "updatePrivateChatReadStatus",
    hideExchangeInfoInChatPrivate: "hideExchangeInfoInChatPrivate",
    updateWorldChatCDTime: "updateWorldChatCDTime",
    updateChatItemRedStatus: "updateChatItemRedStatus",
    updateKiteNewsRed: "updateKiteNewsRed"
}, game;

!function(e) {
    var t = function() {
        function e() {}
        return e.LP_PRELOADER = "1000", e;
    }();
    e.ReportType = t, __reflect(t.prototype, "game.ReportType");
}(game || (game = {}));

var game;

!function(e) {
    var t = function() {
        function e() {}
        return e.TEST_SCREEN = 0, e.LOADING_SCREEN = 1e3, e.PRELOAD_SCREEN = 1, e.WHEEL_SCREEN = 2, 
        e.ISLAND_SCREEN = 3, e.WORLD_SCREEN = 4, e.MAP_SCREEN = 5, e.PET_SCREEN = 6, e.GUILD_SCREEN = 7, 
        e.KILLTITAN_SCREEN = 8, e.OCTOPUS_SCREEN = 9, e.BEACH_SCREEN = 10, e.TREE_SCREEN = 11, 
        e.KITE_SCREEN = 12, e.PLANE_SCREEN = 13, e.DRAGONBOAT_SCREEN = 14, e.MONDAY_SCREEN = 15, 
        e.PIRATEKING_SCREEN = 16, e.TREASUREMAP_SCREEN = 17, e.CP_SCREEN = 18, e.GUILD_JOINSCREEN = 19, 
        e.GUILD_SAILING = 20, e.ISLANDSPACE = 21, e;
    }();
    e.ScreenType = t, __reflect(t.prototype, "game.ScreenType");
}(game || (game = {}));

var game;

!function(e) {
    var t = function() {
        function e() {}
        return e.LOGIN = "/game/basic/login", e.ROLLER = "/game/roller/roll", e.ISLAND_SHARE = "/game/island/share", 
        e.BUILD = "/game/island/build", e.REPAIR = "/game/island/repair", e.SHOW_ISLAND = "/game/island/show", 
        e.ATTACK = "/game/pvp/attack", e.STEAL = "/game/pvp/steal", e.SHARE = "/game/friend/share-reward", 
        e.SHARE_COIN_REWARD = "/game/friend/share-coin-reward", e.SHARE_WX_COIN_REWARD = "/game/sharecoinbox/open", 
        e.SHOW_DONATE = "/game/friend/show-donate", e.DONATE = "/game/friend/donate", e.FRIEND_RANK = "/game/rank/friend", 
        e.WORLD_RANK = "/game/rank/world", e.ENEMY_RANK = "/game/rank/enemy", e.VENGEANCE_RANK = "/game/rank/vengeance", 
        e.MESSAGE = "/game/basic/message", e.FRIEND_REWARD = "/game/friend/friend-reward", 
        e.RECALL_REWARD = "/game/friend/recall-reward", e.TUTORIAL = "/game/basic/tutorial", 
        e.ROBOT = "/game/basic/robot", e.SHOP_ORDER = "/game/shop/order", e.SHOP_LIST = "/game/shop/list", 
        e.WANTED = "/game/pvp/wanted", e.SETTING = "/game/basic/setting", e.MAP = "/game/island/map", 
        e.WORLD_MAP = "/game/island/world-map", e.MINER = "/game/island/miner", e.COLLECT = "/game/island/collect", 
        e.SUBSCRIBE_REWARD = "/game/friend/subscribe-reward", e.SUBSCRIBE_SET = "/game/friend/set-subscribed", 
        e.SHOW_FRIEND_REWARD = "/game/friend/show-friend-reward", e.MONTHCARD_REWARD = "/game/friend/monthcard-reward", 
        e.COUPONS = "/game/basic/coupons", e.LOGIN_REWARD = "/game/friend/login-reward", 
        e.TARGET_REWARD = "/game/friend/target-reward", e.DAILY_ENTER = "/game/friend/daily-reward-enter", 
        e.DAILY_REWARD = "/game/friend/daily-reward", e.JIGSAW_UPDATE = "/game/jigsaw/update", 
        e.JIGSAW_COMPOSE = "/game/jigsaw/compose", e.JIGSAW_DONATE = "/game/jigsaw/donate", 
        e.JIGSAW_LOG = "/game/jigsaw/log", e.JIGSAW_REPORT = "/game/jigsaw/report", e.JIGSAW_RECEIVE = "/game/jigsaw/receive", 
        e.FRIEND_DEL = "/game/friend/del", e.FRIEND_VERIFY = "/game/friend/verify", e.OPEN_MAIL = "/game/basic/open-mail", 
        e.SEND_MAIL = "/game/basic/send-mail", e.GET_ACTIVITIES = "/game/activity/getactivities", 
        e.CONNONCONTEST_RANK = "/game/rank/connoncontestrank", e.GET_CONNONCONTEST_RANK_AWARD_CONF = "/game/activity/getcannonrankawardconf", 
        e.GET_CONNON_SCORE_AWARD_INFO = "/game/activity/getcannonscoreawardinfo", e.GET_CONNON_SCORE_AWARD = "/game/activity/gaincannonscoreaward", 
        e.ISLAND_PROTECT = "/game/island/protect", e.BLACKLISTS = "/game/basic/blacklists", 
        e.SET_POSITION = "/game/basic/set-position", e.SHOW_INVITE_JBBX = "/game/activity/show-invite-money", 
        e.SHOW_INVITE_VIP = "/game/activity/show-invite-vip", e.DISPLAY_FRIEND = "/game/island/display-friend", 
        e.SHOW_XMAS = "/game/activity/show-xmas", e.XMAS_REWARD = "/game/activity/xmas-reward", 
        e.TREASURE_SHOW = "/game/treasure/show", e.TREASURE_LOG = "/game/treasure/log", 
        e.TREASURE_REWARD = "/game/treasure/reward", e.TREASURE_SHARE_REWARD = "/game/treasure/share-reward", 
        e.PET_COOKIE = "/game/pet/cookie", e.PET_POTION = "/game/pet/potion", e.PET_HATCH = "/game/pet/hatch", 
        e.PET_SHOW = "/game/pet/show", e.PET_SWITCH = "/game/pet/switch", e.PET_UPGRADE = "/game/pet/upgrade", 
        e.ISLAND_REWARD = "/game/island/reward", e.FRIEND_JOIN = "/game/friend/join", e.KILLTITAN_ENTER_TITAN = "/game/killtitan/enter-titan", 
        e.KILLTITAN_OPEN_TITAN = "/game/killtitan/open-titan", e.KILLTITAN_ATTACK_TITAN = "/game/killtitan/attack-titan", 
        e.KILLTITAN_GAIN_TITAN_AWARD = "/game/killtitan/gain-award", e.KILLTITAN_LIST = "/game/killtitan/list", 
        e.KILLTITAN_INVITE = "/game/killtitan/invite", e.KILLTITAN_GAIN_ALL_AWARD = "/game/killtitan/gainalltitanaward", 
        e.KILLTITAN_SHARE_REWARD = "/game/killtitan/share-reward", e.KILLTITAN_GET_PLAYER_SIMLE_INFO = "/game/basic/simple-player", 
        e.OPEN_TREASURE = "/game/treasure/open", e.SPEED_GIFT = "/game/shop/speed-gift", 
        e.OCTOPUS_SHOW = "/game/octopus/show", e.OCTOPUS_ENTER = "/game/octopus/enter", 
        e.OCTOPUS_OPEN = "/game/octopus/open", e.OCTOPUS_LOG = "/game/octopus/log", e.OCTOPUS_RECEIVE = "/game/octopus/receive", 
        e.OCTOPUS_REPORT = "/game/octopus/report", e.OCTOPUS_REWARD = "/game/octopus/reward", 
        e.OCTOPUS_DONATE = "/game/octupos/donate", e.OCTOPUS_LIST = "/game/octopus/list", 
        e.OCTOPUS_REFRESH = "/game/octopus/refresh", e.OCTOPUS_LOOK_REWARD = "/game/octopus/look-treasure-reward", 
        e.OCTOPUS_SHARE_REWARD = "/game/octopus/share-reward", e.OCTOPUS_TREASURE_ENTER = "/game/octopus/treasure-enter", 
        e.OCTOPUS_TREASURE_OPEN = "/game/octopus/treasure-open", e.OCTOPUS_TREASURE_REWARD = "/game/octopus/treasure-reward", 
        e.GUILD_CREATE = "/game/guild/create", e.GUILD_LIST = "/game/guild/list", e.GUILD_JOIN = "/game/guild/join", 
        e.GUILD_SEND_MESSAGE = "/game/guild/send-message", e.GUILD_SEARCH = "/game/guild/search", 
        e.GUILD_SHOW = "/game/guild/show", e.GUILD_SHOW_DONATE = "/game/guild/show-donate", 
        e.GUILD_REQUEST_DONATE = "/game/guild/request-donate", e.GUILD_CANCEL_DONATE = "/game/guild/cancel-donate", 
        e.GUILD_RESPONSE_DONATE = "/game/guild/response-donate", e.GUILD_RECEIVE_DONATE = "/game/guild/receive-donate", 
        e.GUILD_SETTING = "/game/guild/setting", e.GUILD_AUTHORIZE = "/game/guild/authorize", 
        e.GUILD_QUIT = "/game/guild/quit", e.GUILD_JOIN_REQUEST = "/game/guild/join-request", 
        e.GUILD_VERIFY = "/game/guild/verify", e.GUILD_DAILY_SIGN = "/game/guild/daily-sign", 
        e.GUILD_TASK_LIST = "/game/guild/task-list", e.GUILD_TASK_REWARD = "/game/guild/task-reward", 
        e.GUILD_SHOP_LIST = "/game/guild/shop-list", e.GUILD_SHOP_AWARD = "/game/guild/shop-award", 
        e.GUILD_SHOW_DAILY_WELFARE = "/game/guild/show-daily-welfare", e.GUILD_GOT_ATTENDANCE_REWARD = "/game/guild/got-attendance-reward", 
        e.GUILD_GOT_FEEDBACK_REWARD = "/game/guild/got-feedback-reward", e.GUILD_RENAME = "/game/guild/rename", 
        e.GUILD_RECRUIT = "/game/guild/recruit", e.GUILD_ACTIVITY_RECRUIT_SHOW = "/game/guildActivity/recruit-show", 
        e.GUILD_ACTIVITY_RECRUIT_REWARD = "/game/guildActivity/recruit-reward", e.CASH_COUNTER = "/game/cash/cash-counter", 
        e.CASH_SHOW = "/game/cash/show", e.CASH_ROLL = "/game/cash/roll", e.CASH_WITHDRAW = "/game/cash/withdraw", 
        e.OPEN_LETTER = "/game/cash/open-letter", e.CASH_RANK = "/game/cash/rank", e.CASH_SHARE = "/game/cash/share-cash", 
        e.CASH_LIST_INVITE = "/game/cash/list-invite", e.CASH_OPEN_INVITE = "/game/cash/open-invite", 
        e.CASH_SHARE_INVITE = "/game/cash/share-invite", e.CASH_INVITE_SHOP = "/game/cash/invite-shop", 
        e.CASH_INVITE_ORDER = "/game/cash/invite-order", e.CASH_INVITE_WITHDRAW = "/game/cash/invite-withdraw", 
        e.RACE_ARENA_DETAIL = "/game/race/arena-detail", e.RACE_CLOSE_TASK = "/game/race/close-task", 
        e.RACE_ENROLL = "/game/race/enroll", e.RACE_EXECUTE_TASK = "/game/race/execute-task", 
        e.RACE_MEMBER_DETAIL = "/game/race/member-detail", e.RACE_SHOW = "/game/race/show", 
        e.RACE_TASK_DETAIL = "/game/race/task-detail", e.RACE_TEARUP_TASK = "/game/race/tearup-task", 
        e.RACE_TROPHY_DETAIL = "/game/race/trophy-detail", e.RACE_RANK = "/game/race/rank", 
        e.RACE_RANK_REWARD = "/game/race/rank-reward", e.RACE_SCORE_REWARD = "/game/race/score-reward", 
        e.RACE_REWARD_DETAIL = "/game/race/reward-detail", e.RACE_CONTRIBUTIONS = "/game/race/contributions", 
        e.RACE_SUPPLY_DETAIL = "/game/race/supply-detail", e.RACE_SUPPLY_BUY = "/game/race/supply-buy", 
        e.RACE_SUPPLY_CONTRIBUTIONS = "/game/race/supply-contributions", e.CHAT_PRIVATE_DETAIL = "/game/chat/private-detail", 
        e.CHAT_PRIVATE_LIST = "/game/chat/private-list", e.CHAT_SEND_PRIVATE_MSG = "/game/chat/send-private-msg", 
        e.CHAT_SEND_WORLD_MSG = "/game/chat/send-world-msg", e.CHAT_SHOW_WORLD = "/game/chat/show-world", 
        e.CHAT_PRIVATE_DELETE = "/game/chat/delete-private-msg", e.CHAT_BLACKLIST = "/game/chat/blacklist", 
        e.CHAT_READ_PRIVATE_MSG = "/game/chat/read-private-msg", e.CHAT_REPORT = "/game/chat/report", 
        e.MORE_PLAYER = "/game/basic/more-player", e.SETTING_SHOW = "/game/basic/setting-show", 
        e.FRIEND_CLEAR = "/game/friend/clear", e.REWARD_INVITE_FRIEND = "/game/activity/reward-invite-friend", 
        e.REWARD_INVITE_GIFT = "/game/activity/reward-invite-gift", e.REWARD_INVITE_MONEY = "/game/activity/reward-invite-money", 
        e.INVITE_FRIEND_VIP = "/game/activity/invite-friend-vip", e.INVITE_FRIEND_VIP_REWARD = "/game/activity/invite-friend-vip-reward", 
        e.BEACH_ENTER = "/game/beach/enter", e.BEACH_SHOW_COLLECTION = "/game/beach/show-collection", 
        e.BEACH_REPORT = "/game/beach/report", e.BEACH_DONATE = "/game/beach/donate", e.BEACH_RECIEVE = "/game/beach/recieve", 
        e.BEACH_REWARD = "/game/beach/reward", e.BEACH_REFRESH_RECIPE = "/game/beach/refresh-recipe", 
        e.BEACH_LOGS = "/game/beach/logs", e.BEACH_COLLECT = "/game/beach/collect", e.BEACH_UPGRADE_SAILOR = "/game/beach/upgrade-sailor", 
        e.BEACH_SPEEDUP = "/game/beach/speed-up", e.BEACH_SAILOR = "/game/beach/sailor", 
        e.BEACH_REFRESH = "/game/beach/refresh", e.BEACH_MESSAGE = "/game/beach/message", 
        e.BEACH_FRIEND = "/game/beach/friend", e.BEACH_UPGRADE_RECIPE_SAILOR = "/game/beach/upgrade-recipe-sailor", 
        e.BEACH_CHEER = "/game/beach/cheer", e.BEACH_CHECK_NEW_ARRIVAL = "/game/beach/check-new-arrival", 
        e.BEACH_SHARE_REWARD = "/game/beach/share-reward", e.BEACH_ENEMY = "/game/beach/enemy", 
        e.BEACH_EXCHANGE = "/game/beach/exchange", e.BEACH_POTION = "/game/beach/potion", 
        e.BEACH_COLLECT_SHIPWRECK = "/game/beach/collect-shipwreck", e.BEACH_SHOW_GIFT = "/game/beach/show-gift", 
        e.BEACH_INVITE_REWARD = "/game/beach/invite-reward", e.BEACH_POTION_SHIPWRECK = "/game/beach/potion-shipwreck", 
        e.BEACH_CHEER_SHIPWRECK = "/game/beach/cheer-shipwreck", e.MENU_REWARD = "/game/friend/menu-reward", 
        e.SWAP_REQUEST = "/game/swap/request", e.SWAP_SHOW = "/game/swap/show", e.SWAP_CANCEL = "/game/swap/cancel", 
        e.SWAP_RESPONSE = "/game/swap/response", e.SWAP_RECEIVE = "/game/swap/receive", 
        e.BASIC_CHECK_BAG = "/game/basic/check-bag", e.ACHIEVEMENT_SHOW = "/game/achievement/show", 
        e.ACHIEVEMENT_REWARD = "/game/achievement/reward", e.ACHIEVEMENT_NEXT = "/game/achievement/next", 
        e.USER_ICON = "https://wx.hortor.net/gc/user-icon", e.SHOP_MYSTICAL_LIST = "/game/shop/mystical-list", 
        e.SHOP_MYSTICAL_ORDER = "/game/shop/mystical-order", e.SHOP_MYSTICAL_ORDER_FREE = "/game/shop/mystical-order-free", 
        e.SHOP_MYSTICAL_ROLL = "/game/shop/mystical-roll", e.BASIC_GUIDE = "/game/guide/update", 
        e.GUIDE_ACTIVITY = "/game/guide/activity", e.ANNUAL_COLLECT_SYNC = "/game/annualcollect/sync", 
        e.ANNUAL_COLLECT_DONATE = "/game/annualcollect/donate", e.ANNUAL_COLLECT_LOGS = "/game/annualcollect/logs", 
        e.ANNUAL_COLLECT_RECEIVE = "/game/annualcollect/receive", e.ANNUAL_COLLECT_REPORT = "/game/annualcollect/report", 
        e.ANNUAL_COLLECT_REWARD = "/game/annualcollect/reward", e.ANNUAL_COLLECT_SHOW = "/game/annualcollect/show", 
        e.ANNUAL_COLLECT_OPEN = "/game/annualcollect/open", e.ANNUAL_BALLOON_REWARD = "/game/annual/reward-balloon", 
        e.ANNUAL_REBATE_REWARD = "/game/annual/reward-rebate", e.ANNUAL_GIFT_ORDER = "/game/activity/annual-gift-order", 
        e.ANNUAL_SYNC = "/game/annual/sync", e.ANNUAL_OPEN_LUCKY_BOX = "/game/annual/open-lucky-box", 
        e.ANNUAL_OPEN_LUCKY_BOX2 = "/game/annual/open-lucky-box2", e.ANNUAL_BALLOON_TREASURE_REWARD = "/game/annual/reward-treasure-balloon", 
        e.TREE_ENTER = "/game/tree/enter", e.TREE_FILL = "/game/tree/fill", e.TREE_REWARD = "/game/tree/reward", 
        e.TREE_HELP_ME = "/game/tree/help-me", e.TREE_FRIEND = "/game/tree/friend", e.TREE_LOGS = "/game/tree/logs", 
        e.TREE_HELPOTHERS = "/game/tree/helpOthers", e.TREE_READSHAREHELPLOG = "/game/tree/readShareHelpLog", 
        e.KITE_ENTER = "/game/kite/enter", e.KITE_MAKE = "/game/kite/make", e.KITE_GIFT_OPEN = "/game/kite/open", 
        e.KITE_HELP_ME = "/game/tree/help-me", e.KITE_LOGS = "/game/kite/help-logs", e.KITE_MATERIAL_LOGS = "/game/kite/material-logs", 
        e.KITE_DONATE = "/game/kite/donate", e.KITE_RECV = "/game/kite/receive", e.KITE_REPORT = "/game/kite/report", 
        e.RECALL_ENTER = "/game/recall/enter", e.RECALL_SHARE_AWARD = "/game/recall/shareAward", 
        e.RECALL_SUC_LOG = "/game/recall/successLog", e.RECALL_ALL_LOG = "/game/recall/allLog", 
        e.RECALL_TAKE_GUIDER_REWARD = "/game/recall/guiderGetAward", e.RECALL_TAKE_TASK_REWARD = "/game/recall/getTaskAward", 
        e.NEWYEAR_SYNC = "/game/newYear/sync", e.NEWYEAR_SHOW_BLESSINGS = "/game/newYear/show-blessings", 
        e.NEWYEAR_FRIEND_BLESSING = "/game/newYear/friend-blessing", e.NEWYEAR_ROCKING = "/game/newYear/rocking", 
        e.NEWYEAR_ENERGY_REWARD = "/game/newYear/energy-reward", e.NEWYEAR_BLESSING = "/game/newYear/blessing", 
        e.NEWYEAR_OPEN_HIT_EGG_BOX = "/game/newYear/open-hit-egg-box", e.NEWYEAR_HIT_EGG = "/game/newYear/hit-egg", 
        e.NEWYEAR_BLESSING_REWARD = "/game/newYear/blessing-reward", e.NIGHT_READY = "/game/plane/ready", 
        e.NIGHT_READY_ENTER = "/game/plane/ready-enter", e.NIGHT_ENTER = "/game/plane/enter", 
        e.NIGHT_SYNC = "/game/plane/sync", e.NIGHT_CHECK = "/game/plane/check", e.NIGHT_ROLL = "/game/plane/roll", 
        e.NIGHT_CANCEL = "/game/plane/cancel", e.NIGHT_REWARD = "/game/plane/reward", e.NIGHT_SHOW_REWARD = "/game/plane/show-reward", 
        e.NIGHT_SCORE_REWARD = "/game/plane/score-reward", e.NIGHT_SHARE = "/game/plane/share", 
        e.NIGHT_RANK = "/game/plane/rank", e.NIGHT_HISTORY = "/game/plane/history", e.FRIEND_GETSIGN = "/game/friend/get-friendsign", 
        e.FRIEND_POSTSIGN = "/game/friend/post-friendsign", e.FRIEND_DELSIGN = "/game/friend/del-friendsign", 
        e.FRIEND_TOWNSMEN = "/game/friend/townsmen", e.WX_LOGIN = "/game/entry/wxgame", 
        e.WX_PLAYER = "/game/basic/player", e.WX_SUBSCRIBE_REWARD = "/game/friend/wxgame-subscribe-reward", 
        e.WX_VERIFY = "/game/basic/verify", e.WX_CHECK_VERIFY = "/game/basic/check-verify", 
        e.WX_CHECK_ACCOUNT = "/game/basic/check-account", e.WX_BIND_ACCOUNT = "/game/basic/bind-account", 
        e.WX_DAYSHARE_ENTER = "/game/dayShare/enter", e.WX_DAYSHARE_PLAYER_ENTER = "/game/dayShare/playerEnter", 
        e.WX_DAYSHARE_REWARD = "/game/dayShare/dayShareAward", e.WX_DAYSHARE_REWARD_BIG = "/game/dayShare/dayShareBigAward", 
        e.WX_DAYREDBAGSHARE_ENTER = "/game/dayShare/new-day-redpackage-info", e.WX_DAYREDBAGSHARE_REWARD = "/game/dayShare/new-day-redpackage-award", 
        e.CERTIFY_REWARDS = "/game/basic/certify-rewards", e.SHIELD_OPEN = "/game/shield/open", 
        e.SHIELD_CHARGE = "/game/shield/charge", e.SHIELD_LIST = "/game/shield/list", e.AD_REWARDS = "/game/basic/ad-rewards", 
        e.USER_AGREEMENT = "/game/basic/user-agreement", e.DRAGONBOAT_ENTER = "/game/dragonBoat/enter", 
        e.DRAGONBOAT_FRIENDS = "/game/dragonBoat/friends", e.DRAGONBOAT_SPIN = "/game/dragonBoat/spin", 
        e.DRAGONBOAT_REWARDBINGO = "/game/dragonBoat/rewardBingo", e.DRAGONBOAT_EATERINFO = "/game/dragonBoat/eaterInfo", 
        e.DRAGONBOAT_REWARDEATER = "/game/dragonBoat/rewardEater", e.DRAGONBOAT_HELPORDER = "/game/dragonBoat/helpOrder", 
        e.DRAGONBOAT_FINISHORDER = "/game/dragonBoat/finishOrder", e.DRAGONBOAT_HELPTILE = "/game/dragonBoat/helpTile", 
        e.DRAGONBOAT_NEWS = "/game/dragonBoat/news", e.DRAGONBOAT_GAININVITE = "/game/dragonBoat/rewardInvite", 
        e.DRAGONBOAT_INVITEINFO = "/game/dragonBoat/inviteInfo", e.DRAGONBOAT_FIXTILE = "/game/dragonBoat/fixTile", 
        e.DRAGONBOAT_LOGS = "/game/dragonBoat/donateLog", e.DRAGONBOAT_DONATE = "/game/dragonBoat/donate", 
        e.DRAGONBOAT_RECEIVE = "/game/dragonBoat/receive", e.PIRATEKING_ENTER = "/game/luffy/show", 
        e.PIRATEKING_ROLL = "/game/luffy/roll", e.PIRATEKING_FRIENDS = "/game/luffy/friends", 
        e.PIRATEKING_ENEMIES = "/game/luffy/enemies", e.PIRATEKING_HELP = "/game/luffy/help", 
        e.PIRATEKING_ATTACK = "/game/luffy/attack", e.PIRATEKING_RANK = "/game/luffy/rank", 
        e.PIRATEKING_REWARD = "/game/luffy/reward-box", e.PIRATEKING_EXCHANGE = "/game/luffy/reward-money", 
        e.PIRATEKING_GETDICE = "/game/luffy/got-dice", e.PIRATEKING_ACTION = "/game/luffy/action", 
        e.PIRATEKING_SHOWFRIEND = "/game/luffy/show-friend", e.PIRATEKING_LOG = "/game/luffy/logs", 
        e.PIRATEKING_SHARE_NOTIFY = "/game/luffy/share-enter", e.PIRATEKING_TUTORIAL = "/game/luffy/set-tutorial", 
        e.WORLDCUP_ENTER = "/game/worldCup/enter", e.WORLDCUP_BETON = "/game/worldCup/beton", 
        e.WORLDCUP_BETLOG = "/game/worldCup/bet-log", e.WORLDCUP_TAKEAWARD = "/game/worldCup/take-award", 
        e.WORLDCUP_SLOT = "/game/worldCup/slot", e.WORLDCUP_SLOTREWARD = "/game/worldCup/slot-times-award", 
        e.WORLDCUP_LUCKYDETAIL = "/game/worldCup/lucky-detail", e.WORLDCUP_SHARE = "/game/worldCup/share", 
        e.WORLDCUP_SHAREENTER = "/game/worldCup/share-enter", e.WORLDCUP_TAKESHAREJETTON = "/game/worldCup/take-share-jetton", 
        e.WORLDCUP_READSHAREHELPLOG = "/game/worldCup/read-share-log", e.WORLDCUP_MATCHHOT = "/game/worldCup/matchhot", 
        e.WORLDCUP_GUIDELINE = "/game/worldCup/guide-line", e.TREASUREMAP_ENTER = "/game/treasureMap/enter", 
        e.TREASUREMAP_DIG_OTHER = "/game/treasureMap/digOther", e.TREASUREMAP_DIG = "/game/treasureMap/dig", 
        e.TREASUREMAP_OPENBOX = "/game/treasureMap/openBox", e.TREASUREMAP_HELP = "/game/treasureMap/help", 
        e.TREASUREMAP_LIST = "/game/treasureMap/list", e.TREASUREMAP_MESSAGE = "/game/treasureMap/message", 
        e.TREASUREMAP_EXCHANGE = "/game/treasureMap/exchange", e.HELP_GIFT_SHOW = "/game/helpGift/show", 
        e.HELP_GIFT_REWARD = "/game/helpGift/reward", e.HELP_GIFT_HELP = "/game/helpGift/help", 
        e.PIN_REWARD = "/game/basic/pin-reward", e.ERROR_REPORT = "/game/basic/err-report", 
        e.CARVE_INFO = "/game/monday/info", e.CARVE_HELP = "/game/monday/help", e.CARVE_MARQUEUE = "/game/monday/marqueue", 
        e.CARVE_GETREWARD = "/game/monday/gainReward", e.BOATER_INFO = "/game/crew/info", 
        e.BOATER_ACCEPT = "/game/crew/accept", e.BOATER_HIRE = "/game/crew/hire", e.BOATER_FIRE = "/game/crew/fire", 
        e.BOATER_RECALL = "/game/crew/recall", e.BOATER_GUIDELINE = "/game/crew/crew-guideline", 
        e.REGRESS_SEND_BACK_MSG = "/game/back/send-back-msg", e.REGRESS_TAKE_NUM = "/game/back/take-num", 
        e.REGRESS_TAKE_ATTACH_GIFT = "/game/chat/take-attach-Gift", e.REFRESH_SHOW_BOX = "/game/basic/refresh-show-box", 
        e.FOCUS_GETREWARD = "/game/basic/subscribe-reward", e.CLEARBADGE = "/game/basic/ClearBadge", 
        e.FRIEND_NEARBY = "/game/friend/nearby-friend", e.FRIEND_ONLINE = "/game/friend/online-friend", 
        e.WX_SENOIRDAYREDBAGSHARE_ENTER = "/game/dayShare/new2-day-redpackage-info", e.WX_SENOIRDAYREDBAGSHARE_LINK = "/game/dayShare/new2-day-redpackage-click-link", 
        e.WX_SENIORDAYREDBAGSHARE = "/game/dayShare/new2-day-redpackage-share", e.WX_SENIORDAYREDBAGSHARE_REWARD = "/game/dayShare/new2-take-day-redpackage-box", 
        e.RECALL_INFO = "/game/friendNew/recall-list", e.RECALL_REWARD_NEW = "/game/friendNew/recall-reward", 
        e.COUPLE_ENTRY = "/game/couple/enter", e.COUPLE_ANSWER = "/game/couple/answer", 
        e.COUPLE_MATCH = "/game/couple/match-strangers", e.COUPLE_APPLY = "/game/couple/apply", 
        e.COUPLE_ABANDON = "/game/couple/match-dislike", e.COUPLE_FRIEND = "/game/couple/friends", 
        e.COUPLE_MESSAGE = "/game/couple/messages", e.COUPLE_MARQUEE = "/game/couple/marquee", 
        e.COUPLE_REPLY = "/game/couple/reply", e.COUPLE_RANK = "/game/couple/world-rank", 
        e.COUPLE_GETCP_BY_ID = "/game/couple/info", e.COUPLE_DIVORCE = "/game/couple/divorce", 
        e.COUPLE_SEND_SHIELD = "/game/couple/couple-send-shield", e.COUPLE_ANIMATION = "/game/couple/animation-played", 
        e.COUPLE_TUTORIAL = "/game/couple/finish-tutorial", e.COUPLE_SHARE_SUCCESS = "/game/couple/reward-share", 
        e.GZH_SUBSCRIBE_REWARD = "/game/basic/subscribe-reward", e.NEED_TO_REST = "/game/basic/need-to-rest", 
        e;
    }();
    e.ServerMsg = t, __reflect(t.prototype, "game.ServerMsg");
}(game || (game = {}));

var game;

!function(e) {
    var t = function() {
        function e() {}
        return e.getPetSound = function(e, t) {
            var i = [ "exp", "cookie", "levelup" ].indexOf(t);
            return i >= 0 ? "pet_" + t : "pet_" + e + "_" + t;
        }, e.MUSIC_MAIN = "bg_music", e.SOUND_ANNUAL_LUCKYBOX = "annual_luckyBox", e.SOUND_ATTACK_AIM_AT_TARGET = "attack_aim_at_target", 
        e.SOUND_BOMB_EXPLODE = "bomb_explode", e.SOUND_BOMB_FLYING = "bomb_flying", e.SOUND_CANNON_HIT_SHEILD = "cannon_hit_sheild", 
        e.SOUND_CANNON_SHEILD_CRASH = "cannon_sheild_crash", e.SOUND_CANNON_SHOOT = "cannon_shoot", 
        e.SOUND_CASH_RECEIVED = "cash_received", e.SOUND_COMMON_AWARD = "common_award", 
        e.SOUND_COMMON_BUTTON = "common_button", e.SOUND_COMMON_CLOSE = "common_close", 
        e.SOUND_COMMON_CLOUD_END = "common_cloud_end", e.SOUND_COMMON_CLOUD_ENTER = "common_cloud_enter", 
        e.SOUND_COMMON_CLOUD_LOOP = "common_cloud_loop", e.SOUND_COMMON_UNLOCK = "common_unlock", 
        e.SOUND_CRAD_ATTACKED = "crad_attacked", e.SOUND_CRAD_DIE = "crad_die", e.SOUND_CRAD_LOOP = "crad_loop", 
        e.SOUND_CRAD_START = "crad_start", e.SOUND_CRAD_STILL = "crad_still", e.SOUND_CRAD_WAKEUP = "crad_wakeup", 
        e.SOUND_DRAGONBOAT_BEATDRUMLOOP = "dragonBoat_beatDrumLoop", e.SOUND_DRAGONBOAT_OPENLOOP = "dragonBoat_openLoop", 
        e.SOUND_DRAGONBOAT_REDPACKAGE = "dragonBoat_redPackage", e.SOUND_DRAGONBOAT_REUSLT = "dragonBoat_reuslt", 
        e.SOUND_DRAGONBOAT_SMILE0 = "dragonBoat_smile0", e.SOUND_DRAGONBOAT_SMILE1 = "dragonBoat_smile1", 
        e.SOUND_DRAGONBOAT_START = "dragonBoat_start", e.SOUND_DRAGONBOAT_SUCCESS = "dragonBoat_success", 
        e.SOUND_FESTIVAL_1 = "festival_1", e.SOUND_FESTIVAL_2 = "festival_2", e.SOUND_FESTIVAL_3 = "festival_3", 
        e.SOUND_FIREWORKS_DISPLAY = "fireworks_display", e.SOUND_FREEENERGY_1 = "freeEnergy_1", 
        e.SOUND_GET10REWARDS = "Get10Rewards", e.SOUND_ISLAND_BOX_DROP = "island_box_drop", 
        e.SOUND_ISLAND_BOX_SHAKE = "island_box_shake", e.SOUND_ISLAND_PHOTO = "island_photo", 
        e.SOUND_ISLAND_SHOW_BOX = "island_show_box", e.SOUND_ISLAND_SHOW_MAP = "island_show_map", 
        e.SOUND_KING_ADVANCE = "king_advance", e.SOUND_KING_BACK = "king_back", e.SOUND_KING_DICE = "king_dice", 
        e.SOUND_KING_EACH_EVENT = "king_each_event", e.SOUND_KING_GET_DICE = "king_get_dice", 
        e.SOUND_KING_GET_SAILOR = "king_get_sailor", e.SOUND_KING_OVER_CIRCLE = "king_over_circle", 
        e.SOUND_KING_PASSIVE_ADVANCE = "king_passive_advance", e.SOUND_KING_START = "king_start", 
        e.SOUND_KING_STAY = "king_stay", e.SOUND_KING_THROW_BAD = "king_throw_bad", e.SOUND_KING_THROW_GOOD = "king_throw_good", 
        e.SOUND_LEVEL_SUCCESS = "level_success", e.SOUND_MINER_COIN_COLLECT = "miner_coin_collect", 
        e.SOUND_MONOPOLY_DICE = "monopoly_dice", e.SOUND_MONOPOLY_SHIP_MOVE = "monopoly_ship_move", 
        e.SOUND_MYSTICALSHOP = "mysticalShop", e.SOUND_OCTOPUS_AWAPEN = "octopus_awapen", 
        e.SOUND_OCTOPUS_CLOUD = "octopus_cloud", e.SOUND_OCTOPUS_HIT = "octopus_hit", e.SOUND_OCTOPUS_PULL = "octopus_pull", 
        e.SOUND_OCTOPUS_REWARD = "octopus_reward", e.SOUND_OCTOPUS_SHOOT = "octopus_shoot", 
        e.SOUND_OCTOPUS_SNORE = "octopus_snore", e.SOUND_OCTOPUS_WATER = "octopus_water", 
        e.SOUND_OPEN_EGG = "open_egg", e.SOUND_OPEN_EGG_WIN = "open_egg_win", e.SOUND_PANEL_CLOSE = "panel_close", 
        e.SOUND_PANEL_OPEN = "panel_open", e.SOUND_PET_BEAR_SELECT = "pet_bear_select", 
        e.SOUND_PET_BEAR_SKILL = "pet_bear_skill", e.SOUND_PET_BEAR_SLEEP = "pet_bear_sleep", 
        e.SOUND_PET_COOKIE = "pet_cookie", e.SOUND_PET_EAT = "pet_eat", e.SOUND_PET_EXP = "pet_exp", 
        e.SOUND_PET_LEVELUP = "pet_levelup", e.SOUND_PET_LVUP = "pet_lvUp", e.SOUND_PET_SEAL_SELECT = "pet_seal_select", 
        e.SOUND_PET_SEAL_SKILL = "pet_seal_skill", e.SOUND_PET_SEAL_SLEEP = "pet_seal_sleep", 
        e.SOUND_PLANE_ATTACK = "plane_attack", e.SOUND_PLANE_ATTACKED = "plane_attacked", 
        e.SOUND_PLANE_COMEON = "plane_comeon", e.SOUND_PLANE_DENGER = "plane_denger", e.SOUND_PLANE_FAIL = "plane_fail", 
        e.SOUND_PLANE_GRADEUP = "plane_gradeUp", e.SOUND_PLANE_READY = "plane_ready", e.SOUND_PLANE_READY2 = "plane_ready2", 
        e.SOUND_PLANE_SHIELD = "plane_shield", e.SOUND_PLANE_SHIELD2 = "plane_shield2", 
        e.SOUND_PLANE_SPEEDUP = "plane_speedup", e.SOUND_PLANE_STARDOWN = "plane_starDown", 
        e.SOUND_PLANE_START = "plane_start", e.SOUND_PLANE_STARUP = "plane_starUp", e.SOUND_PLANE_TOUCH1 = "plane_touch1", 
        e.SOUND_PLANE_TOUCH2 = "plane_touch2", e.SOUND_PLANE_VICTORY = "plane_victory", 
        e.SOUND_SAILING_APPLY = "sailing_apply", e.SOUND_SAILING_GETTASK = "sailing_getTask", 
        e.SOUND_SAILING_OVER = "sailing_over", e.SOUND_SAILING_ROW = "sailing_row", e.SOUND_SAILING_TEAR = "sailing_tear", 
        e.SOUND_STEAL_GOT_KING = "steal_got_king", e.SOUND_STEAL_MISS_KING = "steal_miss_king", 
        e.SOUND_STEAL_RESULT = "steal_result", e.SOUND_TAP_BOOM = "tap_boom", e.SOUND_TAP_HURT = "crad_attacked", 
        e.SOUND_TAP_SLEEP = "tap_sleep", e.SOUND_TAP_WAKE = "crad_wakeup", e.SOUND_TAP_STILL = "crad_still", 
        e.SOUND_TAP_LOOP = "crad_loop", e.SOUND_TAP_START = "crad_start", e.SOUND_TAP_DIE = "crad_die", 
        e.SOUND_TM_BAOXIANG = "tm_baoxiang", e.SOUND_TM_CHANZI = "tm_chanzi", e.SOUND_TUTORIAL_VOICE_1 = "tutorial_voice_1", 
        e.SOUND_TUTORIAL_VOICE_10 = "tutorial_voice_10", e.SOUND_TUTORIAL_VOICE_2 = "tutorial_voice_2", 
        e.SOUND_TUTORIAL_VOICE_3 = "tutorial_voice_3", e.SOUND_TUTORIAL_VOICE_4 = "tutorial_voice_4", 
        e.SOUND_TUTORIAL_VOICE_5 = "tutorial_voice_5", e.SOUND_TUTORIAL_VOICE_6 = "tutorial_voice_6", 
        e.SOUND_TUTORIAL_VOICE_7 = "tutorial_voice_7", e.SOUND_TUTORIAL_VOICE_8 = "tutorial_voice_8", 
        e.SOUND_TUTORIAL_VOICE_9 = "tutorial_voice_9", e.SOUND_UPGRADE_BUILD = "upgrade_build", 
        e.SOUND_UPGRADE_BUILD_DONE = "upgrade_build_done", e.SOUND_UPGRADE_BUILD_DONE_3 = "upgrade_build_done_3", 
        e.SOUND_USERRECALL_1 = "userRecall_1", e.SOUND_USERRECALL_2 = "userRecall_2", e.SOUND_USERRECALL_3 = "userRecall_3", 
        e.SOUND_VIEW_SWITCH_IN = "view_switch_in", e.SOUND_VIEW_SWITCH_OUT = "view_switch_out", 
        e.SOUND_WAWASTART = "wawaStart", e.SOUND_WAWAWHEEL = "wawaWheel", e.SOUND_WHEEL_APPEAR_1 = "wheel_appear_1", 
        e.SOUND_WHEEL_APPEAR_2 = "wheel_appear_2", e.SOUND_WHEEL_APPEAR_LOGIN = "wheel_appear_login", 
        e.SOUND_WHEEL_ATTACK_PREPARE = "wheel_attack_prepare", e.SOUND_WHEEL_BUTTON_DOWN = "wheel_button_down", 
        e.SOUND_WHEEL_BUTTON_UP = "wheel_button_up", e.SOUND_WHEEL_ENERGY = "wheel_energy", 
        e.SOUND_WHEEL_ENERGY_CHANGE = "wheel_energy_change", e.SOUND_WHEEL_ENERGY_START = "wheel_energy_start", 
        e.SOUND_WHEEL_ENERGY_TRANSFORM = "wheel_energy_transform", e.SOUND_WHEEL_ENERGY_USE = "wheel_energy_use", 
        e.SOUND_WHEEL_GOLD = "wheel_gold", e.SOUND_WHEEL_GOLD_MED = "wheel_gold_med", e.SOUND_WHEEL_GOT_ITEM = "wheel_got_item", 
        e.SOUND_WHEEL_ROT_END = "wheel_rot_end", e.SOUND_WHEEL_ROT_START = "wheel_rot_start", 
        e.SOUND_WHEEL_SHIELD_FULL = "wheel_shield_full", e.SOUND_WHEEL_SHIELD_GOT = "wheel_shield_got", 
        e.SOUND_WHEEL_SHIELD_START = "wheel_shield_start", e.SOUND_WHEEL_STEAL = "wheel_steal", 
        e.SOUND_WHEEL_STEAL_GONE = "wheel_steal_gone", e.SOUND_FREE_ENERGY = "freeEnergy_1", 
        e;
    }();
    e.SoundType = t, __reflect(t.prototype, "game.SoundType");
}(game || (game = {}));

var game;

!function(e) {
    var t = function() {
        function e() {}
        return e.mainMenuBtn = "mainMenuBtn", e.actMenuBtn = "actMenuBtn", e.actBtnGroup = "actBtnGroup", 
        e.actItem = "actItem", e.mineMenuBtn = "mineMenuBtn", e.menu = "menu", e.mainWheelBtn = "mainWheelBtn", 
        e.mainBuildBtn = "mainBuildBtn", e.buildItem = "buildItem", e.buildWheelBtn = "buildWheelBtn", 
        e.islandNameGroup = "islandNameGroup", e.buildBtn = "buildBtn", e.attackItem = "attackItem", 
        e.attackHateBtn = "attackHateBtn", e.attackFriendBtn = "attackFriendBtn", e.attackItemBtn = "attackItemBtn", 
        e.attackTipOkBtn = "attackTipOkBtn", e.stealTipOkBtn = "stealTipOkBtn", e.mainTipOkBtn = "mainTipOkBtn", 
        e.sugarGroup = "sugarGroup", e.payConfirmOkBtn = "payConfirmOkBtn", e.petGroup = "petGroup", 
        e.mineGroup = "mineGroup", e.eggOverBtn = "eggOverBtn", e.expGroup = "expGroup", 
        e.lvUpBtn = "lvUpBtn", e.foodGroup = "foodGroup", e.getMoney = "getMoney", e.addMine = "addMine", 
        e.buyBtn0 = "buyBtn0", e.fruit1 = "fruit1", e.dressBtn = "dressBtn", e.boater = "boater", 
        e;
    }();
    e.UINameType = t, __reflect(t.prototype, "game.UINameType");
}(game || (game = {}));

var game;

!function(e) {
    var t = function() {
        function e() {}
        return e.WINDOW_TEST = 1e3, e.WINDOW_INVITE = 1001, e.WINDOW_FOCUS_DAILY = 1004, 
        e.WINDOW_WXGAME_FOCUS = 1005, e.WINDOW_FOCUS_REWARD_TIP = 1007, e.WINDOW_FOCUS_GAME = 1001, 
        e.WINDOW_FOCUS_FORWXGAME = 1008, e.WINDOW_INVITE_VIP = 1009, e.WINDOW_MONTHCARD = 1010, 
        e.WINDOW_FESTERVAL = 1011, e.WINDOW_MYSTICAL = 1012, e.WINDOW_INVITE_GIFT = 1013, 
        e.WINDOW_DAILYGIFT = 1014, e.WINDOW_REALNAME_GIFT = 1015, e.WINDOW_SHARECHEER = 1017, 
        e.WINDOW_NEWBIE_GIFT = 1018, e.WINDOW_RUNNINGGIFT = 1019, e.WINDOW_PIRATEGIFT = 1021, 
        e.WINDOW_KITEGIFT = 1022, e.WINDOW_MEASUREGIFT = 1023, e.WINDOW_PARTYGIFT = 1024, 
        e.WINDOW_SETTING = 1025, e.WINDOW_QUICKFRIEND = 1026, e.WINDOW_WXRANK = 1027, e.WINDOW_SHOP = 1028, 
        e.WINDOW_JIGSAW = 1029, e.WINDOW_FESTEVAL = 1030, e.WINDOW_INVITEGIFT = 1031, e.WINDOW_NEWYEAR = 1032, 
        e.WINDOW_RECALL = 1033, e.WINDOW_INVITEREWARD = 1034, e.WINDOW_BOATER = 1035, e.WINDOW_WORLDCUP = 1036, 
        e.WINDOW_HELPGIFT = 1037, e.WINDOW_NOTICE = 1038, e.WINDOW_REWARD = 1039, e.WINDOW_RANK = 1040, 
        e.WINDOW_SETTINGINFO = 1041, e.WINDOW_PLAYER_EDIT = 1042, e.WINDOW_ATTACK_LIST = 1043, 
        e.WINDOW_MAIN_MENU = 1044, e.WINDOW_ACT_MENU = 1045, e.WINDOW_WX_CLUB = 1046, e.WINDOW_ENEMY = 1047, 
        e.WINDOW_MAIL = 1048, e.WINDOW_ISLANDBUIND = 1050, e.WINDOW_HELPLABEL = 1051, e.WINDOW_WANTED = 1052, 
        e.WINDOW_OPENBOX = 1053, e.WINDOW_SHAREISLAND = 1054, e.WINDOW_STEAL = 1055, e.WINDOW_ISLANDOVEREFFECT = 1056, 
        e.WINDOW_ISLANDOVERREWARD = 1057, e.GROUP_DAILYREWARD = 1002, e.GROUP_INVITEREWARD = 1003, 
        e.WINDOW_DAILY_SIGN = 1058, e.WINDOW_DAILY_ENERGY = 1059, e.WINDOW_FREE_ENERGY = 1060, 
        e.WINDOW_RECALL_REWARD = 1061, e.WINDOW_RECALLFRIEND_PLAYERS = 1062, e.WINDOW_RECALLFRIEND_GROUP = 1063, 
        e.WINDOW_NEWFRIEND = 1064, e.WINDOW_ATTACK_ISLAND = 1065, e.WINDOW_WNSP = 1066, 
        e.GROUP_NEWS = 1067, e.WINDOW_NEWS = 1068, e.WINDOW_PLAYERINFO = 1069, e.WINDOW_ACHIEVE = 1070, 
        e.WINDOW_INVITE_JBBX = 1071, e.WINDOW_ADDFRIEND = 1072, e.WINDOW_SHOP_GOODS = 1073, 
        e.WINDOW_NOTICEBAR = 1074, e.WINDOW_REGRESSGIFT = 1075, e.WINDOW_TAPTITANS = 1076, 
        e.WINDOW_TAPTITANS_FRIEND = 1077, e.WINDOW_JIGSAWBTN = 1078, e.WINDOW_INVITATIONLIST = 1079, 
        e.WINDOW_TAPTITANSFREESHELL = 1080, e.WINDOW_TAPTITANSAWARD = 1081, e.WINDOW_TAPTITANSASSIST = 1082, 
        e.GROUP_LIMITSALE = 1083, e.WINDOW_JIGSAWFRIEND = 1084, e.WINDOW_JIGSAWSENDPROP = 1085, 
        e.WINDOW_JIGSAWGETPROP = 1086, e.WINDOW_JIGSAWNEWS = 1087, e.WINDOW_JIGSAWOVER = 1088, 
        e.WINDOW_JIGSAWUSEMAGNA = 1089, e.WINDOW_TAPTITANSWIN = 1090, e.WINDOW_TAPTITANSHELP = 1091, 
        e.WINDOW_COMHELP = 1092, e.WINDOW_JIGSAWREWARD = 1093, e.WINDOW_PROTROCOL = 1094, 
        e.WINDOW_PRIVACY = 1095, e.WINDOW_EXCHANGEBYCODE = 1096, e.GROUP_FRIEND = 1097, 
        e.WINDOW_FRIEND = 1098, e.WINDOW_PRIVATE_CHAT_LIST = 1099, e.WINDOW_WORLD_CHAT = 1100, 
        e.WINDOW_EXCHANGE = 1137, e.GROUP_FRIEND_RECOMMEND = 1101, e.WINDOW_RECOMMEND_NEARBY = 1155, 
        e.WINDOW_RECOMMEND_ONLINE = 1156, e.WINDOW_NEW_FRIEND = 1157, e.WINDOW_OCTOPUS_FRIEND = 1102, 
        e.WINDOW_OCTOPUS_MES = 1103, e.WINDOW_OCTOPUS_REWARD = 1104, e.WINDOW_OCTOPUS_REWARDPOP = 1105, 
        e.WINDOW_OCTOPUS_NEWS = 1106, e.WINDOW_OCTOPUS_GETPROP = 1107, e.WINDOW_OCTOPUS_BTN = 1108, 
        e.WINDOW_OCTOPUS_SENDPROP = 1109, e.WINDOW_OCTOPUS_SENDFRIEND = 1110, e.WINDOW_RETURN = 1111, 
        e.WINDOW_RETURN_SHOW = 1112, e.WINDOW_OCTOPUS_HELP = 1113, e.WINDOW_OCTOPUS_PAYCONFIRM = 1114, 
        e.WINDOW_OCTOPUS_GAINREWARD = 1115, e.WINDOW_OFFICIALVIP = 1016, e.WINDOW_OFFICIALVIP_GET = 1117, 
        e.WINDOW_OFFICIALVIP_GUIDE = 1118, e.WINDOW_SHARE_GUIDE = 1119, e.WINDOW_MAP_MINE = 1127, 
        e.WINDOW_WORLDMAP = 1128, e.WINDOW_WXFOCUSTIP = 1129, e.WINDOW_OPEN_FUNC = 1130, 
        e.WINDOW_PRIVATE_CHAT = 1131, e.WINDOW_MODULEUNLOCK = 1140, e.WINDOW_TREESEEKHELPSHARE = 1146, 
        e.WINDOW_TREEAIDFRIEND = 1147, e.WINDOW_TREEDRESS = 1148, e.WINDOW_TREENEWS = 1149, 
        e.WINDOW_ITEM_TIP = 1145, e.WINDOW_PET_HATCH = 1158, e.WINDOW_PET_OPENEGG = 1159, 
        e.WINDOW_GUIDE_OVER = 1160, e.WINDOW_WHEEL_COUPLESHIELD = 1161, e.WINDOW_WHEEL_GOTOWHEELALERT = 1162, 
        e.WINDOW_GUILD_DONATE = 1200, e.WINDOW_GUILD_WELFARE = 1201, e.WINDOW_GUILD_APPLY = 1203, 
        e.WINDOW_GUILD_MEMBERLIST = 1204, e.WINDOW_GUILD_SUC = 1205, e.WINDOW_GUILD_FEEDBACK = 1206, 
        e.WINDOW_GUILD_FEEDBACK_SHOW = 1207, e.WINDOW_GUILD_SETTING = 1208, e.WINDOW_GUILD_SHOP = 1209, 
        e.WINDOW_GUILD_BUY = 1210, e.WINDOW_GUILD_NOTICE = 1211, e.WINDOW_GUILD_SYSTEM_NEWS = 1212, 
        e.WINDOW_GUILD_DONATE_NEWS = 1213, e.WINDOW_GUILD_POSTION = 1214, e.WINDOW_GUILD_OPERATION = 1215, 
        e.WINDOW_GUILD_INVITE = 1216, e.WINDOW_GUILD_RENAME = 1217, e.WINDOW_SAILING_DEPOT_INFO = 1218, 
        e.WINDOW_SAILING_REWARD_OPERATION = 1219, e.WINDOW_SAILING_MATCH_INFO = 1220, e.WINDOW_SAILING_MATCH_OPERATION = 1221, 
        e.WINDOW_SAILING_MATCH_CUP = 1222, e.WINDOW_SAILING_FINAL_REWARD = 1223, e.WINDOW_SAILING_REWARD = 1224, 
        e.WINDOW_SAILING_RANK = 1225, e.WINDOW_SAILING_TASK = 1226, e.WINDOW_SAILING_SCORE_RANK = 1227, 
        e.WINDOW_SAILING_WHEEL = 1228, e.WINDOW_SAILING_DEPOT = 1229, e.WINDOW_ADDREGRESSFRIEND = 1230, 
        e.WINDOW_WX_FRIEND = 1231, e.WINDOW_FESTIVALBALLOON = 1232, e.WINDOW_WXFOCUS_DESCNEW = 1233, 
        e.WINDOW_MULTIPLE_GOLD = 1234, e.WINDOW_REWARD_WITH_ACTION = 1235, e.WINDOW_JIGSAW_EXCHANG = 1236, 
        e.WINDOW_OCTOPUS_EXCHANG = 1237, e.WINDOW_EXCHANGE_RESPONSE = 1238, e.WINDOW_RANKUP = 1239, 
        e.WINDOW_WXFOCUS_NOREWARD = 1240, e.WINDOW_WHEEL_DOUBLECARD = 1241, e.WINDOW_OCTOPUS_PUFFERPOP = 1242, 
        e.WINDOW_BIND = 1243, e.WINDOW_RECOMMEND_ANIM = 1244, e.WINDOW_ANNUAL_MAIN = 1245, 
        e.WINDOW_ANNUAL_BTN = 1246, e.WINDOW_ANNUAL_SENDFRIEND = 1247, e.WINDOW_ANNUAL_SENDPROP = 1248, 
        e.WINDOW_ANNUAL_NEWS = 1249, e.WINDOW_ANNUAL_GETPROP = 1250, e.WINDOW_ANNUAL_REWARDPOP = 1251, 
        e.WINDOW_ANNUAL_WISHREWARD = 1252, e.WINDOW_ANNUAL_REBATREWARD = 1253, e.WINDOW_COMWITHHEADPANEL = 1254, 
        e.WINDOW_ANNUALBOX = 1255, e.WINDOW_ANNUAL_REWARD_LIST = 1256, e.WINDOW_ANNUAL_LOGS = 1257, 
        e.WINDOW_WALL_TASK = 1258, e.WINDOW_MYSTICAL_ENERGY_WHEEL = 1259, e.WINDOW_CP_TEMP = 1260, 
        e.WINDOW_KITE_MAIN = 1261, e.WINDOW_KITE_BTN = 1262, e.WINDOW_KITE_SENDFRIEND = 1263, 
        e.WINDOW_KITE_SENDPROP = 1264, e.WINDOW_KITE_NEWS = 1265, e.WINDOW_KITE_GETPROP = 1266, 
        e.WINDOW_KITE_REWARD = 1267, e.WINDOW_KITE_SUCCESSPOP = 1268, e.WINDOW_KITE_SCREEN = 1269, 
        e.WINDOW_BANNER_INFO = 1270, e;
    }();
    e.WindowType = t, __reflect(t.prototype, "game.WindowType");
}(game || (game = {}));

var game;

!function(e) {
    var t = function() {
        function t() {}
        return t.startTip = function(t, i) {
            if (void 0 === i && (i = 2e3), !e.TutorialManager.instance.newbieTutorialing && playerModel.island < 1) {
                var n = this.tipMap[t];
                null == n && (n = new TipObj(t, i), this.tipMap[t] = n), this.currentTip && this.currentTip != n && this.currentTip.stop(), 
                this.isInit || (this.isInit = !0, hortor.StageManager.stage.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onTouchStage, this), 
                hortor.NotificationManager.add(e.NotificationType.WINDOW_CLOSE, this.checkTip, this)), 
                n.reStart(), this.currentTip = n;
            }
        }, t.reset = function() {
            for (var e in this.tipMap) {
                var t = this.tipMap[e];
                t.isRunning && t.stop();
            }
        }, t.stopTip = function(e) {
            var t = this.tipMap[e];
            t.stop();
        }, t.checkTip = function() {
            this.onTouchStage(null);
        }, t.onTouchStage = function(e) {
            for (var t in this.tipMap) {
                var i = this.tipMap[t];
                i.isRunning && i.reStart();
            }
        }, t.tipMap = {}, t.isInit = !1, t;
    }();
    e.AutoTipManager = t, __reflect(t.prototype, "game.AutoTipManager");
}(game || (game = {}));

var TipObj = function() {
    function e(e, t) {
        this.isRunning = !1, this.isPointing = !1, this.id = e, this.time = t, this.timeOut = 0;
    }
    return e.prototype.reStart = function() {
        this.stop();
        var e = -1 != this.id.indexOf(game.UINameType.buildItem) && hortor.WindowManager.isOpen(game.WindowType.WINDOW_ISLANDBUIND);
        playerModel.island < 1 && enterManager.available && (!hortor.WindowManager.isModaling || e) && (this.isPointing = !1, 
        this.timeOut = egret.setTimeout(this.onTimeout, this, this.time)), this.isRunning = !0;
    }, e.prototype.stop = function() {
        this.timeOut && egret.clearTimeout(this.timeOut), this.isPointing && (this.isPointing = !1, 
        game.TutorialPointer.instance.hide()), this.isRunning = !1;
    }, e.prototype.onTimeout = function() {
        var e = -1 != this.id.indexOf(game.UINameType.buildItem) && hortor.WindowManager.isOpen(game.WindowType.WINDOW_ISLANDBUIND);
        playerModel.island < 1 && enterManager.available && (!hortor.WindowManager.isModaling || e) && (this.isPointing = !0, 
        game.TutorialPointer.instance.pointTargetByName(this.id, null, -1));
    }, e;
}();

__reflect(TipObj.prototype, "TipObj");

var game;

!function(e) {
    var t = function() {
        function t() {
            this.needEnter = !1, this.isEntered = !1, this.hasSubview = !1, hortor.NotificationManager.add(e.NotificationType.WINDOW_CLOSE, this.onWindowClose, this);
        }
        return t.prototype.reset = function() {
            this.isEntered = !1, this.hasSubview = !1, this.needEnter = !1;
        }, Object.defineProperty(t.prototype, "available", {
            get: function() {
                return this.needEnter && !this.isEntered ? !1 : !(e.TutorialManager.instance.tutorialing || e.OpenFuncManager.isRunning || e.NoticeManager.isRunning || 0 != playerModel.lastRollerType);
            },
            enumerable: !0,
            configurable: !0
        }), t.prototype.enter = function(t, i) {
            var n = this;
            return playerModel.tutorial >= 15 ? (this.needEnter = !0, messageModel.onInit(function() {
                n.start.call(n), i && i();
            })) : i && i(), t && t.shareType && t.shareType == e.ShareType.kiteAssist ? void hortor.Log.log("enterShareType=kiteAssist") : void 0;
        }, t.prototype.start = function() {
            this.isEntered = !0;
            var t = playerModel.tutorial >= 14;
            e.loginParams.friendJoinCode && t && EventCenter.sendEvent(EventConst.showSpeedyAddWay), 
            this.available && (playerModel.gainRecallReward || playerModel.gainReturnReward ? (hortor.WindowManager.currentWindow = e.WindowType.WINDOW_RETURN, 
            playerModel.gainRecallReward && playerModel.gainRecallReward.money && (playerModel.money -= playerModel.gainRecallReward.money), 
            playerModel.gainReturnReward && (playerModel.money -= playerModel.gainReturnReward.money, 
            playerModel.energy -= playerModel.gainReturnReward.energy || 0)) : this.openAlertWindow(), 
            gateModel.checkRest || e.ComFunc.checkRest(), gateModel.isWxgame && playerModel.dailyEventInfo.needToRestRemain > 0 && !gateModel.checkRest && hortor.TipManager.alert("亲爱的船长大人，您今日累计游戏时长已达到防沉迷限制，为了您的身心健康，请及时关闭游戏，下线休息", function() {
                platform.common.exitMiniProgram(function() {}, function() {}, function(e) {
                    console.log("退出小游戏");
                });
            }, function() {
                platform.common.exitMiniProgram(function() {}, function() {}, function(e) {
                    console.log("退出小游戏");
                });
            }));
        }, t.prototype.openAlertWindow = function() {
            var t = this, i = messageModel.notices.length > 0, n = messageModel.mailCountNotOpen > 0, o = messageModel.messages && messageModel.messages.length > 0, a = !playerModel.gotNewbieGift, r = playerModel.speedGiftRemain, s = r && _.isNumber(r) && r > 0, l = activityModel.getActivityInfo(e.ActivityType.occasionalGift), d = l && l.endRemain > 0 && !playerModel.gotOccasionalGift && playerModel.island > 0 && gateModel.iosPay, u = gateModel.getGateByLockType(e.AcLockType.inviteVip).show, h = gateModel.getGateByLockType(e.AcLockType.moneyBox).show, c = gateModel.getGateByLockType(e.AcLockType.allInOne).show;
            i || n || o ? i ? hortor.WindowManager.showWindow(e.WindowType.WINDOW_NOTICE, messageModel.notices, null, null, function() {
                (n || o) && t.openNewsAndMail(n ? 1 : 0, t.openSubView.bind(t));
            }) : n ? this.openNewsAndMail(n ? 1 : 0, this.openSubView.bind(this)) : o && this.openNewsAndMail(n ? 1 : 0, this.openSubView.bind(this)) : (a || s || d) && gateModel.iosPay && messageModel.showGift ? a ? (e.ComFunc.ctsShowAlertView("showGift"), 
            hortor.WindowManager.showWindow(e.WindowType.WINDOW_NEWBIE_GIFT, null, null, null, this.openSubView.bind(this))) : s ? (e.ComFunc.ctsShowAlertView("showGift"), 
            hortor.WindowManager.showWindow(e.WindowType.WINDOW_RUNNINGGIFT, null, null, null, this.openSubView.bind(this))) : d && playerModel.island > 0 && (e.ComFunc.ctsShowAlertView("showGift"), 
            hortor.WindowManager.showWindow(e.WindowType.WINDOW_PIRATEGIFT, null, null, null, this.openSubView.bind(this))) : (u || h || c) && messageModel.showShare ? u ? (e.ComFunc.ctsShowAlertView("showShare"), 
            hortor.WindowManager.showWindow(e.WindowType.WINDOW_INVITE_VIP, null, null, null, this.openSubView.bind(this))) : h && gateModel.checkShare ? (e.ComFunc.ctsShowAlertView("showShare"), 
            hortor.WindowManager.showWindow(e.WindowType.WINDOW_INVITE_JBBX, null, null, null, this.openSubView.bind(this))) : c && gateModel.checkShare && (e.ComFunc.ctsShowAlertView("showShare"), 
            hortor.WindowManager.showWindow(e.WindowType.WINDOW_WNSP, null, null, null, this.openSubView.bind(this))) : this.openSubView();
        }, t.prototype.onWindowClose = function() {
            this.hasSubview && this.openSubView();
        }, t.prototype.openSubView = function() {
            this.hasSubview = !0, !hortor.WindowManager.isModaling && this.hasSubview && (playerModel.isTutorialMiner || e.TutorialManager.instance.newbieTutorialing || playerModel.isPrivilege || (hortor.WindowManager.showWindow(e.WindowType.WINDOW_OFFICIALVIP), 
            this.hasSubview = !1));
        }, t.prototype.openNewsAndMail = function(t, i) {
            void 0 === t && (t = 0), 1 == t ? hortor.WindowManager.showWindow(e.WindowType.WINDOW_MAIL, null, null, null, i) : hortor.WindowManager.showWindow(e.WindowType.WINDOW_NEWS, null, null, null, i);
        }, t.prototype.openInviteView = function(t, i) {
            void 0 === t && (t = e.InviteShowType.Share), (t == e.InviteShowType.Share && gateModel.guide[e.AcLockType.invite] || t != e.InviteShowType.Share) && gateModel.checkShare && hortor.WindowManager.showWindow(e.WindowType.WINDOW_INVITEREWARD, null, null, null, i);
        }, t;
    }();
    e.EnterManager = t, __reflect(t.prototype, "game.EnterManager");
}(game || (game = {}));

var enterManager = new game.EnterManager(), HelpTextManager = function() {
    function e() {}
    return e.getHelpTextLabel = function() {
        var e = "<font color='#F57300' size=22 blod=true>1.岛屿建设</font>\n岛屿建设是游戏的核心，每个岛屿可建造5个建筑，每个建筑最高等级为5级，当岛屿上所有建筑都升级到满级后，就会进入下一个岛屿开始新的旅程\n\n<font color='#F57300' size=22 blod=true>2.地图</font>\n在地图中可以查看开拓岛屿的进度以及好友们的状态，并且可以在已经建成的岛屿上开设金矿，持续的增加金币产量\n\n<font color='#F57300' size=22 blod=true>3.能量</font>\n能量主要用于转盘的消耗，通过时间可以自然恢复到上限，还可以通过购买，每日分享，邀请好友，好友赠送，每日能量，月卡等方式额外获取更多的能量\n\n<font color='#F57300' size=22 blod=true>4.攻击</font>\n通过转盘抽取攻击指令，玩家可以选择对目标岛屿、好友岛屿、仇人岛屿上的任一建筑进行炮击，如果被炮击的玩家有护盾则攻击失败，攻击者只能获得少量金币，如果没有护盾则攻击成功，攻击者会获得大量金币\n\n<font color='#F57300' size=22 blod=true>5.偷取</font>\n通过转盘抽取偷取指令，玩家可以在3个岛屿中任选1个偷取金币，如果选中“土豪”岛屿（偷取目标）即可成功偷取大量金币，如果没有猜中也不要紧，快快记住它的样子，以备下次成功偷取\n\n<font color='#F57300' size=22 blod=true>6.护盾</font>\n护盾可以保护玩家的岛屿免受攻击，最多同时可以拥有3个护盾，每个护盾只能抵御1次攻击，当没有护盾时，岛屿上的建筑很可能被敌人摧毁掉\n\n<font color='#F57300' size=22 blod=true>7.迷你盾</font>\n迷你盾可以保护单个建筑免受1次攻击，直到通过当前岛屿后才会失效，当护盾不足时快补充一些迷你盾把高级的建筑保护起来\n\n<font color='#F57300' size=22 blod=true>8.通缉令</font>\n玩家在仇人榜可以对任一仇人进行通缉，玩家的所有好友都可以在攻击时对被通缉者进行攻击，将会额外获得300K的金币奖励，通缉效果最多持续48小时，并且最多可以攻击5次\n\n<font color='#F57300' size=22 blod=true>9.宠物</font>\n每个宠物都有不同的技能，可以帮助玩家抵御攻击或增加攻击收益，但需要给宠物喂食饼干，否则饥饿的宠物只能“冬眠”（技能无效）了，同时只可以有一只宠物上阵，上阵的宠物可以通过转盘获取经验\n\n<font color='#F57300' size=22 blod=true>10.月卡</font>\n月卡持续时间为30天，购买后立即获得30点能量，并且每小时能量恢复数量与每日邮件发送数量增加，在持续时间内每日都可以领取10点能量，正所谓一次购买“终身”受益\n\n<font color='#F57300' size=22 blod=true>FAQ:</font>\nQ: 被偷的人真的会损失金币吗？\n\nA: 会损失，所以尽量不要留太多的金钱，如果好友变成了偷取对象时，一定不要放过他/她！\n\nQ: 已经完成的岛会被攻击吗？\n\nA: 所有之前已经完全的岛就不会被攻击了，是安全的。\n\nQ: 为什么收不到提示？\n\nA: 公众号的推送机器人隔48小时就会睡觉，发送”你好“给公众号，或者点击公众号菜单里的按钮就可以把它唤醒啦。\n\nQ: 我通缉的人我打了怎么不会获得额外奖励？\n\nA: 通缉令是邀请好友来帮你打仇人的，所以额外奖励仅对来帮忙的好友有效。\n\nQ: 怎么领取/赠送好友能量？\n\nA: 打开左上角的“菜单”，打开“好友”功能，在这里可以领取/赠送好友能量，当好友比较多时可以使用正下方的“一键领取/赠送”功能\n\nQ: 怎么添加好友？\n\nA: 打开左上角的“菜单”，打开“好友”功能，点击右上方的“添加好友”，输入对方的友情码或将自己的友情码告诉给朋友，就可以加对方为好友了，也可以将邀请信息发送给您的朋友，邀请他们进入游戏\n\nQ: 怎么删除好友？\n\nA: 打开左上角的“排行榜”，点击上方“好友”功能，点击一个想要删除的好友进入他的岛屿，点击右下角的“删除好友”即可将他删除\n\nQ: 饼干和药水是做什么用的？\n\nA: 饼干是用于增加宠物活跃的，活跃的宠物才会发挥作用，药水是增加宠物经验的，宠物经验满后可以对宠物进行升级，提升技能强度\n\nQ: 声音在哪里关闭？\n\nA: 打开左上角的“菜单”，打开“设置”功能，点击音效前面的按钮，变成OFF状态就会进入无声世界\n\nQ: 游戏时提示“登录信息失效”是什么原因？\n\nA: 出现这种提示一般是由于其他设备登录了相同的账号或者是服务器停机维护造成的，可以退出游戏重新登录\n\nQ: 为什么我分享了却没有获得能量？\n\nA: 每日分享是有次数限制的，超出限制不会获得奖励，每日最多可分享五次，中间间隔需两分钟以上，每日中午11点刷新分享次数\n\nQ: 为什么转轮盘一直转不到攻击？\n\nA: 岛屿为空的时候是转不到攻击的呦！\n\n";
        return e;
    }, e.getBeachTextLabel = function() {
        var e = "<font color='#F57300' size=22 blod=true>基础玩法</font>\n● 派遣水手搬运沙滩的物品，可获得相应奖励\n● 水手数量会影响搬运速度，数量越多搬运速\n　度越快\n● 与好友抢夺物品</font>时，水手能力强的一方获胜\n● 每邀请1位好友助威</font>都可以增加25%水手能力\n● 在一个好友家同时只能抢夺2个物品</font>\n● 力量药剂可以提升当前海滩上所有己方水手\n　能力10%\n\n<font color='#F57300' size=22 blod=true>刷新海滩</font>\n● 点击刷新按钮可以召唤海浪刷新海滩，6小时\n　后才可以再次召唤海浪\n● 使用海浪可以立即刷新海滩上所有闲置物品\n● 海滩上最多可容纳5个物品\n\n<font color='#F57300' size=22 blod=true>巨蟹宝箱</font>\n● 当自己海滩没有水手在拉物品时，海浪刷新\n　海滩时，有概率刷新出巨蟹宝箱\n● 水手越多，刷新出巨蟹宝箱的概率越高，并\n　且巨蟹宝箱携带的金块也会更多\n● 一个巨蟹宝箱可以同时被6个人拉，主人一\n　方3个人，抢夺一方3个人，每个人都可以派\n　水手并且可以助威\n● 拉取巨蟹宝箱时，可以点击加号，分享邀请\n　好友来帮助你一起拉螃蟹\n● 主人一方拉取成功后，主人会获得大部分奖\n　励，其余人获得少量奖励\n● 抢夺方拉取成功后，则所有人平分这些奖励\n\n<font color='#F57300' size=22 blod=true>水手数量</font>\n● 活动初始每位玩家拥有5名水手\n● 通过积累订单价值可以获取更多额外水手\n● 额外水手可以使用到本期活动结束\n\n<font color='#F57300' size=22 blod=true>奖励兑换</font>\n● 收集齐订单所需要的物品就可以兑换奖励了\n● 使用金块可以兑换大量金币\n● 个别档位每天有一定的兑换次数，每日凌晨\n　重置次数\n● 使用刷新卷轴可以立即重新刷新1个新订单\n● 每天最多可以赠送3个收藏品，最多也只能收\n　取3个\n● 活动结束后，会清空所有物品，包括海浪、\n　刷新卷轴和力量药剂、金块\n\n<font color='#F57300' size=22 blod=true>邻居和坏蛋</font>\n● 每2小时可以刷新一次随机邻居，同时自己也\n　有几率被陌生人随机到\n● 坏蛋列表里是所有从你家抢过东西（或正在\n　抢夺）的人，当你反抢一次以后，对方就会\n　从这个列表中消失";
        return e;
    }, e.getHateRankTextLabel = function() {
        var e = "<font color='#F57300' size=22 blod=true>榜单规则</font>\n● 仇人榜会根据被攻击的次数进行排序，最多\n　显示前50名仇人\n● 超过30天未登录的仇人将会被移除\n\n<font color='#F57300' size=22 blod=true>通缉规则</font>\n● 可以对仇人榜中的任意仇人（未被通缉的）\n　发布通缉令，好友可以协助攻击\n● 被通缉状态最多持续48小时或因通缉被攻击\n　5次后失效\n";
        return e;
    }, e.getOctopusTextLabel = function() {
        var e = "<font color='#F57300' size=22 blod=true>玩法规则</font>\n● 使用“河豚弹”击落章鱼身上的礼盒可以获得\n　礼盒中的奖励\n● 合理控制弹弓力度与角度更容易击落礼盒\n● 礼盒打光了？没关系，快去好友那里看看吧\n\n<font color='#F57300' size=22 blod=true>河豚弹获得</font>\n● 通过转转盘有一定几率可以获得“河豚弹”\n● 开启免费宝箱即可获得河豚弹，每天0点重置\n\n<font color='#F57300' size=22 blod=true>收集品获得</font>\n● 击落章鱼礼盒有几率获得不同的收集品\n    　普通章鱼：酒杯、钩子、望远镜\n    　稀有章鱼：短刀、火枪\n    　传奇章鱼：海盗帽\n● 每天最多赠送可以赠送3个收集品，最多可以\n　领取3个收集品\n\n<font color='#F57300' size=22 blod=true>章鱼苏醒</font>\n● 当礼盒都被击落后，章鱼会进入睡眠状态，\n　8小时后会自然苏醒并且重新挂满礼盒\n● 可以通过使用“棒棒糖”快速唤醒章鱼\n\n<font color='#F57300' size=22 blod=true>奖励兑换</font>\n● 使用收集品可以兑换各种不同的大奖\n● 活动结束后，棒棒糖、河豚弹、收集品都将\n　被清空，请尽快使用及兑换，避免损失";
        return e;
    }, e.getSailingTextLabel = function() {
        var e = "<font color='#F57300' size=22 blod=true>基础规则</font>\n● 竞赛每周一15:00开始，周六15:00结束\n● 竞赛开始前活跃的海盗团都将自动报名加入\n● 竞赛进行中加入的成员不可参加本次竞赛\n\n<font color='#F57300' size=22 blod=true>赛场规则</font>\n● 竞赛期间海盗团成员完成竞赛任务获得积分\n● 积分会影响帆船的航行距离\n● 帆船越过宝箱即可开启对应的宝箱奖励\n● 竞赛中未获得积分的海盗团将会被直接降级\n\n<font color='#F57300' size=22 blod=true>任务信息</font>\n● 任务板上的空余位置将在30分钟后自动补充\n● 团长与副团可以撕毁任意任务，每天36次撕\n　毁次数，重置时间为15:00\n● 根据海盗团上周的活跃等级计算本周竞赛总\n　任务次数，单人最多可完成12个任务\n　  海盗团活跃等级1级：任务总数量100\n　  海盗团活跃等级2级：任务总数量120\n　  海盗团活跃等级3级：任务总数量140\n　  海盗团活跃等级4级：任务总数量160\n　  海盗团活跃等级5级：任务总数量180\n\n<font color='#F57300' size=22 blod=true>联赛信息</font>\n● 竞赛分为青铜、白银、黄金、铂金、钻石、\n　王者6种不同等级的联赛\n● 竞赛结束后根据各等级联赛内的规则升降级\n● 相同积分的海盗团根据其达到该积分的时间\n　制定排序先后\n● 钻石联赛中的佼佼者将会有机会参加王者联\n　赛，王者联赛最多只能容纳10个海盗团\n\n<font color='#F57300' size=22 blod=true>奖励相关</font>\n● 帆船达到相应的积分即可开启积分宝箱\n● 赛季宝箱每次开启需要消耗1枚幸运币，幸运\n　币可以通过竞赛结束时最终排名获得\n● 联赛等级越高可以开启的积分奖励宝箱数量\n　越多，赛季宝箱内容越豪华\n● 所有奖励都将于下次竞赛开始时重置，所以\n　当获得了奖励记得尽快领取\n● 离开海盗团将无法获得当前竞赛的所有奖励";
        return e;
    }, e.getTaptitansTextLabel = function() {
        var e = "<font color='#F57300' size=22 blod=true>基础规则</font>\n● 消耗1个唤醒石即可唤醒怪兽，唤醒石每天\n　0点会自动补充至1个，不会累加\n● 长按大炮攻击怪兽，每次消耗1个炮弹，每\n　天0点自动补充至30个，不会累加\n● 自己召唤的怪兽被击败，会获得召唤者奖励\n● 协助好友击败怪兽，根据伤害可获得排名奖\n　励，召唤者计入排名但不会获得排名奖励\n\n<font color='#F57300' size=22 blod=true>奖励相关</font>\n● 召唤者奖励：\n　15~25能量 + 1.5~2.5M金币 + 随机道具\n● 协助者奖励：\n　第1名：15能量 + 1.5M金币 + 随机道具\n　第2名：10能量 + 750K金币\n　第3名：5能量 + 500K金币\n　第4名：200K金币\n　参与奖：100K金币\n● 协助好友时，伤害排名第5名及以后，或伤\n　害未达到500只能获得参与奖\n● 获得的奖励需要在48小时内领取，否则过\n　期就会消失掉";
        return e;
    }, e.getTreasureTextLabel = function() {
        var e = "<font color='#F57300' size=22 blod=true>基础规则</font>\n● 砸开金蛋找到宝箱的钥匙，即可获得奖励\n● 使用木槌砸开金蛋，首次消耗1个木槌，第\n　二次消耗2个木槌，之后每次消耗3个木槌\n● 砸开第一个金蛋后，好友们就可以看到你的\n　宝箱，并有6小时的时间帮忙砸蛋，找到钥\n　匙的好友可以和你分享宝箱内的奖励\n● 成功打开宝箱后，再等6个小时就可以开启\n　下一个宝箱了。如果宝箱没有成功打开，\n　则失败后可以马上开启下一宝箱\n\n<font color='#F57300' size=22 blod=true>木槌获得</font>\n● 转轮盘可以获得木槌\n● 每日可以分享两次，各获得3个木槌\n\n<font color='#F57300' size=22 blod=true>奖励相关</font>\n● 每个宝箱内装有1 ~ 5M金币\n● 协助好友找到钥匙可以分得一半奖励";
        return e;
    }, e.getTreeTextLabel = function() {
        var e = "<font color='#F57300' size=22 blod=true>基础玩法</font>\n● 点击小树屋上道具的阴影槽位，可以\n　挂道具\n● 自己不够的道具，可以求助好友帮助，\n　每次新的小树屋，好友最多只能帮助\n　3次，其余的需要你自己完成哦！\n● 点击求助按钮，选择想要的水果，分\n　享到微信群，当好友点击链接后，就\n　会获得选择的水果，每天可以获得3\n　次水果，每天凌晨3点刷新获得次数\n● 点击援助按钮，可以查看好友求助信息，\n　帮助好友挂道具，会获得相应奖励\n● 挂满整个小树屋，领取了小猴子的礼\n　物之后，小猴子会收取所有的道具，然\n　后离开\n● 间隔6个小时小猴子会带着全新礼物再\n　回来以及刷新了小树屋的道具槽位，\n　可以重新装水果\n\n<font color='#F57300' size=22 blod=true>活动奖励</font>\n● 每次装水果，都会获得一定的奖励\n● 装满水果之后，可以领取宝箱的\n　礼物，获得大量奖励\n　　能量：20～60\n　　金币：3M～8M\n　　道具：通缉令、万能碎片、迷你盾、\n　　　　　饼干、VIP卡、友尽卷轴、\n　　　　　河豚弹、棒棒糖、双倍金币卡\n　　　　　(随机获得其中一个)\n\n<font color='#F57300' size=22 blod=true>获得道具</font>\n● 可以通过转转盘获得道具\n● 遇到活动气球，有几率获得活动道具，\n　气球最多每天遇到5次";
        return e;
    }, e.getKiteTextLabel = function() {
        var e = "<font color='#F57300' size=22 blod=true>材料收集</font>\n● 活动期间转转盘会获得风筝材料\n● 每天可以赠送和收取好友材料各3次\n<font color='#F57300' size=22 blod=true>风筝制作</font>\n● 总共3种风筝，每种对应不同制作材料以及\n　奖励\n● 制作风筝成功后，会有一定的奖励，并且小\n　鹅会自动放飞此风筝\n● 如果小鹅正在放风筝，则不能制作新的风筝\n<font color='#F57300' size=22 blod=true>放风筝</font>\n● 小鹅把风筝放到最高点，即可领取放飞大奖\n　领取奖励后，即放飞风筝\n● 小鹅同时只能放一个风筝\n● 放风筝有一个初始速度，分享求助好友可以\n　助力加速，每个风筝最多可以有5个好友助力\n";
        return e;
    }, e.getMoonCakeHelpLabel = function() {
        var e = "● 活动期间，转轮盘有几率获得美食\n● 每次获得美食后，会额外获得一个美食礼\n　盒，把礼盒分享到微信群，只要好友猜中\n　正确的礼盒，双方会各获得一个美食\n● 收集美食兑换各种不同的礼品\n● 活动结束后，所有的美食将被清空，请尽\n　早兑换奖励";
        return e;
    }, e.getGuildHallHelpLabel = function() {
        var e = "● 每个海盗团最多可容纳20名成员\n● 海盗团的职务分为：\n　团长（1人），副团（2人）\n　精英（5人），团员（不限）\n　团长与副团拥有对海盗团的管理权\n● 海盗团活跃度获取：\n　成员每消耗1点能量增加1点活跃度\n　成员每完成1次海盗团任务增加30点\n　活跃度\n　成员每领取1次每日签到奖励增加30点\n　活跃度\n● 每周日24点结算本周海盗团活跃度\n　作为下一周的活跃评定，并且所有活\n　跃度清零重新计算\n● 初始活跃度等级为1级，最高可升至5级，\n　1级活跃度：0\n　2级活跃度：10000\n　3级活跃度：20000\n　4级活跃度：35000\n　5级活跃度：50000\n● 团长7天未登录游戏，将根据职务与\n　活跃度自动转让给他人\n● 离开海盗团的成员在本周所有贡献\n　的活跃度都会被清空\n";
        return e;
    }, e.getPlaneTextLabel = function() {
        var e = "<font color='#F57300' size=22 blod=true>基础规则</font>\n● 飞机竞速活动时间为每日19:00~23:00\n● 每日最多可参加3次，每局对战人数为4人\n● 活动开始阶段点击开始匹配即可参加活动\n<font color='#F57300' size=22 blod=true>玩法详情</font>\n● 竞速开始，每架飞机都有一定的初始速度\n● 竞速开始后技能条上随机出现两个技能，\n　并且指针在不停移动，点击屏幕的任何一\n　个位置，指针会停下，如果指针停在技能\n　图标上，则选中技能，即立即释放技能\n● 使用每一个技能都有一定的释放时间\n● 被攻击前有警报预警，记得及时加盾噢！\n● 技能分为4种：\n　　加速：加速飞行一段时间\n　　护盾：获得护盾，可以抵挡一次攻击\n　　前炮弹：向前发射炮弹\n　　后炮弹：向后发射炮弹\n● 被炮弹击中，则减速慢行一段时间\n● 向前发射炮弹时，会随机攻打在你之前的\n　玩家，距离越近，攻击概率越高，向后\n　发炮同理\n● 比赛结束根据排名以及消耗时间会获得\n　相应积分，积分可以兑换奖励\n<font color='#F57300' size=22 blod=true>赛季段位规则说明：</font>\n● 总共7个段位，分别是：\n　　英勇青铜、不屈白银、荣耀黄金\n　　尊贵铂金、璀璨钻石、至尊星耀\n　　最强王者\n● 每个段位有对应的星星数，升满即可晋\n　升段位，空星再掉星的时，会降低段位\n● 每场比赛的第一名会升一星，最后一名\n　会降一星，其余名次则无星星变化\n● 赛季结束会根据对应段位等级，以邮件\n　的形式发放相应奖励\n<font color='#F57300' size=22 blod=true>活动奖励</font>\n● 每天会根据当天最好名次领取相应宝箱奖\n　励，第四名只可以领取一个，第一名则可\n　全部领取\n● 每日奖励会在凌晨0点重置，记得及时领\n　取\n";
        return e;
    }, e.getFlowerHelpLabel = function() {
        var e = "● 情人节活动期间转转盘可以获得玫瑰花\n● 赠送玫瑰花双方都可以获得魅力值，送花\n　加10点，收花加20点\n● 魅力值增加到一定阶段可领取宝箱奖励，\n　并且解锁相应称号，只允许顺序领取\n● 送你玫瑰最多的玩家会成为你的爱神\n● 系统每人每天会赠送1朵玫瑰，每日凌晨\n　0点更新\n● 当有玩家送出520朵玫瑰的时候，全服所\n　有在线玩家都可以抢到一个礼盒\n● 赠送玫瑰：\n　一心一意：玫瑰*1\n　十全十美：玫瑰*10\n　天长地久：玫瑰*99\n　　展示：系统全服消息推送\n　我爱你　：玫瑰*520\n　　展示：全服特效展示，并全服礼盒发放\n● 额外礼物：\n　一等奖：整套娃娃（共20套）\n　　条件：世界排行榜前10名及其爱神\n　二等奖：随机一个娃娃（180个）\n　　条件：世界排行榜11-100名及其爱神\n　三等奖：随机一个娃娃（200个）\n　　条件：随机选取魅力值大于5000的\n　　　　　200名玩家\n● 中奖通知：\n　活动结束后，所有中奖玩家会收到中奖\n　信息邮件\n● 领奖方式：\n　活动结束后5个工作日以内海盗委员会\n　会以邮件的方式与中奖玩家联系，届时\n　请您关注邮件并及时回复相应的快递信息，\n　方便及时收到娃娃";
        return e;
    }, e.getTreausreMapTextLabel = function() {
        var e = "<font color='#F57300' size=22 blod=true>基础玩法</font>\n● 点击藏宝图上宝石矿，消耗铲子进行挖掘，\n  短暂时间后会挖出宝石或宝箱，但有极小几\n  率什么都没挖到，打开宝箱后会获得能量、\n  宝石、随机道具，当宝石被挖光后，进入地\n  图绘制倒计时，时间结束后会出现新的藏宝\n  图，随时可以去挖好友的宝箱。\n<font color='#F57300' size=22 blod=true>藏宝图</font>\n● 普通藏宝图可以开出普通宝箱\n● 稀有藏宝图可以开出稀有宝箱\n● 传奇藏宝图可以开出传奇宝箱\n<font color='#F57300' size=22 blod=true>宝箱</font>\n● 不同品质宝箱开出的物品数量也不一样，越\n  好的宝箱开出的物品越好\n    能量：5-50\n    宝石：5-50\n    道具：铲子，经验药水，双倍金币，迷你\n               盾，饼干，万能碎片，1天VIP\n<font color='#F57300' size=22 blod=true>助力</font>\n● 每个助力将为宝箱加速30分钟，新玩家可以\n  直接开启宝箱\n  加速时间只作用于当前宝箱，已经可以打开\n  的宝箱将不能被加速\n<font color='#F57300' size=22 blod=true>兑换</font>\n● 宝石可以在右下角兑换金币，里边有可兑换\n  大量金币的选项，但有每日次数限制，不要\n  错过哦\n● 活动结束后将清空所有宝石，请您尽早兑换\n";
        return e;
    }, e.getEnergyPartTextLabel = function() {
        var e = "<font color='#F57300' size=22 blod=true>准备阶段</font>\n● 消耗能量即可升级瓜分瓶，瓜分瓶等级越\n  高则瓜分到的能量越多\n● 达到银瓜分瓶时，可以解锁爱心加成功能\n● 爱心加成可额外提升瓜分到的能量\n<font color='#F57300' size=22 blod=true>爱心加成</font>\n● 分享到微信群可邀请好友送爱心\n● 每个好友都可以赠送你一枚爱心\n  每个爱心增加10%能量加成\n● 新玩家送爱心则增加20%能量加成\n● 每个人最多收到10个好友的爱心\n<font color='#F57300' size=22 blod=true>瓜分阶段</font>\n● 在开奖时间内点击瓜分按钮即可参与瓜分\n● 瓜分后会立即获得相应能量\n● 瓜分到的能量会乘以相应的爱心加成作为额\n  外的能量奖励\n<font color='#F57300' size=22 blod=true>温馨提示</font>\n● 活动结束后将清空所有数据，请及时参与瓜\n  分大奖\n";
        return e;
    }, e.getPirateKingTextLabel = function() {
        var e = "<font color='#F57300' size=22 blod=true>骰子</font>\n● 通过转盘获得骰子，骰子可以累积\n\n<font color='#F57300' size=22 blod=true>玩法</font>\n● 通过摇骰子使船前进\n● 踩到绿圈或骷髅会触发随机事件\n● 在岛屿停留会获得海盗王船员\n● 走完一圈可领取奖励\n\n<font color='#F57300' size=22 blod=true>事件</font>\n● 绿圈事件-会发生好的事情\n● 骷髅事件-会发生不好的事情\n● 岛屿事件-会获得船员\n● 互动事件-给好友赠送帮助道具或捣蛋道具\n\n<font color='#F57300' size=22 blod=true>奖励</font>\n● 前四圈，每走完一圈可领取一次奖励\n● 次日重置次数及奖励\n● 第五圈开始每次走完一圈可分享\n  翻倍获得船员\n\n<font color='#F57300' size=22 blod=true>排行榜</font>\n● 每天获得船员从高到低的排行\n● 前三名会有能量奖励\n● 每日重置船员数量及排行榜名次\n";
        return e;
    }, e.getCoupleRankTextLabel = function() {
        var e = "<font color='#F57300' size=22 blod=true>排行榜奖励</font>\n● 第1名：每人4500元携程卡，可兑换泰国双人游等产品\n● 第2～7名: 每人1000元携程卡，可兑换迪士尼一日游门票等\n● 第8～17名：每人388元哈根达斯蛋糕券，可兑换哈根达斯指定产品\n● 第18～77名：每人100元话费充值卡，让你享受和CP的甜言蜜语\n● 第78～777名：每人价值60元的CP礼包：50能量，1200000金币\n\n<font color='#F57300' size=22 blod=true>活动时间</font>\n● 截止8月20日中午12点，统计默契值排名前777名的CP，可以获得海量超值奖励。\n\n<font color='#F57300' size=22 blod=true>领奖时间</font>\n●  领奖时间截止到8月27日中午12点。逾期未根据客服邮件，填写信息的玩家，将不再发放奖励\n\n<font color='#F57300' size=22 blod=true>最终解释权归北京豪腾嘉科科技有限公司所有</font>\n";
        return e;
    }, e.getCoupleDiamondTextLabel = function() {
        var e = "<font color='#F57300' size=22 blod=true>默契度是什么</font>\n● 默契度是CP间感情的见证，共分为5个阶段：情窦初开，惺惺相惜，相知相识，亲密无间，生死不离\n● 情窦初开：默契值1～499\n● 惺惺相惜：默契值500～1499\n● 相知相识：默契值1500～2999\n● 亲密无间：默契值3000～4999\n● 生死不离：默契值5000及以上\n\n<font color='#F57300' size=22 blod=true>获取默契值</font>\n● CP间相互赠送能量，CP间互相赠送CP盾，每日签到，每日首次分享CP手册，必能获得默契值\n● 转转盘，建造岛屿，购买矿工，均有概率获得默契值。\n";
        return e;
    }, e.getCoupleTextLabel = function() {
        var e = "<font color='#F57300' size=22 blod=true>如何组CP</font>\n● 达到85星后，转转盘解锁CP系统，点击“我想组CP”，对感兴趣的其他玩家／好友，发送求CP请求即可\n\n<font color='#F57300' size=22 blod=true>配对成功</font>\n● 若有人同意了你的请求，或者你同意了TA人的请求，则组合成功\n\n<font color='#F57300' size=22 blod=true>CP权益之默契度</font>\n1) 默契度是什么\n   默契度是CP间感情的见证，共分为5个阶段：情窦初开，惺惺相惜，相知相识，亲密无间，生死不离\n● 情窦初开：默契值1～499\n● 惺惺相惜：默契值500～1499\n● 相知相识：默契值1500～2999\n● 亲密无间：默契值3000～4999\n● 生死不离：默契值5000及以上\n2) 获取默契值\n   CP间相互赠送能量，CP间互相赠送CP盾，每日签到，每日首次分享CP手册，必能获得默契值；转转盘，建造岛屿，购买矿工，均有概率获得默契值\n\n<font color='#F57300' size=22 blod=true>CP权益之CP盾</font>\n1) CP盾是什么\n   当转到多余的盾牌时，可选择送给自己的CP，帮助CP抵挡一次攻击\n2) 每日可成功赠送3次\n\n<font color='#F57300' size=22 blod=true>CP权益之互赠能量为每日10点</font>\n\n<font color='#F57300' size=22 blod=true>解除CP</font>\n●  点击CP的头像，可以通过解除CP按钮来解除关系，主动解除需要消耗3个友尽卷轴\n";
        return e;
    }, e;
}();

__reflect(HelpTextManager.prototype, "HelpTextManager");

var game;

!function(e) {
    var t = function() {
        function t() {}
        return t.getRewardItemInfo = function(e) {
            var t = [];
            for (var i in e) {
                var n = this.getItemInfo(i);
                n.onGet(e[i]), t.push(n);
            }
        }, t.addRewardData = function(e) {
            for (var t in e) switch (t) {
              case "energy":
                playerModel.energy += e[t];
                break;

              case "money":
                playerModel.money += e[t];
                break;

              case "wanted":
                playerModel.wantedCount += e[t];
                break;

              case "potion":
                playerModel.potionCount += e[t];
                break;

              case "cookie":
                playerModel.cookieCount += e[t];
                break;

              case "lolly":
                playerModel.lolly += e[t];
                break;

              case "puffer":
                playerModel.puffer += e[t];
                break;

              case "miniShield":
                playerModel.miniShieldCount += e[t];
                break;

              case "allInOne":
                playerModel.allInOnePiece += e[t];
                break;

              case "horn":
                playerModel.hornCount += e[t];
                break;

              case "doubleMoneyCard":
                playerModel.doubleMoneyCard += e[t];
                break;

              case "oCard":
                break;

              case "fCard":
                break;

              case "wishCoin":
                AnnualData.luckyBox.wishCoin += e[t];
            }
        }, t.getItemInfo = function(t) {
            var n = new i();
            switch (n.type = t, t) {
              case "energy":
                n.name = "能量", n.iconName = "popIcon_energy_2", n.desc = "能量瓶可以补充10点能量", n.tips = "转转盘消耗", 
                n.property = "energy";
                break;

              case "shield":
                n.name = "护盾", n.iconName = "shield", n.desc = "护盾可以保护你的岛免受攻击", n.property = "shields";
                break;

              case "money":
                n.name = "金币", n.iconName = "popIcon_money_4", n.desc = "金币可以用于建造建筑，购买矿工，但是当你取走金币的时候一定要小心，因为可能会有很多双眼睛在盯着你！", 
                n.tips = "主要用于建造建筑", n.property = "money";
                break;

              case "monthcard":
                n.name = "VIP（天）", n.iconName = "popIcon_vip", n.desc = "VIP", n.tips = "获得VIP相应数量天数";
                break;

              case "vip":
                n.name = "VIP", n.iconName = "popIcon_monthCard", n.desc = "VIP", n.tips = "获得VIP相应数量天数";
                break;

              case "shipwreck":
                n.name = "友尽卷轴", n.iconName = "popIcon_shipwreck", n.desc = '友谊的小船说翻就翻，使用友尽卷轴可以删除一个好友\n使用方式：从排行榜选择想删除的好友，进入TA的岛屿界面，选择"删除好友"', 
                n.tips = "删除好友的必备道具", n.property = "ShipwreckCount";
                break;

              case "wanted":
                n.name = "通缉令", n.iconName = "popIcon_wanted", n.desc = "可以对仇人榜里任意一人使用通缉令，好友可以协助攻击被通缉者，被通缉状态最多持续48小时或因通缉被攻击5次后失效", 
                n.tips = "通缉仇人让好友帮你复仇", n.property = "wantedCount";
                break;

              case "cookie":
                n.name = "饼干", n.iconName = "popIcon_cookie", n.desc = "每块饼干可以让宠物活跃4个小时，宠物必须处在活跃的状态才能发挥作用", 
                n.tips = "给宠物食用增加活跃时间", n.property = "cookieCount";
                break;

              case "potion":
                n.name = "经验药水", n.iconName = "popIcon_potion", n.desc = "让宠物瞬间获得50点经验，快速提升等级全靠它", 
                n.tips = "提升宠物经验值", n.property = "potionCount";
                break;

              case "expPotion":
                n.name = "经验药水", n.iconName = "popIcon_potion", n.desc = "让宠物瞬间获得50点经验，快速提升等级全靠它", 
                n.tips = "提升宠物经验值", n.property = "potionCount";
                break;

              case "summonStone":
                n.name = "唤醒石", n.iconName = "shop_summonStone", n.desc = "怪兽副本中用于唤醒怪兽的魔法宝石，每颗唤醒石可以唤醒1次怪兽", 
                n.tips = "可以1次唤醒怪兽", n.property = "summonStone";
                break;

              case "killTitanCannonBall":
                n.name = "炮弹", n.iconName = "shop_killTitanCannonBall", n.desc = "用特殊火药制成的专用炮弹，在打怪兽副本中能够对怪兽造成可观的伤害", 
                n.tips = "打怪兽活动道具", n.property = "killTitanCannonBall";
                break;

              case "miniShield":
                n.name = "迷你盾", n.iconName = "popIcon_miniShield", n.desc = "保护单个建筑免受一次攻击，如未遭受攻击，则通过当前岛屿后消失。", 
                n.tips = "保护单个建筑免受一次攻击", n.property = "miniShieldCount";
                break;

              case "allInOne":
                n.name = "万能碎片", n.iconName = "popIcon_allInOne", n.desc = "一张神奇的碎片，在合成海盗拼图时可以替代任意一张碎片", 
                n.tips = "拼图活动代替任一碎片", n.property = "allInOnePiece";
                break;

              case "coin":
              case "guildCoin":
                n.name = "海盗币", n.iconName = "popIcon_guildIcon", n.desc = "能量", n.tips = "海盗团商店兑换道具的必需品";
                break;

              case "guildMedal":
                n.name = "海盗勋章", n.iconName = "popIcon_guildMedal", n.desc = "海盗的最高荣誉，据说获得此勋章者可以获得海盗最高指挥权，创建海盗团的必备道具";
                break;

              case "jigsaw0":
                n.name = "1号碎片", n.icon = e.ResourcePath.getColorJigsaw(1), n.desc = "1号碎片";
                break;

              case "jigsaw1":
                n.name = "2号碎片", n.icon = e.ResourcePath.getColorJigsaw(2), n.desc = "2号碎片";
                break;

              case "jigsaw2":
                n.name = "3号碎片", n.icon = e.ResourcePath.getColorJigsaw(3), n.desc = "3号碎片";
                break;

              case "jigsaw3":
                n.name = "4号碎片", n.icon = e.ResourcePath.getColorJigsaw(4), n.desc = "4号碎片";
                break;

              case "jigsaw4":
                n.name = "5号碎片", n.icon = e.ResourcePath.getColorJigsaw(5), n.desc = "5号碎片";
                break;

              case "jigsaw5":
                n.name = "6号碎片", n.icon = e.ResourcePath.getColorJigsaw(6), n.desc = "6号碎片";
                break;

              case "jigsaw6":
                n.name = "7号碎片", n.icon = e.ResourcePath.getColorJigsaw(7), n.desc = "7号碎片";
                break;

              case "jigsaw7":
                n.name = "8号碎片", n.icon = e.ResourcePath.getColorJigsaw(8), n.desc = "8号碎片";
                break;

              case "jigsaw8":
                n.name = "9号碎片", n.icon = e.ResourcePath.getColorJigsaw(9), n.desc = "9号碎片";
                break;

              case "octopus0":
              case "jewel1":
                n.name = "酒杯", n.iconName = "octopus_gift0", n.desc = "";
                break;

              case "octopus1":
              case "jewel2":
                n.name = "钩子", n.iconName = "octopus_gift1", n.desc = "";
                break;

              case "octopus2":
              case "jewel3":
                n.name = "望远镜", n.iconName = "octopus_gift2", n.desc = "";
                break;

              case "octopus3":
              case "jewel4":
                n.name = "短刀", n.iconName = "octopus_gift3", n.desc = "";
                break;

              case "octopus4":
              case "jewel5":
                n.name = "火枪", n.iconName = "octopus_gift4", n.desc = "";
                break;

              case "octopus5":
              case "jewel6":
                n.name = "海盗帽", n.iconName = "octopus_gift5", n.desc = "";
                break;

              case "beach0":
                n.name = "海星", n.iconName = "beach_prop1", n.desc = "";
                break;

              case "beach1":
                n.name = "海螺", n.iconName = "beach_prop2", n.desc = "";
                break;

              case "beach2":
                n.name = "海马", n.iconName = "beach_prop3", n.desc = "";
                break;

              case "beach3":
                n.name = "海龟", n.iconName = "beach_prop4", n.desc = "";
                break;

              case "beach4":
                n.name = "皮皮虾", n.iconName = "beach_prop5", n.desc = "";
                break;

              case "pokegooCoin":
                n.name = "扭蛋币", n.desc = "";
                break;

              case "lolly":
                n.name = "棒棒糖", n.iconName = "popIcon_lolly", n.desc = "喂给章鱼一只甜甜的棒棒糖，可以让章鱼快速苏醒并且挂满礼盒，仅限[神秘海域]活动内使用，活动结束后清空剩余数量", 
                n.tips = "喂章鱼使其快速苏醒", n.property = "lolly";
                break;

              case "puffer":
                n.name = "河豚弹", n.iconName = "popIcon_puffer", n.desc = "使用河豚弹可以将章鱼身上的礼盒打掉，仅限[神秘海域]活动内使用，活动结束后清空剩余数量", 
                n.tips = "神秘海域打礼盒使用", n.property = "puffer";
                break;

              case "moonCake0":
                n.name = Const.moonCakeNames[1], n.icon = "moonCake_gift_0_png", n.desc = "";
                break;

              case "moonCake1":
                n.name = Const.moonCakeNames[2], n.iconName = "moonCake_gift_1", n.desc = "";
                break;

              case "moonCake2":
                n.name = Const.moonCakeNames[3], n.iconName = "moonCake_gift_2", n.desc = "";
                break;

              case "moonCake3":
                n.name = Const.moonCakeNames[4], n.icon = "moonCake_gift_3_png", n.desc = "";
                break;

              case "moonCake4":
                n.name = Const.moonCakeNames[5], n.iconName = "moonCake_gift_4", n.desc = "";
                break;

              case "hammer":
                n.name = "木槌", n.iconName = "treasure_icon12", n.desc = "";
                break;

              case "sailingScore":
                n.name = "积分", n.iconName = "popIcon_sailingScore", n.desc = "海盗团帆船赛积分";
                break;

              case "horn":
                n.name = "喇叭", n.iconName = "popIcon_horn", n.desc = "让全世界人都能听到你的声音，每次世界发言需要消耗1个喇叭", 
                n.tips = "用于世界频道发消息", n.property = "hornCount";
                break;

              case "monthcard30":
                n.name = "VIP特权(30天)", n.iconName = "popIcon_vip", n.desc = "VIP", n.tips = "获得VIP相应数量天数";
                break;

              case "hamburger":
                n.name = "海浪", n.iconName = "popIcon_hamburger", n.desc = "使用后可以立即刷新海滩上的物品，仅限[暮光海滩]活动内使用", 
                n.tips = "刷新暮光海滩活动中的海滩物品";
                break;

              case "beachPowerPotion":
                n.name = "力量药剂", n.iconName = "popIcon_beachPowerPotion", n.desc = "使用后立即使水手能力增加10%，仅限[暮光海滩]活动内使用", 
                n.tips = "使用后增强水手能力";
                break;

              case "beachWorthCount":
                n.name = "水手币", n.iconName = "popIcon_beachWorthCount", n.desc = "兑换水手的货币，仅限[暮光海滩]活动内使用", 
                n.tips = "兑换水手的货币";
                break;

              case "magicBook":
                n.name = "刷新卷轴", n.iconName = "popIcon_magicBook", n.desc = "使用后立即刷新当前订单的内容，仅限[暮光海滩]活动内使用", 
                n.tips = "刷新暮光海滩活动中的订单";
                break;

              case "sailor":
                n.name = "水手", n.iconName = "popIcon_sailor", n.desc = "暮光海岸的水手";
                break;

              case "goldNugget":
                n.name = "金块", n.iconName = "popIcon_goldNugget", n.desc = "可以兑换金币";
                break;

              case "annualCollect1":
                n.name = "「国」气球", n.iconName = "annual_font_1", n.desc = "国庆黄金周气球";
                break;

              case "annualCollect2":
                n.name = "「庆」气球", n.iconName = "annual_font_2", n.desc = "国庆黄金周气球";
                break;

              case "annualCollect3":
                n.name = "「长」气球", n.iconName = "annual_font_3", n.desc = "国庆黄金周气球";
                break;

              case "annualCollect4":
                n.name = "「假」气球", n.iconName = "annual_font_4", n.desc = "国庆黄金周气球";
                break;

              case "annualCollect5":
                n.name = "「七」气球", n.iconName = "annual_font_5", n.desc = "国庆黄金周气球";
                break;

              case "annualCollect6":
                n.name = "「天」气球", n.iconName = "annual_font_6", n.desc = "国庆黄金周气球";
                break;

              case "annualCollect7":
                n.name = "「乐」气球", n.iconName = "annual_font_7", n.desc = "国庆黄金周气球";
                break;

              case "wishCoin":
                n.name = "许愿币", n.iconName = "popIcon_wishCoin", n.desc = "许愿币";
                break;

              case "doubleMoneyCard":
                n.name = "双倍金币卡", n.iconName = "popIcon_doubleMoneyCard", n.desc = "双倍金币卡", n.tips = "转转盘获得金币翻倍", 
                n.property = "doubleMoneyCard";
                break;

              case "chip":
                n.name = "乐卡", n.iconName = "popIcon_chip", n.desc = "乐卡";
                break;

              case "tree#1":
              case "treeGift0":
                n.name = "蓝莓", n.iconName = "popIcon_treeGift0", n.desc = "蓝莓";
                break;

              case "tree#2":
              case "treeGift1":
                n.name = "芒果", n.iconName = "popIcon_treeGift1", n.desc = "芒果";
                break;

              case "tree#3":
              case "treeGift2":
                n.name = "葡萄", n.iconName = "popIcon_treeGift2", n.desc = "葡萄";
                break;

              case "tree#4":
              case "treeGift3":
                n.name = "香蕉", n.iconName = "popIcon_treeGift3", n.desc = "香蕉";
                break;

              case "kiteGift0":
                n.name = "绳子", n.iconName = "kite_prop_shengzi", n.desc = "绳子";
                break;

              case "kiteGift1":
                n.name = "竹篾", n.iconName = "kite_prop_zhumie", n.desc = "竹篾";
                break;

              case "kiteGift2":
                n.name = "砂纸", n.iconName = "kite_prop_shazhi", n.desc = "砂纸";
                break;

              case "kiteGift3":
                n.name = "浆糊", n.iconName = "kite_prop_jianghu", n.desc = "浆糊";
                break;

              case "kiteGift4":
                n.name = "颜料", n.iconName = "kite_prop_yanliao", n.desc = "颜料";
                break;

              case "planeScore":
                n.name = "积分", n.iconName = "popIcon_planeScore", n.desc = "积分";
                break;

              case "flower":
                n.name = "玫瑰花", n.iconName = "popIcon_flower", n.desc = "玫瑰花";
                break;

              case "treasureMapGold":
                n.name = "宝石", n.iconName = "popIcon_mapBox_3", n.desc = "宝石";
                break;

              case "shovel":
                n.name = "铲子", n.iconName = "popIcon_mapBox_4", n.desc = "铲子", n.tips = "用于藏宝图活动挖宝";
                break;

              case "zongzi1":
                n.name = "板栗粽", n.iconName = "dragonBoat_item_blz", n.desc = "板栗粽";
                break;

              case "zongzi2":
                n.name = "豆沙粽", n.iconName = "dragonBoat_item_dsz", n.desc = "豆沙粽";
                break;

              case "zongzi3":
                n.name = "鲜肉粽", n.iconName = "dragonBoat_item_xrz", n.desc = "鲜肉粽";
                break;

              case "zongzi4":
                n.name = "蛋黄肉粽", n.iconName = "dragonBoat_item_dhz", n.desc = "蛋黄肉粽";
                break;

              case "zongzi5":
                n.name = "蜜枣粽", n.iconName = "dragonBoat_item_mzz", n.desc = "蜜枣粽";
                break;

              case "oCard":
                n.name = "连线棰", n.iconName = "popIcon_oCard", n.desc = "连线棰", n.tips = "用于端午活动翻转自己家";
                break;

              case "fCard":
                n.name = "捣蛋棰", n.iconName = "popIcon_fCard", n.desc = "捣蛋棰", n.tips = "用于端午活动翻转好友家";
                break;

              case "shop_oCard":
                n.name = "连线棰", n.iconName = "popIcon_oCard", n.desc = "连线棰";
                break;

              case "shop_fCard":
                n.name = "捣蛋棰", n.iconName = "popIcon_fCard", n.desc = "捣蛋棰";
                break;

              case "redfund":
                n.name = "吃货基金", n.iconName = "popIcon_redPackage", n.desc = "吃货基金";
                break;

              case "score":
                n.name = "积分", n.iconName = "worldCup_scroe", n.desc = "积分";
                break;

              case "jetton":
                n.name = "竞猜币", n.iconName = "worldCup_coin", n.desc = "竞猜币";
                break;

              case "worldCupScore":
                n.name = "积分", n.iconName = "worldCup_scroe", n.desc = "积分";
                break;

              case "luffyDice":
                n.name = "骰子", n.iconName = "pirateKing_common_pop_icon", n.desc = "骰子";
                break;

              case "privity":
                n.name = "默契值", n.iconName = "popIcon_privity", n.desc = "默契值", n.tips = "增加CP的默契度";
                break;

              case "pirateGift":
                n.name = "海盗宝箱", n.iconName = "popIcon_pirateGift", n.desc = "一个神秘的箱子，海盗们通常把掠夺来的宝藏藏在里面，开启后可以获得一种随机物品\n有概率获得：金币，道具，活动物品";
                break;

              case "energyGift":
                n.name = "能量宝箱", n.iconName = "popIcon_energyGift", n.desc = "一个装满能量的箱子，但在运输中可能会有所损失，开启后随机获得5~30点能量";
            }
            return n;
        }, t;
    }();
    e.ItemManager = t, __reflect(t.prototype, "game.ItemManager");
    var i = function() {
        function t() {}
        return Object.defineProperty(t.prototype, "iconName", {
            set: function(t) {
                this.icon = e.ResourcePath.getItemIconByName(t);
            },
            enumerable: !0,
            configurable: !0
        }), t.prototype.onGet = function(t, i) {
            switch (void 0 === i && (i = !1), this.count = t, this.isVip = i, this.name) {
              case "money":
                this.text = this.name + "x" + e.ComFunc.toThousands(t);
                break;

              case "monthcard":
                this.text = "VIP特权+" + t + "天";
                break;

              case "vip":
                this.text = "VIP特权+" + t + "天";
                break;

              default:
                this.text = this.name + "x" + t;
            }
        }, t.prototype.isTypeOf = function(e) {
            return -1 != this.type.indexOf(e);
        }, t;
    }();
    e.ItemInfo = i, __reflect(i.prototype, "game.ItemInfo");
}(game || (game = {}));

var game;

!function(e) {
    var t = function() {
        function t() {
            this.isLogined = !1;
        }
        return t.prototype.updateLoginParams = function(t, i) {
            if (this.params = i, t) {
                for (var n in i.query) e.loginParams[n] = i.query[n], console.log("query " + n + ":" + e.loginParams[n]);
                e.loginParams.shareTicket = i.shareTicket, e.loginParams.scene = i.scene, i.query && i.query.shareType ? e.loginParams.shareType = i.query.shareType : e.loginParams.shareType = "";
                var o = !1;
                !i.query || 1 != i.query.tp || 1074 != i.scene && 1073 != i.scene || (o = !0);
                var a = !1;
                (1103 == i.scene || 1104 == i.scene) && (a = !0);
            } else for (var n in i) e.loginParams[n] = i[n];
        }, t.prototype.wxCheckStatus = function(t) {
            var i = this;
            console.log("wxCheckStatus start"), HttpService.post(e.ServerMsg.WX_PLAYER, "uid=" + playerModel.uid, function(e) {
                i.updatePlayerData(e), console.log("wxCheckStatus suc");
            }, function() {
                console.log("wxplayer load error");
            }, function(e) {
                console.log("wxplayer errcode = " + e), t();
            });
        }, t.prototype.login = function(e, t, i, n) {
            void 0 === t && (t = !0), Loading.instance.setProgress("开始登录"), this.isLogined = !1, 
            this.onComplete = i, this.thisObj = n, e ? this.wxLogin(t) : this.onPlatformLogin();
        }, t.prototype.wxLogin = function(t) {
            var i = this;
            void 0 === t && (t = !0), console.log("wxLogin:", e.GameConfig.sdkServer, e.GameConfig.gameId);
            var n = this, o = t ? platform.user.weakLogin : platform.user.login;
            o(function(o, a) {
                if (console.log("sdk login suc isweak:" + t, o), Loading.instance.setProgress("平台登录成功"), 
                o && o.userInfo) {
                    var r = util.enCodeHtml(o.userInfo);
                    Loading.instance.setProgress("开始游戏登录"), HttpService.post(e.ServerMsg.WX_LOGIN, "encryptedCode=" + r + "&friendCode=" + e.loginParams.friendCode + "&shareType=" + e.loginParams.shareType, function(t) {
                        console.log("api wxLogin suc", t), Loading.instance.setProgress("游戏登录成功");
                        for (var i in t) e.loginParams[i] = t[i];
                        playerModel.update(t);
                         e.loginParams.isShowSubscribe = t.isShowSubscribed ? "true" : "false", 
                        e.loginParams.friendCode = "", e.loginParams.unlockAt = t.unlockTime, n.onPlatformLogin(), 
                        e.PlatformManager.LogEvent(Const.wxLogin);
                    }, null, i);
                } else if (a) {
                    console.log("出错啦，重试"), Loading.instance.setProgress("平台登录失败");
                    var s = "errCode = " + a.errCode + "------\x3e>errMsg = " + JSON.stringify(a.errMsg);
                    platform.common.showModal("友情提示", s, !1, "取消", null, "重试", null, function() {
                        n.wxLogin(t);
                    }, function() {}, function() {});
                }
            }, function() {
                console.log("需要授权获取用户信息");
                var t = new e.WxAuthPanel();
                hortor.StageManager.stage.addChild(t);
            });
        }, t.prototype.onPlatformLogin = function() {
            if (e.GameConfig.fromLoginParams(e.loginParams), playerModel.fromMenu = "1" == e.loginParams.fromMenu, 
            console.log("platform login suc:" + e.loginParams.action), "banned" == e.loginParams.action) {
                var t = parseInt(e.loginParams.unlockAt), i = "检测到您的账号已被封禁，如有问题，请联系疯狂游乐场客服！您的账号将于:" + moment(t).format("YYYY年MM月DD日HH时mm分ss秒") + "解封";
                return void (gateModel.isWxgame ? hortor.TipManager.alert(i) : alert(i));
            }
            if ("qqLogin" == e.loginParams.action) {
                var i = "QQ用户暂停注册";
                gateModel.isWxgame ? hortor.TipManager.alert(i) : alert(i);
            } else this.sendLoginAction();
        }, t.prototype.sendLoginAction = function() {
            var t = this;
            Loading.instance.setProgress("开始进入"), console.log("api login start"), HttpService.secret = e.GameConfig.apiSecret;
            var i = e.loginParams.userId || e.GameConfig.userId, n = e.GameConfig.client + e.GameConfig.version;
            HttpService.post(e.ServerMsg.LOGIN, "userId=" + i + "&clientVer=" + n, function(i) {
         //       Loading.instance.setProgress("进入游戏"), console.log("api login success!"), e.PlatformManager.LogEvent(Const.loginComplete), 
               t.updatePlayerData(i);
          //       e.PlatformManager.initialize(i);
          //      t.isLogined = !0, t.onComplete.call(t.thisObj);
            }, null, this).loadingState = !1;
        }, t.prototype.updatePlayerData = function(t) {
            e.GameConfig.fromLoginData(t);
            playerModel.updateFromLogin(t);
            this.connetTcp(t), 
            soundModel.soundOn = !playerModel.musicOff;
            soundModel.musicOn = !playerModel.musicBgOff;
        }, t.prototype.connetTcp = function(e) {
            var t = e.lastPostFriendSign || 0, i = JSON.stringify({
                action: 99,
                from_uid: playerModel.uid,
                values: [ t ]
            });
            TcpService.connect(e.broadcast, i);
        }, t;
    }();
    e.LoginManager = t, __reflect(t.prototype, "game.LoginManager"), e.loginParams = {
        userId: "",
        t: "",
        action: "",
        userImg: "",
        api: "",
        secret: "",
        isLocal: "",
        channel: "",
        isNewUser: "",
        fromMenu: "",
        isShowSubscribe: "",
        specialChannel: "",
        resourceCDN: "",
        friendJoinName: "",
        friendJoinCode: "",
        unlockAt: "",
        friendCode: "",
        shareType: "",
        shareTicket: "",
        shareCode: "",
        scene: 0
    };
}(game || (game = {}));

var loginManager = new game.LoginManager(), game;

!function(e) {
    var t = function() {
        function e() {}
        return e.notice = function(e) {
            null == this.noticer && (this.noticer = new hortor.Notice(), hortor.StageManager.getLayer(hortor.Layer.TOP).addChild(this.noticer), 
            this.noticer.horizontalCenter = 0), this.noticer.notice(e);
        }, Object.defineProperty(e, "isRunning", {
            get: function() {
                return this.noticer && this.noticer.isShowing;
            },
            enumerable: !0,
            configurable: !0
        }), e.hide = function(e) {
            this.noticer && this.noticer.hide(e);
        }, e;
    }();
    e.NoticeManager = t, __reflect(t.prototype, "game.NoticeManager");
}(game || (game = {}));

var game;

!function(e) {
    var t = function() {
        function t() {}
        return t.initialize = function() {
            t.regist(e.AcLockType.achieve, "xsmb", e.UINameType.menu + "_" + e.WindowType.WINDOW_ACHIEVE), 
            t.regist(e.AcLockType.guild, "hdt", e.UINameType.menu + "_" + e.ScreenType.GUILD_SCREEN), 
            t.regist(e.AcLockType.jisgaw, "jawsaw", e.UINameType.actBtnGroup, -1), t.regist(e.AcLockType.octopus, "smhy", e.UINameType.actBtnGroup, -1), 
            t.regist(e.AcLockType.taptitans, "taptitans", e.UINameType.actBtnGroup, -1), t.regist(e.AcLockType.inviteVip, "inviteVip", e.UINameType.menu + "_" + e.WindowType.GROUP_INVITEREWARD, -1), 
            t.regist(e.AcLockType.moneyBox, "inviteMoney", e.UINameType.menu + "_" + e.WindowType.GROUP_INVITEREWARD, -1), 
            t.regist(e.AcLockType.invite, "invite", e.UINameType.menu + "_" + e.WindowType.GROUP_INVITEREWARD, -1), 
            t.regist(e.AcLockType.recall, "recall", e.UINameType.menu + "_" + e.WindowType.GROUP_INVITEREWARD, -1), 
            t.regist(e.AcLockType.allInOne, "wannneng", e.UINameType.menu + "_" + e.WindowType.GROUP_INVITEREWARD, -1), 
            t.regist(e.AcLockType.monthCard, "monthCard", e.UINameType.menu + "_" + e.WindowType.GROUP_INVITEREWARD, -1), 
            t.regist(e.AcLockType.dailyRedBag, "dailyredbag", e.UINameType.menu + "_" + e.WindowType.GROUP_DAILYREWARD, -1), 
            t.regist(e.AcLockType.dailyEnergy, "kaifu", e.UINameType.menu + "_" + e.WindowType.GROUP_DAILYREWARD, -1), 
            t.regist(e.AcLockType.mine, "mine"), t.regist(e.AcLockType.map, "map", e.UINameType.mainBuildBtn, -1), 
            uiModel.bind("isMainWheel", this, this.updateAll);
        }, t.regist = function(t, i, n, o, a) {
            void 0 === o && (o = 1), void 0 === a && (a = !1);
            var r = e.ResourcePath.getOpenFuncImg(i), s = e.ResourcePath.getOpenFuncTitleImg(i), l = e.ResourcePath.getOpenFuncDescImg(i);
            this.funcMap[t] = {
                id: t,
                icon: r,
                target: n,
                tip: s,
                desc: l,
                direction: o
            };
        }, t.checkAll = function() {
            var e = this;
            egret.callLater(function() {
                e.updateAll();
            }, this);
        }, t.updateAll = function() {
            var i = playerModel.tutorial > 14 && !hortor.WindowManager.isModaling && !e.TutorialManager.instance.tutorialing;
            uiModel.isOpenFuncAvailable = i, hortor.Log.log(this, "updateAll  isModaling:" + hortor.WindowManager.isModaling + ",tutorialing:" + e.TutorialManager.instance.tutorialing + ",isMainWheel:" + uiModel.isMainWheel + ",isOpenFuncAvailable:" + uiModel.isOpenFuncAvailable + ",lockRunningId:" + this.lockRunningId + ",runningId:" + this.runningId), 
            uiModel.isMainWheel ? uiModel.isOpenFuncAvailable && (t.check(), t.open()) : e.TutorialManager.instance.tutorialing || (hortor.Log.log(this, "clearAll"), 
            -1 != this.lockRunningId ? (e.TutorialPointer.instance.hide(), this.waitCommonList.unshift(this.lockRunningId), 
            this.lockRunningId = -1) : -1 != this.runningId && (hortor.WindowManager.hideWindow(e.WindowType.WINDOW_OPEN_FUNC), 
            e.TutorialPointer.instance.hide(), gateModel.guide[this.runningId] || this.waitOpenList.unshift(this.runningId), 
            this.runningId = -1)), t.updateLockMenu();
        }, t.reset = function() {
            e.TutorialPointer.instance.hide(), hortor.WindowManager.hideWindow(e.WindowType.WINDOW_OPEN_FUNC), 
            this.runningId = -1, this.lockRunningId = -1, this.waitOpenList = [], this.waitCommonList = [], 
            this.openList = [], this.unlocking = -1;
        }, Object.defineProperty(t, "isRunning", {
            get: function() {
                return -1 != this.runningId || -1 != this.lockRunningId;
            },
            enumerable: !0,
            configurable: !0
        }), t.open = function() {
            return hortor.Log.log(this, "open:" + this.lockRunningId + ",waitCommonList:" + this.waitCommonList), 
            -1 != this.lockRunningId ? (this.pointUnlock(), !0) : this.waitCommonList.length > 0 ? (this.lockRunningId = this.waitCommonList.shift(), 
            this.pointUnlock(), !0) : (-1 == this.lockRunningId && -1 == this.runningId && this.waitOpenList.length > 0 && (this.runningId = this.waitOpenList.shift(), 
            this.openId(this.runningId)), !1);
        }, t.pointUnlock = function() {
            var t = this;
            e.TutorialPointer.instance.isRunning || (hortor.Log.log(this, "pointUnlock:" + this.lockRunningId), 
            e.TutorialPointer.instance.pointTargetByName(e.UINameType.menu + "_" + e.WindowType.WINDOW_MODULEUNLOCK, function() {
                t.openId(t.lockRunningId), hortor.Log.log(t, "pointUnlock complete lockRunningId:" + t.lockRunningId + ",runningId:" + t.runningId), 
                t.lockRunningId = -1, t.check();
            }, 0, -1));
        }, t.openId = function(i) {
            var n = this;
            hortor.Log.log(this, "openId:" + i), i == e.AcLockType.pet ? t.saveGuide(i, function() {
                e.TutorialManager.instance.startTutorial("pet", playerModel.tutorial, function() {
                    n.runningId = -1;
                });
            }, function() {
                n.runningId = -1;
            }) : this.funcMap[i] && (this.runningId = i, this.funcMap[this.runningId].onComplete = this.onFuncOpenComplete.bind(this), 
            this.funcMap[this.runningId].onOpen = this.onFuncOpenOpen.bind(this), e.TutorialPointer.instance.hide(), 
            hortor.WindowManager.showWindow(e.WindowType.WINDOW_OPEN_FUNC, this.funcMap[this.runningId]));
        }, t.onFuncOpenOpen = function() {
            hortor.Log.log(this, "onFuncOpenOpen runningId:" + this.runningId);
        }, t.onFuncOpenComplete = function(t) {
            hortor.Log.log(this, "onFuncOpenComplete id:" + t), t == e.AcLockType.mine ? 1 == playerModel.isTutorialMiner && e.TutorialManager.instance.startTutorial("map", 0) : t == e.AcLockType.bet ? e.TutorialManager.instance.startTutorial("bet2", 0) : t == e.AcLockType.map && e.TutorialPointer.instance.pointTargetByName(e.UINameType.islandNameGroup), 
            this.runningId = -1;
        }, t.check = function() {
            var t = !1;
            if (e.TutorialManager.instance.newbieTutorialing) return !1;
            if (this.runningId == e.AcLockType.bet) return !1;
            for (var i = -1, n = playerModel.rollTotalCount, o = (playerModel.highestCrowns, 
            _.isNumber(playerModel.inviteFriendVIPRemain)), a = (activityModel.getActivityInfo(e.ActivityType.Octopus), 
            15); a < gateModel.guide.length; a++) if (!gateModel.guide[a] && -1 == this.openList.indexOf(a) && (a == e.AcLockType.map && playerModel.highestCrowns >= Const.mapLimit && !playerModel.gainIslandReward || a == e.AcLockType.achieve && playerModel.tutorial > 14 || a == e.AcLockType.jisgaw && n >= Const.JigsawLimit && activityModel.isRunning(e.ActivityType.Jigsaw) || a == e.AcLockType.moneyBox && n >= Const.MoneyBoxLimit && playerModel.showBoxType == Const.SHOW_BOX_TYPE_NONE || a == e.AcLockType.inviteVip && gateModel.guide[e.AcLockType.moneyBox] && playerModel.showBoxType == Const.SHOW_BOX_TYPE_NONE || a == e.AcLockType.invite && gateModel.guide[e.AcLockType.inviteVip] && playerModel.showBoxType == Const.SHOW_BOX_TYPE_NONE || a == e.AcLockType.dailyRedBag && n >= Const.DailyRedBagLimit || a == e.AcLockType.dailyEnergy && n >= Const.DailyEnergyLimit || a == e.AcLockType.recall && n >= Const.RecallLimit || a == e.AcLockType.allInOne && n >= Const.AllinoneLimit || a == e.AcLockType.monthCard && !o && gateModel.guide[e.AcLockType.inviteVip] || a == e.AcLockType.guild && playerModel.highestCrowns >= Const.guildLimit || a == e.AcLockType.pet && playerModel.highestCrowns >= Const.petLimit && playerModel.tutorial < 20)) {
                i = a, hortor.Log.log(this, "check open:" + i), this.waitOpenList.push(i);
                break;
            }
            return -1 == i && (i = this.checkCommon()), -1 != i && (console.log("openFunc add id:" + i), 
            -1 == this.openList.indexOf(i) && (this.openList.push(i), t = !0)), this.updateLockMenu(), 
            t;
        }, t.checkCommon = function() {
            this.unlocking = -1;
            for (var t = -1, i = (playerModel.rollTotalCount, playerModel.highestCrowns), n = (_.isNumber(playerModel.inviteFriendVIPRemain), 
            0); n < this.commonIds.length; n++) {
                var o = this.commonIds[n], a = this.funcMap[o];
                if (null == a) ; else {
                    if (gateModel.guide[o] || -1 != this.openList.indexOf(o)) continue;
                    if (-1 == this.unlocking && (this.unlocking = o, this.updateLockMenu()), o == e.AcLockType.bet && i >= Const.betLimit || o == e.AcLockType.octopus && i >= Const.octopusLimit && activityModel.isRunning(e.ActivityType.Octopus) || o == e.AcLockType.mine && i >= Const.mineLimit || o == e.AcLockType.taptitans && i >= Const.monsterLimit && activityModel.isRunning(e.ActivityType.KillTitan) || o == e.AcLockType.bet3 && i >= Const.bet3Limit || o == e.AcLockType.bet4 && i >= Const.bet4Limit || o == e.AcLockType.bet5 && i >= Const.bet5Limit) {
                        t = o, hortor.Log.log(this, "common open:" + t), this.waitCommonList.push(t);
                        break;
                    }
                }
            }
            return t;
        }, t.updateLockMenu = function() {
            var t = this.waitCommonList.length > 0 ? this.waitCommonList[0] : this.unlocking;
            t = this.lockRunningId > 0 ? this.lockRunningId : t;
            var i = uiModel.getUI(e.UINameType.menu + "_" + e.WindowType.WINDOW_MODULEUNLOCK);
            if (i) if (t && -1 != t && playerModel.highestCrowns >= Const.OpenBtnLimit) {
                var n = this.commonIds.indexOf(t);
                i.isShowable = !0, i && (i.iconSource = "faceui_icon_js" + (n + 1));
            } else i.isShowable = !1;
        }, t.saveGuide = function(t, i, n) {
            if (gateModel.guide[t]) return hortor.Log.warn(this, "saveGuide has unlocked:" + t), 
            void n();
            switch (t) {
              case e.AcLockType.bet:
                playerModel.maxBet = 2;
                break;

              case e.AcLockType.bet3:
                playerModel.maxBet = 3;
                break;

              case e.AcLockType.bet4:
                playerModel.maxBet = 4;
                break;

              case e.AcLockType.bet5:
                playerModel.maxBet = 5;
                break;

              case e.AcLockType.inviteVip:
                playerModel.inviteFriendVIPRemain = 172800;
                break;

              case e.AcLockType.dailyRedBag:
                playerModel.shareCount = 0;
                break;

              case e.AcLockType.recruit:
                playerModel.hasRecruit = !0;
                break;

              case e.AcLockType.moneyBox:
                playerModel.showBoxType = Const.SHOW_BOX_TYPE_JBBX;
                break;

              case e.AcLockType.inviteVip:
                playerModel.showBoxType = Const.SHOW_BOX_TYPE_INVITE_VIP;
            }
            HttpService.post(e.ServerMsg.BASIC_GUIDE, "uid=" + playerModel.uid + "&index=" + t, function(e) {
                gateModel.guide[t] = 1, playerModel.update(e);
                var n = gateModel.getGateByLockType(t);
                n && n.update(!0), i();
            }, n);
        }, t.runningId = -1, t.lockRunningId = -1, t.funcMap = {}, t.waitOpenList = [], 
        t.waitCommonList = [], t.openList = [], t.commonIds = [ e.AcLockType.bet, e.AcLockType.octopus, e.AcLockType.mine, e.AcLockType.taptitans, e.AcLockType.bet3, e.AcLockType.bet4, e.AcLockType.bet5 ], 
        t;
    }();
    e.OpenFuncManager = t, __reflect(t.prototype, "game.OpenFuncManager");
}(game || (game = {}));

var ReportManager = function() {
    function e() {
        this.extra = {}, this.isActivity = !1, this.energyCost = 0, this.isOctopus = !1, 
        this.pufferCost = 0, this.isTaptitans = !1, this.shellCost = 0, this.isPrivateMsg = !1, 
        this.isFriendEnergy = !1, this.isBattleOther = !1, this.isJigsawComplete = !1, this.isGive = !1, 
        this.isExchange = !1, this.isWorldMsg = !1, this.buildStatus = 0, this.isShared = !1, 
        this.shareNum = 0;
    }
    return e.getInstance = function() {
        return null == e._instance && (e._instance = new e()), e._instance;
    }, e.prototype.reportStart = function() {
        if (hortor.SystemManager.isWxGame) {
            console.log("定时打点开启");
            var t = {
                regionFrequency: {
                    5: 30,
                    60: 60,
                    600: 300,
                    default: 0
                },
                setReportDataSync: function(t) {
                    var i = e.getInstance().getReportData();
                    return e.getInstance().clear(), i;
                },
                afterReport: function(e) {
                    e ? console.log("after report err", e) : console.log("after report Success");
                }
            };
            platform.common.onLineReportStart(t), this.addListeners(), this.getFriendsList();
        }
    }, e.prototype.reportStop = function() {
        platform.common.onLineReportStop();
    }, e.prototype.addListeners = function() {
        var e = hortor.StageManager.stage;
        e.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onStageClick, this), EventCenter.addEventListener(EventConst.ReportEnergyCost, this.onEnergyCost, this), 
        EventCenter.addEventListener(EventConst.ReportOctopusOpen, this.onOctopusOpen, this), 
        EventCenter.addEventListener(EventConst.ReportAttackTitan, this.onAttackTitan, this), 
        EventCenter.addEventListener(EventConst.ReportSendPrivateMsg, this.onSendPrivateMsg, this), 
        EventCenter.addEventListener(EventConst.ReportGetFriendEnergy, this.onGetFriendEnergy, this), 
        EventCenter.addEventListener(EventConst.AdjustDAPAO, this.onAdjustDAPAO, this), 
        EventCenter.addEventListener(EventConst.ReportJigsawComplete, this.onJigsawComplete, this), 
        EventCenter.addEventListener(EventConst.ReportGive, this.onGive, this), EventCenter.addEventListener(EventConst.ReportExchange, this.onExchange, this), 
        EventCenter.addEventListener(EventConst.ReportSendWorldMsg, this.onSendWorldMsg, this), 
        EventCenter.addEventListener(EventConst.ReportBuildStatus, this.onBuildStatus, this), 
        EventCenter.addEventListener(EventConst.ReportShareSuccess, this.onShareSuccess, this);
    }, e.prototype.onStageClick = function(e) {
        this.isActivity = !0;
    }, e.prototype.setData = function(e, t) {
        this.extra && (this.extra[e] = t);
    }, e.prototype.clear = function() {
        this.isActivity = !1, this.energyCost = 0, this.isOctopus = !1, this.pufferCost = 0, 
        this.isTaptitans = !1, this.shellCost = 0, this.isPrivateMsg = !1, this.isFriendEnergy = !1, 
        this.isBattleOther = !1, this.isJigsawComplete = !1, this.isGive = !1, this.isExchange = !1, 
        this.isWorldMsg = !1, this.buildStatus = 0, this.isShared = !1, this.shareNum = 0, 
        this.extra = {};
    }, e.prototype.getReportData = function() {
        return this.setData(ReportType.Money, playerModel.money), this.setData(ReportType.IsActivity, this.isActivity), 
        this.setData(ReportType.Energy, playerModel.energy), this.setData(ReportType.EnergyCost, this.energyCost), 
        this.setData(ReportType.IslandsNum, playerModel.island), friendModel.friendData ? this.setData(ReportType.FriendNum, friendModel.friendData.length) : this.setData(ReportType.FriendNum, 0), 
        this.setData(ReportType.IsVip, playerModel.monthCardExpired > 0), this.setData(ReportType.Crowns, playerModel.crowns), 
        this.setData(ReportType.IsOctopus, this.isOctopus), this.setData(ReportType.PufferCost, this.pufferCost), 
        this.setData(ReportType.IsTaptitans, this.isTaptitans), this.setData(ReportType.ShellCost, this.shellCost), 
        this.setData(ReportType.IsPrivateMsg, this.isPrivateMsg), this.setData(ReportType.IsFriendEnergy, this.isFriendEnergy), 
        this.setData(ReportType.IsBattleOther, this.isBattleOther), this.setData(ReportType.IsJigsawComplete, this.isJigsawComplete), 
        this.setData(ReportType.IsGive, this.isGive), this.setData(ReportType.IsExchange, this.isExchange), 
        this.setData(ReportType.IsWorldMsg, this.isWorldMsg), this.setData(ReportType.BuildStatus, this.buildStatus), 
        this.setData(ReportType.IsSubscribed, playerModel.isSubscribed), this.setData(ReportType.IsPrivilege, playerModel.isPrivilege), 
        this.setData(ReportType.IsShared, this.isShared), this.setData(ReportType.ShareNum, this.shareNum), 
        this.extra;
    }, e.prototype.getFriendsList = function() {
        HttpService.get(game.ServerMsg.SHOW_DONATE, "uid=" + playerModel.uid, function(e) {
            friendModel.friendData = e.friends;
        });
    }, e.prototype.onEnergyCost = function() {
        this.energyCost += wheelModel.selectWheelBet;
    }, e.prototype.onOctopusOpen = function() {
        this.isOctopus || (this.isOctopus = !0), this.pufferCost += 1;
    }, e.prototype.onAttackTitan = function() {
        this.isTaptitans || (this.isTaptitans = !0), this.shellCost += 1;
    }, e.prototype.onSendPrivateMsg = function() {
        this.isPrivateMsg || (this.isPrivateMsg = !0);
    }, e.prototype.onGetFriendEnergy = function() {
        this.isFriendEnergy || (this.isFriendEnergy = !0);
    }, e.prototype.onAdjustDAPAO = function() {
        this.isBattleOther || (this.isBattleOther = !0);
    }, e.prototype.onJigsawComplete = function() {
        this.isJigsawComplete || (this.isJigsawComplete = !0);
    }, e.prototype.onGive = function() {
        this.isGive || (this.isGive = !0);
    }, e.prototype.onExchange = function() {
        this.isExchange || (this.isExchange = !0);
    }, e.prototype.onSendWorldMsg = function() {
        this.isWorldMsg || (this.isWorldMsg = !0);
    }, e.prototype.onBuildStatus = function(e) {
        var t = e.data;
        if (2 == t[0]) this.buildStatus = 1; else if (3 == t[0]) {
            if (this.buildStatus = 2, islandModel.buildings) {
                for (var i = 0, n = 0; n < islandModel.buildings.length; n++) i += islandModel.buildings[n].level;
                0 == i && (this.buildStatus = 3);
            }
        } else this.buildStatus = 1;
    }, e.prototype.onShareSuccess = function() {
        this.isShared || (this.isShared = !0), this.shareNum += 1;
    }, e;
}();

__reflect(ReportManager.prototype, "ReportManager");

var ReportType = function() {
    function e() {}
    return e.Money = "Money", e.IsActivity = "IsActivity", e.Energy = "Energy", e.EnergyCost = "EnergyCost", 
    e.IslandsNum = "IslandsNum", e.FriendNum = "FriendNum", e.IsVip = "IsVip", e.Crowns = "Crowns", 
    e.IsOctopus = "IsOctopus", e.PufferCost = "PufferCost", e.IsTaptitans = "IsTaptitans", 
    e.ShellCost = "ShellCost", e.IsPrivateMsg = "IsPrivateMsg", e.IsFriendEnergy = "IsFriendEnergy", 
    e.IsBattleOther = "IsBattleOther", e.IsJigsawComplete = "IsJigsawComplete", e.IsGive = "IsGive", 
    e.IsExchange = "IsExchange", e.IsWorldMsg = "IsWorldMsg", e.BuildStatus = "BuildStatus", 
    e.IsSubscribed = "IsSubscribed", e.IsPrivilege = "IsPrivilege", e.IsShared = "IsShared", 
    e.ShareNum = "ShareNum", e;
}();

__reflect(ReportType.prototype, "ReportType");

var game;

!function(e) {
    var t = function() {
        function t() {
            this.planePointTimes = !1, this.planePointRewards = !1;
        }
        return t.prototype.update = function(e) {
            if (e && (this.data = e, e.activityInfos)) {
                null == this.activityMap && (this.activityMap = {});
                for (var t in e.activityInfos) {
                    var n = e.activityInfos[t], o = n.aid, a = this.activityMap[o];
                    null == a ? (a = new i(n), this.activityMap[a.aid] = a) : a.update(n);
                }
            }
            this.initJigsaw(), this.initOctopus(), this.initKillTitanGate(), this.initBeach(), 
            this.initDragonBoat(), this.initTreasureMap(), this.initRecall(), this.initPlane(), 
            this.initKite(), this.initTree(), this.initMonday(), this.initMonday(), this.initPirateKing(), 
            this.initFestival(), this.initInviteGift(), this.initDailyGift(), this.initShareCheer(), 
            this.initPirateGift(), this.initMeasureGift(), this.initAnnual(), this.initKite();
            var r = [];
            for (var t in this.activityMap) {
                var s = this.activityMap[t], l = this.getGate(s.type);
                l && r.push(l);
            }
            gateModel.addGroupGate("Activity", r);
        }, t.prototype.getActivityInfo = function(e, t) {
            for (var i in this.activityMap) {
                var n = this.activityMap[i];
                if (n.type == e) {
                    if (!t) return n;
                    if (n.configData.name == t) return n;
                }
            }
            return null;
        }, t.prototype.enterActivity = function(t) {
            var i = this.getActivityInfo(t);
            if (!i.isRunning) return void hortor.TipManager.bubble("活动已结束");
            switch (t) {
              case e.ActivityType.Jigsaw:
                jigsawModel.jigsawReward && (jigsawModel.jigsawReward = !1, gateModel.updateGate(e.ActivityType.Jigsaw)), 
                hortor.WindowManager.currentWindow = e.WindowType.WINDOW_JIGSAW;
                break;

              case e.ActivityType.Octopus:
                gateModel.guide[e.AcLockType.octopus] ? hortor.ScreenManager.currentScreen = e.ScreenType.OCTOPUS_SCREEN : e.ComFunc.openComConfirmPanel(e.AcLockType.octopus);
                break;

              case e.ActivityType.KillTitan:
                gateModel.guide[e.AcLockType.taptitans] ? hortor.ScreenManager.currentScreen = e.ScreenType.KILLTITAN_SCREEN : e.ComFunc.openComConfirmPanel(e.AcLockType.taptitans);
                break;

              case e.ActivityType.beach:
                hortor.ScreenManager.currentScreen = e.ScreenType.BEACH_SCREEN;
                break;

              case e.ActivityType.dragonBoat:
                hortor.ScreenManager.currentScreen = e.ScreenType.DRAGONBOAT_SCREEN;
                break;

              case e.ActivityType.treasureMap:
                hortor.ScreenManager.currentScreen = e.ScreenType.TREASUREMAP_SCREEN;
                break;

              case e.ActivityType.recall:
                hortor.WindowManager.currentWindow = e.WindowType.WINDOW_RECALL;
                break;

              case e.ActivityType.plane:
                hortor.ScreenManager.currentScreen = e.ScreenType.PLANE_SCREEN;
                break;

              case e.ActivityType.kite:
                KiteFunc.enterKiteSquare(playerModel.uid);
                break;

              case e.ActivityType.tree:
                TreeFunc.redPoint = !1, gateModel.updateGate(e.ActivityType.tree), hortor.ScreenManager.currentScreen = e.ScreenType.TREE_SCREEN;
                break;

              case e.ActivityType.monday:
                hortor.ScreenManager.currentScreen = e.ScreenType.MONDAY_SCREEN;
                break;

              case e.ActivityType.worldCup:
                hortor.WindowManager.currentWindow = e.WindowType.WINDOW_WORLDCUP;
                break;

              case e.ActivityType.boater:
                hortor.WindowManager.currentWindow = e.WindowType.WINDOW_BOATER;
                break;

              case e.ActivityType.pirateKing:
                hortor.ScreenManager.currentScreen = e.ScreenType.PIRATEKING_SCREEN;
                break;

              case e.ActivityType.annualCollect:
                hortor.WindowManager.currentWindow = e.WindowType.WINDOW_ANNUAL_MAIN;
            }
        }, Object.defineProperty(t.prototype, "hasTooltips", {
            get: function() {
                for (var e = !1, i = 0; i < t.AcTypes.length; i++) {
                    var n = this.getActivityInfo(t.AcTypes[i]);
                    if (n && n.endRemain > 0 && playerModel.island >= t.AcLimits[i]) {
                        var o = -1 == gateModel.clearedBadges.indexOf(n.type + "-" + n.aid);
                        if (o) {
                            e = !0;
                            break;
                        }
                    }
                }
                return e;
            },
            enumerable: !0,
            configurable: !0
        }), t.prototype.closeTooltips = function() {
            for (var e = "", i = 0; i < t.AcTypes.length; i++) {
                var n = this.getActivityInfo(t.AcTypes[i]);
                if (n && n.endRemain > 0 && playerModel.island >= t.AcLimits[i]) {
                    var o = n.type + "-" + n.aid;
                    e += o, i < t.AcTypes.length - 1 && (e += ",");
                }
            }
            gateModel.saveRed(e, !0);
        }, t.prototype.isRunning = function(e) {
            var t = this.getActivityInfo(e);
            return t && t.isRunning;
        }, t.prototype.getGate = function(e) {
            return gateModel.getGate(e);
        }, t.prototype.initJigsaw = function() {
            var t = this.getActivityInfo(e.ActivityType.Jigsaw);
            t && t.update({
                beginRemain: jigsawModel.jigsawInfo.openTime,
                endRemain: jigsawModel.jigsawInfo.closeTime
            }), gateModel.addGate(e.ActivityType.Jigsaw, !1, !1, e.AcLockType.jisgaw).updateMethod = function(e) {
                if (t) {
                    t.onChange = e.update.bind(e);
                    var i = !1, n = jigsawModel.jigsawInfo;
                    if (n && n.bags) for (var o = 0; o < jigsawModel.jigsawInfo.bags.length; o++) if (jigsawModel.jigsawInfo.bags[o] > 0 && !jigsawModel.jigsawInfo.pieces[o]) {
                        i = !0;
                        break;
                    }
                    i = i && n && n.RewardCount < 10 && 0 == n.openTime && n.closeTime > 0;
                    var a = i || jigsawModel.jigsawReward || jigsawModel.newJigsawNews;
                    e.logicRed = a, e.logicShow = jigsawModel.jigsawInfo.closeTime > 0;
                } else e.isUnlock = !1;
            };
        }, t.prototype.initOctopus = function() {
            var t = !1, i = this.getActivityInfo(e.ActivityType.Octopus);
            gateModel.addGate(e.ActivityType.Octopus, !1, !1, e.AcLockType.octopus).updateMethod = function(e) {
                i ? (t = octopusModel.octopusRedPoint || octopusModel.octopusLogRedPoint || octopusModel.octopusMessageRedPoint || !i.playerData.gotReward && i.playerData.hasOpen, 
                e.logicRed = t, e.logicShow = i.isRunning, i.onChange = e.update.bind(e)) : e.isUnlock = !1;
            };
        }, t.prototype.initKillTitanGate = function() {
            var t = this.getActivityInfo(e.ActivityType.KillTitan);
            gateModel.addGate(e.ActivityType.KillTitan, !1, !1, e.AcLockType.taptitans).updateMethod = function(e) {
                t ? (e.logicRed = t.playerData.hasTitanSleep && playerModel.summonStone > 0, t.onChange = e.update.bind(e)) : e.isUnlock = !1;
            };
        }, t.prototype.initBeach = function() {
            var t = !1, i = this.getActivityInfo(e.ActivityType.beach);
            gateModel.addGate(e.ActivityType.beach).updateMethod = function(n) {
                i ? (t = i.isRunning && e.BeachCache.rewardRedPoint || e.BeachCache.workersRedPoint || e.BeachCache.newsRedPoint || e.BeachCache.friendsRedPoint || e.BeachCache.refreshRedPoint || e.BeachCache.rewardNewsRedPoint, 
                n.isUnlock = playerModel.island >= Const.beachLimit, n.logicRed = t, n.logicShow = i.isRunning && playerModel.island >= Const.beachLimit, 
                i.onChange = n.update.bind(n)) : n.isUnlock = !1;
            };
        }, t.prototype.initTreasureMap = function() {
            var t = this.getActivityInfo(e.ActivityType.treasureMap);
            gateModel.addGate(e.ActivityType.treasureMap).updateMethod = function(e) {
                t ? (e.isUnlock = playerModel.island > 2, e.logicRed = t.isRunning, e.logicShow = t.isRunning, 
                t.onChange = e.update.bind(e)) : e.isUnlock = !1;
            };
        }, t.prototype.initRecall = function() {
            var t = this.getActivityInfo(e.ActivityType.recall);
            gateModel.addGate(e.ActivityType.recall).updateMethod = function(e) {
                t ? (e.isUnlock = playerModel.island > 0, e.logicRed = t && t.isRunning && 1 == t.playerData.recallStatus, 
                t.onChange = e.update.bind(e)) : e.isUnlock = !1;
            };
        }, t.prototype.initPlane = function() {
            var t = this, i = this.getActivityInfo(e.ActivityType.plane);
            gateModel.addGate(e.ActivityType.plane).updateMethod = function(e) {
                i ? (e.isUnlock = playerModel.island > 1, e.logicRed = i && i.isRunning && (t.planePointTimes || t.planePointRewards), 
                i.onChange = e.update.bind(e)) : e.isUnlock = !1;
            };
        }, t.prototype.initKite = function() {
            var t = activityModel.getActivityInfo(e.ActivityType.kite);
            gateModel.addGate(e.ActivityType.kite).updateMethod = function(e) {
                t ? (e.logicRed = KiteFunc.hasSendMsg || KiteFunc.kiteMenuRedStatus || KiteFunc.firstEnter, 
                e.logicShow = t.isRunning && playerModel.island > 0, t.onChange = e.update.bind(e)) : e.isUnlock = !1;
            };
        }, t.prototype.initTree = function() {
            var t = this.getActivityInfo(e.ActivityType.tree);
            gateModel.addGate(e.ActivityType.tree).updateMethod = function(e) {
                t ? (e.isUnlock = playerModel.island > 0, e.logicRed = t && t.isRunning && TreeFunc.redPoint, 
                t.onChange = e.update.bind(e)) : e.isUnlock = !1;
            };
        }, t.prototype.initMonday = function() {
            var t = this.getActivityInfo(e.ActivityType.monday);
            gateModel.addGate(e.ActivityType.monday).updateMethod = function(e) {
                t ? (e.isUnlock = playerModel.island > 0, e.logicRed = t && t.isRunning && t.playerData.redPoint, 
                t.onChange = e.update.bind(e)) : e.isUnlock = !1;
            };
        }, t.prototype.initBoater = function() {
            var t = this.getActivityInfo(e.ActivityType.boater);
            gateModel.addGate(e.ActivityType.boater).updateMethod = function(e) {
                t ? (e.isUnlock = playerModel.island > 0, e.logicRed = t && t.isRunning && t.playerData.redPoint, 
                t.onChange = e.update.bind(e)) : e.isUnlock = !1;
            };
        }, t.prototype.initPirateKing = function() {
            var t = this.getActivityInfo(e.ActivityType.pirateKing);
            gateModel.addGate(e.ActivityType.pirateKing).updateMethod = function(e) {
                t ? (e.isUnlock = playerModel.island > t.configData.islandLimit - 1, e.logicRed = t && t.isRunning, 
                t.onChange = e.update.bind(e)) : e.isUnlock = !1;
            };
        }, t.prototype.initFestival = function() {
            var t = activityModel.getActivityInfo(e.ActivityType.occasionalGift);
            gateModel.addGate(e.ActivityType.occasionalGift).updateMethod = function(e) {
                t ? (e.logicShow = t && t.isRunning && !playerModel.gotOccasionalGift && playerModel.island > 0 && !gateModel.iosPay, 
                t.onChange = e.update.bind(e)) : e.isUnlock = !1;
            };
        }, t.prototype.initInviteGift = function() {
            var t = activityModel.getActivityInfo(e.ActivityType.inviteGift);
            gateModel.addGate(e.ActivityType.inviteGift).updateMethod = function(e) {
                t ? (e.logicShow = t.isRunning && playerModel.island > 0 && !t.playerData.hasBuy, 
                t.onChange = e.update.bind(e)) : e.isUnlock = !1;
            };
        }, t.prototype.initDailyGift = function() {
            var t = activityModel.getActivityInfo(e.ActivityType.dailyGift);
            gateModel.addGate(e.ActivityType.dailyGift).updateMethod = function(e) {
                t ? (e.logicShow = t.isRunning && playerModel.island > 0 && !gateModel.iosPay, t.onChange = e.update.bind(e)) : e.isUnlock = !1;
            };
        }, t.prototype.initDragonBoat = function() {
            var t = activityModel.getActivityInfo(e.ActivityType.dragonBoat);
            gateModel.addGate(e.ActivityType.dragonBoat).updateMethod = function(e) {
                t ? (e.logicShow = t.isRunning && playerModel.island > 1, t.onChange = e.update.bind(e)) : e.isUnlock = !1;
            };
        }, t.prototype.initShareCheer = function() {
            var t = activityModel.getActivityInfo(e.ActivityType.helpGift);
            gateModel.addGate(e.ActivityType.helpGift).updateMethod = function(e) {
                t ? (e.logicShow = !t.playerData.gotReward && t.isRunning && playerModel.island > t.configData.conf.islandLimit, 
                t.onChange = e.update.bind(e)) : e.isUnlock = !1;
            };
        }, t.prototype.initPirateGift = function() {
            var t = activityModel.getActivityInfo(e.ActivityType.occasionalGift, e.ActivityType.pirateGift), i = activityModel.getActivityInfo(e.ActivityType.pirateKing);
            gateModel.addGate(e.ActivityType.pirateGift).updateMethod = function(e) {
                t && i ? e.logicShow = t && i && t.isRunning && playerModel.island > i.configData.islandLimit - 1 && !t.playerData.gotOccasionalGift && !gateModel.iosPay : e.isUnlock = !1;
            };
        }, t.prototype.initKiteGift = function() {
            var t = activityModel.getActivityInfo(e.ActivityType.occasionalGift, e.ActivityType.kiteGift);
            gateModel.addGate(e.ActivityType.kiteGift).updateMethod = function(e) {
                t ? (e.logicShow = t.isRunning && playerModel.island > 0 && !t.playerData.gotOccasionalGift && !gateModel.iosPay, 
                t.onChange = e.update.bind(e)) : e.isUnlock = !1;
            };
        }, t.prototype.initMeasureGift = function() {
            var t = activityModel.getActivityInfo(e.ActivityType.occasionalGift, e.ActivityType.measureGift);
            gateModel.addGate(e.ActivityType.measureGift).updateMethod = function(e) {
                t ? (e.logicShow = t.isRunning && playerModel.island > 2 && !t.playerData.gotOccasionalGift && !gateModel.iosPay, 
                t.onChange = e.update.bind(e)) : e.isUnlock = !1;
            };
        }, t.prototype.initPartyGift = function() {
            var t = activityModel.getActivityInfo(e.ActivityType.occasionalGift, e.ActivityType.partyGift);
            gateModel.addGate(e.ActivityType.partyGift).updateMethod = function(e) {
                t ? (e.logicShow = t.isRunning && playerModel.island > 0 && !t.playerData.gotOccasionalGift && !gateModel.iosPay, 
                t.onChange = e.update.bind(e)) : e.isUnlock = !1;
            };
        }, t.prototype.initAnnual = function() {
            var t = activityModel.getActivityInfo(e.ActivityType.annualCollect), i = !1;
            gateModel.addGate(e.ActivityType.annualCollect).updateMethod = function(e) {
                t ? (i = AnnualMarkData.annualCollectPoint || AnnualMarkData.luckyBoxPoint || AnnualMarkData.annualRebatePoint, 
                e.logicRed = i, e.logicShow = t.isRunning && playerModel.island > 0, t.onChange = e.update.bind(e)) : e.isUnlock = !1;
            };
        }, t.AcTypes = [ e.ActivityType.beach, e.ActivityType.tree, e.ActivityType.kite, e.ActivityType.recall, e.ActivityType.plane, e.ActivityType.dragonBoat, e.ActivityType.boater, e.ActivityType.pirateKing, e.ActivityType.treasureMap, e.ActivityType.monday, e.ActivityType.annualCollect ], 
        t.AcLimits = [ Const.beachLimit, 1, 1, 1, 0, 2, 1, 1, 3, 1, 0 ], t;
    }();
    e.ActivityModel = t, __reflect(t.prototype, "game.ActivityModel");
    var i = function() {
        function t(e) {
            e && this.update(e);
        }
        return t.prototype.update = function(e) {
            var t = this;
            for (var i in e) this[i] = e[i];
            this.beginRemain > 0 ? (this.clock = hortor.TimerManager.addClock("Activity_" + this.aid, this.beginRemain), 
            this.clock.registCallBack(this, function() {
                t.beginRemain = 0, t.onChange && t.onChange();
            })) : (this.clock = hortor.TimerManager.addClock("Activity_" + this.aid, this.endRemain), 
            this.clock.registCallBack(this, function() {
                t.endRemain = 0, t.onChange && t.onChange();
            }, function(e) {
                t.onUpdate && t.onUpdate(t.clock.leftTimeFormatZh);
            }));
        }, Object.defineProperty(t.prototype, "isRunning", {
            get: function() {
                return this.type == e.ActivityType.KillTitan ? !0 : this.endRemain > 0 && this.beginRemain <= 0;
            },
            enumerable: !0,
            configurable: !0
        }), t;
    }();
    e.ActivityInfo = i, __reflect(i.prototype, "game.ActivityInfo");
}(game || (game = {}));

var activityModel, AnnualData = {
    annualCollect: {
        bags: [ 0, 0, 0, 0, 0, 0, 0 ],
        donateCount: 0,
        receiveCount: 0,
        openCount: 0,
        endRemain: 0,
        configData: [ {
            id: 1,
            formula: [ 1, 2 ],
            reward: {
                energy: 10,
                money: 1e6
            }
        }, {
            id: 2,
            formula: [ 1, 2, 3 ],
            reward: {
                energy: 20,
                horn: 3,
                money: 2e6
            }
        }, {
            id: 3,
            formula: [ 1, 2, 3, 4 ],
            reward: {
                energy: 30,
                miniShield: 1,
                money: 3e6
            }
        } ]
    },
    annualRebate: {
        payCount: 0,
        rollCount: 0,
        payBoxes: [ !1, !1, !1, !1 ],
        rollBoxes: [ !1, !1, !1, !1 ],
        endRemain: 391939,
        confs: {
            pay: [ {
                type: "pay",
                value: 6,
                reward: {
                    wishCoin: 1,
                    money: 2e6
                }
            } ],
            energy: [ {
                type: "energy",
                value: 100,
                reward: {
                    money: 1e6
                }
            } ]
        }
    },
    luckyBox: {
        wishCoin: 0,
        openCount: 0,
        boxes: [ !1, !1, !1, !1, !1 ],
        hasFree: !0,
        endRemain: 391939,
        confs: [ {
            id: 1,
            openTime: 20,
            reward: {
                energy: 50
            }
        } ]
    },
    annualGift: {
        endRemain: 0,
        giftInfos: [ {
            boughtTimes: 0,
            daily: 0,
            timesLimit: 0,
            goodsId: "",
            rewards: [ {
                name: "energy",
                count: 10
            } ],
            price: 0
        } ]
    }
}, AnnualMarkData = {
    sendFontId: 0,
    shareFontId: 0,
    endRemain: 0,
    selectedTabIndex: 0,
    luckyBoxLogs: [],
    annualCollectPoint: !1,
    luckyBoxPoint: !1,
    annualRebatePoint: !1,
    annualCollectNewsPoint: !1,
    sendData: {
        uid: 0
    }
}, game;

!function(e) {
    var t = function() {
        function t() {}
        return t.getShipwreckConf = function() {
            var t = activityModel.getActivityInfo(e.ActivityType.beach).configData.shipwreck.confMap2;
            return t[i.shipwreck.gold];
        }, t.getBeachPropById = function(t) {
            var i = activityModel.getActivityInfo(e.ActivityType.beach).configData.collections;
            return _.find(i, function(e) {
                return e.cid == t;
            });
        }, t.getPlayer = function(t, n) {
            var o = _.find(i.friends, function(e) {
                return e.uid == t;
            });
            if (n && "function" == typeof n) o ? n(o) : HttpService.post(e.ServerMsg.KILLTITAN_GET_PLAYER_SIMLE_INFO, "uid=" + playerModel.uid + "&ids=" + t, function(e) {
                i.friends.push(e.playerSimpleInfos[0]), n(e.playerSimpleInfos[0]);
            }); else {
                if (o) return o;
                HttpService.post(e.ServerMsg.KILLTITAN_GET_PLAYER_SIMLE_INFO, "uid=" + playerModel.uid + "&ids=" + t, function(e) {
                    return i.friends.push(e.playerSimpleInfos[0]), e.playerSimpleInfos[0];
                });
            }
        }, t.corpsData = function(e) {
            for (var t = -1, n = 0; n < i.corps.length; n++) i.corps[n].uid == e.uid && i.corps[n].trackId == e.trackId && (t = n);
            t >= 0 ? (i.corps[t] = e, e.uid == playerModel.uid ? 0 == e.ownerSailor && i.corps.splice(t, 1) : 0 == e.enemySailor && i.corps.splice(t, 1)) : i.corps.push(e);
        }, t.checkIsShowRewardRed = function() {
            var e = !1;
            if (0 == o.recipes.length) return t.rewardRedPoint;
            for (var i = 0; i < o.recipes.length; i++) {
                var n = o.recipes[i].formula;
                if (t.calIsAllOver(n)) {
                    e = !0;
                    break;
                }
            }
            return e;
        }, t.calIsAllOver = function(e) {
            for (var t = !0, i = util.cloneArr(o.collections), n = 0; n < e.length; n++) {
                var a = e[n] - 1;
                if (i[a] <= 0) {
                    t = !1;
                    break;
                }
                i[a]--;
            }
            return t;
        }, t.checkIsWorkerRedPoint = function() {
            if (0 != n.confs.length && 0 != n.casuals.length) {
                for (var e = [], i = 0; i < n.confs.length; i++) {
                    var o = {
                        hasGot: n.casuals[i],
                        ableGot: n.worth >= n.confs[i]
                    };
                    e.push(o);
                }
                for (var a = !1, r = 0; r < e.length; r++) if (e[r].ableGot && !e[r].hasGot) {
                    a = !0;
                    break;
                }
                t.workersRedPoint = a;
            }
        }, t.isJoinOwner = function(e) {
            for (var t = !1, n = i.shipwreck.owners, o = e || playerModel.uid, a = 0; a < n.length; a++) if (n[a].uid == o) {
                t = !0;
                break;
            }
            return t;
        }, t.isJoinEnemy = function(e) {
            for (var t = !1, n = i.shipwreck.enemies, o = e || playerModel.uid, a = 0; a < n.length; a++) if (n[a].uid == o) {
                t = !0;
                break;
            }
            return t;
        }, t.isSelfJoin = function(e) {
            return t.isJoinOwner(e) || t.isJoinEnemy(e);
        }, t.ownersJoinPlayers = function() {
            for (var e = i.shipwreck.owners, t = 0, n = 0; n < e.length; n++) e[n].uid > 0 && t++;
            return t;
        }, t.enemyJoinPlayers = function() {
            for (var e = i.shipwreck.enemies, t = 0, n = 0; n < e.length; n++) e[n].uid > 0 && t++;
            return t;
        }, t.isJoin = function() {
            return t.ownersJoinPlayers() + t.enemyJoinPlayers() > 0;
        }, t.selfJoinSailor = function() {
            var e = 0;
            if (t.isJoinOwner()) for (var n = i.shipwreck.owners, o = 0; o < n.length; o++) if (n[o].uid == playerModel.uid) {
                e = n[o].sailor;
                break;
            }
            if (t.isJoinEnemy()) for (var a = i.shipwreck.enemies, o = 0; o < a.length; o++) if (a[o].uid == playerModel.uid) {
                e = a[o].sailor;
                break;
            }
            return e;
        }, t.ownerSailor = function() {
            for (var e = 0, t = i.shipwreck.owners, n = 0; n < t.length; n++) e += t[n].sailor * (1 + .25 * t[n].cheers.length + .1 * t[n].powerPotion);
            return e;
        }, t.enemySailor = function() {
            for (var e = 0, t = i.shipwreck.enemies, n = 0; n < t.length; n++) e += t[n].sailor * (1 + .25 * t[n].cheers.length + .1 * t[n].powerPotion);
            return e;
        }, t.BeachPerWith = 100, t.BeachPerHeight = .0367, t.friendsRedPoint = !1, t.newsRedPoint = !1, 
        t.refreshRedPoint = !1, t.workersRedPoint = !1, t.rewardRedPoint = !1, t.rewardNewsRedPoint = !1, 
        t.CanCarry = !1, t.BoostTargetUid = 0, t.TESTUID = 0, t.BoostTargetData = null, 
        t;
    }();
    e.BeachCache = t, __reflect(t.prototype, "game.BeachCache");
    var i = {
        ownerId: 0,
        beachPowerPotion: 0,
        beachSecret: "",
        gotPowerPotionCount: 0,
        cheerCount: 0,
        beachTutorial: 0,
        refreshRemain: 0,
        sailorRemain: 0,
        sailorTotal: 0,
        worth: 0,
        WorthConf: 1,
        energyCount: 0,
        recoverRemain: 0,
        newArrival: {},
        shipwreck: {
            uid: 0,
            gold: 0,
            state: 0,
            location: 0,
            finishRemain: 0,
            owners: [ {
                uid: 0,
                sailor: 0,
                powerPotion: 0,
                cheers: []
            } ],
            enemies: [ {
                uid: 0,
                sailor: 0,
                powerPotion: 0,
                cheers: []
            } ]
        },
        tracks: [ {
            uid: 75,
            fid: 0,
            cid: 27,
            trackId: 1,
            state: 0,
            ownerSailor: 0,
            enemySailor: 0,
            ownerPowerPotion: 0,
            enemyPowerPotion: 0,
            ownerCheers: [],
            enemyCheers: [],
            location: 201,
            finishRemain: 0
        } ],
        corps: [ {
            uid: 75,
            fid: 15218,
            cid: 6,
            location: 6834792,
            state: 1,
            trackId: 1,
            ownerSailor: 1,
            enemySailor: 1,
            ownerPowerPotion: 0,
            enemyPowerPotion: 0,
            finishRemain: 0
        } ],
        friends: [ {
            uid: 75,
            name: "Young",
            headImg: "http://wx.qlogo.cn/mmhead/EoDzFPAicg5Uq4Z8VKUemPJWBPebxn3bicibJ4bflbhgQU/0",
            crowns: 1410,
            gender: 1,
            isVip: !0
        } ],
        shareInfo: {
            goodsId: "",
            inviteCount: 0,
            inviteLimit: 1,
            buyCount: 0,
            rewardCount: 0,
            limit: 2
        }
    }, n = {
        inviteCount: 0,
        worth: 0,
        sailorRemain: 0,
        sailorTotal: 0,
        tracks: [ {
            uid: 0,
            fid: 0,
            cid: 1,
            location: 0,
            state: 0,
            ownerSailor: 0,
            enemySailor: 0,
            ownerPowerPotion: 0,
            enemyPowerPotion: 0,
            finishRemain: 0
        } ],
        shipwrecks: [ {
            uid: 0,
            gold: 0,
            state: 1,
            location: 0,
            finishRemain: 0,
            owners: [ {
                uid: 0,
                sailor: 0,
                powerPotion: 0,
                cheers: []
            } ],
            enemies: [ {
                uid: 0,
                sailor: 0,
                powerPotion: 0,
                cheers: []
            } ]
        } ],
        friends: [ {
            uid: 75,
            name: "Young",
            headImg: "http://wx.qlogo.cn/mmhead/EoDzFPAicg5Uq4Z8VKUemPJWBPebxn3bicibJ4bflbhgQU/0",
            crowns: 1410,
            gender: 1,
            isVip: !0
        } ],
        casuals: [],
        confs: []
    }, o = {
        donateCount: 0,
        collections: [],
        recipes: [],
        worth: 0,
        worthConf: 0,
        goldNuggetConfs: [ {
            id: 1,
            title: "小堆金币",
            gold: 0,
            param: 0,
            limit: 0
        } ],
        goldNugget: 0,
        goldNuggetRemainCount: [ -1, 2, 1 ],
        needGoldNugget: 0,
        exchangedMoney: 0
    };
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e.delPersonButton = !1, e.chatBubbleIsShow = !1, e.broadcastChannel = 0, 
            e._newUnReadWorldMsg = !1, e.ChatCache = {
                Messages: [],
                NewMessages: [],
                PrivateMsgList: [],
                chatPanelType: null,
                selectChatIndex: 0,
                chatPrivateList: [],
                chatBtnPoint: !1
            }, e.ChatPersonCache = {
                Messages: [],
                NewMessages: []
            }, e.PersonInfo = {
                uid: 0,
                headImg: "",
                name: "",
                gender: 1,
                crowns: 0,
                inviteCode: "",
                chatSign: 0,
                isVip: 0,
                swapState: 0,
                swapSponsor: 0,
                province: 0,
                city: 0,
                hasBanned: !1,
                isPrivilege: !1
            }, e;
        }
        return __extends(i, t), Object.defineProperty(i.prototype, "newUnReadWorldMsg", {
            get: function() {
                return this._newUnReadWorldMsg;
            },
            set: function(t) {
                this._newUnReadWorldMsg = t, gateModel.updateGate(e.WindowType.WINDOW_WORLD_CHAT);
            },
            enumerable: !0,
            configurable: !0
        }), i.prototype.update = function(e) {
            this.inject(e, !1);
        }, i.prototype.updatePrivateChatListRedPointStatus = function() {
            this.ChatCache.chatBtnPoint = this.ChatCache.chatPrivateList.length > 0, gateModel.updateGate(e.WindowType.WINDOW_PRIVATE_CHAT_LIST), 
            EventCenter.sendEvent(EventConst.updateChatItemRedStatus), EventCenter.sendEvent(EventConst.updatePrivateChatReadStatus);
        }, i.prototype.showPrivateChat = function(t, i) {
            var n = this, o = this.ChatCache.chatPrivateList.indexOf(t);
            o > -1 && (this.ChatCache.chatPrivateList.splice(o, 1), this.updatePrivateChatListRedPointStatus()), 
            HttpService.get(e.ServerMsg.CHAT_PRIVATE_DETAIL, "uid=" + playerModel.uid + "&fid=" + t + "&chatSign=" + i, function(t) {
                var i = t.friendInfo;
                for (var o in n.PersonInfo) n.PersonInfo[o] = i[o];
                n.PersonInfo.swapState = t.swapState || 0, n.PersonInfo.swapSponsor = t.swapSponsor || !1, 
                n.PersonInfo.hasBanned = t.hasBanned || !1, n.ChatPersonCache.Messages = t.messages, 
                hortor.WindowManager.showWindow(e.WindowType.WINDOW_PRIVATE_CHAT);
            });
        }, i.prototype.countDownWorldChatTime = function() {
            this.worldChatTimer && (egret.log("timer未清理干净，此处应该清理"), this.worldChatTimer.stop(), 
            this.worldChatTimer.removeEventListener(egret.TimerEvent.TIMER, this.countDown, this)), 
            this.worldChatTimer = new egret.Timer(1e3), this.worldChatTimer.addEventListener(egret.TimerEvent.TIMER, this.countDown, this), 
            this.worldChatTimer.start();
        }, i.prototype.countDown = function() {
            playerModel.worldChatRemain > 0 && (playerModel.worldChatRemain--, EventCenter.sendEvent(EventConst.updateWorldChatCDTime));
        }, i;
    }(hortor.Model);
    e.ChatModel = t, __reflect(t.prototype, "game.ChatModel");
}(game || (game = {}));

var chatModel, game;

!function(e) {
    var t = function(e) {
        function t() {
            var t = null !== e && e.apply(this, arguments) || this;
            return t.seniorDayShare_remainShareCount = -1, t.seniorDayShare_boxEnergy = -1, 
            t.dailyEventInfo = {}, t.dailyPrizeConfs = {}, t.dazhangyuShareCount = 0, t.treasureShareCount = 0, 
            t.remainShareCount = 0, t;
        }
        return __extends(t, e), t.prototype.update = function(e) {
            this.inject(e, !1);
        }, t;
    }(hortor.Model);
    e.DailyModel = t, __reflect(t.prototype, "game.DailyModel");
}(game || (game = {}));

var dailyModel, game;

!function(e) {
    var t = function() {
        function e() {
            this.friendData = [], this.mCDNearByTime = 0, this.mCDOnlineTime = 0, this._switchTabToNearBy = !1, 
            this._switchTabToOnline = !1;
        }
        return e.prototype.sortData = function(e) {
            this.friendData.sort(function(e, t) {
                return e.updateElapse - t.updateElapse;
            }), e && (e.isCp = !0, this.friendData.unshift(e));
        }, e.prototype.countDownNearbyCDTime = function() {
            this.mCDNearByTime = 10, this.mCDNearByTimer ? (egret.log("timer未清理干净，此处应该清理"), 
            this.clearNearByTimer()) : (this.mCDNearByTimer = new egret.Timer(1e3), this.mCDNearByTimer.addEventListener(egret.TimerEvent.TIMER, this.updateNearbyCDTime, this), 
            this.mCDNearByTimer.start());
        }, e.prototype.updateNearbyCDTime = function() {
            this.mCDNearByTime--, this.mCDNearByTime <= 0 && this.clearNearByTimer(), EventCenter.sendEvent(EventConst.updateRecommendStatus);
        }, e.prototype.clearNearByTimer = function() {
            this.mCDNearByTimer && (this.mCDNearByTimer.stop(), this.mCDNearByTimer.removeEventListener(egret.TimerEvent.TIMER, this.updateNearbyCDTime, this), 
            this.mCDNearByTimer = null);
        }, e.prototype.countDownOnlineCDTime = function() {
            this.mCDOnlineTime = 10, this.mCDOnlineTimer ? (egret.log("timer未清理干净，此处应该清理"), 
            this.clearOnlineTimer()) : (this.mCDOnlineTimer = new egret.Timer(1e3), this.mCDOnlineTimer.addEventListener(egret.TimerEvent.TIMER, this.updateOnlineCDTime, this), 
            this.mCDOnlineTimer.start());
        }, e.prototype.updateOnlineCDTime = function() {
            this.mCDOnlineTime--, this.mCDOnlineTime <= 0 && this.clearOnlineTimer(), EventCenter.sendEvent(EventConst.updateRecommendStatus);
        }, e.prototype.clearOnlineTimer = function() {
            this.mCDOnlineTimer && (this.mCDOnlineTimer.stop(), this.mCDOnlineTimer.removeEventListener(egret.TimerEvent.TIMER, this.updateOnlineCDTime, this), 
            this.mCDOnlineTimer = null);
        }, Object.defineProperty(e.prototype, "switchTabToNearBy", {
            get: function() {
                return this._switchTabToNearBy;
            },
            set: function(e) {
                this._switchTabToNearBy = e;
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(e.prototype, "switchTabToOnline", {
            get: function() {
                return this._switchTabToOnline;
            },
            set: function(e) {
                this._switchTabToOnline = e;
            },
            enumerable: !0,
            configurable: !0
        }), e;
    }();
    e.FriendModel = t, __reflect(t.prototype, "game.FriendModel");
}(game || (game = {}));

var friendModel, game;

!function(e) {
    var t = function() {
        function t() {
            this.guild = {}, this.selectGuildIndex = 0, this.isInit = !1;
        }
        return t.prototype.update = function(t) {
            t.hasOwnProperty("guild") && (this.guild = t.guild), this.isInit || (this.isInit = !0, 
            0 != playerModel.guild.gid ? HttpService.get(e.ServerMsg.GUILD_SHOW, "uid=" + playerModel.uid + "&gid=" + playerModel.guild.gid + "&showMsg=false", function(t) {
                e.GuildCache.GuildSignRedPoint = !playerModel.guild.gotDailySign, e.GuildCache.GuildWelfareRedPoint = n.getWelfareRedPoint(), 
                n.initSlotsRedPoint(t.slots), gateModel.updateGate(e.ScreenType.GUILD_SCREEN);
            }) : (e.GuildCache.GuildRedPoint = gateModel.guide[e.AcLockType.guild] && playerModel.highestCrowns >= Const.guildLimit, 
            gateModel.updateGate(e.ScreenType.GUILD_SCREEN)));
        }, Object.defineProperty(t.prototype, "hasRedPoint", {
            get: function() {
                return e.GuildCache.GuildRedPoint || e.GuildCache.DonateSlotsRedPoint || e.GuildCache.DonateNewsRedPoint || e.GuildCache.NewsRedPoint || e.GuildCache.GuildWelfareRedPoint || e.GuildCache.GuildSailingRedPoint || e.GuildCache.GuildSailingRewardRedPoint || e.GuildCache.GuildSailingFirstOpenPoint || e.GuildCache.GuildApplyRedPoint || e.GuildCache.GuildNewMessageRedPoint || e.GuildCache.GuildTaskRedPoint;
            },
            enumerable: !0,
            configurable: !0
        }), t.prototype.addGuildTaskValue = function(t, i) {
            if (0 != playerModel.guild.gid) {
                var n = {
                    roll: 1,
                    loginReward: 2,
                    gainDonate: 3,
                    collectMoneyBox: 4,
                    guildChat: 5,
                    attack: 6,
                    usePotion: 7,
                    guestRichman: 8,
                    shareReward: 9,
                    attackDestroyed: 10
                }, o = dailyModel.dailyEventInfo || {
                    sendMailCount: 0,
                    donateJigsawCount: 0,
                    buyMiniShieldRemain: 0,
                    buyKillTitanBallRemain: 0,
                    buyPufferRemain: 0,
                    buyLollyRemain: 0,
                    rollCount: 0,
                    loginRewardCount: 0,
                    gainDonateCount: 0,
                    collectMoneyBoxCount: 0,
                    guildChatCount: 0,
                    attackCount: 0,
                    usePotionCount: 0,
                    guestRichman: 0,
                    attackDestroyedCount: 0,
                    shareRewardCount: 0
                };
                if (o[t + "Count"] += i, 0 != e.GuildCache.TaskNeedValue.length && 0 != playerModel.guild.gid) {
                    var a = n[t], r = _.find(e.GuildCache.TaskList, function(e) {
                        return e == a;
                    }), s = _.find(e.GuildCache.TaskHasOver, function(e) {
                        return e == a;
                    }), l = o[t + "Count"];
                    r && !s && l >= e.GuildCache.TaskNeedValue[r] && (e.GuildCache.GuildTaskRedPoint = !0, 
                    EventCenter.sendEvent(EventConst.refreshGuildRedPoint), gateModel.updateGate(e.ScreenType.GUILD_SCREEN));
                }
            }
        }, t.prototype.checkGuildTaskRedPoint = function() {
            var t = dailyModel.dailyEventInfo, n = !1;
            if (0 == playerModel.guild.gid) return !1;
            for (var o = function(o) {
                var a = e.GuildCache.TaskList[o], r = _.find(e.GuildCache.TaskHasOver, function(e) {
                    return e == a;
                }), s = t[i.taskValueToObj[a] + "Count"];
                return !r && s >= e.GuildCache.TaskNeedValue[a] ? (n = !0, "break") : void 0;
            }, a = 0; a < e.GuildCache.TaskList.length; a++) {
                var r = o(a);
                if ("break" === r) break;
            }
            return n;
        }, t;
    }();
    e.GuildModel = t, __reflect(t.prototype, "game.GuildModel");
    var i = function() {
        function e() {}
        return e.FromMember = "member", e.FromDonate = "donate", e.FromNews = "news", e.FromManage = "manage", 
        e.roll = "roll", e.loginReward = "loginReward", e.gainDonate = "gainDonate", e.collectMoneyBox = "collectMoneyBox", 
        e.guildChat = "guildChat", e.attack = "attack", e.usePotion = "usePotion", e.guestRichman = "guestRichman", 
        e.shareReward = "shareReward", e.attackDestroyed = "attackDestroyed", e.taskObjToValue = {
            roll: 1,
            loginReward: 2,
            gainDonate: 3,
            collectMoneyBox: 4,
            guildChat: 5,
            attack: 6,
            usePotion: 7,
            guestRichman: 8,
            shareReward: 9,
            attackDestroyed: 10
        }, e.taskValueToObj = {
            1: "roll",
            2: "loginReward",
            3: "gainDonate",
            4: "collectMoneyBox",
            5: "guildChat",
            6: "attack",
            7: "usePotion",
            8: "guestRichman",
            9: "shareReward",
            10: "attackDestroyed"
        }, e;
    }();
    e.GuildProxy = i, __reflect(i.prototype, "game.GuildProxy"), e.GuildData = {
        notice: "",
        recruitSignature: "",
        members: [],
        messages: [],
        systems: [],
        donates: [],
        slots: [],
        guild: {
            gid: 0,
            name: "",
            icon: 0,
            mode: 0,
            needCrown: 0,
            notice: ""
        },
        signRewards: [],
        lastExp: 0,
        donateRemain: 0
    }, e.GuildRecruitmentData = {
        remain: 0,
        recruits: [ {
            num: 0,
            confNum: 1,
            rewards: {
                guildMedal: 1
            },
            gotReward: !1,
            goto: "friend",
            taskDescription: "邀请一名微信好友达到3星即送海盗勋章"
        } ]
    }, e.GuildCache = {
        Messages: [],
        NewMessages: [],
        Systems: [],
        Donates: [],
        Members: {},
        GuildTimer: 0,
        GuildToIsland: !1,
        GuildRedPoint: !1,
        DonateSlotsRedPoint: !1,
        DonateNewsRedPoint: !1,
        NewsRedPoint: !1,
        GuildSignRedPoint: !1,
        GuildFeedbackRedPoint: !1,
        GuildAttendancesRedPoint: !1,
        GuildWelfareRedPoint: !1,
        GuildApplyRedPoint: !1,
        GuildTaskRedPoint: !1,
        GuildNewMessageRedPoint: !1,
        GuildSailingRedPoint: !1,
        GuildSailingRewardRedPoint: !1,
        GuildSailingFirstOpenPoint: !1,
        TaskList: [],
        TaskHasOver: [],
        TaskNeedValue: [],
        feedbackTime: 0,
        feedbackRewardData: {
            uid: 0,
            name: "",
            headImg: "",
            crowns: 0,
            gender: 1,
            isVip: !1,
            expire: 0,
            price: 0,
            level: 2,
            hasGot: !1,
            giftType: 5,
            icon: 1,
            orderId: "2017081010003",
            honorees: [ {
                uid: 0,
                name: "",
                headImg: "",
                crowns: 0,
                gender: 0,
                isVip: !1,
                type: "",
                value: 0
            } ]
        },
        GuildRecruitmentPoint: !1
    }, e.GuildDailyWelfareData = {
        attendance: 0,
        feedbacks: [],
        attendances: [ {
            needSignNum: 0,
            guildCoin: 0,
            giftType: 0,
            hasGot: !1
        } ],
        giftConfs: {
            1: {
                1: {
                    id: 1,
                    giftType: 1,
                    activityType: 0,
                    type: "energy",
                    value: 5
                }
            }
        }
    };
    var n = function() {
        function t() {}
        return t.getGuildDuty = function(e) {
            var t = "成员";
            return t = 15 == e ? "团长" : 7 == e ? "副团" : 3 == e ? "" : 1 == e ? "精英" : "成员";
        }, t.getGuildNews = function(e) {
            var t = "一条神秘的系统消息...";
            switch (e.type) {
              case "join":
                t = e.name ? '"' + (e.name.length > 10 ? e.name.substr(0, 10) + "..." : e.name) + '"加入了海盗团!!!' : "加入了海盗团!!!";
                break;

              case "authorize":
                t = e.name ? '"' + (e.name.length > 10 ? e.name.substr(0, 10) + "..." : e.name) + '"职务被调整为' + e.duty : "职务被调整为" + e.duty;
                break;

              case "quit":
                t = e.name ? '"' + (e.name.length > 10 ? e.name.substr(0, 10) + "..." : e.name) + '"离开了海盗团!!!' : "离开了海盗团!!!";
                break;

              case "donate":
                t = e.name ? '"' + (e.name.length > 10 ? e.name.substr(0, 10) + "..." : e.name) + '"' + (e.value || "一条神秘的系统消息...") : e.value || "一条神秘的系统消息...";
                break;

              case "raceEnroll":
                var t = e.value + "", i = t.substr(0, 4), n = t.substr(4, 6);
                t = e.name ? '"' + (e.name.length > 10 ? e.name.substr(0, 10) + "..." : e.name) + '"' + ("报名参加了" + i + "年第" + n + "周帆船竞赛") : "报名参加了" + i + "年第" + n + "周帆船竞赛";
                break;

              case "impeach":
              case "newCommander":
              case "guildGift":
                t = e.name ? '"' + (e.name.length > 10 ? e.name.substr(0, 10) + "..." : e.name) + '"' + (e.value || "一条神秘的系统消息...") : e.value || "一条神秘的系统消息...";
            }
            return t;
        }, t.getGuildNewsColor = function(e) {
            var t = 16777215;
            switch (e) {
              case "join":
                t = 4626523;
                break;

              case "authorize":
                t = 12154887;
                break;

              case "quit":
                t = 13516836;
                break;

              case "donate":
                t = 4626523;
                break;

              case "raceEnroll":
                t = 4626523;
                break;

              case "impeach":
                t = 4626523;
                break;

              case "newCommander":
                t = 4626523;
                break;

              case "guildGift":
                t = 4626523;
            }
            return t;
        }, t.initSlotsRedPoint = function(t) {
            e.GuildCache.DonateSlotsRedPoint = !1;
            for (var i = 0; i < t.length; i++) if (3 == t[i].status) {
                e.GuildCache.DonateSlotsRedPoint = !0;
                break;
            }
            EventCenter.sendEvent(EventConst.refreshGuildRedPoint), gateModel.updateGate(e.ScreenType.GUILD_SCREEN);
        }, t.getWelfareRedPoint = function() {
            return e.GuildCache.GuildSignRedPoint || e.GuildCache.GuildFeedbackRedPoint || e.GuildCache.GuildAttendancesRedPoint;
        }, t.GuildRecruitmentPoint = function() {
            e.GuildCache.GuildRecruitmentPoint = !1;
            for (var t = 0; t < e.GuildRecruitmentData.recruits.length; t++) if (!e.GuildRecruitmentData.recruits[t].gotReward && e.GuildRecruitmentData.recruits[t].num >= e.GuildRecruitmentData.recruits[t].confNum) {
                e.GuildCache.GuildRecruitmentPoint = !0;
                break;
            }
        }, t;
    }();
    e.GuildUtils = n, __reflect(n.prototype, "game.GuildUtils");
}(game || (game = {}));

var guildModel, game;

!function(e) {
    var t = function(e) {
        function t() {
            var t = null !== e && e.apply(this, arguments) || this;
            return t.dailyPrizeConfs = null, t.friendInfo = null, t.signRedPoint = !1, t;
        }
        return __extends(t, e), t.prototype.update = function(e) {
            this.inject(e);
        }, t;
    }(hortor.Model);
    e.InitModel = t, __reflect(t.prototype, "game.InitModel");
}(game || (game = {}));

var initModel, game;

!function(e) {
    var t;
    !function(e) {
        e[e.BUILD = 0] = "BUILD", e[e.SMALL = 1] = "SMALL", e[e.ATTACKORSTEAL = 2] = "ATTACKORSTEAL";
    }(t = e.IslandStatus || (e.IslandStatus = {}));
    var i = function(t) {
        function i() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e.ableToBuildCount = 0, e.ableToMineCount = 0, e.island = 0, e.robotAvatars = [], 
            e.energyReward = 0, e.moneyReward = 0, e.isInit = !1, e.isMoving = !1, e;
        }
        return __extends(i, t), i.prototype.update = function(t) {
            if (this.isInit = !0, t.buildings) {
                this.buildings = new Array();
                for (var i = 0; i < t.buildings.length; i++) this.buildings.push(new o(t.buildings[i]));
                if (playerModel.leaveDays > Const.recallLeaveDays) {
                    islandModel.userRecallBuildings = util.cloneArr(islandModel.buildings);
                    for (var a = 0; a < islandModel.buildings.length; a++) islandModel.buildings[a].level = 0, 
                    islandModel.buildings[a].status = 2;
                }
            }
            if (t.buildingCost) {
                this.buildingCost = new Array();
                for (var i = 0; i < t.buildingCost.length; i++) this.buildingCost.push(new n(t.buildingCost[i]));
            }
            t.mapInfo && (this.mapInfo = t.mapInfo, gateModel.guide && gateModel.guide[e.AcLockType.mine] && this.mapInfo.producePerSecond && this.mapInfo.moneyBox >= this.mapInfo.limit && (MapProxy.mapFullRedPoint = !0)), 
            MapProxy.clock || (MapProxy.clock = hortor.TimerManager.addClock(e.ClockType.MapUpdateMoneyBox, 86400), 
            MapProxy.clock.registCallBack(this, function() {}, function() {
                var e = islandModel.mapInfo;
                e.producePerSecond && e.moneyBox < e.limit && (e.moneyBox += e.producePerSecond, 
                e.moneyBox >= e.limit && (e.moneyBox = e.limit, MapProxy.mapFullRedPoint = !0, MapProxy.refreshMapRedPoint()));
            })), this.isInit && (MapProxy.refreshMapRedPoint(), playerModel.bind("money", this, function(e) {
                MapProxy.refreshMapRedPoint();
            })), t.robotAvatars && (islandModel.robotAvatars = t.robotAvatars);
        }, Object.defineProperty(i.prototype, "islandStatus", {
            get: function() {
                return this.mIslandStatus;
            },
            set: function(t) {
                this.mIslandStatus = t, hortor.NotificationManager.dispatch(e.NotificationType.FACEUI_UPDATE);
            },
            enumerable: !0,
            configurable: !0
        }), i.prototype.getCityPoints = function(e) {
            return e > 68 ? IslandLocation.isLand69 : IslandLocation["isLand" + e];
        }, i.prototype.getBuilding3Height = function(e) {
            return e > 68 ? IslandLocation.building3Height[68] : IslandLocation.building3Height[e];
        }, i.prototype.getIslandData = function(e) {
            var t = {
                islandId: 0,
                island: 0,
                buildings: [ {
                    level: 0,
                    status: 0
                } ]
            };
            return e.island >= playerModel.islandCount || e.islandId >= playerModel.islandCount || e.gainIslandReward ? (t.islandId = e.islandId - 1, 
            t.island = e.island - 1, t.buildings = [ {
                level: 5,
                status: 0
            }, {
                level: 5,
                status: 0
            }, {
                level: 5,
                status: 0
            }, {
                level: 5,
                status: 0
            }, {
                level: 5,
                status: 0
            } ]) : t = {
                islandId: e.islandId,
                island: e.island,
                buildings: e.buildings || this.buildings
            }, t;
        }, i;
    }(hortor.Model);
    e.IslandModel = i, __reflect(i.prototype, "game.IslandModel");
    var n = function() {
        function e(e) {
            this.costs = e;
        }
        return e;
    }();
    e.BuildingCost = n, __reflect(n.prototype, "game.BuildingCost");
    var o = function() {
        function e(e) {
            for (var t in e) this[t] = e[t];
        }
        return e;
    }();
    e.UserBuilding = o, __reflect(o.prototype, "game.UserBuilding");
}(game || (game = {}));

var islandModel, game;

!function(e) {
    var t = function(e) {
        function t() {
            var t = null !== e && e.apply(this, arguments) || this;
            return t.jigsawInfo = {}, t.newJigsawNews = !1, t.jigsawReward = !1, t.sendData = {
                uid: -1
            }, t.sendId = 0, t;
        }
        return __extends(t, e), t.prototype.update = function(e) {
            if (console.log("jigsawMode--\x3e>>>>>>>>>>data: ", e), e.hasOwnProperty("jigsawInfo")) this.jigsawInfo = e.jigsawInfo; else for (var t in e) this.jigsawInfo.hasOwnProperty(t) && (this.jigsawInfo[t] = e[t]);
        }, t.prototype.checkJigsawReward = function() {
            jigsawModel.jigsawReward = !_.isEmpty(jigsawModel.jigsawInfo.rewardList);
        }, t;
    }(hortor.Model);
    e.JigsawModel = t, __reflect(t.prototype, "game.JigsawModel");
}(game || (game = {}));

var jigsawModel, game;

!function(e) {
    var t = function() {
        function t() {
            this.mails = [], this.messages = [], this.notices = [], this.requests = [], this.newMsgCount = 0, 
            this.mailsCount = 0, this.isNoticedMail = !1, this.isInited = !1;
        }
        return t.prototype.update = function(t, i, n) {
            var o = this;
            void 0 === t && (t = !1), HttpService.get(e.ServerMsg.MESSAGE, "uid=" + playerModel.uid + "&onlyNew=" + t + "&fromMenu=" + playerModel.fromMenu, function(e) {
                e && (o.updateProperty(e), o.isInited || (o.isInited = !0, o.initComplete && o.initComplete()), 
                i && i.call(n));
            }, null, this);
        }, t.prototype.reset = function() {
            this.isInited = !1;
        }, t.prototype.onInit = function(e) {
            this.initComplete = e, this.isInited && this.initComplete && this.initComplete();
        }, t.prototype.updateProperty = function(t) {
            for (var i in t) this[i] = t[i];
            playerModel.requestsLength = this.requests.length, gateModel.updateGate(e.WindowType.WINDOW_WORLD_CHAT), 
            gateModel.updateGate(e.WindowType.WINDOW_MAIL), gateModel.updateGate(e.WindowType.WINDOW_FRIEND), 
            this.mailCountNotOpen > 0 && !this.isNoticedMail && (this.isNoticedMail = !0, egret.setTimeout(function() {
                hortor.TipManager.tip("您有邮件尚未领取，快去查看吧！");
            }, this, 3e3)), t.requests.length > 0 && EventCenter.sendEvent(EventConst.ReceiveNotification, [ e.NotificationMainType.login_friend, e.NotificationSubType.none, t ]);
        }, Object.defineProperty(t.prototype, "mailCountNotOpen", {
            get: function() {
                for (var e = 0, t = 0; t < this.mails.length; t++) this.mails[t].hasOpened || e++;
                return e;
            },
            enumerable: !0,
            configurable: !0
        }), t;
    }();
    e.MessageModel = t, __reflect(t.prototype, "game.MessageModel");
}(game || (game = {}));

var messageModel, NoticeModel = function() {
    function e() {}
    return e.noticesList = [], e;
}();

__reflect(NoticeModel.prototype, "NoticeModel");

var game;

!function(e) {
    var t = function(e) {
        function t() {
            var t = null !== e && e.apply(this, arguments) || this;
            return t.jewelConfs = {
                epic: [],
                excellent: [],
                normal: []
            }, t.octopusInfo = {
                uid: 0,
                color: "normal",
                ownerName: "GreenDay",
                ownerHeadImg: "",
                ownerGotGoods: 0,
                openingRemain: 0,
                boxes: []
            }, t.octopusPlayer = {
                puffer: 0,
                lolly: 0,
                DonateCount: 0,
                ReceiveCount: 0,
                Jewels: []
            }, t.rewardConfs = [], t.shareCount = 0, t.showTutorial = !1, t.stageHeight = hortor.StageManager.stageHeight, 
            t.stageWidth = hortor.StageManager.stageWidth, t.stageOffHeight = hortor.StageManager.stageHeight - 1039, 
            t.octopusMessageRedPoint = !1, t.octopusLogRedPoint = !1, t.octopusRedPoint = !1, 
            t.gainRewardList = [], t.octopusTimer = 0, t.newOctopusNews = !1, t.sendId = -1, 
            t.sendData = {}, t;
        }
        return __extends(t, e), t.prototype.update = function(e) {
            for (var t in e) this.hasOwnProperty(t) && (this[t] = e[t]);
        }, t.prototype.checkOctopusGuide = function() {
            var e = 5, t = 9;
            if (this.octopusInfo && 0 != this.octopusInfo.uid) for (var i = this.octopusInfo.boxes, n = 1; n < i.length; n++) {
                var o = i[n];
                0 == o && t--;
            }
            return e - t;
        }, t;
    }(hortor.Model);
    e.OctopusModel = t, __reflect(t.prototype, "game.OctopusModel");
}(game || (game = {}));

var octopusModel, game;

!function(e) {
    var t = function(e) {
        function t() {
            var t = null !== e && e.apply(this, arguments) || this;
            return t.pets = {}, t.stageHeight = hortor.StageManager.stageHeight, t.stageWidth = hortor.StageManager.stageWidth, 
            t.stageOffHeight = hortor.StageManager.stageHeight - 1039, t.petNowStatus = "sleep", 
            t;
        }
        return __extends(t, e), t.prototype.update = function(e) {
            for (var t in e) this.hasOwnProperty(t) && (this[t] = e[t]);
        }, t;
    }(hortor.Model);
    e.PetModel = t, __reflect(t.prototype, "game.PetModel");
}(game || (game = {}));

var petModel, game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e.broadcastOff = !1, e.worldChatOff = !1, e.recommendOff = !1, e.musicOff = !1, 
            e.musicBgOff = !1, e.tutorial = 0, e.fromMenu = !1, e.name = "", e.userId = "", 
            e.gender = 0, e.headImg = "", e.uid = 0, e.money = 0, e.maxEnergy = 0, e.energy = 0, 
            e.recoverEnergy = 0, e.timeToRecover = 0, e.island = 0, e.crowns = 0, e.shields = 0, 
            e.maxBet = 0, e.rollBet = 0, e.shareCode = "", e.friendCode = "", e.isAuthed = !1, 
            e.platform = 0, e.platformId = "", e.signature = "", e.lastRollerType = 0, e.shareCount = 0, 
            e.shareTime = 0, e.dailyPrizeDay = 0, e.dailyPrizeTime = 0, e.wantedCount = 0, e.ShipwreckCount = 0, 
            e.cookieCount = 0, e.potionCount = 0, e.hatchCount = 0, e.hornCount = 0, e.miniShieldCount = 0, 
            e.monthCardExpired = 0, e.gotNewbieGift = !1, e.gotOccasionalGift = !1, e.gotDailyShop = !1, 
            e.allInOnePiece = 0, e.invitedToKillTitan = !1, e.invitedActivityId = 0, e.enteredKillTitan = !1, 
            e.killTitanCannonBall = 0, e.summonStone = 0, e.puffer = 0, e.lolly = 0, e.guild = null, 
            e.guildMedal = 0, e.doubleMoneyCard = 0, e.shieldEnergy = 0, e.shieldEnergyOpenAt = 0, 
            e.province = 0, e.city = 0, e.constellation = 0, e.betCount = 0, e.islandCount = 0, 
            e.isTutorialMiner = !1, e.gainIslandReward = !1, e.canIslandShare = !1, e.isBindingWxGame = !1, 
            e.petName = "", e.petSleepRemain = 0, e.petExpRemain = 0, e.menuGiftRewardCount = 0, 
            e.loginRewardRemain = 0, e.gotSubscribedReward = !1, e.gotNewSubscribedReward = !1, 
            e.gotMonthCardReward = !1, e.forbiddenPush = !1, e.nightAllowPush = !1, e.wechat = "", 
            e.showWechat = !1, e.isExistConnonContestAward = !1, e.hasAchievement = !1, e.hasRecruit = !1, 
            e.hasMystical = !1, e.subscribedActive = !1, e.balloonActive = !1, e.showBoxType = 0, 
            e.highestCrowns = 0, e.rollTotalCount = 0, e.lastPostFriendSign = 0, e.worldChatRemain = 0, 
            e.idVerifyTime = 0, e.pined = !1, e.leaveDays = 0, e.inviteCode = "", e.inviteFriendCount = 0, 
            e.inviteFriendRewardCount = 0, e.inviteFirendToday = !1, e.inviteFriendVIPCount = 0, 
            e.inviteFriendVIPRemain = null, e.inviteMoneyCount = 0, e.recallRewards = null, 
            e.speedGiftRemain = null, e.friendsEnergyCounts = 0, e.couple = {}, e.dailyEventInfo = null, 
            e.gainRecallReward = null, e.gainReturnReward = null, e.isShowSubscribe = !1, e.isPrivilege = !1, 
            e.privilegeOverplus = 0, e.isSubscribed = !1, e.isSubscribedWxGame = !1, e.selectedActivityType = "", 
            e.requestsLength = 0, e.beRecalledCount = 0, e.recallRedPoint = !1, e.isAudit = !1, 
            e;
        }
        return __extends(i, t), i.prototype.update = function(t) {
            this.inject(t, !1), t.hasOwnProperty("tutorial") && (this.tutorial++, hortor.Log.warn(this, "tutorial:" + this.tutorial)), 
            HttpService.secret = e.GameConfig.apiSecret;
        }, i.prototype.updateAll = function(e) {
            this.update(e);
        }, i.prototype.updateFromLogin = function(e) {
           this.data = e;
            //  playerModel.update(e);
          //   gateModel.update(e);
         //    initModel.update(e);
         //     wheelModel.update(e);
          //    islandModel.update(e);
          //     pirateGiftModel.update(e), achieveModel.update(e),
         //     jigsawModel.update(e);
         //     dailyModel.update(e);
         //       guildModel.update(e);
         //        activityModel.update(e);
            messageModel.update(!0);
            gateModel.updateGates();
             jigsawModel.checkJigsawReward();
        }, i.prototype.updateFriends = function(t, i) {
            HttpService.get(e.ServerMsg.SHOW_DONATE, "uid=" + playerModel.uid, function(n) {
                n && (friendModel.friendData = n.friends, gateModel.updateGate(e.WindowType.WINDOW_RECOMMEND_NEARBY), 
                t && t.call(i, n));
            }, null, this);
        }, i.updateFriendRewards = function() {
            HttpService.get(e.ServerMsg.SHOW_FRIEND_REWARD, "uid=" + playerModel.uid, function(e) {
                playerModel.friendRewards = e;
            });
        }, Object.defineProperty(i.prototype, "recallRewardCounts", {
            get: function() {
                for (var e = 0, t = 0; t < this.recallRewards.length; t++) this.recallRewards[t].hasGot || e++;
                return e;
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(i.prototype, "friendsRewardCounts", {
            get: function() {
                if (!this.friendRewards) return 0;
                for (var e = this.friendRewards.friendRewards, t = [ {
                    uid: 0,
                    level: 0
                }, {
                    uid: 0,
                    level: 0
                }, {
                    uid: 0,
                    level: 0
                }, {
                    uid: 0,
                    level: 0
                } ], i = 0; 4 > i; i++) for (var n = 0; n < e.length; n++) if (!e[n].gotLevel[i] && e[n].crowns >= this.friendRewards.friendRewardsConf[i].target) {
                    t[i].uid = e[n].uid, t[i].level = i + 1;
                    break;
                }
                for (var o = 0, a = 0; a < t.length; a++) if (t[a].uid > 0 && this.friendRewards.friendRewardsCount[a] < this.friendRewards.friendRewardsConf[a].limit) {
                    o++;
                    break;
                }
                return o;
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(i.prototype, "dailyPrizeConfs", {
            get: function() {
                return this.data.dailyPrizeConfs;
            },
            enumerable: !0,
            configurable: !0
        }), i;
    }(hortor.Model);
    e.PlayerModel = t, __reflect(t.prototype, "game.PlayerModel");
    var i = function() {
        function e(e, t, i, n, o) {
            this.uid = 0, this.fid = 0, this.checksum = "", this.algorithm = "", this.showDetails = !1, 
            this.uid = e, this.fid = t, this.checksum = i, this.algorithm = n, this.showDetails = o;
        }
        return e;
    }();
    e.PlayerSettingInfo = i, __reflect(i.prototype, "game.PlayerSettingInfo");
}(game || (game = {}));

var playerModel, game;

!function(e) {
    var t = function() {
        function e() {
            this.worldRankData = [], this.friendsRankData = [], this.rankUpList = [];
        }
        return e.prototype.update = function(e) {}, e.prototype.setWorldRankData = function(e) {
            this.worldRankData = e;
        }, e.prototype.setFriendsRankData = function(e) {
            this.friendsRankData = e;
        }, e.prototype.getFriendsRankData = function() {
            return this.friendsRankData;
        }, e.prototype.getHandlerWorldRankData = function() {
            for (var e = [], t = 0, i = 0; i < this.worldRankData.length; i++) if (this.worldRankData[i].uid == playerModel.uid) {
                t = this.worldRankData[i].rank;
                break;
            }
            util.jzlog(">>>>>>>selfRank = ", t);
            for (var i = 0; i < this.worldRankData.length; i++) {
                var n = {
                    uid: this.worldRankData[i].uid,
                    rank: this.worldRankData[i].rank,
                    crowns: this.worldRankData[i].crowns,
                    name: this.worldRankData[i].name,
                    headImg: this.worldRankData[i].headImg,
                    updateTime: this.worldRankData[i].updateTime,
                    isVip: this.worldRankData[i].isVip,
                    gender: this.worldRankData[i].gender,
                    checksum: this.worldRankData[i].checksum,
                    self: this.worldRankData[i].uid == playerModel.uid
                };
                if (e.push(n), 29 == i && this.worldRankData[30] && t > 30) {
                    var o = {
                        uid: this.worldRankData[i].uid,
                        rank: -1,
                        crowns: this.worldRankData[i].crowns,
                        name: this.worldRankData[i].name,
                        headImg: this.worldRankData[i].headImg,
                        self: this.worldRankData[i].uid == playerModel.uid
                    };
                    util.jzlog("demo =====", o), e.push(o);
                }
            }
            return e;
        }, e.prototype.getHandlerFriendsRankData = function() {
            for (var e = [], t = 0; t < this.friendsRankData.length; t++) {
                var i = {
                    uid: this.friendsRankData[t].uid,
                    rank: t + 1,
                    crowns: this.friendsRankData[t].crowns,
                    name: this.friendsRankData[t].name,
                    headImg: this.friendsRankData[t].headImg,
                    updateTime: this.friendsRankData[t].updateTime,
                    isFriend: !0,
                    isVip: this.friendsRankData[t].isVip,
                    gender: this.friendsRankData[t].gender,
                    checksum: this.friendsRankData[t].checksum,
                    self: this.friendsRankData[t].uid == playerModel.uid
                };
                e.push(i);
            }
            return e;
        }, e;
    }();
    e.RankModel = t, __reflect(t.prototype, "game.RankModel");
}(game || (game = {}));

var rankModel, game;

!function(e) {
    var t = function() {
        function e() {
            this.selectGuildIndex = 0;
        }
        return e.prototype.update = function(e) {}, e;
    }();
    e.SailingModel = t, __reflect(t.prototype, "game.SailingModel");
    var i = function() {
        function e() {}
        return e.arrowOffSize = 35, e.boatSize = 81, e.boatBgSize = 2560, e.boatOffSize = 52, 
        e.maxLength = 2, e;
    }();
    e.SailingProxy = i, __reflect(i.prototype, "game.SailingProxy"), e.SailingCache = {
        isoWeek: 0,
        rankText: [ "青铜", "白银", "黄金", "铂金", "钻石", "王者" ],
        rankMaxScore: [ 100, 150, 200, 250, 300, 400 ],
        guildScore: 0
    }, e.SailingShowData = {
        guilds: [ {
            gid: 2754,
            name: "大宝剑",
            lastExp: 0,
            icon: 5,
            score: 0,
            updateTime: 0
        } ],
        scores: {
            2889: 699,
            2897: 855
        },
        objects: [ 22, 70, 124, 184, 250 ],
        isoWeek: 201737,
        openRemain: 0,
        closeRemain: 423145,
        hasQualified: !0,
        grade: 3,
        RankMaxScore: 360,
        firstEnd: !1,
        lastRank: 0,
        lastGrade: 2
    }, e.SailingRankData = {
        guilds: [ {
            gid: 2775,
            name: "hello6548",
            icon: 2,
            score: 10007,
            rank: 1
        } ],
        ownerGuild: {
            gid: 2897,
            name: "13214",
            icon: 10,
            score: 9181,
            rank: 13
        }
    }, e.SailingDepotData = {
        taskConfs: [ {
            id: 1,
            taskIcon: "1",
            taskDescribe: "每次偷取可以获得2个银币",
            taskType: 1,
            taskGroup: 1,
            value: 1,
            reward: 2
        } ],
        shopConfs: [ {
            id: 1,
            itmeDescribe: "",
            name: "恢复卷轴",
            price: 1200,
            limit: 10
        } ],
        supplyCoin: 0,
        taskFailedCount: 0,
        taskRecoverCount: 0,
        tearupRecoverCount: 0
    };
}(game || (game = {}));

var sailingModel, game;

!function(e) {
    var t = function() {
        function e() {
            this.buyCounts = 0, this.mTimer = 0, this.payGiftType = "", this.newGift = !1, this.mysticalOpen = !1;
        }
        return e.prototype.addRewardData = function(e) {
            for (var t in e) switch (t) {
              case "energy":
                playerModel.energy += e[t];
                break;

              case "money":
                playerModel.money += e[t];
                break;

              case "wanted":
                playerModel.wantedCount += e[t];
                break;

              case "potion":
                playerModel.potionCount += e[t];
                break;

              case "cookie":
                playerModel.cookieCount += e[t];
                break;

              case "lolly":
                playerModel.lolly += e[t];
                break;

              case "puffer":
                playerModel.puffer += e[t];
                break;

              case "miniShield":
                playerModel.miniShieldCount += e[t];
                break;

              case "allInOne":
                playerModel.allInOnePiece += e[t];
                break;

              case "horn":
                playerModel.hornCount += e[t];
                break;

              case "oCard":
                break;

              case "fCard":
            }
        }, e;
    }();
    e.ShopModel = t, __reflect(t.prototype, "game.ShopModel");
}(game || (game = {}));

var shopModel, game;

!function(e) {
    var t = function(t) {
        function i() {
            return t.call(this, "soundconfig") || this;
        }
        return __extends(i, t), i.prototype.buttonOpen = function() {
            this.playSound(e.SoundType.SOUND_PANEL_OPEN);
        }, i.prototype.buttonClose = function() {
            this.playSound(e.SoundType.SOUND_PANEL_CLOSE);
        }, i.prototype.playMusic = function(e) {
            hortor.SoundManager.playSound(e);
        }, i.prototype.playSound = function(e, t) {
            void 0 === t && (t = 1), hortor.SoundManager.playSound(e, 1, 0, t);
        }, i.prototype.stopSound = function(e) {
            hortor.SoundManager.stopSound(e);
        }, Object.defineProperty(i.prototype, "soundOn", {
            get: function() {
                return hortor.SoundManager.soundOn;
            },
            set: function(e) {
                hortor.SoundManager.soundOn = e;
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(i.prototype, "musicOn", {
            get: function() {
                return hortor.SoundManager.musicOn;
            },
            set: function(e) {
                hortor.SoundManager.musicOn = e;
            },
            enumerable: !0,
            configurable: !0
        }), i;
    }(hortor.ModelStoreable);
    e.SoundModel = t, __reflect(t.prototype, "game.SoundModel");
}(game || (game = {}));

var soundModel, game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.uiMap = new Object(), e.isMainWheel = !1, e.isWheelScreen = !1, e.isOpenFuncAvailable = !1, 
            e.firstEnter = !0, e;
        }
        return __extends(i, t), i.prototype.onState = function(e, t, i) {
            i ? this.onShow(e, t) : this.onHide(e);
        }, i.prototype.onShow = function(e, t) {
            var n = this.uiMap[e];
            n ? n.state = !0 : this.uiMap[e] = {
                instance: t,
                state: !0
            }, hortor.NotificationManager.dispatch(i.ON_CHANGE, e, !0);
        }, i.prototype.onHide = function(e) {
            var t = this.uiMap[e];
            t && (t.state = !1), hortor.NotificationManager.dispatch(i.ON_CHANGE, e, !1);
        }, i.prototype.getUI = function(e, t) {
            void 0 === t && (t = !1);
            var i = this.uiMap[e];
            return i && (i.state || t) ? i.instance : null;
        }, Object.defineProperty(i.prototype, "boater", {
            get: function() {
                return this.getUI(e.UINameType.boater);
            },
            enumerable: !0,
            configurable: !0
        }), i.ON_CHANGE = "onUIChanged", i;
    }(hortor.Model);
    e.UIModel = t, __reflect(t.prototype, "game.UIModel");
}(game || (game = {}));

var uiModel, game;

!function(e) {
    var t = function(e) {
        function t() {
            var t = null !== e && e.apply(this, arguments) || this;
            return t.isRotate = !1, t.selectWheelBet = 1, t.newMsgCount = 0, t.rollTweenTime = 2600, 
            t.markAttacking = !1, t.ableToBuildCount = 0, t.ableToMineCount = 0, t;
        }
        return __extends(t, e), t.prototype.update = function(e) {
            if (e.rollerItems) {
                this.rollerItems = new Array();
                for (var t = 0; t < e.rollerItems.length; t++) this.rollerItems.push(new o(e.rollerItems[t]));
            }
            e.attackTarget && (this.attackTarget = new i(e.attackTarget)), e.stealTarget && (this.stealTarget = new n(e.stealTarget)), 
            (e.stealIslands || _.isNull(e.stealIslands)) && (this.stealIslands = e.stealIslands);
        }, t;
    }(hortor.Model);
    e.WheelModel = t, __reflect(t.prototype, "game.WheelModel");
    var i = function() {
        function e(e) {
            for (var t in e) this[t] = e[t];
        }
        return e;
    }();
    e.AttackTarget = i, __reflect(i.prototype, "game.AttackTarget");
    var n = function() {
        function e(e) {
            for (var t in e) this[t] = e[t];
        }
        return e;
    }();
    e.StealTarget = n, __reflect(n.prototype, "game.StealTarget");
    var o = function() {
        function e(e) {
            for (var t in e) this[t] = e[t];
        }
        return e;
    }();
    e.RollItem = o, __reflect(o.prototype, "game.RollItem");
}(game || (game = {}));

var wheelModel, game;

!function(e) {
    var t = function() {
        function e() {}
        return e.prototype.update = function(e) {
            this.data = e;
        }, e.prototype.dataRefresh = function(e) {
            this.data = e;
        }, e;
    }();
    e.AchieveModel = t, __reflect(t.prototype, "game.AchieveModel");
}(game || (game = {}));

var achieveModel = new game.AchieveModel(), game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.skinPath = "newplayerachievement/newPlayerTaskNodeSkin", e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.goBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.goBtnFunc, this), this.getBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.getBtnFunc, this);
        }, i.prototype.onData = function() {
            var t = this;
            this.group.x = -560, egret.Tween.get(this.group, {
                loop: !1
            }).to({
                x: 0
            }, 200 + 50 * this.itemIndex, egret.Ease.sineIn).call(function() {
                t && egret.Tween.removeTweens(t.group);
            }), this.__data = this.data;
            var i = _.keys(this.data.rewards), n = _.values(this.data.rewards), o = e.ItemManager.getItemInfo(i[0]);
            this.rewardIcon.source = o.icon, this.rewardCount.text = "x" + e.ComFunc.formatNumber(n[0]), 
            this.desc.text = this.data.description, this.barLabel.text = (this.data.num > this.data.confNum ? this.data.confNum : this.data.num) + "/" + this.data.confNum, 
            this.taskBar.mask = new egret.Rectangle(0, 0, 231 * (this.data.num / this.data.confNum > 1 ? 1 : this.data.num / this.data.confNum), 28), 
            this.data.gotReward ? (this.hasGot.visible = !0, this.goGroup.visible = !1, this.getGroup.visible = !1) : (this.hasGot.visible = !1, 
            this.getGroup.visible = this.data.num >= this.data.confNum, this.goGroup.visible = !this.getGroup.visible);
        }, i.prototype.goBtnFunc = function() {
            switch (hortor.WindowManager.hideWindow(e.WindowType.WINDOW_ACHIEVE), this.data["goto"]) {
              case "dailyGift":
                soundModel.playSound(e.SoundType.SOUND_PANEL_OPEN), hortor.WindowManager.currentWindow = e.WindowType.WINDOW_DAILY_SIGN;
                break;

              case "roller":
                islandModel.islandStatus == e.IslandStatus.BUILD ? hortor.NotificationManager.dispatch(e.NotificationType.ISLAND_ATTACK_TO_WHEEL) : soundModel.playSound(e.SoundType.SOUND_PANEL_CLOSE);
                break;

              case "building":
                hortor.NotificationManager.dispatch(e.NotificationType.WHEEL_TO_ISLAND);
                break;

              case "shareReward":
                soundModel.playSound(e.SoundType.SOUND_PANEL_OPEN), hortor.WindowManager.currentWindow = e.WindowType.WINDOW_INVITE;
                break;

              case "worldChat":
                soundModel.playSound(e.SoundType.SOUND_PANEL_OPEN), hortor.WindowManager.currentWindow = e.WindowType.WINDOW_WORLD_CHAT;
                break;

              case "giveEnergy":
                soundModel.playSound(e.SoundType.SOUND_PANEL_OPEN), hortor.WindowManager.currentWindow = e.WindowType.WINDOW_FRIEND;
                break;

              case "killTitan":
                var t = activityModel.getActivityInfo(e.ActivityType.KillTitan);
                playerModel.highestCrowns >= Const.monsterLimit && t && t.isRunning ? hortor.ScreenManager.currentScreen = e.ScreenType.KILLTITAN_SCREEN : hortor.TipManager.tip("未达到该活动的开启条件！");
                break;

              case "mine":
                hortor.ScreenManager.showScreen(e.ScreenType.MAP_SCREEN, {
                    mapInfo: islandModel.mapInfo,
                    idx: playerModel.island
                });
                break;

              case "guild":
                hortor.NotificationManager.dispatch(e.NotificationType.PIRATE_TEAM_ENTER);
                break;

              case "pet":
                hortor.ScreenManager.currentScreen = e.ScreenType.PET_SCREEN;
            }
        }, i.prototype.getBtnFunc = function(t) {
            var i = this;
            soundModel.playSound(e.SoundType.SOUND_PANEL_OPEN);
            var n = t.target.localToGlobal(0, 0);
            HttpService.post(e.ServerMsg.ACHIEVEMENT_REWARD, "uid=" + playerModel.uid + "&idx=" + (this.itemIndex + 1), function(t) {
                i.data.gotReward = !0, i.hasGot.visible = !0, i.goGroup.visible = !1, i.getGroup.visible = !1, 
                achieveModel.dataRefresh(t), playerModel.update(t), gateModel.updateGate(e.WindowType.WINDOW_ACHIEVE), 
                hortor.WindowManager.showWindow(e.WindowType.WINDOW_REWARD, t);
                var o = hortor.WindowManager.getWindow(e.WindowType.WINDOW_ACHIEVE);
                o && o.initStarEffect(n);
                var a = hortor.WindowManager.getWindow(e.WindowType.WINDOW_ACHIEVE);
                a && a.hasRedPoint();
            });
        }, i;
    }(e.ItemRenderBase);
    e.NewPlayerAchievementNode = t, __reflect(t.prototype, "game.NewPlayerAchievementNode");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e.NewPlayerAchieveData = {
                level: 1,
                levelAward: {},
                achievements: [ {
                    confNum: 1,
                    num: 0,
                    gotReward: !1,
                    rewards: {
                        money: 5e4
                    },
                    goto: "dailyGift",
                    description: "领取每日登录奖励"
                } ]
            }, e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.baseData = new eui.ArrayCollection(), this.baseList.dataProvider = this.baseData, 
            this.baseList.itemRenderer = e.NewPlayerAchievementNode, this.getBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.getBtnFunc, this);
        }, i.prototype.prepare = function(t, i) {
            HttpService.get(e.ServerMsg.ACHIEVEMENT_SHOW, "uid=" + playerModel.uid, function(e) {
                t(e);
            }, i);
        }, i.prototype.onData = function() {
            this.templatePanel.helpBtn.visible = !1;
            var e = this.data;
            return e.level > 6 ? void util.jzlog("你已经完成所有新手目标!") : (this.NewPlayerAchieveData = e, 
            this.targetMaskGroup.mask = new egret.Rectangle(0, 0, 373, 174), this.boxGroup.mask = new egret.Rectangle(0, 0, 189, 263), 
            this.listGroup.mask = new egret.Rectangle(0, 0, 560, 468), this.initRewardGroup(), 
            this.initStarGroup(), void this.initConfList());
        }, i.prototype.initConfList = function() {
            var e = this.NewPlayerAchieveData.achievements;
            this.baseData.source = e, this.baseData.refresh();
        }, i.prototype.initRewardGroup = function() {
            this.taskPro.text = "(进度:" + (this.NewPlayerAchieveData.level > 6 ? 6 : this.NewPlayerAchieveData.level) + "/6)", 
            this.targetLabel.text = "目标" + (this.NewPlayerAchieveData.level > 6 ? 6 : this.NewPlayerAchieveData.level) + ":";
            var t = this.NewPlayerAchieveData.levelAward;
            this.rewardGroup.removeChildren();
            var i = 0;
            for (var n in t) {
                i++;
                var o = new e.NewPlayerRewardNode(n, t[n]);
                this.rewardGroup.addChild(o);
            }
            this.allOverLabel.visible = 0 == i;
        }, i.prototype.initStarGroup = function() {
            this.star1.visible = !1, this.star2.visible = !1, this.star3.visible = !1, this.star4.visible = !1;
            for (var e = this.NewPlayerAchieveData.achievements, t = 0, i = 0; i < e.length; i++) e[i].gotReward && t++;
            for (var i = 0; t > i; i++) this["star" + (i + 1)].visible = !0;
            4 == t && this.NewPlayerAchieveData.level < 7 ? this.getGroup.visible = !0 : this.getGroup.visible = !1;
        }, i.prototype.initStarEffect = function(e) {
            var t = this;
            util.jzlog("initStarEffect>>>>>>");
            for (var i = this.NewPlayerAchieveData.achievements, n = 0, o = 0; o < i.length; o++) i[o].gotReward && n++;
            util.jzlog("hasGot = ", n);
            var a = this["star" + n].localToGlobal(0, 0), r = a.x, s = a.y, l = new eui.Image();
            l.source = "achievement_json.achieve_star", this.addChild(l), l.x = e.x, l.y = e.y, 
            egret.Tween.get(l).to({
                scaleX: 1.5,
                scaleY: 1.5,
                y: e.y - 60
            }, 300, egret.Ease.quadOut).to({
                y: e.y
            }, 300, egret.Ease.quadIn).wait(200).to({
                scaleX: 1,
                scaleY: 1,
                x: r,
                y: s
            }, 600, egret.Ease.quartIn).call(function() {
                t && t && (egret.Tween.removeTweens(l), t["star" + n].visible = !0, l && l.parent && l.parent.removeChild(l), 
                4 == n && t.NewPlayerAchieveData.level < 7 && (t.getGroup.visible = !0));
            });
        }, i.prototype.getBtnFunc = function() {
            var t = this;
            soundModel.buttonOpen(), this.getGroup.visible = !1, HttpService.post(e.ServerMsg.ACHIEVEMENT_NEXT, "uid=" + playerModel.uid, function(i) {
                return t._data = i, hortor.WindowManager.showWindow(e.WindowType.WINDOW_REWARD, i), 
                7 == i.achievementInfo.level ? (t.NewPlayerAchieveData.level = 7, t.NewPlayerAchieveData.levelAward = {}, 
                t.initRewardGroup(), t.initStarGroup(), playerModel.hasAchievement = !1, t.hasRedPoint(), 
                gateModel.updateGate(e.WindowType.WINDOW_ACHIEVE), void playerModel.update(i)) : (t.NewPlayerAchieveData = i.achievementInfo, 
                t.initRewardGroup(), t.initStarGroup(), t.initConfList(), t.hasRedPoint(), gateModel.updateGate(e.WindowType.WINDOW_ACHIEVE), 
                playerModel.update(i), void egret.Tween.get(t.targetGroup).to({
                    alpha: 0
                }, 300).call(function() {
                    t && (egret.Tween.removeTweens(t.targetGroup), t.targetGroup.x = -373, t.targetGroup.alpha = 1, 
                    egret.Tween.get(t.targetGroup).to({
                        x: 0
                    }, 500, egret.Ease.quadIn));
                }));
            });
        }, i.prototype.hasRedPoint = function() {
            i.redPoint = !1;
            for (var t = this.NewPlayerAchieveData.achievements, n = 0, o = 0; o < t.length; o++) if (t[o].gotReward) n++; else if (t[o].num >= t[o].confNum) {
                i.redPoint = !0;
                break;
            }
            4 == n && this.NewPlayerAchieveData.level < 7 && (i.redPoint = !0), gateModel.updateGate(e.WindowType.WINDOW_ACHIEVE);
        }, i.achievedNum = 0, i;
    }(e.WindowBase);
    e.NewPlayerAchievementWindow = t, __reflect(t.prototype, "game.NewPlayerAchievementWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i(e, i) {
            var n = t.call(this) || this;
            return n.key = e, n.value = i, n.skinPath = "newplayerachievement/newPlayerRewardNodeSkin", 
            n;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            var t = this.key, i = this.value, n = e.ItemManager.getItemInfo(t);
            this.icon.source = n.icon, this.numL.text = "x" + e.ComFunc.formatNumber(i);
        }, i;
    }(e.ItemRenderBase);
    e.NewPlayerRewardNode = t, __reflect(t.prototype, "game.NewPlayerRewardNode");
}(game || (game = {}));

var ActivityFunc = function() {
    function e() {}
    return e.killTitanFunc = function() {
        if (!gateModel.guide[game.AcLockType.taptitans]) return void game.ComFunc.openComConfirmPanel(game.AcLockType.taptitans);
        var e = activityModel.getActivityInfo(game.ActivityType.KillTitan);
        e ? hortor.ScreenManager.currentScreen = game.ScreenType.KILLTITAN_SCREEN : hortor.TipManager.alert("不在活动时间范围内");
    }, e.jigsawFunc = function() {
        jigsawModel.jigsawReward = !1, hortor.WindowManager.currentWindow = game.WindowType.WINDOW_JIGSAW;
    }, e.octopusFunc = function() {
        if (!gateModel.guide[game.AcLockType.octopus]) return void game.ComFunc.openComConfirmPanel(game.AcLockType.octopus);
        var e = activityModel.getActivityInfo(game.ActivityType.Octopus);
        e && e.endRemain > 0 ? hortor.ScreenManager.currentScreen = game.ScreenType.OCTOPUS_SCREEN : hortor.TipManager.alert("不在活动时间范围内");
    }, e.treeFunc = function() {
        TreeFunc.redPoint = !1, EventCenter.sendEvent(EventConst.openButtonLayerButton), 
        TreeFunc.openTree();
    }, e;
}();

__reflect(ActivityFunc.prototype, "ActivityFunc");

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.randomNum = 0, e.isVideo = !1, e.hasInvite = !1, e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.onViewRegister();
        }, i.prototype.show = function(e, i, n, o, a) {
            return void 0 === n && (n = null), void 0 === o && (o = null), void 0 === a && (a = null), 
            t.prototype.show.call(this, hortor.StageManager.getLayer(hortor.Layer.TIP), i, n, o, a);
        }, i.prototype.onOpen = function() {}, i.prototype.onClose = function() {}, i.prototype.onData = function() {
            this.openPanel();
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.onViewRegister = function() {
            this.balloonGroup.addEventListener(egret.TouchEvent.TOUCH_TAP, this.balloonGroupFunc, this), 
            this.inviteBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.inviteBtnFunc, this), 
            this.videoBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.inviteBtnFunc, this), 
            this.closeBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.closeBtnFunc, this);
        }, i.prototype.onViewRemove = function() {
            this.balloonGroup.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.balloonGroupFunc, this), 
            this.inviteBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.inviteBtnFunc, this), 
            this.videoBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.inviteBtnFunc, this), 
            this.closeBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.closeBtnFunc, this), 
            egret.Tween.removeTweens(this.balloonGroup), egret.Tween.removeTweens(this.ballImg), 
            EventCenter.sendEvent(EventConst.WXCLUBBUTTONSHOW);
        }, i.prototype.openPanel = function() {
            var t = this;
            EventCenter.sendEvent(EventConst.WXCLUBBUTTONHIDE);
            var i = this;
            i.hasInvite = !1, e.PlatformManager.LogEvent("balloonCreate"), i.randomNum = _.random(0, 2);
            var n = hortor.SystemManager.isWxGame && i.data.isvideo;
            i.isVideo = n, i.videoBtn.visible = n, i.inviteBtn.visible = !n, i.balloonGroup.visible = !0, 
            i.shareGroup.visible = !1;
            var o = i.balloonGroup.y, a = 1e4, r = egret.Tween.get(i.balloonGroup);
            r.to({
                x: 660,
                y: o - 20
            }, a).call(function() {
                i.balloonGroup.y = o;
                var n = egret.Tween.get(i.balloonGroup);
                n.to({
                    x: -170,
                    y: o - 20
                }, a).call(function() {
                    i.balloonGroup.y = o;
                    var n = egret.Tween.get(i.balloonGroup);
                    n.to({
                        x: 660,
                        y: o - 20
                    }, a).call(function() {
                        i.balloonGroup.y = o;
                        var n = egret.Tween.get(i.balloonGroup);
                        n.to({
                            x: -170,
                            y: o - 20
                        }, a).call(function() {
                            egret.Tween.removeTweens(t.balloonGroup), i.balloonGroup.visible = !1, hortor.WindowManager.hideWindow(e.WindowType.WINDOW_FESTIVALBALLOON);
                        });
                    });
                });
            });
            var s = 800, l = 0, d = egret.Tween.get(i.ballImg, {
                loop: !0
            });
            d.to({
                y: l + 15
            }, s).to({
                y: l
            }, s), this.showRewardView(), this.fitScreen();
        }, i.prototype.fitScreen = function() {
            this.shareGroup.y += .5 * hortor.StageManager.stageOffHeight;
        }, i.prototype.balloonGroupFunc = function() {
            e.PlatformManager.LogEvent("balloonClick");
            var t = this;
            egret.Tween.pauseTweens(t.balloonGroup), t.balloonGroup.visible = !1, t.shareGroup.visible = !0;
        }, i.prototype.inviteBtnFunc = function() {
            var t = this, i = this;
            hortor.SystemManager.isWxGame && i.isVideo ? (e.PlatformManager.LogEvent("balloonVideoClick"), 
            gateModel.wxCanShowAd ? (i.inviteBtn.touchEnabled = !1, e.PlatformManager.createVideoAd(e.AdType.adUnitId_balloon, this.getAdReward.bind(this), this.getAdReward.bind(this), function() {
                t && (i.inviteBtn.touchEnabled = !0);
            })) : hortor.TipManager.alert("未能成功获取到视频", function() {
                i.hasInvite = !0, e.PlatformManager.share(Const.annualBalloon);
            }, null, null, !1, null, "common_txt_fx")) : (i.hasInvite = !0, e.PlatformManager.LogEvent("balloonShareClick"), 
            e.PlatformManager.share(Const.annualBalloon));
        }, i.prototype.getAdReward = function() {
            e.AnnualBalloonShare.annualBalloonShareSuccess();
        }, i.prototype.wxInviteBtnFunc = function() {
            hortor.SystemManager.isWxGame && e.PlatformManager.share(Const.annualBalloon);
        }, i.prototype.abandonBtnFunc = function() {
            this.hide();
        }, i.prototype.showRewardView = function() {
            var t = this;
            if (t) {
                var i = _.keys(t.data.reward), n = _.values(t.data.reward), o = "", a = e.ItemManager.getItemInfo(i[0]);
                o = a.name + " x " + n[0], t.titleLabel.text = o, t.icon.source = a.icon;
            }
        }, i.prototype.closeBtnFunc = function() {
            var e = this;
            e.shareGroup.visible = !1, 1 == e.hasInvite ? egret.Tween.removeTweens(e.balloonGroup) : (e.balloonGroup.visible = !0, 
            egret.Tween.resumeTweens(e.balloonGroup));
        }, i;
    }(e.WindowBase);
    e.FestivalBalloonWindow = t, __reflect(t.prototype, "game.FestivalBalloonWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onData = function() {
            this.inputText.text = "";
        }, i.prototype.getFunc = function() {
            var e = new RegExp("[0-9]+"), t = this.inputText.text;
            e.test(t) && parseInt(t) > 999 && parseInt(t) < 1e4 ? this.sendAnnualReceive() : (this.inputText.text = "", 
            hortor.TipManager.alert("密码错误，请确认后重试"));
        }, i.prototype.sendAnnualReceive = function() {
            var t = this, i = this.data;
            HttpService.post(e.ServerMsg.ANNUAL_COLLECT_RECEIVE, "uid=" + playerModel.uid + "&logId=" + i.logId + "&password=" + this.inputText.text, function(e) {
                var n = AnnualData.annualCollect.bags[i.idx], o = e.bags[i.idx];
                o > n ? (AnnualData.annualCollect.receiveCount = e.receiveCount, AnnualData.annualCollect.bags = e.bags, 
                EventCenter.sendEvent(EventConst.RefreshCollection), EventCenter.sendEvent(EventConst.GetCollection, {
                    logId: i.logId
                }), t.hide(), hortor.TipManager.bubble("领取成功")) : hortor.TipManager.alert("密码错误，请确认后重试");
            });
        }, i;
    }(e.ComGetPropWindow);
    e.AnnaulGetPropWindow = t, __reflect(t.prototype, "game.AnnaulGetPropWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.getRewardFunc = function() {
            var t = this, i = this.data;
            HttpService.post(e.ServerMsg.ANNUAL_COLLECT_REWARD, "uid=" + playerModel.uid + "&rid=" + i.id, function(i) {
                if (_.has(i.rewards, "wishCoin") && _.has(i.rewards, "wishCoin")) {
                    var n = hortor.WindowManager.getWindow(e.WindowType.WINDOW_ANNUAL_MAIN);
                    AnnualData.luckyBox.wishCoin += i.rewards.wishCoin, n && n.aWish.showWishCount();
                }
                hortor.WindowManager.showWindow(e.WindowType.WINDOW_REWARD, i.rewards), playerModel.update(i), 
                AnnualData.annualCollect.bags = i.bags, EventCenter.sendEvent(EventConst.RefreshCollection), 
                t.hide();
            });
        }, i;
    }(e.ComRewardPopWindow);
    e.AnnaulRewardPopWindow = t, __reflect(t.prototype, "game.AnnaulRewardPopWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e.openBox = !1, e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.closeBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.closeBtnFunc, this), 
            this.sendBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.shareBtnFunc, this), 
            this.goBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.closeBtnFunc, this);
            for (var e = 0; 3 > e; e++) this["keyGroup" + e].addEventListener(egret.TouchEvent.TOUCH_TAP, this.selectKeyFunc, this);
        }, i.prototype.show = function(e, i, n, o, a) {
            return void 0 === n && (n = null), void 0 === o && (o = null), void 0 === a && (a = null), 
            t.prototype.show.call(this, hortor.StageManager.getLayer(hortor.Layer.TIP), i, n, o, a);
        }, i.prototype.onOpen = function() {}, i.prototype.onData = function() {
            this.boxData = this.data, this.goBtn && (this.goBtn.visible = !1, this.goBtn.alpha = 0), 
            this.openPanel(), this.fitGroup.y += .5 * hortor.StageManager.stageOffHeight, this.helpImg.visible = !1;
        }, i.prototype.prepare = function(e) {
            e(null);
        }, i.prototype.openPanel = function() {
            this.showView();
        }, i.prototype.showView = function() {
            this.showBtn(1);
            for (var e = 0; 3 > e; e++) this.createLiheArmature(e), this["headGroup" + e].visible = !1, 
            this["moonCake" + e].visible = !1, this["keyGroup" + e].touchEnabled = !0;
            this.descLabel.text = "好友猜中即可再得一个气球", this.downCount.visible = !1, this.boxData.openIds && this.setBosStatus();
        }, i.prototype.createLiheArmature = function(t) {
            var i = 1 == t ? 1 : .8;
            this["armature" + t] ? (this["armature" + t].x = 104.5, this["armature" + t].y = 105.5, 
            util.setScale(this["armature" + t], i), this["armature" + t].play("kedakai", 0)) : (this["armature" + t] = new e.ArmaturePlayer("xn_lihe"), 
            this["keyGroup0_" + t].addChild(this["armature" + t]), this["armature" + t].x = 104.5, 
            this["armature" + t].y = 105.5, util.setScale(this["armature" + t], i), this["armature" + t].touchEnabled = !1, 
            this["armature" + t].touchChildren = !1, this["armature" + t].play("kedakai", 0));
        }, i.prototype.showBtn = function(e) {
            this.sendBtn.visible = 1 == e;
        }, i.prototype.setBosStatus = function() {
            var t = this, i = t.boxData;
            if (this.showBtn(2), t.descLabel.text = "送你一个国庆气球，猜猜在哪？", t.boxData.openedCount >= 5 && (t.descLabel.text = "很抱歉！你今天开礼盒的次数已满", 
            t.goBtn.visible = !0, t.goBtn.alpha = 1), t.boxData.trueKey > 0) t.descLabel.text = "气球已经被拿走了", 
            t.goBtn.visible = !0, t.goBtn.alpha = 1; else for (var n = 0; n < t.boxData.uids.length; n++) t.boxData.uids[n] == playerModel.uid && (t.descLabel.text = "您已经猜过了", 
            t.goBtn.visible = !0, t.goBtn.alpha = 1);
            t.downCount.visible = !0, t.downCount.text = "今日已成功开礼盒 " + t.boxData.openedCount + "/5";
            for (var n = 0; n < i.openIds.length; n++) {
                var o = i.openIds[n];
                t["headGroup" + n].visible = "" != o, "" != o ? (util.setRemoteAvatar(t["headImg" + n], o), 
                (0 == n || 2 == n) && (t["keyGroup" + n].scaleX = .8, t["keyGroup" + n].scaleY = .8, 
                t["keyGroup" + n].x += 15, t["keyGroup" + n].y += 20), i.trueKey == n + 1 ? (t["moonCake" + n].visible = !0, 
                t["moonCake" + n].source = e.ItemManager.getItemInfo("annualCollect" + i.rewardId).icon) : t["moonCake" + n].visible = !1, 
                t["armature" + n].play("kai", 0)) : (t["moonCake" + n].visible = !1, i.trueKey > 0 && t["armature" + n].play("guan", 0));
            }
        }, i.prototype.selectKeyFunc = function(t) {
            var i = this, n = this.boxData, o = t.target.name, a = o.substr(o.length - 1, 1), r = parseInt(a);
            soundModel.buttonOpen();
            var s = r + 1;
            if (!this.boxData.openIds) return void hortor.TipManager.tip("请让好友帮你打开礼盒");
            if (this.boxData.fid == playerModel.uid) return void hortor.TipManager.tip("请让好友帮你打开礼盒");
            if (this.boxData.trueKey > 0) return void hortor.TipManager.tip("你来晚了,礼盒已经被打开了");
            for (var l = 0; l < this.boxData.uids.length; l++) this.boxData.uids[l] == playerModel.uid && hortor.TipManager.tip("你已经打开过礼盒了");
            "" == n.openIds[r] && HttpService.post(e.ServerMsg.ANNUAL_COLLECT_OPEN, "uid=" + playerModel.uid + "&fid=" + n.fid + "&idx=" + s + "&boxId=" + n.cakeId, function(e) {
                egret.log("开启宝箱：", e);
                for (var t = 0; 3 > t; t++) t != r && (i["keyGroup" + t].visible = !1, i["keyGroup0_" + t].visible = !1), 
                i["keyGroup" + t].touchEnabled = !1;
                if (i.descLabel.visible = !1, 1 == r) {
                    i["armature" + r].play("dakai", 1);
                    var n = setTimeout(function() {
                        egret.clearTimeout(n), i.openBox1Action(r, e);
                    }, 1700);
                } else i.openBoxAction(r, e);
            });
        }, i.prototype.openBox1Action = function(t, i) {
            var n = this;
            this["armature" + t].play("kai", 0), i.rewardWord > 0 ? (this["keyGroup" + t].y += -100, 
            util.setScale(this["keyGroup" + t], 1), this["moonCake" + t].visible = !0, this["moonCake" + t].source = e.ItemManager.getItemInfo("annualCollect" + i.rewardWord).icon, 
            this.playWinEffect()) : hortor.TipManager.alert("很遗憾，你没有猜中", function() {
                n.showZhufuFont();
            });
        }, i.prototype.openBoxAction = function(t, i) {
            var n = this, o = 2 == t ? -165 : 165;
            this["keyGroup" + t].x += o, this["keyGroup" + t].y += 166, util.setScale(this["keyGroup" + t], 1);
            var a = this["keyGroup0_" + t].x + o, r = this["keyGroup0_" + t].y + 166;
            egret.Tween.get(this["armature" + t]).to({
                scaleX: 1,
                scaleY: 1
            }, 500, egret.Ease.quadOut).call(function() {
                egret.Tween.removeTweens(n["armature" + t]);
            }), egret.Tween.get(this["keyGroup0_" + t]).to({
                x: a,
                y: r,
                scaleX: 1,
                scaleY: 1
            }, 500, egret.Ease.quadOut).call(function() {
                egret.Tween.removeTweens(n["keyGroup0_" + t]), n["armature" + t].play("dakai", 1);
                var o = setTimeout(function() {
                    egret.clearTimeout(o), n["armature" + t].play("kai", 0), i.rewardWord > 0 ? (n["moonCake" + t].visible = !0, 
                    n["moonCake" + t].source = e.ItemManager.getItemInfo("annualCollect" + i.rewardWord).icon, 
                    n.playWinEffect()) : hortor.TipManager.alert("很遗憾，你没有猜中", function() {
                        n.showZhufuFont();
                    });
                }, 1700);
            });
        }, i.prototype.playWinEffect = function() {
            var e = this;
            this.boxData.openedCount += 1, this.boxData.openedCount >= 5 && (this.boxData.openedCount = 5), 
            this.downCount.text = "今日已成功开礼盒 " + this.boxData.openedCount + "/5";
            var t = egret.Tween.get(this.winPic), i = egret.Tween.get(this.winLight, {
                loop: !0
            });
            t.to({
                scaleX: 1.2,
                scaleY: 1.2
            }, 400).to({
                scaleX: 1,
                scaleY: 1
            }, 300).call(function() {
                e.winLight.visible = !0, i.to({
                    rotation: 360
                }, 1e3);
            });
            var n = setTimeout(function() {
                egret.clearTimeout(n), egret.Tween.removeTweens(e.winPic), egret.Tween.removeTweens(e.winLight), 
                e.winPic.visible = !1, e.winLight.visible = !1, e.showZhufuFont();
            }, 1500);
        }, i.prototype.showZhufuFont = function() {
            var e = this;
            e.descLabel.visible = !0, e.descLabel.size = 32, e.descLabel.stroke = 3, e.descLabel.y += 50, 
            e.descLabel.alpha = 0, e.descLabel.text = "衷心祝你，国庆快乐";
            var t = egret.Tween.get(e.descLabel);
            t.to({
                alpha: 1
            }, 1e3).call(function() {
                egret.Tween.removeTweens(e.descLabel), e && e.goBtn && (e.goBtn.alpha = 1);
            }), e.goBtn.visible = !0, e.goBtn.alpha = 0, e.sendBtn.visible = !1, e.downCount.visible = !1, 
            egret.Tween.get(e.goBtn).to({
                alpha: 1
            }, 1e3).call(function() {
                egret.Tween.removeTweens(e.goBtn), e.goBtn.alpha = 1;
            });
        }, i.prototype.shareBtnFunc = function() {
            e.PlatformManager.share(e.ShareType.annualCollect, {
                annualCollectUid: AnnualMarkData.shareFontId,
                annualShareTime: moment().unix()
            });
        }, i.prototype.closeBtnFunc = function() {
            this.hide();
        }, i.prototype.dealWsMessage = function(t) {
            var i = this;
            if (this.isOpen) {
                var n = this.boxData.fid, o = this.boxData.cakeId;
                n && o && HttpService.get(e.ServerMsg.ANNUAL_COLLECT_SHOW, "uid=" + playerModel.uid + "&ownerId=" + this.boxData.fid + "&boxId=" + this.boxData.cakeId, function(e) {
                    e.fid = n, e.cakeId = o, i.boxData = e, i.setBosStatus();
                });
            }
        }, i;
    }(e.WindowBase);
    e.AnnualBoxWindow = t, __reflect(t.prototype, "game.AnnualBoxWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onData = function() {
            var e = this.data.itemPos;
            this.group.x = e.x, this.group.y = e.y, this.btnBg.height = 110, this.useBtn.visible = this.useBtn.includeInLayout = !1, 
            this.exchangeBtn.visible = this.exchangeBtn.includeInLayout = !1;
        }, i.prototype.sendBtnFunc = function() {
            return AnnualData.annualCollect.donateCount >= 3 ? void hortor.TipManager.bubble("每天最多赠送3次气球，请明天赠送吧") : void hortor.WindowManager.showWindow(e.WindowType.WINDOW_ANNUAL_SENDFRIEND);
        }, i;
    }(e.ComAcPropBtnWindow);
    e.AnnualBtnWindow = t, __reflect(t.prototype, "game.AnnualBtnWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            t.prototype.onInit.call(this), this.list.itemRenderer = e.AnnualFriendItem;
        }, i.prototype.onData = function() {
            this.desc.text = "好友互换气球，可以更快兑换奖品哦！", this.showAllView(!0);
        }, i;
    }(e.ComFriendListWindow);
    e.AnnualFriendWindow = t, __reflect(t.prototype, "game.AnnualFriendWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.effect = null, e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.addClick(this.closeImg, this.closeFunc, this), this.logsScroller.viewport = this.logsList, 
            this.logsData = new eui.ArrayCollection([]), this.logsList.dataProvider = this.logsData, 
            this.logsList.itemRenderer = e.AnnualLogsNode;
        }, i.prototype.onOpen = function() {}, i.prototype.onData = function() {
            this.logsData.replaceAll(AnnualMarkData.luckyBoxLogs), this.logsList.dataProviderRefreshed();
        }, i.prototype.prepare = function(e) {
            e(null);
        }, i.prototype.closeFunc = function() {
            soundModel.buttonClose(), this.hide();
        }, i;
    }(e.WindowBase);
    e.AnnualLogsWindow = t, __reflect(t.prototype, "game.AnnualLogsWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e.isAction = !1, e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.closeBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.closeBtnFunc, this), 
            this.tabBar.addEventListener(egret.Event.CHANGE, this.onTabChange, this), this.aCollect = new e.AnnualCollect(this), 
            this.aCollect.onInit(), this.aWish = new e.AnnualWish(this), this.aWish.onInit(), 
            this.aRebate = new e.AnnualRebate(this), this.aRebate.onInit(), this.aGift = new e.AnnualGift(this), 
            this.aGift.onInit(), this.clock = activityModel.getActivityInfo(e.ActivityType.annualCollect).clock, 
            this.clock.registCallBack(this, null, this.timerFunc.bind(this));
        }, i.prototype.onOpen = function() {
            this.aWish.onOpen();
        }, i.prototype.onData = function() {
            var t = this;
            this.isAction = !1, this.aCollect.onOpen(), this.aWish.onData(), this.aRebate.onOpen(), 
            this.aGift.onOpen();
            var i = egret.setInterval(function() {
                t.tabBar.numChildren && (egret.clearTimeout(i), t.initRedPoint());
            }, this, 200);
            this.leftTime.text = "剩余时间：" + e.ComFunc.formatTimeCNNew3(AnnualMarkData.endRemain);
        }, i.prototype.prepare = function(t, i) {
            HttpService.get(e.ServerMsg.ANNUAL_SYNC, "uid=" + playerModel.uid, function(e) {
                AnnualData = e, AnnualMarkData.endRemain = e.annualCollect.endRemain, t(e);
            }, i);
        }, i.prototype.initRedPoint = function() {
            if (!(this.tabBar.numChildren < 3)) {
                this.tabBar.x = gateModel.iosPay ? 55 : 125;
                var e = this.tabBar.getElementAt(3);
                e.visible = gateModel.iosPay;
                for (var t = 0; 3 > t; t++) this["tab" + t] || (this["tab" + t] = this.tabBar.getElementAt(t));
                AnnualMarkData.annualCollectPoint = !1;
                for (var i = 0; i < AnnualData.annualCollect.configData.length; i++) {
                    for (var n = !0, o = 0; o < AnnualData.annualCollect.configData[i].formula.length; o++) if (0 == AnnualData.annualCollect.bags[AnnualData.annualCollect.configData[i].formula[o] - 1]) {
                        n = !1;
                        break;
                    }
                    if (n) {
                        AnnualMarkData.annualCollectPoint = !0;
                        break;
                    }
                }
                AnnualMarkData.luckyBoxPoint = AnnualData.luckyBox.hasFree || AnnualData.luckyBox.wishCoin > 0, 
                AnnualMarkData.annualRebatePoint = !1;
                for (var i = 0; i < AnnualData.annualRebate.confs.energy.length; i++) if (AnnualData.annualRebate.rollCount >= AnnualData.annualRebate.confs.energy[i].value && !AnnualData.annualRebate.rollBoxes[i]) {
                    AnnualMarkData.annualRebatePoint = !0;
                    break;
                }
                for (var i = 0; i < AnnualData.annualRebate.confs.pay.length; i++) if (AnnualData.annualRebate.payCount >= AnnualData.annualRebate.confs.pay[i].value && !AnnualData.annualRebate.payBoxes[i]) {
                    AnnualMarkData.annualRebatePoint = !0;
                    break;
                }
                this.tab0.redPoint.visible = AnnualMarkData.annualCollectPoint || AnnualMarkData.annualCollectNewsPoint, 
                this.fontNewsRedPoint.visible = AnnualMarkData.annualCollectNewsPoint, this.tab1.redPoint.visible = AnnualMarkData.luckyBoxPoint, 
                this.tab2.redPoint.visible = AnnualMarkData.annualRebatePoint;
            }
        }, i.prototype.timerFunc = function() {
            this.leftTime.text = "剩余时间：" + e.ComFunc.formatTimeCNNew3(this.clock.leftSecond);
        }, i.prototype.onTabChange = function(e) {
            soundModel.buttonOpen();
        }, i.prototype.closeBtnFunc = function() {
            this.isAction || (gateModel.updateGate(e.ActivityType.annualCollect), this.hide());
        }, i;
    }(e.WindowBase);
    e.AnnualMainWindow = t, __reflect(t.prototype, "game.AnnualMainWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.initEvent = e.addEventFunc.bind(e), e;
        }
        return __extends(i, t), i.prototype.addEventFunc = function() {
            EventCenter.addEventListener(EventConst.GetCollection, this.refreshListFunc, this);
        }, i.prototype.onInit = function() {
            t.prototype.onInit.call(this), this.list.itemRenderer = e.AnnualNewsNode;
        }, i.prototype.onData = function() {
            this.logs = this.data.logs.reverse(), this.setHasGotNum();
        }, i.prototype.prepare = function(t, i) {
            HttpService.get(e.ServerMsg.ANNUAL_COLLECT_LOGS, "uid=" + playerModel.uid, function(e) {
                t(e);
            }, i);
        }, i.prototype.refreshListFunc = function(e) {
            if (this.isOpen) {
                var t = e.data.logId, i = this.logs, n = _.find(i, function(e) {
                    return e.logId == t;
                });
                n && (n.got = !0), this.logs = i, this.setHasGotNum();
            }
        }, i.prototype.setHasGotNum = function() {
            this.desc.text = "已领取气球数量:" + AnnualData.annualCollect.receiveCount + "/3";
        }, i;
    }(e.ComNewsWindow);
    e.AnnualNewsWindow = t, __reflect(t.prototype, "game.AnnualNewsWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.getRewardFunc = function() {
            var t = this, i = this.data;
            HttpService.post(e.ServerMsg.ANNUAL_REBATE_REWARD, "uid=" + playerModel.uid + "&type=" + i.type + "&level=" + i.level, function(i) {
                AnnualData.annualRebate.payBoxes = i.payBoxes, AnnualData.annualRebate.rollBoxes = i.rollBoxes;
                var n = hortor.WindowManager.getWindow(e.WindowType.WINDOW_ANNUAL_MAIN);
                n && (n.initRedPoint(), n.aRebate.onOpen()), _.has(i.rewards, "wishCoin") && (AnnualData.luckyBox.wishCoin += i.rewards.wishCoin, 
                n && n.aWish.showWishCount()), hortor.WindowManager.showWindow(e.WindowType.WINDOW_REWARD, i.rewards), 
                playerModel.update(i), t.hide();
            });
        }, i;
    }(e.ComRewardPopWindow);
    e.AnnualRebatRewardWindow = t, __reflect(t.prototype, "game.AnnualRebatRewardWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(e) {
        function t() {
            return null !== e && e.apply(this, arguments) || this;
        }
        return __extends(t, e), t;
    }(e.WindowBase);
    e.AnnualRewardListWindow = t, __reflect(t.prototype, "game.AnnualRewardListWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onData = function() {
            this.desc.text = "确定要赠送气球吗？", this.pw = _.random(1e3, 9999), this.scretLabel.text = "" + this.pw;
        }, i.prototype.sendFunc = function() {
            var t = this;
            HttpService.post(e.ServerMsg.ANNUAL_COLLECT_DONATE, "uid=" + playerModel.uid + "&fid=" + AnnualMarkData.sendData.uid + "&idx=" + AnnualMarkData.sendFontId + "&password=" + this.pw, function(i) {
                for (var n in i) _.isUndefined(AnnualData.annualCollect[n]) || (AnnualData.annualCollect[n] = i[n]);
                EventCenter.sendEvent(EventConst.RefreshCollection), hortor.TipManager.bubble("赠送成功"), 
                t.hide(), hortor.WindowManager.hideWindow(e.WindowType.WINDOW_ANNUAL_SENDFRIEND);
            });
        }, i;
    }(e.ComSendPropWindow);
    e.AnnualSendPropWindow = t, __reflect(t.prototype, "game.AnnualSendPropWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e.shareTickets = !1, e;
        }
        return __extends(i, t), i.prototype.onShareSuc = function(i) {
            t.prototype.onShareSuc.call(this, i), hortor.TipManager.alert("快让好友帮你开启礼盒吧！"), hortor.WindowManager.hideWindow(e.WindowType.WINDOW_ANNUALBOX);
        }, i.prototype.onShareEnter = function(t) {
            var i = t.shareOwnerId, n = t.annualCollectUid;
            i != playerModel.uid && HttpService.get(e.ServerMsg.ANNUAL_COLLECT_SHOW, "uid=" + playerModel.uid + "&ownerId=" + i + "&boxId=" + n, function(t) {
                t.fid = i, t.cakeId = n, hortor.WindowManager.showWindow(e.WindowType.WINDOW_ANNUALBOX, t);
            });
        }, i;
    }(e.GameShare);
    e.AnnualShare = t, __reflect(t.prototype, "game.AnnualShare");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.getRewardFunc = function() {
            var t = this, i = this.data;
            HttpService.post(e.ServerMsg.ANNUAL_OPEN_LUCKY_BOX2, "uid=" + playerModel.uid + "&idx=" + i.id, function(i) {
                playerModel.update(i), AnnualData.luckyBox.boxes = i.boxes, _.has(i.rewards, "wishCoin") && (AnnualData.luckyBox.wishCoin += i.rewards.wishCoin);
                var n = hortor.WindowManager.getWindow(e.WindowType.WINDOW_ANNUAL_MAIN);
                n && (n.initRedPoint(), n.aWish.onData()), hortor.WindowManager.showWindow(e.WindowType.WINDOW_REWARD, i.rewards), 
                t.hide();
            });
        }, i;
    }(e.ComRewardPopWindow);
    e.AnnualWishRewardWindow = t, __reflect(t.prototype, "game.AnnualWishRewardWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function() {
        function t(e) {
            this.wnd = e;
        }
        return t.prototype.onInit = function() {
            var t = this.wnd;
            t.newsBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.newsBtnFunc, this);
            for (var i = 0; 7 > i; i++) t.addClick(t["touchbg" + i], this.fontFunc, this);
            t.fontRewardListData = new eui.ArrayCollection([]), t.rewardList.itemRenderer = e.AnnualRewardNode, 
            t.rewardList.dataProvider = t.fontRewardListData, EventCenter.addEventListener(EventConst.RefreshCollection, this.showView, this);
        }, t.prototype.onOpen = function() {
            this.showView();
        }, t.prototype.showView = function() {
            for (var e = AnnualData.annualCollect, t = e.bags, i = 0; 7 > i; i++) this.wnd["fontCount" + i].text = "" + t[i];
            this.wnd.sendNum.text = "今日赠送次数：" + e.donateCount + "/3", this.wnd.fontRewardListData.replaceAll(e.configData), 
            this.wnd.rewardList.dataProviderRefreshed(), this.wnd.initRedPoint();
        }, t.prototype.fontFunc = function(t) {
            var i = t.target.name, n = i.substr(i.length - 1, 1), o = /^[0-9]$/;
            if (0 != o.test(n)) {
                var a = parseInt(n);
                if (!(AnnualData.annualCollect.bags[a] < 1)) {
                    var r = t.target.localToGlobal(0, 0), s = {
                        x: r.x + 77,
                        y: r.y
                    };
                    AnnualMarkData.sendFontId = a + 1, soundModel.buttonOpen(), hortor.WindowManager.showWindow(e.WindowType.WINDOW_ANNUAL_BTN, {
                        itemPos: s
                    });
                }
            }
        }, t.prototype.newsBtnFunc = function() {
            AnnualMarkData.annualCollectNewsPoint = !1, gateModel.updateGate(e.ActivityType.annualCollect), 
            this.wnd.initRedPoint(), hortor.WindowManager.showWindow(e.WindowType.WINDOW_ANNUAL_NEWS);
        }, t;
    }();
    e.AnnualCollect = t, __reflect(t.prototype, "game.AnnualCollect");
}(game || (game = {}));

var game;

!function(e) {
    var t = function() {
        function t(e) {
            this.wnd = e;
        }
        return t.prototype.onInit = function() {
            var t = this.wnd;
            t.payListData = new eui.ArrayCollection([]), t.payList.itemRenderer = e.AnnualPayNode, 
            t.payList.dataProvider = t.payListData;
        }, t.prototype.onOpen = function() {
            this.wnd.payListData.replaceAll(AnnualData.annualGift.giftInfos), this.wnd.payList.dataProviderRefreshed();
        }, t;
    }();
    e.AnnualGift = t, __reflect(t.prototype, "game.AnnualGift");
}(game || (game = {}));

var game;

!function(e) {
    var t = function() {
        function t(e) {
            this.widthList = [ 57, 133, 139, 124 ], this.wnd = e;
        }
        return t.prototype.onInit = function() {
            var e = this.wnd;
            e.addClick(e.boxComponent0, this.energyFunc, this), e.addClick(e.boxComponent1, this.payFunc, this);
            for (var t = AnnualData.annualRebate, i = 0; 4 > i; i++) {
                var n = t.confs;
                e["enum" + i].text = "" + n.energy[i].value, e["pnum" + i].text = "" + n.pay[i].value;
            }
        }, t.prototype.onOpen = function() {
            this.energyProgress(), this.payProgress();
        }, t.prototype.isAll = function(e, t) {
            var i = !1, n = AnnualData.annualRebate, o = "energy" == t ? n.confs.energy : n.confs.pay, a = "energy" == t ? n.rollCount : n.payCount, r = "energy" == t ? n.rollBoxes : n.payBoxes;
            return i = !r[e] && a >= o[e].value;
        }, t.prototype.energyProgress = function() {
            for (var e = this.wnd, t = AnnualData.annualRebate, i = 0; i < t.confs.energy.length; i++) {
                var n = e.boxComponent0;
                n["box" + i].source = t.rollBoxes[i] ? "annual_gift_g1" : "annual_gift_g0", egret.Tween.removeTweens(n["box" + i]), 
                n["box" + i].rotation = 0, this.isAll(i, "energy") && util.rockTween(n["box" + i]);
            }
            for (var o = t.confs.energy, a = 0, r = 0, s = 0; s < o.length; s++) {
                if (t.rollCount < o[s].value) {
                    a = s;
                    break;
                }
                r += this.widthList[s];
            }
            var l = 0;
            l = 0 == a ? r > 0 ? t.rollCount / 1e4 * this.widthList[3] : t.rollCount / o[a].value * this.widthList[a] : (t.rollCount - o[a - 1].value) / (o[a].value - o[a - 1].value) * this.widthList[a];
            var d = r + l > 490 ? 490 : r + l;
            e.energyNum.text = "" + t.rollCount, e.energyBar.mask = new egret.Rectangle(0, 0, d, 23), 
            e.eGroup.x = 75 + d;
        }, t.prototype.payProgress = function() {
            for (var e = this.wnd, t = AnnualData.annualRebate, i = 0; i < t.confs.pay.length; i++) {
                var n = e.boxComponent1;
                n["box" + i].source = t.payBoxes[i] ? "annual_gift_g1" : "annual_gift_g0", egret.Tween.removeTweens(n["box" + i]), 
                n["box" + i].rotation = 0, this.isAll(i, "pay") && util.rockTween(n["box" + i]);
            }
            for (var o = t.confs.pay, a = 0, r = 0, s = 0; s < o.length; s++) {
                if (t.payCount < o[s].value) {
                    a = s;
                    break;
                }
                r += this.widthList[s];
            }
            var l = 0;
            l = 0 == a ? r > 0 ? t.payCount / 1e4 * this.widthList[3] : t.payCount / o[a].value * this.widthList[a] : (t.payCount - o[a - 1].value) / (o[a].value - o[a - 1].value) * this.widthList[a];
            var d = r + l > 490 ? 490 : r + l;
            e.payNum.text = "" + t.payCount, e.payBar.mask = new egret.Rectangle(0, 0, d, 23), 
            e.pGroup.x = 75 + d;
        }, t.prototype.energyFunc = function(e) {
            var t = e.target.name;
            if (t) {
                var i = t.substr(t.length - 1, 1), n = /^[0-9]$/;
                if (0 == n.test(i)) return;
                var o = parseInt(i);
                if (AnnualData.annualRebate.rollBoxes[o]) return void hortor.TipManager.tip("宝箱已开启");
                soundModel.buttonOpen(), this.getRewardView(o, "energy");
            }
        }, t.prototype.payFunc = function(e) {
            var t = e.target.name;
            if (t) {
                var i = t.substr(t.length - 1, 1), n = /^[0-9]$/;
                if (0 == n.test(i)) return;
                var o = parseInt(i);
                if (AnnualData.annualRebate.payBoxes[o]) return void hortor.TipManager.tip("宝箱已开启");
                soundModel.buttonOpen(), this.getRewardView(o, "pay");
            }
        }, t.prototype.getRewardView = function(t, i) {
            var n = AnnualData.annualRebate.confs, o = "energy" == i ? n.energy[t] : n.pay[t], a = {
                type: o.type,
                level: t + 1,
                isAll: this.isAll(t, i)
            };
            for (var r in o.reward) a[r] = o.reward[r];
            hortor.WindowManager.showWindow(e.WindowType.WINDOW_ANNUAL_REBATREWARD, a);
        }, t;
    }();
    e.AnnualRebate = t, __reflect(t.prototype, "game.AnnualRebate");
}(game || (game = {}));

var game;

!function(e) {
    var t = function() {
        function t(e) {
            this.penquanAcType = {
                enter: "enter",
                still: "still"
            }, this.wnd = e;
        }
        return t.prototype.onInit = function() {
            var t = this.wnd;
            t.wishIcon.source = e.ItemManager.getItemInfo("wishCoin").icon;
            for (var i = 0; 5 > i; i++) t.addClick(t["wishReward" + i], this.rewardFunc, this);
            t.addClick(t.logsBtn, this.logsBtnFunc, this), t.addClick(t.wishBtn, this.luckyBtnFunc, this), 
            t.addClick(t.rewardBtn, this.rewardBtnFunc, this);
        }, t.prototype.onOpen = function() {
            var e = this;
            this.playPenquanAr(this.penquanAcType.still, 0, function() {
                e.penquanAr.arAddListener(dragonBones.EventObject.FRAME_EVENT, e.getWishReward, e);
            });
        }, t.prototype.onData = function() {
            this.initWishView(), this.progressView();
        }, t.prototype.playWaveAr = function(t) {
            this.waveAr ? this.waveAr.play("gqj_shuibo", 1, t) : (this.waveAr = new e.ArmaturePlayer("annual_shuibo"), 
            this.wnd.effectGroup.addChild(this.waveAr), this.waveAr.x = 380, this.waveAr.y = 430, 
            this.waveAr.play("gqj_shuibo", 1, t));
        }, t.prototype.playPenquanAr = function(t, i, n) {
            void 0 === i && (i = 1), this.penquanAr ? this.penquanAr.play(t, i, n) : (this.penquanAr = new e.ArmaturePlayer("annual_penquan"), 
            this.wnd.effectGroup.addChild(this.penquanAr), this.penquanAr.x = 290, this.penquanAr.y = 430, 
            this.penquanAr.play(t, i, n));
        }, t.prototype.wishAction = function() {
            var e = this;
            this.playWaveAr(function() {
                e.playPenquanAr(e.penquanAcType.enter, 1, function() {
                    e.playPenquanAr(e.penquanAcType.still, 0);
                });
            });
        }, t.prototype.getWishReward = function() {
            if (this.wnd.isAction = !1, this.onData(), this.wishRewards) {
                var t = e.ComFunc.dealGuildRewardData(this.wishRewards);
                hortor.WindowManager.showWindow(e.WindowType.WINDOW_REWARD, t);
            }
        }, t.prototype.showWishCount = function() {
            this.wnd.wishCount.text = "x" + AnnualData.luckyBox.wishCoin;
        }, t.prototype.initWishView = function() {
            var e = this.wnd, t = AnnualData.luckyBox;
            e.wishCount.text = "x" + t.wishCoin, e.wishBtn.icon = AnnualData.luckyBox.hasFree ? "comBtnTxt_json.common_txt_mf" : "comBtnTxt_json.common_txt_xy";
            for (var i = 0; i < t.confs.length; i++) {
                var n = t.confs[i], o = e["wishReward" + i];
                o.count.text = "" + n.openTime, o.rewardBox.source = t.boxes[i] ? "annual_img_gift1" : "annual_img_gift0", 
                egret.Tween.removeTweens(o.rewardBox), o.rewardBox.rotation = 0, this.isAll(i) && util.rockTween(o.rewardBox);
            }
        }, t.prototype.isAll = function(e) {
            var t = !1, i = AnnualData.luckyBox;
            return t = !i.boxes[e] && i.openCount >= i.confs[e].openTime;
        }, t.prototype.progressView = function() {
            for (var e = this.wnd, t = [ 39, 99, 105, 101, 106 ], i = AnnualData.luckyBox, n = i.confs, o = 0, a = 0, r = 0; r < n.length; r++) {
                if (i.openCount < n[r].openTime) {
                    o = r;
                    break;
                }
                a += t[r];
            }
            var s = 0;
            s = 0 == o ? a > 0 ? i.openCount / 1e4 * t[4] : i.openCount / n[o].openTime * t[o] : (i.openCount - n[o - 1].openTime) / (n[o].openTime - n[o - 1].openTime) * t[o];
            var l = a + s > 490 ? 490 : a + s;
            e.progressNum.text = "" + i.openCount, e.wishBar.mask = new egret.Rectangle(0, 0, l, 24), 
            e.progressGroup.x = 75 + l;
        }, t.prototype.rewardFunc = function(t) {
            soundModel.buttonOpen();
            var i = t.target.name, n = i.substr(i.length - 1, 1), o = /^[0-9]$/;
            if (0 != o.test(n)) {
                var a = parseInt(n);
                if (AnnualData.luckyBox.boxes[a]) return void hortor.TipManager.bubble("宝箱已开启");
                var r = AnnualData.luckyBox.confs[a], s = {
                    id: r.id,
                    isAll: this.isAll(a)
                };
                for (var l in r.reward) s[l] = r.reward[l];
                hortor.WindowManager.showWindow(e.WindowType.WINDOW_ANNUAL_WISHREWARD, s);
            }
        }, t.prototype.luckyBtnFunc = function() {
            var t = this;
            if (!this.wnd.isAction) {
                var i = AnnualData.luckyBox;
                if (i.wishCoin < 1 && !i.hasFree) {
                    var n = gateModel.iosPay ? "可通过欢乐气球、超值返利、国庆特惠获得" : "许愿币不足!";
                    return void hortor.TipManager.alert(n);
                }
                var o = !1;
                AnnualData.luckyBox.hasFree && (o = !0, AnnualData.luckyBox.hasFree = !1), this.wnd.isAction = !0, 
                HttpService.post(e.ServerMsg.ANNUAL_OPEN_LUCKY_BOX, "uid=" + playerModel.uid + "&useFree=" + o, function(i) {
                    soundModel.playSound(e.SoundType.SOUND_ANNUAL_LUCKYBOX), playerModel.update(i), 
                    AnnualData.luckyBox.wishCoin = i.wishCoin, AnnualData.luckyBox.openCount = i.openCount;
                    for (var n in i.rewards) n.indexOf("annualCollect") > -1 && (AnnualData.annualCollect.bags[parseInt(n.substr(n.length - 1, 1)) - 1] += 1, 
                    EventCenter.sendEvent(EventConst.RefreshCollection));
                    t.wishRewards = i.rewards, t.wishAction(), t.wnd.initRedPoint();
                });
            }
        }, t.prototype.rewardBtnFunc = function() {
            soundModel.buttonOpen(), hortor.WindowManager.showWindow(e.WindowType.WINDOW_ANNUAL_REWARD_LIST);
        }, t.prototype.logsBtnFunc = function() {
            hortor.WindowManager.showWindow(e.WindowType.WINDOW_ANNUAL_LOGS);
        }, t;
    }();
    e.AnnualWish = t, __reflect(t.prototype, "game.AnnualWish");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.btnFunc = function() {
            "send" == this.data.btnType && (AnnualMarkData.sendData = this.data, hortor.WindowManager.showWindow(e.WindowType.WINDOW_ANNUAL_SENDPROP));
        }, i;
    }(e.ComFriendItem);
    e.AnnualFriendItem = t, __reflect(t.prototype, "game.AnnualFriendItem");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.nameColor = 16777215, e.descColor = 2449027, e.targetColor = 8403377, e.skinPath = "annual/node/AnnualLogsNodeSkin", 
            e;
        }
        return __extends(i, t), i.prototype.onInit = function() {}, i.prototype.onData = function() {
            var t = this.data, i = this.desc, n = "", o = "";
            "jewel" == t.type ? (n = e.ItemManager.getItemInfo("jewel" + t.nums).name, o = "1") : (n = e.ItemManager.getItemInfo(t.type).name, 
            o = e.ComFunc.formatNumber(t.nums)), i.textFlow = [], i.textFlow.push({
                text: util.strSub(t.name, 5),
                style: {
                    textColor: this.nameColor
                }
            }), i.textFlow.push({
                text: "获得",
                style: {
                    textColor: this.descColor
                }
            }), i.textFlow.push({
                text: " " + n + "x" + o,
                style: {
                    textColor: this.targetColor
                }
            });
        }, i;
    }(e.ItemRenderBase);
    e.AnnualLogsNode = t, __reflect(t.prototype, "game.AnnualLogsNode");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onData = function() {
            var t = this.data;
            this.avatarInfo.data = {
                gender: 0,
                headImg: t.friendHeadImg || "",
                crowns: 0,
                showStar: !1
            }, this.nameLabel.text = "" + t.friendName, this.timeLabel.text = e.ComFunc.toTodayTime(this.data.createAt);
            var i = this.desc;
            i.textFlow = [], t.fromFriend ? (this.getBtn.visible = !t.got, this.hasGet.visible = t.got, 
            this.password.visible = !1, this.sendIcon.visible = !1, i.textFlow.push({
                text: "赠送你一个",
                style: {
                    textColor: this.descColor
                }
            }), i.textFlow.push({
                text: Const.annualFontNames[this.data.idx + 1] || "",
                style: {
                    textColor: this.targetColor
                }
            }), i.textFlow.push({
                text: "气球",
                style: {
                    textColor: this.descColor
                }
            })) : (this.getBtn.visible = !1, this.hasGet.visible = !1, this.password.visible = !0, 
            this.sendIcon.visible = !0, this.password.text = "(密码:" + t.password + ")", i.textFlow.push({
                text: "收到你送的一个",
                style: {
                    textColor: this.descColor
                }
            }), i.textFlow.push({
                text: Const.annualFontNames[this.data.idx + 1] || "",
                style: {
                    textColor: this.targetColor
                }
            }), i.textFlow.push({
                text: "气球",
                style: {
                    textColor: this.descColor
                }
            })), t.gotAt > 0 && (this.password.visible = !0, this.password.text = moment(1e3 * t.gotAt).format("MM-DD hh:mm") + "领取");
        }, i.prototype.getBtnFunc = function() {
            this.data.got || hortor.WindowManager.showWindow(e.WindowType.WINDOW_ANNUAL_GETPROP, this.data);
        }, i;
    }(e.ComNewsItem);
    e.AnnualNewsNode = t, __reflect(t.prototype, "game.AnnualNewsNode");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.skinPath = "annual/node/AnnualPayNodeSkin", e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.addClick(this.payBtn, this.payFunc, this);
        }, i.prototype.onData = function() {
            var t = this.data;
            1 == t.daily ? this.limitLabel.text = "每日限购:" + (t.timesLimit - t.boughtTimes) : this.limitLabel.text = "剩余数量:" + (t.timesLimit - t.boughtTimes), 
            this.title.source = "annual_gift_title" + this.itemIndex, this.payBtn.enabled = t.timesLimit > t.boughtTimes, 
            this.payBtn.icon = t.timesLimit <= t.boughtTimes ? "common_txt_sq2" : "common_txt_gq" + t.price;
            for (var i = 0; i < t.rewards.length; i++) {
                var n = t.rewards[i], o = e.ItemManager.getItemInfo(n.name);
                this["icon" + i].source = o.icon, this["num" + i].text = e.ComFunc.formatNumber(n.count);
            }
        }, i.prototype.payFunc = function() {
            e.PlatformManager.pay(this.data.goodsId);
        }, i;
    }(e.ItemRenderBase);
    e.AnnualPayNode = t, __reflect(t.prototype, "game.AnnualPayNode");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.isAll = !1, e.skinPath = "annual/node/AnnualRewardNodeSkin", e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.rewardBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.rewardBtnFunc, this);
        }, i.prototype.onData = function() {
            this.isAll = !0;
            for (var t = AnnualData.annualCollect.bags, i = 0; 7 > i; i++) this["icon" + i].visible = !1;
            for (var n = this.data, i = 0; i < n.formula.length; i++) {
                var o = n.formula[i], a = "annual_font_gray_" + o;
                t[o - 1] > 0 ? a = e.ItemManager.getItemInfo("annualCollect" + o).icon : this.isAll = !1, 
                this["icon" + i].source = a, this["icon" + i].visible = !0;
            }
        }, i.prototype.rewardBtnFunc = function() {
            var t = {
                id: this.data.id,
                isAll: this.isAll
            };
            for (var i in this.data.reward) t[i] = this.data.reward[i];
            hortor.WindowManager.showWindow(e.WindowType.WINDOW_ANNUAL_REWARDPOP, t);
        }, i;
    }(e.ItemRenderBase);
    e.AnnualRewardNode = t, __reflect(t.prototype, "game.AnnualRewardNode");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.showBtn = !0, e.isMoving = !1, e.effect = null, e;
        }
        return __extends(i, t), i.prototype.show = function(e, i, n, o, a) {
            return void 0 === n && (n = null), void 0 === o && (o = null), void 0 === a && (a = null), 
            t.prototype.show.call(this, hortor.StageManager.getLayer(hortor.Layer.SCREEN), i, n, o, a);
        }, i.prototype.onInit = function() {
            if (e.TutorialManager.instance.newbieTutorialing) {
                var t = Robot.robot0;
                12 == playerModel.tutorial && (t = Robot.robot2), wheelModel.markAttackTarget = new e.AttackTarget({
                    uid: 0,
                    name: t.name,
                    headImg: t.headImg,
                    crowns: 20,
                    islandId: 1,
                    buildings: [ {
                        level: 4,
                        status: 0
                    }, {
                        level: 4,
                        status: 0
                    }, {
                        level: 4,
                        status: 0
                    }, {
                        level: 4,
                        status: 0
                    }, {
                        level: 4,
                        status: 0
                    } ]
                });
            }
            this.bindEvent(), e.TutorialManager.instance.newbieTutorialing || (wheelModel.markAttackTarget = util.deepClone(wheelModel.attackTarget)), 
            this.initUI(), this.initHeadImg(), this.initBeatBtn(), this.initcpGroup(), this.initPlanets(), 
            this.showChangeNumEffect();
        }, i.prototype.resetStatus = function() {
            var t = this;
            this.initUI(), this.initHeadImg(), this.initBeatBtn(), this.initcpGroup(), this.initPlanets(), 
            this.isMoving = !0, egret.Tween.get(this.islandGroup).to({
                horizontalCenter: 0
            }, Const.tweenTime1, egret.Ease.quadOut).call(function() {
                t.isMoving = !1, egret.Tween.removeTweens(t.islandGroup), hortor.WindowManager.isOpen(e.WindowType.WINDOW_ATTACK_LIST) || (hortor.WindowManager.currentWindow = e.WindowType.WINDOW_ATTACK_LIST);
                for (var i = 1; 6 > i; i++) uiModel.onShow(e.UINameType.attackItem + i, t["beatBtnGroup" + i]);
            });
        }, i.prototype.onData = function() {
            wheelModel.markAttacking = !1, e.TutorialManager.instance.newbieTutorialing || (wheelModel.markAttackTarget = util.deepClone(wheelModel.attackTarget)), 
            this.resetStatus(), this.showChangeNumEffect();
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.touchEvent = function(e) {
            if (!this.isMoving) {
                var t = e.target;
                if (t) switch (console.log("target.name ==>", t.name), t.name) {
                  case "beatBtn1":
                  case "beatBtn2":
                  case "beatBtn3":
                  case "beatBtn4":
                  case "beatBtn5":
                    if (wheelModel.markAttacking) return;
                    this.attackFunc(t.name);
                    break;

                  case "okBtn":
                    this.okBtnFunc();
                }
            }
        }, i.prototype.initUI = function() {
            this.islandGroup.horizontalCenter = 640, this.bottomGroup.bottom = -181, this.defineGroup.visible = !1;
        }, i.prototype.bindEvent = function() {
            this.addEventListener(egret.TouchEvent.TOUCH_TAP, this.touchEvent, this), hortor.NotificationManager.add(e.NotificationType.ISLAND_ATTACK_NEW_TARGET, this.changeTarget, this);
        }, i.prototype.initHeadImg = function() {
            this.headImgGroup1.scaleX = this.headImgGroup1.scaleY = .8, this.headImgGroup2.scaleX = this.headImgGroup2.scaleY = 1, 
            this.headImgGroup3.scaleX = this.headImgGroup3.scaleY = .9, this.headImgGroup4.scaleX = this.headImgGroup4.scaleY = .9, 
            this.headImgGroup5.scaleX = this.headImgGroup5.scaleY = .9;
            for (var e = 1; 6 > e; e++) this["headImgGroup" + e].alpha = .6;
        }, i.prototype.initBeatBtn = function() {
            for (var t = 1; 6 > t; t++) this["beatBtnGroup" + t].touchEnabled = !0, this["beatBtnGroup" + t].visible = !1, 
            this["beatBtnGroup" + t].scaleX = this["beatBtnGroup" + t].scaleY = 1, uiModel.onShow(e.UINameType.attackItem + t, this["beatBtnGroup" + t]);
        }, i.prototype.initcpGroup = function() {
            this.cpGroup.scaleX = this.cpGroup.scaleY = .1, this.cpGroup.visible = !1, this.cpLabel.text = "有我在，\n休想伤害我的CP！";
        }, i.prototype.initPlanets = function() {
            var t = this, i = islandModel.getIslandData(wheelModel.markAttackTarget);
            this.planet3.anchorOffsetY = islandModel.getBuilding3Height(i.island || i.islandId), 
            wheelModel.markAttackTarget.islandId >= playerModel.islandCount ? (this.allOverGroup.visible = !0, 
            this.buttonGroup.visible = !1) : (this.allOverGroup.visible = !1, this.buttonGroup.visible = !0);
            var n = islandModel.getIslandData(wheelModel.markAttackTarget).buildings || [ {
                level: 0,
                status: 0,
                isShield: !1
            }, {
                level: 0,
                status: 0,
                isShield: !1
            }, {
                level: 0,
                status: 0,
                isShield: !1
            }, {
                level: 0,
                status: 0,
                isShield: !1
            }, {
                level: 0,
                status: 0,
                isShield: !1
            } ], o = islandModel.getIslandData(wheelModel.markAttackTarget).islandId + 1;
            this.mainLand.source = e.ResourcePath.getIslandImage(o);
            for (var a = 0, r = function() {
                if (0 == n[l - 1].level) s["planet" + l].source = "", s["beatBtnGroup" + l].visible = !1; else if (s["planet" + l].source = e.ResourcePath.getIslandBuildings(o + "_" + l + "_" + n[l - 1].level + "_" + n[l - 1].status), 
                s.showBtn) s["beatBtnGroup" + l].visible = !0; else var i = egret.setTimeout(function(e) {
                    egret.clearTimeout(i), t["beatBtnGroup" + e].visible = !0;
                }, s, Const.moveTime3 + Const.moveTime1, l);
                var r = islandModel.getCityPoints(o);
                s["planet" + l].x = r[l - 1][0], s["planet" + l].y = r[l - 1][1] - 130, l > 2 && (s["gray" + l].visible = 2 == n[l - 1].status), 
                s["headImgGroup" + l].visible = !1, 1 == n[l - 1].status && 3 != l ? s["yanMC" + l] || (s["yanMC" + l] = hortor.ObjectPool.getObject(e.ArmaturePlayer, "paoeffects", "paoeffects"), 
                s["yanMC" + l].x = Const.BuildingAttackPosX[l - 1] - 20, s["yanMC" + l].y = Const.BuildingAttackPosY[l - 1] - 130, 
                s["yanMC" + l].scaleX = s["yanMC" + l].scaleY = 2, s["yanGroup" + l].addChild(s["yanMC" + l]), 
                s["yanMC" + l].play("smoke", 0)) : 2 == n[l - 1].status ? (s["yanMC" + l] && s["yanMC" + l].parent && (s["yanMC" + l].parent.removeChild(s["yanMC" + l]), 
                hortor.ObjectPool.disposeObject(s["yanMC" + l])), s["headImgGroup" + l].visible = 0 != n[l - 1].attackUid, 
                util.setRemoteAvatar(s["headImg" + l], n[l - 1].attackHeadImg, 96)) : s["yanMC" + l] && s["yanMC" + l].parent && (s["yanMC" + l].parent.removeChild(s["yanMC" + l]), 
                hortor.ObjectPool.disposeObject(s["yanMC" + l])), a += n[l - 1].level;
            }, s = this, l = 1; 6 > l; l++) r();
            0 == a ? this.emptyGroup.visible = !0 : this.emptyGroup.visible = !1;
        }, i.prototype.showAttack = function() {
            var t = this;
            hortor.NotificationManager.dispatch(e.NotificationType.ISLAND_ATTACK_SHOW_BUTTON), 
            uiModel.boater.boaterUp(function() {
                soundModel.playSound(e.SoundType.SOUND_ATTACK_AIM_AT_TARGET), uiModel.boater.setBtnEffect(e.WheelBtnType.Anniu_gun_up, t, !0);
            }), egret.Tween.get(this.betGroup).to({
                bottom: 141
            }, Const.tweenTime2, egret.Ease.quadInOut).call(function() {
                egret.Tween.removeTweens(t.betGroup);
            });
        }, i.prototype.hideAttack = function() {
            var t = this;
            hortor.NotificationManager.dispatch(e.NotificationType.ISLAND_ATTACK_HIDE_BUTTON), 
            uiModel.boater.boaterDown(function() {
                uiModel.boater.setBtnEffect(e.WheelBtnType.Anniu_gun_down, t, !0);
            }), egret.Tween.get(this.betGroup).to({
                bottom: -80
            }, Const.tweenTime2, egret.Ease.quadInOut).call(function() {
                egret.Tween.removeTweens(t.betGroup);
            });
        }, i.prototype.attackFunc = function(e) {
            soundModel.buttonOpen();
            for (var t = e.substr(e.length - 1, 1), i = parseInt(t), n = 1; 6 > n; n++) this["beatBtnGroup" + n].touchEnabled = !1;
            wheelModel.markAttacking = !0, this.paoDisappear(i);
        }, i.prototype.paoDisappear = function(t) {
            var i = this, n = t, o = 0;
            this.playBoomPaoMc(t);
            for (var a = 0; 5 > a; a++) egret.Tween.get(this["beatBtnGroup" + (n > 5 ? n - 5 : n)]).wait(200 * o).to({
                scaleX: 0,
                scaleY: 0
            }, 400).call(function() {
                egret.Tween.removeTweens(i["beatBtnGroup" + (n > 5 ? n - 5 : n)]);
            }), n++, this["beatBtnGroup" + (n > 5 ? n - 5 : n)].visible && o++;
            var r = null;
            e.TutorialManager.instance.newbieTutorialing ? (r = 6 == playerModel.tutorial ? {
                money: 337e3,
                isShielded: !1,
                isWanted: !1,
                reward: 3e5
            } : {
                money: 429e3,
                isShielded: !0,
                isWanted: !1,
                reward: 1e5
            }, this.showDescText(r, t), this.adjustBoater(r, t)) : this.sendAttackPost(t);
        }, i.prototype.playBoomPaoMc = function(t) {
            this["beatBtnGroup" + t].visible = !1;
            var i = new e.MoviePlayer("boomPao");
            i.x = this["beatBtnGroup" + t].x, i.y = this["beatBtnGroup" + t].y, this.buttonGroup.addChild(i), 
            i.play(1, function() {
                console.log("movie===>"), i.parent.removeChild(i), i.dispose();
            }, this);
        }, i.prototype.sendAttackPost = function(t) {
            var i = this;
            HttpService.post(e.ServerMsg.ATTACK, {
                uid: playerModel.uid,
                puid: wheelModel.markAttackTarget.uid,
                building: t - 1
            }, function(n) {
                hortor.NotificationManager.dispatch(e.NotificationType.ISLAND_ATTACK_HIDE_TIPS), 
                hortor.NotificationManager.dispatch(e.NotificationType.ISLAND_ATTACK_HIDETOP), EventCenter.sendEvent(EventConst.AdjustDAPAO), 
                playerModel.update(n), i.showData(n, t);
            });
        }, i.prototype.showData = function(t, i) {
            if (wheelModel.markAttackTarget) {
                var n = wheelModel.markAttackTarget.buildings[i - 1];
                1 != n.status || t.isShielded || t.isMiniShielded || t.isBear || guildModel.addGuildTaskValue(e.GuildProxy.attackDestroyed, 1);
            }
            wheelModel.attackTarget = t.attackTarget, guildModel.addGuildTaskValue(e.GuildProxy.attack, 1), 
            playerModel.betCount = t.betCount, this.showChangeNumEffect(), this.showDescText(t, i), 
            this.adjustBoater(t, i);
        }, i.prototype.showChangeNumEffect = function() {
            var e = this, t = egret.Tween.get(this.betImg);
            t.to({
                scaleX: 2,
                scaleY: 2
            }, 200, egret.Ease.quadOut).to({
                scaleX: 1,
                scaleY: 1
            }, 100).call(function() {
                egret.Tween.removeTweens(e.betImg);
            });
            var i = playerModel.betCount > 0 ? playerModel.betCount : 1;
            this.betImg.source = "wheel_img_number" + i, this.betGroup.visible = playerModel.betCount > 0;
        }, i.prototype.showDescText = function(t, i) {
            var n = this.descLabel, o = 2064075, a = 16703545, r = 14837277, s = {
                textColor: o,
                size: 24,
                bold: !0
            }, l = {
                textColor: a,
                stroke: 2,
                strokeColor: r,
                size: 36
            };
            n.textFlow = [];
            var d = "";
            t.isWanted && (t.reward -= 3e5), t.isSeal && (t.reward -= 1e5), d = t.isShielded ? "攻击被防御了！" : t.isBear ? "攻击被宠物抵挡了！" : t.isMiniShielded ? "攻击被迷你盾抵挡了！" : t.isEnergyShielded ? "攻击被互助盾抵挡了！" : t.isCPShielded ? "攻击被TA的CP抵挡了！" : 1 == wheelModel.markAttackTarget.buildings[i - 1].status ? "摧毁了TA的" + Const.BuildingName[i - 1] + "！" : "损坏了TA的" + Const.BuildingName[i - 1] + "！", 
            n.textFlow.push({
                text: d + "\n",
                style: s
            }), n.textFlow.push({
                text: "获得了",
                style: {
                    textColor: o,
                    size: 32,
                    bold: !0
                }
            }), n.textFlow.push({
                text: "￥" + e.ComFunc.toThousands(t.reward),
                style: l
            }), t.isSeal && (n.textFlow.push({
                text: "\n宠物获得：",
                style: s
            }), n.textFlow.push({
                text: "￥100,000",
                style: l
            })), t.isWanted && (n.textFlow.push({
                text: "\n通缉奖励：",
                style: s
            }), n.textFlow.push({
                text: "￥300,000",
                style: l
            }));
        }, i.prototype.changeTarget = function() {
            var e = this;
            this.isMoving = !0, egret.Tween.get(this.islandGroup).to({
                horizontalCenter: -640
            }, Const.moveTime1, egret.Ease.quadIn).call(function() {
                e.isMoving = !1, egret.Tween.removeTweens(e.islandGroup), e.resetStatus();
            });
        }, i.prototype.adjustBoater = function(t, i) {
            var n = this;
            soundModel.playSound(e.SoundType.SOUND_ATTACK_AIM_AT_TARGET);
            var o = 0, a = "gun_send";
            switch (i) {
              case 1:
                o = 0, a = "gun_send";
                break;

              case 2:
                o = 20, a = "gun_rotation_20break";
                break;

              case 3:
                o = -10, a = "gun_rotation_-10break";
                break;

              case 4:
                o = -6, a = "gun_rotation_-6break";
                break;

              case 5:
                o = 11, a = "gun_rotation_11break";
            }
            console.log("arName = " + a), uiModel.boater.setBtnEffect(a, this, !0), soundModel.playSound(e.SoundType.SOUND_WHEEL_ATTACK_PREPARE);
            var r = 1 == i ? 100 : 500, s = egret.setTimeout(function() {
                egret.clearTimeout(s), n.AdjustBoaterOver(t, i, o);
            }, this, r);
        }, i.prototype.AdjustBoaterOver = function(t, i, n) {
            var o = this, a = e.GameConfig.stageHeight - 1039, r = egret.setTimeout(function() {
                soundModel.playSound(e.SoundType.SOUND_CANNON_SHOOT), egret.clearTimeout(r);
            }, this, 500), s = wheelModel.markAttackTarget.island || wheelModel.markAttackTarget.islandId;
            if (3 == i) var l = islandModel.getCityPoints(s + 1), d = islandModel.getBuilding3Height(s), u = l[2][0] + d / 2, h = l[2][1] - d / 2; else var u = Const.BuildingAttackPosX[i - 1], h = Const.BuildingAttackPosY[i - 1];
            var c = hortor.ObjectPool.getObject(e.ArmaturePlayer, "sight", "sight");
            c.x = u, c.y = h - 130, this.islandGroup.addChild(c), c.play("sight", 1, function() {
                c && c.parent && (c.parent.removeChild(c), hortor.ObjectPool.disposeObject(c));
            });
            var p = egret.setTimeout(function() {
                egret.clearTimeout(p), soundModel.playSound(e.SoundType.SOUND_BOMB_FLYING);
                var r = hortor.ObjectPool.getObject(e.ArmaturePlayer, "paodan", "paodan");
                if (r.x = Const.BOOMPosX[i - 1] + 56, r.y = Const.BOOMPosY[i - 1] + a + 56 - 140 + .5 * (hortor.StageManager.stageHeight - 1039), 
                r.anchorOffsetX = 56, r.anchorOffsetY = 56, r.rotation = n, r.play("paodan", 0), 
                o.boomGroup.addChild(r), 3 == i || 4 == i) var s = -1; else var s = 1;
                egret.Tween.get(r).to({
                    x: u + Const.boonm_fixX[i - 1] * s,
                    y: h - 350,
                    scaleX: .6,
                    scaleY: .6
                }, 500, egret.Ease.sineOut).to({
                    x: u,
                    y: h - 130,
                    scaleX: .4,
                    scaleY: .4
                }, 400, egret.Ease.sineIn).call(function() {
                    if (t.isShielded || t.isBear || t.isMiniShielded || t.isEnergyShielded || t.isCPShielded) soundModel.playSound(e.SoundType.SOUND_CANNON_HIT_SHEILD), 
                    t.isCPShielded && (util.setRemoteAvatar(o.headImg, t.cpInfo.headImg), o.headBoder.source = 1 == t.cpInfo.gender ? "common_json.common_img_tz1_1" : "common_json.common_img_tz1_0", 
                    o.crownsLabel.text = t.cpInfo.crowns, o.cpGroup.visible = !0, egret.Tween.get(o.cpGroup).to({
                        scaleX: 1,
                        scaleY: 1
                    }, Const.moveTime2, egret.Ease.bounceOut).wait(400).call(function() {
                        egret.Tween.removeTweens(o.cpGroup);
                    })), o.defineGroup.visible = !0, o.playGoldEffect(15, u, h - 60), o.paImg.x = Const.BuildingAttackPosX[i - 1], 
                    o.paImg.y = Const.BuildingAttackPosY[i - 1] - 130, o.defineImg.source = t.isEnergyShielded ? "shieldShare_shield_png" : t.isCPShielded ? "define_cp_png" : "define_png", 
                    t.isBear ? o.petShield(t) : t.isMiniShielded ? o.shield(t) : t.isEnergyShielded || (t.isCPShielded ? o.showShieldAction(t, "wheel_img_zjm30", 1) : o.shield(t)), 
                    egret.Tween.removeTweens(r), egret.Tween.get(r).to({
                        x: Const.BOOMFlipPosX[i - 1],
                        y: Const.BOOMFlipPosY[i - 1],
                        scaleX: .4,
                        scaleY: .4
                    }, 500).call(function() {
                        egret.Tween.removeTweens(r), r && r.parent && (r.parent.removeChild(r), hortor.ObjectPool.disposeObject(r));
                    }), egret.Tween.get(o.defineImg).to({
                        scaleX: .95,
                        scaleY: .95
                    }, 150).to({
                        scaleX: 1,
                        scaleY: 1
                    }, 150).call(function() {
                        egret.Tween.removeTweens(o.defineImg);
                    }), egret.Tween.get(o.paImg).to({
                        alpha: 0
                    }, 300).call(function() {
                        egret.Tween.removeTweens(o.paImg);
                    }); else {
                        egret.Tween.removeTweens(r), r && r.parent && (r.parent.removeChild(r), hortor.ObjectPool.disposeObject(r)), 
                        soundModel.playSound(e.SoundType.SOUND_BOMB_EXPLODE);
                        var n = wheelModel.markAttackTarget.buildings[i - 1];
                        if (n.status++, 2 == n.status) {
                            var a = hortor.ObjectPool.getObject(e.ArmaturePlayer, "boom", "boom");
                            a.scaleX = a.scaleY = 1, a.x = Const.BuildingAttackPosX[i - 1], a.y = Const.BuildingAttackPosY[i - 1] - 100;
                        } else {
                            var a = hortor.ObjectPool.getObject(e.ArmaturePlayer, "paoeffects", "paoeffects");
                            a.scaleX = a.scaleY = 2, a.x = Const.BuildingAttackPosX[i - 1], a.y = Const.BuildingAttackPosY[i - 1] - 140;
                        }
                        o.boomGroup.addChild(a), a.play("boom", 1, function() {
                            a && a.parent && (a.parent.removeChild(a), hortor.ObjectPool.disposeObject(a));
                        }, o), o.playGoldEffect(20, u, h - 60), 2 == n.status && (n.level = 0, n.attackUid = playerModel.uid, 
                        n.attackHeadImg = playerModel.headImg), o.initPlanets(), o.bottomGroupUp(t);
                    }
                });
            }, this, 500);
        }, i.prototype.showShieldAction = function(t, i, n) {
            var o = this, a = this;
            RES.getResAsync(i, function(i, r) {
                o.skillImg = new egret.Bitmap(), o.skillImg.texture = i, o.islandGroup.addChild(o.skillImg), 
                o.skillImg.x = .5 * e.GameConfig.stageWidth, o.skillImg.y = 150, o.skillImg.anchorOffsetX = .5 * o.skillImg.width, 
                o.skillImg.anchorOffsetY = .5 * o.skillImg.height, o.skillImg.scaleX = o.skillImg.scaleY = .05, 
                egret.Tween.get(o.skillImg).to({
                    scaleX: n,
                    scaleY: n
                }, Const.moveTime2, egret.Ease.bounceOut).call(function() {
                    egret.Tween.removeTweens(o.skillImg), t && t.isBear ? a.bottomGroupUp(t) : egret.Tween.get(o.skillImg).to({
                        alpha: 0
                    }, 500).call(function() {
                        egret.Tween.removeTweens(o.skillImg), o.skillImg.parent.removeChild(o.skillImg), 
                        t && a.bottomGroupUp(t);
                    });
                });
            }, this);
        }, i.prototype.bottomGroupUp = function(t) {
            var i = this;
            return t.isSeal ? void this.petSeal(t) : (this.hideAttack(), void egret.Tween.get(this.bottomGroup).wait(Const.moveTime2).to({
                bottom: 20
            }, Const.moveTime2, egret.Ease.quadOut).call(function() {
                egret.Tween.removeTweens(i.bottomGroup), uiModel.onShow(e.UINameType.attackTipOkBtn, i.okBtn);
            }));
        }, i.prototype.bottomGroupDown = function() {
            var t = this;
            uiModel.onHide(e.UINameType.attackTipOkBtn), egret.Tween.get(this.bottomGroup).to({
                bottom: -181
            }, Const.moveTime2, egret.Ease.quadIn).call(function() {
                egret.Tween.removeTweens(t.bottomGroup), playerModel.betCount < 1 && (hortor.WindowManager.hideWindow(e.WindowType.WINDOW_ATTACK_LIST), 
                hortor.NotificationManager.dispatch(e.NotificationType.BG_CLOUD_BACK), t.isMoving = !0, 
                egret.Tween.get(t.islandGroup).to({
                    horizontalCenter: 640
                }, Const.moveTime1, egret.Ease.quadIn).call(function() {
                    t.isMoving = !1, hortor.WindowManager.hideWindow(e.WindowType.WINDOW_ATTACK_ISLAND), 
                    hortor.NotificationManager.dispatch(e.NotificationType.ISLAND_ATTACK_TO_WHEEL);
                }));
            });
        }, i.prototype.okBtnFunc = function() {
            var t = this;
            wheelModel.markAttacking = !1, this.bottomGroupDown();
            for (var i = 1; 6 > i; i++) uiModel.onHide(e.UINameType.attackItem + i);
            playerModel.betCount > 0 && (hortor.NotificationManager.dispatch(e.NotificationType.BG_CLOUD_GO), 
            this.isMoving = !0, egret.Tween.get(this.islandGroup).to({
                horizontalCenter: -640
            }, Const.moveTime1, egret.Ease.quadIn).call(function() {
                t.isMoving = !1, egret.Tween.removeTweens(t.islandGroup), e.TutorialManager.instance.newbieTutorialing || (wheelModel.markAttackTarget = util.deepClone(wheelModel.attackTarget)), 
                hortor.NotificationManager.dispatch(e.NotificationType.ISLAND_ATTACK_SHOWTOP), hortor.NotificationManager.dispatch(e.NotificationType.ISLAND_ATTACK_INITPLAYER), 
                t.resetStatus(), t.showAttack();
            }));
        }, i.prototype.playGoldEffect = function(t, i, n) {
            if (this && this.islandGroup) for (var o = this.islandGroup, a = function(t) {
                var a = _.random(1, 2), r = "jingbi3_" + a, s = hortor.ObjectPool.getObject(e.MoviePlayer, r, r);
                o.addChild(s), s.y = _.random(n - 5, n + 5), s.x = _.random(i - 5, i + 5), s.play(-1), 
                util.setScale(s, .4);
                var l = _.random(i - 80, i + 80), d = l > i ? _.random(l, l + 30) : _.random(l, l - 30), u = _.random(n - 70, n - 180), h = _.random(n + 80, n + 150), c = Math.random() < .5 ? .4 : .7, p = Math.random() < .5 ? .4 : .7, g = _.random(300, 500), m = _.random(500, 700), f = egret.Tween.get(s);
                f.to({
                    x: l,
                    y: u,
                    scaleX: c,
                    scaleY: c,
                    rotation: _.random(0, 150)
                }, g, egret.Ease.sineOut).to({
                    x: d,
                    y: h,
                    scaleX: p,
                    scaleY: p,
                    rotation: _.random(0, 150)
                }, m, egret.Ease.quadIn).call(function() {
                    egret.Tween.removeTweens(s), s.parent.removeChild(s), hortor.ObjectPool.disposeObject(s);
                });
            }, r = 0; t > r; r++) a(r);
        }, i.prototype.petShield = function(t) {
            var i = this, n = hortor.ObjectPool.getObject(e.ArmaturePlayer, "tiaodai", "tiaodai");
            n.x = 320, n.y = 400, this.islandGroup.addChild(n), n.play("caizhong", 1);
            var o = hortor.ObjectPool.getObject(e.ArmaturePlayer, "pet_bear", "pet_bear");
            o.x = 320, o.y = 610, this.islandGroup.addChild(o), soundModel.playSound(e.SoundType.getPetSound("bear", "skill")), 
            o.play(Const.pet_Skill, 0, function() {
                o && o.parent && (o.parent.removeChild(o), hortor.ObjectPool.disposeObject(o)), 
                n && n.parent && (n.parent.removeChild(n), hortor.ObjectPool.disposeObject(n)), 
                i.bottomGroupUp(t);
            });
        }, i.prototype.petSeal = function(t) {
            var i = this, n = hortor.ObjectPool.getObject(e.ArmaturePlayer, "tiaodai", "tiaodai");
            n.x = 320, n.y = 400, this.islandGroup.addChild(n), n.play("caizhong", 1);
            var o = hortor.ObjectPool.getObject(e.ArmaturePlayer, "pet_seal", "pet_seal");
            o.x = 320, o.y = 610, this.islandGroup.addChild(o), soundModel.playSound(e.SoundType.getPetSound("seal", "skill")), 
            o.play(Const.pet_Skill, 0, function() {
                o && o.parent && (o.parent.removeChild(o), hortor.ObjectPool.disposeObject(o)), 
                n && n.parent && (n.parent.removeChild(n), hortor.ObjectPool.disposeObject(n)), 
                t.isSeal = !1, i.bottomGroupUp(t);
            });
        }, i.prototype.shield = function(t) {
            var i = this, n = hortor.ObjectPool.getObject(e.ArmaturePlayer, "ruin", "ruin");
            n.x = 320, n.y = 150, this.islandGroup.addChild(n), soundModel.playSound(e.SoundType.SOUND_CANNON_SHEILD_CRASH), 
            t.isMiniShielded ? n.play("mini_ruin", 1, function() {
                n && n.parent && (n.parent.removeChild(n), hortor.ObjectPool.disposeObject(n)), 
                i.bottomGroupUp(t);
            }) : n.play("ruin", 1, function() {
                n && n.parent && (n.parent.removeChild(n), hortor.ObjectPool.disposeObject(n)), 
                i.bottomGroupUp(t);
            });
        }, i;
    }(hortor.Window);
    e.AttackIslandWindow = t, __reflect(t.prototype, "game.AttackIslandWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.skinPath = "attack/AttackListItemSkin", e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            console.log("this.itemIndex = " + this.itemIndex), this.attackBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.okBtnFunc, this), 
            this.emptyBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.okBtnFunc, this), 
            this.randomBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.okBtnFunc, this);
        }, i.prototype.onData = function() {
            if (this.data && this.data.data) {
                var t = this.attackData = this.data.data;
                this.invalidateState(), uiModel.onShow(e.UINameType.attackItemBtn + this.itemIndex, this.attackBtn), 
                util.setRemoteAvatar(this.headImg, t.headImg, 96), this.headMask.source = 1 == t.gender ? "common_json.common_img_tz1_1" : "common_json.common_img_tz1_0", 
                this.crownsLabel.text = "" + t.crowns, this.nameLabel.text = "" + util.strSub(t.name, 10), 
                this.nameLabel.textColor = 1 == t.gender ? Const.genderCorlor1 : Const.genderCorlor2, 
                this.descLabel.text = "" + t.desc, this.attackLabel.text = "" + (t.attackCount || 0), 
                this.randomBtn.visible = t.uid == (wheelModel.attackTarget ? wheelModel.attackTarget.uid || 0 : 0), 
                this.emptyBtn.visible = t.isEmpty, this.attackBtn.visible = 0 != t.uid && !t.isEmpty, 
                this.wantedMoney.visible = t.isWanted;
            }
        }, i.prototype.getCurrentState = function() {
            return -1 == this.attackData.rank ? "cut" : "node";
        }, i.prototype.okBtnFunc = function() {
            var t = this;
            if (12 == playerModel.tutorial) {
                var i = {
                    island: 0,
                    buildings: [ {
                        level: 4,
                        status: 0
                    }, {
                        level: 5,
                        status: 0
                    }, {
                        level: 5,
                        status: 0
                    }, {
                        level: 4,
                        status: 0
                    }, {
                        level: 5,
                        status: 0
                    } ],
                    crowns: 20
                };
                wheelModel.markAttackTarget = new e.AttackTarget({
                    uid: this.attackData.uid,
                    name: this.attackData.name,
                    headImg: this.attackData.headImg,
                    crowns: i.crowns,
                    islandId: i.island,
                    buildings: i.buildings
                }), hortor.NotificationManager.dispatch(e.NotificationType.ISLAND_ATTACK_NEW_TARGET);
            } else {
                if (wheelModel.markAttackTarget.uid == this.attackData.uid) return void hortor.NotificationManager.dispatch(e.NotificationType.ISLAND_ATTACK_HIDELIST);
                0 == this.attackData.uid ? (wheelModel.markAttackTarget = util.deepClone(wheelModel.attackTarget), 
                hortor.NotificationManager.dispatch(e.NotificationType.ISLAND_ATTACK_NEW_TARGET)) : HttpService.get(e.ServerMsg.SHOW_ISLAND, {
                    uid: playerModel.uid,
                    fid: this.attackData.uid
                }, function(i) {
                    wheelModel.markAttackTarget.gender = t.attackData.gender, wheelModel.markAttackTarget.signature = t.attackData.signature, 
                    wheelModel.markAttackTarget.uid = t.attackData.uid, wheelModel.markAttackTarget.headImg = t.attackData.headImg, 
                    wheelModel.markAttackTarget.name = t.attackData.name, wheelModel.markAttackTarget.crowns = t.attackData.crowns, 
                    wheelModel.markAttackTarget.island = i.island, wheelModel.markAttackTarget.islandId = i.island, 
                    wheelModel.markAttackTarget.buildings = i.buildings, hortor.NotificationManager.dispatch(e.NotificationType.ISLAND_ATTACK_NEW_TARGET);
                });
            }
        }, i;
    }(e.ItemRenderBase);
    e.AttackListItem = t, __reflect(t.prototype, "game.AttackListItem");
}(game || (game = {})), window.AttackListItem = game.AttackListItem;

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.baseData = new eui.ArrayCollection(), e.tabName = "hate", e.effect = null, 
            e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.resetStatus(), this.baseScroll.viewport = this.baseList, this.baseData = new eui.ArrayCollection(), 
            this.baseList.dataProvider = this.baseData, this.baseList.itemRenderer = e.AttackListItem, 
            this.addEventListener(egret.TouchEvent.TOUCH_TAP, this.touchFunc, this), hortor.NotificationManager.add(e.NotificationType.ISLAND_ATTACK_NEW_TARGET, this.changeTarget, this), 
            hortor.NotificationManager.add(e.NotificationType.ISLAND_ATTACK_HIDE_BUTTON, this.hideButton, this), 
            hortor.NotificationManager.add(e.NotificationType.ISLAND_ATTACK_SHOW_BUTTON, this.showButton, this), 
            hortor.NotificationManager.add(e.NotificationType.ISLAND_ATTACK_HIDELIST, this.hideList, this), 
            hortor.NotificationManager.add(e.NotificationType.ISLAND_ATTACK_INITPLAYER, this.initPlayerInfo, this), 
            hortor.NotificationManager.add(e.NotificationType.ISLAND_ATTACK_SHOWTOP, this.showTop, this), 
            hortor.NotificationManager.add(e.NotificationType.ISLAND_ATTACK_HIDETOP, this.hideTop, this), 
            hortor.NotificationManager.add(e.NotificationType.ISLAND_ATTACK_HIDE_TIPS, this.hideTips, this), 
            this.setNotchFit(this.topGroup), this.setNotchFit(this.listGroup);
        }, i.prototype.resetStatus = function() {
            this.initUI(), this.hideTips();
        }, i.prototype.onOpen = function() {
            this.resetStatus(), this.showTop(), this.showButton();
        }, i.prototype.onData = function() {
            for (var e = this.data, t = this.listGroup.x < 0, i = [], n = 0; n < e.length; n++) {
                var o = e[n];
                i.push({
                    effect: t,
                    data: o
                });
            }
            this.baseData.source = i, this.baseData.refresh(), this.initTabButton(), this.initPlayerInfo();
        }, i.prototype.prepare = function(t, i) {
            var n = this;
            HttpService.get(e.ServerMsg.VENGEANCE_RANK, {
                uid: playerModel.uid
            }, function(e) {
                n.tabName = "hate";
                var i = n.dealVengeanceData(e);
                t(i);
            }, i);
        }, i.prototype.initUI = function() {
            this.topGroup.x = -598, this.listGroup.x = -640, this.buttonGroup.x = -97, this.maskImg.visible = !1, 
            this.hateMask.visible = !1, this.friendBtn.visible = !1;
        }, i.prototype.getFriendData = function(t) {
            var i = this;
            HttpService.get(e.ServerMsg.FRIEND_RANK, {
                uid: playerModel.uid,
                needFoF: !0
            }, function(e) {
                i.tabName = "friend", i.data = i.dealFriendData(e), t && t();
            });
        }, i.prototype.getVengeanceData = function(t) {
            var i = this;
            HttpService.get(e.ServerMsg.VENGEANCE_RANK, {
                uid: playerModel.uid
            }, function(e) {
                i.tabName = "hate", i.data = i.dealVengeanceData(e), t && t();
            });
        }, i.prototype.touchFunc = function(e) {
            if (!wheelModel.markAttacking && e.target) {
                var t = e.target.name;
                switch (console.log("touchName ==>", t), t) {
                  case "friendGroup":
                    this.getFriendData(this.showList.bind(this)), soundModel.buttonOpen();
                    break;

                  case "hateGroup":
                    this.getVengeanceData(this.showList.bind(this)), soundModel.buttonOpen();
                    break;

                  case "friendBtn":
                    this.getFriendData(), soundModel.buttonOpen();
                    break;

                  case "hateBtn":
                    this.getVengeanceData(), soundModel.buttonOpen();
                    break;

                  case "maskImg":
                    this.hideList(), soundModel.buttonClose();
                }
            }
        }, i.prototype.showList = function() {
            var e = this;
            this.maskImg.visible = !0, egret.Tween.get(this.listGroup).to({
                x: 0
            }, Const.tweenTime2, egret.Ease.quadInOut).call(function() {
                egret.Tween.removeTweens(e.listGroup);
            });
        }, i.prototype.hideList = function() {
            var e = this;
            this.maskImg.visible = !1, egret.Tween.get(this.listGroup).to({
                x: -640
            }, Const.tweenTime2, egret.Ease.quadInOut).call(function() {
                egret.Tween.removeTweens(e.listGroup);
            });
        }, i.prototype.initTabButton = function() {
            "hate" == this.tabName ? (this.hateMask.visible = !1, this.hateBtn.visible = !0, 
            this.friendMask.visible = !0, this.friendBtn.visible = !1) : (this.hateMask.visible = !0, 
            this.hateBtn.visible = !1, this.friendMask.visible = !1, this.friendBtn.visible = !0);
        }, i.prototype.initPlayerInfo = function() {
            util.setRemoteAvatar(this.headImg, wheelModel.markAttackTarget.headImg, 96), this.headMask.source = 1 == wheelModel.markAttackTarget.gender ? "common_img_portrait1" : "common_img_portrait0", 
            this.crownsLabel.text = "" + wheelModel.markAttackTarget.crowns, this.nameLabel.text = "" + wheelModel.markAttackTarget.name, 
            this.tipsLabel.text = "" + (wheelModel.markAttackTarget.signature || "能打中了算我输");
        }, i.prototype.dealFriendData = function(e) {
            for (var t = [], i = e.friends, n = e.fofs, o = 0; o < i.length; o++) if (i[o].uid != playerModel.uid) {
                var a = {
                    uid: i[o].uid,
                    rank: o + 1,
                    crowns: i[o].crowns,
                    name: i[o].name,
                    headImg: i[o].headImg,
                    isFriend: !0,
                    attackCount: i[o].attackCount || 0,
                    desc: i[o].signature || "",
                    isEmpty: i[o].isEmpty,
                    gender: i[o].gender
                };
                t.push(a);
            }
            for (var r = !1, o = 0; o < n.length; o++) if (n[o].uid != playerModel.uid) {
                if (!r) {
                    var s = {
                        uid: n[o].uid,
                        rank: -1,
                        crowns: n[o].crowns,
                        name: n[o].name,
                        headImg: n[o].headImg,
                        isFriend: !0,
                        attackCount: n[o].attackCount || 0,
                        desc: n[o].friendName + "的好友"
                    };
                    t.push(s), r = !0;
                }
                var l = {
                    uid: n[o].uid,
                    rank: o + 1,
                    crowns: n[o].crowns,
                    name: n[o].name,
                    headImg: n[o].headImg,
                    isFriend: !0,
                    attackCount: n[o].attackCount || 0,
                    desc: n[o].friendName + "的好友",
                    isEmpty: n[o].isEmpty,
                    gender: n[o].gender
                };
                t.push(l);
            }
            return t;
        }, i.prototype.dealVengeanceData = function(e) {
            var t = [], i = util.deepClone(wheelModel.attackTarget);
            12 == playerModel.tutorial && (i = util.deepClone(wheelModel.markAttackTarget), 
            e = {
                Wanteds: [],
                Enemies: [ {
                    uid: 9,
                    name: Robot.robot1.name,
                    headImg: Robot.robot1.headImg,
                    crowns: 20,
                    attackCount: 1,
                    stealMoney: 0,
                    signature: "生死看淡，不服就干",
                    friendName: ""
                } ]
            });
            var n = {
                uid: i.uid,
                crowns: i.crowns,
                name: i.name,
                headImg: i.headImg,
                attackCount: 0,
                stealMoney: 0,
                desc: i.signature || "",
                isRandom: !0
            };
            t.push(n);
            for (var o = e.Wanteds, a = e.Enemies, r = 0; r < o.length; r++) if (o[r].uid != i.uid) {
                var s = "此人正在被通缉！", l = {
                    uid: o[r].uid,
                    crowns: o[r].crowns,
                    name: o[r].name,
                    headImg: o[r].headImg,
                    gender: o[r].gender,
                    desc: s,
                    isWanted: !0,
                    isEmpty: o[r].isEmpty
                };
                t.push(l);
            } else t[0].desc = "此人正在被通缉！";
            for (var r = 0; r < a.length; r++) if (a[r].uid != i.uid) {
                for (var d = !1, u = 0; u < o.length; u++) if (a[r].uid == o[u].uid) {
                    d = !0;
                    break;
                }
                if (!d) {
                    if (a[r].stealMoney > 0) var s = "偷取了你" + a[r].stealMoney + "金币!"; else var s = "此人攻击过你!";
                    var h = {
                        uid: a[r].uid,
                        crowns: a[r].crowns,
                        name: a[r].name,
                        headImg: a[r].headImg,
                        attackCount: a[r].attackCount,
                        stealMoney: a[r].stealMoney,
                        desc: "" != a[r].friendName ? a[r].friendName + "的好友" : s,
                        isEmpty: a[r].isEmpty,
                        gender: a[r].gender
                    };
                    12 == playerModel.tutorial && (h.desc = "刚刚攻击了你"), t.push(h);
                }
            }
            for (var c = [], p = [], r = 0; r < t.length; r++) t[r].isEmpty ? c.push(t[r]) : p.push(t[r]);
            return t = p.concat(c);
        }, i.prototype.changeTarget = function() {
            var e = this;
            this.initPlayerInfo(), this.hideList(), this.hideTips();
            var t = egret.setTimeout(function() {
                egret.clearTimeout(t), e.showTips();
            }, this, Const.moveTime1);
        }, i.prototype.showButton = function() {
            var t = this;
            egret.Tween.get(this.buttonGroup).to({
                x: 0
            }, Const.tweenTime2, egret.Ease.quadInOut).call(function() {
                egret.Tween.removeTweens(t.buttonGroup), uiModel.onShow(e.UINameType.attackHateBtn, t.hateGroup), 
                uiModel.onShow(e.UINameType.attackFriendBtn, t.friendGroup);
            });
        }, i.prototype.hideButton = function() {
            var t = this;
            uiModel.onHide(e.UINameType.attackHateBtn), uiModel.onHide(e.UINameType.attackFriendBtn), 
            egret.Tween.get(this.buttonGroup).to({
                x: -97
            }, Const.tweenTime2, egret.Ease.quadInOut).call(function() {
                egret.Tween.removeTweens(t.buttonGroup);
            });
        }, i.prototype.showTips = function() {
            var e = this;
            egret.Tween.get(this.tipsGroup).to({
                scaleX: 1,
                scaleY: 1
            }, 200).call(function() {
                egret.Tween.removeTweens(e.tipsGroup);
            });
        }, i.prototype.hideTips = function() {
            var e = this;
            egret.Tween.get(this.tipsGroup).to({
                scaleX: 0,
                scaleY: 0
            }, 200).call(function() {
                egret.Tween.removeTweens(e.tipsGroup);
            });
        }, i.prototype.showTop = function() {
            var e = this;
            egret.Tween.get(this.topGroup).to({
                x: 0
            }, Const.tweenTime2, egret.Ease.quadInOut).call(function() {
                egret.Tween.removeTweens(e.topGroup), e.showTips();
            });
        }, i.prototype.hideTop = function() {
            var e = this;
            egret.Tween.get(this.topGroup).to({
                x: -598
            }, Const.tweenTime2, egret.Ease.quadInOut).call(function() {
                egret.Tween.removeTweens(e.topGroup);
            });
        }, i;
    }(hortor.Window);
    e.AttackListWindow = t, __reflect(t.prototype, "game.AttackListWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var i = t.call(this, !1) || this;
            return i.time = 0, i.lastValue = 0, i.lastValue2 = 0, i.speedX = .4, i.load(e.ResourcePath.getSkinRes("background/BackgroundSkin")), 
            i;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            egret.startTick(this.tickUpdate, this), this.playWindmillTween(), hortor.NotificationManager.add(e.NotificationType.BG_ADJUST, this.adjustBgPos, this), 
            hortor.NotificationManager.add(e.NotificationType.BG_ADJUST_V, this.adjustBgPosV, this), 
            hortor.NotificationManager.add(e.NotificationType.BG_CLOUD_GO, this.CloudGOFunc, this), 
            hortor.NotificationManager.add(e.NotificationType.BG_CLOUD_BACK, this.CloudBACKFunc, this);
        }, i.prototype.onOpen = function() {}, i.prototype.onData = function() {}, i.prototype.playWindmillTween = function() {
            var e = egret.Tween.get(this.windmill, {
                loop: !0
            });
            e.to({
                rotation: 360
            }, 3e4);
        }, i.prototype.tickUpdate = function(e) {
            var t = e, i = this.time, n = (t - i) / 1e3;
            return this.timerFunc(n), this.time = t, !1;
        }, i.prototype.timerFunc = function(e) {
            e = e || 1, this.cloud0.x -= this.speedX, this.cloud1.x -= this.speedX, this.adjustPos();
        }, i.prototype.adjustPos = function() {
            this.cloud0.x < -this.cloud0.width - this.mainGroup.horizontalCenter && (this.cloud0.x = 640 - this.mainGroup.horizontalCenter), 
            this.cloud1.x < -this.cloud1.width - this.mainGroup.horizontalCenter && (this.cloud1.x = 640 - this.mainGroup.horizontalCenter + Math.floor(_.random(50, 100))), 
            this.windmill.x < -this.windmill.width - this.mainGroup.horizontalCenter && (this.windmill.x = 640 - this.mainGroup.horizontalCenter), 
            this.windmill.x > 640 - this.mainGroup.horizontalCenter && (this.windmill.x = -this.windmill.width - this.mainGroup.horizontalCenter), 
            this.islandImg.x < -this.islandImg.width - this.mainGroup.horizontalCenter && (this.islandImg.x = 640 - this.mainGroup.horizontalCenter), 
            this.islandImg.x > 640 - this.mainGroup.horizontalCenter && (this.islandImg.x = -this.islandImg.width - this.mainGroup.horizontalCenter);
        }, i.prototype.adjustBgPos = function(e) {
            var t = this, i = e.isUp ? -356 : 0, n = e.isUp ? -185 : 0, o = e.isUp ? 0 : 1, a = e.reset ? 0 : Const.tweenTime1;
            egret.Tween.get(this.mainGroup).to({
                horizontalCenter: i,
                verticalCenter: n
            }, a, egret.Ease.quadInOut).call(function() {
                egret.Tween.removeTweens(t.mainGroup);
            }), egret.Tween.get(this.bg1).to({
                alpha: o
            }, a, egret.Ease.quadInOut).call(function() {
                egret.Tween.removeTweens(t.bg1);
            }), egret.Tween.get(this.bg2).to({
                alpha: o
            }, a, egret.Ease.quadInOut).call(function() {
                egret.Tween.removeTweens(t.bg2);
            }), egret.Tween.get(this.bg3).to({
                alpha: o
            }, a, egret.Ease.quadInOut).call(function() {
                egret.Tween.removeTweens(t.bg3);
            });
        }, i.prototype.adjustBgPosV = function(e) {
            var t = this, i = e.isUp ? -185 : 0, n = e.isUp ? 0 : 1;
            egret.Tween.get(this.mainGroup).to({
                verticalCenter: i
            }, Const.tweenTime1, egret.Ease.quadInOut).call(function() {
                egret.Tween.removeTweens(t.mainGroup);
            }), egret.Tween.get(this.bg1).to({
                alpha: n
            }, Const.tweenTime1, egret.Ease.quadInOut).call(function() {
                egret.Tween.removeTweens(t.bg1);
            }), egret.Tween.get(this.bg2).to({
                alpha: n
            }, Const.tweenTime1, egret.Ease.quadInOut).call(function() {
                egret.Tween.removeTweens(t.bg2);
            }), egret.Tween.get(this.bg3).to({
                alpha: n
            }, Const.tweenTime1, egret.Ease.quadInOut).call(function() {
                egret.Tween.removeTweens(t.bg3);
            });
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.CloudGOFunc = function(e) {
            var t = this;
            this.lastValue = 0, egret.Tween.get(this).to({
                factor: 1
            }, 2 * Const.tweenTime1, egret.Ease.quadInOut).call(function() {
                egret.Tween.removeTweens(t);
            });
        }, Object.defineProperty(i.prototype, "factor", {
            get: function() {
                return 0;
            },
            set: function(e) {
                var t = this;
                t.cloud0.x = t.cloud0.x - 320 * (e - t.lastValue), t.cloud1.x = t.cloud1.x - 320 * (e - t.lastValue), 
                t.windmill.x = t.windmill.x - 320 * (e - t.lastValue), t.islandImg.x = t.islandImg.x - 320 * (e - t.lastValue), 
                t.lastValue = e, this.adjustPos();
            },
            enumerable: !0,
            configurable: !0
        }), i.prototype.CloudBACKFunc = function(e) {
            var t = this;
            this.lastValue2 = 0, egret.Tween.get(this).to({
                factor2: 1
            }, 2 * Const.tweenTime1, egret.Ease.quadInOut).call(function() {
                egret.Tween.removeTweens(t);
            });
        }, Object.defineProperty(i.prototype, "factor2", {
            get: function() {
                return 0;
            },
            set: function(e) {
                var t = this;
                t.cloud0.x = t.cloud1.x + 320 * (e - t.lastValue2), t.cloud1.x = t.cloud1.x + 320 * (e - t.lastValue2), 
                t.windmill.x = t.windmill.x + 320 * (e - t.lastValue2), t.islandImg.x = t.islandImg.x + 320 * (e - t.lastValue2), 
                t.lastValue2 = e, this.adjustPos();
            },
            enumerable: !0,
            configurable: !0
        }), i;
    }(hortor.Window);
    e.BackgroundUI = t, __reflect(t.prototype, "game.BackgroundUI");
}(game || (game = {}));

var hortor;

!function(e) {
    var t = function(e) {
        function t(t, i) {
            void 0 === i && (i = !0);
            var n = e.call(this, t) || this;
            return n.autoPlay = i, n.addEventListener(egret.Event.ADDED_TO_STAGE, n.onAdded, n), 
            n.addEventListener(egret.Event.COMPLETE, n.onPlayComplete, n), n;
        }
        return __extends(t, e), t.prototype.play = function(t, i, n, o) {
            void 0 === t && (t = -1), void 0 === i && (i = !0), void 0 === n && (n = null), 
            void 0 === o && (o = null), this.visible = !0, this.onComplete = n, this.thisObject = o, 
            this.loopCount = t, i && this.gotoAndStop(0), e.prototype.play.call(this, t);
        }, t.prototype.dispose = function() {
            this.removeEventListener(egret.Event.ADDED_TO_STAGE, this.onAdded, this), this.removeEventListener(egret.Event.COMPLETE, this.onPlayComplete, this);
        }, t.prototype.onAdded = function(e) {
            this.removeEventListener(egret.Event.ADDED_TO_STAGE, this.onAdded, this), this.addEventListener(egret.Event.REMOVED_FROM_STAGE, this.onRemove, this), 
            this.autoPlay && -1 == this.loopCount && this.play();
        }, t.prototype.onRemove = function(e) {
            this.removeEventListener(egret.Event.REMOVED_FROM_STAGE, this.onRemove, this), this.addEventListener(egret.Event.ADDED_TO_STAGE, this.onAdded, this), 
            this.stop();
        }, t.prototype.onPlayComplete = function(e) {
            this.visible = !1, null != this.onComplete && this.onComplete.call(this.thisObject);
        }, t;
    }(egret.MovieClip);
    e.MovieClip = t, __reflect(t.prototype, "hortor.MovieClip");
}(hortor || (hortor = {}));

var hortor;

!function(e) {
    var t = eui.Image.prototype.$onAddToStage;
    eui.Image.prototype.$onAddToStage = function(i, n) {
        t.apply(this, arguments);
        var o = this;
        o.texture && e.ResourceManager.useRes(o.texture.bitmapData.hashCode, o.hashCode);
    };
    var i = eui.Image.prototype.$onRemoveFromStage;
    eui.Image.prototype.$onRemoveFromStage = function() {
        i.apply(this);
        var t = this;
        t.texture && e.ResourceManager.unloadRes(t.texture.bitmapData.hashCode, t.hashCode);
    };
    var n = eui.Image.prototype.$setTexture;
    eui.Image.prototype.$setTexture = function(t) {
        var i = this;
        i.stage && i.texture && e.ResourceManager.unloadRes(i.texture.bitmapData.hashCode, i.hashCode);
        var o = n.apply(this, arguments);
        return i.stage && i.texture && e.ResourceManager.useRes(i.texture.bitmapData.hashCode, i.hashCode), 
        o;
    };
}(hortor || (hortor = {}));

var hortor;

!function(e) {
    var t = function() {
        function t(e, t, i, n, o, a, r) {
            void 0 === t && (t = !0), this.mViewId = 0, this.view = e, this.autoDisposeRes = t, 
            this.onInit = i.bind(e), this.onData = n.bind(e), this.onOpen = null != o ? o.bind(e) : null, 
            this.onClose = null != a ? a.bind(e) : null, this.onDispose = null != r ? r.bind(e) : null, 
            this.waitFuncList = [];
        }
        return t.prototype.callSafe = function(e, t, i) {
            this.isInitialized ? e.call(t, i) : (e = t ? e.bind(t) : e, this.waitFuncList.push({
                func: e,
                args: i
            }));
        }, t.prototype.load = function(t, n, o, a, r) {
            function s() {
                null != t && null == d.view.skinName ? e.ResourceManager.loadSkin(t, l, d) : l();
            }
            function l(t, n) {
                if (void 0 === t && (t = null), void 0 === n && (n = null), null != t ? (d.partMap = i.getInfoMap(n), 
                d.view.skinName = t) : n && e.Log.warn(this, "not found SkinClass :" + n), !d.mIsInitialized && (d.mIsInitialized = !0, 
                d.onInit(), d.partMap && d.partMap.init(d.view), null != o && o.call(r, d.view), 
                d.waitFuncList.length > 0)) {
                    for (var a = 0, s = d.waitFuncList; a < s.length; a++) {
                        var l = s[a];
                        l.func(l.args);
                    }
                    d.waitFuncList = [];
                }
            }
            var d = this;
            return this.isInitialized ? this.resource ? this.resource.load(o, a, r) : (null != o && o.call(r, d.view), 
            !1) : (null != n ? (this.resource = e.ResourceManager.loadViewResource(n, s, a, r), 
            this.resource.autoDispose = this.autoDisposeRes) : s(), !0);
        }, t.prototype.show = function(e, t, i, n, o) {
            function a() {
                null != i && i.call(o, s.view), s.onOpen && s.onOpen();
            }
            var r = this;
            if (void 0 === i && (i = null), void 0 === n && (n = null), void 0 === o && (o = null), 
            this.resetSkinParts(), this.data = t, this.onCloseFunc = n, this.thisObject = o, 
            !this.isInitialized) return this.callSafe(function() {
                r.show(e, t, i, n, o);
            }, this), !1;
            var s = this;
            return this.isOpen ? !1 : (e.addChild(this.view), this.mIsOpen = !0, this.mEffect ? this.mEffect.show(this.view, a) : a.call(this.view), 
            !0);
        }, t.prototype.hide = function(e, t) {
            function i() {
                o.removeFromParent(e), null != o.onCloseFunc && o.onCloseFunc.call(o.thisObject, o.view);
            }
            var n = this;
            if (void 0 === e && (e = !1), void 0 === t && (t = !0), !this.isInitialized) return this.callSafe(function() {
                n.hide(e, t);
            }, this), !1;
            if (this.mIsOpen) {
                this.mIsOpen = !1;
                var o = this;
                null != this.view.parent && (this.mEffect && t ? this.mEffect.hide(this.view, i) : i.call(this.view));
            }
            return !1;
        }, t.prototype.centerStage = function() {
            this.view.width = e.StageManager.stageWidth, this.view.height = e.StageManager.stageHeight, 
            this.view.anchorOffsetX = .5 * this.view.width, this.view.anchorOffsetY = .5 * this.view.height, 
            this.view.x = this.view.anchorOffsetX, this.view.y = this.view.anchorOffsetY;
        }, t.prototype.dispose = function() {
            this.onDispose && this.onDispose();
        }, Object.defineProperty(t.prototype, "resource", {
            get: function() {
                return this.mResource;
            },
            set: function(e) {
                this.mResource = e;
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(t.prototype, "data", {
            get: function() {
                return this.mData;
            },
            set: function(e) {
                var t = this;
                this.mData = e, this.callSafe(function() {
                    t.onData();
                });
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(t.prototype, "id", {
            get: function() {
                return this.mViewId;
            },
            set: function(e) {
                this.mViewId = e;
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(t.prototype, "effect", {
            get: function() {
                return this.mEffect;
            },
            set: function(e) {
                this.mEffect = e;
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(t.prototype, "isInitialized", {
            get: function() {
                return this.mIsInitialized;
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(t.prototype, "isOpen", {
            get: function() {
                return this.mIsOpen;
            },
            enumerable: !0,
            configurable: !0
        }), t.prototype.partAdded = function(e, t) {
            t.id = e, this.partMap && this.partMap.addPart(e);
        }, t.prototype.resetSkinParts = function() {
            this.partMap && this.partMap.reset(this.view);
        }, t.prototype.setNotchFit = function(e) {
            e.notchFit = !0;
        }, t.prototype.addClick = function(e, t, i) {
            e.addEventListener(egret.TouchEvent.TOUCH_TAP, t, i);
        }, t.prototype.removeClick = function(e, t, i) {
            e.removeEventListener(egret.TouchEvent.TOUCH_TAP, t, i);
        }, t.prototype.removeFromParent = function(e) {
            void 0 === e && (e = !1), this.view.stage && this.view.parent.removeChild(this.view), 
            this.onClose && this.onClose(), e && this.dispose();
        }, t;
    }();
    e.ViewAgent = t, __reflect(t.prototype, "hortor.ViewAgent", [ "hortor.IView" ]);
    var i = function() {
        function e() {
            this.partMap = {};
        }
        return e.prototype.addPart = function(e) {
            var t = this.partMap[e];
            t || (this.partMap[e] = new n(e));
        }, e.prototype.getPart = function(e) {
            return this.partMap[e];
        }, e.prototype.init = function(e) {
            if (!this.isInited) {
                for (var t in this.partMap) {
                    var i = this.partMap[t];
                    i.init(e[t]);
                }
                this.isInited = !0;
            }
        }, e.prototype.reset = function(e) {
            if (this.isInited) for (var t in this.partMap) {
                var i = this.partMap[t];
                i.reset(e[t]);
            }
        }, e.getInfoMap = function(t) {
            var i = this.skinPartMap[t];
            return null == i && (i = this.skinPartMap[t] = new e()), i;
        }, e.skinPartMap = {}, e;
    }();
    __reflect(i.prototype, "PartInfoMap");
    var n = function() {
        function t(e) {
            this.name = "", this.x = 0, this.y = 0, this.scaleX = 1, this.scaleY = 1, this.anchorOffsetX = 0, 
            this.anchorOffsetY = 0, this.alpha = 1, this.rotation = 1, this.visible = !0, this.top = 0, 
            this.bottom = 0, this.left = 0, this.right = 0, this.notchFit = !1, this.name = e;
        }
        return t.prototype.init = function(e) {
            this.x = e.x, this.y = e.y, this.scaleX = e.scaleX, this.scaleY = e.scaleY, this.alpha = e.alpha, 
            this.rotation = e.rotation, this.visible = e.visible, this.top = e.top, this.bottom = e.bottom, 
            this.left = e.left, this.right = e.right, this.notchFit = e.notchFit, this.anchorOffsetX = e.anchorOffsetX, 
            this.anchorOffsetY = e.anchorOffsetY;
        }, t.prototype.reset = function(t) {
            t.hasBinder || (t.anchorOffsetX == this.anchorOffsetX && t.anchorOffsetY == this.anchorOffsetY && (t.x = this.x, 
            t.y = this.y), t.scaleX = this.scaleX, t.scaleY = this.scaleY, t.alpha = this.alpha, 
            t.rotation = this.rotation, t.visible = this.visible, t.top = this.top, t.bottom = this.bottom, 
            t.left = this.left, t.right = this.right, e.SystemManager.isNotchMobile && this.notchFit && (t.y += 60, 
            t.top += 60));
        }, t;
    }();
    __reflect(n.prototype, "PartInfo");
}(hortor || (hortor = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return t.call(this) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {}, i.prototype.onOpen = function() {}, 
        i.prototype.onClose = function() {
            var t = hortor.ScreenManager.getScreen(e.ScreenType.GUILD_SAILING);
            t && t.startWave();
        }, i.prototype.onData = function() {
            this.initView();
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.initView = function() {
            this.panel.helpBtn.visible = !1, this.text.textFlow = new egret.HtmlTextParser().parser(this.data.content || "");
        }, i;
    }(e.WindowBase);
    e.ComHelpWindow = t, __reflect(t.prototype, "game.ComHelpWindow");
}(game || (game = {}));

var hortor;

!function(e) {
    var t = eui.List.prototype.updateRenderer;
    eui.List.prototype.updateRenderer = function(e, i, n) {
        return e.hasEffect = this.dataChange, t.apply(this, arguments);
    };
    var i = eui.List.prototype.commitProperties;
    eui.List.prototype.commitProperties = function() {
        this.dataChange = this.$dataProviderChanged, i.apply(this);
    };
    var n = eui.List.prototype.validateDisplayList;
    eui.List.prototype.validateDisplayList = function() {
        n.apply(this), this.dataChange = !1;
    };
    var o = eui.ItemRenderer.prototype.dataChanged;
    eui.ItemRenderer.prototype.dataChanged = function() {
        o.apply(this), this.hasEffect && this.effect && this.effect.start(this, this.itemIndex);
    };
}(hortor || (hortor = {}));

var hortor;

!function(e) {
    var t;
    !function(e) {
        e[e.CLOSE = -1] = "CLOSE", e[e.PREPARE = 0] = "PREPARE", e[e.LOADING = 1] = "LOADING", 
        e[e.OPEN = 2] = "OPEN";
    }(t = e.WindowState || (e.WindowState = {}));
    var i = function() {
        function e(e, i, n, o, a, r, s, l) {
            void 0 === n && (n = !0), void 0 === o && (o = !0), void 0 === a && (a = !1), void 0 === r && (r = null), 
            void 0 === l && (l = 1), this.id = 0, this.modalAlpha = .75, this.id = e, this.typeClass = i, 
            this.manualCloseOnly = a, this.resGroup = s, this.skinUrl = r, this.hasModal = n, 
            this.level = l, this.modalClickHide = o, this.state = t.CLOSE;
        }
        return Object.defineProperty(e.prototype, "instance", {
            get: function() {
                return null == this.mInstance && (this.mInstance = new this.typeClass()), "dataProvider" in this.mInstance && this.fullList && (this.mInstance.dataProvider = this.openList), 
                this.mInstance;
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(e.prototype, "fullList", {
            get: function() {
                return this.mFullList;
            },
            set: function(e) {
                this.mFullList = e, this.openList = new eui.ArrayCollection();
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(e.prototype, "isOpen", {
            get: function() {
                return this.state == t.OPEN;
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(e.prototype, "isLoading", {
            get: function() {
                return this.state == t.LOADING;
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(e.prototype, "isActive", {
            get: function() {
                return this.state > t.CLOSE;
            },
            enumerable: !0,
            configurable: !0
        }), e;
    }();
    e.WindowData = i, __reflect(i.prototype, "hortor.WindowData");
}(hortor || (hortor = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.notKnowNum = !1, e.skinPath = "common/ComRewardNodeSkin", e;
        }
        return __extends(i, t), i.prototype.onData = function() {
            this.data && this.nodeView();
        }, i.prototype.initNodeView = function(e, t) {
            this.data = e, this.notKnowNum = t, this.nodeView();
        }, i.prototype.nodeView = function() {
            if (this.isInitialized) {
                var t = _.keys(this.data), i = _.values(this.data), n = e.ItemManager.getItemInfo(t[0]);
                this.iconImge.source = n.icon, this.numL.text = this.notKnowNum ? "?" : e.ComFunc.formatNumber(i[0]);
            }
        }, i;
    }(e.ItemRenderBase);
    e.ComRewardNode = t, __reflect(t.prototype, "game.ComRewardNode");
}(game || (game = {})), window.game.ComRewardNode = game.ComRewardNode;

var hortor;

!function(e) {
    var t = function(e) {
        function t() {
            var t = e.call(this) || this;
            return t.index = 0, t.parser = new egret.HtmlTextParser(), t.marqueueSpeed = 3, 
            t.marqueueGap = 50, t.talkDelay = 5e3, t.addEventListener(egret.Event.COMPLETE, t.onInit, t), 
            t;
        }
        return __extends(t, e), t.prototype.onInit = function() {
            this.content.mask = new egret.Rectangle(0, 0, 544, 44);
        }, t.prototype.marqueue = function(e, t, i, n, o) {
            if (void 0 === t && (t = 3), void 0 === i && (i = 50), this.marqueues = e, this.marqueues.length < 4) for (var a = this.marqueues.length; 4 > a; a++) this.marqueues.push(e[a % this.marqueues.length]);
            this.stop(), this.onComplete = n, this.marqueueSpeed = t, this.marqueueGap = i, 
            this.thisobj = o, this.marquequeStart();
        }, t.prototype.talk = function(e, t, i, n) {
            void 0 === t && (t = 5e3), this.marqueues = e, this.talkDelay = t, this.stop(), 
            this.onComplete = i, this.thisobj = n, this.talkNext();
        }, t.prototype.isAvailalbe = function() {
            return this.marqueues && this.marqueues.length > 0;
        }, t.prototype.stop = function() {
            if (this.index = 0, this.marqueueTimer && this.marqueueTimer.stop(), this.content.numChildren > 1) {
                this.content.getChildAt(0).x = 0;
                for (var e = 0; e < this.content.numChildren; e++) this.content.getChildAt(e).visible = !1;
            }
            for (var e = 0; 4 > e; e++) this.positionMarqueque(e);
            egret.Tween.removeTweens(this.labelDisplay);
        }, t.prototype.talkNext = function() {
            var e = this;
            if (this.index < this.marqueues.length) {
                var t = this.marqueues[this.index];
                this.labelDisplay.textFlow = this.parser.parse(t), this.labelDisplay.x = this.width, 
                this.labelDisplay.alpha = 0, this.index += 1;
                var i = .5 * (this.bgImage.width - this.content.x - this.labelDisplay.width);
                egret.Tween.get(this.labelDisplay).to({
                    x: i,
                    alpha: 1
                }, 500, egret.Ease.backOut).wait(this.talkDelay).call(function() {
                    e.talkNext();
                }, this);
            } else this.index = 0, this.talkNext(), this.onComplete && this.onComplete.call(this.thisobj);
        }, t.prototype.marquequeStart = function() {
            for (var e = 0; 4 > e; e++) {
                var t = e < this.content.numChildren ? this.content.getChildAt(e) : this.createLabel();
                t.visible = !0, this.marquequeNext(t);
            }
            null == this.marqueueTimer && (this.marqueueTimer = new egret.Timer(30), this.marqueueTimer.addEventListener(egret.TimerEvent.TIMER, this.marquequeUpdate, this)), 
            this.marqueueTimer.start();
        }, t.prototype.createLabel = function() {
            var e = new eui.Label();
            return e.size = this.labelDisplay.size, e.textColor = this.labelDisplay.textColor, 
            e.stroke = this.labelDisplay.stroke, e.strokeColor = this.labelDisplay.strokeColor, 
            e.bold = this.labelDisplay.bold, e;
        }, t.prototype.marquequeUpdate = function() {
            for (var e = 0; 4 > e; e++) {
                var t = this.content.getChildAt(e);
                t.x -= this.marqueueSpeed, t.x <= -t.width && this.marquequeNext(t);
            }
        }, t.prototype.marquequeNext = function(e) {
            this.index >= this.marqueues.length && (this.index = 0, this.onComplete && this.onComplete.call(this.thisobj));
            var t = this.marqueues[this.index];
            e.textFlow = this.parser.parse(t), e.parent && e.parent.removeChild(e), this.content.addChild(e);
            var i = this.content.getChildIndex(e);
            this.positionMarqueque(i), this.index += 1;
        }, t.prototype.positionMarqueque = function(e) {
            if (e < this.content.numChildren) {
                var t = this.content.getChildAt(e), i = e > 0 ? this.content.getChildAt(e - 1) : null;
                t.x = i ? i.x + i.width + this.marqueueGap : this.width;
            }
        }, t;
    }(eui.Component);
    e.Marqueque = t, __reflect(t.prototype, "hortor.Marqueque");
}(hortor || (hortor = {})), window.hortor.Marqueque = hortor.Marqueque;

var hortor;

!function(e) {
    var t = function(e) {
        function t() {
            var t = e.call(this) || this;
            return t.addEventListener(egret.Event.CHANGE, t.onTouchTap, t), t;
        }
        return __extends(t, e), t.prototype.setSelectedIndex = function(t, i) {
            e.prototype.setSelectedIndex.call(this, t, !0);
        }, t.prototype.onTouchTap = function(e) {
            soundModel.buttonOpen();
        }, t;
    }(eui.TabBar);
    e.TabBar = t, __reflect(t.prototype, "hortor.TabBar");
}(hortor || (hortor = {})), window.hortor.TabBar = hortor.TabBar;

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return t.call(this) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.closeBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onCloseFunc, this);
        }, i.prototype.onOpen = function() {}, i.prototype.onClose = function() {}, i.prototype.onData = function() {
            this.initView();
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.initView = function() {
            this.tipLabel.text = Const["LimitText_" + this.data.type], this.titleImg.source = e.ResourcePath.getModuleUnlockTitle(this.data.type), 
            this.contentImg.source = e.ResourcePath.getModuleUnlockBanner(this.data.type);
        }, i.prototype.onCloseFunc = function() {
            hortor.WindowManager.hideWindow(e.WindowType.WINDOW_MODULEUNLOCK);
        }, i;
    }(e.WindowBase);
    e.ComUnlockWindow = t, __reflect(t.prototype, "game.ComUnlockWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return t.call(this) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.okBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.closeBtnFunc, this), 
            this.closeBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.closeBtnFunc, this);
        }, i.prototype.onOpen = function() {}, i.prototype.onClose = function() {
            hortor.WindowManager.hideWindow(e.WindowType.WINDOW_COMWITHHEADPANEL);
        }, i.prototype.onData = function() {
            this.onView();
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.onView = function() {
            var e = this;
            if (e.nameLabel.text = "", e.descLabel.text = "", e.data.playerInfo) {
                e.nameLabel.text = util.strSub(e.data.playerInfo.name, 6), util.setRemoteAvatar(e.headImg, e.data.playerInfo.headImg), 
                e.headBgImg.source = 1 == e.data.playerInfo.gender ? "common_img_portrait1" : "common_img_portrait0";
                var t = 1 == e.data.playerInfo.gender ? Const.manNameColor : Const.womanNameColor;
                e.nameLabel.textColor = t;
            }
            e.data.desc && (_.isArray(e.data.desc) ? e.descLabel.textFlow = e.data.desc : e.descLabel.text = e.data.desc);
        }, i.prototype.closeBtnFunc = function() {
            this.data.cb && this.data.cb(), this.hide();
        }, i;
    }(e.WindowBase);
    e.ComWithHeadWindow = t, __reflect(t.prototype, "game.ComWithHeadWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return t.call(this) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.closeBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onCloseFunc, this);
        }, i.prototype.onOpen = function() {}, i.prototype.onClose = function() {}, i.prototype.onData = function() {}, 
        i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.onCloseFunc = function() {
            hortor.WindowManager.hideWindow(e.WindowType.WINDOW_CP_TEMP);
        }, i;
    }(e.WindowBase);
    e.CPWindow = t, __reflect(t.prototype, "game.CPWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            util.jzlog(">>>>>>>>>>>>>>>>>>>>DailyEnergyWindow.onInit"), this.getBtnGroup.addEventListener(egret.TouchEvent.TOUCH_TAP, this.getBtnFunc, this), 
            this.videoBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.videoBtnFunc, this);
        }, i.prototype.onData = function() {
            var t = this;
            null == playerModel.loginRewardRemain ? (this.getBtn.enabled = !0, this.hasGotGroup.visible = !1) : 0 == playerModel.loginRewardRemain ? (this.getBtn.enabled = !0, 
            this.getBtn.icon = "common_txt_lqnl20", this.hasGotGroup.visible = !1) : (this.getBtn.enabled = !1, 
            this.getBtn.icon = "common_txt_ylq", this.hasGotGroup.visible = !0, this.timer = hortor.TimerManager.addClock(e.ClockType.DailyEnergy, playerModel.loginRewardRemain, 1e3), 
            this.timer.registCallBack(this, function() {
                t.getBtn.enabled = !1, t.getBtn.icon = "common_txt_lqnl20", t.hasGotGroup.visible = !1, 
                playerModel.loginRewardRemain = 0, gateModel.updateGate(e.WindowType.WINDOW_DAILY_ENERGY);
            }, function() {
                util.jzlog("playerModel.loginRewardRemain>>>>>>>", playerModel.loginRewardRemain), 
                playerModel.loginRewardRemain -= 1, playerModel.loginRewardRemain <= 0 && (gateModel.updateGate(e.WindowType.WINDOW_DAILY_ENERGY), 
                t.timer.stop());
            })), this.videoGroup.visible = !1;
        }, i.prototype.getBtnFunc = function() {
            var t = this;
            soundModel.playSound(e.SoundType.SOUND_PANEL_OPEN), 0 != this.getBtn.enabled && (util.jzlog(">>>>>ServerMsg.LOGIN_REWARD = ", e.ServerMsg.LOGIN_REWARD), 
            HttpService.post(e.ServerMsg.LOGIN_REWARD, "uid=" + playerModel.uid, function(i) {
                util.jzlog("登录奖励" + JSON.stringify(i)), i.hasOwnProperty("errcode") && 0 != i.errcode || (hortor.WindowManager.showWindow(e.WindowType.WINDOW_REWARD, {
                    energy: 20
                }, null, null, function() {}), playerModel.update(i), gateModel.updateGate(e.WindowType.WINDOW_DAILY_ENERGY), 
                t.getBtn.enabled = !1, t.getBtn.icon = "common_txt_ylq", t.hasGotGroup.visible = !0, 
                guildModel.addGuildTaskValue(e.GuildProxy.loginReward, 1));
            }));
        }, i.prototype.videoBtnFunc = function() {
            var t = this;
            soundModel.playSound(e.SoundType.SOUND_PANEL_OPEN), this.videoBtn.touchEnabled = !1, 
            util.jzlog(">>>播放视频广告, 播放完给奖励"), e.PlatformManager.showVideoAd(e.AdType.adUnitId_dailyEnergy, this.getAdReward.bind(this), this.getAdReward.bind(this), function() {
                t.videoBtn.touchEnabled = !0;
            });
        }, i.prototype.getAdReward = function() {
            e.ComFunc.videoReward(e.AdType.adUnitId_dailyEnergy);
        }, i;
    }(e.TabWindowBase);
    e.DailyEnergyWindow = t, __reflect(t.prototype, "game.DailyEnergyWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.signBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.signBtnFunc, this), 
            this.signBtnDouble.addEventListener(egret.TouchEvent.TOUCH_TAP, this.signBtnDoubleFunc, this), 
            this.signData = new eui.ArrayCollection(), this.signList.dataProvider = this.signData, 
            this.signList.itemRenderer = e.SignNode;
        }, i.prototype.prepare = function(t, n) {
            HttpService.post(e.ServerMsg.DAILY_ENTER, "uid=" + playerModel.uid, function(e) {
                i.dailyData = e, t(e);
            }, n);
        }, i.prototype.onData = function() {
            var e = initModel.dailyPrizeConfs, t = e.slice(0, 6);
            this.signData.source = t, this.signData.refresh(), this.showSignBtnStatus();
        }, i.prototype.showSignBtnStatus = function() {
            this.vipimg.visible = gateModel.checkFocus, playerModel.isPrivilege ? (util.jzlog("只显示double get"), 
            this.signBtnGroup.visible = !1, this.signBtnDoubleGroup.visible = !0, this.signBtnDoubleGroup.x = 199 + this.signBtnDoubleGroup.anchorOffsetX, 
            this.signBtnDouble.enabled = 2 != i.dailyData.privilegeStatus) : (this.signBtnGroup.visible = !0, 
            gateModel.privilegeAvailable ? (util.jzlog("yoxiao"), this.signBtnGroup.x = 49 + this.signBtnGroup.anchorOffsetX, 
            this.signBtnDoubleGroup.visible = !0, this.signBtnDoubleGroup.x = 324 + this.signBtnDoubleGroup.anchorOffsetX) : (this.signBtnDoubleGroup.visible = !1, 
            this.signBtnGroup.x = 183 + this.signBtnGroup.anchorOffsetX, util.jzlog("无效", this.signBtnGroup.x)), 
            this.signBtn.enabled = 0 == i.dailyData.privilegeStatus), 1 == i.dailyData.dailyPrizeDay && i.dailyData.dailyPrizeTime > 0 && (this.getIcon7.visible = !0);
        }, i.prototype.signBtnFunc = function() {
            this.signBtn.enabled = !1, HttpService.post(e.ServerMsg.DAILY_REWARD, "uid=" + playerModel.uid, this.onReward.bind(this));
        }, i.prototype.signBtnDoubleFunc = function() {
            playerModel.isPrivilege ? (this.signBtnDouble.enabled = !1, this.signBtnFunc()) : (e.PlatformManager.LogEvent("officalVipShow_daily"), 
            hortor.WindowManager.showWindow(e.WindowType.WINDOW_OFFICIALVIP));
        }, i.prototype.onReward = function(t) {
            i.dailyData = t, util.jzlog("onReward::::::data =======", t);
            var n = t.reward ? t.reward : {};
            if (t.privilegeReward) for (var o in t.privilegeReward) n[o + "_vip"] = t.privilegeReward[o];
            playerModel.update(t), hortor.WindowManager.showWindow(e.WindowType.WINDOW_REWARD, n), 
            util.jzlog("this.data.dailyPrizeDay>>>>>>", this.data.dailyPrizeDay), util.jzlog("this.data.dailyPrizeTime >>>>", this.data.dailyPrizeTime), 
            util.jzlog("data.giftTyp>>>>", t.giftType), 1 == this.data.dailyPrizeDay && this.data.dailyPrizeTime > 0 && t.giftType && hortor.WindowManager.showWindow(e.WindowType.WINDOW_OPENBOX, t), 
            this.refreshList(), this.showSignBtnStatus(), initModel.signRedPoint = !1, gateModel.updateGate(e.WindowType.WINDOW_DAILY_SIGN), 
            EventCenter.sendEvent(EventConst.DailyRewardRefresh);
        }, i.prototype.refreshList = function() {
            var e = initModel.dailyPrizeConfs.slice(0, 6);
            this.signData.replaceAll(e);
        }, i;
    }(e.TabWindowBase);
    e.DailySignWindow = t, __reflect(t.prototype, "game.DailySignWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(e) {
        function t() {
            return null !== e && e.apply(this, arguments) || this;
        }
        return __extends(t, e), t.prototype.onInit = function() {}, t.prototype.onData = function() {
            var e = this, t = {};
            t[this.data.giftType] = this.data.giftQuantity || 0, this.rewardNode.initNodeView(t), 
            this.light.visible = !1, RES.getResAsync("dailySign_json.sign_icon_box1", function() {}, this);
            var i = egret.Tween.get(this.light, {
                loop: !0
            });
            i.to({
                rotation: 360
            }, 2e3);
            var n = 60, o = egret.Tween.get(this.boxImage);
            o.to({
                rotation: 5
            }, n).to({
                rotation: 0
            }, n).to({
                rotation: -5
            }, n).to({
                rotation: 0
            }, n).to({
                rotation: 5
            }, n).to({
                rotation: 0
            }, n).to({
                rotation: -5
            }, n).to({
                rotation: 0
            }, n).to({
                rotation: 5
            }, n).to({
                rotation: 0
            }, n).to({
                rotation: -5
            }, n).to({
                rotation: 0
            }, n).wait(150).call(function() {
                e.light.visible = !0, e.boxImage.source = "dailySign_json.sign_icon_box1", e.playRewardTwee();
            });
        }, t.prototype.prepare = function(e, t) {
            e(null);
        }, t.prototype.playRewardTwee = function() {
            var e = this;
            this.rewardNode.visible = !0;
            var t = egret.Tween.get(this.rewardNode);
            t.to({
                y: this.rewardNode.y - 190
            }, 300, egret.Ease.quadOut).wait(1e3).call(function() {
                e.hide();
            });
        }, t;
    }(e.WindowBase);
    e.OpenBoxWindow = t, __reflect(t.prototype, "game.OpenBoxWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.skinPath = "dailySign/SignNodeSKin", e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            EventCenter.addEventListener(EventConst.DailyRewardRefresh, this.onData, this);
        }, i.prototype.onData = function() {
            var t = this.data;
            util.jzlog("this.data =======", this.data);
            var i = t.money > 0 ? "money" : t.energy > 0 ? "energy" : t.vip > 0 ? "vip" : t.cookie > 0 ? "cookie" : t.potion > 0 ? "potion" : t.doubleMoneyCard > 0 ? "doubleMoneyCard" : "present";
            this.dayNum.text = t.id;
            var n = "shop_json.shop_money_2", o = "";
            switch (i) {
              case "money":
                n = "shop_json.shop_money_2", o = e.ComFunc.toThousands(t[i]);
                break;

              case "energy":
                n = "shop_json.shop_energy_3", o = e.ComFunc.toThousands(t[i]);
                break;

              case "vip":
                n = "shop_json.shop_monthcard", o = "月卡特权(天)x" + t.vip;
                break;

              case "cookie":
                n = "shop_json.shop_cookie", o = "饼干x" + t.cookie;
                break;

              case "potion":
                n = "shop_json.shop_potion", o = "经验药水x" + t.potion;
                break;

              case "present":
                n = "dailyreward_json.sign_icon_box", o = "神秘礼包";
                break;

              case "doubleMoneyCard":
                n = "shop_json.shop_30", o = "双倍金币卡x" + t.doubleMoneyCard;
            }
            n = e.ItemManager.getItemInfo(i).icon, this.propIcon.source = n, this[i + "Num"].text = o, 
            this[i + "Group"].visible = !0, this.maskGroup.visible = t.id < e.DailySignWindow.dailyData.dailyPrizeDay, 
            1 == e.DailySignWindow.dailyData.dailyPrizeDay && e.DailySignWindow.dailyData.dailyPrizeTime > 0 && (this.maskGroup.visible = !0), 
            this.officialvipimg.visible = gateModel.checkFocus && !this.maskGroup.visible;
        }, i;
    }(e.ItemRenderBase);
    e.SignNode = t, __reflect(t.prototype, "game.SignNode");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var i = t.call(this, !1) || this;
            return i.load(e.ResourcePath.getSkinRes("faceUI/FaceUISkin"), "faceUI"), i;
        }
        return __extends(i, t), i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.onInit = function() {
            var t = this;
            this.leftMenu = new e.MenuGroup(this.leftContainer, this.leftBg), this.rightMenu = new e.MenuGroup(this.rightContainer, this.rightBg), 
            this.addLeftMenu(!1, "faceui_icon_tjhy", 0, e.WindowType.WINDOW_WXRANK, this.wxFriendBtnFunc), 
            this.addLeftMenu(!1, "faceui_icon_hdt", 1, e.ScreenType.GUILD_SCREEN, this.guildBtnFunc), 
            this.addLeftMenu(!1, "faceui_icon_xsmb", 2, e.WindowType.WINDOW_ACHIEVE), this.addLeftMenu(!1, "faceui_icon_gdfl", 3, e.WindowType.WINDOW_WALL_TASK, this.wallTaskFunc), 
            this.addLeftMenu(!1, "faceui_icon_hdcp_0", 4, e.WindowType.WINDOW_CP_TEMP), this.leftMenu.start(), 
            this.addRightMenu(!1, "faceui_icon_mrfl", 0, e.WindowType.GROUP_DAILYREWARD), playerModel.isAudit || this.addRightMenu(!1, "faceui_icon_yqjl", 1, e.WindowType.GROUP_INVITEREWARD), 
            this.addRightMenu(!1, "faceui_icon_xsth", 2, e.WindowType.GROUP_LIMITSALE, null, null, !0), 
            this.addRightMenu(!0, "faceui_icon_js1", 4, e.WindowType.WINDOW_MODULEUNLOCK, this.tryOpenUnlock), 
            this.rightMenu.start(), playerModel.bind("crowns", this, function(e) {
                t.starNum.text = e;
            }), playerModel.bind("money", this, function(i) {
                MapProxy.refreshToBuildCount(), 999999999 >= i ? t.moneyNum.text = e.ComFunc.toThousands(i) : t.moneyNum.text = e.ComFunc.formatEngNumber(i), 
                t.showAddTween(t.moneyNum);
            }), playerModel.bind("shields", this, function(e) {
                for (var i = 0; 3 > i; i++) t["defense" + i].visible = e > i;
            });
            var i = new hortor.Binder(playerModel.couple);
            i.bind("coupleShieldCount", this, function() {
                var e = playerModel.couple || {
                    coupleShieldCount: 0
                };
                t.defense3.visible = e.coupleShieldCount > 0;
            }), wheelModel.bind("isRotate", this, function(e) {
                t.setEnable(t.topTweenGroup, !e), t.setEnable(t.bubbleGroup, !e), t.setEnable(t.leftTweenGroup, !e), 
                t.setEnable(t.rightTweenGroup, !e), t.setEnable(t.notificationGroup, !e), t.setEnable(t.mineGroup, !e), 
                t.setEnable(t.petGroup, !e), t.setEnable(t.kGrpAddFriend, !e);
            }), gateModel.getGate("Activity").bind("red", this.foldBtnPoint, "visible"), gateModel.bind("iosPay", this, function(e) {
                t.addBtn.visible = e, t.moneyGroup.touchEnabled = t.moneyGroup.touchChildren = e;
            }), util.setRemoteAvatar(this.headImg, playerModel.headImg), this.addClick(this.moneyGroup, this.showShop, this), 
            this.addClick(this.actBtnGroup, this.openActView, this), this.addClick(this.menuBtnGroup, this.openMenuView, this), 
            this.addClick(this.bubbleGroup, this.openChatView, this), hortor.NotificationManager.add(e.NotificationType.CHAT_UPDATE, this.updateChat, this), 
            hortor.NotificationManager.add(e.NotificationType.FACEUI_UPDATE, this.updateFaceUI, this), 
            hortor.NotificationManager.add(e.NotificationType.SCREEN_ENTER, this.updateFaceUI, this), 
            hortor.NotificationManager.add(e.NotificationType.WINDOW_CLOSE, this.onWindowClose, this), 
            hortor.NotificationManager.add(e.NotificationType.PIRATE_TEAM_ENTER, this.guildBtnFunc, this), 
            hortor.NotificationManager.add(e.NotificationType.FACEUI_corwns_change, this.crownsChange, this), 
            EventCenter.addEventListener(EventConst.refreshPetStatus, this.setPetStatus, this), 
            EventCenter.addEventListener(EventConst.RefreshMapRedPoint, this.showMapRedPoint, this), 
            EventCenter.addEventListener(EventConst.updatePrivateChatReadStatus, this.updateChatRedShow, this), 
            g_Notice = this.btnNotificationCtrl = new e.ButtonLayerNotificationCtrl(this), this.btnNotificationCtrl.init(), 
            soundModel.playMusic(e.SoundType.MUSIC_MAIN), this.createMineArmature(), this.setPetStatus(), 
            this.setNotchFit(this.topTweenGroup), this.setNotchFit(this.leftTweenGroup), this.setNotchFit(this.rightTweenGroup), 
            this.setNotchFit(this.bubbleGroup), this.setNotchFit(this.notificationGroup), this.setNotchFit(this.kGrpAddFriend), 
            EventCenter.addEventListener(EventConst.showSpeedyAddWay, this.showAddFriend, this), 
            this.kBtnAdd.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onAddFriend, this), 
            this.kBtnIgnore.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onIgnore, this);
        }, i.prototype.onOpen = function() {
            this.updateFaceUI(), gateModel.getGate(e.WindowType.GROUP_LIMITSALE).userRed = !0, 
            this.initShieldView();
        }, i.prototype.setEnable = function(e, t) {
            e.touchEnabled = e.touchChildren = t;
        }, i.prototype.initShieldView = function() {
            for (var e = 0; 3 > e; e++) this["defense" + e].visible = playerModel.shields > e;
            var t = playerModel.couple || {
                coupleShieldCount: 0
            };
            this.defense3.visible = t.coupleShieldCount > 0;
        }, i.prototype.showAddFriend = function() {
            this.kLabelName.text = util.strSub(e.loginParams.friendJoinName, 5), this.kGrpAddFriend.alpha = 0, 
            this.kGrpAddFriend.y = 150, this.kGrpAddFriend.visible = !0, egret.Tween.get(this.kGrpAddFriend).to({
                alpha: 1,
                y: 130
            }, 300, egret.Ease.elasticOut);
        }, i.prototype.onIgnore = function() {
            var e = this;
            egret.Tween.get(this.kGrpAddFriend).to({
                alpha: 0,
                y: 150
            }, 300, egret.Ease.quartOut).call(function() {
                e.kGrpAddFriend.visible = !1;
            });
        }, i.prototype.onAddFriend = function() {
            var t = this;
            HttpService.post(e.ServerMsg.FRIEND_JOIN, "uid=" + playerModel.uid + "&code=" + e.loginParams.friendJoinCode + "&message=", function(e) {
                e.isFriend ? hortor.TipManager.tip("船长大人！对方已经是你的好友!") : hortor.TipManager.tip("申请好友成功!"), 
                t.onIgnore();
            }, function() {
                t.onIgnore();
            }, this);
        }, i.prototype.onWindowClose = function(t) {
            t == e.WindowType.WINDOW_ACT_MENU && this.showActBtnAction(2);
        }, i.prototype.updateFaceUI = function() {
            var t = this, i = playerModel.tutorial < 15, n = islandModel.islandStatus == e.IslandStatus.BUILD || islandModel.islandStatus == e.IslandStatus.ATTACKORSTEAL, o = hortor.ScreenManager.currentScreen == e.ScreenType.WHEEL_SCREEN, a = !i && o && !n;
            uiModel.isMainWheel = a, uiModel.isWheelScreen = o, e.OpenFuncManager.checkAll(), 
            o ? hortor.SoundManager.resume(e.SoundType.MUSIC_MAIN) : hortor.SoundManager.pause(e.SoundType.MUSIC_MAIN);
            var r = a ? 521 : 640;
            this.actBtnGroup.visible = !0, egret.Tween.removeTweens(this.rightTweenGroup), egret.Tween.get(this.rightTweenGroup).to({
                x: r
            }, Const.tweenTime2, egret.Ease.quadInOut).call(function() {
                t.rightMenu.onState(a), t.actBtnGroup.visible = a, uiModel.onState(e.UINameType.actMenuBtn, t.foldBtn, a), 
                uiModel.onState(e.UINameType.actBtnGroup, t.actBtnGroup, a);
            });
            var s = a ? 0 : -119;
            egret.Tween.removeTweens(this.leftTweenGroup), egret.Tween.get(this.leftTweenGroup).to({
                x: s
            }, Const.tweenTime2, egret.Ease.quadInOut).call(function() {
                t.leftMenu.onState(a), uiModel.onState(e.UINameType.mainMenuBtn, t.menuBtnGroup, a);
            }), a && (this.addChild(this.mineGroup), this.addChild(this.petGroup), this.mineArmature.play("wait", -1), 
            this.petArmature.play(this.petAction, -1));
            var l = a ? 0 : -178;
            egret.Tween.removeTweens(this.mineGroup), egret.Tween.get(this.mineGroup).to({
                left: l
            }, Const.tweenTime2, egret.Ease.quadInOut).call(function() {
                uiModel.onState(e.UINameType.mineGroup, t.mineGroup, a), uiModel.onState(e.UINameType.mineMenuBtn, t.mineGroup, a), 
                !a && t.mineGroup.parent && t.removeChild(t.mineGroup);
            });
            var d = a ? 0 : -178;
            egret.Tween.removeTweens(this.petGroup), egret.Tween.get(this.petGroup).to({
                right: d
            }, Const.tweenTime2, egret.Ease.quadInOut).call(function() {
                uiModel.onState(e.UINameType.petGroup, t.petGroup, a), !a && t.petGroup.parent && t.removeChild(t.petGroup);
            }), this.notificationGroup.visible = a;
            var u = a ? 1 : 0;
            this.bubbleGroup.visible = !0, egret.Tween.removeTweens(this.bubbleGroup), egret.Tween.get(this.bubbleGroup).to({
                alpha: u
            }, Const.tweenTime2, egret.Ease.quadInOut).call(function() {
                t.bubbleGroup.visible = a;
            });
            var h = islandModel.islandStatus == e.IslandStatus.ATTACKORSTEAL, c = o && !h, p = c ? 8 : -61;
            if (p += c && hortor.SystemManager.isNotchMobile ? 60 : 0, egret.Tween.removeTweens(this.topTweenGroup), 
            egret.Tween.get(this.topTweenGroup).to({
                top: p
            }, Const.tweenTime2, egret.Ease.quadInOut).call(function() {
                egret.Tween.removeTweens(t.topTweenGroup);
            }), a ? (this.showActTipAction(activityModel.hasTooltips), this.updateMenuRedPoint(), 
            this.updateVipRewardImg()) : this.vipRewardImg.visible = !1, this.vipRewardImg.visible) {
                var g = this.vipRewardImg.x;
                egret.Tween.get(this.vipRewardImg, {
                    loop: !0
                }).to({
                    x: g + 4
                }, 400).to({
                    x: g
                }, 400).to({
                    x: g - 4
                }, 400).to({
                    x: g
                }, 400);
            } else egret.Tween.removeTweens(this.vipRewardImg);
        }, i.prototype.updateMenuRedPoint = function() {
            gateModel.getGate(e.WindowType.WINDOW_PLAYER_EDIT).red || islandModel.ableToBuildCount > 0 || gateModel.getGate(e.WindowType.GROUP_FRIEND).red || gateModel.getGate(e.WindowType.GROUP_NEWS).red ? this.menuRedPoint.visible = !0 : this.menuRedPoint.visible = !1, 
            this.updateChatRedShow();
        }, i.prototype.updateVipRewardImg = function() {
            playerModel.monthCardExpired > 0 && !playerModel.gotMonthCardReward ? this.vipRewardImg.visible = !0 : this.vipRewardImg.visible = !1;
        }, i.prototype.updateChatRedShow = function() {
            this.chatBtnPoint.visible = chatModel.ChatCache.chatBtnPoint;
        }, i.prototype.updateChat = function(e) {
            this.chatContent.text = e.name + ":" + e.content;
        }, i.prototype.showShop = function() {
            soundModel.buttonOpen(), hortor.WindowManager.showWindow(e.WindowType.WINDOW_SHOP, 2);
        }, i.prototype.openActView = function() {
            soundModel.buttonOpen(), this.showActBtnAction(1), activityModel.hasTooltips && (this.showActTipAction(!1), 
            activityModel.closeTooltips()), hortor.WindowManager.showWindow(e.WindowType.WINDOW_ACT_MENU, {
                guide: this.actBtnGroup.guide
            }), this.actBtnGroup.guide = null;
        }, i.prototype.openMenuView = function() {
            soundModel.buttonOpen(), hortor.WindowManager.currentWindow = e.WindowType.WINDOW_MAIN_MENU;
        }, i.prototype.openChatView = function() {
            soundModel.buttonOpen(), hortor.WindowManager.currentWindow = e.WindowType.WINDOW_WORLD_CHAT;
        }, i.prototype.tryOpenUnlock = function() {
            e.OpenFuncManager.open() || e.ComFunc.openComConfirmPanel(e.OpenFuncManager.unlocking);
        }, i.prototype.addLeftMenu = function(e, t, i, n, o, a, r) {
            void 0 === r && (r = !1), this.addMenu(!0, e, t, i, n, o, a, r);
        }, i.prototype.addRightMenu = function(e, t, i, n, o, a, r) {
            void 0 === r && (r = !1), this.addMenu(!1, e, t, i, n, o, a, r);
        }, i.prototype.addMenu = function(t, i, n, o, a, r, s, l) {
            void 0 === l && (l = !1), s = s ? s : e.Menu, r && (r = r.bind(this));
            var d = new s(a, n, o, r, l);
            d.isRandom = i, d.name = a.toString();
            var u = t ? this.leftMenu : this.rightMenu, h = gateModel.getGate(a);
            h && (d.gate = h), u.addMenu(d);
        }, i.prototype.wxFriendBtnFunc = function() {
            wxOpenData.loadImages(function() {
                hortor.WindowManager.showWindow(e.WindowType.WINDOW_WX_FRIEND, {
                    type: "friend",
                    shareTicket: ""
                });
            });
        }, i.prototype.guildBtnFunc = function() {
            !gateModel.guide[e.AcLockType.guild] || playerModel.highestCrowns < Const.guildLimit ? e.ComFunc.openComConfirmPanel(e.AcLockType.guild) : (e.GuildCache.GuildRedPoint = !1, 
            gateModel.updateGate(e.ScreenType.GUILD_SCREEN), new e.GuildShowLogic());
        }, i.prototype.createMineArmature = function() {
            this.mineArmature = new e.ArmaturePlayer("mine"), this.mineGroup.addChildAt(this.mineArmature, 0), 
            this.mineArmature.x = .5 * this.mineGroup.width - 64, this.mineArmature.y = .5 * this.mineGroup.height + 20, 
            this.mineArmature.play("wait", -1), this.mineGroup.addEventListener(egret.TouchEvent.TOUCH_TAP, this.mineGroupFunc, this), 
            this.showMapRedPoint();
        }, i.prototype.mineGroupFunc = function(t) {
            return playerModel.highestCrowns < Const.mineLimit ? void e.ComFunc.openComConfirmPanel(e.AcLockType.mine) : (soundModel.buttonOpen(), 
            void hortor.ScreenManager.showScreen(e.ScreenType.MAP_SCREEN, {
                mapInfo: islandModel.mapInfo,
                idx: playerModel.island
            }));
        }, i.prototype.showMapRedPoint = function() {
            this.mapRedPoint.visible = gateModel.guide[e.AcLockType.mine] && (islandModel.ableToMineCount > 0 || MapProxy.mapFullRedPoint);
        }, i.prototype.setPetStatus = function() {
            this.petArmature && this.petArmature.dispose(), "" == playerModel.petName ? (this.petAction = "egg", 
            this.createPetArmature("faceui_egg", this.petAction)) : (this.petAction = playerModel.petSleepRemain > 0 ? Const.pet_Wait : Const.pet_Sleep, 
            this.createPetArmature("faceui_" + playerModel.petName, this.petAction));
        }, i.prototype.createPetArmature = function(t, i) {
            this.petArmature = new e.ArmaturePlayer(t), this.petGroup.addChild(this.petArmature), 
            this.petArmature.x = .5 * this.petGroup.width + 62, this.petArmature.y = .5 * this.petGroup.height + 70, 
            this.petArmature.play(i, -1), this.petGroup.hasEventListener(egret.TouchEvent.TOUCH_TAP) || this.petGroup.addEventListener(egret.TouchEvent.TOUCH_TAP, this.petGroupFunc, this);
        }, i.prototype.petGroupFunc = function(t) {
            playerModel.crowns < Const.petLimit ? e.ComFunc.openComConfirmPanel(e.AcLockType.pet) : hortor.ScreenManager.currentScreen = e.ScreenType.PET_SCREEN, 
            soundModel.buttonOpen();
        }, i.prototype.wallTaskFunc = function() {
            gateModel.isWxgame && (platform.user.wallSdkLogOpenTaskPanel(), wallSdkModel.canGoto = 0, 
            platform.user.wallSdkGetTasks(function(t) {
                wallSdkModel.update(t), gateModel.updateGate(e.WindowType.WINDOW_WALL_TASK), 0 == t.tasks.length ? hortor.TipManager.bubble("功能维护中") : hortor.WindowManager.showWindow(e.WindowType.WINDOW_WALL_TASK);
            }));
        }, i.prototype.crownsChange = function() {
            var t = hortor.ObjectPool.getObject(e.ArmaturePlayer, "buildeffects", "buildeffects");
            t.x = 31, t.y = 29, this.starGroup.addChild(t), t.play("build_star", 1, function() {
                t.parent.removeChild(t), hortor.ObjectPool.disposeObject(t);
            }, this);
        }, i.prototype.showAddTween = function(e) {
            if (this.isOpen) {
                var t = egret.Tween.get(e);
                t.to({
                    scaleX: 1.4,
                    scaleY: 1.4
                }, 300, egret.Ease.quadOut).to({
                    scaleX: 1,
                    scaleY: 1
                }, 100);
            }
        }, i.prototype.showActBtnAction = function(e) {
            var t = this, i = this, n = t.foldPoint, o = 0;
            if (egret.Tween.removeTweens(n), 0 == e) {
                n.rotation = o;
                var a = egret.Tween.get(n, {
                    loop: !0
                });
                a.wait(4e3).to({
                    rotation: 1440
                }, 1e3, egret.Ease.quartInOut);
            } else if (1 == e) {
                n.rotation = o;
                var r = egret.Tween.get(n);
                r.to({
                    rotation: 540
                }, 300, egret.Ease.quadIn).call(function() {});
            } else if (2 == e) {
                var r = egret.Tween.get(n);
                r.to({
                    rotation: n.rotation - 540
                }, 300, egret.Ease.backOut).call(function() {
                    i.showActBtnAction(0);
                });
            }
        }, i.prototype.showActTipAction = function(e) {
            var t = this;
            if (t.toolTips.visible = e, e) {
                var i = 300, n = t.toolTips.x, o = egret.Tween.get(t.toolTips, {
                    loop: !0
                });
                o.to({
                    x: n + 10
                }, i).to({
                    x: n
                }, i).to({
                    x: n - 10
                }, i).to({
                    x: n
                }, i);
            } else egret.Tween.removeTweens(t.toolTips);
        }, i.UPDATE = "faceui_update", i;
    }(e.WindowBase);
    e.FaceUI = t, __reflect(t.prototype, "game.FaceUI");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i(e, i, n, o, a, r) {
            return void 0 === r && (r = !0), t.call(this, e, i, n, o, r) || this;
        }
        return __extends(i, t), i.prototype.loadSkin = function() {
            this.skinPath = "faceUI/MenuFocusSkin";
        }, i.prototype.onMenuInit = function() {
            this.iconAnimation = new hortor.ArmaturePlayer(e.ResourcePath.getDragonPath(this.iconName)), 
            this.iconAnimation.scaleX = this.iconAnimation.scaleY = .9, this.iconAnimation.anchorOffsetX = -50, 
            this.iconAnimation.anchorOffsetY = -44, this.aniGroup.addChild(this.iconAnimation), 
            this.iconAnimation.play(gateModel.checkFocus ? "5M" : "hdzs", 0), this.redPoint.visible = !1;
        }, i;
    }(e.Menu);
    e.FocusMenu = t, __reflect(t.prototype, "game.FocusMenu");
}(game || (game = {}));

var hortor;

!function(e) {
    var t = function(e) {
        function t() {
            return e.call(this) || this;
        }
        return __extends(t, e), t.prototype.start = function(t, i) {
            void 0 === i && (i = null), e.prototype.start.call(this, t), egret.Tween.get(t, {
                loop: !0
            }).to({
                scaleX: 1.05,
                scaleY: 1.05
            }, 1e3, egret.Ease.quadInOut).to({
                scaleX: 1,
                scaleY: 1
            }, 800, egret.Ease.quadInOut).wait(600);
        }, t.prototype.stop = function(t, i) {
            void 0 === i && (i = null), e.prototype.stop.call(this, t), egret.Tween.removeTweens(t), 
            t.scaleX = t.scaleY = 1;
        }, t;
    }(e.EffectBase);
    e.BreathEffect = t, __reflect(t.prototype, "hortor.BreathEffect");
}(hortor || (hortor = {}));

var game;

!function(e) {
    var t = function(t) {
        function i(e, i) {
            var n = t.call(this) || this;
            return n.container = e, n.bg = i, n.menus = [], n;
        }
        return __extends(i, t), i.prototype.addMenu = function(e) {
            return this.menus.push(e), e.onShowChange = this.changeMenuView.bind(this), this;
        }, i.prototype.onState = function(t) {
            for (var i = 0; i < this.menus.length; i++) {
                var n = this.menus[i];
                uiModel.onState(e.UINameType.menu + "_" + n.menuId, n, t);
            }
            e.OpenFuncManager.updateLockMenu();
        }, i.prototype.start = function() {
            this.sortMenus(), this.isStarted = !0;
            for (var e = 0; e < this.menus.length; e++) {
                var t = this.menus[e];
                t.initIndex = e, this.changeMenuView(t, t.isShow);
            }
        }, i.prototype.sortMenus = function() {
            this.menus.sort(function(e, t) {
                return e.isShow == t.isShow ? e.index == t.index ? 0 : e.index < t.index ? -1 : 1 : e.isShow ? -1 : 1;
            });
        }, i.prototype.changeMenuView = function(e, t) {
            if (this.isStarted) {
                this.sortMenus();
                for (var i = 20, n = 0; n < this.menus.length; n++) {
                    var o = this.menus[n];
                    o.x = o.anchorOffsetX, o.y = n * o.height + o.anchorOffsetY, o.isRandom && (o.y += 10), 
                    o.isShow && !o.isRandom && (i += o.height);
                }
                if (t) {
                    var a = this.menus.indexOf(e);
                    -1 != a && e.showMenu(this.container);
                } else e.hideMenu();
                this.bg && (this.bg.height = i);
            }
        }, i;
    }(hortor.View);
    e.MenuGroup = t, __reflect(t.prototype, "game.MenuGroup");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.skinPath = "faceUI/activityUI/ActivityMenuItemSkin", e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.addEventListener(egret.TouchEvent.TOUCH_TAP, this.openAcView, this);
        }, i.prototype.onData = function() {
            this.actData = this.data, this.bg.source = e.ResourcePath.getActBannerImage("act_ban_" + this.actData.type), 
            this.lastTime.visible = this.actData.type != e.ActivityType.KillTitan && "expect" != this.actData.type;
            var t = activityModel.getGate(this.data.type);
            this.redPoint.visible = t ? t.red : !1, this.actData.onUpdate = this.onTimeUpdate.bind(this), 
            uiModel.onShow(e.UINameType.actItem + "_" + this.actData.type, this);
        }, i.prototype.onTimeUpdate = function(e) {
            this.lastTimeLabel.text = "剩余时间:" + e;
        }, i.prototype.openAcView = function() {
            var t = this;
            soundModel.buttonOpen(), "expect" != this.actData.type && hortor.WindowManager.hideWindow(e.WindowType.WINDOW_ACT_MENU, function() {
                activityModel.enterActivity(t.actData.type);
            });
        }, i;
    }(e.ItemRenderBase);
    e.ActivityMenuItem = t, __reflect(t.prototype, "game.ActivityMenuItem");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this, !1) || this;
            return e.effect = new hortor.SlideEffect(1), e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            var t = this;
            this.baseScroller.viewport = this.baseList, this.baseList.itemRenderer = e.ActivityMenuItem, 
            this.listData = new eui.ArrayCollection(), this.baseList.dataProvider = this.listData, 
            this.addClick(this.backBtn, function() {
                soundModel.buttonClose(), t.hide();
            }, this);
        }, i.prototype.onData = function() {
            activityModel.update();
            var t = this.data.guide, i = [];
            for (var n in activityModel.activityMap) {
                var o = activityModel.activityMap[n], a = activityModel.getGate(o.type);
                a && a.show && (a.id == t ? i.unshift(o) : i.push(o));
            }
            if (t || i.reverse(), i.length > 0) {
                var r = new e.ActivityInfo(null);
                r.type = "expect", i.push(r);
            }
            this.listData.source = i, this.emptyGroup.visible = 0 == i.length;
        }, i.prototype.onOpen = function() {
            var t = this.data.guide;
            t ? (e.TutorialPointer.instance.pointTargetByName(e.UINameType.actItem + "_" + t), 
            this.baseScroller.scrollPolicyV = eui.ScrollPolicy.OFF) : this.baseScroller.scrollPolicyV = eui.ScrollPolicy.ON;
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i;
    }(e.WindowBase);
    e.ActivityMenuWindow = t, __reflect(t.prototype, "game.ActivityMenuWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i(e, i, n, o) {
            var a = t.call(this) || this;
            return a.type = "", a.index = 0, a.type = e, a.name = e, a.gateId = o, a.index = i, 
            a.callBack = n, a.skinPath = "faceUI/menuUI/MainMenuItemSkin", a;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.nodeImg.addEventListener(egret.TouchEvent.TOUCH_TAP, this.callBack, this);
            gateModel.getGate(this.gateId);
        }, i.prototype.scaleShow = function() {
            var t = this;
            this.callSafe(function() {
                t.initLabel(), t.newImg.visible = !1, "shop" == t.type && gateModel.getGate(e.WindowType.WINDOW_SHOP).red ? t.newImg.visible = !0 : "mail" == t.type && (t.numGroup.visible = messageModel.mailCountNotOpen > 0, 
                t.numLabel.text = messageModel.mailCountNotOpen.toString()), t.mainGroup.scaleX = t.mainGroup.scaleY = 0, 
                t.mainGroup.alpha = 0, egret.Tween.get(t.mainGroup).wait(170 + 40 * t.index).to({
                    scaleY: 1,
                    scaleX: 1,
                    alpha: 1
                }, 180, egret.Ease.backOut).call(function() {
                    egret.Tween.removeTweens(t.mainGroup);
                });
            }, this);
        }, i.prototype.initLabel = function() {
            switch (this.nodeImg.source = "faceUI_json.icon_" + this.type, this.nodeLabel.source = "faceUI_json.icon_label_" + this.type, 
            this.numGroup.visible = !1, this.type) {
              case "friend":
                (playerModel.friendsEnergyCounts > 0 || messageModel.requests.length > 0) && (this.numLabel.text = playerModel.friendsEnergyCounts + messageModel.requests.length + "", 
                this.numGroup.visible = !0);
                break;

              case "mail":
                (messageModel.newMsgCount > 0 || messageModel.mailCountNotOpen > 0) && (this.numLabel.text = messageModel.newMsgCount + messageModel.mailCountNotOpen + "", 
                this.numGroup.visible = !0);
                break;

              case "build":
                islandModel.ableToBuildCount > 0 && playerModel.island < playerModel.islandCount && (this.numLabel.text = islandModel.ableToBuildCount + "", 
                this.numGroup.visible = !0);
            }
        }, i;
    }(e.ViewBase);
    e.MainMenuItem = t, __reflect(t.prototype, "game.MainMenuItem");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this, !1) || this;
            return e.effect = new hortor.SlideEffect(0), e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            var t = this;
            this.editImg.addEventListener(egret.TouchEvent.TOUCH_TAP, this.editBtnFunc, this), 
            this.vipBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.vipBtnFunc, this), 
            this.vipJihuoImg.addEventListener(egret.TouchEvent.TOUCH_TAP, this.vipBtnFunc, this), 
            this.vipRewardImg.addEventListener(egret.TouchEvent.TOUCH_TAP, this.vipBtnFunc, this), 
            this.copyBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.copyBtnFunc, this), 
            this.offvipIcon.addEventListener(egret.TouchEvent.TOUCH_END, this.onOffVipClick, this), 
            this.offVipRewardImg.addEventListener(egret.TouchEvent.TOUCH_END, this.onOffVipClick, this), 
            hortor.NotificationManager.add(e.NotificationType.MonthCardRefresh, this.initVipIcon, this), 
            this.addMenu("build", 0, this.openBuild), this.addMenu("map", 1, this.openMap), 
            gateModel.iosPay && this.addMenu("shop", 2, this.openShop), this.addMenu("friend", 3, this.openFriend), 
            this.addMenu("enemy", 4, this.openEnemy), this.addMenu("rank", 5, this.openRank), 
            this.addMenu("notice", 6, this.openNotice), this.addMenu("mail", 7, this.openMail), 
            this.addMenu("setting", 8, this.openSetting), gateModel.isWxgame && !gateModel.checkGameClub && this.addMenu("club", 11, this.openClub), 
            gateModel.getGate(e.WindowType.WINDOW_PLAYER_EDIT).bind("red", this.editRedPoint, "visible"), 
            this.addClick(this.backBtn, function() {
                soundModel.buttonClose(), t.hide();
            }, this);
        }, i.prototype.onData = function() {
            if (this.initVipIcon(), this.offVipGroup.visible = !gateModel.isWxgame || gateModel.isWxgame && gateModel.ShareInterFaceId, 
            this.offvipIcon.visible = this.offVipGroup.includeInLayout = gateModel.privilegeAvailable, 
            this.offVipRewardImg.visible = gateModel.privilegeAvailable && !playerModel.isPrivilege, 
            this.offVipRewardImg.visible) {
                var e = this.offVipRewardImg.y;
                egret.Tween.get(this.offVipRewardImg, {
                    loop: !0
                }).to({
                    y: e + 4
                }, 400).to({
                    y: e
                }, 400).to({
                    y: e - 4
                }, 400).to({
                    y: e
                }, 400);
            } else egret.Tween.removeTweens(this.offVipRewardImg);
            this.offvipIcon.source = playerModel.isPrivilege ? "common_img_tq1" : "common_img_tq0", 
            this.nickName.text = util.strSub(playerModel.name, 8), egret.Tween.get(this.group, {
                loop: !1
            }).to({
                x: 0
            }, 400, egret.Ease.backOut).call(function() {}), util.setRemoteAvatar(this.headImg, playerModel.headImg), 
            this.uidCode.text = "游戏ID：" + playerModel.uid;
            for (var t = 0; t < this.menuGroup.numChildren; t++) {
                var i = this.menuGroup.getChildAt(t);
                i.scaleShow();
            }
            this.showInfoView();
        }, i.prototype.initVipIcon = function() {
            this.vipBtn.source = playerModel.monthCardExpired > 0 ? "common_json.common_icon_vip1" : "common_json.common_icon_vip0", 
            this.vipJihuoImg.visible = playerModel.monthCardExpired <= 0 && gateModel.iosPay;
            var e = playerModel.monthCardExpired > 0 && !playerModel.gotMonthCardReward;
            if (this.vipRewardImg.visible = e, this.vipRewardImg.visible) {
                var t = this.vipRewardImg.y;
                egret.Tween.get(this.vipRewardImg, {
                    loop: !0
                }).to({
                    y: t + 4
                }, 400).to({
                    y: t
                }, 400).to({
                    y: t - 4
                }, 400).to({
                    y: t
                }, 400);
            } else egret.Tween.removeTweens(this.vipRewardImg);
            if (this.vipJihuoImg.visible) {
                var t = this.vipJihuoImg.y;
                egret.Tween.get(this.vipJihuoImg, {
                    loop: !0
                }).to({
                    y: t + 4
                }, 400).to({
                    y: t
                }, 400).to({
                    y: t - 4
                }, 400).to({
                    y: t
                }, 400);
            } else egret.Tween.removeTweens(this.vipJihuoImg);
        }, i.prototype.showInfoView = function() {
            var e = playerModel.constellation || 0, t = playerModel.province || 0, i = playerModel.city || 0;
            if (this.xingzuoLabel.text = "" + XingZuo[e], 0 == t) this.posLabel.text = "未设置"; else {
                var n = Province[t] + " ";
                0 != playerModel.city && (n += City[t][i]), this.posLabel.text = n;
            }
        }, i.prototype.addMenu = function(t, i, n, o) {
            var a = new e.MainMenuItem(t, i, n, o);
            this.menuGroup.addChild(a), this.menuGroup.height = 206 * Math.ceil(this.menuGroup.numChildren / 3);
        }, i.prototype.editBtnFunc = function() {
            soundModel.buttonOpen(), hortor.WindowManager.currentWindow = e.WindowType.WINDOW_PLAYER_EDIT;
        }, i.prototype.vipBtnFunc = function() {
            soundModel.buttonOpen(), hortor.WindowManager.currentWindow = e.WindowType.WINDOW_MONTHCARD;
        }, i.prototype.copyBtnFunc = function() {
            if (soundModel.buttonOpen(), gateModel.isWxgame) platform.common.setClipboardData("" + playerModel.uid, function() {
                platform.common.showToast("已复制", "success", null, 1500);
            }, function() {}, function() {}); else {
                var e = {
                    success: function() {
                        hortor.TipManager.bubble("复制成功");
                    },
                    error: function() {
                        hortor.TipManager.bubble("复制失败");
                    }
                };
                superClipBoard.copy(playerModel.uid, e);
            }
        }, i.prototype.onOffVipClick = function() {
            e.PlatformManager.LogEvent("officalVipShow_menu"), soundModel.buttonOpen(), hortor.WindowManager.currentWindow = e.WindowType.WINDOW_OFFICIALVIP_GET;
        }, i.prototype.openBuild = function() {
            hortor.WindowManager.hideWindow(e.WindowType.WINDOW_MAIN_MENU), hortor.NotificationManager.dispatch(e.NotificationType.WHEEL_TO_ISLAND);
        }, i.prototype.openShop = function() {
            hortor.WindowManager.showWindow(e.WindowType.WINDOW_SHOP, 0);
        }, i.prototype.openMap = function() {
            return playerModel.highestCrowns < Const.mapLimit ? void e.ComFunc.openComConfirmPanel(e.AcLockType.map) : (hortor.WindowManager.hideWindow(e.WindowType.WINDOW_MAIN_MENU), 
            void hortor.ScreenManager.showScreen(e.ScreenType.WORLD_SCREEN));
        }, i.prototype.openFriend = function() {
            hortor.WindowManager.showWindow(e.WindowType.WINDOW_FRIEND, {
                index: 0
            });
        }, i.prototype.openMail = function() {
            hortor.WindowManager.showWindow(e.WindowType.WINDOW_MAIL, {
                index: 0
            });
        }, i.prototype.openEnemy = function() {
            hortor.WindowManager.currentWindow = e.WindowType.WINDOW_ENEMY;
        }, i.prototype.openNotice = function() {
            messageModel.update(!1, function() {
                hortor.WindowManager.showWindow(e.WindowType.WINDOW_NOTICE, messageModel.notices);
            });
        }, i.prototype.openRank = function() {
            hortor.WindowManager.currentWindow = e.WindowType.WINDOW_RANK;
        }, i.prototype.openSetting = function() {
            HttpService.get(e.ServerMsg.SETTING_SHOW, "uid=" + playerModel.uid, function(t) {
                hortor.WindowManager.showWindow(e.WindowType.WINDOW_SETTING, t);
            });
        }, i.prototype.openComplaint = function() {
            console.log("跳转投诉===>");
        }, i.prototype.openClub = function() {
            console.log("打开圈子===>"), e.PlatformManager.navigateToMiniProgram();
        }, i;
    }(e.WindowBase);
    e.MainMenuWindow = t, __reflect(t.prototype, "game.MainMenuWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.payGroup.addEventListener(egret.TouchEvent.TOUCH_TAP, this.getBtnFunc, this);
            var e = new hortor.TouchScaleEffect();
            e.start(this.payGroup);
        }, i.prototype.onData = function() {}, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.onEventCenterRegister = function() {}, i.prototype.onEventCenterRemove = function() {}, 
        i.prototype.closeBtnFunc = function() {
            util.jzlog("ljz/tod:关闭的时候执行回调函数");
        }, i.prototype.getBtnFunc = function() {
            util.jzlog("请求订单"), e.PlatformManager.pay("newbieGift"), soundModel.buttonOpen();
        }, i;
    }(e.TabWindowBase);
    e.FirstPayGiftWindow = t, __reflect(t.prototype, "game.FirstPayGiftWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.closeBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.closeBtnFunc, this), 
            this.getBtn.addEventListener(egret.TouchEvent.TOUCH_END, this.focus, this);
        }, i.prototype.onData = function() {
            this.width = hortor.StageManager.stageWidth, this.height = hortor.StageManager.stageHeight, 
            this.getBtn.enabled = !0, this.getBtn.icon = "comBtnTxt_json.common_txt_lq", playerModel.isSubscribed && (playerModel.gotNewSubscribedReward ? (this.getBtn.icon = "comBtnTxt_json.common_txt_ylq", 
            this.getBtn.enabled = !1) : egret.Tween.get(this.getBtn, {
                loop: !0
            }).to({
                scaleX: 1.05,
                scaleY: 1.05
            }, 1e3, egret.Ease.quadInOut).to({
                scaleX: 1,
                scaleY: 1
            }, 800, egret.Ease.quadInOut).wait(600));
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.focus = function(t) {
            playerModel.isSubscribed ? playerModel.gotNewSubscribedReward ? util.jzlog("error:已经领取") : HttpService.post(e.ServerMsg.FOCUS_GETREWARD, "uid=" + playerModel.uid, function(t) {
                playerModel.gotNewSubscribedReward = !0, EventCenter.sendEvent(EventConst.openButtonLayerButton), 
                EventCenter.sendEvent(EventConst.RefreshWheelRedPoint), hortor.WindowManager.showWindow(e.WindowType.WINDOW_REWARD, t), 
                hortor.WindowManager.hideWindow(e.WindowType.WINDOW_WXFOCUSTIP);
            }) : (soundModel.buttonClose(), this.closeBtnFunc(), gateModel.isWxgame ? hortor.WindowManager.currentWindow = e.WindowType.WINDOW_WXFOCUS_DESCNEW : (util.jzlog("弹出二维码"), 
            this.hide(), HORTOR_AGENT.showQRCode()));
        }, i.prototype.closeBtnFunc = function() {
            this.hide();
        }, i;
    }(e.WindowBase);
    e.FocuRewardTipWindow = t, __reflect(t.prototype, "game.FocuRewardTipWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(e) {
        function t() {
            return null !== e && e.apply(this, arguments) || this;
        }
        return __extends(t, e), t.prototype.onInit = function() {
            this.closeBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.closeBtnFunc, this);
        }, t.prototype.onData = function() {
            this.closeBtn.touchEnabled = !0;
        }, t.prototype.prepare = function(e, t) {
            e(null);
        }, t.prototype.closeBtnFunc = function() {
            this.closeBtn.touchEnabled = !1, this.hide();
        }, t;
    }(e.WindowBase);
    e.FocusDescNewWindow = t, __reflect(t.prototype, "game.FocusDescNewWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(e) {
        function t() {
            return null !== e && e.apply(this, arguments) || this;
        }
        return __extends(t, e), t.prototype.onInit = function() {
            this.closeBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.closeBtnFunc, this);
        }, t.prototype.onData = function() {
            this.closeBtn.touchEnabled = !0;
        }, t.prototype.prepare = function(e, t) {
            e(null);
        }, t.prototype.closeBtnFunc = function() {
            this.closeBtn.touchEnabled = !1, this.hide();
        }, t;
    }(e.WindowBase);
    e.FocusNoRewardWindow = t, __reflect(t.prototype, "game.FocusNoRewardWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e.curAddEnergyCount = 5, e.curTimeAddEnergyCount = -1, e.nextShareGainEnergy = -1, 
            e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.share_group0.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onClickHelp, this);
            var t = new hortor.TouchScaleEffect();
            t.start(this.share_group0), this.bg.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onClickBg, this), 
            this.ask_Sign.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onClickAskSign, this), 
            EventCenter.addEventListener(EventConst.GetSeniorShareEnergy, this.onEnergy2Box, this), 
            EventCenter.addEventListener(EventConst.OPENFULLBOX_FINISH, this.onOpenBoxFinish, this), 
            null == this.seniorRedBagAmaturetatus && (this.seniorRedBagAmaturetatus = new e.SeniorRedBagAmature("mfnl_baoxiang", this.amature_group, 160, 240), 
            this.seniorRedBagAmaturetatus.armature.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onGetReward, this));
        }, i.prototype.onData = function() {
            var t = this;
            HttpService.post(e.ServerMsg.WX_SENOIRDAYREDBAGSHARE_ENTER, "uid=" + playerModel.uid, function(e) {
                t.updateUI(e);
                var i;
                i = e.boxEnergy > 0 ? "idle_full" : "idle_empty", t.seniorRedBagAmaturetatus.setState(i);
            });
        }, i.prototype.onClickHelp = function() {
            0 != this.getBtn_share0.enabled && (e.PlatformManager.share(e.ShareType.SeniorDailyEnergyShare), 
            this.hideTips());
        }, i.prototype.onGetReward = function() {
            util.jzlog(">>>>>>>>>>>>>>onGetReward");
            dailyModel.seniorDayShare_boxEnergy <= 0 ? dailyModel.seniorDayShare_remainShareCount <= 0 ? hortor.TipManager.tip("今天的奖励已经领完了，明天再来吧！") : hortor.TipManager.tip("快去求助好友获得奖励吧") : (hortor.TipManager.alert("消耗一把钥匙开启宝箱", function() {
                this.seniorRedBagAmaturetatus.setState("open"), soundModel.playSound("freeEnergy_2.mp3");
            }, null, this), this.hideTips());
        }, i.prototype.onOpenBoxFinish = function() {
            if (util.jzlog("》〉》动画播放完毕"), this) {
                var t = this;
                util.jzlog(">>>>>>>>>>>>>>>>>>请求领奖:", e.ServerMsg.WX_SENIORDAYREDBAGSHARE_REWARD, "uid=" + playerModel.uid), 
                HttpService.post(e.ServerMsg.WX_SENIORDAYREDBAGSHARE_REWARD, "uid=" + playerModel.uid, function(i) {
                    util.jzlog("领奖返回了"), t && i.reward && (util.jzlog("收到的data =======", i), t.updateUI(i), 
                    util.jzlog("播放奖励动画."), hortor.WindowManager.showWindow(e.WindowType.WINDOW_REWARD, i), 
                    gateModel.updateGate(e.WindowType.WINDOW_FREE_ENERGY), egret.setTimeout(function() {
                        t && this.seniorRedBagAmaturetatus.setState("idle_empty");
                    }, t, 100));
                });
            }
        }, i.prototype.onClickBg = function(e) {
            util.jzlog(">eve.currentTarget.name = ", e.currentTarget.name), util.jzlog(">eve.target.name = ", e.target.name), 
            "ask_Sign" != e.target.name ? this.hideTips() : this.box_desc_group.visible = !this.box_desc_group.visible;
        }, i.prototype.onClickAskSign = function() {
            util.jzlog(">>>>>onClickAskSign"), soundModel.playSound(e.SoundType.SOUND_PANEL_OPEN);
        }, i.prototype.onEnergy2Box = function(t) {
            var i = t.data;
            egret.setTimeout(function() {
                this.updateUI(i);
            }, this, 200), util.jzlog(">>>>>>>>>>>>>播放能量入宝箱动画"), soundModel.playSound(e.SoundType.SOUND_FREE_ENERGY), 
            this.seniorRedBagAmaturetatus.setState("fill_" + this.curAddEnergyCount);
        }, i.prototype.updateUI = function(t) {
            util.jzlog("updateUI .... data = ", t);
            var i = t.remainShareCount, n = t.boxEnergy, o = t.keyCount;
            if (this.keyCount = o, this.curTimeAddEnergyCount = this.nextShareGainEnergy, null != t.nextShareGainEnergy && (this.nextShareGainEnergy = t.nextShareGainEnergy), 
            -1 == this.curTimeAddEnergyCount && (this.curTimeAddEnergyCount = this.nextShareGainEnergy), 
            util.jzlog(">>>curTimeAddEnergyCount = ", this.curTimeAddEnergyCount), util.jzlog(">>>nextShareGainEnergy = ", this.nextShareGainEnergy), 
            util.jzlog(">>>>>>>remainShareCount = ", i), util.jzlog("boxEnergy = ", n), util.jzlog("keyCount ===", o), 
            null != n && (dailyModel.seniorDayShare_boxEnergy = n, gateModel.updateGate(e.WindowType.WINDOW_FREE_ENERGY)), 
            null != i && (dailyModel.seniorDayShare_remainShareCount = i, gateModel.updateGate(e.WindowType.WINDOW_FREE_ENERGY)), 
            null != n) {
                this.leftNum.text = n;
                var a = 0 != n;
                this.energy.visible = a, this.bubble.visible = a, this.leftX.visible = a, this.leftNum.visible = a, 
                this.letBubbleTrig.visible = a;
            }
            null != o && (this.key_num.text = o), null != i && (this.lefttimedesc_share0.text = "剩余次数：" + i), 
            this.getBtn_share0.enabled = !0;
            var r = dailyModel.seniorDayShare_remainShareCount > 0;
            this.energy1.visible = r, this.energy2.visible = r, this.curtimeaddnum.visible = r, 
            this.getBtn_share0.enabled = r, this.energy0.y = dailyModel.seniorDayShare_remainShareCount <= 0 ? 20 : 6, 
            null != this.curTimeAddEnergyCount && (this.curtimeaddnum.text = "x" + this.nextShareGainEnergy.toString(), 
            this.curAddEnergyCount = this.curTimeAddEnergyCount), gateModel.updateGate(e.WindowType.WINDOW_FREE_ENERGY);
        }, i.prototype.hideTips = function() {
            this.reward_group.visible = !1, this.box_desc_group.visible = !1;
        }, i;
    }(e.TabWindowBase);
    e.FreeEnergyWindow = t, __reflect(t.prototype, "game.FreeEnergyWindow");
}(game || (game = {}));

var seniorRedBagAmature, game;

!function(e) {
    var t = function() {
        function t(e, t, i, n, o, a, r, s) {
            this._nowState = "", this._setAnchorOffsetY = !0, this._first = !1, this._name = e, 
            this._parent = t, util.jzlog(">>>>动画的parent= ", t), this._posX = i, this._posY = n, 
            this._scaleX = o || 1, this._scaleY = a || 1, this._effectGroup = s, _.isUndefined(r) && (r = !0), 
            this._setAnchorOffsetY = r, this.initHeroState();
        }
        return t.prototype.initHeroState = function() {
            return null != this.armature ? void util.jzlog(">>>返回， 返回") : (this.armature = new e.ArmaturePlayer(this._name), 
            this._parent.addChild(this.armature), this.armature.x = this._posX, this.armature.y = this._posY, 
            this.armature.touchEnabled = !0, this.armature.scaleX = this._scaleX, void (this.armature.scaleY = this._scaleY));
        }, t.prototype._addListener = function() {
            this.armature.x = this._posX, this.armature.y = this._posY, this.armature.arAddListener(dragonBones.EventObject.COMPLETE, this.completeHandler, this);
        }, t.prototype.completeHandler = function(e) {
            switch (util.jzlog("completeHandler>>>>>>>>>>>> = ", e.animationName), e.animationName) {
              case "open":
                this.setState("idle_open_full");
                break;

              case "fill_5":
                this.setState("idle_full");
                break;

              case "fill_10":
                this.setState("idle_full");
                break;

              case "fill_15":
                this.setState("idle_full");
            }
        }, t.prototype.update = function() {
            console.trace("update");
        }, t.prototype.setState = function(e, t) {
            var i = this;
            if (e != this._nowState) switch (this._nowState = e, util.jzlog(">>>播放this._nowState = "), 
            util.jzlog(e), this._nowState) {
              case "open":
                util.jzlog("really播放open"), this.armature.play("open", 1, function() {
                    util.jzlog(">>>>>打开完成，播放满的idle_open_full"), i.setState("idle_open_full");
                });
                break;

              case "idle_empty":
                util.jzlog("really播放idle_empty"), this.armature.play("idle_empty", 0);
                break;

              case "idle_full":
                util.jzlog("really播放idle_full"), this.armature.play("idle_full", 0);
                break;

              case "idle_open_empty":
                util.jzlog("really播放idle_open_empty"), this.armature.play("idle_open_empty", 1);
                break;

              case "idle_open_full":
                util.jzlog("really播放idle_open_full"), this.armature.play("idle_open_full", 1), EventCenter.sendEvent(EventConst.OPENFULLBOX_FINISH);
                break;

              case "fill_5":
                util.jzlog("really播放fill_5"), util.jzlog(">>>>>>真正播放能量入箱动画"), egret.setTimeout(function() {
                    i && (util.jzlog(">>>>>时间到,开始播放了"), i.armature.play("fill_5", 1, function() {
                        util.jzlog(">>>>>fill_5完成，播放满的idle_open_full"), i.setState("idle_full");
                    }));
                }, this, 1500);
                break;

              case "fill_10":
                util.jzlog("really播放fill_10"), util.jzlog(">>>>>>真正播放能量入箱动画"), egret.setTimeout(function() {
                    i && (util.jzlog(">>>>>时间到,开始播放了"), i.armature.play("fill_10", 1, function() {
                        util.jzlog(">>>>>fill_10完成，播放满的idle_open_full"), i.setState("idle_full");
                    }));
                }, this, 1e3);
                break;

              case "fill_15":
                util.jzlog("really播放fill_15"), util.jzlog(">>>>>>真正播放能量入箱动画"), egret.setTimeout(function() {
                    i && (util.jzlog(">>>>>时间到,开始播放了"), i.armature.play("fill_15", 1, function() {
                        util.jzlog(">>>>>fill_15完成，播放满的idle_open_full"), i.setState("idle_full");
                    }));
                }, this, 1e3);
                break;

              default:
                util.jzlog(">>>>>>>>>没有对应的名字", this._nowState);
            }
        }, t.prototype.dispose = function() {
            this.armature && (this.armature.parent.removeChild(this.armature), this.armature = null);
        }, t.prototype.setSlotArmature = function(e, t) {
            this.armature && this.armature.setSlotArmature(e, t);
        }, t;
    }();
    e.SeniorRedBagAmature = t, __reflect(t.prototype, "game.SeniorRedBagAmature");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.mData = {
                initMsg: "",
                inviteCode: "",
                requestType: 0
            }, e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.confirmBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.confirmBtnFunc, this), 
            this.descInput.addEventListener(egret.Event.CHANGE, this.textInputFunc, this), this.kBtnClose.addEventListener(egret.TouchEvent.TOUCH_TAP, this.hide, this);
        }, i.prototype.onOpen = function() {}, i.prototype.onData = function() {
            this.mData = this.data, this.tipsLabel.visible = !0, this.descInput.prompt = this.mData && this.mData.initMsg ? this.mData.initMsg : "请输入好友申请验证信息";
        }, i.prototype.confirmBtnFunc = function() {
            var t = this, i = this.descInput.text;
            "" == i && this.mData.initMsg && (i = this.mData.initMsg), i = e.ComFunc.trim(i), 
            this.confirmBtn.touchEnabled = !1;
            ({
                uid: playerModel.uid,
                code: this.mData.inviteCode,
                message: i,
                type: this.mData.requestType
            });
            i = e.ComFunc.enCodeHtml(i), HttpService.post(e.ServerMsg.FRIEND_JOIN, "uid=" + playerModel.uid + "&code=" + this.mData.inviteCode + "&message=" + i + "&type=" + this.mData.requestType, function(e) {
                e.isFriend ? hortor.TipManager.tip("船长大人！对方已经是你的好友!") : hortor.TipManager.tip("申请好友成功"), 
                t.hide();
            }, function() {
                t.hide();
            }, this);
        }, i.prototype.textInputFunc = function() {
            for (var e = 0, t = this, i = t.descInput.text, n = 0; n < i.length; n++) {
                var o = new RegExp("[\\u4E00-\\u9FFF]", "");
                e += o.test(i[n]) ? 2 : 1;
            }
            if (40 >= e) t.descInput.text = i; else {
                for (var a = "", e = 0, i = t.descInput.text, n = 0; n < i.length; n++) {
                    var o = new RegExp("[\\u4E00-\\u9FFF]", "");
                    e += o.test(i[n]) ? 2 : 1, 40 >= e && (a += i[n]);
                }
                t.descInput.text = a;
            }
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.onClose = function() {
            this.descInput.text = "", this.confirmBtn.touchEnabled = !0;
        }, i;
    }(e.WindowBase);
    e.AddFriendWindow = t, __reflect(t.prototype, "game.AddFriendWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return t.call(this) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.confirmBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.confirmBtnFunc, this), 
            this.descInput.addEventListener(egret.Event.CHANGE, this.textInputFunc, this);
        }, i.prototype.onOpen = function() {}, i.prototype.onData = function() {
            var e = this;
            if (this.tipsLabel.visible = !0, this.confirmBtn.touchEnabled = !0, this.descInput.prompt = "欢迎回来，加个好友一起玩吧！", 
            this.data) {
                e.numLabel.visible = !0;
                var t = e.data.data.count, i = e.data.data.dayTakeMax;
                e.numLabel.text = "今日已领回归礼盒：" + t + "/" + i;
            } else e.numLabel.visible = !1;
        }, i.prototype.confirmBtnFunc = function() {
            var t = this, i = this, n = e.ComFunc.trim(i.descInput.text || i.descInput.prompt);
            this.confirmBtn.touchEnabled = !1;
            ({
                uid: playerModel.uid,
                code: i.data.inviteCode,
                message: n
            });
            n = e.ComFunc.enCodeHtml(n), HttpService.post(e.ServerMsg.FRIEND_JOIN, "uid=" + playerModel.uid + "&code=" + this.data.inviteCode + "&message=" + n, function(e) {
                e.isFriend ? hortor.TipManager.tip("船长大人！对方已经是你的好友!") : hortor.TipManager.tip("申请好友成功"), 
                t.hide();
            }, function() {
                t.hide();
            }, this);
        }, i.prototype.textInputFunc = function() {
            for (var e = 0, t = this, i = t.descInput.text, n = 0; n < i.length; n++) {
                var o = new RegExp("[\\u4E00-\\u9FFF]", "");
                e += o.test(i[n]) ? 2 : 1;
            }
            if (40 >= e) t.descInput.text = i; else {
                for (var a = "", e = 0, i = t.descInput.text, n = 0; n < i.length; n++) {
                    var o = new RegExp("[\\u4E00-\\u9FFF]", "");
                    e += o.test(i[n]) ? 2 : 1, 40 >= e && (a += i[n]);
                }
                t.descInput.text = a;
            }
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i;
    }(e.WindowBase);
    e.AddRegressFriendWindow = t, __reflect(t.prototype, "game.AddRegressFriendWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.mIdx = -1, e.mStatus = -1, e.skinName = "ChatGuildItemSkin", e;
        }
        return __extends(i, t), Object.defineProperty(i.prototype, "h", {
            get: function() {
                return 200;
            },
            enumerable: !0,
            configurable: !0
        }), i.prototype.setData = function(t, i) {
            void 0 === i && (i = -1), this.kBtnApply.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onApply, this), 
            this.kGrpHead.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onTouchHead, this), 
            this.mData = t, this.kLabelStar.text = "" + this.mData.crowns, util.setRemoteAvatar(this.kImgAvatar, this.mData.headImg), 
            this.kLabelTime.text = e.ComFunc.showTimeNormal(this.mData.createTime || moment().unix()), 
            this.kLabelName.text = util.strSub(this.mData.name, 5), this.kImgAvatarFrame.source = 1 == this.mData.gender ? "friend_json.friend_img_sj6" : "friend_json.friend_img_sj7";
            var n = JSON.parse(t.content);
            this.kLabelName.text = util.strSub(n.guildName, 8), this.kLabelMember.text = "成员:" + n.memberCount + "/20", 
            this.kLabelDesc.text = "" + n.content, this.kLabelId.text = "ID:" + n.gid, (0 == n.mode || 1 == n.mode) && n.needCrown <= playerModel.crowns ? (this.kBtnApply.enabled = !0, 
            e.ComFunc.setDefaultFilters(this.kBtnApply)) : (this.kBtnApply.enabled = !1, e.ComFunc.setGrayFilters(this.kBtnApply)), 
            this.kBtnApply.kLabelStarNum.text = "" + n.needCrown, this.kBtnApply.kLabelApply.text = 0 == n.mode ? "加入" : 1 == n.mode ? "申请" : "不可加入", 
            1 == n.mode ? this.mStatus = 0 : (0 == n.mode || 2 == n.mode) && (this.mStatus = 1);
        }, i.prototype.onTouchHead = function() {
            var t = this;
            this.mData.uid != playerModel.uid && HttpService.get(e.ServerMsg.MORE_PLAYER, "uid=" + playerModel.uid + "&fid=" + this.mData.uid + "&checksum=" + this.mData.checksum + "&algorithm=&showDetails=true", function(i) {
                _.extend(t.mData, i);
                hortor.WindowManager.showWindow(e.WindowType.WINDOW_PLAYERINFO, {
                    playerInfo: t.mData,
                    type: 0,
                    from: Const.WorldChat
                });
            });
        }, i.prototype.onApply = function() {
            if (playerModel.highestCrowns < Const.guildLimit) return void hortor.TipManager.tip(Const.LimitText_20);
            if (playerModel.guild && playerModel.guild.gid > 0) return void hortor.TipManager.tip("你已经有海盗团了！");
            var t = JSON.parse(this.mData.content);
            return 2 == t.mode ? void hortor.TipManager.tip("该海盗团不允许任何人加入") : t.needCrown > playerModel.crowns ? void hortor.TipManager.tip("等级不满足要求") : (this.kBtnApply.enabled = !1, 
            e.ComFunc.setGrayFilters(this.kBtnApply), void HttpService.post(e.ServerMsg.GUILD_JOIN, "uid=" + playerModel.uid + "&gid=" + t.gid, function(t) {
                t.isAutoJoin ? (hortor.TipManager.tip("加入成功!"), playerModel.guild.gid = t.guild.gid, 
                new e.GuildShowLogic()) : hortor.TipManager.tip("申请已发出");
            }));
        }, i.prototype.clear = function() {
            this.kBtnApply.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.onApply, this);
        }, i;
    }(eui.Component);
    e.ChatGuildItem = t, __reflect(t.prototype, "game.ChatGuildItem");
}(game || (game = {})), window.game.ChatGuildItem = game.ChatGuildItem;

var game;

!function(e) {
    var t = function(t) {
        function i(e) {
            var i = t.call(this) || this;
            return i.remainTime = 120, i.idx = -1, i.isRecall = !1, i._height = 100, i.idx = e, 
            i.once(egret.Event.COMPLETE, i.createCompleteEvent, i), i.once(egret.Event.REMOVED_FROM_STAGE, i.removeFunc, i), 
            i.skinName = "ChatInfoNormalItemSkin", i;
        }
        return __extends(i, t), Object.defineProperty(i.prototype, "height", {
            get: function() {
                return this._height;
            },
            set: function(e) {
                this._height = e;
            },
            enumerable: !0,
            configurable: !0
        }), i.prototype.createCompleteEvent = function(e) {
            this.reportBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.reportBtnFunc, this), 
            this.giftGroup.addEventListener(egret.TouchEvent.TOUCH_TAP, this.giftGroupFunc, this);
        }, i.prototype.removeFunc = function() {
            this.reportBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.reportBtnFunc, this), 
            this.giftGroup.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.giftGroupFunc, this), 
            egret.Tween.removeTweens(this.giftGroup);
        }, i.prototype.setData = function(t) {
            this.data = t, this.invalidateState(), this.data.hasOwnProperty("mtp") && 7 == this.data.mtp && (this.isRecall = !0);
            var i = this.data.uid == playerModel.uid ? playerModel.headImg : chatModel.PersonInfo.headImg, n = this.data.uid == playerModel.uid ? playerModel.name : chatModel.PersonInfo.name, o = this.data.uid == playerModel.uid ? playerModel.gender : chatModel.PersonInfo.gender, a = this.data.uid == playerModel.uid ? playerModel.monthCardExpired > 0 : chatModel.PersonInfo.isVip, r = this.data.uid == playerModel.uid ? playerModel.province : chatModel.PersonInfo.province, s = this.data.uid == playerModel.uid ? playerModel.city : chatModel.PersonInfo.city, l = this.data.uid == playerModel.uid ? playerModel.crowns : chatModel.PersonInfo.crowns, d = this.data.uid == playerModel.uid ? playerModel.isPrivilege : chatModel.PersonInfo.isPrivilege;
            if (this.contentBg.visible = !d, this.contentBgVip.visible = d, util.setRemoteAvatar(this.headImg, i), 
            this.timeLabel.text = e.ComFunc.showTimeNormal(this.data.createTime || moment().unix()), 
            this.headBoder.source = 1 == o ? "friend_json.friend_img_sj6" : "friend_json.friend_img_sj7", 
            this.userName.text = n.length > 7 ? n.substr(0, 7) + "..." : n, this.content.text = this.data.content, 
            this.contentBg.visible ? (this.content.top = 59, this.contentBg.width = this.content.width + 30 < 78 ? 78 : this.content.width + 30, 
            this.contentBg.height = this.content.height + 30 < 49 ? 49 : this.content.height + 30) : (this.content.top = 67, 
            this.content.touchEnabled = !1, this.contentBgVip.width = this.content.width + 60 < 125 ? 125 : this.content.width + 60, 
            this.contentBgVip.height = this.content.height + 40 < 59 ? 59 : this.content.height + 40), 
            this.data.uid != playerModel.uid) {
                this.contentBgVip.visible ? (this.contentBgVip.width += this.giftGroup.width / 2 + 20, 
                this.giftGroup.x = this.contentBgVip.x + this.contentBgVip.left + this.contentBgVip.width - 50, 
                this.giftGroup.y = this.contentBgVip.y + this.contentBgVip.height - this.giftGroup.height / 2 - 12, 
                this.tipsLabel.y = this.contentBgVip.y + this.contentBgVip.height + 5) : (this.contentBg.width += this.giftGroup.width / 2 + 30, 
                this.giftGroup.x = this.contentBg.x + this.contentBg.left + this.contentBg.width - this.giftGroup.width / 2 - 10, 
                this.giftGroup.y = this.contentBg.y + this.contentBg.height - this.giftGroup.height / 2 - 12, 
                this.tipsLabel.y = this.contentBg.y + this.contentBg.height + 5), this.tipsLabel.visible = !0, 
                this.giftGroup.visible = !0;
                var u = this.data.isTake;
                u ? (this.giftImg.source = "regressGift_gift1_png", egret.Tween.removeTweens(this.giftGroup), 
                this.giftGroup.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.giftGroupFunc, this)) : this.data.remain > 0 ? (this.rockTween(this.giftGroup), 
                this.giftImg.source = "regressGift_gift0_png") : (this.giftImg.source = "regressGift_gift2_png", 
                egret.Tween.removeTweens(this.giftGroup), this.giftGroup.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.giftGroupFunc, this));
            } else this.giftGroup.visible = !1, egret.Tween.removeTweens(this.giftGroup), this.giftGroup.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.giftGroupFunc, this);
            this.kImgVip.visible = Boolean(a), this.infoGroup.x = 102 + this.userName.width + 10, 
            this.reportBtn.visible = this.reportBtn.includeInLayout = this.data.uid != playerModel.uid, 
            this.reportTips.includeInLayout = this.reportTips.visible = this.data.uid != playerModel.uid && t.reportCount > e.ComFunc.getReportLimit(l), 
            this.postionIcon.includeInLayout = this.postionIcon.visible = !this.reportTips.visible && r > 0 && Province[r], 
            this.postionLabel.includeInLayout = this.postionLabel.visible = !this.reportTips.visible && r > 0 && Province[r], 
            this.postionLabel.visible && (this.postionLabel.text = e.ComFunc.getUserLocation(r, s));
        }, i.prototype.rockTween = function(e) {
            egret.Tween.removeTweens(e), egret.Tween.get(e, {
                loop: !0
            }).to({
                rotation: 3
            }, 50).to({
                rotation: 0
            }, 50).to({
                rotation: -3
            }, 50).to({
                rotation: 0
            }, 50).to({
                rotation: 3
            }, 50).to({
                rotation: 0
            }, 50).to({
                rotation: -3
            }, 50).to({
                rotation: 0
            }, 50).wait(800);
        }, i.prototype.reportBtnFunc = function() {
            console.log("举报");
            var e = this.data, t = e.uid == playerModel.uid ? playerModel.name : chatModel.PersonInfo.name;
            hortor.TipManager.alert("确定要举报" + t + "吗？");
        }, i.prototype.giftGroupFunc = function() {
            var t = this, i = this.data.uid, n = this.data.mid, o = this.idx;
            HttpService.post(e.ServerMsg.REGRESS_TAKE_ATTACH_GIFT, "uid=" + playerModel.uid + "&fid=" + i + "&mid=" + n + "&idx=" + o, function(i) {
                i && i.reward && (playerModel.updateAll(i), t && (t.data.isTake = !0), t.giftImg.source = "regressGift_gift1_png", 
                egret.Tween.removeTweens(t.giftGroup), t.giftGroup.removeEventListener(egret.TouchEvent.TOUCH_TAP, t.giftGroupFunc, t), 
                hortor.WindowManager.showWindow(e.WindowType.WINDOW_REWARD, i.reward, null, null, function() {
                    hortor.WindowManager.showWindow(e.WindowType.WINDOW_REGRESSGIFT);
                }));
            });
        }, Object.defineProperty(i.prototype, "contentHeight", {
            get: function() {
                var e = this.contentBg.visible ? this.contentBg.height + this.contentBg.y : this.contentBgVip.height + this.contentBgVip.y;
                return Math.max(99, e);
            },
            enumerable: !0,
            configurable: !0
        }), i.prototype.getCurrentState = function() {
            return this.data.uid == playerModel.uid ? "self" : "others";
        }, i;
    }(eui.Component);
    e.ChatInfoNormalItem = t, __reflect(t.prototype, "game.ChatInfoNormalItem");
}(game || (game = {})), window.game.ChatInfoNormalItem = game.ChatInfoNormalItem;

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e._height = 100, e.mIsBackNode = !1, e.mIdx = -1, e.mIsWorld = !1, e.mGenderColor = [ 16734615, 42223 ], 
            e.skinName = "ChatNormalItemSkin", e;
        }
        return __extends(i, t), Object.defineProperty(i.prototype, "h", {
            get: function() {
                return this._height;
            },
            set: function(e) {
                this._height = e;
            },
            enumerable: !0,
            configurable: !0
        }), i.prototype.setData = function(t, i, n) {
            void 0 === i && (i = -1), void 0 === n && (n = !1), this.kImgReport.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onReport, this), 
            this.kImgBack.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onGetBackGift, this), 
            this.kHeadGroup.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onHeadGroup, this), 
            this.mData = t, this.mIdx = i, this.mIsWorld = n, n ? (this.kImgBack.visible = Boolean("regressdChat" == this.mData.msgType), 
            util.rockTween(this.kImgBack)) : this.kImgBack.visible = Boolean(this.mData.hasOwnProperty("mtp") && 7 == this.mData.mtp), 
            this.mIsBackNode = this.kImgBack.visible, this.kLabelTime.text = e.ComFunc.showTimeNormal(this.mData.createTime || moment().unix()), 
            this.kGrpMine.visible = Boolean(this.mData.uid == playerModel.uid), this.kGrpOther.visible = !this.kGrpMine.visible, 
            this.kGrpOther.visible ? (this.mIsWorld ? (util.setRemoteAvatar(this.kImgAvatarOther, this.mData.headImg), 
            this.kLabelNameOther.text = util.strSub(this.mData.name, 5), Boolean(1 == this.mData.gender) ? this.kImgAvatarFrameOther.source = "friend_json.friend_img_sj6" : this.kImgAvatarFrameOther.source = "friend_json.friend_img_sj7", 
            Boolean(1 == this.mData.gender) ? this.kLabelNameOther.textColor = this.mGenderColor[1] : this.kLabelNameOther.textColor = this.mGenderColor[0], 
            this.kLabelStarOther.text = "" + this.mData.crowns, this.mData.isVip || (this.kImgVip.includeInLayout = !1, 
            this.kImgVip.visible = !1), this.mData.isPrivilege && (this.kImgChatBg.source = "friend_json.friend_chat_bg_privilege", 
            this.kImgChatArrow.source = "friend_json.friend_chat_arrow_privilege", this.kLabelContentOther.textColor = 8019512, 
            this.kImgVipSign.visible = !0), this.mData.province > 0 ? this.kLabelPos.text = e.ComFunc.getUserLocation(this.mData.province, this.mData.city) : this.kLabelPos.includeInLayout = this.kLabelPos.visible = this.kImgPosSign.includeInLayout = this.kImgPosSign.visible = !1) : (util.setRemoteAvatar(this.kImgAvatarOther, chatModel.PersonInfo.headImg), 
            this.kLabelNameOther.text = util.strSub(chatModel.PersonInfo.name, 5), Boolean(1 == chatModel.PersonInfo.gender) ? this.kImgAvatarFrameOther.source = "friend_json.friend_img_sj6" : this.kImgAvatarFrameOther.source = "friend_json.friend_img_sj7", 
            Boolean(1 == chatModel.PersonInfo.gender) ? this.kLabelNameOther.textColor = this.mGenderColor[1] : this.kLabelNameOther.textColor = this.mGenderColor[0], 
            this.kLabelStarOther.text = "" + chatModel.PersonInfo.crowns, chatModel.PersonInfo.isVip || (this.kImgVip.includeInLayout = !1, 
            this.kImgVip.visible = !1, this.kImgVipSign.visible = !1), chatModel.PersonInfo.isPrivilege && (this.kImgChatBg.source = "friend_json.friend_chat_bg_privilege", 
            this.kImgChatArrow.source = "friend_json.friend_chat_arrow_privilege", this.kLabelContentOther.textColor = 8019512, 
            this.kImgVipSign.visible = !0), chatModel.PersonInfo.province > 0 ? this.kLabelPos.text = e.ComFunc.getUserLocation(chatModel.PersonInfo.province, chatModel.PersonInfo.city) : this.kLabelPos.includeInLayout = this.kLabelPos.visible = this.kImgPosSign.includeInLayout = this.kImgPosSign.visible = !1), 
            this.kLabelContentOther.text = this.mData.content, this.kLabelContentOther.textWidth >= 350 && (this.kLabelContentOther.width = 350), 
            this.mIsBackNode ? (this.kImgChatBg.right = -50, this.kImgBack.source = this.mData.isTake ? "friend_json.friend_img_gui3" : "friend_json.friend_img_gui", 
            this.kImgChatBg.source = "friend_json.friend_chat_bg_back", this.kImgChatArrow.source = "friend_json.friend_chat_arrow_back", 
            this.kLabelContentOther.textColor = 16777215, this.mIsWorld || (this.mData.isTake ? (this.kImgBack.source = "friend_json.friend_img_gui3", 
            this.kImgBack.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.onGetBackGift, this), 
            egret.Tween.removeTweens(this.kImgBack)) : this.mData.remain > 0 ? (util.rockTween(this.kImgBack), 
            this.kImgBack.source = "friend_json.friend_img_gui") : (this.kImgBack.source = "friend_json.friend_img_gui2", 
            egret.Tween.removeTweens(this.kImgBack), this.kImgBack.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.onGetBackGift, this)))) : this.kImgChatBg.right = -22, 
            this.h = 78 + this.kLabelContentOther.textHeight + 35, this.height = this.h) : (util.setRemoteAvatar(this.kImgAvatarMine, playerModel.headImg), 
            Boolean(1 == playerModel.gender) ? this.kImgAvatarFrameMine.source = "friend_json.friend_img_sj6" : this.kImgAvatarFrameMine.source = "friend_json.friend_img_sj7", 
            Boolean(1 == this.mData.gender) ? this.kLabelMineName.textColor = this.mGenderColor[1] : this.kLabelMineName.textColor = this.mGenderColor[0], 
            this.kLabelContentMine.text = this.mData.content, this.kLabelMineStar.text = "" + playerModel.crowns, 
            this.kLabelMineName.text = playerModel.name, this.kLabelContentMine.textWidth >= 350 && (this.kLabelContentMine.width = 350), 
            this.h = 78 + this.kLabelContentMine.textHeight + 35, this.height = this.h);
        }, i.prototype.clear = function() {
            this.kImgReport.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.onReport, this), 
            this.kImgBack.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.onGetBackGift, this), 
            this.kHeadGroup.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.onHeadGroup, this);
        }, i.prototype.onReport = function() {
            var t = this, i = "";
            if (this.mIsWorld) {
                if (i = this.mData.uid == playerModel.uid ? playerModel.name : this.mData.name, 
                this.mData.uid == playerModel.uid) return void hortor.TipManager.tip("举报成功");
            } else i = chatModel.PersonInfo.name;
            hortor.TipManager.alert("确定要举报" + i + "吗？", function() {
                HttpService.post(e.ServerMsg.CHAT_REPORT, "uid=" + playerModel.uid + "&fid=" + t.mData.uid + "&message=" + t.mData.content, function(e) {
                    hortor.TipManager.tip("举报成功");
                });
            });
        }, i.prototype.onGetBackGift = function() {
            var t = this;
            if (this.mIsWorld) return void this.onHeadGroup();
            var i = this.mData.uid, n = this.mData.mid, o = this.mIdx;
            HttpService.post(e.ServerMsg.REGRESS_TAKE_ATTACH_GIFT, "uid=" + playerModel.uid + "&fid=" + i + "&mid=" + n + "&idx=" + o, function(i) {
                i && i.reward && (playerModel.updateAll(i), t && (t.mData.isTake = !0), t.kImgBack.source = "friend_json.friend_img_gui3", 
                t.kImgBack.removeEventListener(egret.TouchEvent.TOUCH_TAP, t.onGetBackGift, t), 
                egret.Tween.removeTweens(t.kImgBack), hortor.WindowManager.showWindow(e.WindowType.WINDOW_REWARD, i.reward, null, null, function() {
                    hortor.WindowManager.showWindow(e.WindowType.WINDOW_REGRESSGIFT);
                }));
            });
        }, i.prototype.onHeadGroup = function() {
            var t = this;
            soundModel.buttonOpen(), this.mData.uid != playerModel.uid && this.mIsWorld && HttpService.get(e.ServerMsg.MORE_PLAYER, "uid=" + playerModel.uid + "&fid=" + this.mData.uid + "&checksum=" + this.mData.checksum + "&algorithm=&showDetails=true", function(i) {
                var n = (_.extend(t.mData, i), "regressdChat" == t.mData.msgType ? 1 : 0), o = t.mIsWorld ? Const.WorldChat : Const.ChatPerson;
                hortor.WindowManager.showWindow(e.WindowType.WINDOW_PLAYERINFO, {
                    playerInfo: t.mData,
                    type: n,
                    from: o
                });
            });
        }, i;
    }(eui.Component);
    e.chatNormalItem = t, __reflect(t.prototype, "game.chatNormalItem");
}(game || (game = {})), window.game.chatNormalItem = game.chatNormalItem;

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.mGenderColor = [ 16734615, 42223 ], e.skinPath = "friend/ChatPrivateListItemSkin", 
            e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.kBtnDel.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onDel, this), this.kBtnDel.addEventListener(egret.TouchEvent.TOUCH_BEGIN, this.onForbiddenThrough, this), 
            this.kRectAvatar.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onNotifyRead, this), 
            this.kRectAvatar.addEventListener(egret.TouchEvent.TOUCH_BEGIN, this.onForbiddenThrough, this), 
            EventCenter.addEventListener(EventConst.openChatPersonDelButton, this.onUpdateDelBtn, this), 
            EventCenter.addEventListener(EventConst.updateChatItemRedStatus, this.updateRedStatus, this);
        }, i.prototype.onData = function() {
            this.kLabelTime.text = "" + e.ComFunc.showTimeNormal(this.data.updateTime || moment().unix()), 
            this.kLabelName.text = util.strSub("" + this.data.name, 7), this.kAvatar.starLabel.text = "" + this.data.crowns, 
            this.kLabelDesc.text = "" + util.strSub(this.data.content, 21), util.setRemoteAvatar(this.kAvatar.avatarImage, this.data.headImg), 
            1 == this.data.gender ? (this.kAvatar.avatarBg.source = "common_json.common_img_tz1_1", 
            this.kLabelName.textColor = this.mGenderColor[1]) : (this.kAvatar.avatarBg.source = "common_json.common_img_tz1_0", 
            this.kLabelName.textColor = this.mGenderColor[0]), this.kBtnDel.visible = chatModel.delPersonButton, 
            this.updateRedStatus();
        }, i.prototype.updateRedStatus = function() {
            this.kImgRed.visible = Boolean(chatModel.ChatCache.chatPrivateList.indexOf(this.data.uid) >= 0);
        }, i.prototype.onUpdateDelBtn = function() {
            chatModel.delPersonButton ? (this.kBtnDel.scaleX = this.kBtnDel.scaleY = .1, egret.Tween.removeTweens(this.kBtnDel), 
            egret.Tween.get(this.kBtnDel).to({
                scaleX: 1,
                scaleY: 1
            }, 300, egret.Ease.backOut)) : (this.kBtnDel.scaleX = this.kBtnDel.scaleY = .1, 
            egret.Tween.removeTweens(this.kBtnDel)), this.kBtnDel.visible = chatModel.delPersonButton;
        }, i.prototype.onDel = function(t) {
            var i = this;
            HttpService.post(e.ServerMsg.CHAT_PRIVATE_DELETE, "uid=" + playerModel.uid + "&fid=" + this.data.uid, function(e) {
                console.log("删除聊天node：" + JSON.stringify(e));
                var t = _.findIndex(chatModel.ChatCache.PrivateMsgList, function(e) {
                    return e.uid == i.data.uid;
                });
                _.isNumber(t) && t >= 0 && (chatModel.ChatCache.PrivateMsgList.splice(t, 1), EventCenter.sendEvent(EventConst.refreshChatPrivateList));
            });
        }, i.prototype.onForbiddenThrough = function(e) {
            e.stopPropagation();
        }, i.prototype.onNotifyRead = function() {
            var t = this;
            this.data.uid != playerModel.uid && HttpService.get(e.ServerMsg.MORE_PLAYER, "uid=" + playerModel.uid + "&fid=" + this.data.uid + "&checksum=" + this.data.chatSign + "&algorithm=chatSign&showDetails=true", function(i) {
                t.data.chatSign && (i.chatSign = t.data.chatSign), hortor.WindowManager.showWindow(e.WindowType.WINDOW_PLAYERINFO, {
                    playerInfo: i,
                    from: Const.ChatPerson
                });
            });
        }, i;
    }(e.ItemRenderBase);
    e.ChatPrivateItem = t, __reflect(t.prototype, "game.ChatPrivateItem");
}(game || (game = {})), window.game.ChatPrivateItem = game.ChatPrivateItem;

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.kList.itemRenderer = e.ChatPrivateItem, this.mListData = new eui.ArrayCollection(), 
            this.kList.dataProvider = this.mListData, this.kBtnDel.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onTouchDel, this), 
            this.kList.addEventListener(eui.ItemTapEvent.ITEM_TAP, this.onTouchListItem, this), 
            EventCenter.addEventListener(EventConst.refreshChatPrivateList, this.refreshChatPrivateList, this);
        }, i.prototype.onOpen = function() {
            var t = this;
            HttpService.get(e.ServerMsg.CHAT_PRIVATE_LIST, "uid=" + playerModel.uid, function(i) {
                hortor.WindowManager.isOpen(e.WindowType.WINDOW_PRIVATE_CHAT_LIST) && (chatModel.ChatCache.PrivateMsgList = i.messages, 
                t.refreshChatPrivateList(), chatModel.delPersonButton = !1, EventCenter.sendEvent(EventConst.openChatPersonDelButton));
            });
        }, i.prototype.refreshChatPrivateList = function() {
            chatModel.ChatCache.PrivateMsgList = _.sortBy(chatModel.ChatCache.PrivateMsgList, "updateTime").reverse(), 
            this.kGrpBottom.visible = Boolean(chatModel.ChatCache.PrivateMsgList.length > 0), 
            this.kGrpEmpty.visible = !this.kGrpBottom.visible, 0 == chatModel.delPersonButton ? this.kBtnDel.icon = "comBtnTxt_json.common_txt_ccxx" : this.kBtnDel.icon = "comBtnTxt_json.common_txt_qx", 
            0 == !!this.mListData ? this.mListData.source = chatModel.ChatCache.PrivateMsgList : this.mListData.source = chatModel.ChatCache.PrivateMsgList;
        }, i.prototype.onTouchDel = function() {
            chatModel.delPersonButton = !chatModel.delPersonButton, 0 == chatModel.delPersonButton ? this.kBtnDel.icon = "comBtnTxt_json.common_txt_ccxx" : this.kBtnDel.icon = "comBtnTxt_json.common_txt_qx", 
            EventCenter.sendEvent(EventConst.openChatPersonDelButton);
        }, i.prototype.onTouchListItem = function(e) {
            var t = e.item;
            e.itemRenderer;
            if (t.isNew) {
                t.isNew = !1, chatModel.ChatCache.chatBtnPoint = !1;
                for (var i = 0; i < chatModel.ChatCache.PrivateMsgList.length; i++) if (chatModel.ChatCache.PrivateMsgList[i].isNew) {
                    chatModel.ChatCache.chatBtnPoint = !0;
                    break;
                }
                EventCenter.sendEvent(EventConst.FoldBtnRedPoint);
            }
            chatModel.showPrivateChat(t.uid, t.chatSign);
        }, i.prototype.onClose = function() {}, i.prototype.onData = function() {}, i.prototype.prepare = function(e, t) {
            e(null);
        }, i;
    }(e.TabWindowBase);
    e.ChatPrivateListWindow = t, __reflect(t.prototype, "game.ChatPrivateListWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e.mGenderColor = [ 16734615, 42223 ], e.mMsgComList = [], e;
        }
        return __extends(i, t), Object.defineProperty(i.prototype, "h", {
            get: function() {
                return this.height;
            },
            enumerable: !0,
            configurable: !0
        }), i.prototype.onInit = function() {
            this.kBtnClose.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onClose, this), 
            this.kBtnSend.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onSend, this), this.kBtnCancel.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onExchangeCancel, this), 
            this.kBtnGet.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onExchangeGet, this), 
            this.kBtnCheck.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onExchangeCheck, this), 
            this.kEdit.addEventListener(egret.Event.CHANGE, this.textInputFunc, this), this.kBtnExchange.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onExchange, this), 
            this.kBtnDel.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onDel, this), this.kRectMask.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onExchange, this), 
            EventCenter.addEventListener(EventConst.exchangeSendSuccess, this.onAddExchangeMsg, this), 
            EventCenter.addEventListener(EventConst.recvPrivateChatMsg, this.onDealRecvMsg, this), 
            EventCenter.addEventListener(EventConst.hideExchangeInfoInChatPrivate, this.onExchange, this);
            var e = '<font color="#FFEB42" size="21">海盗公安提醒您：谨防交易诈骗，请不要相信任何售卖碎片、能量等的信息，不要转账或发红包给任何不认识的人。</font>';
            this.marque.marqueue([ e ]);
        }, i.prototype.onOpen = function() {
            this.mMsgComList = [], this.initChatItem(), this.checkShowExchangeAlert(), this.setBlackBtnStatus(), 
            this.kCom.clean(), this.kCom.visible = this.kRectMask.visible = !1, this.adaptViewPort(!0);
        }, i.prototype.setBlackBtnStatus = function() {
            chatModel.PersonInfo.hasBanned ? this.kBtnDel.source = "friend_json.friend_img_lh" : this.kBtnDel.source = "friend_json.friend_img_qxlh";
        }, i.prototype.onData = function() {}, i.prototype.initChatItem = function() {
            for (var t = chatModel.ChatPersonCache.Messages, i = 0; i < t.length; i++) {
                var n = new e.chatNormalItem();
                n.setData(t[i], i), this.kGrp.addChild(n), this.mMsgComList.push(n);
            }
        }, i.prototype.checkShowExchangeAlert = function() {
            chatModel.PersonInfo.swapSponsor == playerModel.uid && 1 == chatModel.PersonInfo.swapState || chatModel.PersonInfo.swapSponsor != playerModel.uid && 1 == chatModel.PersonInfo.swapState || chatModel.PersonInfo.swapSponsor == playerModel.uid && 3 == chatModel.PersonInfo.swapState || chatModel.PersonInfo.swapSponsor != playerModel.uid && 3 == chatModel.PersonInfo.swapState ? this.showExchangeAlert(!0) : this.showExchangeAlert(!1);
        }, i.prototype.onAddExchangeMsg = function(e) {
            this.addNewMsg(e.data.msg), this.adaptViewPort(!1), this.showExchangeAlert(!0);
        }, i.prototype.showExchangeAlert = function(e) {
            if (e) {
                this.kGrpExchange.visible = !0, this.kScr.y = 230, this.kScr.height = 570, this.kBtnCancel.visible = !1, 
                this.kBtnGet.visible = !1, this.kBtnCheck.visible = !1, this.kLabelWait.visible = !1;
                var t = void 0;
                t = chatModel.PersonInfo.swapSponsor == playerModel.uid ? playerModel : chatModel.PersonInfo, 
                util.setRemoteAvatar(this.kComExchange.avatarImage, t.headImg), this.kImgVip.visible = t.monthCardExpired > 0, 
                this.kLabelExName.text = util.strSub(t.name, 5), 1 == t.gender ? (this.kComExchange.avatarBg.source = "common_json.common_img_tz1_1", 
                this.kLabelExName.textColor = this.mGenderColor[1]) : (this.kComExchange.avatarBg.source = "common_json.common_img_tz1_0", 
                this.kLabelExName.textColor = this.mGenderColor[0]), this.kComExchange.starLabel.text = t.crowns + "", 
                chatModel.PersonInfo.swapSponsor == playerModel.uid && 1 == chatModel.PersonInfo.swapState ? this.kBtnCancel.visible = !0 : chatModel.PersonInfo.swapSponsor == playerModel.uid && 3 == chatModel.PersonInfo.swapState ? this.kBtnGet.visible = !0 : chatModel.PersonInfo.swapSponsor != playerModel.uid && 1 == chatModel.PersonInfo.swapState ? this.kBtnCheck.visible = !0 : chatModel.PersonInfo.swapSponsor != playerModel.uid && 3 == chatModel.PersonInfo.swapState && (this.kLabelWait.visible = !0);
            } else this.kGrpExchange.visible = !1, this.kScr.y = 112, this.kScr.height = 688;
        }, i.prototype.onDel = function() {
            var e = this;
            chatModel.PersonInfo.hasBanned ? this.sendBlackListPost() : hortor.TipManager.alert("加入黑名单将收不到TA的信息!确认将TA拉入黑名单吗？", function() {
                e.sendBlackListPost();
            });
        }, i.prototype.sendBlackListPost = function() {
            var t = this;
            this.kBtnDel.touchEnabled = !1, HttpService.post(e.ServerMsg.CHAT_BLACKLIST, "uid=" + playerModel.uid + "&fid=" + chatModel.PersonInfo.uid + "&isBan=" + !chatModel.PersonInfo.hasBanned, function(e) {
                chatModel.PersonInfo.hasBanned ? hortor.TipManager.tip("解除黑名单成功") : hortor.TipManager.tip("拉黑成功"), 
                chatModel.PersonInfo.hasBanned = !chatModel.PersonInfo.hasBanned, t.setBlackBtnStatus(), 
                t.kBtnDel.touchEnabled = !0;
            });
        }, i.prototype.onExchange = function() {
            this.kCom.visible ? this.kCom.visible = this.kRectMask.visible = !1 : (this.kCom.visible = this.kRectMask.visible = !0, 
            this.kCom.setData(!0));
        }, i.prototype.onSend = function() {
            var t = this, i = e.ComFunc.trim(this.kEdit.text);
            return i = e.ComFunc.dealInputText(i, 100), "" == i ? void hortor.TipManager.tip("不能发送空白消息") : (this.kBtnSend.touchEnabled = !1, 
            i = e.ComFunc.enCodeHtml(i), void HttpService.post(e.ServerMsg.CHAT_SEND_PRIVATE_MSG, "uid=" + playerModel.uid + "&fid=" + chatModel.PersonInfo.uid + "&content=" + i + "&chatSign=" + chatModel.PersonInfo.chatSign, function(i) {
                t.kEdit.text = "", t.kBtnSend.touchEnabled = !0, t.addNewMsg(i.message), t.adaptViewPort(!0);
                var n = activityModel.getActivityInfo(e.ActivityType.recall);
                n && n.beginRemain <= 0 && (n.endRemain > 0 || n.awardEndRemain > 0) && EventCenter.sendEvent(EventConst.RecallPrivateChatTask, {}), 
                EventCenter.sendEvent(EventConst.ReportSendPrivateMsg);
            }, function() {
                t.kBtnSend.touchEnabled = !0;
            }, this));
        }, i.prototype.onDealRecvMsg = function(e) {
            this.addNewMsg(e.data.msg), this.adaptViewPort(), this.showExchangeAlert(e.data.needUpdateAlert);
        }, i.prototype.textInputFunc = function() {
            for (var e = 0, t = this.kEdit.text, i = 0; i < t.length; i++) {
                var n = new RegExp("[\\u4E00-\\u9FFF]", "");
                e += n.test(t[i]) ? 2 : 1;
            }
            if (100 >= e) this.kEdit.text = t; else {
                for (var o = "", e = 0, t = this.kEdit.text, i = 0; i < t.length; i++) {
                    var n = new RegExp("[\\u4E00-\\u9FFF]", "");
                    e += n.test(t[i]) ? 2 : 1, 100 >= e && (o += t[i]);
                }
                this.kEdit.text = o;
            }
        }, i.prototype.onExchangeCheck = function() {
            HttpService.get(e.ServerMsg.SWAP_SHOW, "uid=" + playerModel.uid + "&fid=" + chatModel.PersonInfo.uid, function(t) {
                egret.log("查看交换详情"), hortor.WindowManager.showWindow(e.WindowType.WINDOW_EXCHANGE_RESPONSE, t);
            });
        }, i.prototype.onExchangeGet = function() {
            var t = this;
            HttpService.post(e.ServerMsg.SWAP_RECEIVE, "uid=" + playerModel.uid + "&fid=" + chatModel.PersonInfo.uid, function(i) {
                var n = {};
                n[i.needType + (i.needNum - 1)] = 1, hortor.WindowManager.showWindow(e.WindowType.WINDOW_REWARD, n), 
                playerModel.dailyEventInfo.swapCount = i.swapCount, t.getDataDeal(i, "need"), t.showExchangeAlert(!1), 
                EventCenter.sendEvent(EventConst.ReportExchange);
            });
        }, i.prototype.onExchangeCancel = function() {
            var e = this;
            hortor.TipManager.alert("确定要取消交换请求吗？", function() {
                e.doCancel();
            }, function() {});
        }, i.prototype.doCancel = function() {
            var t = this;
            HttpService.post(e.ServerMsg.SWAP_CANCEL, "uid=" + playerModel.uid + "&fid=" + chatModel.PersonInfo.uid, function(e) {
                t.getDataDeal(e, "used"), t.addNewMsg({
                    uid: playerModel.uid,
                    mode: 0,
                    content: "[交换请求]我取消了交换请求",
                    createTime: moment().unix()
                }), t.adaptViewPort(!0), t.showExchangeAlert(!1);
            }, null, function() {
                t.showExchangeAlert(!1);
            });
        }, i.prototype.getDataDeal = function(e, t) {
            var i = e[t + "Num"];
            switch (e[t + "Type"]) {
              case Const.JigsawType:
                i = e[t + "Num"] - 1;
                var n = jigsawModel.jigsawInfo.bags;
                n[i]++, hortor.NotificationManager.dispatch(EventConst.sendJigsaw);
                break;

              case Const.OctopusType:
                var o = octopusModel.octopusPlayer.Jewels;
                o.length > 0 && (o[i]++, EventCenter.sendEvent(EventConst.SendOctopus));
                break;

              case Const.BeachType:
            }
        }, i.prototype.addNewMsg = function(e) {
            chatModel.ChatPersonCache.Messages.push(e), this.createMsgItem();
            for (var t = 0; t < chatModel.ChatCache.PrivateMsgList.length; t++) if (chatModel.ChatCache.PrivateMsgList[t].uid == chatModel.PersonInfo.uid) {
                chatModel.ChatCache.PrivateMsgList[t].content = e.content, chatModel.ChatCache.PrivateMsgList[t].updateTime = e.createTime, 
                EventCenter.sendEvent(EventConst.refreshChatPrivateList);
                break;
            }
        }, i.prototype.createMsgItem = function() {
            var t = new e.chatNormalItem();
            t.setData(chatModel.ChatPersonCache.Messages[chatModel.ChatPersonCache.Messages.length - 1], chatModel.ChatPersonCache.Messages.length - 1), 
            this.kGrp.addChild(t), this.mMsgComList.push(t);
        }, i.prototype.adaptViewPort = function(e) {
            void 0 === e && (e = !1);
            for (var t, i = this.kScr.viewport.scrollV, n = 0, o = 0; o < this.mMsgComList.length; o++) n += this.mMsgComList[o].h, 
            o == this.mMsgComList.length - 2 && (t = n - this.kScr.height);
            n -= this.kScr.height, n > 0 && (i >= t - 40 || e) && (this.kScr.viewport.scrollV = n);
        }, i.prototype.onClose = function() {
            this.kCom.clean(), this.kCom.visible = this.kRectMask.visible = !1;
            for (var e = 0, t = this.mMsgComList; e < t.length; e++) {
                var i = t[e];
                i.clear(), i.parent && i.parent.removeChild(i);
            }
            this.kGrp.removeChildren(), this.mMsgComList = [], this.hide(), this.kScr.viewport.scrollV = 0;
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i;
    }(e.WindowBase);
    e.ChatPrivateWindow = t, __reflect(t.prototype, "game.ChatPrivateWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e.mMsgComList = [], e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.kBtnSend.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onSend, this), this.kEdit.addEventListener(egret.Event.CHANGE, this.textInputFunc, this), 
            this.kBtnNewMsg.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onShowNewMsg, this), 
            this.kImgHorn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onBuyHorn, this), 
            this.kScr.addEventListener(eui.UIEvent.CHANGE_START, this.kScrStart, this), this.kScr.addEventListener(eui.UIEvent.CHANGE_END, this.adaptViewPortWhenMoveScr, this), 
            hortor.NotificationManager.add(e.NotificationType.SHOP_HORN_REFRESH, this.refreshHorn, this), 
            EventCenter.addEventListener(EventConst.WorldChatMsg, this.recvNewMsg, this), EventCenter.addEventListener(EventConst.updateWorldChatCDTime, this.setSendBtnStatus, this);
        }, i.prototype.onOpen = function() {
            if (chatModel.newUnReadWorldMsg = !1, this.kLabelChannel.text = "频道" + chatModel.broadcastChannel, 
            this.kLabelHorn.text = String(playerModel.hornCount), chatModel.ChatCache.Messages.length > 20) {
                var t = chatModel.ChatCache.Messages.length - 20, i = chatModel.ChatCache.Messages.length;
                chatModel.ChatCache.Messages = chatModel.ChatCache.Messages.slice(t, i);
            }
            for (var n = 0; n < chatModel.ChatCache.Messages.length; n++) if ("guildInvite" == chatModel.ChatCache.Messages[n].msgType) {
                var o = new e.ChatGuildItem();
                o.setData(chatModel.ChatCache.Messages[n]), this.kGrp.addChild(o), this.mMsgComList.push(o);
            } else {
                var o = new e.chatNormalItem();
                o.setData(chatModel.ChatCache.Messages[n], n, !0), this.kGrp.addChild(o), this.mMsgComList.push(o);
            }
            this.setSendBtnStatus(), this.adaptViewPort(!0);
        }, i.prototype.onData = function() {}, i.prototype.onBuyHorn = function() {
            gateModel.iosPay ? HttpService.get(e.ServerMsg.SHOP_LIST, "uid=" + playerModel.uid, function(t) {
                var i = _.find(t.goods.prop, function(e) {
                    return "horn" == e.goodsId;
                });
                i && hortor.WindowManager.showWindow(e.WindowType.WINDOW_SHOP_GOODS, i);
            }) : hortor.TipManager.alert("喇叭不足");
        }, i.prototype.recvNewMsg = function(t) {
            if (hortor.WindowManager.isOpen(e.WindowType.WINDOW_WORLD_CHAT)) for (var i = chatModel.ChatCache.NewMessages.length, n = 0; i > n; n++) {
                var o = chatModel.ChatCache.NewMessages.shift();
                if (chatModel.ChatCache.Messages.push(o), "guildInvite" == chatModel.ChatCache.Messages[chatModel.ChatCache.Messages.length - 1].msgType) {
                    var a = new e.ChatGuildItem();
                    a.setData(chatModel.ChatCache.Messages[chatModel.ChatCache.Messages.length - 1]), 
                    this.kGrp.addChild(a), this.mMsgComList.push(a);
                } else {
                    var a = new e.chatNormalItem();
                    a.setData(chatModel.ChatCache.Messages[chatModel.ChatCache.Messages.length - 1], -1, !0), 
                    this.kGrp.addChild(a), this.mMsgComList.push(a);
                }
                this.adaptViewPort();
            }
        }, i.prototype.onSend = function() {
            var t = this;
            if (playerModel.island < 1) return void hortor.TipManager.alert("岛屿达到中国后可进行世界聊天发言");
            if (playerModel.worldChatRemain > 0) return void hortor.TipManager.tip("聊天速度太快，请稍后再试");
            if (playerModel.hornCount < 1) return void (gateModel.iosPay ? HttpService.get(e.ServerMsg.SHOP_LIST, "uid=" + playerModel.uid, function(t) {
                var i = _.find(t.goods.prop, function(e) {
                    return "horn" == e.goodsId;
                });
                hortor.WindowManager.showWindow(e.WindowType.WINDOW_SHOP_GOODS, i);
            }) : hortor.TipManager.alert("喇叭不足"));
            var i = e.ComFunc.trim(this.kEdit.text);
            return i = e.ComFunc.dealInputText(i, 100), "" == i ? void hortor.TipManager.tip("不能发送空白消息") : (this.kBtnSend.enabled = !1, 
            i = e.ComFunc.enCodeHtml(i), void HttpService.post(e.ServerMsg.CHAT_SEND_WORLD_MSG, {
                uid: playerModel.uid,
                content: i
            }, function(e) {
                t.kEdit.text = "", playerModel.worldChatRemain = Const.chatLimitTime, chatModel.countDownWorldChatTime(), 
                playerModel.hornCount = e.hornCount, t.kLabelHorn.text = "" + playerModel.hornCount, 
                EventCenter.sendEvent(EventConst.ReportSendWorldMsg);
            }, function(e) {
                t.kBtnSend.enabled = !0;
            }, this));
        }, i.prototype.setSendBtnStatus = function() {
            playerModel.worldChatRemain < 1 ? (this.kLabelRemainTime.visible = !1, this.kBtnSend.enabled = !0, 
            this.kBtnSend.icon = "comBtnTxt_json.common_txt_fs") : (this.kBtnSend.icon = null, 
            this.kBtnSend.enabled = !1, this.kLabelRemainTime.text = playerModel.worldChatRemain + "s", 
            this.kLabelRemainTime.visible = !0);
        }, i.prototype.textInputFunc = function() {
            for (var e = 0, t = this.kEdit.text, i = 0; i < t.length; i++) {
                var n = new RegExp("[\\u4E00-\\u9FFF]", "");
                e += n.test(t[i]) ? 2 : 1;
            }
            if (100 >= e) this.kEdit.text = t; else {
                for (var o = "", e = 0, t = this.kEdit.text, i = 0; i < t.length; i++) {
                    var n = new RegExp("[\\u4E00-\\u9FFF]", "");
                    e += n.test(t[i]) ? 2 : 1, 100 >= e && (o += t[i]);
                }
                this.kEdit.text = o;
            }
        }, i.prototype.onShowNewMsg = function() {
            this.kBtnNewMsg.visible = !1;
            for (var e = 0, t = 0; t < this.mMsgComList.length; t++) e += this.mMsgComList[t].h;
            e -= this.kScr.height, this.kScr.viewport.scrollV = e;
        }, i.prototype.adaptViewPortWhenMoveScr = function() {
            for (var e = this.kScr.viewport.scrollV, t = 0, i = 0; i < this.mMsgComList.length; i++) {
                t += this.mMsgComList[i].h;
                var n = this.mMsgComList[i].localToGlobal(0, 0), o = this.kScr.localToGlobal(0, 0);
                this.mMsgComList[i].visible = !(n.y < o.y - 200 || n.y > o.y + this.kScr.height);
            }
            t -= this.kScr.height, t > 0 && e >= t && (this.kScr.viewport.scrollV = t, this.kBtnNewMsg.visible = !1);
        }, i.prototype.adaptViewPort = function(e) {
            void 0 === e && (e = !1);
            for (var t, i = this.kScr.viewport.scrollV, n = 0, o = 0; o < this.mMsgComList.length; o++) n += this.mMsgComList[o].h, 
            o == this.mMsgComList.length - 2 && (t = n - this.kScr.height);
            n -= this.kScr.height, n > 0 && (i >= t - 60 || e ? (this.kScr.viewport.scrollV = n, 
            this.kBtnNewMsg.visible = !1) : this.kBtnNewMsg.visible = !0);
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.onClose = function() {
            this.kBtnSend.touchEnabled = !0;
            for (var e = 0, t = this.mMsgComList; e < t.length; e++) {
                var i = t[e];
                i.clear(), i.parent && i.parent.removeChild(i);
            }
            this.kGrp.removeChildren(), this.mMsgComList = [], this.kScr.viewport.scrollV = 0;
        }, i.prototype.refreshHorn = function() {
            this.kLabelHorn.text = String(playerModel.hornCount);
        }, i.prototype.kScrStart = function() {
            for (var e = 0; e < this.mMsgComList.length; e++) this.mMsgComList[e].visible = !0;
        }, i;
    }(e.TabWindowBase);
    e.ChatWorldWindow = t, __reflect(t.prototype, "game.ChatWorldWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.isSetMine = !1, e.mJigsawBagsComList = [], e.mSeaComList = [], e.mBeachComList = [], 
            e.skinName = "ExchangeComponentSkin", e;
        }
        return __extends(i, t), i.prototype.partAdded = function(e, i) {
            t.prototype.partAdded.call(this, e, i);
        }, i.prototype.childrenCreated = function() {
            t.prototype.childrenCreated.call(this);
        }, i.prototype.setData = function(t) {
            var i = this;
            void 0 === t && (t = !1), this.clean(), this.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onTouch, this), 
            EventCenter.addEventListener(EventConst.selectExchangeFinish, this.onNextStep, this), 
            this.isSetMine = t, this.isSetMine ? (this.kImgArrowUp.visible = !1, this.kImgArrowDown.visible = !0) : (this.kImgArrowUp.visible = !0, 
            this.kImgArrowDown.visible = !1);
            var n = 0 == jigsawModel.jigsawInfo.openTime && jigsawModel.jigsawInfo.closeTime > 0, o = activityModel.getActivityInfo(e.ActivityType.Octopus), a = playerModel.highestCrowns >= Const.octopusLimit && o && o.endRemain > 0, r = activityModel.getActivityInfo(e.ActivityType.beach), s = playerModel.island >= Const.beachLimit && r && r.endRemain > 0, l = [], d = [], u = [];
            if (this.isSetMine) HttpService.post(e.ServerMsg.BASIC_CHECK_BAG, "uid=" + playerModel.uid, function(t) {
                if (t.jigsawBags || (t.jigsawBags = [ 0, 0, 0, 0, 0, 0, 0, 0, 0 ]), null != t.jigsawBags) for (var o = 0; o < t.jigsawBags.length; o++) {
                    l[o] = {
                        type: Const.JigsawType,
                        id: o,
                        num: t.jigsawBags[o]
                    };
                    var r = new e.ExchangeGoodsItem();
                    r.setData(l[o], n, !0), i.mJigsawBagsComList.push(r), i.kGrpPiece.addChild(r);
                }
                if (t.octopusBags || (t.octopusBags = [ 0, 0, 0, 0, 0, 0 ]), null != t.octopusBags) for (var o = 0; o < t.octopusBags.length; o++) {
                    d[o] = {
                        type: Const.OctopusType,
                        id: o,
                        num: t.octopusBags[o]
                    };
                    var r = new e.ExchangeGoodsItem();
                    r.setData(d[o], a, !0), i.mSeaComList.push(r), i.kGrpSea.addChild(r);
                }
                if (t.beachBags || (t.beachBags = [ 0, 0, 0, 0, 0 ]), null != t.beachBags) for (var o = 0; o < t.beachBags.length; o++) {
                    u[o] = {
                        type: Const.BeachType,
                        id: o,
                        num: t.beachBags[o]
                    };
                    var r = new e.ExchangeGoodsItem();
                    r.setData(u[o], s, !0), i.mBeachComList.push(r), i.kGrpBeach.addChild(r);
                }
            }); else {
                l = [ 0, 0, 0, 0, 0, 0, 0, 0, 0 ];
                for (var h = 0; 9 > h; h++) {
                    l[h] = {
                        type: Const.JigsawType,
                        id: h,
                        num: 0
                    };
                    var c = new e.ExchangeGoodsItem();
                    c.setData(l[h], n, !1), this.mJigsawBagsComList.push(c), this.kGrpPiece.addChild(c);
                }
                for (var h = 0; 6 > h; h++) {
                    d[h] = {
                        type: Const.OctopusType,
                        id: h,
                        num: 0
                    };
                    var c = new e.ExchangeGoodsItem();
                    c.setData(d[h], a, !1), this.mSeaComList.push(c), this.kGrpSea.addChild(c);
                }
                for (var h = 0; 5 > h; h++) {
                    u[h] = {
                        type: Const.BeachType,
                        id: h,
                        num: 0
                    };
                    var c = new e.ExchangeGoodsItem();
                    c.setData(u[h], s, !1), this.mBeachComList.push(c), this.kGrpBeach.addChild(c);
                }
            }
        }, i.prototype.onTouch = function() {}, i.prototype.onNextStep = function(t) {
            if (egret.log("选择道具后的回传数据：", t.data), this.isSetMine) hortor.WindowManager.showWindow(e.WindowType.WINDOW_EXCHANGE, chatModel.PersonInfo), 
            this.clean(); else {
                var i = !1;
                if (playerModel.selectedActivityType == t.data.type) switch (playerModel.selectedActivityType) {
                  case Const.JigsawType:
                    i = Boolean(jigsawModel.sendId == t.data.id + 1);
                    break;

                  case Const.OctopusType:
                    i = Boolean(octopusModel.sendId == t.data.id + 1);
                    break;

                  case Const.BeachType:
                }
                if (i) return void hortor.TipManager.tip("不能交换同样的物品");
                EventCenter.sendEvent(EventConst.selectExchangeOtherFinish, t.data);
            }
        }, i.prototype.clean = function() {
            for (var e = 0, t = this.mJigsawBagsComList; e < t.length; e++) {
                var i = t[e];
                i.clear(), i.parent && i.parent.removeChild(i), i = null;
            }
            for (var n = 0, o = this.mSeaComList; n < o.length; n++) {
                var i = o[n];
                i.clear(), i.parent && i.parent.removeChild(i), i = null;
            }
            for (var a = 0, r = this.mBeachComList; a < r.length; a++) {
                var i = r[a];
                i.clear(), i.parent && i.parent.removeChild(i), i = null;
            }
            this.kGrpPiece.removeChildren(), this.kGrpSea.removeChildren(), this.kGrpBeach.removeChildren(), 
            this.isSetMine = !1, this.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.onTouch, this), 
            EventCenter.removeEventListener(EventConst.selectExchangeFinish, this.onNextStep, this);
        }, i;
    }(eui.Component);
    e.ExchangeComponent = t, __reflect(t.prototype, "game.ExchangeComponent", [ "eui.UIComponent", "egret.DisplayObject" ]);
}(game || (game = {})), window.game.ExchangeComponent = game.ExchangeComponent;

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.skinName = "ExchangeGoodsItemSkin", e;
        }
        return __extends(i, t), i.prototype.partAdded = function(e, i) {
            t.prototype.partAdded.call(this, e, i);
        }, i.prototype.childrenCreated = function() {
            t.prototype.childrenCreated.call(this), this.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onSelect, this);
        }, i.prototype.setData = function(t, i, n) {
            this.mIsSetMine = n, this.kLabelCount.visible = n, this.mData = t, this.kImgIcon.source = e.ItemManager.getItemInfo(this.mData.type + this.mData.id).icon, 
            this.kLabelCount.text = "x" + e.ComFunc.formatNumber(this.mData.num), this.setGetStatus(i);
        }, i.prototype.setGetStatus = function(e) {
            this.mIsShow = e, this.touchEnabled = this.mIsShow, this.kGrp.alpha = e ? 1 : .5;
        }, i.prototype.onSelect = function() {
            if (!this.mIsShow) return void hortor.TipManager.tip("活动尚未开启！敬请期待！");
            if (this.mIsSetMine) {
                if (0 == this.mData.num) return void hortor.TipManager.tip("您没有这个物品");
                switch (playerModel.selectedActivityType = this.mData.type, playerModel.selectedActivityType) {
                  case Const.JigsawType:
                    jigsawModel.sendId = this.mData.id + 1;
                    break;

                  case Const.OctopusType:
                    octopusModel.sendId = this.mData.id + 1;
                    break;

                  case Const.BeachType:
                }
                EventCenter.sendEvent(EventConst.selectExchangeFinish, this.mData), EventCenter.sendEvent(EventConst.hideExchangeInfoInChatPrivate);
            } else EventCenter.sendEvent(EventConst.selectExchangeFinish, this.mData);
        }, i.prototype.clear = function() {}, i;
    }(eui.Component);
    e.ExchangeGoodsItem = t, __reflect(t.prototype, "game.ExchangeGoodsItem", [ "eui.UIComponent", "egret.DisplayObject" ]);
}(game || (game = {})), window.game.ExchangeGoodsItem = game.ExchangeGoodsItem;

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e.mGenderColor = [ 16734615, 42223 ], e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.kBtnRefuse.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onRefuse, this), 
            this.kBtnAgree.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onAgree, this);
        }, i.prototype.onOpen = function() {
            util.setRemoteAvatar(this.kImgAvatarMine, playerModel.headImg), this.kLabelNameMine.text = util.strSub(playerModel.name, 5), 
            this.kLabelSurplus.text = this.receiveData.needCount;
            var t = e.ItemManager.getItemInfo(this.receiveData.needType + (this.receiveData.needNum - 1));
            this.kImgGoodsMine.source = t.icon, this.kLabelGoodsMine.text = t.desc, util.setRemoteAvatar(this.kImgAvatarOther, chatModel.PersonInfo.headImg), 
            this.kLabelNameOther.text = util.strSub(chatModel.PersonInfo.name, 5), 1 == playerModel.gender ? (this.kImgAvatarFrameMine.source = "common_json.common_img_portrait1", 
            this.kLabelNameMine.textColor = this.mGenderColor[1]) : (this.kImgAvatarFrameMine.source = "common_json.common_img_portrait0", 
            this.kLabelNameMine.textColor = this.mGenderColor[0]), 1 == chatModel.PersonInfo.gender ? (this.kImgAvatarFrameOther.source = "common_json.common_img_portrait1", 
            this.kLabelNameOther.textColor = this.mGenderColor[1]) : (this.kImgAvatarFrameOther.source = "common_json.common_img_portrait0", 
            this.kLabelNameOther.textColor = this.mGenderColor[0]);
            var i = e.ItemManager.getItemInfo(this.receiveData.usedType + (this.receiveData.usedNum - 1));
            this.kImgGoodsOther.source = i.icon, this.kLabelGoodsOther.text = i.desc, this.kLabelCount.text = this.receiveData.swapCount + " / 5";
        }, i.prototype.onData = function() {
            this.receiveData = this.data;
        }, i.prototype.onRefuse = function() {
            var t = this;
            HttpService.post(e.ServerMsg.SWAP_RESPONSE, "uid=" + playerModel.uid + "&fid=" + chatModel.PersonInfo.uid + "&isAgree=0", function(i) {
                if (hortor.WindowManager.isOpen(e.WindowType.WINDOW_PRIVATE_CHAT)) {
                    chatModel.PersonInfo.swapState = 3;
                    var n = {
                        uid: playerModel.uid,
                        mode: 0,
                        content: "[交换请求]我拒绝了你的交换请求",
                        createTime: moment().unix()
                    };
                    EventCenter.sendEvent(EventConst.recvPrivateChatMsg, {
                        msg: n,
                        needUpdateAlert: !1
                    });
                }
                t.hide();
            });
        }, i.prototype.onAgree = function() {
            var t = this;
            return this.receiveData.swapCount >= 5 ? void hortor.TipManager.tip("今日交换次数已达上限") : 0 == this.receiveData.needCount ? void hortor.TipManager.tip("你没有这个物品") : void HttpService.post(e.ServerMsg.SWAP_RESPONSE, "uid=" + playerModel.uid + "&fid=" + chatModel.PersonInfo.uid + "&isAgree=1", function(i) {
                if (20104 != i.code && 20103 != i.code) {
                    var n = {};
                    if (n[i.usedType + (i.usedNum - 1)] = 1, hortor.WindowManager.showWindow(e.WindowType.WINDOW_REWARD, n), 
                    playerModel.dailyEventInfo.swapCount = i.swapCount, t.getDataDeal(i), t.delDataDeal(i), 
                    hortor.WindowManager.isOpen(e.WindowType.WINDOW_PRIVATE_CHAT)) {
                        chatModel.PersonInfo.swapState = 3;
                        var o = {
                            uid: playerModel.uid,
                            mode: 0,
                            content: "[交换请求]我同意了你的交换请求",
                            createTime: moment().unix()
                        };
                        EventCenter.sendEvent(EventConst.recvPrivateChatMsg, {
                            msg: o,
                            needUpdateAlert: !0
                        });
                    }
                    t.hide();
                } else if (hortor.TipManager.tip(i.msg), hortor.WindowManager.isOpen(e.WindowType.WINDOW_PRIVATE_CHAT)) {
                    chatModel.PersonInfo.swapState = 4;
                    var o = {
                        uid: playerModel.uid,
                        mode: 0,
                        content: "[交换请求]交换请求已过期，已取消",
                        createTime: moment().unix()
                    };
                    EventCenter.sendEvent(EventConst.recvPrivateChatMsg, {
                        msg: o,
                        needUpdateAlert: !1
                    });
                }
            });
        }, i.prototype.getDataDeal = function(e) {
            var t = e.usedNum;
            switch (e.usedType) {
              case Const.JigsawType:
                t = e.usedNum - 1;
                var i = jigsawModel.jigsawInfo.bags;
                i[t]++, EventCenter.sendEvent(EventConst.sendJigsaw);
                break;

              case Const.OctopusType:
                var n = octopusModel.octopusPlayer.Jewels;
                n.length > 0 && (n[t]++, EventCenter.sendEvent(EventConst.SendOctopus));
                break;

              case Const.BeachType:
            }
        }, i.prototype.delDataDeal = function(e) {
            var t = e.needNum;
            switch (e.needType) {
              case Const.JigsawType:
                t = e.needNum - 1;
                var i = jigsawModel.jigsawInfo.bags;
                i[t]--, EventCenter.sendEvent(EventConst.sendJigsaw);
                break;

              case Const.OctopusType:
                var n = octopusModel.octopusPlayer.Jewels;
                n.length > 0 && (n[t]--, EventCenter.sendEvent(EventConst.SendOctopus));
                break;

              case Const.BeachType:
            }
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i;
    }(e.WindowBase);
    e.ExchangeResponseWindow = t, __reflect(t.prototype, "game.ExchangeResponseWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var i = null !== t && t.apply(this, arguments) || this;
            return i.mGenderColor = [ 16734615, 42223 ], i.mMineData = {
                id: 0,
                type: playerModel.selectedActivityType,
                goodsInfo: new e.ItemInfo()
            }, i.mExchangeData = {
                id: 0,
                type: ""
            }, i;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            EventCenter.addEventListener(EventConst.selectExchangeOtherFinish, this.updateShowTarget, this), 
            this.kGrpGoods.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onChangeTargetGoods, this), 
            this.kRect.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onChangeTargetGoods, this), 
            this.kBtnSend.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onSend, this);
        }, i.prototype.onOpen = function() {
            switch (this.kBtnSend.enabled = !1, this.kGrpComMask.visible = !0, this.kLabelCount.text = playerModel.dailyEventInfo.swapCount + " / 5", 
            this.kCom.setData(), this.kCom.visible = !0, util.setRemoteAvatar(this.kImgAvatarMine, playerModel.headImg), 
            this.kLabelNameMine.text = util.strSub(playerModel.name, 5), 1 == playerModel.gender ? (this.kImgAvatarFrameMine.source = "common_json.common_img_portrait1", 
            this.kLabelNameMine.textColor = this.mGenderColor[1]) : (this.kImgAvatarFrameMine.source = "common_json.common_img_portrait0", 
            this.kLabelNameMine.textColor = this.mGenderColor[0]), playerModel.selectedActivityType) {
              case Const.JigsawType:
                this.mMineData.id = jigsawModel.sendId;
                break;

              case Const.OctopusType:
                this.mMineData.id = octopusModel.sendId;
                break;

              case Const.BeachType:
            }
            this.mMineData.goodsInfo = e.ItemManager.getItemInfo(playerModel.selectedActivityType + (this.mMineData.id - 1)), 
            this.kImgGoodsMine.source = this.mMineData.goodsInfo.icon, this.kLabelGoodsMine.text = "交换物品：" + this.mMineData.goodsInfo.name, 
            util.setRemoteAvatar(this.kImgAvatarOther, this.mOtherData.headImg), this.kLabelNameOther.text = util.strSub(this.mOtherData.name, 5), 
            1 == this.mOtherData.gender ? (this.kImgAvatarFrameOther.source = "common_json.common_img_portrait1", 
            this.kLabelNameOther.textColor = this.mGenderColor[1]) : (this.kImgAvatarFrameOther.source = "common_json.common_img_portrait0", 
            this.kLabelNameOther.textColor = this.mGenderColor[0]);
        }, i.prototype.onData = function() {
            this.mOtherData = this.data;
        }, i.prototype.onChangeTargetGoods = function() {
            this.kGrpComMask.visible = !this.kGrpComMask.visible;
        }, i.prototype.updateShowTarget = function(t) {
            this.mExchangeData = t.data, this.mOtherData.TargetItem = e.ItemManager.getItemInfo(t.data.type + t.data.id), 
            this.kImgGoodsOther.source = this.mOtherData.TargetItem.icon, this.kLabelGoodsOther.text = "交换物品：" + this.mOtherData.TargetItem.name, 
            this.kGrpComMask.visible = !1, this.kBtnSend.enabled = Boolean("" != this.mExchangeData.type);
        }, i.prototype.onSend = function() {
            var t = this;
            return playerModel.dailyEventInfo.swapCount >= 5 ? void hortor.TipManager.tip("今日交换次数已达上限") : void HttpService.post(e.ServerMsg.SWAP_REQUEST, "uid=" + playerModel.uid + "&fid=" + this.mOtherData.uid + "&usedType=" + playerModel.selectedActivityType + "&usedNum=" + this.mMineData.id + "&needType=" + this.mExchangeData.type + "&needNum=" + (this.mExchangeData.id + 1), function(i) {
                if (20100 == i.code) return void hortor.TipManager.tip(i.msg);
                if (20104 != i.code && 20103 != i.code) {
                    hortor.TipManager.tip("交换请求已发送"), t.sendDataDeal(i), t.mOtherData.chatSign = i.chatSign, 
                    chatModel.PersonInfo.swapState = i.state, chatModel.PersonInfo.swapSponsor = i.sponsor;
                    var n = {
                        uid: playerModel.uid,
                        mode: 0,
                        content: "[交换请求]我想用" + t.mMineData.goodsInfo.name + "跟你交换" + t.mOtherData.TargetItem.name,
                        createTime: moment().unix()
                    };
                    EventCenter.sendEvent(EventConst.exchangeSendSuccess, {
                        msg: n
                    }), egret.log("发送交换请求成功:", t.mOtherData, t.mMineData), chatModel.showPrivateChat(t.mOtherData.uid, t.mOtherData.chatSign), 
                    hortor.WindowManager.hideWindow(e.WindowType.WINDOW_JIGSAW_EXCHANG), hortor.WindowManager.hideWindow(e.WindowType.WINDOW_OCTOPUS_EXCHANG), 
                    t.hide();
                } else if (hortor.TipManager.tip(i.msg), hortor.WindowManager.isOpen(e.WindowType.WINDOW_PRIVATE_CHAT)) {
                    chatModel.PersonInfo.swapState = 4;
                    var o = {
                        uid: playerModel.uid,
                        mode: 0,
                        content: "[交换请求]交换请求已过期，已取消",
                        createTime: moment().unix()
                    };
                    EventCenter.sendEvent(EventConst.recvPrivateChatMsg, {
                        msg: o,
                        needUpdateAlert: !1
                    });
                }
            }, function(t) {
                if (40015 == t.code) return void hortor.TipManager.tip("不能交换同样的物品");
                if (20100 == t.code) return void hortor.TipManager.tip(t.msg);
                if (20104 != t.code && 20103 != t.code) ; else if (hortor.TipManager.tip(t.msg), 
                hortor.WindowManager.isOpen(e.WindowType.WINDOW_PRIVATE_CHAT)) {
                    chatModel.PersonInfo.swapState = 4;
                    var i = {
                        uid: playerModel.uid,
                        mode: 0,
                        content: "[交换请求]交换请求已过期，已取消",
                        createTime: moment().unix()
                    };
                    EventCenter.sendEvent(EventConst.recvPrivateChatMsg, {
                        msg: i,
                        needUpdateAlert: !1
                    });
                }
            });
        }, i.prototype.sendDataDeal = function(e) {
            var t = this.mMineData.id;
            switch (playerModel.selectedActivityType) {
              case Const.JigsawType:
                t = this.mMineData.id - 1;
                var i = jigsawModel.jigsawInfo.bags;
                i[t]--, hortor.NotificationManager.dispatch(EventConst.sendJigsaw);
                break;

              case Const.OctopusType:
                var n = octopusModel.octopusPlayer.Jewels;
                n.length > 0 && (n[t]--, EventCenter.sendEvent(EventConst.SendOctopus));
                break;

              case Const.BeachType:
            }
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.onClose = function() {
            this.kCom.clean(), this.kImgGoodsOther.source = "", this.kLabelGoodsOther.text = "", 
            this.kGrpComMask.visible = !1, this.kBtnSend.enabled = !1;
        }, i;
    }(e.WindowBase);
    e.ExchangeWindow = t, __reflect(t.prototype, "game.ExchangeWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.skinName = "FriendApplyItemSkin", e;
        }
        return __extends(i, t), i.prototype.partAdded = function(e, i) {
            t.prototype.partAdded.call(this, e, i);
        }, i.prototype.childrenCreated = function() {
            t.prototype.childrenCreated.call(this), this.kBtnAgree.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onAgree, this), 
            this.kBtnReject.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onReject, this);
        }, i.prototype.setData = function(e, t) {
            void 0 === t && (t = !1), this.mData = e, this.autoOpenChat = t, this.formatShow();
        }, i.prototype.formatShow = function() {
            util.setRemoteAvatar(this.kImgAvatar, this.mData.headImg), this.kImgVip.visible = this.kImgVip.includeInLayout = this.mData.isVip, 
            this.kLabelStar.text = this.mData.crowns + "", 1 == this.mData.gender ? (this.kImgAvatarBg.source = "common_json.common_img_portrait1", 
            this.kLabelName.textColor = 2279411) : (this.kImgAvatarBg.source = "common_json.common_img_portrait0", 
            this.kLabelName.textColor = 16740775), this.kLabelDesc.text = "" == this.mData.message ? "Ta没有留下任何信息" : this.mData.message, 
            this.kBtnAgree.visible = this.kBtnReject.visible = this.kImgLine.visible = !this.mData.isFriend;
            var t = moment().month() - moment.unix(this.mData.createAt).month(), i = moment().date() - moment.unix(this.mData.createAt).date() + 30 * t;
            if (1 > i) {
                var n = moment.unix(this.mData.createAt).minute();
                if (10 > n) var o = "0" + n; else var o = n + "";
                this.kLabelTime.text = "今天" + moment.unix(this.mData.createAt).hour() + ":" + o + "申请添加好友";
            } else 1 == i ? this.kLabelTime.text = "昨天申请添加好友" : this.kLabelTime.text = i + "天前申请添加好友";
            if (0 > t || 0 > i) {
                var a = moment().unix() - this.mData.createAt, r = (Math.floor(a / 60 / 60), Math.floor(a / 60 / 60 / 24));
                1 == r ? this.kLabelTime.text = "昨天申请添加好友" : r > 1 && (r = r > 30 ? 30 : r, this.kLabelTime.text = r + "天前申请添加好友");
            }
            this.setBtnEnabled(!0), this.kLabelName.text = util.strSub(this.mData.name, 5), 
            this.mData.province > 0 && Province[this.mData.province] ? (this.kLabelPos.visible = this.kLabelPos.includeInLayout = this.kImgPos.visible = this.kImgPos.includeInLayout = !0, 
            this.kLabelPos.text = e.ComFunc.getUserLocation(this.mData.province, this.mData.city)) : this.kLabelPos.visible = this.kLabelPos.includeInLayout = this.kImgPos.visible = this.kImgPos.includeInLayout = !1;
        }, i.prototype.onAgree = function() {
            var t = this;
            return friendModel.friendData.length >= 100 ? void hortor.TipManager.tip("您的好友数量已达上限！") : void HttpService.post(e.ServerMsg.FRIEND_VERIFY, "uid=" + playerModel.uid + "&fid=" + this.mData.uid + "&isAgree=true", function(i) {
                t.setBtnEnabled(!1), playerModel.requestsLength--;
                var n = 0 == i.status;
                EventCenter.sendEvent(EventConst.DealFriendAdd, {
                    idx: t.mData.uid,
                    isAgree: n,
                    chatSign: i.chatSign || ""
                }), EventCenter.sendEvent(EventConst.MenuRedPoint), EventCenter.sendEvent(EventConst.AddFriend), 
                0 == i.status ? (hortor.TipManager.tip("成功添加好友"), t.mData.isFriend = !0, t.mData.chatSign = i.chatSign, 
                t.formatShow()) : 1 == i.status ? hortor.TipManager.tip("你的好友数已达上限") : 2 == i.status && hortor.TipManager.tip("对方的好友数已达上限"), 
                chatModel.showPrivateChat(t.mData.uid, i.chatSign), 0 != t.mData.requesType, gateModel.updateGate(e.WindowType.WINDOW_FRIEND), 
                EventCenter.sendEvent(EventConst.RefreshApplyShow), EventCenter.sendEvent(EventConst.updateFriendList);
            });
        }, i.prototype.onReject = function() {
            var t = this, i = this;
            HttpService.post(e.ServerMsg.FRIEND_VERIFY, "uid=" + playerModel.uid + "&fid=" + this.mData.uid + "&isAgree=false", function(n) {
                i.setBtnEnabled(!1), playerModel.requestsLength--, EventCenter.sendEvent(EventConst.DealFriendAdd, {
                    idx: t.mData.uid,
                    isAgree: !1
                }), EventCenter.sendEvent(EventConst.MenuRedPoint), hortor.TipManager.tip("已拒绝对方的申请"), 
                gateModel.updateGate(e.WindowType.WINDOW_FRIEND), EventCenter.sendEvent(EventConst.RefreshApplyShow);
            });
        }, i.prototype.setBtnEnabled = function(e) {
            this.kBtnAgree.touchEnabled = e, this.kBtnReject.touchEnabled = e;
        }, i.prototype.clear = function() {}, i;
    }(eui.Component);
    e.FriendApplyItem = t, __reflect(t.prototype, "game.FriendApplyItem", [ "eui.UIComponent", "egret.DisplayObject" ]);
}(game || (game = {})), window.game.FriendApplyItem = game.FriendApplyItem;

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.mGenderColor = [ 16734615, 42223 ], e.skinPath = "friend/FriendItemSkin", 
            e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.kGrpStatus.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onTouch, this), 
            this.kAvatar.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onShowPlayerInfo, this);
        }, i.prototype.onTouchItem = function(t) {
            var i = this;
            "energy" != t.target.name && HttpService.get(e.ServerMsg.MORE_PLAYER, "uid=" + playerModel.uid + "&fid=" + this.mData.uid + "&checksum=" + this.mData.chatSign + "&algorithm=chatSign&showDetails=true", function(t) {
                t.updateElapse = i.mData.updateElapse, t.inviteCode = i.mData.isCp ? t.inviteCode : "", 
                t.chatSign = i.mData.chatSign, hortor.WindowManager.showWindow(e.WindowType.WINDOW_PLAYERINFO, {
                    playerInfo: t,
                    from: Const.FriendInfo
                });
            });
        }, i.prototype.onData = function() {
            if (this.mData = this.data, 0 == this.data.uid) ; else {
                switch (this.data.isCp ? this.kImgCp.visible = !0 : this.kImgCp.visible = !1, this.kLabelCp.visible = this.data.isCp && (1 == this.data.status || 2 == this.data.status), 
                this.kImgVip.visible = this.data.isVip, 1 == this.data.gender ? (this.kAvatar.avatarBg.source = "common_json.common_img_tz1_1", 
                this.kLabelName.textColor = this.mGenderColor[1], this.kImgCp.source = "friend_json.friend_img_cpmen") : (this.kAvatar.avatarBg.source = "common_json.common_img_tz1_0", 
                this.kLabelName.textColor = this.mGenderColor[0], this.kImgCp.source = "friend_json.friend_img_cpwomen"), 
                this.kAvatar.starLabel.text = this.data.crowns + "", util.setRemoteAvatar(this.kAvatar.avatarImage, this.data.headImg), 
                this.kLabelName.text = util.strSub(this.data.name, 4), this.kImgSend.visible = !1, 
                this.data.status) {
                  case 1:
                    this.kImgPower.source = "friend_json.friend_icon_hy3";
                    break;

                  case 2:
                    this.kImgPower.source = "friend_json.friend_icon_hy3", this.kImgSend.visible = !0;
                    break;

                  case 3:
                    this.kImgPower.source = "friend_json.friend_icon_hy1";
                    break;

                  case 4:
                    this.kImgPower.source = "friend_json.friend_icon_hy2";
                }
                this.data.updateElapse < 300 ? (this.kLabelTime.text = "在线", this.kImgOnline.source = "friend_json.friend_icon_hy5", 
                this.kLabelTime.visible = !1) : (this.kImgOnline.source = "friend_json.friend_icon_hy6", 
                this.kLabelTime.visible = !0, this.kLabelTime.text = "上次在线" + e.ComFunc.showElapseTime(this.data.updateElapse)), 
                this.data.status < 3 ? this.playEffect() : egret.Tween.removeTweens(this.kGrpStatus), 
                this.data.province > 0 && Province[this.data.province] ? (this.kGrpPos.visible = !0, 
                this.kGrpPos.includeInLayout = !0, this.kLabelPosition.text = e.ComFunc.getUserLocation(this.data.province, this.data.city)) : (this.kGrpPos.visible = !1, 
                this.kGrpPos.includeInLayout = !1);
            }
        }, i.prototype.onShowPlayerInfo = function() {
            HttpService.get(e.ServerMsg.MORE_PLAYER, "uid=" + playerModel.uid + "&fid=" + this.data.uid + "&checksum=" + this.data.chatSign + "&algorithm=chatSign&showDetails=true", function(t) {
                hortor.WindowManager.showWindow(e.WindowType.WINDOW_PLAYERINFO, {
                    playerInfo: t,
                    from: Const.FriendInfo
                });
            });
        }, i.prototype.playEffect = function() {
            egret.Tween.removeTweens(this.kGrpStatus), util.setScale(this.kGrpStatus, 1);
            var e = egret.Tween.get(this.kGrpStatus, {
                loop: !0
            });
            e.to({
                scaleX: 1.2,
                scaleY: 1.2
            }, 1200).to({
                scaleX: 1,
                scaleY: 1
            }, 1200);
        }, i.prototype.onTouch = function() {
            var t = this;
            egret.Tween.removeTweens(this.kGrpStatus), this.data.status > 2 || HttpService.post(e.ServerMsg.DONATE, "uid=" + playerModel.uid + "&fid=" + this.data.uid, function(i) {
                var n = i.inc || 0;
                n ? (playerModel.friendsEnergyCounts--, EventCenter.sendEvent(EventConst.MenuRedPoint), 
                guildModel.addGuildTaskValue(e.GuildProxy.gainDonate, 1), 1 == t.data.status && EventCenter.sendEvent(EventConst.ReportGetFriendEnergy)) : 1 == t.data.status && hortor.TipManager.tip("能量已满，用完再来领吧"), 
                playerModel.updateAll(i), EventCenter.sendEvent(EventConst.EnergyChange), EventCenter.sendEvent(EventConst.updateFriendList), 
                EventCenter.sendEvent(EventConst.RefreshFreeEnergy);
            });
        }, i;
    }(e.ItemRenderBase);
    e.FriendItemRender = t, __reflect(t.prototype, "game.FriendItemRender");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.messages = [ "当你需要时候,我就在这里,不离不弃", "软萌新人,求抱大腿", "我对你仰慕已久,脸红红求加好友", "十年修得同船渡,百年修得一起玩" ], 
            e.textColorArr = [ 1677275, 15363177 ], e.skinPath = "friend/FriendRecommendItemSkin", 
            e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.addEventListener(egret.TouchEvent.TOUCH_END, this.addFriend, this);
        }, i.prototype.onData = function() {
            hortor.WindowManager.isOpen(e.WindowType.WINDOW_RECOMMEND_ONLINE) ? this.kImgOnLine.visible = !0 : this.kImgOnLine.visible = this.data.updateElapse < 300, 
            this.bgimage.source = 1 == this.data.gender ? "friend_json.friend_img_fjdr1" : "friend_json.friend_img_fjdr2", 
            1 == this.data.gender ? this.nameTxt.textColor = this.textColorArr[0] : this.nameTxt.textColor = this.textColorArr[1], 
            this.nameTxt.text = util.strSub(this.data.name, 5), this.starTxt.text = this.data.crowns, 
            this.posTxt.text = e.ComFunc.getUserLocation(this.data.province, this.data.city), 
            util.setRemoteAvatar(this.playerIcon, this.data.headImg), this.itemGroup.scaleX = this.itemGroup.scaleY = 0, 
            egret.Tween.get(this.itemGroup).wait(200 * this.itemIndex).to({
                scaleX: 1,
                scaleY: 1
            }, 500, egret.Ease.backOut).call(function() {}, this);
        }, i.prototype.addFriend = function() {
            var t = this.messages[Math.floor(4 * Math.random())];
            hortor.WindowManager.showWindow(e.WindowType.WINDOW_ADDFRIEND, {
                initMsg: t,
                inviteCode: this.data.inviteCode,
                requestType: this.data.requestType
            });
        }, i;
    }(e.ItemRenderBase);
    e.FriendRecommendItem = t, __reflect(t.prototype, "game.FriendRecommendItem");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e.mIsRequesting = !1, e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.retryBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onTouchRematch, this), 
            EventCenter.addEventListener(EventConst.updateRecommendStatus, this.updateShowBtn, this), 
            this.friendList.itemRenderer = e.FriendRecommendItem, this.mData = new eui.ArrayCollection(), 
            this.friendList.dataProvider = this.mData, this.onShowInfo(!0);
        }, i.prototype.onOpen = function() {
            friendModel.switchTabToNearBy || this.onShowInfo(!0), friendModel.switchTabToNearBy = !0;
        }, i.prototype.onData = function() {}, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.updateShowBtn = function() {
            this.retryTipTxt.text = friendModel.mCDNearByTime + "秒后再次使用", this.retryBtn.enabled = !Boolean(friendModel.mCDNearByTime), 
            this.retryTipTxt.visible = !this.retryBtn.enabled;
        }, i.prototype.onTouchRematch = function() {
            return friendModel.mCDNearByTime > 0 ? void hortor.TipManager.tip(friendModel.mCDNearByTime + "秒后再次使用") : void this.onShowInfo();
        }, i.prototype.onShowInfo = function(t) {
            var i = this;
            void 0 === t && (t = !1), this.mIsRequesting || friendModel.mCDNearByTime > 0 && 0 != !!this.mData || (this.mIsRequesting = !0, 
            HttpService.post(e.ServerMsg.FRIEND_NEARBY, "uid=" + playerModel.uid, function(e) {
                i.mIsRequesting = !1;
                for (var n = 0, o = e.players; n < o.length; n++) {
                    var a = o[n];
                    a.requestType = e.fromType;
                }
                i.mData.replaceAll(e.players), i.friendList.dataProviderRefreshed(), t || friendModel.countDownNearbyCDTime(), 
                i.updateShowBtn();
            }));
        }, i;
    }(e.TabWindowBase);
    e.FriendRecommendNearbyWindow = t, __reflect(t.prototype, "game.FriendRecommendNearbyWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e.mIsRequesting = !1, e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.retryBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onTouchRematch, this), 
            EventCenter.addEventListener(EventConst.updateRecommendStatus, this.updateShowBtn, this), 
            this.friendList.itemRenderer = e.FriendRecommendItem, this.mData = new eui.ArrayCollection(), 
            this.friendList.dataProvider = this.mData, this.onShowInfo(!0);
        }, i.prototype.onOpen = function() {
            friendModel.switchTabToOnline || this.onShowInfo(!0), friendModel.switchTabToOnline = !0;
        }, i.prototype.onData = function() {}, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.updateShowBtn = function() {
            this.retryTipTxt.text = friendModel.mCDOnlineTime + "秒后再次使用", this.retryBtn.enabled = !Boolean(friendModel.mCDOnlineTime), 
            this.retryTipTxt.visible = !this.retryBtn.enabled;
        }, i.prototype.onTouchRematch = function() {
            return friendModel.mCDOnlineTime > 0 ? void hortor.TipManager.tip(friendModel.mCDOnlineTime + "秒后再次使用") : void this.onShowInfo();
        }, i.prototype.onShowInfo = function(t) {
            var i = this;
            void 0 === t && (t = !1), this.mIsRequesting || friendModel.mCDOnlineTime > 0 && 0 != !!this.mData || (this.mIsRequesting = !0, 
            HttpService.post(e.ServerMsg.FRIEND_ONLINE, "uid=" + playerModel.uid, function(e) {
                i.mIsRequesting = !1;
                for (var n = 0, o = e.players; n < o.length; n++) {
                    var a = o[n];
                    a.requestType = e.fromType;
                }
                i.mData.replaceAll(e.players), i.friendList.dataProviderRefreshed(), t || friendModel.countDownOnlineCDTime(), 
                i.updateShowBtn();
            }));
        }, i;
    }(e.TabWindowBase);
    e.FriendRecommendOnlineWindow = t, __reflect(t.prototype, "game.FriendRecommendOnlineWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.kList.itemRenderer = e.FriendItemRender, this.mListData = new eui.ArrayCollection(), 
            this.kList.dataProvider = this.mListData, EventCenter.addEventListener(EventConst.updateFriendList, this.updateFriendList, this), 
            EventCenter.addEventListener(EventConst.DeleteFriend, this.updateFriendList, this), 
            this.kBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onSendAndRecv, this), 
            this.kBtnAdd.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onAdd, this), this.kBtnRecommend.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onAdd, this), 
            this.kBtnNew.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onNewFriend, this), 
            EventCenter.addEventListener(EventConst.RefreshFreeEnergy, this.updateFreeEnergy, this), 
            EventCenter.addEventListener(EventConst.RefreshApplyShow, this.updateApplyCountInfo, this);
        }, i.prototype.onOpen = function() {
            var t = this;
            HttpService.get(e.ServerMsg.SHOW_DONATE, "uid=" + playerModel.uid, function(e) {
                console.log("FriendModel refresh:" + (null != e)), e && (friendModel.friendData = e.friends, 
                friendModel.sortData(e.cp), t.formatFriendView(e));
            });
        }, i.prototype.formatFriendView = function(e) {
            playerModel.dailyCount = e.dailyCount, playerModel.dailyLimit = e.dailyLimit, this.kGrpEmptyBottom.visible = this.kGrpEmpty.visible = !Boolean(friendModel.friendData.length > 0), 
            this.kGrpBottom.visible = this.kImgPictureFrame.visible = this.kImgPicture.visible = !this.kGrpEmpty.visible, 
            this.kLabelFriendCount.text = friendModel.friendData.length + "/100", this.kLabelCount.text = playerModel.dailyCount + "/" + playerModel.dailyLimit, 
            this.updateApplyCountInfo(), this.playBannerAnim(), 0 == !!this.mListData ? this.mListData = new eui.ArrayCollection(friendModel.friendData) : (this.mListData.replaceAll(friendModel.friendData), 
            this.kList.dataProviderRefreshed()), playerModel.friendsEnergyCounts = 0;
            for (var t = !1, i = 0; i < e.friends.length; i++) 1 == e.friends[i].status ? playerModel.friendsEnergyCounts++ : 2 == e.friends[i].status && (t = !0);
            this.kBtn.enabled = playerModel.friendsEnergyCounts > 0 || t;
        }, i.prototype.updateApplyCountInfo = function() {
            this.kGrpNewRed.visible = Boolean(playerModel.requestsLength), this.kLabelNewCount.text = String(playerModel.requestsLength);
        }, i.prototype.updateFreeEnergy = function() {
            this.kLabelCount.text = playerModel.dailyCount + "/" + playerModel.dailyLimit;
        }, i.prototype.updateFriendList = function() {
            this.onOpen();
        }, i.prototype.playBannerAnim = function() {
            var e = this, t = function() {
                egret.Tween.removeTweens(e.kImgPicture), egret.Tween.get(e.kImgPicture).to({
                    alpha: 0
                }, 2e3, egret.Ease.cubicIn).wait(500).call(function() {
                    egret.log("showIndexh1:", n), n += 1, n > 3 && (n = 1), egret.log("showIndexh2:", n), 
                    e.kImgPicture.source = "friend_json.friend_img_hy" + n, i();
                });
            }, i = function() {
                egret.Tween.removeTweens(e.kImgPicture), egret.Tween.get(e.kImgPicture).to({
                    alpha: 1
                }, 2e3, egret.Ease.quadOut).wait(300).call(function() {
                    t();
                });
            }, n = 1;
            t();
        }, i.prototype.onClose = function() {
            egret.Tween.removeTweens(this.kImgPicture), friendModel.switchTabToNearBy = !1, 
            friendModel.switchTabToOnline = !1;
        }, i.prototype.onData = function() {}, i.prototype.onAdd = function() {
            hortor.WindowManager.showWindow(e.WindowType.WINDOW_RECOMMEND_ANIM);
        }, i.prototype.onNewFriend = function() {
            hortor.WindowManager.showWindow(e.WindowType.WINDOW_NEW_FRIEND);
        }, i.prototype.onSendAndRecv = function() {
            var t = this;
            this.kBtn.enabled = !1, HttpService.post(e.ServerMsg.DONATE, "uid=" + playerModel.uid + "&fid=0", function(i) {
                t.checkIsFullEnergy(i) && hortor.TipManager.alert("能量已满，用完再来领吧"), playerModel.friendsEnergyCounts = 0;
                for (var n = 0; n < i.friends.length; n++) 1 == i.friends[n].status && playerModel.friendsEnergyCounts++;
                EventCenter.sendEvent(EventConst.MenuRedPoint);
                var o = i.inc || 0;
                EventCenter.sendEvent(EventConst.updateFriendList), playerModel.updateAll(i), EventCenter.sendEvent(EventConst.EnergyChange), 
                EventCenter.sendEvent(EventConst.RefreshFreeEnergy), guildModel.addGuildTaskValue(e.GuildProxy.gainDonate, o);
            });
        }, i.prototype.checkIsFullEnergy = function(e) {
            for (var t = !1, i = e.friends, n = 0; n < i.length; n++) if (1 == i[n].status) {
                t = !0;
                break;
            }
            return !e.cp || _.isEmpty(e.cp) || t || (t = e.cp && 1 == e.cp.status), t;
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i;
    }(e.TabWindowBase);
    e.FriendWindow = t, __reflect(t.prototype, "game.FriendWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e.mRequest = [], e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.kBtnAdd.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onAdd, this), this.kBtnCopy.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onCopy, this), 
            this.kBtnIgnore.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onIgnoreAll, this), 
            EventCenter.addEventListener(EventConst.DealFriendAdd, this.refreshFriendList, this), 
            EventCenter.addEventListener(EventConst.updateNewFriendList, this.updateNewFriendInfo, this);
        }, i.prototype.onOpen = function() {
            var t = this;
            HttpService.get(e.ServerMsg.MESSAGE, "uid=" + playerModel.uid + "&onlyNew=false", function(e) {
                e && messageModel.updateProperty(e), t.formatData(e);
            }), this.kLabelCode.text = "我的友情码：" + playerModel.inviteCode;
        }, i.prototype.onData = function() {}, i.prototype.formatData = function(t) {
            for (var i = 0, n = this.mRequest; i < n.length; i++) for (var o = n[i], a = 0, r = t.requests; a < r.length; a++) {
                var s = r[a];
                s.uid == o.uid && (s.isFriend = o.isFriend || !1);
            }
            this.mRequest = t.requests, playerModel.requestsLength = this.mRequest.length, this.mRequest.sort(function(e, t) {
                return t.createAt - e.createAt;
            }), this.mRequest.sort(function(e, t) {
                return t.requesType - e.requesType;
            }), this.updateAll(), gateModel.updateGate(e.WindowType.WINDOW_FRIEND), EventCenter.sendEvent(EventConst.RefreshApplyShow);
        }, i.prototype.updateAll = function() {
            this.kGrp.removeChildren();
            for (var t = 0; t < this.mRequest.length; t++) {
                var i = this.mRequest[t];
                0 == i.requesType || this.kRecommendTip.parent || this.kGrp.addChild(this.kRecommendTip);
                var n = new e.FriendApplyItem();
                n.setData(i), this.kGrp.addChild(n);
            }
            this.updateStateShow();
        }, i.prototype.refreshFriendList = function(e) {
            var t = e.data.idx;
            if (e.data.isAgree) {
                var i = _.find(this.mRequest, function(e) {
                    return e.uid == t;
                });
                i && (i.isFriend = !0, e.data.chatSign && "" != e.data.chatSign && (i.chatSign = e.data.chatSign));
                var n = _.findIndex(this.mRequest, function(e) {
                    return e.uid == t;
                });
                if (-1 != n) {
                    var o = 0 == this.mRequest[n].requesType ? 0 : 1;
                    this.kGrp.getChildAt(n + o).setData(i, !0);
                }
            } else {
                var a = _.findIndex(this.mRequest, function(e) {
                    return e.uid == t;
                });
                if (a > -1) {
                    var o = 0 == this.mRequest[a].requesType ? 0 : 1;
                    this.kGrp.removeChildAt(a + o), this.mRequest.splice(a, 1), this.kGrpEmpty.visible = 0 == this.mRequest.length;
                }
            }
            this.updateStateShow();
        }, i.prototype.updateStateShow = function() {
            var e = _.findIndex(this.mRequest, function(e) {
                return 0 != e.type;
            });
            -1 == e && this.kRecommendTip.parent && this.kGrp.removeChild(this.kRecommendTip), 
            this.kGrpEmpty.visible = 0 == this.mRequest.length, this.kBtnIgnore.enabled = this.kBtnIgnore.visible = this.mRequest.length > 0;
        }, i.prototype.onAdd = function() {
            var t = /^[A-Za-z0-9]+$/;
            t.test(this.kEdit.text) ? this.kEdit.text.toUpperCase() == playerModel.inviteCode ? hortor.TipManager.alert("船长大人！这是你自己的友情码") : hortor.WindowManager.showWindow(e.WindowType.WINDOW_ADDFRIEND, {
                initMsg: "",
                inviteCode: this.kEdit.text.toUpperCase(),
                requestType: 0
            }) : hortor.TipManager.alert("友情码错误,请重新输入");
        }, i.prototype.onCopy = function() {
            if (gateModel.isWxgame) platform.common.setClipboardData("" + playerModel.inviteCode, function() {
                platform.common.showToast("已复制", "success", null, 1500);
            }, function() {}, function() {}); else {
                var e = {
                    success: function() {
                        hortor.TipManager.tip("复制成功");
                    },
                    error: function() {
                        hortor.TipManager.tip("复制失败");
                    }
                };
                superClipBoard.copy(playerModel.inviteCode, e);
            }
        }, i.prototype.onIgnoreAll = function() {
            var t = this;
            this.kBtnIgnore.enabled = !1, HttpService.post(e.ServerMsg.FRIEND_CLEAR, "uid=" + playerModel.uid, function(i) {
                hortor.TipManager.tip("操作成功"), t.mRequest = [], t.kGrp.removeChildren(), playerModel.requestsLength = 0, 
                EventCenter.sendEvent(EventConst.ClearAllApplyFriend), EventCenter.sendEvent(EventConst.MenuRedPoint), 
                t.updateStateShow(), gateModel.updateGate(e.WindowType.WINDOW_FRIEND), EventCenter.sendEvent(EventConst.RefreshApplyShow);
            }, function(e) {
                t.kBtnIgnore.enabled = !0;
            }, this), this.updateStateShow();
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.onClose = function() {
            this.kGrp.removeChildren();
        }, i.prototype.updateNewFriendInfo = function() {
            var t = this;
            HttpService.get(e.ServerMsg.MESSAGE, "uid=" + playerModel.uid + "&onlyNew=false", function(e) {
                e && messageModel.updateProperty(e), t.formatData(e);
            });
        }, i;
    }(e.WindowBase);
    e.NewFriendWindow = t, __reflect(t.prototype, "game.NewFriendWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {}, i.prototype.onOpen = function() {
            this.onRecommend();
        }, i.prototype.onRecommend = function() {
            var t = this;
            playerModel.recommendOff && HttpService.post(e.ServerMsg.SETTING, "uid=" + playerModel.uid + "&recommendOff=false", function(e) {
                console.log("打开推荐好友返回：" + JSON.stringify(e)), playerModel.recommendOff = e.recommendOff;
            }), this.mSearchAnim = new e.ArmaturePlayer("leida"), this.kGrpAnim.addChild(this.mSearchAnim), 
            this.mSearchAnim.x = 250, this.mSearchAnim.y = 250, this.kGrpAnimAll.visible = !0;
            var i, n = !1;
            HttpService.post(e.ServerMsg.FRIEND_NEARBY, "uid=" + playerModel.uid, function(e) {
                i = e, n && t.onFriendQuickEnd(i);
            }), this.mSearchAnim.play("enter", 1, function() {
                n = !0, i ? t.onFriendQuickEnd(i) : t.mSearchAnim.play("loop", 0, function() {
                    t.randomHeads(), i && t.onFriendQuickEnd(i);
                }, t);
            }, this);
        }, i.prototype.onFriendQuickEnd = function(t) {
            var i = this;
            t && t.players ? this.mSearchAnim.play("end", 1, function() {
                i.kGrpAnim.removeChild(i.mSearchAnim), i.mSearchAnim.dispose(), i.kGrpAnimAll.visible = !1, 
                hortor.WindowManager.showWindow(e.WindowType.WINDOW_RECOMMEND_NEARBY), i.hide();
            }, this, function() {
                for (var n = 0; 4 > n; n++) {
                    var o = n < t.players.length ? e.ComFunc.headImg(t.players[n].headImg) : e.ResourcePath.getHeadRandomPng(playerModel.gender);
                    i.mSearchAnim.setSlotSkin("head_slot" + n, o);
                }
            }) : hortor.TipManager.tip("好友推荐数据返回错误：", t);
        }, i.prototype.randomHeads = function() {
            for (var t = 0; 4 > t; t++) this.mSearchAnim.setSlotSkin("head_slot" + t, e.ResourcePath.getHeadRandomPng(playerModel.gender));
        }, i.prototype.onData = function() {}, i.prototype.prepare = function(e) {
            e(null);
        }, i;
    }(e.WindowBase);
    e.RecommendAnimWindow = t, __reflect(t.prototype, "game.RecommendAnimWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.title.source = "common_txt_sqlb", this.panel.helpBtn.visible = !1, this.baseScroller.viewport = this.baseList, 
            this.baseData = new eui.ArrayCollection([]), this.baseList.dataProvider = this.baseData, 
            this.baseList.itemRenderer = e.GuildApplyNode, EventCenter.addEventListener(EventConst.GuildDealApplyMember, this.dealApplyMember, this);
        }, i.prototype.onData = function() {
            this.applyList = this.data, this.openPanel();
        }, i.prototype.prepare = function(t, i) {
            HttpService.get(e.ServerMsg.GUILD_JOIN_REQUEST, "uid=" + playerModel.uid, function(i) {
                e.GuildCache.GuildApplyRedPoint = !1, EventCenter.sendEvent(EventConst.refreshGuildRedPoint), 
                gateModel.updateGate(e.ScreenType.GUILD_SCREEN), t(i.players);
            }, i);
        }, i.prototype.openPanel = function() {
            var e = this;
            this.emptyTips.text = "暂时没有申请信息", this.donateNum.visible = !1, this.desc.text = "申请消息最多保留50条", 
            this.desc.visible = !0;
            var t = e.applyList.sort(function(e, t) {
                return t.createdTime - e.createdTime;
            });
            this.baseData.replaceAll(t), this.baseList.dataProviderRefreshed(), this.isShowEmpty();
        }, i.prototype.dealApplyMember = function(e) {
            var t = this, i = e.data, n = _.findIndex(t.applyList, function(e) {
                return e.uid == i.memUid;
            });
            t.applyList.splice(n, 1);
            var o = t.applyList.sort(function(e, t) {
                return t.createdTime - e.createdTime;
            });
            t.baseData.source = o, t.baseData.refresh(), this.isShowEmpty();
        }, i.prototype.isShowEmpty = function() {
            this.emptyGroup.visible = 0 == this.applyList.length;
        }, i;
    }(e.WindowBase);
    e.GuildApplyWindow = t, __reflect(t.prototype, "game.GuildApplyWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.title.source = "guild_txt_tittle1", this.panel.helpBtn.visible = !1, this.baseScroller.viewport = this.baseList, 
            this.baseData = new eui.ArrayCollection(), this.baseList.dataProvider = this.baseData, 
            this.baseList.itemRenderer = e.GuildDonateNewsNode;
        }, i.prototype.onData = function() {
            this.emptyTips.text = "暂时没有捐赠信息！", this.desc.textAlign = egret.HorizontalAlign.LEFT, 
            this.desc.text = "每天可赠送其他玩家5张拼图碎片", this.donateNum.text = playerModel.dailyEventInfo.donateJigsawCount + "/5", 
            this.donateGroup.visible = !0, this.baseData.source = e.GuildCache.Donates, this.emptyGroup.visible = 0 == e.GuildCache.Donates.length;
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i;
    }(hortor.Window);
    e.GuildDonateNewsWindow = t, __reflect(t.prototype, "game.GuildDonateNewsWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.effect = null, e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            EventCenter.addEventListener(EventConst.guildDonateJigsawSelected, this.refreshNode2, this), 
            EventCenter.addEventListener(EventConst.guildDonateJigsawClose, this.closeBtnFunc, this), 
            this.maskImage.addEventListener(egret.TouchEvent.TOUCH_TAP, this.closeBtnFunc, this), 
            this.baseData1 = new eui.ArrayCollection(), this.list1.dataProvider = this.baseData1, 
            this.list1.itemRenderer = e.GuildDonateNode, this.baseData2 = new eui.ArrayCollection(), 
            this.list2.dataProvider = this.baseData2, this.list2.itemRenderer = e.GuildDonateNode2, 
            this.resetStatus();
        }, i.prototype.onData = function() {
            this.resetStatus();
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.resetStatus = function() {
            var t = this;
            this.group.scaleX = this.group.scaleY = .1, egret.Tween.get(this.group).to({
                scaleX: 1,
                scaleY: 1
            }, 300, egret.Ease.backOut).call(function() {
                egret.Tween.removeTweens(t.group);
            }), this.baseData1.source = jigsawModel.jigsawInfo.bags, this.baseData1.refresh(), 
            this.baseData2.source = e.GuildData.slots, this.baseData2.refresh();
            for (var i = 0, n = 0; n < e.GuildData.slots.length; n++) 4 == e.GuildData.slots[n].status && i++;
            this.donateLabel.text = "请求次数" + i + "/2";
        }, i.prototype.refreshNode2 = function(t) {
            if (0 == e.GuildData.slots[0].num && 0 == e.GuildData.slots[0].status) {
                if (e.GuildData.slots[0].selectedNum == t.data) return;
                e.GuildData.slots[0].selectedNum = t.data || 0;
            } else if (0 == e.GuildData.slots[1].num && 0 == e.GuildData.slots[1].status) {
                if (e.GuildData.slots[1].selectedNum == t.data) return;
                e.GuildData.slots[1].selectedNum = t.data || 0;
            }
            this.baseData2.replaceAll(e.GuildData.slots), this.list2.dataProviderRefreshed();
        }, i.prototype.closeBtnFunc = function() {
            soundModel.buttonClose(), hortor.WindowManager.hideWindow(e.WindowType.WINDOW_GUILD_DONATE);
        }, i;
    }(hortor.Window);
    e.GuildDonateWindow = t, __reflect(t.prototype, "game.GuildDonateWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e.oldInput = "", e.changedtxt = "", e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.closeBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.closeBtnFunc, this), 
            this.okBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.okBtnFunc, this), this.textInput.addEventListener(egret.Event.FOCUS_OUT, this.textInputFunc, this), 
            this.textInput.addEventListener(egret.Event.FOCUS_OUT, this.textInputFocusout, this);
        }, i.prototype.onData = function() {
            this.textInput.text = e.GuildData.guild.notice || "";
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.okBtnFunc = function() {
            var t = this, i = e.ComFunc.trim(this.changedtxt);
            i = e.ComFunc.enCodeHtml(i), HttpService.post(e.ServerMsg.GUILD_SETTING, {
                uid: playerModel.uid,
                notice: i,
                icon: e.GuildData.guild.icon,
                mode: e.GuildData.guild.mode,
                crown: e.GuildData.guild.needCrown
            }, function(i) {
                e.GuildData.guild = i.guild, EventCenter.sendEvent(EventConst.GuildSetting), hortor.TipManager.bubble("修改成功"), 
                t.closeBtnFunc();
            });
        }, i.prototype.textInputFunc = function() {
            for (var e = 0, t = this.textInput.text, i = 0; i < t.length; i++) {
                var n = new RegExp("[\\u4E00-\\u9FFF]", "");
                e += n.test(t[i]) ? 2 : 1;
            }
            if (this.countLabel.text = (e > 150 ? 150 : e) + "/150", 150 >= e) this.oldInput = this.textInput.text, 
            this.changedtxt = this.oldInput; else {
                for (var o = "", e = 0, t = this.textInput.text, i = 0; i < t.length; i++) {
                    var n = new RegExp("[\\u4E00-\\u9FFF]", "");
                    e += n.test(t[i]) ? 2 : 1, 150 >= e && (o += t[i]);
                }
                this.textInput.text = this.oldInput = o, this.changedtxt = o;
            }
        }, i.prototype.textInputFocusout = function() {
            this.textInput.text = this.changedtxt;
        }, i.prototype.closeBtnFunc = function() {
            hortor.WindowManager.hideWindow(e.WindowType.WINDOW_GUILD_NOTICE);
        }, i;
    }(hortor.Window);
    e.GuildEditorNoticeWindow = t, __reflect(t.prototype, "game.GuildEditorNoticeWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.closeBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.closeBtnFunc, this), 
            this.baseList.addEventListener(eui.ItemTapEvent.ITEM_TAP, this.listItemFunc, this), 
            this.baseScroll.viewport = this.baseList, this.baseData = new eui.ArrayCollection(), 
            this.baseList.dataProvider = this.baseData, this.baseList.itemRenderer = e.GuildFeedbackItem;
        }, i.prototype.onData = function() {
            this.baseData.source = this.data.honorees, this.baseData.refresh();
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.listItemFunc = function(e) {
            var t = e.itemRenderer;
            t.bgFunc();
        }, i.prototype.closeBtnFunc = function() {
            hortor.WindowManager.hideWindow(e.WindowType.WINDOW_GUILD_FEEDBACK_SHOW);
        }, i;
    }(hortor.Window);
    e.GuildFeedbackShowWindow = t, __reflect(t.prototype, "game.GuildFeedbackShowWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            var t = this;
            this.panel.helpBtn.visible = !1, hortor.NotificationManager.add(e.NotificationType.GUILD_FEEDBACK_REFFRESH, this.refreshList, this), 
            t.baseList.addEventListener(eui.ItemTapEvent.ITEM_TAP, this.baseItemFunc, this), 
            t.baseScroll.viewport = t.baseList, t.baseData = new eui.ArrayCollection(), t.baseList.dataProvider = t.baseData, 
            t.baseList.itemRenderer = e.GuildFeedbackNode;
        }, i.prototype.onData = function() {
            var t = this;
            t.emptyGroup.visible = 0 == e.GuildDailyWelfareData.feedbacks.length, e.GuildDailyWelfareData.feedbacks = _.sortBy(e.GuildDailyWelfareData.feedbacks, "expire").reverse(), 
            e.GuildDailyWelfareData.feedbacks = _.sortBy(e.GuildDailyWelfareData.feedbacks, "hasGot"), 
            t.baseData.source = e.GuildDailyWelfareData.feedbacks, t.baseData.refresh();
        }, i.prototype.onOpen = function() {}, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.baseItemFunc = function(e) {
            var t = e.itemRenderer;
            t.bgFunc();
        }, i.prototype.refreshList = function() {
            var t = this;
            e.GuildDailyWelfareData.feedbacks = _.sortBy(e.GuildDailyWelfareData.feedbacks, "expire").reverse(), 
            e.GuildDailyWelfareData.feedbacks = _.sortBy(e.GuildDailyWelfareData.feedbacks, "hasGot"), 
            t.baseData.replaceAll(e.GuildDailyWelfareData.feedbacks), t.baseList.dataProviderRefreshed();
        }, i;
    }(hortor.Window);
    e.GuildFeedbackWindow = t, __reflect(t.prototype, "game.GuildFeedbackWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.onViewRegister();
        }, i.prototype.onData = function() {
            this.openPanel();
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.onViewRegister = function() {
            this.closeBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.closeBtnFunc, this), 
            this.sendBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.sendBtnFunc, this), 
            this.textInput.addEventListener(egret.Event.CHANGE, this.textInputFunc, this);
        }, i.prototype.onViewRemove = function() {
            this.closeBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.closeBtnFunc, this), 
            this.sendBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.sendBtnFunc, this), 
            this.textInput.addEventListener(egret.Event.CHANGE, this.textInputFunc, this);
        }, i.prototype.openPanel = function() {
            var t = this;
            t.hornCount.text = "x" + playerModel.hornCount, t.textInput.prompt = e.GuildData.recruitSignature.length > 0 ? e.GuildData.recruitSignature : "相互协助，共御强敌！欢迎每一位活跃的海盗加入我们", 
            this.hornIcon0.source = this.hornIcon1.source = e.ItemManager.getItemInfo("horn").icon;
        }, i.prototype.textInputFunc = function() {
            for (var e = 0, t = this, i = t.textInput.text, n = 0; n < i.length; n++) {
                var o = new RegExp("[\\u4E00-\\u9FFF]", "");
                e += o.test(i[n]) ? 2 : 1;
            }
            if (60 >= e) t.textInput.text = i; else {
                for (var a = "", e = 0, i = t.textInput.text, n = 0; n < i.length; n++) {
                    var o = new RegExp("[\\u4E00-\\u9FFF]", "");
                    e += o.test(i[n]) ? 2 : 1, 60 >= e && (a += i[n]);
                }
                t.textInput.text = a;
            }
        }, i.prototype.sendBtnFunc = function() {
            var t = this, i = this;
            if (playerModel.hornCount < 1) return void (gateModel.iosPay ? HttpService.get(e.ServerMsg.SHOP_LIST, "uid=" + playerModel.uid, function(t) {
                var i = _.find(t.goods.prop, function(e) {
                    return "horn" == e.goodsId;
                });
                i && hortor.WindowManager.showWindow(e.WindowType.WINDOW_SHOP_GOODS, i);
            }) : hortor.TipManager.bubble("道具不足"));
            if (playerModel.worldChatRemain > 0) return void hortor.TipManager.bubble("聊天速度太快，请" + playerModel.worldChatRemain + "s后再试");
            var n = e.ComFunc.trim(i.textInput.text);
            n = e.ComFunc.dealInputText(n, 60), "" == n && (n = e.GuildData.recruitSignature.length > 0 ? e.GuildData.recruitSignature : "相互协助，共御强敌！欢迎每一位活跃的海盗加入我们");
            var o = {
                uid: playerModel.uid,
                content: n
            };
            n = e.ComFunc.enCodeHtml(n), HttpService.post(e.ServerMsg.GUILD_RECRUIT, o, function(i) {
                playerModel.worldChatRemain = Const.chatLimitTime, chatModel.countDownWorldChatTime(), 
                e.GuildData.recruitSignature = n, playerModel.hornCount -= 1, hortor.TipManager.bubble("招募信息发送成功！"), 
                t.hide();
            });
        }, i.prototype.closeBtnFunc = function() {
            this.hide();
        }, i;
    }(e.WindowBase);
    e.GuildInviteWindow = t, __reflect(t.prototype, "game.GuildInviteWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.joinScroller.viewport = this.joinList, this.searchScroller.viewport = this.searchList, 
            this.joinLogic = new e.GuildJoinLogic(this), this.createLogic = new e.GuildCreateLogic(this), 
            this.searchLogic = new e.GuildSearchLogic(this), this.joinLogic.onViewRegister(), 
            this.createLogic.onViewRegister(), this.searchLogic.onViewRegister(), this.createLogic.onEventCenterRegister(), 
            this.addClick(this.closeBtn, this.closeBtnFunc, this), this.tabBar.addEventListener(egret.Event.CHANGE, this.onTabChange, this);
        }, i.prototype.onData = function() {}, i.prototype.onOpen = function() {
            this.joinLogic.openPanel(), this.createLogic.openPanel(), this.searchLogic.openPanel();
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.closeBtnFunc = function() {
            hortor.ScreenManager.back();
        }, i.prototype.onTabChange = function(e) {
            soundModel.buttonOpen();
        }, i;
    }(e.ScreenBase);
    e.GuildJoinScreen = t, __reflect(t.prototype, "game.GuildJoinScreen");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(e) {
        function t() {
            var t = e.call(this) || this;
            return t.effect = null, t;
        }
        return __extends(t, e), t.prototype.onOpen = function() {
            var e = this;
            this.titleImg.source = "guild_join_title" + this.data + "_png", util.setScale(this.group, .1);
            var t = egret.Tween.get(this.group);
            t.to({
                scaleX: 1.5,
                scaleY: 1.5
            }, 300, egret.Ease.quadIn).to({
                scaleX: 1,
                scaleY: 1
            }, 200, egret.Ease.quadOut).wait(1e3).call(function() {
                egret.Tween.removeTweens(e.group), e.hide();
            });
        }, t.prototype.onData = function() {}, t.prototype.prepare = function(e, t) {
            e(null);
        }, t;
    }(e.WindowBase);
    e.GuildJoinSuccessWindow = t, __reflect(t.prototype, "game.GuildJoinSuccessWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e._type = "", e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.panel.helpBtn.visible = !1, this.baseScroller.viewport = this.baseList, this.onViewRegister(), 
            this.onEventCenterRegister();
        }, i.prototype.onData = function() {
            this._type = this.data.type, this.guildData = this.data.guildData, this.openPanel();
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.onViewRegister = function() {
            this.outBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.outBtnFunc, this), 
            this.applyBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.applyBtnFunc, this), 
            this.inviteBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.inviteBtnFunc, this), 
            this.baseList.addEventListener(eui.ItemTapEvent.ITEM_TAP, this.memberItemFunc, this);
        }, i.prototype.onEventCenterRegister = function() {
            EventCenter.addEventListener(EventConst.GuildDutyChange, this.refreshMemManagerListFunc, this), 
            EventCenter.addEventListener(EventConst.GuildQuitMem, this.delMemManagerListEvent, this), 
            EventCenter.addEventListener(EventConst.guildDeleteMessage, this.guildDeleteMessage, this), 
            EventCenter.addEventListener(EventConst.refreshJigsawDonate, this.refreshJigsawDonate, this), 
            EventCenter.addEventListener(EventConst.refreshGuildRedPoint, this.initRedPoint, this);
        }, i.prototype.openPanel = function() {
            switch (this.baseData && this.baseData.removeAll(), this._type) {
              case e.GuildProxy.FromMember:
                var t = this.sortMembers();
                this.memberNum.text = "成员人数:\n" + t.length + "/20", this.baseData = new eui.ArrayCollection(t), 
                this.baseList.dataProvider = this.baseData, this.baseList.itemRenderer = e.GuildMemberNode;
                break;

              case e.GuildProxy.FromDonate:
                break;

              case e.GuildProxy.FromNews:
                break;

              case e.GuildProxy.FromManage:
                this.selfData = _.find(e.GuildData.members, function(e) {
                    return e.uid == playerModel.uid;
                }), this.applyGroup.visible = this.selfData && this.selfData.authority >= 7, this.manageGroup.visible = !0;
                var i = this.sortMembers();
                this.selfData && this.selfData.authority >= 7 && i.length < 20 && (this.inviteGroup.visible = !0), 
                this.memberNum.text = "成员人数:\n" + i.length + "/20", this.baseData = new eui.ArrayCollection(i), 
                this.baseList.dataProvider = this.baseData, this.baseList.itemRenderer = e.GuildManagerNode, 
                this.applyGroup.visible && this.initRedPoint();
            }
        }, i.prototype.initRedPoint = function() {
            this.applyRedPoint.visible = this._type == e.GuildProxy.FromManage && e.GuildCache.GuildApplyRedPoint;
        }, i.prototype.refreshJigsawDonate = function() {
            this.donateNum.text = "今日已赠送：" + dailyModel.dailyEventInfo.donateJigsawCount + "/5";
        }, i.prototype.sortMembers = function() {
            var t = this;
            if (t._type == e.GuildProxy.FromMember || t._type == e.GuildProxy.FromManage) {
                var i = t.guildData.members;
                t._type == e.GuildProxy.FromManage && (i = e.GuildData.members), i.sort(function(e, t) {
                    return e.authority != t.authority ? t.authority - e.authority : t.crowns - e.crowns;
                });
                for (var n = 0; n < i.length; n++) i[n].rid = n + 1;
                return i;
            }
        }, i.prototype.refreshMemManagerListFunc = function() {
            var t = this, i = this.sortMembers();
            t.baseData.replaceAll(i), t.baseList.dataProviderRefreshed(), t.selfData = _.find(e.GuildData.members, function(e) {
                return e.uid == playerModel.uid;
            }), t.applyGroup.visible = t.selfData && t.selfData.authority >= 7, t.selfData && t.selfData.authority >= 7 && i.length < 20 ? t.inviteGroup.visible = !0 : t.inviteGroup.visible = !1;
        }, i.prototype.delMemManagerListEvent = function() {
            var e = this, t = this.sortMembers();
            e.memberNum.text = "成员人数:\n" + t.length + "/20", e.baseData.replaceAll(t), e.baseData.refresh();
        }, i.prototype.guildDeleteMessage = function(t) {
            var i = this;
            i._type == e.GuildProxy.FromDonate && (0 == e.GuildCache.Donates.length ? (i.emptyGroup.visible = !0, 
            i.baseData.removeAll(), i.baseData = new eui.ArrayCollection([]), i.baseList.dataProvider = i.baseData) : (i.emptyGroup.visible = !1, 
            i.baseData = new eui.ArrayCollection(e.GuildCache.Donates), i.baseList.dataProvider = i.baseData));
        }, i.prototype.memberItemFunc = function(t) {
            var i = this;
            if (i._type == e.GuildProxy.FromManage) {
                var n = t.item;
                if (n.uid == playerModel.uid) return void hortor.TipManager.bubble("这是你自己啊!");
                var o = t.itemRenderer.localToGlobal(0, 0);
                o.x += 95, HttpService.get(e.ServerMsg.MORE_PLAYER, "uid=" + playerModel.uid + "&fid=" + n.uid + "&checksum=" + e.GuildCache.Members[n.uid].chatSign + "&algorithm=chatSign&showDetails=true", function(t) {
                    if (t.chatSign = e.GuildCache.Members[n.uid].chatSign, e.GuildCache.Members[playerModel.uid + ""].authority > n.authority && e.GuildCache.Members[playerModel.uid + ""].authority >= 7) {
                        var i = _.extend(n, t);
                        hortor.WindowManager.showWindow(e.WindowType.WINDOW_GUILD_OPERATION, {
                            pos: o,
                            personData: i
                        });
                    } else hortor.WindowManager.showWindow(e.WindowType.WINDOW_PLAYERINFO, {
                        playerInfo: t,
                        from: Const.GuildsChat
                    });
                });
            }
        }, i.prototype.outBtnFunc = function() {
            var t = e.GuildData.members, i = _.find(t, function(e) {
                return e.uid == playerModel.uid;
            });
            i && 15 == i.authority && e.GuildData.members.length > 1 ? hortor.TipManager.alert("您需要先转让团长才可以退团!") : this.sendQuitMsg();
        }, i.prototype.sendQuitMsg = function() {
            hortor.TipManager.alert("你确定要退出海盗团吗?\n退团会清掉你本周贡献的活跃度", function() {
                HttpService.post(e.ServerMsg.GUILD_QUIT, "uid=" + playerModel.uid + "&fid=" + playerModel.uid, function(t) {
                    playerModel.guild.gid = 0, e.GuildCache.Messages = [], e.GuildCache.NewMessages = [], 
                    e.GuildCache.Systems = [], e.GuildCache.Donates = [], e.GuildCache.Members = {}, 
                    e.GuildCache.GuildTimer = 0, e.GuildCache.GuildToIsland = !1;
                });
            });
        }, i.prototype.applyBtnFunc = function() {
            this.selfData && this.selfData.authority >= 7 && hortor.WindowManager.showWindow(e.WindowType.WINDOW_GUILD_APPLY);
        }, i.prototype.inviteBtnFunc = function() {
            hortor.WindowManager.showWindow(e.WindowType.WINDOW_GUILD_INVITE);
        }, i.prototype.isShowEmpty = function() {
            var t = this;
            t._type == e.GuildProxy.FromDonate ? t.emptyGroup.visible = 0 == t.guildData.list.length : t._type == e.GuildProxy.FromNews && (t.emptyGroup.visible = 0 == t.guildData.list.length);
        }, i;
    }(e.WindowBase);
    e.GuildMemListWindow = t, __reflect(t.prototype, "game.GuildMemListWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.effect = null, e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.onViewRegister();
        }, i.prototype.onData = function() {
            this._pos = this.data.pos, this._data = this.data.personData, this.openPanel();
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.onViewRegister = function() {
            var e = this;
            e.bg.addEventListener(egret.TouchEvent.TOUCH_TAP, this.closeBtnFunc, this), e.lookBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.lookBtnFunc, this), 
            e.dutiesBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.dutiesBtnFunc, this), 
            e.dismissBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.dismissBtnFunc, this);
        }, i.prototype.onViewRemove = function() {
            var e = this;
            e.bg.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.closeBtnFunc, this), e.lookBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.lookBtnFunc, this), 
            e.dutiesBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.dutiesBtnFunc, this), 
            e.dismissBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.dismissBtnFunc, this), 
            egret.Tween.removeTweens(this.mainGroup);
        }, i.prototype.openPanel = function() {
            var e = this;
            e.mainGroup.x = e._pos.x + 20, e.mainGroup.y = e._pos.y + 55, e.mainGroup.scaleX = e.mainGroup.scaleY = .1, 
            egret.Tween.get(e.mainGroup).to({
                scaleX: 1,
                scaleY: 1
            }, 300, egret.Ease.backOut);
        }, i.prototype.lookBtnFunc = function() {
            this.hide(), hortor.WindowManager.showWindow(e.WindowType.WINDOW_PLAYERINFO, {
                playerInfo: this._data,
                from: Const.GuildsChat
            });
        }, i.prototype.dutiesBtnFunc = function() {
            var t = this;
            this.hide(), hortor.WindowManager.showWindow(e.WindowType.WINDOW_GUILD_POSTION, t._data);
        }, i.prototype.dismissBtnFunc = function() {
            var t = this, i = this;
            hortor.TipManager.alert("确定将" + i._data.name + "开除出海盗团吗？\n开除后会清空" + i._data.name + "本周所贡献的活跃度", function() {
                HttpService.post(e.ServerMsg.GUILD_QUIT, "uid=" + playerModel.uid + "&fid=" + i._data.uid, function(e) {
                    hortor.TipManager.bubble("成功开除" + i._data.name);
                }), t.hide();
            });
        }, i.prototype.closeBtnFunc = function() {
            soundModel.playSound(e.SoundType.SOUND_PANEL_CLOSE), this.hide();
        }, i;
    }(e.WindowBase);
    e.GuildOperationWindow = t, __reflect(t.prototype, "game.GuildOperationWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e.dutyArrNums = [ 0, 0, 0, 0 ], e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.baseScroller.viewport = this.baseList, this.onViewRegister(), this.baseData = new eui.ArrayCollection(), 
            this.baseList.dataProvider = this.baseData, this.baseList.itemRenderer = e.GuildPositionNode;
        }, i.prototype.onData = function() {
            this.memberData = this.data, this.openPanel();
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.onViewRegister = function() {
            this.closeBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.closeBtnFunc, this);
        }, i.prototype.onViewRemove = function() {
            this.closeBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.closeBtnFunc, this);
        }, i.prototype.openPanel = function() {
            var e = this;
            this.dutyArrNums = [ 0, 0, 0, 0 ], this.calDutyNums();
            var t = [ {
                dutyName: "团长",
                nowNum: e.dutyArrNums[0],
                maxNum: 1,
                desc: "拥有海盗团的最高权限",
                authority: 15,
                memId: e.memberData.uid,
                memAuthority: e.memberData.authority
            }, {
                dutyName: "副团",
                nowNum: e.dutyArrNums[1],
                maxNum: 2,
                desc: "可代团长行使最高权限,但无法任命高于副团的职务",
                authority: 7,
                memId: e.memberData.uid,
                memAuthority: e.memberData.authority
            }, {
                dutyName: "精英",
                nowNum: e.dutyArrNums[2],
                maxNum: 5,
                desc: "象征着海盗团中高级成员",
                authority: 1,
                memId: e.memberData.uid,
                memAuthority: e.memberData.authority
            }, {
                dutyName: "团员",
                nowNum: e.dutyArrNums[3],
                maxNum: 0,
                desc: "海盗团中普通的成员",
                authority: 0,
                memId: e.memberData.uid,
                memAuthority: e.memberData.authority
            } ];
            e.baseData.source = t, e.baseData.refresh();
        }, i.prototype.calDutyNums = function() {
            for (var t = this, i = e.GuildData.members, n = 0; n < i.length; n++) {
                var o = i[n];
                15 == o.authority ? t.dutyArrNums[0]++ : 7 == o.authority ? t.dutyArrNums[1]++ : 1 == o.authority && t.dutyArrNums[2]++;
            }
        }, i.prototype.closeBtnFunc = function() {
            this.hide();
        }, i;
    }(e.WindowBase);
    e.GuildPositionWindow = t, __reflect(t.prototype, "game.GuildPositionWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.closeBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.closeBtnFunc, this), 
            this.sendBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.createBtnFunc, this), 
            this.textInput.addEventListener(egret.Event.CHANGE, this.textInputFunc, this), this.guildMedalIcon.source = e.ItemManager.getItemInfo("guildMedal").icon, 
            hortor.NotificationManager.add(e.NotificationType.GUILD_RENAME_REFRESH, this.onData, this);
        }, i.prototype.onData = function() {
            this.guildMedalNum.text = "x" + playerModel.guildMedal, this.textInput.text = "";
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.createBtnFunc = function() {
            var t = e.ComFunc.trim(this.textInput.text);
            if (t = e.ComFunc.dealInputText(t, 16), "" == t) return this.textInput.text = "", 
            void hortor.TipManager.bubble("海盗团名字不能为空!");
            if (t.length < 3) return void hortor.TipManager.bubble("海盗团名字最少三个字符!");
            if (0 == playerModel.guildMedal) gateModel.iosPay ? HttpService.get(e.ServerMsg.SHOP_LIST, {
                uid: playerModel.uid
            }, function(t) {
                var i = _.find(t.goods.prop, function(e) {
                    return "guildMedal" == e.goodsId;
                });
                i && hortor.WindowManager.showWindow(e.WindowType.WINDOW_SHOP_GOODS, i);
            }) : hortor.TipManager.bubble("海盗勋章不足"); else {
                var i = e.ComFunc.enCodeHtml(t);
                HttpService.post(e.ServerMsg.GUILD_RENAME, {
                    uid: playerModel.uid,
                    name: i
                }, function(i) {
                    hortor.TipManager.bubble("更名成功！"), e.GuildData.guild.name = playerModel.guild.name = t, 
                    playerModel.guildMedal--, hortor.NotificationManager.dispatch(e.NotificationType.GUILD_RENAME), 
                    hortor.WindowManager.hideWindow(e.WindowType.WINDOW_GUILD_RENAME);
                });
            }
        }, i.prototype.textInputFunc = function() {
            for (var t = 0, i = e.ComFunc.trim(this.textInput.text), n = 0; n < i.length; n++) {
                var o = new RegExp("[\\u4E00-\\u9FFF]", "");
                t += o.test(i[n]) ? 2 : 1;
            }
            if (16 >= t) this.textInput.text = i; else {
                for (var a = "", t = 0, i = this.textInput.text, n = 0; n < i.length; n++) {
                    var o = new RegExp("[\\u4E00-\\u9FFF]", "");
                    t += o.test(i[n]) ? 2 : 1, 16 >= t && (a += i[n]);
                }
                this.textInput.text = a;
            }
        }, i.prototype.closeBtnFunc = function() {
            hortor.WindowManager.hideWindow(e.WindowType.WINDOW_GUILD_RENAME);
        }, i;
    }(hortor.Window);
    e.GuildRenameWindow = t, __reflect(t.prototype, "game.GuildRenameWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e.tabIndex = "tab1", e._scrollV = 0, e._scrollContentHeight = 0, e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.bindEvent(), this.guildHall = new e.GuildHallLogic(this), this.guildTask = new e.GuildTaskLogic(this), 
            this.guildHall.onViewRegister(), this.guildTask.onViewRegister(), this.guildHall.onEventCenterRegister(), 
            this.guildTask.onEventCenterRegister(), this.taskScroller.viewport = this.taskList, 
            this.acScroller.viewport = this.acList, this.hallIcon.source = this.taskIcon.source = e.ItemManager.getItemInfo("guildCoin").icon;
        }, i.prototype.onData = function() {
            e.GuildCache.Messages = e.GuildCache.Messages.concat(e.GuildCache.NewMessages), 
            e.GuildCache.NewMessages = [], e.GuildCache.GuildTimer = 0, this.donateGroup.visible = !1, 
            this.showNoticeBtn(), this.noticeLabel.text = e.GuildData.guild.notice || "团长很懒，什么都没有写......", 
            this.timer = new egret.Timer(1e3), this.timer.addEventListener(egret.TimerEvent.TIMER, this.timerFunc, this), 
            this.timer.start(), this.initDonateCounts(), this.initList(), this.guildHall.openPanel(), 
            this.guildTask.openPanel(), 2 == guildModel.selectGuildIndex ? this.refreshTaskList() : 0 == guildModel.selectGuildIndex && (e.GuildCache.GuildNewMessageRedPoint = !1, 
            EventCenter.sendEvent(EventConst.refreshGuildRedPoint), gateModel.updateGate(e.ScreenType.GUILD_SCREEN)), 
            this.viewStack.selectedIndex = this.tabBar.selectedIndex = guildModel.selectGuildIndex;
        }, i.prototype.onOpen = function() {
            var e = this, t = egret.setInterval(function() {
                e.tabBar.numChildren && (e.initRedPoint(), egret.clearTimeout(t));
            }, this, 200);
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.onClose = function() {
            this.timer && (this.timer.removeEventListener(egret.TimerEvent.TIMER, this.timerFunc, this), 
            this.timer.stop(), this.guildTask.taskList = null);
        }, i.prototype.bindEvent = function() {
            this.returnBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.returnBtnFunc, this), 
            this.sendBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.sendBtnFunc, this), 
            this.donateBg.addEventListener(egret.TouchEvent.TOUCH_TAP, this.donateBtnFunc, this), 
            this.donateBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.donateBtnFunc, this), 
            this.requestBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.requestBtnFunc, this), 
            this.listBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.listBtnFunc, this), 
            this.newsBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.newsBtnFunc, this), 
            this.noticeBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.noticeBtnFunc, this), 
            this.tabBar.addEventListener(eui.ItemTapEvent.ITEM_TAP, this.tabBarFunc, this), 
            this.newMsgImg.addEventListener(egret.TouchEvent.TOUCH_TAP, this.newMsgImgFunc, this), 
            this.baseScroll.addEventListener(eui.UIEvent.CHANGE_END, this.scrollChanged, this), 
            this.baseScroll.addEventListener(eui.UIEvent.CHANGE_START, this.scrollChangStart, this), 
            EventCenter.addEventListener(EventConst.toRankIslands, this.closeGroupFunc, this), 
            EventCenter.addEventListener(EventConst.guildChatMsg, this.guildChatMsgFunc, this), 
            EventCenter.addEventListener(EventConst.guildDeleteMessage, this.guildDeleteMessage, this), 
            EventCenter.addEventListener(EventConst.GuildSetting, this.GuildSettingFunc, this), 
            EventCenter.addEventListener(EventConst.guildDonateRefreshCounts, this.initDonateCounts, this), 
            EventCenter.addEventListener(EventConst.quitGuild, this.quitGuildFunc, this), EventCenter.addEventListener(EventConst.GuildTaskGoTo, this.closeGuildToOther, this), 
            EventCenter.addEventListener(EventConst.refreshGuildRedPoint, this.initRedPoint, this), 
            EventCenter.addEventListener(EventConst.refreshGuildNoticeBtn, this.showNoticeBtn, this), 
            hortor.NotificationManager.add(e.NotificationType.GUILD_RENAME, this.guildRename, this);
        }, i.prototype.donateBtnFunc = function() {
            var e = this;
            egret.Tween.removeTweens(this.donateBtnGroup), this.donateGroup.visible ? (this.donateBtn.source = "guild_btn_hj0", 
            egret.Tween.get(this.donateBtnGroup).to({
                scaleX: .1,
                scaleY: .1
            }, 200, egret.Ease.quadIn).call(function() {
                e.donateGroup.visible = !1, egret.Tween.removeTweens(e.donateBtnGroup);
            })) : (this.donateBtn.source = "guild_btn_hj1", this.donateGroup.visible = !0, this.donateBtnGroup.scaleX = this.donateBtnGroup.scaleY = .1, 
            egret.Tween.get(this.donateBtnGroup).to({
                scaleX: 1,
                scaleY: 1
            }, 200, egret.Ease.backOut).call(function() {
                egret.Tween.removeTweens(e.donateBtnGroup);
            }));
        }, i.prototype.showNoticeBtn = function() {
            this.noticeBtn.visible = e.GuildCache.Members[playerModel.uid + ""].authority >= 7;
        }, i.prototype.timerFunc = function() {
            if (e.GuildData.slots[0].remainTime--, e.GuildData.slots[1].remainTime--, e.GuildData.donateRemain > 0 && e.GuildData.donateRemain--, 
            e.GuildCache.GuildTimer++, 0 == e.GuildData.slots[0].remainTime) switch (e.GuildData.slots[0].status) {
              case 0:
                break;

              case 1:
                e.GuildData.slots[0].status = 0, e.GuildData.slots[0].num = 0;
                break;

              case 2:
                e.GuildData.slots[0].status = 0, e.GuildData.slots[0].num = 0;
                break;

              case 3:
                break;

              case 4:
                e.GuildData.slots[0].status = 0, e.GuildData.slots[0].num = 0;
            }
            if (0 == e.GuildData.slots[1].remainTime) switch (e.GuildData.slots[1].status) {
              case 0:
                break;

              case 1:
                e.GuildData.slots[1].status = 0, e.GuildData.slots[1].num = 0;
                break;

              case 2:
                e.GuildData.slots[1].status = 0, e.GuildData.slots[1].num = 0;
                break;

              case 3:
                break;

              case 4:
                e.GuildData.slots[1].status = 0, e.GuildData.slots[1].num = 0;
            }
        }, i.prototype.initDonateCounts = function() {
            if (0 == jigsawModel.jigsawInfo.openTime && jigsawModel.jigsawInfo.closeTime > 0) {
                for (var t = 0, i = 0; i < e.GuildData.slots.length; i++) 4 == e.GuildData.slots[i].status && t++;
                this.slotNum.text = t + "/2";
            }
        }, i.prototype.initList = function() {
            switch (this.tabIndex) {
              case "tab1":
                this.addChatItem();
                break;

              case "tab2":
            }
        }, i.prototype.addChatItem = function() {
            var t = this;
            this.chatGroup.removeChildren();
            for (var i = 0, n = 0; n < e.GuildCache.Messages.length; n++) {
                var o = new e.GuildChatNode();
                this.chatGroup.addChild(o), o.initData(e.GuildCache.Messages[n]), i += this.getContentHeight(e.GuildCache.Messages[n], o.contentHeight);
            }
            i += 6 * (e.GuildCache.Messages.length - 1);
            var a = egret.setTimeout(function() {
                egret.clearTimeout(a), t.baseScroll.validateNow(), t._scrollContentHeight = t.baseScroll.viewport.scrollV = i - t.baseScroll.viewport.height > 0 ? i - t.baseScroll.viewport.height : 0;
            }, this, 200);
        }, i.prototype.getContentHeight = function(e, t) {
            var i = 0;
            if (5 == e.msgId) i = 30; else if (2 == e.msgId) i = 138; else if (t) i = t; else {
                var n = e.content.replace(/[\u0391-\uFFE5]/g, "aa").length, o = Math.ceil(n / 42);
                i = 1 >= o ? 98 : 2 >= o ? 124 : 124 + 26 * (o - 2);
            }
            return i;
        }, i.prototype.initRedPoint = function() {
            if (!(this.tabBar.numChildren < 3)) {
                for (var t = 0; 3 > t; t++) this["redPoint" + t] || (this["redPoint" + t] = this.tabBar.getElementAt(t));
                0 == guildModel.selectGuildIndex && (e.GuildCache.GuildNewMessageRedPoint = !1), 
                this.requestRedPoint.visible = e.GuildCache.DonateSlotsRedPoint && jigsawModel.jigsawInfo.closeTime > 0, 
                this.listRedPoint.visible = e.GuildCache.DonateNewsRedPoint && jigsawModel.jigsawInfo.closeTime > 0, 
                this.donateRedPoint.visible = (e.GuildCache.DonateSlotsRedPoint || e.GuildCache.DonateNewsRedPoint) && jigsawModel.jigsawInfo.closeTime > 0, 
                this.redPoint0.redPoint.visible = e.GuildCache.GuildNewMessageRedPoint || this.donateRedPoint.visible, 
                this.membersListRedPoint.visible = e.GuildCache.GuildApplyRedPoint, this.redPoint1.redPoint.visible = e.GuildCache.GuildApplyRedPoint || e.GuildCache.GuildWelfareRedPoint || e.GuildCache.GuildSailingRedPoint || e.GuildCache.GuildSailingRewardRedPoint || e.GuildCache.GuildSailingFirstOpenPoint, 
                this.redPoint2.redPoint.visible = e.GuildCache.GuildTaskRedPoint;
            }
        }, i.prototype.refreshTaskList = function() {
            var t = this;
            HttpService.get(e.ServerMsg.GUILD_TASK_LIST, {
                uid: playerModel.uid
            }, function(i) {
                var n = i.tasks;
                if (i.guildDailyEvent) {
                    var o = null;
                    for (o in i.guildDailyEvent) playerModel.dailyEventInfo.hasOwnProperty(o) && (playerModel.dailyEventInfo[o] = i.guildDailyEvent[o]);
                }
                if (0 == e.GuildCache.TaskList.length && 0 == e.GuildCache.TaskNeedValue.length) {
                    for (var a = 0; a < n.length; a++) {
                        var r = n[a];
                        e.GuildCache.TaskList.push(r.id);
                    }
                    e.GuildCache.TaskNeedValue = [ -1, 100, 1, 1, 1, 1, 5, 1, 1, 2, 1 ];
                }
                t.guildTask.initView(i);
            });
        }, i.prototype.scrollChangStart = function() {
            this.baseScroll.touchChildren = !1;
        }, i.prototype.newMsgImgFunc = function() {
            soundModel.buttonOpen(), this.newMsgImg.visible = !1, egret.Tween.removeTweens(this.newMsgImg), 
            this.baseScroll.stopAnimation(), egret.Tween.get(this.baseScroll.viewport).to({
                scrollV: this._scrollContentHeight
            }, 300);
        }, i.prototype.scrollChanged = function() {
            this && (this.baseScroll.touchChildren = !0, this.newMsgImg.visible && this.baseScroll.viewport.scrollV > this._scrollV && (this.newMsgImg.visible = !1, 
            egret.Tween.removeTweens(this.newMsgImg)));
        }, i.prototype.requestBtnFunc = function() {
            return 0 == jigsawModel.jigsawInfo.openTime && jigsawModel.jigsawInfo.closeTime > 0 ? (e.GuildUtils.initSlotsRedPoint(e.GuildData.slots), 
            void (hortor.WindowManager.currentWindow = e.WindowType.WINDOW_GUILD_DONATE)) : void hortor.TipManager.bubble("海盗拼图活动已结束，无法使用请求捐赠功能");
        }, i.prototype.listBtnFunc = function() {
            return 0 == jigsawModel.jigsawInfo.openTime && jigsawModel.jigsawInfo.closeTime > 0 ? void HttpService.get(e.ServerMsg.GUILD_SHOW_DONATE, {
                uid: playerModel.uid
            }, function(t) {
                e.GuildCache.DonateNewsRedPoint = !1, EventCenter.sendEvent(EventConst.refreshGuildRedPoint), 
                gateModel.updateGate(e.ScreenType.GUILD_SCREEN), hortor.WindowManager.showWindow(e.WindowType.WINDOW_GUILD_DONATE_NEWS);
            }) : void hortor.TipManager.bubble("海盗拼图活动已结束，无法使用请求捐赠功能");
        }, i.prototype.newsBtnFunc = function() {
            hortor.WindowManager.showWindow(e.WindowType.WINDOW_GUILD_SYSTEM_NEWS);
        }, i.prototype.noticeBtnFunc = function() {
            hortor.WindowManager.currentWindow = e.WindowType.WINDOW_GUILD_NOTICE;
        }, i.prototype.tabBarFunc = function(t) {
            soundModel.buttonOpen(), guildModel.selectGuildIndex = t.itemIndex, 2 != t.itemIndex || this.guildTask.taskList || this.refreshTaskList(), 
            0 == t.itemIndex && (e.GuildCache.GuildNewMessageRedPoint = !1, EventCenter.sendEvent(EventConst.refreshGuildRedPoint), 
            gateModel.updateGate(e.ScreenType.GUILD_SCREEN)), 2 == t.itemIndex && (e.GuildCache.GuildTaskRedPoint = guildModel.checkGuildTaskRedPoint(), 
            EventCenter.sendEvent(EventConst.refreshGuildRedPoint), gateModel.updateGate(e.ScreenType.GUILD_SCREEN));
        }, i.prototype.sendBtnFunc = function() {
            var t = this, i = e.ComFunc.trim(this.textInput.text);
            return "" == i ? void hortor.TipManager.bubble("不能发送空白消息") : (this.sendBtn.touchEnabled = !1, 
            i = e.ComFunc.enCodeHtml(i), void HttpService.post(e.ServerMsg.GUILD_SEND_MESSAGE, {
                uid: playerModel.uid,
                content: i
            }, function(i) {
                t.textInput.text = "", t.sendBtn.touchEnabled = !0, guildModel.addGuildTaskValue(e.GuildProxy.guildChat, 1), 
                playerModel.dailyEventInfo.guildChatCount < 10 && EventCenter.sendEvent(EventConst.GuildGetTaskReward);
            }, function() {
                t.sendBtn.touchEnabled = !0;
            }, this));
        }, i.prototype.returnBtnFunc = function() {
            hortor.ScreenManager.currentScreen = e.ScreenType.WHEEL_SCREEN;
        }, i.prototype.closeGroupFunc = function() {
            e.GuildCache.GuildToIsland = !0, EventCenter.sendEvent(EventConst.WheelForRank), 
            EventCenter.sendEvent(EventConst.CloudGO);
        }, i.prototype.guildChatMsgFunc = function(t) {
            var i = this;
            if (this && e.GuildCache.NewMessages[0]) {
                egret.Tween.removeTweens(this.baseScroll.viewport), e.GuildCache.Messages.push(e.GuildCache.NewMessages[0]);
                var n = 0, o = new e.GuildChatNode();
                o.initData(e.GuildCache.Messages[e.GuildCache.Messages.length - 1]), n = this.getContentHeight(e.GuildCache.Messages[e.GuildCache.Messages.length - 1], o.contentHeight), 
                this.chatGroup.addChild(o);
                for (var a = egret.setTimeout(function() {
                    egret.clearTimeout(a), e.GuildCache.NewMessages.splice(0, 1), e.GuildCache.NewMessages.length > 0 && i.guildChatMsgFunc(null);
                }, this, 300), r = 0, s = 0; s < e.GuildCache.Messages.length; s++) {
                    var l = this.chatGroup.getChildAt(s);
                    l ? r += this.getContentHeight(e.GuildCache.Messages[s], l.contentHeight) : console.log("_n is null");
                }
                r += 6 * (e.GuildCache.Messages.length - 1);
                var d = r - this.baseScroll.viewport.height, u = 0 > d ? 0 : d;
                this._scrollContentHeight = u, this._scrollV = u - .5 * n, this.baseScroll.viewport.scrollV < u - n - 6 ? (this.newMsgImg.visible = !0, 
                egret.Tween.get(this.newMsgImg, {
                    loop: !0
                }).to({
                    scaleX: 1.1,
                    scaleY: 1.1
                }, 600)) : egret.Tween.get(this.baseScroll.viewport).to({
                    scrollV: u
                }, 300);
                var h = e.GuildCache.Messages[e.GuildCache.Messages.length - 1].type;
                ("authorize" == h || "quit" == h || "join" == h) && EventCenter.sendEvent(EventConst.GuildChatNodeRefresh);
            }
        }, i.prototype.guildDeleteMessage = function(t) {
            for (var i, n = this, o = function(o) {
                return e.GuildCache.Messages[o].uid == t.data.uid && e.GuildCache.Messages[o].position == t.data.slot ? (i = a.chatGroup.getChildAt(o), 
                a._scrollV = a._scrollV - a.getContentHeight(e.GuildCache.Messages[o], i.contentHeight), 
                a._scrollContentHeight = a._scrollContentHeight - a.getContentHeight(e.GuildCache.Messages[o], i.contentHeight), 
                i.nodeRemove(function() {
                    n.chatGroup.removeChildAt(o), e.GuildCache.Messages.splice(o, 1);
                }), "break") : void 0;
            }, a = this, r = 0; r < e.GuildCache.Messages.length; r++) {
                var s = o(r);
                if ("break" === s) break;
            }
            for (var r = 0; r < e.GuildCache.Donates.length; r++) if (e.GuildCache.Donates[r].uid == t.data.uid && e.GuildCache.Donates[r].position == t.data.slot) {
                e.GuildCache.Donates.splice(r, 1), EventCenter.sendEvent(EventConst.GuildChatNodeRefresh);
                break;
            }
        }, i.prototype.GuildSettingFunc = function() {
            this.noticeLabel.text = e.GuildData.guild.notice || "团长很懒，什么都没有写......";
        }, i.prototype.quitGuildFunc = function() {
            hortor.WindowManager.hideAllWindow(), hortor.ScreenManager.currentScreen = e.ScreenType.WHEEL_SCREEN;
        }, i.prototype.closeGuildToOther = function(t) {
            var i = this, n = t.data;
            if ("guildChat" != n.gotoType) {
                switch (n.gotoType) {
                  case "roller":
                    break;

                  case "loginReward":
                    hortor.WindowManager.showWindow(e.WindowType.WINDOW_DAILY_ENERGY);
                    break;

                  case "giveEnergy":
                    hortor.WindowManager.showWindow(e.WindowType.WINDOW_FRIEND);
                    break;

                  case "Mine":
                    hortor.ScreenManager.showScreen(e.ScreenType.MAP_SCREEN, {
                        mapInfo: islandModel.mapInfo,
                        idx: playerModel.island
                    });
                    break;

                  case "pet":
                    hortor.ScreenManager.currentScreen = e.ScreenType.PET_SCREEN;
                    break;

                  case "shareReward":
                    hortor.WindowManager.showWindow(e.WindowType.WINDOW_SHARE_GUIDE);
                }
                "pet" != n.gotoType && "Mine" != n.gotoType && this.returnBtnFunc();
            } else i.tabBar.selectedIndex = 0, i.viewStack.selectedIndex = 0;
        }, i.prototype.guildRename = function() {
            this.guildName.text = "" + playerModel.guild.name;
        }, i.prototype.changeBtnFunc = function() {}, i;
    }(e.ScreenBase);
    e.GuildScreen = t, __reflect(t.prototype, "game.GuildScreen");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e.iconNodePos = [ {
                x: 0,
                y: 139
            }, {
                x: 126,
                y: 135
            }, {
                x: 277,
                y: 134
            }, {
                x: 428,
                y: 134
            }, {
                x: 546,
                y: 134
            } ], e.iconNodeScales = [ .6, .8, 1, .8, .6 ], e.selectIconIdArr = [ 11, 12, 1, 2, 3 ], 
            e.joinModeArr = [ "允许任何人加入", "需要申请加入", "不可加入" ], e.joinMode = 0, e.joinLv = 0, e._startPosX = 0, 
            e._moving = !1, e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.onViewRegister();
        }, i.prototype.onOpen = function() {}, i.prototype.onData = function() {
            this.openPanel();
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.onViewRegister = function() {
            var e = this;
            e.joinLeftBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.changeModeFunc, this), 
            e.joinRightBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.changeModeFunc, this), 
            e.lvLeftBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.changeLvFunc, this), 
            e.lvRightBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.changeLvFunc, this), 
            e.changeBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.createBtnFunc, this), 
            e.selectGroup.addEventListener(egret.TouchEvent.TOUCH_BEGIN, this.selectTouchBegin, this), 
            e.selectGroup.addEventListener(egret.TouchEvent.TOUCH_MOVE, this.selectTouchMove, this), 
            e.selectGroup.addEventListener(egret.TouchEvent.TOUCH_END, this.selectTouchEnd, this);
        }, i.prototype.onEventCenterRegister = function() {}, i.prototype.onEventCenterRemove = function() {}, 
        i.prototype.openPanel = function() {
            var t = this, i = e.GuildData.guild;
            t.joinMode = i.mode, t.joinLv = i.needCrown, t.selectIconIdArr[2] = i.icon, t.selectIconIdArr[1] = t.selectIconIdArr[2] - 1 < 1 ? 12 : t.selectIconIdArr[2] - 1, 
            t.selectIconIdArr[0] = t.selectIconIdArr[1] - 1 < 1 ? 12 : t.selectIconIdArr[1] - 1, 
            t.selectIconIdArr[3] = t.selectIconIdArr[2] + 1 > 12 ? 1 : t.selectIconIdArr[2] + 1, 
            t.selectIconIdArr[4] = t.selectIconIdArr[3] + 1 > 12 ? 1 : t.selectIconIdArr[3] + 1, 
            t.joinModeLabel.text = t.joinModeArr[t.joinMode], t.lvLimitLabel.text = t.joinLv + "";
            for (var n = 0; 5 > n; n++) t["iconNode" + n].data = t.selectIconIdArr[n];
        }, i.prototype.changeModeFunc = function(e) {
            var t = this, i = e.target.name, n = 1;
            "joinLeftBtn" == i && (n = -1), t.joinMode += n, t.joinMode = t.joinMode > 2 ? 0 : t.joinMode, 
            t.joinMode = t.joinMode < 0 ? 2 : t.joinMode, t.joinModeLabel.text = t.joinModeArr[t.joinMode];
        }, i.prototype.changeLvFunc = function(e) {
            var t = this, i = e.target.name, n = 0;
            return "lvLeftBtn" == i && (n = t.joinLv <= 150 ? -t.joinLv : -50), "lvLeftBtn" == i && 0 == t.joinLv ? void hortor.TipManager.bubble("这已经是最小等级了") : "lvRightBtn" == i && 1e3 == this.joinLv ? void hortor.TipManager.bubble("这已经是最大等级了") : ("lvRightBtn" == i && (n = 0 == this.joinLv ? 150 : 50), 
            t.joinLv += n, void (t.lvLimitLabel.text = t.joinLv + ""));
        }, i.prototype.createBtnFunc = function() {
            var t = this, i = e.GuildData.guild, n = this, o = {
                uid: playerModel.uid,
                notice: i.notice,
                icon: n.selectIconIdArr[2],
                mode: n.joinMode,
                crown: n.joinLv
            };
            e.ComFunc.enCodeHtml(i.notice);
            HttpService.post(e.ServerMsg.GUILD_SETTING, o, function(i) {
                e.GuildData.guild = i.guild, EventCenter.sendEvent(EventConst.GuildSetting), hortor.TipManager.bubble("修改成功"), 
                t.hide();
            });
        }, i.prototype.selectTouchBegin = function(e) {
            var t = this;
            t._startPosX = e.stageX;
        }, i.prototype.selectTouchMove = function(e) {
            var t = this, i = t._startPosX - e.stageX;
            t._moving || (i > 30 ? (t._moving = !0, this.toLeftMove()) : -30 > i && (t._moving = !0, 
            this.toRightMove()));
        }, i.prototype.selectTouchEnd = function(e) {
            var t = this;
            t._moving || (t._startPosX - e.stageX > 30 ? this.toLeftMove() : t._startPosX - e.stageX < -30 && this.toRightMove());
        }, i.prototype.toLeftMove = function() {
            for (var e = this, t = this, i = 0; 5 > i; i++) t.selectIconIdArr[i] += 1, t.selectIconIdArr[i] = 13 == t.selectIconIdArr[i] ? 1 : t.selectIconIdArr[i];
            t.iconNode0.x = t.iconNodePos[4].x + 180, t.iconNode0.y = t.iconNodePos[4].y, t.iconNode0.data = t.selectIconIdArr[4];
            var n = egret.Tween.get(t.iconNode0);
            n.to({
                x: t.iconNodePos[4].x,
                y: t.iconNodePos[4].y
            }, 500, egret.Ease.circOut);
            var o = egret.Tween.get(t.iconNode1);
            o.to({
                x: t.iconNodePos[0].x,
                y: t.iconNodePos[0].y,
                scaleX: t.iconNodeScales[0],
                scaleY: t.iconNodeScales[0]
            }, 500, egret.Ease.circOut);
            var a = egret.Tween.get(t.iconNode2);
            a.to({
                x: t.iconNodePos[1].x,
                y: t.iconNodePos[1].y,
                scaleX: t.iconNodeScales[1],
                scaleY: t.iconNodeScales[1]
            }, 500, egret.Ease.circOut);
            var r = egret.Tween.get(t.iconNode3);
            r.to({
                x: t.iconNodePos[2].x,
                y: t.iconNodePos[2].y,
                scaleX: t.iconNodeScales[2],
                scaleY: t.iconNodeScales[2]
            }, 500, egret.Ease.circOut);
            var s = egret.Tween.get(t.iconNode4);
            s.to({
                x: t.iconNodePos[3].x,
                y: t.iconNodePos[3].y,
                scaleX: t.iconNodeScales[3],
                scaleY: t.iconNodeScales[3]
            }, 500, egret.Ease.circOut).call(function() {
                egret.Tween.removeTweens(t.iconNode0), egret.Tween.removeTweens(t.iconNode1), egret.Tween.removeTweens(t.iconNode2), 
                egret.Tween.removeTweens(t.iconNode3), egret.Tween.removeTweens(t.iconNode4), e.refreshIconPos(), 
                t._moving = !1;
            });
        }, i.prototype.toRightMove = function() {
            for (var e = this, t = this, i = 0; 5 > i; i++) t.selectIconIdArr[i] -= 1, t.selectIconIdArr[i] = 0 == t.selectIconIdArr[i] ? 12 : t.selectIconIdArr[i];
            t.iconNode4.x = t.iconNodePos[0].x - 180, t.iconNode4.y = t.iconNodePos[0].y, t.iconNode4.data = t.selectIconIdArr[0];
            var n = egret.Tween.get(t.iconNode0);
            n.to({
                x: t.iconNodePos[1].x,
                y: t.iconNodePos[1].y,
                scaleX: t.iconNodeScales[1],
                scaleY: t.iconNodeScales[1]
            }, 500, egret.Ease.circOut);
            var o = egret.Tween.get(t.iconNode1);
            o.to({
                x: t.iconNodePos[2].x,
                y: t.iconNodePos[2].y,
                scaleX: t.iconNodeScales[2],
                scaleY: t.iconNodeScales[2]
            }, 500, egret.Ease.circOut);
            var a = egret.Tween.get(t.iconNode2);
            a.to({
                x: t.iconNodePos[3].x,
                y: t.iconNodePos[3].y,
                scaleX: t.iconNodeScales[3],
                scaleY: t.iconNodeScales[3]
            }, 500, egret.Ease.circOut);
            var r = egret.Tween.get(t.iconNode3);
            r.to({
                x: t.iconNodePos[4].x,
                y: t.iconNodePos[4].y,
                scaleX: t.iconNodeScales[4],
                scaleY: t.iconNodeScales[4]
            }, 500, egret.Ease.circOut);
            var s = egret.Tween.get(t.iconNode4);
            s.to({
                x: t.iconNodePos[0].x,
                y: t.iconNodePos[0].y
            }, 500, egret.Ease.circOut).call(function() {
                egret.Tween.removeTweens(t.iconNode0), egret.Tween.removeTweens(t.iconNode1), egret.Tween.removeTweens(t.iconNode2), 
                egret.Tween.removeTweens(t.iconNode3), egret.Tween.removeTweens(t.iconNode4), e.refreshIconPos(), 
                t._moving = !1;
            });
        }, i.prototype.refreshIconPos = function() {
            for (var e = this, t = 0; 5 > t; t++) e["iconNode" + t].data = e.selectIconIdArr[t], 
            e["iconNode" + t].x = e.iconNodePos[t].x, e["iconNode" + t].y = e.iconNodePos[t].y, 
            util.setScale(e["iconNode" + t], e.iconNodeScales[t]);
        }, i;
    }(e.WindowBase);
    e.GuildSettingWindow = t, __reflect(t.prototype, "game.GuildSettingWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.panel.okBtn.icon = "comBtnTxt_json.common_txt_gm", this.panel.registCallBack(this.confirmBtnFunc, null, this), 
            this.coinIcon.source = e.ItemManager.getItemInfo("guildCoin").icon;
        }, i.prototype.onData = function() {
            this.propData = this.data, this.openPanel();
        }, i.prototype.openPanel = function() {
            var t = this;
            t.propName.text = t.propData.name;
            var i = e.ItemManager.getItemInfo(t.propData.goodsId);
            t.propIcon.source = i.icon, t.desc.text = i.desc, this.showCoinNum();
        }, i.prototype.showCoinNum = function() {
            this.coinNum.text = this.propData.needCoin + "";
        }, i.prototype.confirmBtnFunc = function() {
            var t = this, i = this;
            return i.propData.needCoin > playerModel.guild.coin ? void hortor.TipManager.bubble("海盗币不足!多去收集一些海盗币吧!") : 0 == i.propData.remainLimit ? void hortor.TipManager.bubble("购买次数用尽，明天再来吧！") : void HttpService.post(e.ServerMsg.GUILD_SHOP_AWARD, "uid=" + playerModel.uid + "&goodsId=" + i.propData.goodsId, function(n) {
                i.propData.remainLimit = n.remainLimit;
                var o = hortor.WindowManager.getWindow(e.WindowType.WINDOW_GUILD_SHOP);
                o && o.refreshShopList(), playerModel.update(n), playerModel.guild.coin = n.coin, 
                EventCenter.sendEvent(EventConst.GuildSignReward);
                var a = t.dealGuildRewardData(n.reward);
                hortor.WindowManager.showWindow(e.WindowType.WINDOW_REWARD, a), t.hide();
            });
        }, i.prototype.dealGuildRewardData = function(e) {
            var t = {};
            for (var i in e) "jigsaw" == i ? (t["jigsaw" + (e[i] - 1)] = 1, jigsawModel.jigsawInfo.bags[e[i] - 1] += 1) : "jewel" == i ? t["octopus" + (e[i] - 1)] = 1 : "word" == i || (t[i] = e[i]);
            return t;
        }, i;
    }(e.WindowBase);
    e.GuildShopBuyWindow = t, __reflect(t.prototype, "game.GuildShopBuyWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.shopScroller.viewport = this.shopList, this.onViewRegister(), this.onEventCenterRegister(), 
            this.shopData = new eui.ArrayCollection(), this.shopList.dataProvider = this.shopData, 
            this.shopList.itemRenderer = e.GuildShopNode, this.icon.source = e.ItemManager.getItemInfo("guildCoin").icon;
        }, i.prototype.onData = function() {
            this.openPanel();
        }, i.prototype.prepare = function(t, i) {
            HttpService.get(e.ServerMsg.GUILD_SHOP_LIST, "uid=" + playerModel.uid, function(e) {
                t(e.goods);
            }, i);
        }, i.prototype.onViewRegister = function() {
            this.closeBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.closeBtnFunc, this), 
            this.helpBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.helpBtnFunc, this);
        }, i.prototype.onViewRemove = function() {
            this.closeBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.closeBtnFunc, this), 
            this.helpBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.helpBtnFunc, this);
        }, i.prototype.onEventCenterRegister = function() {
            EventCenter.addEventListener(EventConst.GuildSignReward, this.showCoinNum, this);
        }, i.prototype.onEventCenterRemove = function() {
            EventCenter.removeEventListener(EventConst.GuildSignReward, this.showCoinNum, this);
        }, i.prototype.openPanel = function() {
            this.initShopList(), this.showCoinNum(), this.createArmature();
        }, i.prototype.initShopList = function() {
            this.shopData.source = this.data;
        }, i.prototype.refreshShopList = function() {
            var e = this;
            e.shopData.replaceAll(e.data), e.shopList.dataProviderRefreshed();
        }, i.prototype.showCoinNum = function() {
            this.coinNum.text = playerModel.guild.coin + "";
        }, i.prototype.helpBtnFunc = function() {
            var t = HelpTextLabel.getGuildShopText();
            e.ComFunc.openHelpPanel(t);
        }, i.prototype.closeBtnFunc = function() {
            this.hide();
        }, i.prototype.createArmature = function() {
            this.armature ? this.armature.play("attack", 0) : (this.armature = new e.ArmaturePlayer("salesman"), 
            this.group.addChild(this.armature), this.armature.x = 130, this.armature.y = 286, 
            this.armature.play("attack", 0));
        }, i;
    }(hortor.Window);
    e.GuildShopWindow = t, __reflect(t.prototype, "game.GuildShopWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.title.source = "guild_txt_tittle2", this.panel.helpBtn.visible = !1, this.baseScroller.viewport = this.baseList, 
            this.baseData = new eui.ArrayCollection(), this.baseList.dataProvider = this.baseData, 
            this.baseList.itemRenderer = e.GuildSystemNode;
        }, i.prototype.onData = function() {
            this.emptyTips.text = "暂时没有系统消息", this.desc.textAlign = egret.HorizontalAlign.CENTER, 
            this.desc.text = "系统消息最多保留200条";
            var t = _.sortBy(e.GuildCache.Systems, "createdTime");
            t.reverse(), this.baseData.source = t, this.emptyGroup.visible = 0 == e.GuildCache.Systems.length;
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i;
    }(hortor.Window);
    e.GuildSystemWindow = t, __reflect(t.prototype, "game.GuildSystemWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.skinPath = "guild/node/GuildWelfareShowNodeSkin", e;
        }
        return __extends(i, t), i.prototype.onInit = function() {}, i.prototype.onData = function() {
            this.rewardGroup.removeChildren(), this.numLabel.text = "x" + e.GuildDailyWelfareData.attendances[this.data].guildCoin;
            var t = e.GuildDailyWelfareData.giftConfs[e.GuildDailyWelfareData.attendances[this.data].giftType];
            for (var i in t) {
                var n = e.ItemManager.getItemInfo(t[i].type), o = new eui.Image();
                o.source = n.icon, o.scaleX = o.scaleY = .2, this.rewardGroup.addChild(o);
            }
        }, i;
    }(e.ViewBase);
    e.GuildWelfareShowNode = t, __reflect(t.prototype, "game.GuildWelfareShowNode");
}(game || (game = {})), window.game.GuildWelfareShowNode = game.GuildWelfareShowNode;

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e.signLv = 0, e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.panel.helpBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.helpBtnFunc, this), 
            this.signBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.signBtnFunc, this), 
            this.feedbackGroup.addEventListener(egret.TouchEvent.TOUCH_TAP, this.feedbackGroupFunc, this);
            for (var t = 1; 4 > t; t++) this["box" + t].addEventListener(egret.TouchEvent.TOUCH_TAP, this.boxTouchFunc, this);
            var i = new hortor.TouchScaleEffect();
            i.start(this.feedbackGroup), this.panel.helpBtn.visible = !1, hortor.NotificationManager.add(e.NotificationType.GUILD_WELFARE_BOXESGROUP, this.initBoxesGroup, this), 
            EventCenter.addEventListener(EventConst.refreshGuildRedPoint, this.initRedPoint, this);
        }, i.prototype.onData = function() {
            e.GuildCache.feedbackTime = 0, this.initSignGroup(), this.maskGroup.mask = new egret.Rectangle(0, 0, 200, 200), 
            this.initFeedbackGroup(), this.initBoxesGroup(), this.setAwardItemGroup(), this.initRedPoint(), 
            this.timer || (this.timer = new egret.Timer(1e3), this.timer.addEventListener(egret.TimerEvent.TIMER, this.timerFunc, this), 
            this.timer.start());
        }, i.prototype.onClose = function() {
            this.timer && (this.timer.removeEventListener(egret.TimerEvent.TIMER, this.timerFunc, this), 
            this.timer.stop(), this.timer = null);
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.helpBtnFunc = function() {}, i.prototype.signBtnFunc = function() {
            var t = this;
            soundModel.buttonOpen();
            var i = {
                reward: {
                    energy: this.signReward.energy,
                    guildCoin: this.signReward.guildCoin
                }
            };
            this.signBtn.enabled = !1, this.signBtn.icon = "comBtnTxt_json.common_txt_yqd", 
            HttpService.post(e.ServerMsg.GUILD_DAILY_SIGN, {
                uid: playerModel.uid
            }, function(n) {
                e.GuildDailyWelfareData.attendance = n.attendance, t.initBoxesGroup(), e.GuildCache.GuildSignRedPoint = !1, 
                e.GuildCache.GuildWelfareRedPoint = e.GuildUtils.getWelfareRedPoint(), EventCenter.sendEvent(EventConst.refreshGuildRedPoint), 
                gateModel.updateGate(e.ScreenType.GUILD_SCREEN), playerModel.energy = n.energy, 
                playerModel.timeToRecover = n.timeToRecover, playerModel.guild.coin = n.coin, playerModel.guild.gotDailySign = n.gotDailySign, 
                hortor.WindowManager.showWindow(e.WindowType.WINDOW_REWARD, i);
                var o = _.find(e.GuildData.members, function(e) {
                    return e.uid == playerModel.uid;
                });
                o && (o.exp += t.signReward.guildExp), EventCenter.sendEvent(EventConst.GuildSignReward);
            });
        }, i.prototype.feedbackGroupFunc = function() {
            soundModel.buttonOpen(), hortor.WindowManager.currentWindow = e.WindowType.WINDOW_GUILD_FEEDBACK;
        }, i.prototype.initBoxesGroup = function() {
            e.GuildDailyWelfareData.attendance = e.GuildDailyWelfareData.attendance > 20 ? 20 : e.GuildDailyWelfareData.attendance, 
            this.countLabel.text = "" + e.GuildDailyWelfareData.attendance, this.countGroup.x = 33 + e.GuildDailyWelfareData.attendance / 20 * 472, 
            this.proImg.mask = new egret.Rectangle(0, 0, e.GuildDailyWelfareData.attendance / 20 * 472, 25);
            for (var t = !1, n = 0; n < e.GuildDailyWelfareData.attendances.length; n++) this["box" + (n + 1)].source = e.GuildDailyWelfareData.attendances[n].hasGot ? "guild_gift_box1_1" : "guild_gift_box1_0", 
            hortor.TipManager.registTargetTip(this["box" + (n + 1)], n, 1500, i.propTipRender), 
            egret.Tween.removeTweens(this["box" + (n + 1)]), !e.GuildDailyWelfareData.attendances[n].hasGot && e.GuildDailyWelfareData.attendance >= e.GuildDailyWelfareData.attendances[n].needSignNum && (t = !0, 
            egret.Tween.get(this["box" + (n + 1)], {
                loop: !0
            }).to({
                rotation: 3
            }, 50).to({
                rotation: 0
            }, 50).to({
                rotation: -3
            }, 50).to({
                rotation: 0
            }, 50).to({
                rotation: 3
            }, 50).to({
                rotation: 0
            }, 50).to({
                rotation: -3
            }, 50).to({
                rotation: 0
            }, 50).wait(800), hortor.TipManager.unRegistTip(this["box" + (n + 1)]));
            e.GuildCache.GuildAttendancesRedPoint = t, e.GuildCache.GuildWelfareRedPoint = e.GuildUtils.getWelfareRedPoint(), 
            EventCenter.sendEvent(EventConst.refreshGuildRedPoint), gateModel.updateGate(e.ScreenType.GUILD_SCREEN);
        }, i.prototype.boxTouchFunc = function(t) {
            var i = this;
            soundModel.buttonOpen();
            var n = t.target.name, o = (t.target.localToGlobal(0, 0), parseInt(n.substr(n.length - 1, 1)));
            e.GuildDailyWelfareData.attendances[o].hasGot || e.GuildDailyWelfareData.attendance >= e.GuildDailyWelfareData.attendances[o].needSignNum && HttpService.post(e.ServerMsg.GUILD_GOT_ATTENDANCE_REWARD, {
                uid: playerModel.uid,
                idx: o + 1
            }, function(t) {
                e.GuildDailyWelfareData.attendances[o].hasGot = !0, i.initBoxesGroup(), playerModel.update(t), 
                EventCenter.sendEvent(EventConst.GuildSignReward), hortor.WindowManager.showWindow(e.WindowType.WINDOW_REWARD, t.reward);
            });
        }, Object.defineProperty(i, "propTipRender", {
            get: function() {
                return null == this.mTipRender && (this.mTipRender = new e.GuildWelfareShowNode()), 
                this.mTipRender;
            },
            enumerable: !0,
            configurable: !0
        }), i.prototype.timerFunc = function() {
            e.GuildCache.feedbackTime++;
        }, i.prototype.initSignGroup = function() {
            var t = e.GuildData.signRewards, i = playerModel.guild;
            if (e.GuildData.lastExp >= t[t.length - 1].needGuildExp) this.signLv = t.length, 
            this.signReward = t[t.length - 1]; else for (var n = 1; n < t.length; n++) if (e.GuildData.lastExp < t[n].needGuildExp) {
                this.signLv = n, this.signReward = t[n - 1];
                break;
            }
            this.topLabel.text = "您的海盗团上周的活跃等级为" + this.signLv + "级", this.signRewardL.text = this.signLv + "级签到奖励", 
            this.signBtn.enabled = !i.gotDailySign, this.signBtn.icon = i.gotDailySign ? "comBtnTxt_json.common_txt_yqd" : "comBtnTxt_json.common_txt_qd";
        }, i.prototype.initFeedbackGroup = function() {
            var e = this;
            e.feedbackGroup.y = -159, egret.Tween.removeTweens(e.feedbackGroup), egret.Tween.get(e.feedbackGroup).wait(200).to({
                y: 0
            }, 1e3, egret.Ease.bounceOut).call(function() {
                e && (egret.Tween.removeTweens(e.feedbackGroup), egret.Tween.get(e.feedbackGroup, {
                    loop: !0
                }).to({
                    rotation: 5
                }, 700, egret.Ease.sineOut).to({
                    rotation: 0
                }, 700, egret.Ease.sineIn).to({
                    rotation: -5
                }, 700, egret.Ease.sineOut).to({
                    rotation: 0
                }, 700, egret.Ease.sineIn));
            });
        }, i.prototype.setAwardItemGroup = function() {
            this.rewardGroup.removeChildren(), this.signReward.energy > 0 && this.createAwardGroup({
                energy: this.signReward.energy
            }), this.signReward.guildCoin > 0 && this.createAwardGroup({
                guildCoin: this.signReward.guildCoin
            });
        }, i.prototype.createAwardGroup = function(t) {
            var i = new e.ComRewardNode();
            this.rewardGroup.addChild(i), util.setScale(i, .8), i.initNodeView(t);
        }, i.prototype.initRedPoint = function() {
            this.feedBackPoint.visible = e.GuildCache.GuildFeedbackRedPoint;
        }, i;
    }(hortor.Window);
    e.GuildWelfareWindow = t, __reflect(t.prototype, "game.GuildWelfareWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function() {
        function t(e) {
            this.iconNodePos = [ {
                x: 0,
                y: 139
            }, {
                x: 126,
                y: 135
            }, {
                x: 277,
                y: 134
            }, {
                x: 428,
                y: 134
            }, {
                x: 546,
                y: 134
            } ], this.iconNodeScales = [ .6, .8, 1, .8, .6 ], this.selectIconIdArr = [ 11, 12, 1, 2, 3 ], 
            this.joinModeArr = [ "允许任何人加入", "需要申请加入", "不可加入" ], this.joinMode = 0, this.joinLv = 0, 
            this._startPosX = 0, this._moving = !1, this.screen = e;
        }
        return t.prototype.onViewRegister = function() {
            var e = this.screen;
            e.joinLeftBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.changeModeFunc, this), 
            e.joinRightBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.changeModeFunc, this), 
            e.lvLeftBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.changeLvFunc, this), 
            e.lvRightBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.changeLvFunc, this), 
            e.createBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.createBtnFunc, this), 
            e.nameEdit.addEventListener(egret.Event.CHANGE, this.textInputFunc, this), e.selectGroup.addEventListener(egret.TouchEvent.TOUCH_BEGIN, this.selectTouchBegin, this), 
            e.selectGroup.addEventListener(egret.TouchEvent.TOUCH_MOVE, this.selectTouchMove, this), 
            e.selectGroup.addEventListener(egret.TouchEvent.TOUCH_END, this.selectTouchEnd, this);
        }, t.prototype.onViewRemove = function() {
            var e = this.screen;
            e.joinLeftBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.changeModeFunc, this), 
            e.joinRightBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.changeModeFunc, this), 
            e.lvLeftBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.changeLvFunc, this), 
            e.lvRightBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.changeLvFunc, this), 
            e.createBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.createBtnFunc, this), 
            e.nameEdit.removeEventListener(egret.Event.CHANGE, this.textInputFunc, this), e.selectGroup.removeEventListener(egret.TouchEvent.TOUCH_BEGIN, this.selectTouchBegin, this), 
            e.selectGroup.removeEventListener(egret.TouchEvent.TOUCH_MOVE, this.selectTouchMove, this), 
            e.selectGroup.removeEventListener(egret.TouchEvent.TOUCH_END, this.selectTouchEnd, this);
        }, t.prototype.onEventCenterRegister = function() {
            EventCenter.addEventListener(EventConst.GuildBuyMedal, this.showGuildMedalNum, this);
        }, t.prototype.onEventCenterRemove = function() {
            EventCenter.removeEventListener(EventConst.GuildBuyMedal, this.showGuildMedalNum, this);
        }, t.prototype.openPanel = function() {
            var t = this.screen;
            t.joinModeLabel.text = this.joinModeArr[this.joinMode], t.lvLimitLabel.text = this.joinLv + "", 
            t.medalIcon0.source = e.ItemManager.getItemInfo("guildMedal").icon, t.medalIcon1.source = e.ItemManager.getItemInfo("guildMedal").icon, 
            this.selectIconIdArr[2] = _.random(1, 12), this.selectIconIdArr[1] = this.selectIconIdArr[2] - 1 < 1 ? 12 : this.selectIconIdArr[2] - 1, 
            this.selectIconIdArr[0] = this.selectIconIdArr[1] - 1 < 1 ? 12 : this.selectIconIdArr[1] - 1, 
            this.selectIconIdArr[3] = this.selectIconIdArr[2] + 1 > 12 ? 1 : this.selectIconIdArr[2] + 1, 
            this.selectIconIdArr[4] = this.selectIconIdArr[3] + 1 > 12 ? 1 : this.selectIconIdArr[3] + 1;
            for (var i = 0; 5 > i; i++) t["iconNode" + i].data = this.selectIconIdArr[i];
            this.showGuildMedalNum();
        }, t.prototype.showGuildMedalNum = function() {
            var e = this.screen;
            e.guildMedalNum.text = "x" + playerModel.guildMedal;
        }, t.prototype.changeModeFunc = function(t) {
            var i = this.screen, n = t.target.name, o = 1;
            "joinLeftBtn" == n && (o = -1), this.joinMode += o, this.joinMode = this.joinMode > 2 ? 0 : this.joinMode, 
            this.joinMode = this.joinMode < 0 ? 2 : this.joinMode, i.joinModeLabel.text = this.joinModeArr[this.joinMode], 
            e.ComFunc.showChangeEffect(i.joinModeLabel);
        }, t.prototype.changeLvFunc = function(t) {
            var i = this.screen, n = t.target.name, o = 0;
            return "lvLeftBtn" == n && (o = this.joinLv <= 150 ? -this.joinLv : -50), "lvLeftBtn" == n && 0 == this.joinLv ? void hortor.TipManager.bubble("这已经是最小等级了") : "lvRightBtn" == n && 1e3 == this.joinLv ? void hortor.TipManager.bubble("这已经是最大等级了") : ("lvRightBtn" == n && (o = 0 == this.joinLv ? 150 : 50), 
            this.joinLv += o, i.lvLimitLabel.text = this.joinLv + "", void e.ComFunc.showChangeEffect(i.needLvGroup));
        }, t.prototype.createBtnFunc = function() {
            var t = this.screen, i = e.ComFunc.trim(t.nameEdit.text);
            if (i = e.ComFunc.dealInputText(i, 16), "" == i) return t.nameEdit.text = "", void hortor.TipManager.bubble("海盗团名字不能为空!");
            if (i.length < 3) return void hortor.TipManager.bubble("海盗团名字最少三个字符!");
            if (soundModel.buttonOpen(), 0 == playerModel.guildMedal) gateModel.iosPay ? HttpService.get(e.ServerMsg.SHOP_LIST, "uid=" + playerModel.uid, function(t) {
                var i = _.find(t.goods.prop, function(e) {
                    return "guildMedal" == e.goodsId;
                });
                i && hortor.WindowManager.showWindow(e.WindowType.WINDOW_SHOP_GOODS, i);
            }) : hortor.TipManager.alert("道具不足"); else {
                var n = {
                    uid: playerModel.uid,
                    name: i,
                    icon: this.selectIconIdArr[2],
                    mode: this.joinMode,
                    crown: this.joinLv
                };
                i = e.ComFunc.enCodeHtml(i), HttpService.post(e.ServerMsg.GUILD_CREATE, n, function(t) {
                    playerModel.guild.gid = t.guild.gid, playerModel.guildMedal--, new e.GuildShowLogic(), 
                    hortor.WindowManager.showWindow(e.WindowType.WINDOW_GUILD_SUC, 0);
                });
            }
        }, t.prototype.selectTouchBegin = function(e) {
            this._startPosX = e.stageX;
        }, t.prototype.selectTouchMove = function(e) {
            var t = this._startPosX - e.stageX;
            this._moving || (t > 30 ? (this._moving = !0, this.toLeftMove()) : -30 > t && (this._moving = !0, 
            this.toRightMove()));
        }, t.prototype.selectTouchEnd = function(e) {
            this._moving || (this._startPosX - e.stageX > 30 ? this.toLeftMove() : this._startPosX - e.stageX < -30 && this.toRightMove());
        }, t.prototype.toLeftMove = function() {
            for (var e = this, t = 0; 5 > t; t++) this.selectIconIdArr[t] += 1, this.selectIconIdArr[t] = 13 == this.selectIconIdArr[t] ? 1 : this.selectIconIdArr[t];
            var i = this.screen;
            i.iconNode0.x = this.iconNodePos[4].x + 180, i.iconNode0.y = this.iconNodePos[4].y, 
            i.iconNode0.data = this.selectIconIdArr[4];
            var n = egret.Tween.get(i.iconNode0);
            n.to({
                x: this.iconNodePos[4].x,
                y: this.iconNodePos[4].y
            }, 500, egret.Ease.circOut);
            var o = egret.Tween.get(i.iconNode1);
            o.to({
                x: this.iconNodePos[0].x,
                y: this.iconNodePos[0].y,
                scaleX: this.iconNodeScales[0],
                scaleY: this.iconNodeScales[0]
            }, 500, egret.Ease.circOut);
            var a = egret.Tween.get(i.iconNode2);
            a.to({
                x: this.iconNodePos[1].x,
                y: this.iconNodePos[1].y,
                scaleX: this.iconNodeScales[1],
                scaleY: this.iconNodeScales[1]
            }, 500, egret.Ease.circOut);
            var r = egret.Tween.get(i.iconNode3);
            r.to({
                x: this.iconNodePos[2].x,
                y: this.iconNodePos[2].y,
                scaleX: this.iconNodeScales[2],
                scaleY: this.iconNodeScales[2]
            }, 500, egret.Ease.circOut);
            var s = egret.Tween.get(i.iconNode4);
            s.to({
                x: this.iconNodePos[3].x,
                y: this.iconNodePos[3].y,
                scaleX: this.iconNodeScales[3],
                scaleY: this.iconNodeScales[3]
            }, 500, egret.Ease.circOut).call(function() {
                egret.Tween.removeTweens(i.iconNode0), egret.Tween.removeTweens(i.iconNode1), egret.Tween.removeTweens(i.iconNode2), 
                egret.Tween.removeTweens(i.iconNode3), egret.Tween.removeTweens(i.iconNode4), e.refreshIconPos(), 
                e._moving = !1;
            });
        }, t.prototype.toRightMove = function() {
            for (var e = this, t = 0; 5 > t; t++) this.selectIconIdArr[t] -= 1, this.selectIconIdArr[t] = 0 == this.selectIconIdArr[t] ? 12 : this.selectIconIdArr[t];
            var i = this.screen;
            i.iconNode4.x = this.iconNodePos[0].x - 180, i.iconNode4.y = this.iconNodePos[0].y, 
            i.iconNode4.data = this.selectIconIdArr[0];
            var n = egret.Tween.get(i.iconNode0);
            n.to({
                x: this.iconNodePos[1].x,
                y: this.iconNodePos[1].y,
                scaleX: this.iconNodeScales[1],
                scaleY: this.iconNodeScales[1]
            }, 500, egret.Ease.circOut);
            var o = egret.Tween.get(i.iconNode1);
            o.to({
                x: this.iconNodePos[2].x,
                y: this.iconNodePos[2].y,
                scaleX: this.iconNodeScales[2],
                scaleY: this.iconNodeScales[2]
            }, 500, egret.Ease.circOut);
            var a = egret.Tween.get(i.iconNode2);
            a.to({
                x: this.iconNodePos[3].x,
                y: this.iconNodePos[3].y,
                scaleX: this.iconNodeScales[3],
                scaleY: this.iconNodeScales[3]
            }, 500, egret.Ease.circOut);
            var r = egret.Tween.get(i.iconNode3);
            r.to({
                x: this.iconNodePos[4].x,
                y: this.iconNodePos[4].y,
                scaleX: this.iconNodeScales[4],
                scaleY: this.iconNodeScales[4]
            }, 500, egret.Ease.circOut);
            var s = egret.Tween.get(i.iconNode4);
            s.to({
                x: this.iconNodePos[0].x,
                y: this.iconNodePos[0].y
            }, 500, egret.Ease.circOut).call(function() {
                egret.Tween.removeTweens(i.iconNode0), egret.Tween.removeTweens(i.iconNode1), egret.Tween.removeTweens(i.iconNode2), 
                egret.Tween.removeTweens(i.iconNode3), egret.Tween.removeTweens(i.iconNode4), e.refreshIconPos(), 
                e._moving = !1;
            });
        }, t.prototype.refreshIconPos = function() {
            for (var e = this.screen, t = 0; 5 > t; t++) e["iconNode" + t].data = this.selectIconIdArr[t], 
            e["iconNode" + t].x = this.iconNodePos[t].x, e["iconNode" + t].y = this.iconNodePos[t].y, 
            util.setScale(e["iconNode" + t], this.iconNodeScales[t]);
        }, t.prototype.textInputFunc = function() {
            for (var t = 0, i = this.screen, n = e.ComFunc.trim(i.nameEdit.text), o = 0; o < n.length; o++) {
                var a = new RegExp("[\\u4E00-\\u9FFF]", "");
                t += a.test(n[o]) ? 2 : 1;
            }
            if (16 >= t) i.nameEdit.text = n; else {
                var r = "";
                t = 0, n = i.nameEdit.text;
                for (var o = 0; o < n.length; o++) {
                    var a = new RegExp("[\\u4E00-\\u9FFF]", "");
                    t += a.test(n[o]) ? 2 : 1, 16 >= t && (r += n[o]);
                }
                i.nameEdit.text = r;
            }
        }, t;
    }();
    e.GuildCreateLogic = t, __reflect(t.prototype, "game.GuildCreateLogic");
}(game || (game = {}));

var game;

!function(e) {
    var t = function() {
        function t(e) {
            this.joinModeArr = [ "允许任何人加入", "需要申请加入", "不可加入" ], this.mediator = e;
        }
        return t.prototype.onViewRegister = function() {
            var t = this.mediator;
            t.memListBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.memListBtnFunc, this), 
            t.manageBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.manageBtnFunc, this), 
            t.changeBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.changeBtnFunc, this), 
            t.hallHelpBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.hallHelpBtnFunc, this), 
            t.guildIcon.addEventListener(egret.TouchEvent.TOUCH_TAP, this.hallHelpBtnFunc, this), 
            t.acData = new eui.ArrayCollection(), t.acList.dataProvider = t.acData, t.acList.itemRenderer = e.GuildActNode;
        }, t.prototype.onViewRemove = function() {
            var e = this.mediator;
            e.memListBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.memListBtnFunc, this), 
            e.manageBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.manageBtnFunc, this), 
            e.changeBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.changeBtnFunc, this);
        }, t.prototype.onEventCenterRegister = function() {
            EventCenter.addEventListener(EventConst.GuildSetting, this.showView, this), EventCenter.addEventListener(EventConst.GuildQuitMem, this.showView, this), 
            EventCenter.addEventListener(EventConst.GuildHallRefresh, this.showView, this), 
            EventCenter.addEventListener(EventConst.GuildSignReward, this.showLvAndCoinView, this), 
            EventCenter.addEventListener(EventConst.GuildDutyChange, this.dutyChangeEvent, this);
        }, t.prototype.onEventCenterRemove = function() {
            EventCenter.removeEventListener(EventConst.GuildSetting, this.showView, this), EventCenter.removeEventListener(EventConst.GuildQuitMem, this.showView, this), 
            EventCenter.removeEventListener(EventConst.GuildHallRefresh, this.showView, this), 
            EventCenter.removeEventListener(EventConst.GuildSignReward, this.showLvAndCoinView, this), 
            EventCenter.removeEventListener(EventConst.GuildDutyChange, this.dutyChangeEvent, this);
        }, t.prototype.openPanel = function() {
            this.mediator;
            this.selfData = _.find(e.GuildData.members, function(e) {
                return e.uid == playerModel.uid;
            }), this.showView(), this.initActivityList();
        }, t.prototype.showView = function() {
            var t = this.mediator, i = e.GuildData.guild;
            t.guildIcon.source = "guild_icon" + i.icon, t.guildName.text = i.name, t.guildId.text = "" + i.gid, 
            t.guildMem.text = e.GuildData.members.length + "/20", t.joinModeL.text = "" + this.joinModeArr[i.mode];
            var n = 0 == i.needCrown ? "无" : i.needCrown + "星";
            t.lvLimitL.text = "" + n, this.selfData && this.selfData.authority >= 7 ? (t.manageBtn.visible = !0, 
            t.manageBtn.touchEnabled = !0, t.changeBtn.visible = this.selfData.authority >= 15) : (t.manageBtn.visible = !1, 
            t.manageBtn.touchEnabled = !1, t.changeBtn.visible = !1), this.showLvAndCoinView();
        }, t.prototype.showCoinAndActivity = function() {
            var t = this.mediator, i = playerModel.guild;
            t.coinNum.text = "" + i.coin, this.selfData = _.find(e.GuildData.members, function(e) {
                return e.uid == playerModel.uid;
            }), this.selfData && (t.activityNum.text = "" + this.selfData.exp);
        }, t.prototype.showLvBarProgress = function() {
            for (var t = this.mediator, i = e.GuildData.members, n = e.GuildData.signRewards, o = 0, a = n[1].needGuildExp, r = 1, s = 0, l = 0; l < i.length; l++) o += i[l].exp;
            if (o >= n[n.length - 1].needGuildExp) r = n.length, a = n[n.length - 1].needGuildExp; else for (var d = 1; d < n.length; d++) if (o < n[d].needGuildExp) {
                r = d, a = n[d].needGuildExp;
                break;
            }
            s = r == n.length ? n[r - 2].needGuildExp : n[r - 1].needGuildExp;
            var u = a - s, h = o - s;
            h = h > u ? u : h, t.guildLv.text = r + "级", t.lvBarNum.text = h + "/" + u;
            var c = 194, p = h / u;
            p = p > 1 ? 1 : p, t.lvBar.mask = new egret.Rectangle(0, 0, c * p, 26);
        }, t.prototype.showLvAndCoinView = function() {
            this.showCoinAndActivity(), this.showLvBarProgress();
        }, t.prototype.memberChange = function() {
            var t = this.mediator;
            e.GuildData.members;
            t.guildMem.text = "成员:" + e.GuildData.members.length + "/20";
        }, t.prototype.initActivityList = function() {
            var e = this.mediator, t = [ {
                type: 0,
                isOpen: 1,
                typeName: "每日福利",
                sColor: 8084992,
                bgType: 0
            }, {
                type: 1,
                isOpen: 1,
                typeName: "海盗商店",
                sColor: 8084992,
                bgType: 0
            }, {
                type: 2,
                isOpen: 1,
                typeName: "帆船竞赛",
                sColor: 1338767,
                bgType: 1
            }, {
                type: 3,
                isOpen: 1,
                typeName: "疯狂海战",
                sColor: 7630177,
                bgType: 2
            } ];
            e.acData.replaceAll(t), e.acList.dataProviderRefreshed();
        }, t.prototype.dutyChangeEvent = function() {
            var t = this.mediator;
            this.selfData = _.find(e.GuildData.members, function(e) {
                return e.uid == playerModel.uid;
            }), this.selfData && this.selfData.authority >= 7 ? (t.manageBtn.visible = !0, t.manageBtn.touchEnabled = !0, 
            t.changeBtn.visible = this.selfData.authority >= 15) : (t.manageBtn.visible = !1, 
            t.manageBtn.touchEnabled = !1, t.changeBtn.visible = !1);
        }, t.prototype.memListBtnFunc = function() {
            hortor.WindowManager.showWindow(e.WindowType.WINDOW_GUILD_MEMBERLIST, {
                type: e.GuildProxy.FromManage,
                guildData: {}
            });
        }, t.prototype.manageBtnFunc = function() {
            hortor.WindowManager.showWindow(e.WindowType.WINDOW_GUILD_SETTING);
        }, t.prototype.hallHelpBtnFunc = function() {
            soundModel.buttonOpen();
            var t = (this.mediator, HelpTextLabel.getGuildHallHelpLabel());
            e.ComFunc.openHelpPanel(t);
        }, t.prototype.changeBtnFunc = function() {
            hortor.WindowManager.currentWindow = e.WindowType.WINDOW_GUILD_RENAME;
        }, t;
    }();
    e.GuildHallLogic = t, __reflect(t.prototype, "game.GuildHallLogic");
}(game || (game = {}));

var game;

!function(e) {
    var t = function() {
        function t(e) {
            this.isFirst = !0, this.screen = e;
        }
        return t.prototype.onViewRegister = function() {
            var t = this.screen;
            t.joinData = new eui.ArrayCollection(), t.joinList.dataProvider = t.joinData, t.joinList.itemRenderer = e.GuildJoinNode, 
            this.screen.changeBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.refreshView, this);
        }, t.prototype.onViewRemove = function() {
            this.screen.changeBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.refreshView, this), 
            this.timeOut && egret.clearTimeout(this.timeOut);
        }, t.prototype.openPanel = function() {
            this.refreshView();
        }, t.prototype.refreshView = function() {
            var t = this, i = this.screen;
            this.isFirst || (i.changeBtn.enabled = !1), HttpService.get(e.ServerMsg.GUILD_LIST, "uid=" + playerModel.uid, function(e) {
                var n = e.friends.concat(e.recommends);
                i.emptyGroup0.visible = !0, n.length > 0 && (i.emptyGroup0.visible = !1, i.joinData && i.joinData.length > 0 && i.joinData.removeAll(), 
                i.joinData.source = n), t.isFirst || (t.timeOut = egret.setTimeout(function() {
                    egret.clearTimeout(t.timeOut), t.timeOut = null, i.changeBtn.enabled = !0;
                }, t, 2e3)), t.isFirst = !1;
            });
        }, t;
    }();
    e.GuildJoinLogic = t, __reflect(t.prototype, "game.GuildJoinLogic");
}(game || (game = {}));

var game;

!function(e) {
    var t = function() {
        function t(e) {
            this.screen = e;
        }
        return t.prototype.onViewRegister = function() {
            this.screen.searchBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.searchBtnFunc, this);
            var t = this.screen;
            t.searchData = new eui.ArrayCollection(), t.searchList.dataProvider = t.searchData, 
            t.searchList.itemRenderer = e.GuildSearchNode;
        }, t.prototype.onViewRemove = function() {
            this.screen.searchBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.searchBtnFunc, this);
        }, t.prototype.openPanel = function() {
            this.screen.searchEdit.inputType = egret.TextFieldInputType.TEL, this.screen.searchData && this.screen.searchData.removeAll();
        }, t.prototype.searchBtnFunc = function() {
            var t = this.screen, i = e.ComFunc.trim(t.searchEdit.text), n = new RegExp("^[0-9]*$");
            return "" == i ? void hortor.TipManager.bubble("海盗团的ID不能为空!") : n.test(i) ? (t.searchData && t.searchData.length > 0 && t.searchData.removeAll(), 
            void HttpService.get(e.ServerMsg.GUILD_SEARCH, "uid=" + playerModel.uid + "&gid=" + i, function(e) {
                var i = e.guilds || [];
                t.emptyGroup1.visible = !0, i.length > 0 ? (t.emptyGroup1.visible = !1, t.searchData.source = i) : hortor.TipManager.bubble("海盗团未找到");
            })) : void hortor.TipManager.bubble("海盗团的ID是数字!");
        }, t;
    }();
    e.GuildSearchLogic = t, __reflect(t.prototype, "game.GuildSearchLogic");
}(game || (game = {}));

var game;

!function(e) {
    var t = function() {
        function t() {
            var t = this;
            if (0 == guildModel.guild.gid) hortor.ScreenManager.currentScreen = e.ScreenType.GUILD_JOINSCREEN; else {
                var i = e.GuildCache.Messages.length > 0;
                HttpService.get(e.ServerMsg.GUILD_SHOW, {
                    uid: playerModel.uid,
                    gid: guildModel.guild.gid,
                    showMsg: !i
                }, function(e) {
                    t.dealGuildData(e);
                });
            }
        }
        return t.prototype.dealGuildData = function(t) {
            var i = e.GuildCache.Messages.length > 0;
            e.GuildData = t;
            for (var n = 0; n < t.members.length; n++) e.GuildCache.Members[t.members[n].uid] = t.members[n];
            e.GuildCache.Donates = t.donates;
            for (var o = [], n = 0; n < t.messages.length; n++) e.GuildCache.Members[t.messages[n].uid] || _.contains(o, t.messages[n].uid) || o.push(t.messages[n].uid);
            for (var a = "", r = 0; r < o.length; r++) a += r != o.length - 1 ? o[r] + "," : o[r] + "";
            if (o.length > 0) HttpService.post(e.ServerMsg.KILLTITAN_GET_PLAYER_SIMLE_INFO, {
                uid: playerModel.uid,
                ids: a
            }, function(n) {
                if (!i) {
                    e.GuildCache.Systems = t.systems;
                    for (var o = [], a = 0; a < t.messages.length; a++) {
                        for (var r, s = t.messages[a].uid + "", l = 0; l < n.playerSimpleInfos.length; l++) if (n.playerSimpleInfos[l].uid == s) {
                            r = n.playerSimpleInfos[l];
                            break;
                        }
                        var d = {
                            msgId: 1,
                            uid: e.GuildCache.Members[s] ? e.GuildCache.Members[s].uid : s,
                            name: e.GuildCache.Members[s] ? e.GuildCache.Members[s].name : r.name,
                            headImg: e.GuildCache.Members[s] ? e.GuildCache.Members[s].headImg : r.headImg,
                            isVip: e.GuildCache.Members[s] ? e.GuildCache.Members[s].isVip : r.isVip,
                            gender: e.GuildCache.Members[s] ? e.GuildCache.Members[s].gender : r.gender,
                            crowns: e.GuildCache.Members[s] ? e.GuildCache.Members[s].crowns : 0,
                            inviteCode: "",
                            content: t.messages[a].content,
                            createdTime: t.messages[a].createdTime,
                            isPrivilege: e.GuildCache.Members[s] ? e.GuildCache.Members[s].isPrivilege : !1,
                            position: 0,
                            type: "",
                            value: "",
                            num: 0,
                            remainTime: 0,
                            city: e.GuildCache.Members[s] ? e.GuildCache.Members[s].city : r.city,
                            province: e.GuildCache.Members[s] ? e.GuildCache.Members[s].province : r.province
                        };
                        o.push(d);
                    }
                    for (var a = 0; a < t.systems.length; a++) {
                        var u = {
                            type: t.systems[a].type,
                            duty: e.GuildUtils.getGuildDuty(parseInt(t.systems[a].value)),
                            name: t.systems[a].name,
                            value: t.systems[a].value
                        }, h = e.GuildUtils.getGuildNews(u), c = {
                            msgId: 5,
                            uid: 0,
                            name: t.systems[a].name,
                            headImg: "",
                            isVip: e.GuildCache.Members[s] ? e.GuildCache.Members[s].isVip : r.isVip,
                            gender: e.GuildCache.Members[s] ? e.GuildCache.Members[s].gender : r.gender,
                            crowns: 0,
                            inviteCode: "",
                            content: h,
                            createdTime: t.systems[a].createdTime,
                            position: 0,
                            type: t.systems[a].type,
                            value: t.systems[a].value,
                            num: 0,
                            remainTime: 0,
                            city: e.GuildCache.Members[s] ? e.GuildCache.Members[s].city : r.city,
                            province: e.GuildCache.Members[s] ? e.GuildCache.Members[s].province : r.province
                        };
                        o.push(c);
                    }
                    for (var a = 0; a < t.donates.length; a++) {
                        for (var r, l = 0; l < n.playerSimpleInfos.length; l++) if (n.playerSimpleInfos[l].uid == s) {
                            r = n.playerSimpleInfos[l];
                            break;
                        }
                        var s = t.donates[a].uid + "", p = {
                            msgId: 2,
                            uid: e.GuildCache.Members[s] ? e.GuildCache.Members[s].uid : s,
                            name: e.GuildCache.Members[s] ? e.GuildCache.Members[s].name : r.name,
                            headImg: e.GuildCache.Members[s] ? e.GuildCache.Members[s].headImg : r.headImg,
                            isVip: e.GuildCache.Members[s] ? e.GuildCache.Members[s].isVip : r.isVip,
                            gender: e.GuildCache.Members[s] ? e.GuildCache.Members[s].gender : r.gender,
                            crowns: e.GuildCache.Members[s] ? e.GuildCache.Members[s].crowns : 0,
                            inviteCode: "",
                            content: "",
                            createdTime: t.donates[a].createdTime,
                            position: t.donates[a].position,
                            type: t.donates[a].type,
                            value: "",
                            num: t.donates[a].num,
                            remainTime: t.donates[a].remainTime,
                            city: e.GuildCache.Members[s] ? e.GuildCache.Members[s].city : r.city,
                            province: e.GuildCache.Members[s] ? e.GuildCache.Members[s].province : r.province
                        };
                        o.push(p);
                    }
                    e.GuildCache.Messages = _.sortBy(o, "createdTime"), e.GuildCache.Messages.length > 20 && (e.GuildCache.Messages = e.GuildCache.Messages.slice(e.GuildCache.Messages.length - 20, e.GuildCache.Messages.length));
                }
                hortor.ScreenManager.currentScreen = e.ScreenType.GUILD_SCREEN;
            }); else {
                if (!i) {
                    e.GuildCache.Systems = t.systems;
                    for (var s = [], n = 0; n < t.messages.length; n++) {
                        var l = t.messages[n].uid + "", d = {
                            msgId: 1,
                            uid: e.GuildCache.Members[l].uid,
                            name: e.GuildCache.Members[l].name,
                            headImg: e.GuildCache.Members[l].headImg,
                            isVip: e.GuildCache.Members[l] ? e.GuildCache.Members[l].isVip : !1,
                            gender: e.GuildCache.Members[l] ? e.GuildCache.Members[l].gender : 0,
                            crowns: e.GuildCache.Members[l].crowns,
                            inviteCode: "",
                            content: t.messages[n].content,
                            createdTime: t.messages[n].createdTime,
                            isPrivilege: e.GuildCache.Members[l] ? e.GuildCache.Members[l].isPrivilege : !1,
                            position: 0,
                            type: "",
                            value: "",
                            num: 0,
                            remainTime: 0,
                            city: e.GuildCache.Members[l] ? e.GuildCache.Members[l].city : 0,
                            province: e.GuildCache.Members[l] ? e.GuildCache.Members[l].province : 0
                        };
                        s.push(d);
                    }
                    for (var n = 0; n < t.systems.length; n++) {
                        var u = {
                            type: t.systems[n].type,
                            duty: e.GuildUtils.getGuildDuty(parseInt(t.systems[n].value)),
                            name: t.systems[n].name,
                            value: t.systems[n].value
                        }, h = e.GuildUtils.getGuildNews(u), c = {
                            msgId: 5,
                            uid: 0,
                            name: t.systems[n].name,
                            headImg: "",
                            isVip: e.GuildCache.Members[l] ? e.GuildCache.Members[l].isVip : !1,
                            gender: e.GuildCache.Members[l] ? e.GuildCache.Members[l].gender : 0,
                            crowns: 0,
                            inviteCode: "",
                            content: h,
                            createdTime: t.systems[n].createdTime,
                            position: 0,
                            type: t.systems[n].type,
                            value: t.systems[n].value,
                            num: 0,
                            remainTime: 0,
                            city: e.GuildCache.Members[l] ? e.GuildCache.Members[l].city : 0,
                            province: e.GuildCache.Members[l] ? e.GuildCache.Members[l].province : 0
                        };
                        s.push(c);
                    }
                    for (var n = 0; n < t.donates.length; n++) {
                        var l = t.donates[n].uid + "", p = {
                            msgId: 2,
                            uid: e.GuildCache.Members[l].uid,
                            name: e.GuildCache.Members[l].name,
                            headImg: e.GuildCache.Members[l].headImg,
                            isVip: e.GuildCache.Members[l] ? e.GuildCache.Members[l].isVip : !1,
                            gender: e.GuildCache.Members[l] ? e.GuildCache.Members[l].gender : 0,
                            crowns: e.GuildCache.Members[l].crowns,
                            inviteCode: "",
                            content: "",
                            createdTime: t.donates[n].createdTime,
                            position: t.donates[n].position,
                            type: t.donates[n].type,
                            value: "",
                            num: t.donates[n].num,
                            remainTime: t.donates[n].remainTime,
                            city: e.GuildCache.Members[l] ? e.GuildCache.Members[l].city : 0,
                            province: e.GuildCache.Members[l] ? e.GuildCache.Members[l].province : 0
                        };
                        s.push(p);
                    }
                    e.GuildCache.Messages = _.sortBy(s, "createdTime"), e.GuildCache.Messages.length > 20 && (e.GuildCache.Messages = e.GuildCache.Messages.slice(e.GuildCache.Messages.length - 20, e.GuildCache.Messages.length));
                }
                hortor.ScreenManager.currentScreen = e.ScreenType.GUILD_SCREEN;
            }
        }, t;
    }();
    e.GuildShowLogic = t, __reflect(t.prototype, "game.GuildShowLogic");
}(game || (game = {}));

var game;

!function(e) {
    var t = function() {
        function t(e) {
            this.times = 0, this.mediator = e;
        }
        return t.prototype.onViewRegister = function() {
            var t = this.mediator;
            t.taskData = new eui.ArrayCollection(), t.taskList.dataProvider = t.taskData, t.taskList.itemRenderer = e.GuildTaskNode, 
            t.taskHelpBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.taskHelpBtnFunc, this);
        }, t.prototype.onViewRemove = function() {
            var e = this.mediator;
            e.taskHelpBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.taskHelpBtnFunc, this), 
            this.timer && (this.timer.removeEventListener(egret.TimerEvent.TIMER, this._countDown, this), 
            this.timer.stop(), this.timer = null);
        }, t.prototype.onEventCenterRegister = function() {
            EventCenter.addEventListener(EventConst.GuildGetTaskReward, this.refreshTaskList, this), 
            EventCenter.addEventListener(EventConst.GuildSignReward, this.refreshCoinNum, this);
        }, t.prototype.openPanel = function() {
            this.mediator;
            this.refreshCoinNum();
        }, t.prototype.initView = function(e) {
            this.taskData = e, this.taskList = e.tasks, this.initTaskList(), this.startTimer();
        }, t.prototype.refreshCoinNum = function() {
            var e = this.mediator;
            e.taskGuildCoin.text = "" + guildModel.guild.coin;
        }, t.prototype.startTimer = function() {
            var t = this.mediator;
            t.taskRefreshTime.text = e.ComFunc.formatTimeHMSNew(this.taskData.refreshTime), 
            this.timer || (this.timer = new egret.Timer(1e3), this.timer.addEventListener(egret.TimerEvent.TIMER, this._countDown, this), 
            this.timer.start());
        }, t.prototype._countDown = function() {
            var t = this.mediator;
            this.taskData.refreshTime--, this.times++, this.times % 5 == 0 && EventCenter.sendEvent(EventConst.PlayGuildTaskMC), 
            this.taskData.refreshTime <= 0 && (this.taskData.refreshTime = 86400), t.taskRefreshTime.text = e.ComFunc.formatTimeHMSNew(this.taskData.refreshTime);
        }, t.prototype.initTaskList = function() {
            var e = this.mediator, t = this.taskList;
            e.taskData.source = t;
        }, t.prototype.refreshTaskList = function(e) {
            var t = this.mediator;
            if (this.taskList) {
                var i = this.taskList, n = e.data;
                if (n && _.isNumber(n.taskId)) {
                    var o = _.find(i, function(e) {
                        return n.taskId == e.id;
                    });
                    o && (o.gotReward = !0);
                }
                t.taskData.replaceAll(i), t.taskList.dataProviderRefreshed(), this.refreshCoinNum();
            }
        }, t.prototype.taskHelpBtnFunc = function() {
            soundModel.buttonOpen();
            var t = (this.mediator, HelpTextLabel.getGuildTaskText());
            e.ComFunc.openHelpPanel(t);
        }, t;
    }();
    e.GuildTaskLogic = t, __reflect(t.prototype, "game.GuildTaskLogic");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.skinPath = "guild/node/GuildActNodeSkin", e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.nodeBg.addEventListener(egret.TouchEvent.TOUCH_TAP, this.nodeBgFunc, this), 
            EventCenter.addEventListener(EventConst.refreshGuildRedPoint, this.nodeRedPoint, this);
        }, i.prototype.onData = function() {
            var e = this.data;
            this.nodeBg.source = "guild_img_banner" + e.type, this.nodeRedPoint();
        }, i.prototype.nodeBgFunc = function() {
            soundModel.buttonOpen();
            var t = this.data;
            if (0 != t.isOpen) switch (t.type) {
              case 0:
                HttpService.get(e.ServerMsg.GUILD_SHOW_DAILY_WELFARE, {
                    uid: playerModel.uid
                }, function(t) {
                    hortor.WindowManager.currentWindow = e.WindowType.WINDOW_GUILD_WELFARE, e.GuildDailyWelfareData = t;
                });
                break;

              case 1:
                HttpService.get(e.ServerMsg.RACE_SHOW, {
                    uid: playerModel.uid,
                    version: 1
                }, function(t) {
                    e.SailingCache.isoWeek = t.isoWeek || 0, e.SailingShowData = t, hortor.ScreenManager.currentScreen = e.ScreenType.GUILD_SAILING;
                });
                break;

              case 2:
                hortor.WindowManager.currentWindow = e.WindowType.WINDOW_GUILD_SHOP;
                break;

              case 3:
                hortor.WindowManager.showWindow(e.WindowType.WINDOW_BANNER_INFO);
                break;

              case 4:
            }
        }, i.prototype.nodeRedPoint = function() {
            this.acNodeRedPoint.visible = !1, 0 == this.data.type ? this.acNodeRedPoint.visible = e.GuildCache.GuildWelfareRedPoint : 1 == this.data.type && (this.acNodeRedPoint.visible = e.GuildCache.GuildSailingRedPoint || e.GuildCache.GuildSailingRewardRedPoint || e.GuildCache.GuildSailingFirstOpenPoint);
        }, i;
    }(e.ItemRenderBase);
    e.GuildActNode = t, __reflect(t.prototype, "game.GuildActNode");
}(game || (game = {})), window.game.GuildActNode = game.GuildActNode;

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.skinPath = "guild/node/GuildApplyNodeSkin", e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.refuseBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.refuseBtnFunc, this), 
            this.agreeBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.agreeBtnFunc, this);
        }, i.prototype.onData = function() {
            this.initView();
        }, i.prototype.removeFunc = function() {
            this.refuseBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.refuseBtnFunc, this), 
            this.agreeBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.agreeBtnFunc, this);
        }, i.prototype.initView = function() {
            var t = this.data;
            this.avatarSimple.data = {
                gender: t.gender,
                headImg: t.headImg,
                crowns: t.crowns,
                showStar: !0
            }, this.memName.text = t.name, this.timeL.text = e.ComFunc.showTimeBeforeNew(t.createdTime || moment().unix());
        }, i.prototype.refuseBtnFunc = function() {
            this.sendGuildVerify(!1);
        }, i.prototype.agreeBtnFunc = function() {
            this.sendGuildVerify(!0);
        }, i.prototype.sendGuildVerify = function(t) {
            var i = this.data;
            HttpService.post(e.ServerMsg.GUILD_VERIFY, "uid=" + playerModel.uid + "&fid=" + i.uid + "&isAccept=" + t, function(n) {
                var o = t ? "批准了" + i.name + "的请求" : "拒绝了" + i.name + "的请求";
                hortor.TipManager.bubble(o), e.GuildData.members = n.members, t && (EventCenter.sendEvent(EventConst.GuildDutyChange), 
                EventCenter.sendEvent(EventConst.GuildQuitMem)), EventCenter.sendEvent(EventConst.GuildDealApplyMember, {
                    isAccept: t,
                    memUid: i.uid
                });
            }, null, function(e) {
                20054 == e && EventCenter.sendEvent(EventConst.GuildDealApplyMember, {
                    isAccept: !1,
                    memUid: i.uid
                });
            });
        }, i;
    }(e.ItemRenderBase);
    e.GuildApplyNode = t, __reflect(t.prototype, "game.GuildApplyNode");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.itemHeight = 0, e._first = !0, e.once(egret.Event.COMPLETE, e.onInit, e), 
            e.once(egret.Event.REMOVED_FROM_STAGE, e.clearFunc, e), e.skinName = GuildChatNodeSkin, 
            e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            EventCenter.addEventListener(EventConst.GuildChatNodeRefresh, this.refreshNode, this), 
            this.headMask.addEventListener(egret.TouchEvent.TOUCH_TAP, this.headMaskFunc, this), 
            this.requestBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.requestBtnFunc, this), 
            this.reportBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.reportBtnFunc, this), 
            this._first = !1;
        }, i.prototype.clearFunc = function() {
            this && this.timer && (this.timer.removeEventListener(egret.TimerEvent.TIMER, this.timerFunc, this), 
            this.timer.stop(), this.timer = null), this.headMask.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.headMaskFunc, this), 
            this.requestBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.requestBtnFunc, this), 
            this.reportBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.reportBtnFunc, this), 
            EventCenter.removeEventListener(EventConst.GuildChatNodeRefresh, this.refreshNode, this);
        }, i.prototype.initData = function(t) {
            if (this.data = t, this._player = e.GuildCache.Members[this.data.uid], this._player ? (this.data.authority = this._player.authority, 
            this.data.isFriend = this._player.isFriend, this.data.inviteCode = this._player.inviteCode) : this.data.authority = -1, 
            this.invalidateState(), 1 == this.data.msgId) {
                util.setRemoteAvatar(this.headImg, this.data.headImg, 46), this.timeLabel.text = e.ComFunc.showTimeNormal(this.data.createdTime || moment().unix()), 
                this.userName.text = util.strSub(this.data.name, 10), this.userName.textColor = this.content.textColor = 1 == this.data.gender ? Const.genderCorlor1 : Const.genderCorlor2, 
                this.duties.source = "guild_icon_zw" + this.data.authority, this.headMask.source = 1 == this.data.gender ? "friend_json.friend_img_sj6" : "friend_json.friend_img_sj7", 
                this.content.text = this.data.content, this.contentBg.source = this.data.isPrivilege ? "friend_json.friend_chat_bg_privilege" : "friend_json.friend_chat_bg_normal", 
                this.contentBgArrow.source = this.data.isPrivilege ? "friend_json.friend_chat_arrow_privilege" : "friend_json.friend_img_sj8", 
                this.contentBgVip.visible = this.contentBgVip.includeInLayout = this.data.isVip;
                var i = 0;
                this.data.uid == playerModel.uid ? (i = 342 - this.userName.width, this.contentBgVip.visible && (this.contentBgVip.x = i - 5)) : (i = 158 + this.userName.width, 
                this.contentBgVip.visible && (console.log("posX + 5 ===>", i + 5), this.contentBgVip.x = i + 5, 
                i = this.contentBgVip.x + this.contentBgVip.width), this.reportBtn.x = i + 5), this.content.top = 59, 
                this.contentBg.width = this.content.width + 30 < 78 ? 78 : this.content.width + 30, 
                this.contentBg.height = this.content.height + 30 < 49 ? 49 : this.content.height + 30;
            } else 2 == this.data.msgId ? (util.setRemoteAvatar(this.headImg, this.data.headImg, 46), 
            this.timeLabel.text = e.ComFunc.showTimeNormal(this.data.createdTime || moment().unix()), 
            this.userName.text = this.data.name.length > 10 ? this.data.name.substr(0, 10) + "..." : this.data.name, 
            this.headMask.source = 1 == this.data.gender ? "friend_json.friend_img_sj6" : "friend_json.friend_img_sj7", 
            this.content.text = this.data.content, this.userName.textColor = this.content.textColor = 1 == this.data.gender ? Const.genderCorlor1 : Const.genderCorlor2, 
            this.duties.source = "guild_icon_zw" + this.data.authority, this.pieceLabel.text = "海盗拼图碎片" + this.data.num, 
            this.pieceNums.text = "你有" + jigsawModel.jigsawInfo.bags[this.data.num - 1], this.requestBtn.enabled = jigsawModel.jigsawInfo.bags[this.data.num - 1] > 0 && this.data.uid != playerModel.uid, 
            this.timer = new egret.Timer(1e3), this.timer.addEventListener(egret.TimerEvent.TIMER, this.timerFunc, this), 
            this.timer.start()) : this.newsLabel.text = this.data.content;
        }, Object.defineProperty(i.prototype, "contentHeight", {
            get: function() {
                var e = this.contentBg.visible ? this.contentBg.height + 46 : this.contentBgVip.height + 43;
                return Math.max(98, e);
            },
            enumerable: !0,
            configurable: !0
        }), i.prototype.timerFunc = function() {
            if (moment().unix() - this.data.createdTime >= 86400) {
                var e = {
                    uid: this.data.uid,
                    slot: this.data.position,
                    createdTime: this.data.createdTime
                };
                EventCenter.sendEvent(EventConst.guildDeleteMessage, e);
            }
        }, i.prototype.getCurrentState = function() {
            return 1 == this.data.msgId ? this.data.uid == playerModel.uid ? "self" : "others" : 5 == this.data.msgId ? "news" : 2 == this.data.msgId ? "request" : "news";
        }, i.prototype.nodeRemove = function(e) {
            egret.Tween.get(this.group).to({
                x: this.group.x - 640
            }, 200).to({
                scaleY: 0
            }, 200).call(function() {
                e && "function" == typeof e && e();
            });
        }, i.prototype.reportBtnFunc = function() {
            var t = this.data;
            hortor.TipManager.alert("确定要举报" + t.name + "吗？", function() {
                HttpService.post(e.ServerMsg.CHAT_REPORT, {
                    uid: playerModel.uid,
                    fid: t.uid,
                    message: t.content
                }, function(e) {
                    hortor.TipManager.bubble("举报成功！");
                });
            });
        }, i.prototype.refreshNode = function() {
            this._player = e.GuildCache.Members[this.data.uid], this._player ? (this.data.authority = this._player.authority, 
            this.data.isFriend = this._player.isFriend, this.data.inviteCode = this._player.inviteCode) : this.data.authority = -1, 
            this.duties.source = "guild_icon_zw" + this.data.authority, 2 == this.data.msgId && (this.pieceNums.text = "你有" + jigsawModel.jigsawInfo.bags[this.data.num - 1], 
            this.requestBtn.enabled = jigsawModel.jigsawInfo.bags[this.data.num - 1] > 0 && this.data.uid != playerModel.uid);
        }, i.prototype.requestBtnFunc = function() {
            var t = this;
            return 0 == jigsawModel.jigsawInfo.openTime && jigsawModel.jigsawInfo.closeTime > 0 ? e.GuildData.donateRemain > 0 ? void hortor.TipManager.alert("你之前离开过海盗团\n重新加入后需要等待24小时才可以进行赠送\n剩余时间：" + e.ComFunc.formatTime(e.GuildData.donateRemain, !0)) : playerModel.dailyEventInfo.donateJigsawCount >= Const.donateJigsawCount ? void hortor.TipManager.bubble("每天最多赠送5次拼图碎片，请明天再送吧") : void hortor.TipManager.alert("确定要将海盗拼图碎片" + this.data.num + '赠送给"' + this.data.name + '"吗？', function() {
                HttpService.post(e.ServerMsg.GUILD_RESPONSE_DONATE, {
                    uid: playerModel.uid,
                    fid: t.data.uid,
                    slot: t.data.position
                }, function(i) {
                    jigsawModel.jigsawInfo.bags[t.data.num - 1] -= 1, playerModel.dailyEventInfo.donateJigsawCount += 1, 
                    playerModel.guild.coin += 5;
                    var n = {
                        reward: {
                            guildCoin: 5
                        }
                    };
                    hortor.WindowManager.showWindow(e.WindowType.WINDOW_REWARD, n), EventCenter.sendEvent(EventConst.GuildSignReward), 
                    EventCenter.sendEvent(EventConst.GuildChatNodeRefresh);
                });
            }) : void hortor.TipManager.bubble("海盗拼图活动已结束，无法使用请求捐赠功能");
        }, i.prototype.headMaskFunc = function(t) {
            var i = this;
            if (soundModel.buttonOpen(), this._player = e.GuildCache.Members[this.data.uid], 
            !this._player) return void hortor.TipManager.bubble("该玩家已离开了海盗团");
            if (this.data.uid == playerModel.uid) return void hortor.TipManager.bubble("这是你自己啊");
            var n = t.target.localToGlobal(0, 0);
            HttpService.get(e.ServerMsg.MORE_PLAYER, "uid=" + playerModel.uid + "&fid=" + this.data.uid + "&checksum=" + e.GuildCache.Members[this.data.uid].chatSign + "&algorithm=chatSign&showDetails=true", function(t) {
                if (t.chatSign = e.GuildCache.Members[i.data.uid].chatSign, e.GuildCache.Members[playerModel.uid + ""].authority > i.data.authority && e.GuildCache.Members[playerModel.uid + ""].authority >= 7) {
                    var o = _.extend(i.data, t);
                    hortor.WindowManager.showWindow(e.WindowType.WINDOW_GUILD_OPERATION, {
                        pos: n,
                        personData: o
                    });
                } else hortor.WindowManager.showWindow(e.WindowType.WINDOW_PLAYERINFO, {
                    playerInfo: t,
                    from: Const.GuildsChat
                });
            });
        }, i;
    }(e.ViewBase);
    e.GuildChatNode = t, __reflect(t.prototype, "game.GuildChatNode");
}(game || (game = {})), window.game.GuildChatNode = game.GuildChatNode;

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.skinPath = "guild/node/GuildDonateNewsNodeSkin", e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.sendBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.sendBtnFunc, this), 
            this.timer || (this.timer = new egret.Timer(1e3), this.timer.addEventListener(egret.TimerEvent.TIMER, this.timerFunc, this), 
            this.timer.start());
        }, i.prototype.onData = function() {
            var t = this, i = this.data;
            if (this._player = e.GuildCache.Members[i.uid], this._player) {
                util.setRemoteAvatar(this.headImg, this._player.headImg, 64), this.userName.text = "" + this._player.name, 
                this.content.text = "海盗拼图" + i.num, this.hasNum.text = "拥有" + jigsawModel.jigsawInfo.bags[i.num - 1], 
                this.sendBtn.enabled = jigsawModel.jigsawInfo.bags[i.num - 1] > 0 && this._player.uid != playerModel.uid, 
                this.timeLabel.text = "剩余请求时间：" + e.ComFunc.formatTime(i.remainTime - e.GuildCache.GuildTimer, !0), 
                this.dutiesImg.source = "guild_icon_zw" + (this._player.authority || 0), this.dutiesImg.x = this.userName.x + this.userName.width + 10;
                var n = e.GuildCache.Members[this.data.uid] ? e.GuildCache.Members[this.data.uid].gender : 0;
                this.headMask.source = 1 == n ? "friend_json.friend_img_sj6" : "friend_json.friend_img_sj7", 
                this.userName.textColor = this.content.textColor = 1 == n ? Const.genderCorlor1 : Const.genderCorlor2;
            } else HttpService.get(e.ServerMsg.KILLTITAN_GET_PLAYER_SIMLE_INFO, {
                uid: playerModel.uid,
                ids: i.uid
            }, function(n) {
                util.setRemoteAvatar(t.headImg, n.playerSimpleInfos[0].headImg, 64), t._player.name = n.playerSimpleInfos[0].name, 
                t.userName.text = "" + n.playerSimpleInfos[0].name, t.content.text = "海盗拼图" + i.num, 
                t.hasNum.text = "拥有" + jigsawModel.jigsawInfo.bags[i.num - 1], t.sendBtn.enabled = jigsawModel.jigsawInfo.bags[i.num - 1] > 0 && n.playerSimpleInfos[0].uid != playerModel.uid, 
                t.timeLabel.text = "剩余请求时间：" + e.ComFunc.formatTime(i.remainTime - e.GuildCache.GuildTimer, !0), 
                t.dutiesImg.source = "", t.headMask.source = 1 == n.gender ? "friend_json.friend_img_sj6" : "friend_json.friend_img_sj7", 
                t.userName.textColor = t.content.textColor = 1 == n.gender ? Const.genderCorlor1 : Const.genderCorlor2;
            });
        }, i.prototype.sendBtnFunc = function() {
            var t = this, i = this;
            return 0 == jigsawModel.jigsawInfo.openTime && jigsawModel.jigsawInfo.closeTime > 0 ? e.GuildData.donateRemain > 0 ? void hortor.TipManager.alert("你之前离开过海盗团\n重新加入后需要等待24小时才可以进行赠送\n剩余时间：" + e.ComFunc.formatTime(e.GuildData.donateRemain, !0)) : playerModel.dailyEventInfo.donateJigsawCount >= Const.donateJigsawCount ? void hortor.TipManager.alert("每天最多赠送5次拼图碎片，请明天再送吧") : void hortor.TipManager.alert("确定要将海盗拼图" + this.data.num + '赠送给"' + i._player.name + '"吗？', function() {
                HttpService.post(e.ServerMsg.GUILD_RESPONSE_DONATE, {
                    uid: playerModel.uid,
                    fid: t.data.uid,
                    slot: t.data.position
                }, function(t) {
                    jigsawModel.jigsawInfo.bags[i.data.num - 1] -= 1, playerModel.dailyEventInfo.donateJigsawCount += 1, 
                    playerModel.guild.coin += 5;
                    var n = {
                        reward: {
                            guildCoin: 5
                        }
                    };
                    hortor.WindowManager.showWindow(e.WindowType.WINDOW_REWARD, n), EventCenter.sendEvent(EventConst.GuildSignReward), 
                    EventCenter.sendEvent(EventConst.refreshJigsawDonate), EventCenter.sendEvent(EventConst.GuildChatNodeRefresh);
                });
            }) : void hortor.TipManager.alert("海盗拼图活动已结束，无法使用请求捐赠功能");
        }, i.prototype.timerFunc = function() {
            if (this.timeLabel.text = "剩余请求时间：" + e.ComFunc.formatTime(this.data.remainTime - e.GuildCache.GuildTimer, !0), 
            this.data.remainTime - e.GuildCache.GuildTimer <= 0) {
                var t = {
                    uid: this.data.uid,
                    slot: this.data.position,
                    createdTime: this.data.createdTime
                };
                EventCenter.sendEvent(EventConst.guildDeleteMessage, t);
            }
        }, i;
    }(e.ItemRenderBase);
    e.GuildDonateNewsNode = t, __reflect(t.prototype, "game.GuildDonateNewsNode");
}(game || (game = {})), window.game.GuildDonateNewsNode = game.GuildDonateNewsNode;

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.skinPath = "guild/node/GuildDonateNodeSkin", e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            var e = new hortor.TouchScaleEffect();
            e.start(this.group), this.bg.addEventListener(egret.TouchEvent.TOUCH_TAP, this.bgFunc, this);
        }, i.prototype.onData = function() {
            var t = this.data;
            this.pieceImg.source = e.ResourcePath.getColorJigsaw(this.itemIndex + 1), this.pieceNum.text = t + "";
        }, i.prototype.bgFunc = function() {
            return soundModel.buttonOpen(), 0 != e.GuildData.slots[0].status && 0 != e.GuildData.slots[1].status ? void hortor.TipManager.bubble("没有更多位置可以使用了") : void EventCenter.sendEvent(EventConst.guildDonateJigsawSelected, this.itemIndex + 1);
        }, i;
    }(e.ItemRenderBase);
    e.GuildDonateNode = t, __reflect(t.prototype, "game.GuildDonateNode");
}(game || (game = {})), window.game.GuildDonateNode = game.GuildDonateNode;

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.skinPath = "guild/node/GuildDonateNode2Skin", e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            var e = this.data;
            this.sendBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.sendBtnFunc, this), 
            this.cancelBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.cancelBtnFunc, this), 
            this.getBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.getBtnFunc, this), 
            4 == e.status ? (this.timer = new egret.Timer(1e3), this.timer.addEventListener(egret.TimerEvent.TIMER, this.timerFunc, this), 
            this.timer.start()) : 3 == e.status || (2 == e.status ? (this.timer = new egret.Timer(1e3), 
            this.timer.addEventListener(egret.TimerEvent.TIMER, this.timerFunc, this), this.timer.start()) : 1 == e.status && (this.timer = new egret.Timer(1e3), 
            this.timer.addEventListener(egret.TimerEvent.TIMER, this.timerFunc, this), this.timer.start()));
        }, i.prototype.onData = function() {
            var t = this, i = this.data;
            if (this.sendBtn.visible = !1, this.cancelBtn.visible = !1, this.getBtn.visible = !1, 
            this.maskGroup.visible = !1, i.selectedNum = i.selectedNum || 0, this.pieceImg.source = 0 == i.num ? 0 == i.selectedNum ? "" : e.ResourcePath.getColorJigsaw(i.selectedNum) : e.ResourcePath.getColorJigsaw(i.num), 
            4 == i.status) this.getBtn.visible = !1, this.getBtn.enabled = !1, this.maskGroup.visible = !0, 
            this.timeLabel.text = e.ComFunc.formatTime(i.remainTime, !0); else if (3 == i.status) if (this.getBtn.visible = !0, 
            e.GuildCache.Members[i.donator]) {
                var n = e.GuildCache.Members[i.donator];
                this.noticeLabel.text = '"' + (n.name.length > 10 ? n.name.substr(0, 10) + "..." : n.name) + '"\n赠送你一块碎片' + i.num;
            } else HttpService.get(e.ServerMsg.KILLTITAN_GET_PLAYER_SIMLE_INFO, {
                uid: playerModel.uid,
                ids: i.donator
            }, function(e) {
                for (var n, o = 0; o < e.playerSimpleInfos.length; o++) if (e.playerSimpleInfos[o].uid == i.donator) {
                    n = e.playerSimpleInfos[o];
                    break;
                }
                t.noticeLabel.text = '"' + (n.name.length > 10 ? n.name.substr(0, 10) + "..." : n.name) + '"\n赠送你一块碎片' + i.num;
            }); else 2 == i.status ? (this.cancelBtn.visible = !0, this.noticeLabel.text = "捐赠请求剩余时间" + e.ComFunc.formatTime(i.remainTime, !0)) : 1 == i.status ? (this.sendBtn.enabled = !1, 
            this.sendBtn.visible = !0, this.pieceImg.source = "guild_donate_icon3", this.noticeLabel.text = "冷却中\n" + e.ComFunc.formatTime(i.remainTime, !0)) : ("guild_donate_icon1" != this.pieceImg.source && egret.Tween.get(this.pieceImg).to({
                scaleX: 1.1,
                scaleY: 1.1
            }, 200).to({
                scaleX: 1,
                scaleY: 1
            }, 200).call(function() {
                egret.Tween.removeTweens(t.pieceImg);
            }), this.sendBtn.enabled = 0 != i.selectedNum, this.noticeLabel.text = this.sendBtn.enabled ? "点击请求\n发送请求信息" : "请从左边\n选择一个碎片", 
            this.sendBtn.visible = !0);
        }, i.prototype.sendBtnFunc = function() {
            var t = this;
            this.sendBtn.touchEnabled = !1, HttpService.post(e.ServerMsg.GUILD_REQUEST_DONATE, {
                uid: playerModel.uid,
                type: "jigsaw",
                slot: this.itemIndex + 1,
                num: this.data.selectedNum
            }, function(i) {
                e.GuildUtils.initSlotsRedPoint(i.slots), hortor.TipManager.bubble("请求捐赠成功"), t.sendBtn.touchEnabled = !0, 
                e.GuildData.slots = i.slots, EventCenter.sendEvent(EventConst.guildDonateJigsawSelected, 0), 
                EventCenter.sendEvent(EventConst.guildDonateJigsawClose);
            });
        }, i.prototype.cancelBtnFunc = function() {
            var t = this;
            hortor.TipManager.alert("取消后需要等待2个小时重新发送请求\n是否继续取消？", function() {
                HttpService.post(e.ServerMsg.GUILD_CANCEL_DONATE, {
                    uid: playerModel.uid,
                    slot: t.itemIndex + 1
                }, function(t) {
                    e.GuildUtils.initSlotsRedPoint(t.slots), e.GuildData.slots = t.slots, hortor.TipManager.bubble("已取消捐赠请求"), 
                    EventCenter.sendEvent(EventConst.guildDonateJigsawSelected, 0);
                });
            });
        }, i.prototype.getBtnFunc = function() {
            var t = this;
            HttpService.post(e.ServerMsg.GUILD_RECEIVE_DONATE, {
                uid: playerModel.uid,
                slot: this.itemIndex + 1
            }, function(i) {
                e.GuildUtils.initSlotsRedPoint(i.slots), e.GuildData.slots = i.slots, hortor.TipManager.bubble("领取海盗拼图碎片成功"), 
                jigsawModel.jigsawInfo.bags[t.data.num - 1] += 1, EventCenter.sendEvent(EventConst.guildDonateJigsawSelected, 0), 
                EventCenter.sendEvent(EventConst.guildDonateJigsawClose), EventCenter.sendEvent(EventConst.guildDonateRefreshCounts), 
                EventCenter.sendEvent(EventConst.GuildChatNodeRefresh);
            });
        }, i.prototype.timerFunc = function() {
            4 == this.data.status ? this.timeLabel.text = e.ComFunc.formatTime(this.data.remainTime, !0) : 3 == this.data.status || (2 == this.data.status ? (this.noticeLabel.text = "捐赠请求剩余时间" + e.ComFunc.formatTime(this.data.remainTime, !0), 
            this.data.remainTime < 0) : 1 == this.data.status && (this.noticeLabel.text = "冷却中\n" + e.ComFunc.formatTime(this.data.remainTime, !0), 
            this.data.remainTime < 0)), 0 == this.data.remainTime && EventCenter.sendEvent(EventConst.guildDonateJigsawSelected);
        }, i;
    }(e.ItemRenderBase);
    e.GuildDonateNode2 = t, __reflect(t.prototype, "game.GuildDonateNode2");
}(game || (game = {})), window.game.GuildDonateNode2 = game.GuildDonateNode2;

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.skinPath = "guild/node/GuildFeedbackItemSkin", e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            EventCenter.addEventListener(EventConst.refreshFeedbackNode, this.refreshFeedbackNode, this);
        }, i.prototype.onData = function() {
            this.bg.source = "guild_gift_card1", this.icon.source = "", this.numL.text = "", 
            this.group.visible = !1, this.userName.visible = !1, this.initPlayerData();
        }, i.prototype.initPlayerData = function() {
            if (this.data.uid) {
                this.bg.source = "guild_gift_card2";
                var t = e.ItemManager.getItemInfo(this.data.type);
                this.icon.source = t.icon, this.numL.text = e.ComFunc.formatNumber(this.data.value), 
                this.userName.text = "" + this.data.name, this.group.visible = !0, this.userName.visible = !0;
            }
        }, i.prototype.bgFunc = function() {
            var t = this;
            if (!(this.data.uid > 0)) return soundModel.buttonOpen(), e.GuildCache.feedbackRewardData.hasGot ? void hortor.TipManager.bubble("不要太贪心哦!") : void HttpService.post(e.ServerMsg.GUILD_GOT_FEEDBACK_REWARD, {
                uid: playerModel.uid,
                orderId: e.GuildCache.feedbackRewardData.orderId,
                idx: this.itemIndex + 1
            }, function(i) {
                playerModel.update(i), EventCenter.sendEvent(EventConst.GuildSignReward), hortor.WindowManager.showWindow(e.WindowType.WINDOW_REWARD, i.reward), 
                egret.Tween.get(t.mainGroup).to({
                    scaleX: 0
                }, 200, egret.Ease.sineIn).call(function() {
                    if (t) {
                        t.bg.source = "guild_gift_card2";
                        var n = _.keys(i.reward), o = _.values(i.reward), a = e.ItemManager.getItemInfo(n[0]);
                        t.icon.source = a.icon, t.numL.text = e.ComFunc.formatNumber(o[0]), t.userName.text = "" + playerModel.name, 
                        t.group.visible = !0, t.userName.visible = !0, t.data.type = n[0], t.data.value = o[0], 
                        t.data.uid = playerModel.uid, t.data.name = playerModel.name, e.GuildCache.feedbackRewardData.hasGot = !0, 
                        hortor.NotificationManager.dispatch(e.NotificationType.GUILD_FEEDBACK_REFFRESH);
                        for (var r = !1, s = 0; s < e.GuildDailyWelfareData.feedbacks.length; s++) if (!e.GuildDailyWelfareData.feedbacks[s].hasGot && e.GuildDailyWelfareData.feedbacks[s].expire > 0) {
                            r = !0;
                            break;
                        }
                        e.GuildCache.GuildFeedbackRedPoint = r, e.GuildCache.GuildWelfareRedPoint = e.GuildUtils.getWelfareRedPoint(), 
                        EventCenter.sendEvent(EventConst.refreshGuildRedPoint), gateModel.updateGate(e.ScreenType.GUILD_SCREEN);
                    }
                }).to({
                    scaleX: 1
                }, 200, egret.Ease.sineOut);
            });
        }, i.prototype.refreshFeedbackNode = function(t) {
            var i = this;
            t.data.orderId == e.GuildCache.feedbackRewardData.orderId && t.data.idx == this.itemIndex && egret.Tween.get(this.mainGroup).to({
                scaleX: 0
            }, 200, egret.Ease.sineIn).call(function() {
                if (i) {
                    i.bg.source = "guild_gift_card2";
                    var n = e.GuildCache.feedbackRewardData.honorees[t.data.idx].type, o = e.GuildCache.feedbackRewardData.honorees[t.data.idx].value, a = e.ItemManager.getItemInfo(n);
                    i.icon.source = a.icon, i.numL.text = e.ComFunc.formatNumber(o), i.userName.text = "" + e.GuildCache.feedbackRewardData.honorees[t.data.idx].name, 
                    i.group.visible = !0, i.userName.visible = !0;
                }
            }).to({
                scaleX: 1
            }, 200, egret.Ease.sineOut);
        }, i;
    }(e.ItemRenderBase);
    e.GuildFeedbackItem = t, __reflect(t.prototype, "game.GuildFeedbackItem");
}(game || (game = {})), window.game.GuildFeedbackItem = game.GuildFeedbackItem;

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.skinPath = "guild/node/GuildFeedbackNodeSkin", e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.data.expire > 0 && !this.data.hasGot && (this.timer = new egret.Timer(1e3), 
            this.timer.addEventListener(egret.TimerEvent.TIMER, this.timerFunc, this), this.timer.start());
        }, i.prototype.onData = function() {
            this.typeGroup.removeChildren();
            for (var t = 0; t < this.data.icon; t++) {
                var i = new eui.Image();
                i.source = "guild_gift_icon", this.typeGroup.addChild(i);
            }
            this.data.hasGot ? (this.timeLabel.text = "已领取", this.timeLabel.textColor = 3342188, 
            this.maskImg.visible = !0) : this.data.expire > 0 ? (this.timeLabel.text = e.ComFunc.formatTimeHMSNew(this.data.expire - e.GuildCache.feedbackTime), 
            this.timeLabel.textColor = 16777215, this.maskImg.visible = !1) : (this.timeLabel.text = "已过期", 
            this.timeLabel.textColor = 16777215, this.maskImg.visible = !0);
        }, i.prototype.timerFunc = function() {
            this && (this.data.hasGot || this.data.expire < 1 || (this.timeLabel.text = e.ComFunc.formatTimeHMSNew(this.data.expire - e.GuildCache.feedbackTime), 
            this.data.expire - e.GuildCache.feedbackTime <= 0 && (this.timeLabel.text = "已过期", 
            this.maskImg.visible = !0)));
        }, i.prototype.bgFunc = function() {
            soundModel.buttonOpen(), e.GuildCache.feedbackRewardData = this.data, hortor.WindowManager.showWindow(e.WindowType.WINDOW_GUILD_FEEDBACK_SHOW, this.data);
        }, i;
    }(e.ItemRenderBase);
    e.GuildFeedbackNode = t, __reflect(t.prototype, "game.GuildFeedbackNode");
}(game || (game = {})), window.game.GuildFeedbackNode = game.GuildFeedbackNode;

var game;

!function(e) {
    var t = function(e) {
        function t() {
            var t = e.call(this) || this;
            return t.skinPath = "guild/node/GuildIconSkin", t;
        }
        return __extends(t, e), t.prototype.onData = function() {
            this.guildIcon.source = "guild_icon" + this.data;
        }, t;
    }(e.ItemRenderBase);
    e.GuildIconNode = t, __reflect(t.prototype, "game.GuildIconNode");
}(game || (game = {})), window.GuildIconNode = game.GuildIconNode;

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.skinPath = "guild/node/GuildJoinNodeSkin", e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.addClick(this.joinBtn, this.joinBtnFunc, this), this.addClick(this.applyBtn, this.joinBtnFunc, this), 
            this.addClick(this.touchImg, this.touchImgFunc, this);
        }, i.prototype.onData = function() {
            this.initView();
        }, i.prototype.initView = function() {
            var e = this.data;
            this.guildIcon.source = "guild_icon" + e.icon, this.guildName.text = "" + e.name, 
            this.guildId.text = "ID:" + e.gid, this.guildFriend.text = "" + e.notice, this.guildMem.text = e.memeberCount + "/20", 
            (0 == e.mode || 1 == e.mode) && e.needCrown <= playerModel.crowns ? this.joinBtn.enabled = !0 : this.joinBtn.enabled = !1, 
            this.joinBtn.icon = 0 == e.mode ? "common_txt_jr" : 1 == e.mode ? "comBtnTxt_json.common_txt_sq0" : "comBtnTxt_json.common_txt_bkjr", 
            this.joinBtn.visible = 0 == e.mode || 2 == e.mode, this.applyBtn.visible = 1 == e.mode;
        }, i.prototype.joinBtnFunc = function() {
            var t = this.data;
            this.joinBtn.enabled = !1, this.applyBtn.enabled = !1, HttpService.post(e.ServerMsg.GUILD_JOIN, "uid=" + playerModel.uid + "&gid=" + t.gid, function(t) {
                t.isAutoJoin ? (playerModel.guild.gid = t.guild.gid, new e.GuildShowLogic()) : hortor.TipManager.bubble("申请已发出");
            });
        }, i.prototype.touchImgFunc = function() {
            var t = this.data;
            HttpService.get(e.ServerMsg.GUILD_SHOW, "uid=" + playerModel.uid + "&gid=" + t.gid, function(t) {
                soundModel.buttonOpen(), hortor.WindowManager.showWindow(e.WindowType.WINDOW_GUILD_MEMBERLIST, {
                    type: e.GuildProxy.FromMember,
                    guildData: t
                });
            });
        }, i;
    }(e.ItemRenderBase);
    e.GuildJoinNode = t, __reflect(t.prototype, "game.GuildJoinNode");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.skinPath = "guild/node/GuildManagerNodeSkin", e;
        }
        return __extends(i, t), i.prototype.onData = function() {
            this.initView();
        }, i.prototype.initView = function() {
            var t = this.data;
            this.avatarSimple.data = {
                gender: t.gender,
                headImg: t.headImg,
                crowns: t.crowns,
                showStar: !0
            }, this.memName.text = util.strSub(t.name, 9), this.memDuty.source = "guild_icon_zw" + t.authority, 
            this.timeL.text = "上次活跃:" + e.ComFunc.showTimeBeforeNew(t.updatedTime || moment().unix()), 
            this.activityL.text = "本周活跃度:" + t.exp, this.postionGroup.x = this.memName.x + this.memName.width + 10, 
            this.data.province > 0 && Province[this.data.province] ? (this.postionGroup.visible = !0, 
            this.postionLabel.text = e.ComFunc.getUserLocation(this.data.province, this.data.city)) : this.postionGroup.visible = !1;
        }, i;
    }(e.ItemRenderBase);
    e.GuildManagerNode = t, __reflect(t.prototype, "game.GuildManagerNode");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(e) {
        function t() {
            var t = e.call(this) || this;
            return t.skinPath = "guild/node/GuildMemNodeSkin", t;
        }
        return __extends(t, e), t.prototype.onData = function() {
            this.initView();
        }, t.prototype.initView = function() {
            var e = this.data;
            this.avatarSimple.data = {
                gender: e.gender,
                headImg: e.headImg,
                crowns: e.crowns,
                showStar: !0
            }, this.markNum.text = e.rid, this.memName.textColor = e.gender = 16081045, this.memName.text = util.strSub(e.name, 9), 
            this.memDuty.source = "guild_icon_zw" + e.authority, this.friendGroup.visible = e.isFriend;
        }, t;
    }(e.ItemRenderBase);
    e.GuildMemberNode = t, __reflect(t.prototype, "game.GuildMemberNode");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.skinPath = "guild/node/GuildPositionNodeSkin", e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.changeBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.changeBtnFunc, this);
        }, i.prototype.onData = function() {
            this.initView();
        }, i.prototype.initView = function() {
            var t = this.data;
            this.dutyIcon.source = "guild_duty" + t.authority, this.dutyIcon1.source = "guild_dutyIcon" + t.authority;
            var i = 0 == t.authority ? "团员" : t.dutyName + "(" + t.nowNum + "/" + t.maxNum + ")";
            this.dutyL.text = i, this.dutyDesc.text = t.desc, this.selfData = _.find(e.GuildData.members, function(e) {
                return e.uid == playerModel.uid;
            }), 15 == this.selfData.authority ? this.showAuthority15View() : 7 == this.selfData.authority ? this.showAuthority7View() : this.showAuthority0View();
        }, i.prototype.changeBtnFunc = function() {
            var e = this, t = this.data;
            15 != this.selfData.authority && this.selfData.authority <= t.authority || (15 == this.selfData.authority && 15 == t.authority ? hortor.TipManager.alert("确定要转让团长吗？", function() {
                e.sendGuildAuthorize();
            }) : this.sendGuildAuthorize());
        }, i.prototype.sendGuildAuthorize = function() {
            var t = this.data, i = this;
            HttpService.post(e.ServerMsg.GUILD_AUTHORIZE, "uid=" + playerModel.uid + "&fid=" + t.memId + "&authority=" + t.authority, function(n) {
                var o = _.find(e.GuildData.members, function(e) {
                    return e.uid == t.memId;
                });
                if (o && (o.authority = t.authority), 15 == i.selfData.authority && 15 == t.authority) {
                    var a = _.find(e.GuildData.members, function(e) {
                        return e.uid == playerModel.uid;
                    });
                    a && (a.authority = 0);
                }
                EventCenter.sendEvent(EventConst.GuildDutyChange), hortor.TipManager.bubble("更改成功"), 
                hortor.WindowManager.hideWindow(e.WindowType.WINDOW_GUILD_POSTION);
            });
        }, i.prototype.showAuthority15View = function() {
            var e = this.data;
            this.changeBtn.visible = !1, this.nowPosImg.visible = !1, this.lockImg.visible = !1, 
            15 == e.authority ? (this.changeBtn.visible = !0, this.changeBtn.icon = "comBtnTxt_json.common_txt_zr") : 7 == e.authority ? 7 == e.memAuthority ? this.nowPosImg.visible = !0 : this.canChangeDuty() : 1 == e.authority ? 1 == e.memAuthority ? this.nowPosImg.visible = !0 : this.canChangeDuty() : 0 == e.authority && (0 == e.memAuthority ? this.nowPosImg.visible = !0 : this.canChangeDuty());
        }, i.prototype.showAuthority7View = function() {
            var e = this.data;
            this.changeBtn.visible = !1, this.nowPosImg.visible = !1, this.lockImg.visible = !1, 
            15 == e.authority ? this.lockImg.visible = !0 : 7 == e.authority ? 7 == e.memAuthority ? this.nowPosImg.visible = !0 : this.lockImg.visible = !0 : 1 == e.authority ? 1 == e.memAuthority ? this.nowPosImg.visible = !0 : e.memAuthority < 1 && this.canChangeDuty() : 0 == e.authority && (0 == e.memAuthority ? this.nowPosImg.visible = !0 : 1 == e.memAuthority && this.canChangeDuty());
        }, i.prototype.showAuthority0View = function() {
            this.data;
            this.changeBtn.visible = !1, this.nowPosImg.visible = !1, this.lockImg.visible = !0;
        }, i.prototype.canChangeDuty = function() {
            var e = this.data;
            this.changeBtn.visible = !0, this.changeBtn.icon = "comBtnTxt_json.common_txt_bg", 
            this.changeBtn.enabled = e.nowNum < e.maxNum || 0 == e.maxNum;
        }, i;
    }(e.ItemRenderBase);
    e.GuildPositionNode = t, __reflect(t.prototype, "game.GuildPositionNode");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.mode1PosY = 5, e.mode0PosY = 22, e.skinPath = "guild/node/GuildSearchNodeSkin", 
            e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.addClick(this.joinBtn, this.joinBtnFunc, this), this.addClick(this.applyBtn, this.joinBtnFunc, this), 
            this.addClick(this.touchImg, this.touchImgFunc, this);
        }, i.prototype.removeFunc = function() {
            this.joinBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.joinBtnFunc, this), 
            this.applyBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.joinBtnFunc, this), 
            this.touchImg.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.touchImgFunc, this);
        }, i.prototype.onData = function() {
            this.initView();
        }, i.prototype.initView = function() {
            var e = this.data;
            this.guildIcon.source = "guild_icon" + e.icon, this.guildName.text = "" + e.name, 
            this.guildId.text = "ID:" + e.gid, this.guildFriend.text = "" + e.notice, this.guildMem.text = e.memeberCount + "/20", 
            (0 == e.mode || 1 == e.mode) && e.needCrown <= playerModel.crowns ? this.joinBtn.enabled = !0 : this.joinBtn.enabled = !1, 
            this.joinBtn.icon = 0 == e.mode ? "common_txt_jr" : 1 == e.mode ? "comBtnTxt_json.common_txt_sq0" : "comBtnTxt_json.common_txt_bkjr", 
            this.joinBtn.visible = 0 == e.mode || 2 == e.mode, this.applyBtn.sLabel.text = "" + e.needCrown, 
            this.applyBtn.visible = 1 == e.mode;
        }, i.prototype.joinBtnFunc = function() {
            var t = this.data;
            return 2 == t.mode ? void hortor.TipManager.bubble("该海盗团不允许任何人加入") : t.needCrown > playerModel.crowns ? void hortor.TipManager.bubble("等级不满足要求") : (this.joinBtn.enabled = !1, 
            this.applyBtn.enabled = !1, void HttpService.post(e.ServerMsg.GUILD_JOIN, "uid=" + playerModel.uid + "&gid=" + t.gid, function(t) {
                t.isAutoJoin ? (playerModel.guild.gid = t.guild.gid, new e.GuildShowLogic()) : hortor.TipManager.bubble("申请已发出");
            }));
        }, i.prototype.touchImgFunc = function() {
            var t = this.data;
            soundModel.playSound(e.SoundType.SOUND_PANEL_OPEN), HttpService.get(e.ServerMsg.GUILD_SHOW, "uid=" + playerModel.uid + "&gid=" + t.gid, function(t) {
                hortor.WindowManager.showWindow(e.WindowType.WINDOW_GUILD_MEMBERLIST, {
                    type: e.GuildProxy.FromMember,
                    guildData: t
                });
            });
        }, i;
    }(e.ItemRenderBase);
    e.GuildSearchNode = t, __reflect(t.prototype, "game.GuildSearchNode");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.skinPath = "guild/node/GuildShopNodeSkin", e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.icon.source = e.ItemManager.getItemInfo("guildCoin").icon, this.group.addEventListener(egret.TouchEvent.TOUCH_TAP, this.mainBgFunc, this);
        }, i.prototype.onData = function() {
            this.initView();
        }, i.prototype.initView = function() {
            var t = this.data, i = e.ItemManager.getItemInfo(t.goodsId);
            this.shopIcon.source = i.icon, this.coinNum.text = t.needCoin + "", this.propName.text = t.name, 
            this.limitLabel.text = t.remainLimit >= 0 ? "今日限购" + t.remainLimit + "次" : "", this.emptyImg.visible = 0 == t.remainLimit;
        }, i.prototype.mainBgFunc = function() {
            var t = this.data;
            return 0 == t.remainLimit ? void hortor.TipManager.bubble("已售罄") : (soundModel.playSound(e.SoundType.SOUND_PANEL_OPEN), 
            void hortor.WindowManager.showWindow(e.WindowType.WINDOW_GUILD_BUY, t));
        }, i;
    }(e.ItemRenderBase);
    e.GuildShopNode = t, __reflect(t.prototype, "game.GuildShopNode");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.skinPath = "guild/node/GuildSystemNodeSkin", e;
        }
        return __extends(i, t), i.prototype.onInit = function() {}, i.prototype.onData = function() {
            var t = this.data;
            util.setRemoteAvatar(this.headImg, t.headImg), this.userName.text = t.name;
            var i = e.GuildCache.Members[this.data.uid] ? e.GuildCache.Members[this.data.uid].gender : 0;
            this.headMask.source = 1 == i ? "friend_json.friend_img_sj6" : "friend_json.friend_img_sj7", 
            this.userName.textColor = this.content.textColor = 1 == this.data.gender ? Const.genderCorlor1 : Const.genderCorlor2;
            var n = {
                type: t.type,
                duty: e.GuildUtils.getGuildDuty(parseInt(t.value)),
                value: t.value
            };
            this.content.text = e.GuildUtils.getGuildNews(n), this.content.textColor = e.GuildUtils.getGuildNewsColor(t.type), 
            this.timeLabel.text = e.ComFunc.showTimeBeforeNew(this.data.createdTime || moment().unix());
        }, i;
    }(e.ItemRenderBase);
    e.GuildSystemNode = t, __reflect(t.prototype, "game.GuildSystemNode");
}(game || (game = {})), window.game.GuildSystemNode = game.GuildSystemNode;

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.skinPath = "guild/node/GuildTaskNodeSkin", e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.goBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.goBtnFunc, this), this.getBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.getBtnFunc, this), 
            EventCenter.addEventListener(EventConst.PlayGuildTaskMC, this.playMovieClip, this), 
            this.icon.source = e.ItemManager.getItemInfo("guildCoin").icon;
        }, i.prototype.onData = function() {
            var e = this.data, t = Const.blueColor;
            switch (e.level) {
              case 1:
                t = Const.blueColor;
                break;

              case 2:
                t = Const.purpleColor;
                break;

              case 3:
                t = Const.orangeColor;
            }
            this.desc.textColor = t, this.desc.text = e.description;
            var i = this.getNowValue();
            i = i > e.value ? e.value : i, e.gotReward && (i = e.value), this.barLabel.text = i + "/" + e.value;
            var n = 231, o = i / e.value;
            o = o > 1 ? 1 : o, this.taskBar.mask = new egret.Rectangle(0, 0, n * o, 28), this.getCoinNum.text = "x" + e.guildCoin, 
            this.goBtn.visible = 1 > o, this.getBtn.visible = o >= 1 && !e.gotReward, this.getBtn.enabled = !e.gotReward, 
            this.hasGot.visible = e.gotReward;
        }, i.prototype.playMovieClip = function() {
            this && (this._mc || (this._mc = hortor.ObjectPool.getObject(e.MoviePlayer, "iconFlash", "iconFlash"), 
            this._mc.x = 50, this._mc.y = 55, this.addChild(this._mc)), this._mc.play(1));
        }, i.prototype.goBtnFunc = function() {
            var e = this.data;
            EventCenter.sendEvent(EventConst.GuildTaskGoTo, {
                gotoType: e["goto"]
            });
        }, i.prototype.getBtnFunc = function() {
            var t = this, i = this.data;
            HttpService.post(e.ServerMsg.GUILD_TASK_REWARD, {
                uid: playerModel.uid,
                tid: i.id
            }, function(n) {
                guildModel.guild.coin = n.coin, t.getBtn.visible = !1, t.hasGot.visible = !0;
                var o = {
                    reward: {
                        guildCoin: i.guildCoin
                    }
                };
                hortor.WindowManager.showWindow(e.WindowType.WINDOW_REWARD, o), i.gotReward = !0;
                var a = _.find(e.GuildData.members, function(e) {
                    return e.uid == playerModel.uid;
                });
                a && (a.exp += i.guildExp), EventCenter.sendEvent(EventConst.GuildHallRefresh), 
                EventCenter.sendEvent(EventConst.GuildGetTaskReward, {
                    taskId: i.id
                }), e.GuildCache.TaskHasOver.push(i.id), e.GuildCache.GuildTaskRedPoint = guildModel.checkGuildTaskRedPoint(), 
                EventCenter.sendEvent(EventConst.refreshGuildRedPoint), gateModel.updateGate(e.ScreenType.GUILD_SCREEN);
            });
        }, i.prototype.getNowValue = function() {
            var e = this.data, t = playerModel.dailyEventInfo || {
                sendMailCount: 0,
                donateJigsawCount: 0,
                buyMiniShieldRemain: 0,
                buyKillTitanBallRemain: 0,
                buyPufferRemain: 0,
                buyLollyRemain: 0,
                rollCount: 0,
                loginRewardCount: 0,
                gainDonateCount: 0,
                collectMoneyBoxCount: 0,
                guildChatCount: 0,
                attackCount: 0,
                usePotionCount: 0,
                guestRichmanCount: 0,
                attackDestroyedCount: 0,
                shareRewardCount: 0
            }, i = t[e.type + "Count"];
            return i;
        }, i;
    }(e.ItemRenderBase);
    e.GuildTaskNode = t, __reflect(t.prototype, "game.GuildTaskNode");
}(game || (game = {})), window.game.GuildTaskNode = game.GuildTaskNode;

var game;

!function(e) {
    var t = function() {
        function e() {
            this.enemyRankData = [];
        }
        return e.prototype.setEnemyRankData = function(e) {
            this.enemyRankData = e;
        }, e.prototype.getEnemyRankData = function() {
            return this.enemyRankData;
        }, e.prototype.getHateData = function() {
            for (var e = [], t = 0; t < this.enemyRankData.length; t++) {
                var i = {
                    uid: this.enemyRankData[t].uid,
                    crowns: this.enemyRankData[t].crowns,
                    name: this.enemyRankData[t].name,
                    headImg: this.enemyRankData[t].headImg,
                    attackCount: this.enemyRankData[t].attackCount,
                    stealMoney: this.enemyRankData[t].stealMoney,
                    signature: this.enemyRankData[t].signature,
                    isWanted: this.enemyRankData[t].isWanted,
                    inviteCode: "",
                    chatSign: this.enemyRankData[t].chatSign,
                    isVip: this.enemyRankData[t].isVip,
                    gender: this.enemyRankData[t].gender
                };
                e.push(i);
            }
            return e;
        }, e;
    }();
    e.HateDataMgr = t, __reflect(t.prototype, "game.HateDataMgr");
}(game || (game = {}));

var hateDataMgr = new game.HateDataMgr(), game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.setNotchFit(this.hateDesc), this.setNotchFit(this.closeBtn), this.setNotchFit(this.helpBtn), 
            this.height = e.GameConfig.stageHeight, this.effect = new hortor.SlideEffect(2), 
            this.scroll.viewport = this.list, egret.Tween.get(this.bg1, {
                loop: !0
            }).to({
                rotation: 360
            }, 6e4), this.scroll.scrollPolicyH = eui.ScrollPolicy.OFF, this.scroll.scrollPolicyV = eui.ScrollPolicy.ON, 
            this.hateData = new eui.ArrayCollection(), this.list.dataProvider = this.hateData, 
            this.list.itemRenderer = e.HateNode, this.closeBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.closeBtnFunc, this), 
            this.buyBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.buyBtnFunc, this), 
            this.helpBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.helpBtnFunc, this), 
            this.list.addEventListener(eui.ItemTapEvent.ITEM_TAP, this.listItemFunc, this), 
            EventCenter.addEventListener(EventConst.RefreshHateNode, this.RefreshHateNodeFunc, this);
        }, i.prototype.onData = function() {
            e.ComFunc.isShowPayNode(this.buyBtn), this.showWantedCount(), this._initHateView();
        }, i.prototype.showWantedCount = function() {
            this.wantedCount.text = "x" + playerModel.wantedCount;
        }, i.prototype._initHateView = function() {
            var t = this;
            this.emptyTip.visible = !1, this.tick.source = e.ResourcePath.getItemIconByName("popIcon_wanted"), 
            HttpService.get(e.ServerMsg.ENEMY_RANK, "uid=" + playerModel.uid, function(e) {
                util.jzlog("仇人榜data：" + JSON.stringify(e)), util.jzlog("wantedModel === ", hateDataMgr), 
                hateDataMgr.setEnemyRankData(e.Enemies), t.hateData.source = hateDataMgr.getHateData(), 
                e.Enemies && 0 == e.Enemies.length && (t.emptyTip.visible = !0, t.emptyTip.bg.source = "common_img_kong2_png");
            });
        }, i.prototype.buyBtnFunc = function() {
            soundModel.playSound(e.SoundType.SOUND_PANEL_OPEN), hortor.WindowManager.currentWindow = e.WindowType.WINDOW_WANTED;
        }, i.prototype.helpBtnFunc = function() {
            soundModel.playSound(e.SoundType.SOUND_PANEL_OPEN);
            var t = HelpTextLabel.getHateRankTextLabel();
            e.ComFunc.openHelpPanel(t);
        }, i.prototype.closeBtnFunc = function(t) {
            soundModel.playSound(e.SoundType.SOUND_PANEL_OPEN), this.hide();
        }, i.prototype.RefreshHateNodeFunc = function() {
            this.showWantedCount();
            var t = this;
            HttpService.get(e.ServerMsg.ENEMY_RANK, "uid=" + playerModel.uid, function(e) {
                util.jzlog("仇人榜data：" + JSON.stringify(e)), hateDataMgr.setEnemyRankData(e.Enemies), 
                e.Enemies && 0 == e.Enemies.length && (t.emptyTip.visible = !0), util.jzlog("hateData == ", t.hateData), 
                t.hateData.replaceAll(hateDataMgr.getHateData()), util.jzlog(">>>>刷新数据"), t.list.dataProviderRefreshed();
            });
        }, i.prototype.listItemFunc = function(t) {
            soundModel.playSound(e.SoundType.SOUND_PANEL_OPEN);
            var i = t.item;
            i.uid != playerModel.uid && HttpService.get(e.ServerMsg.MORE_PLAYER, "uid=" + playerModel.uid + "&fid=" + i.uid + "&checksum=" + i.chatSign + "&algorithm=chatSign&showDetails=true", function(t) {
                t.chatSign = i.chatSign, hortor.WindowManager.showWindow(e.WindowType.WINDOW_PLAYERINFO, {
                    playerInfo: t,
                    from: Const.HateToIsland
                });
            });
        }, i.prototype.fitSpecialMobile = function() {}, i;
    }(e.WindowBase);
    e.HateListWindow = t, __reflect(t.prototype, "game.HateListWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.skinPath = "haterlist/HateNodeSkin", e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.once(egret.Event.REMOVED_FROM_STAGE, this.removeFunc, this), this.once(egret.Event.ADDED_TO_STAGE, this.addFunc, this), 
            this.hateBtn.addEventListener(egret.TouchEvent.TOUCH_BEGIN, this.touchBegin, this), 
            this.hateBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.hateBtnFunc, this), 
            this.group.visible = !1;
            var e = Math.ceil((hortor.StageManager.stageHeight - 231 - 62) / 110);
            this.itemIndex < e ? this.group.visible = !0 : (this.group.visible = !0, this.group.x = 0);
        }, i.prototype.onData = function() {
            console.log("ljz/todo:设置头像vip"), this.data.isVip, this.data.gender >= 0 ? this.avatar.bgImage.source = 1 == this.data.gender ? "common_json.common_img_portrait1" : "common_json.common_img_portrait0" : this.avatar.bgImage.visible = !1, 
            this.data.isWanted ? (this.hateBtn.enabled = !1, this.desc.text = "此人正在被通缉！") : (this.hateBtn.enabled = !0, 
            this.desc.text = "还在逍遥法外！"), this.avatar.data = this.data, this.fightNum.text = this.data.attackCount;
        }, i.prototype.addFunc = function() {
            this.hateBtn.addEventListener(egret.TouchEvent.TOUCH_BEGIN, this.touchBegin, this), 
            this.hateBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.hateBtnFunc, this);
        }, i.prototype.removeFunc = function() {
            this.hateBtn.removeEventListener(egret.TouchEvent.TOUCH_BEGIN, this.touchBegin, this), 
            this.hateBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.hateBtnFunc, this), 
            egret.Tween.removeTweens(this.group);
        }, i.prototype.touchBegin = function(e) {
            e.stopPropagation();
        }, i.prototype.hateBtnFunc = function(t) {
            var i = this;
            playerModel.wantedCount > 0 ? hortor.TipManager.alert("通缉" + this.data.name + "，\n召唤你的好友一起攻击Ta！", function() {
                HttpService.post(e.ServerMsg.WANTED, "uid=" + playerModel.uid + "&eid=" + i.data.uid, function(e) {
                    e && (playerModel.wantedCount -= 1, EventCenter.sendEvent(EventConst.RefreshHateNode), 
                    hortor.TipManager.alert("你通缉了" + i.data.name + "\n使用后48小时内有效\n召唤你的好友攻击Ta吧！", null, null, i));
                });
            }, null, this) : gateModel.iosPay ? hortor.WindowManager.currentWindow = e.WindowType.WINDOW_WANTED : hortor.TipManager.alert("通缉令不足", null, null, this);
        }, i;
    }(e.ItemRenderBase);
    e.HateNode = t, __reflect(t.prototype, "game.HateNode");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(e) {
        function t() {
            var t = e.call(this) || this;
            return t.once(egret.Event.REMOVED_FROM_STAGE, t.removeFunc, t), t.skinPath = "inviteReward/InvitationRewardNodeSkin", 
            t;
        }
        return __extends(t, e), t.prototype.onInit = function() {
            this.wnsp.source = "popIcon_allInOne", this.tjl.source = "popIcon_wanted", this.energy.source = "popIcon_energy", 
            this.dataChanged1();
        }, t.prototype.onData = function() {
            this.dataChanged1();
        }, t.prototype.removeFunc = function() {}, t.prototype.dataChanged1 = function() {
            util.jzlog(">>>>>>>InvitationNode.dataChanged, this.data = ", this.data), 6 == this.data.id ? (util.jzlog(">>>>>>>1111"), 
            this.maskImg.width = this.gotedMaskImg.width = this.getMaskImg.width = 330, this.allInOneGroup.visible = !0, 
            this.wantedGroup.visible = !0, this.energyGroup.visible = !0) : (this.maskImg.width = this.gotedMaskImg.width = this.getMaskImg.width = 106, 
            this.allInOneGroup.visible = !0, this.wantedGroup.visible = !1, this.energyGroup.visible = !1, 
            util.jzlog(">>>>>2222"));
            var e = Math.floor(playerModel.inviteFriendRewardCount / 7), t = playerModel.inviteFriendRewardCount % 7;
            util.jzlog("_data.inviteFriendCount = ", playerModel.inviteFriendCount);
            var i = playerModel.inviteFriendCount - 7 * e, n = this.data.id + 1;
            util.jzlog("this.data.id = ", this.data.id), t >= n ? (this.descLabel.size = 20, 
            this.descLabel.text = "已领取", this.descLabel.textColor = 9211020, this.descLabel.strokeColor = 16777215, 
            this.gotedMaskImg.visible = !0, this.getMaskImg.visible = !1, this.descLabel.visible = !0) : (this.descLabel.size = 22, 
            this.descLabel.text = "可领取", this.descLabel.textColor = 1936128, this.descLabel.strokeColor = 16777215, 
            this.gotedMaskImg.visible = !1, this.getMaskImg.visible = i >= n, this.descLabel.visible = i >= n);
        }, t;
    }(e.ItemRenderBase);
    e.InvitationNode = t, __reflect(t.prototype, "game.InvitationNode");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.inviteBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.inviteBtnFunc, this), 
            this.getBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.getBtnFunc, this);
        }, i.prototype.prepare = function(t, i) {
            HttpService.post(e.ServerMsg.SHOW_INVITE_JBBX, "uid=" + playerModel.uid, function(e) {
                playerModel.update(e), t(e);
            }, i);
        }, i.prototype.onData = function() {
            var e = (this.data.remainSecond, playerModel.inviteMoneyCount > 0 && 1 == playerModel.showBoxType);
            this.inviteGroup.visible = !e, this.getBtnGroup.visible = e, null != this.timer && (this.timer.stop(), 
            this.timer = null), this.timer = new egret.Timer(1e3), this.timer.addEventListener(egret.TimerEvent.TIMER, this.timerFunc, this), 
            this.timer.start();
        }, i.prototype.timerFunc = function() {
            this && (this.data.remainSecond > 0 ? (this.timeLabel.text = "倒计时" + e.ComFunc.formatTimeHMSNew(this.data.remainSecond), 
            this.data.remainSecond -= 1) : (this.timeLabel.text = "已过期", null != this.timer && (this.timer.stop(), 
            this.timer = null)));
        }, i.prototype.inviteBtnFunc = function() {
            e.PlatformManager.share(e.ShareType.InviteJBBXShare);
        }, i.prototype.getBtnFunc = function() {
            var t = this;
            HttpService.post(e.ServerMsg.REWARD_INVITE_MONEY, "uid=" + playerModel.uid, function(i) {
                t.getBtnGroup.visible = !1, playerModel.update(i), util.jzlog("data = ", i, ";data.showBoxType ====", i.showBoxType), 
                playerModel.inviteFirendToday = i.inviteFirendToday, gateModel.updateGate(e.WindowType.WINDOW_INVITE_JBBX), 
                gateModel.updateGate(e.WindowType.WINDOW_INVITE_VIP), hortor.WindowManager.showWindow(e.WindowType.WINDOW_REWARD, i), 
                hortor.WindowManager.getWindow(e.WindowType.GROUP_INVITEREWARD).hide(), e.OpenFuncManager.checkAll();
            });
        }, i;
    }(e.TabWindowBase);
    e.InviteJBBWindow = t, __reflect(t.prototype, "game.InviteJBBWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.baseScroll.viewport = this.baseList, this.baseData = new eui.ArrayCollection(), 
            this.baseList.dataProvider = this.baseData, this.baseList.itemRenderer = e.ShareFriendNode, 
            this.shareImg.addEventListener(egret.TouchEvent.TOUCH_TAP, this.shareBtnFunc, this);
        }, i.prototype.prepare = function(t, i) {
            var n = this;
            HttpService.get(e.ServerMsg.SHOW_FRIEND_REWARD, "uid=" + playerModel.uid, function(e) {
                util.jzlog(">>>服务器返回的数据是:", e), n.data = FriendRewards = e, t(e);
            }, i);
        }, i.prototype.onData = function() {
            this.showAll(), gateModel.isWxgame && (this.shareRewardGroup.visible = !1);
        }, i.prototype.showAll = function() {
            var e = [];
            FriendRewards.friendRewards = _.sortBy(FriendRewards.friendRewards, "crowns").reverse(), 
            util.jzlog("FriendRewards.friendRewards.length = ", FriendRewards.friendRewards.length);
            var t = FriendRewards.friendRewards.length > 7 ? FriendRewards.friendRewards.length : 7;
            util.jzlog(">>");
            for (var i = 0; t > i; i++) e.push({
                id: i
            });
            util.jzlog("_arr.length = ", e.length), util.jzlog("_arr = ", e), this.baseData.source = e, 
            this.initRewardsList();
        }, i.prototype.initRewardsList = function() {
            for (var t = FriendRewards.friendRewards, i = [ {
                uid: 0,
                level: 0
            }, {
                uid: 0,
                level: 0
            }, {
                uid: 0,
                level: 0
            }, {
                uid: 0,
                level: 0
            } ], n = 0; 4 > n; n++) for (var o = 0; o < t.length; o++) if (!t[o].gotLevel[n] && t[o].crowns >= FriendRewards.friendRewardsConf[n].target) {
                i[n].uid = t[o].uid, i[n].level = n + 1;
                break;
            }
            util.jzlog("_rewards ===== ", i), util.jzlog("_rewards.length ===== ", i.length), 
            this.rewardData = new eui.ArrayCollection(i), this.rewardList.dataProvider = this.rewardData, 
            this.rewardList.itemRenderer = e.ShareRewardNode, this.friendsRewardCounts = 0;
            for (var a = 0; a < i.length; a++) if (i[a].uid > 0 && FriendRewards.friendRewardsCount[a] < FriendRewards.friendRewardsConf[a].limit) {
                this.friendsRewardCounts++;
                break;
            }
        }, i.prototype.shareBtnFunc = function() {
            soundModel.buttonOpen(), e.PlatformManager.share(e.ShareType.InviteRewardShare);
        }, i;
    }(e.TabWindowBase);
    e.InviteRewardWindow = t, __reflect(t.prototype, "game.InviteRewardWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e.shareTicket = "", e.desc = "", e.isPause = !1, e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.onViewRegister();
        }, i.prototype.onData = function() {
            var t = this;
            util.jzlog("this.data ===", this.data), this.templatePanel.helpBtn.visible = !1, 
            this.data.shareTickets ? this.shareTicket = this.data.shareTickets[0] : this.data.shareTicket && (this.shareTicket = this.data.shareTicket), 
            this.desc = this.data.desc, null == this.shareTicket || (this.topImg.source = "wxqunyou_png");
            var i = this;
            i.isPause = !0;
            var n = egret.setTimeout(function() {
                egret.clearTimeout(n), i.isPause = !1, t.showView();
            }, this, 500), o = wx.getOpenDataContext();
            o.postMessage({
                isDisplay: !1,
                viewType: "rejust",
                width: e.WxSystemInfo.windowWidth * e.WxSystemInfo.pixelRatio,
                height: e.WxSystemInfo.windowHeight * e.WxSystemInfo.pixelRatio
            }), o.postMessage({
                isDisplay: !1,
                viewType: "start"
            }), i.shareTicket ? o.postMessage({
                isDisplay: !0,
                viewType: "oldFriendGroup",
                uid: playerModel.uid,
                shareTicket: i.shareTicket,
                timestamp: initModel.timeStamp || Math.floor(new Date().getTime() / 1e3)
            }) : o.postMessage({
                isDisplay: !0,
                viewType: "oldFriend",
                uid: playerModel.uid,
                shareTicket: i.shareTicket,
                timestamp: initModel.timeStamp || Math.floor(new Date().getTime() / 1e3)
            });
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.onViewRegister = function() {
            this.templatePanel.closeBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onClose, this), 
            this.inviteBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.inviteBtnFunc, this);
        }, i.prototype.showView = function() {
            if (this) {
                var e = this;
                wx.getOpenDataContext();
                null == e.bitmapdata && (e.bitmapdata = new egret.BitmapData(window.sharedCanvas)), 
                e.bitmapdata.$deleteSource = !1;
                var t = new egret.Texture();
                t._setBitmapData(e.bitmapdata), e.bitmap = new egret.Bitmap(t), e.mainGroup.addChild(e.bitmap), 
                util.jzlog("_view.canvasImg.width = " + e.bitmap.width + " _view.canvasImg.height = " + e.bitmap.height + "  egret.sys.DisplayList.$canvasScaleFactor = " + egret.sys.DisplayList.$canvasScaleFactor), 
                egret.startTick(this.tickFunc, this);
            }
        }, i.prototype.tickFunc = function(e) {
            var t = this;
            return t.bitmapdata && (egret.WebGLUtils.deleteWebGLTexture(t.bitmapdata.webGLTexture), 
            t.bitmapdata.webGLTexture = null), !1;
        }, i.prototype.onClose = function() {
            var e = this;
            util.jzlog("删除本界面>>>>>>>>");
            var t = wx.getOpenDataContext();
            t.postMessage({
                isDisplay: !1,
                viewType: "stop"
            }), egret.stopTick(this.tickFunc, this), e.bitmap && (console.log("删除 _view.bitmap ====="), 
            e.bitmap.parent && e.bitmap.parent.removeChild(e.bitmap)), e.hide();
        }, i.prototype.inviteBtnFunc = function() {
            soundModel.buttonOpen(), this.shareTicket || util.jzlog(">>>>微信邀请");
        }, i;
    }(e.WindowBase);
    e.RecallFriendGroupWindow = t, __reflect(t.prototype, "game.RecallFriendGroupWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e.isPause = !1, e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            util.jzlog(">>>onInit"), this.onViewRegister();
        }, i.prototype.onData = function() {
            var t = this;
            this.templatePanel.helpBtn.visible = !1;
            var i = this;
            i.isPause = !0;
            var n = egret.setTimeout(function() {
                egret.clearTimeout(n), i.isPause = !1, t.showView();
            }, this, 500), o = wx.getOpenDataContext();
            o.postMessage({
                isDisplay: !1,
                viewType: "rejust",
                width: e.WxSystemInfo.windowWidth * e.WxSystemInfo.pixelRatio,
                height: e.WxSystemInfo.windowHeight * e.WxSystemInfo.pixelRatio
            }), o.postMessage({
                isDisplay: !1,
                viewType: "start"
            }), o.postMessage({
                isDisplay: !0,
                viewType: "oldFriend",
                uid: playerModel.uid,
                shareTicket: null,
                timestamp: initModel.timeStamp || Math.floor(new Date().getTime() / 1e3)
            }), util.jzlog(">>>>>>on Data 设置数据");
        }, i.prototype.prepare = function(e, t) {
            util.jzlog(">>>>>prepare"), e(null);
        }, i.prototype.onViewRegister = function() {
            this.templatePanel.closeBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onClose, this), 
            this.inviteBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.inviteBtnFunc, this);
        }, i.prototype.showView = function() {
            if (util.jzlog("...>>>in showView", this), this) {
                var e = this;
                wx.getOpenDataContext();
                util.jzlog("5555555555", window.sharedCanvas), e.bitmapdata = new egret.BitmapData(window.sharedCanvas), 
                e.bitmapdata.$deleteSource = !1;
                var t = new egret.Texture();
                t._setBitmapData(e.bitmapdata), e.bitmap = new egret.Bitmap(t), e.mainGroup.addChild(e.bitmap), 
                egret.startTick(this.tickFunc, this);
            }
        }, i.prototype.tickFunc = function(e) {
            var t = this;
            return t.bitmapdata && (egret.WebGLUtils.deleteWebGLTexture(t.bitmapdata.webGLTexture), 
            t.bitmapdata.webGLTexture = null), !1;
        }, i.prototype.inviteBtnFunc = function() {
            soundModel.buttonOpen(), util.jzlog(">>>>微信邀请"), e.PlatformManager.share(e.ShareType.UserRecallShare);
        }, i.prototype.onClose = function() {
            var e = this;
            util.jzlog("删除本界面>>>>>>>>");
            var t = wx.getOpenDataContext();
            t.postMessage({
                isDisplay: !1,
                viewType: "stop"
            }), egret.stopTick(this.tickFunc, this), e.bitmap && (console.log("删除 _view.bitmap ====="), 
            e.bitmap.parent && e.bitmap.parent.removeChild(e.bitmap)), e.hide();
        }, i;
    }(e.WindowBase);
    e.RecallFriendPlayersWindow = t, __reflect(t.prototype, "game.RecallFriendPlayersWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function() {
        function t(e) {
            this.mediator = e;
        }
        return t.prototype.onInit = function() {
            var t = this;
            HttpService.get(e.ServerMsg.SHOW_FRIEND_REWARD, "uid=" + playerModel.uid, function(e) {
                t.data = e;
            });
        }, t.prototype.onViewRegister = function() {
            var e = this.mediator;
            e.recallGroupBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onRecallGroup, this), 
            e.recallFriendBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onRecallFriend, this), 
            e.shareFriendBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onH5RecallGroup, this), 
            e.helpBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onHelp, this);
            for (var t = 0; 3 > t; t++) util.jzlog(">>>>headGroup" + t + "监听事件"), e["headGroup" + t].addEventListener(egret.TouchEvent.TOUCH_TAP, this.onGetReward, this);
        }, t.prototype.onEventCenterRegister = function() {}, t.prototype.onData = function() {
            var t = this, i = this.mediator;
            i.recallGroupBtn.visible = gateModel.isWxgame, i.recallFriendBtn.visible = gateModel.isWxgame, 
            i.shareFriendBtn.visible = !gateModel.isWxgame, util.jzlog(">请求RECALL_INFO"), HttpService.post(e.ServerMsg.RECALL_INFO, "uid=" + playerModel.uid, function(e) {
                util.jzlog(">协议返回了,data = ", e), i && t.updateUI(e);
            });
        }, t.prototype.updateUI = function(t) {
            if (this) {
                var i = this.mediator;
                if (i) {
                    var n, o, a, r = t.recallList;
                    this.rewardList = r;
                    for (var s = 0; s < r.length; s++) {
                        n = r[s], util.jzlog("oneRecall == ", n), 0 != n.uid ? (util.jzlog(" 设置头像ComFunc.headImg(oneRecall.headImg)  = ", e.ComFunc.headImg(n.headImg)), 
                        util.setRemoteAvatar(i["headImg" + s], n.headImg, 64)) : util.jzlog(">>>没有设置头像, uid = 0"), 
                        i["hasGot" + s].visible = n.isTake, o = n.rewardType, a = e.ItemManager.getItemInfo(o), 
                        util.jzlog("oneRecall = ", n), util.jzlog("rewardType = ", o), util.jzlog("rewardProp = ", a), 
                        util.jzlog(">rewardProp.icon == ", a.icon);
                        var l = e.ResourcePath.getItemIconByName(a.icon.substring(0, a.icon.indexOf("_png")));
                        util.jzlog("source == ", l), i["icon" + s].source = l, util.jzlog(i["icon" + s].source), 
                        util.jzlog("9999999"), i["num" + s].text = "X" + n.rewardValue;
                    }
                }
            }
        }, t.prototype.onRecallGroup = function() {
            util.jzlog("分享到分享不同微信群提示"), e.ComFunc.PopConfirmView("分享不同微信群查看不同群里的老船长", "友情提示", function() {
                util.jzlog(">>>>>调用了微信的接口sdk.sdkLogic.recallShareGroup();,分享成功的话,在分享的回调中打开界面即可"), 
                util.jzlog("假装分享群成功了"), wxOpenData.loadImages(function() {
                    hortor.WindowManager.showWindow(e.WindowType.WINDOW_RECALLFRIEND_GROUP);
                });
            }, "查看", Const.HighestLayer);
        }, t.prototype.onRecallFriend = function() {
            util.jzlog(">>>>>>点击召回好友按钮,此处应该显示开放域的好友界面,但是现在没法测试."), wxOpenData.loadImages(function() {
                util.jzlog(">>>>>>显示好友列表,RecallFriendPlayersView界面"), hortor.WindowManager.showWindow(e.WindowType.WINDOW_RECALLFRIEND_PLAYERS);
            });
        }, t.prototype.onH5RecallGroup = function() {
            util.jzlog(">>>>分享到h5");
        }, t.prototype.playAnim = function(e) {
            if (util.jzlog(">>>>>播放动画", e), this) {
                var t = this.mediator.view;
                if (t) {
                    var i = egret.Tween.get(t[e]);
                    i.to({
                        rotation: 3
                    }, 50).to({
                        rotation: 0
                    }, 50).to({
                        rotation: -3
                    }, 50).to({
                        rotation: 0
                    }, 50).to({
                        rotation: 3
                    }, 50).to({
                        rotation: 0
                    }, 50).to({
                        rotation: -3
                    }, 50).to({
                        rotation: 0
                    }, 50).call(function() {
                        egret.Tween.removeTweens(t[e]);
                    });
                }
            }
        }, t.prototype.onGetReward = function(t) {
            var i = this;
            util.jzlog(">>>>onGetReward ", t);
            var n = t.currentTarget.name, o = 0;
            switch (util.jzlog("currentTargetName == ", n), n) {
              case "headGroup0":
                util.jzlog(">>>headGroup0"), o = 0;
                break;

              case "headGroup1":
                o = 1;
                break;

              case "headGroup2":
                o = 2;
                break;

              default:
                util.jzlog("》〉》〉》〉》〉发生异常", n);
            }
            var a = this.mediator.view, r = this.rewardList[o].uid;
            return util.jzlog("index === ", o), util.jzlog("this.rewardList ===", this.rewardList), 
            util.jzlog("fid ===", r), util.jzlog("this.rewardList[index].isTake ===>>>>>>", this.rewardList[o].isTake), 
            0 == r ? (this.playAnim(n), void util.jzlog("快去分享召回老船长吧!")) : void (this.rewardList[o].isTake || HttpService.post(e.ServerMsg.RECALL_REWARD_NEW, "uid=" + playerModel.uid + "&idx=" + o + "&fid=" + r, function(t) {
                if (a) {
                    t.rewards && (util.jzlog("收到的奖励data =======", t), hortor.WindowManager.showWindow(e.WindowType.WINDOW_REWARD, t), 
                    util.jzlog("播放奖励动画."));
                    var n = t.idx, o = t.isTake;
                    o && (a["hasGot" + n].visible = o), i.rewardList[n].isTake = o, i.UpdateRedPoint();
                }
            }));
        }, t.prototype.UpdateRedPoint = function() {
            playerModel.recallRedPoint = !1;
            for (var t = 0; 3 > t; t++) 1 == this.rewardList[t].isTake && (playerModel.recallRedPoint = !0);
            gateModel.updateGate(e.WindowType.WINDOW_INVITEREWARD);
        }, t.prototype.onHelp = function() {
            util.jzlog("弹出召回说明界面");
        }, t;
    }();
    e.RecallLogic = t, __reflect(t.prototype, "game.RecallLogic");
}(game || (game = {}));

var FriendRewards = {
    friendRewardsConf: [ {
        id: 1,
        target: 5,
        rewards: {
            energy: 20,
            money: 1e5
        },
        limit: 30
    } ],
    friendRewards: [ {
        uid: 15515,
        name: "Young",
        headImg: "http://wx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqmCfmUBzA8heC1DHNVRZNnbYjFibyylH9efkMep7icPichicMczibJZL8eRhHOPUZjGeZeNmO2ZshJJ7A/0",
        crowns: 1800,
        hasGot: !0,
        isVip: !0,
        gotLevel: [ !1, !1, !1, !1 ]
    } ],
    friendRewardsCount: [ 0, 0, 0, 0 ],
    recallRewards: [],
    recallRewardCount: 0,
    shareTime: 0,
    shareCount: 0
}, FriendsRewardCounts = 0, game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.onViewRegister();
            var e = new hortor.TouchScaleEffect();
            e.start(this.recallQunGroup);
            var t = new hortor.TouchScaleEffect();
            t.start(this.recallHaoyouGroup);
        }, i.prototype.prepare = function(t, i) {
            var n = this;
            HttpService.post(e.ServerMsg.RECALL_INFO, "uid=" + playerModel.uid, function(e) {
                n && (util.jzlog(">>>>请求召回界面的数据, 数据已经返回: data = ", e), t(e));
            }, i);
        }, i.prototype.onData = function() {
            this.recallQunGroup.visible = gateModel.isWxgame, this.recallHaoyouGroup.visible = gateModel.isWxgame, 
            this.shareFriendBtn.visible = !gateModel.isWxgame, this.updateUI(this.data);
        }, i.prototype.onViewRegister = function() {
            this.recallQunGroup.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onRecallGroup, this), 
            this.recallHaoyouGroup.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onRecallFriend, this), 
            this.shareFriendBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onH5RecallGroup, this), 
            this.helpBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onHelp, this), this.headGroup0.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onHeadGroup, this), 
            this.headGroup1.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onHeadGroup, this), 
            this.headGroup2.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onHeadGroup, this);
            for (var e = 0; 3 > e; e++) this["headGroup" + e].addEventListener(egret.TouchEvent.TOUCH_TAP, this.onGetReward, this);
        }, i.prototype.updateUI = function(t) {
            if (this) {
                var i, n, o, a = t.recallList;
                this.rewardList = a;
                for (var r = 0; 3 > r; r++) this["headImg" + r].source = "yqjl_img_zh4";
                util.jzlog("recallList ===========", a);
                for (var r = 0; r < a.length; r++) {
                    i = a[r], util.jzlog("oneRecall == ", i), 0 != i.uid ? (util.jzlog("oneRecall.headImg == ", i.headImg), 
                    util.setRemoteAvatar(this["headImg" + r], i.headImg)) : util.jzlog(">>>没有设置头像, uid = 0"), 
                    this["hasGot" + r].visible = i.isTake, n = i.rewardType, o = e.ItemManager.getItemInfo(n), 
                    util.jzlog(">rewardProp.icon == ", o.icon), this["icon" + r].source = o.icon, this["num" + r].text = "X" + i.rewardValue;
                    var s = i.isTake;
                    s && (this["hasGot" + r].visible = s, this["icon" + r].visible = !s, this["num" + r].visible = !s);
                }
            }
        }, i.prototype.onRecallGroup = function() {
            soundModel.buttonOpen(), hortor.TipManager.alert("分享不同微信群查看不同群里的老船长", function() {
                e.PlatformManager.share(e.ShareType.RecallRewardShare);
            }, null, this);
        }, i.prototype.onRecallFriend = function() {
            util.jzlog(">>>>>>点击召回好友按钮"), platform.common.checkSetUserStorage() ? wxOpenData.loadImages(function() {
                util.jzlog("加载图片完成>>>>>>显示好友列表,RecallFriendPlayersView界面"), hortor.WindowManager.showWindow(e.WindowType.WINDOW_RECALLFRIEND_PLAYERS);
            }) : hortor.TipManager.bubble("请先升级微信版本"), soundModel.buttonOpen();
        }, i.prototype.onH5RecallGroup = function() {
            util.jzlog(">>>>分享到h5"), e.PlatformManager.share(e.ShareType.RecallRewardShare);
        }, i.prototype.playAnim = function(e) {
            var t = this;
            if (util.jzlog("todo:>>>>>播放动画", e), this) {
                var i = egret.Tween.get(this[e]);
                i.to({
                    scaleX: .9,
                    scaleY: .9
                }, 50).to({
                    scaleX: 1,
                    scaleY: 1
                }, 50).to({
                    scaleX: 1.1,
                    scaleY: 1.1
                }, 50).to({
                    scaleX: 1,
                    scaleY: 1
                }, 50).call(function() {
                    egret.Tween.removeTweens(t[e]);
                });
            }
        }, i.prototype.onGetReward = function(t) {
            var i = this;
            util.jzlog(">>>>onGetReward ", t);
            var n = t.currentTarget.name, o = 0;
            switch (util.jzlog("currentTargetName == ", n), n) {
              case "headGroup0":
                util.jzlog(">>>headGroup0"), o = 0;
                break;

              case "headGroup1":
                o = 1;
                break;

              case "headGroup2":
                o = 2;
                break;

              default:
                util.jzlog("》〉》〉》〉》〉发生异常", n);
            }
            var a = this.rewardList[o].uid;
            return util.jzlog("index === ", o), util.jzlog("this.rewardList ===", this.rewardList), 
            util.jzlog("fid ===", a), util.jzlog("this.rewardList[index].isTake ===>>>>>>", this.rewardList[o].isTake), 
            0 == a ? (this.playAnim(n), void hortor.TipManager.bubble("快去分享召回老船长吧")) : void (this.rewardList[o].isTake || HttpService.post(e.ServerMsg.RECALL_REWARD_NEW, "uid=" + playerModel.uid + "&idx=" + o + "&fid=" + a, function(t) {
                if (i) {
                    t.rewards && hortor.WindowManager.showWindow(e.WindowType.WINDOW_REWARD, t);
                    var n = t.idx, o = t.isTake;
                    o && (i["hasGot" + n].visible = o, i["icon" + n].visible = !o, i["num" + n].visible = !o), 
                    i.rewardList[n].isTake = o, i.data.recallList[n].isTake = o;
                }
            }));
        }, i.prototype.onHelp = function() {
            util.jzlog("todo:弹出召回说明界面"), soundModel.buttonOpen();
            var t = HelpTextLabel.getRecallFriendTextLabel();
            e.ComFunc.openHelpPanel(t);
        }, i.prototype.onHeadGroup = function(e) {
            soundModel.buttonOpen();
        }, i;
    }(e.TabWindowBase);
    e.RecallWindow = t, __reflect(t.prototype, "game.RecallWindow");
}(game || (game = {}));

var Main = function(e) {
    function t() {
        var t = null !== e && e.apply(this, arguments) || this;
        return t.resInited = !1, t.iapHide = !1, t.shareHide = !1, t.enterParams = null, 
        t;
    }
    return __extends(t, e), t.prototype.createChildren = function() {
        e.prototype.createChildren.call(this), egret.ImageLoader.crossOrigin = "anonymous", 
        this.stage.maxTouches = 1, this.stage.frameRate = 40, this.isWxGame = hortor.SystemManager.isWxGame, 
        hortor.StageManager.initialize(this.stage, this), game.ComFunc.checkMobileDevice(), 
        HttpService = new hortor.HttpService(null, this.onHttpError, this), HttpService.baseParams = {
            isWxGame: this.isWxGame
        }, hortor.NotificationManager.add(game.NotificationType.RELOGIN, this.loginGame, this), 
        hortor.NotificationManager.add(game.NotificationType.PLAYER_UPDATE, this.updateWxPlayer, this), 
        this.initConfig(), this.initPlatform();
    }, t.prototype.initConfig = function() {
        var e = this, t = "resource/gameConfig.json";
        t = this.isWxGame ? t : t + "?v=" + Math.random(), game.GameConfig.initialize(t, function() {
            e.isWxGame && (platform.common.onCheckForUpdate(game.GameConfig.client + game.GameConfig.version), 
            platform.common.apmSdkInit(game.GameConfig.version, game.GameConfig.gameId, game.GameConfig.evn)), 
            e.loading = new Loading(), e.addChildAt(e.loading, 0), e.initResDisposeBlack();
            var t = hortor.ResourceManager.initialize(game.GameConfig.version, game.GameConfig.resRoot, function() {
                e.loading.setProgress("加载皮肤文件");
                hortor.ResourceManager.loadSkinJson("assets/skins/component_EUI.json", e.startLoadingAsset, e);
            }, e);
            t && egret.localStorage.setItem("wanbanComplete", "0");
        }, this);
    }, t.prototype.initResDisposeBlack = function() {
        hortor.ResourceManager.setDisposeBlackFilter([ "image/tabbar", "assets/texture/comBtnTxt" ]);
    }, t.prototype.initPlatform = function() {
        var e = this;
        this.isWxGame ? (platform.common.onShow(function(t) {
            egret.ticker.resume(), console.warn("wx onShow iapHide:" + e.iapHide + ",shareHide:" + e.shareHide + ",resInited:" + e.resInited), 
            game.PlatformManager.onAppStatus(!1), e.enterParams = t.query, loginManager.updateLoginParams(e.isWxGame, t);
            var i = !1, n = !e.iapHide && !e.shareHide;
            i = !t.query || 1 != t.query.tp || 1074 != t.scene && 1073 != t.scene ? game.loginParams.friendCode ? !0 : gateModel && gateModel.checkRelogin && n : !0, 
            e.resInited && loginManager.isLogined && (i ? e.loginGame(!0) : n && e.updateWxPlayer()), 
            game.ShareManager.sharing = !1, game.IapManager.paying = !1;
        }), platform.common.onHide(function(t) {
            console.warn("wx onHide paying:" + game.IapManager.paying + ",sharing:" + game.ShareManager.sharing), 
            e.iapHide = game.IapManager.paying, e.shareHide = game.ShareManager.sharing, game.PlatformManager.onAppStatus(!0), 
            e.iapHide || e.shareHide || egret.ticker.pause(), e.wxError && (e.wxError = !1, 
            platform.common.exitMiniProgram(function() {}, function() {}, function(e) {
                console.log("退出小游戏");
            }));
        }), platform.common.onError(function(t) {
            console.log("wx error:" + t), e.wxError = !0;
            var i = t.message ? t.message : t;
            e.resInited ? hortor.TipManager.alert(i, e.loginGame, null, e) : platform.common.showModal("友情提示", i, !1, "", null, "刷新", null, e.loginGame.bind(e), function() {}, function() {});
        })) : (this.enterParams = util.getUrlParamMap(), loginManager.updateLoginParams(this.isWxGame, this.enterParams));
    }, t.prototype.quitGame = function() {
        this.isWxGame ? platform.common.showModal("友情提示", "您的小程序出现异常，请退出重试", !1, "取消", null, "退出", "#3cc51f", function() {
            platform.common.exitMiniProgram(function() {}, function() {}, function(e) {
                console.log("退出小游戏");
            });
        }) : this.loginGame(!0);
    }, t.prototype.startLoadingAsset = function() {
        var e = this;
        console.log("startLoadingAsset"), game.PlatformManager.LogEvent(Const.skinsComplete), 
        hortor.ResourceManager.loadViewResource("common", function() {
            console.log("startLoadingAsset complete"), game.PlatformManager.LogEvent(Const.comResComplete), 
            e.initGame(), e.loginGame(!0);
        }).autoDispose = !1;
    }, t.prototype.initGame = function() {
        console.log("initGame"), activityModel = new game.ActivityModel(), gateModel = new game.GateModel(), 
        guildModel = new game.GuildModel(), initModel = new game.InitModel(), islandModel = new game.IslandModel(), 
        messageModel = new game.MessageModel(), playerModel = new game.PlayerModel(), rankModel = new game.RankModel(), 
        soundModel = new game.SoundModel(), wheelModel = new game.WheelModel(), jigsawModel = new game.JigsawModel(), 
        dailyModel = new game.DailyModel(), octopusModel = new game.OctopusModel(), TcpService = new game.MessageManager(), 
        uiModel = new game.UIModel(), friendModel = new game.FriendModel(), chatModel = new game.ChatModel(), 
        pirateGiftModel = new game.PirateGiftModel(), petModel = new game.PetModel(), shareRegister = new game.ShareRegister(), 
        HttpService.loadingView = new game.WindowLoading(), gateModel = new game.GateModel(), 
        shopModel = new game.ShopModel(), wallSdkModel = new game.WallSdkModel(), hortor.SystemManager.initialize(), 
        hortor.WindowManager.initialize(new game.GameWindowNavigator()), hortor.ScreenManager.initialize(new game.GameScreenNavigator()), 
        hortor.TipManager.initialize(this.stage, game.SimpleAlertRenderer, game.SimpleTipRenderer, game.SimpleBubbleRenderer, game.SimpleUiTipRenderer), 
        hortor.Register.initialize(game.WindowRegister), hortor.Register.initialize(game.ScreenRegister), 
        hortor.Register.initialize(game.SoundRegister), playerModel.userId = game.GameConfig.userId, 
        game.OpenFuncManager.initialize(), hortor.StageManager.stageOffHeight = hortor.StageManager.stageHeight - 1039, 
        hortor.StageManager.stageOffHeight = hortor.StageManager.stageOffHeight > 0 ? hortor.StageManager.stageOffHeight : 0, 
        this.resInited = !0;
    }, t.prototype.updateWxPlayer = function() {
        console.log("updateWxPlayer"), loginManager.wxCheckStatus(this.quitGame.bind(this));
    }, t.prototype.loginGame = function(e) {
        void 0 === e && (e = !0), console.log("loginGame,reset all"), uiModel.firstEnter || (game.ScreenLoading.instance.loadingState = !0), 
        this.faceUI && (this.faceUI.hide(), this.islandWindow.hide()), game.NoticeManager.hide(!0), 
        hortor.ScreenManager.hideAllScreen(!1), hortor.WindowManager.hideAllWindow(!1), 
        game.OpenFuncManager.reset(), game.AutoTipManager.reset(), enterManager.reset(), 
        messageModel.reset(), game.TutorialManager.instance.reset(), loginManager.login(this.isWxGame, e, this.onLogin, this);
    }, t.prototype.onLogin = function() {
        this.enterScreen(game.ScreenType.WHEEL_SCREEN), this.isWxGame && platform.common.apmSetUserInfo({
            userId: playerModel.userId
        }), game.PlatformManager.checkVideoAd();
    }, t.prototype.enterScreen = function(e) {
        switch (void 0 === e && (e = 2), console.log("enterScreen:" + e), game.PlatformManager.LogEvent(Const.startGame), 
        e) {
          case game.ScreenType.WHEEL_SCREEN:
            this.background || (this.background = new game.BackgroundUI()), this.background.show(hortor.StageManager.getLayer(hortor.Layer.BG)), 
            hortor.ScreenManager.showScreen(e, null, this.onScreenEnter, null, this), this.faceUI || (this.islandWindow = new game.IslandWindow(), 
            this.faceUI = new game.FaceUI()), this.islandWindow.show(hortor.StageManager.getLayer(hortor.Layer.BG)), 
            this.faceUI.show(hortor.StageManager.getLayer(hortor.Layer.FACEUI));
        }
    }, t.prototype.onScreenEnter = function() {
        switch (console.log(this, "onScreenEnter id:" + hortor.ScreenManager.currentScreen), 
        uiModel.firstEnter = !1, hortor.ScreenManager.currentScreen) {
          case game.ScreenType.WHEEL_SCREEN:
            playerModel.tutorial < 16 && game.TutorialManager.instance.startTutorial("newbie", playerModel.tutorial), 
            enterManager.enter(this.enterParams, this.initSilentRes.bind(this));
        }
        console.log("remove loading"), this.loading.parent && this.removeChild(this.loading), 
        this.enterParams && (game.PlatformManager.onShareEnter(this.enterParams), this.enterParams = null), 
        hortor.NotificationManager.dispatch(game.NotificationType.FACEUI_UPDATE);
    }, t.prototype.initSilentRes = function() {
        null == this.silentLoader && (this.silentLoader = new game.SilentLoader(), this.silentLoader.initialize(), 
        this.silentLoader.load(), this.isWxGame && wxOpenData.initialize());
    }, t.prototype.onHttpError = function(e) {
        var t = this;
        if (this.resInited) {
            if (-1 != e.url.indexOf("basic/player")) return;
            if (e.type == hortor.HttpErrorType.DATA_ERROR) {
                if (e.code >= 4e4 && e.code < 6e4) return hortor.TipManager.alert("登录信息失效，请重新登录\n(错误code=" + e.code + ")", function() {
                    hortor.SystemManager.isWxGame ? t.loginGame() : HORTOR_AGENT.refresh();
                }, null, this), !1;
                if (e.code >= 6e4 && e.code < 7e4) hortor.TipManager.bubble(e.msg); else {
                    if (e.code >= 7e4 && e.code < 8e4) return hortor.TipManager.alert(e.msg, null, null, this), 
                    !1;
                    hortor.TipManager.bubble(e.msg);
                }
            } else if (e.type == hortor.HttpErrorType.NO_DATA) hortor.TipManager.alert("发送请求失败\n错误url:" + e.url); else if (e.type == hortor.HttpErrorType.IO_ERROR) {
                var i = -1 != e.url.indexOf("basic/login") || -1 != e.url.indexOf("entry/wxgame");
                hortor.TipManager.alert("您的网络不给力。\n errorUrl:" + e.url, i ? this.loginGame : null, null, this);
            } else e.type == hortor.HttpErrorType.DECODE_ERROR && hortor.TipManager.alert("数据解析错误。\n errorUrl:" + e.url, this.loginGame, null, this);
        }
        return !0;
    }, t;
}(eui.UILayer);

__reflect(Main.prototype, "Main");

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.skinPath = "inviteReward/ShareRewardNodeSkin", e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.getBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.getBtnFunc, this);
        }, i.prototype.onData = function() {
            var t = _.keys(FriendRewards.friendRewardsConf[this.itemIndex].rewards), i = _.indexOf(t, "energy");
            t.splice(i, 1), t.unshift("energy");
            for (var n = 0; 2 > n; n++) {
                var o = e.ItemManager.getItemInfo(t[n]);
                this["icon" + n].source = o.icon, this["label" + n].text = e.ComFunc.formatNumber(FriendRewards.friendRewardsConf[this.itemIndex].rewards[t[n]]);
            }
            this.starLabel.text = FriendRewards.friendRewardsConf[this.itemIndex].target + "星奖励", 
            this.countLabel.text = "(数量:" + FriendRewards.friendRewardsCount[this.itemIndex] + "/" + FriendRewards.friendRewardsConf[this.itemIndex].limit + ")", 
            util.jzlog("this.data.uid =", this.data.uid), util.jzlog("this.itemIndex = ", this.itemIndex), 
            util.jzlog("FriendRewards.friendRewardsCount[this.itemIndex] = ", FriendRewards.friendRewardsCount[this.itemIndex]), 
            util.jzlog("FriendRewards.friendRewardsConf[this.itemIndex].limit = ", FriendRewards.friendRewardsConf[this.itemIndex].limit), 
            util.jzlog("this.getBtn.enabled ==", this.getBtn.enabled), this.getBtn.enabled = this.data.uid > 0 && FriendRewards.friendRewardsCount[this.itemIndex] < FriendRewards.friendRewardsConf[this.itemIndex].limit, 
            this.getBtnLabel.text = FriendRewards.friendRewardsCount[this.itemIndex] < FriendRewards.friendRewardsConf[this.itemIndex].limit ? "领取" : "已领光", 
            this.getBtnLabel.strokeColor = this.getBtn.enabled ? Const.greenStroke : Const.grayStroke, 
            this.line.visible = this.itemIndex < 3;
        }, i.prototype.getBtnFunc = function() {
            var t = this;
            soundModel.buttonOpen();
            var i = "uid=" + playerModel.uid + "&fid=" + this.data.uid + "&level=" + this.data.level;
            util.jzlog("点击领取好友邀请奖励,发送请求, param = ", i, "; ServerMsg.FRIEND_REWARD = ", e.ServerMsg.FRIEND_REWARD), 
            HttpService.post(e.ServerMsg.FRIEND_REWARD, i, function(i) {
                util.jzlog("领取好友邀请奖励返回" + JSON.stringify(i)), FriendRewards.friendRewards = i.friendRewards, 
                FriendRewards.friendRewardsCount = i.friendRewardsCount, playerModel.update(i);
                var n = hortor.WindowManager.getWindow(e.WindowType.WINDOW_INVITEREWARD);
                util.jzlog("wnd ===", n), n && n.initRewardsList(), hortor.WindowManager.showWindow(e.WindowType.WINDOW_REWARD, FriendRewards.friendRewardsConf[t.itemIndex]), 
                FriendRewardsRefresh(i), EventCenter.sendEvent(EventConst.EnergyChange), EventCenter.sendEvent(EventConst.GoldChange), 
                EventCenter.sendEvent(EventConst.MenuRedPoint);
            });
        }, i;
    }(e.ItemRenderBase);
    e.ShareRewardNode = t, __reflect(t.prototype, "game.ShareRewardNode");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            util.jzlog("this.inviteGroup>>>>", this.inviteGroup), util.jzlog("this.getBtn =====", this.getBtn), 
            this.inviteGroup.addEventListener(egret.TouchEvent.TOUCH_TAP, this.inviteBtnFunc, this), 
            this.getBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.getBtnFunc, this), 
            this.baseData = new eui.ArrayCollection(), this.baseList.dataProvider = this.baseData, 
            this.baseList.itemRenderer = e.InvitationNode;
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.onData = function() {
            util.jzlog(">>>>> WnspWindow onData"), this.initList(), this.showView(), this.initAction(), 
            null == this.wanouArmature && (this.wanouArmature = new e.ArmaturePlayer("wanou"), 
            this.addChild(this.wanouArmature), this.wanouArmature.x = 576, this.wanouArmature.y = 600, 
            this.wanouArmature.touchEnabled = !1, this.wanouArmature.touchChildren = !1), this.wanouArmature.play("wanou", 0);
        }, i.prototype.initAction = function() {
            var e = Math.floor(playerModel.inviteFriendRewardCount / 7), t = (playerModel.inviteFriendRewardCount % 7, 
            playerModel.inviteFriendCount - 7 * e), i = t, n = i / 7;
            if (n = n > 1 ? 1 : n, util.jzlog("_num = " + n), n > 0) {
                var o = 30 + 72 * i;
                if (o > 531 && (o = 531), this.proImg.height == o) return;
                this.proImg.height = 60, util.jzlog("_targetHeight === ", o), egret.Tween.get(this.proImg).to({
                    height: o
                }, 500 + 424 * (n - .1) / 1.2, egret.Ease.backOut);
            } else this.proImg.height = 60;
        }, i.prototype.showView = function() {
            util.jzlog(">>>>showView");
            var e = playerModel;
            util.jzlog(">>>>_data.inviteFirendToday = ", e.inviteFirendToday), e.inviteFirendToday ? this.jrydclabel.visible = !0 : this.jrydclabel.visible = !1, 
            util.jzlog("this.invite_isHasRewardDay() ==", this.invite_isHasRewardDay()), this.inviteBtn.enabled = !e.inviteFirendToday, 
            this.inviteGroup.visible = 0 == this.invite_isHasRewardDay(), this.getBtnGroup.visible = 1 == this.invite_isHasRewardDay();
        }, i.prototype.initList = function() {
            this.baseData.source = [ {
                id: 6
            }, {
                id: 5
            }, {
                id: 4
            }, {
                id: 3
            }, {
                id: 2
            }, {
                id: 1
            }, {
                id: 0
            } ];
        }, i.prototype.inviteBtnFunc = function() {
            0 != this.inviteBtn.enabled && (soundModel.buttonOpen(), e.PlatformManager.share(e.ShareType.WnspShare));
        }, i.prototype.getBtnFunc = function() {
            var t = this, i = playerModel, n = i.inviteFriendRewardCount % 7;
            i.inviteFriendCount > i.inviteFriendRewardCount && HttpService.post(e.ServerMsg.REWARD_INVITE_FRIEND, "uid=" + playerModel.uid, function(i) {
                for (var o in i) _.isUndefined(playerModel[o]) || (playerModel[o] = i[o]);
                var a = {
                    allInOne: 1
                };
                n + 1 == 7 && (a = {
                    allInOne: 1,
                    energy: 50,
                    wanted: 1
                }), hortor.WindowManager.showWindow(e.WindowType.WINDOW_REWARD, a), playerModel.update(i), 
                t.showView(), t.initList(), t.initAction(), gateModel.updateGate(e.WindowType.WINDOW_WNSP);
            });
        }, i.prototype.invite_isHasRewardDay = function() {
            var e = playerModel;
            util.jzlog("_data.inviteFriendCount ==", e.inviteFriendCount), util.jzlog("_data.inviteFriendRewardCount ==", e.inviteFriendRewardCount);
            var t = e.inviteFriendCount > e.inviteFriendRewardCount;
            return 0 == e.inviteFriendCount && 0 == e.inviteFriendRewardCount && (t = !1), util.jzlog("_hasReward ==", t), 
            t;
        }, i;
    }(e.TabWindowBase);
    e.WnspWindow = t, __reflect(t.prototype, "game.WnspWindow");
}(game || (game = {}));

var g_test = 0, game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.baseData = new eui.ArrayCollection(), this.list.dataProvider = this.baseData, 
            this.list.itemRenderer = e.InvitationVIPNode;
        }, i.prototype.onData = function() {
            util.jzlog("ljz/todo:邀请vip列表这里需要大动作"), this.desc.text = "仅限活动期间邀请的新玩家(之前邀请的不计算在内)", 
            this.desc.visible = !0, this.title_img.visible = !1, this.panel.helpBtn.visible = !1;
            var e = this.data;
            this.empty && (this.empty.visible = 0 == e.invitees.length), e.invitees.sort(function(e, t) {
                return t.crowns - e.crowns;
            }), this.baseData.source = e.invitees;
        }, i.prototype.prepare = function(t, i) {
            HttpService.get(e.ServerMsg.INVITE_FRIEND_VIP, "uid=" + playerModel.uid, function(e) {
                util.jzlog("邀请列表 =》" + JSON.stringify(e)), t(e);
            }, i);
        }, i;
    }(e.WindowBase);
    e.InvitationVIPListWindow = t, __reflect(t.prototype, "game.InvitationVIPListWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(e) {
        function t() {
            var t = e.call(this) || this;
            return t.skinPath = "common/ComNewsItemSkin", t;
        }
        return __extends(t, e), t.prototype.onData = function() {
            this.initView();
        }, t.prototype.initView = function() {
            var e = this.data;
            util.jzlog(">>>_data = ", e), this.nameLabel.textColor = util.getColorByGender(e.gender), 
            this.nameLabel.text = e.name, util.jzlog("this.nameLabel.text  = ", this.nameLabel.text), 
            this.timeLabel.visible = !1, this.desc.visible = !1, this.avatarInfo.data = {
                gender: e.gender,
                headImg: e.headImg,
                crowns: e.crowns,
                showStar: !0
            }, this.ydc.visible = e.crowns >= 3;
        }, t;
    }(e.ItemRenderBase);
    e.InvitationVIPNode = t, __reflect(t.prototype, "game.InvitationVIPNode");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e.hasReached = !1, e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.getRewardBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.progressBtnFunc, this), 
            this.goInvitationBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.inviteBtnFunc, this), 
            this.vipIcon.addEventListener(egret.TouchEvent.TOUCH_TAP, this.vipIconFunc, this);
        }, i.prototype.onData = function() {
            var t = _.isNumber(playerModel.inviteFriendVIPRemain);
            t && (this.timeLabel.text = playerModel.inviteFriendVIPRemain > 0 ? "剩余时间：" + e.ComFunc.formatTimeCNNew3(playerModel.inviteFriendVIPRemain) : ""), 
            this.timer = new egret.Timer(1e3), this.timer.addEventListener(egret.TimerEvent.TIMER, this.timeFunc, this), 
            this.timer.start(), this.showView();
        }, i.prototype.prepare = function(t, i) {
            HttpService.post(e.ServerMsg.SHOW_INVITE_VIP, "uid=" + playerModel.uid, function(e) {
                playerModel.update(e), t(e);
            }, i);
        }, i.prototype.showView = function() {
            var e = this;
            util.jzlog("playerModel.inviteFriendVIPCount == ", playerModel.inviteFriendVIPCount);
            var t = _.isNumber(playerModel.inviteFriendVIPRemain);
            this.hasReached = playerModel.inviteFriendVIPCount >= Const.INVITAION_VIP_COUNT, 
            e.getRewardBtn.visible = t, t ? (e.jindu.text = playerModel.inviteFriendVIPCount + "/" + Const.INVITAION_VIP_COUNT, 
            this.hasReached ? (e.goInvitationBtn.visible = !1, e.jrylq.visible = !0, e.img_qr.visible = !1, 
            e.jindu.visible = !1, e.getRewardBtn.x = 183 + e.getRewardBtn.anchorOffsetX) : (e.goInvitationBtn.visible = !0, 
            this.goInvitationBtn.x = 323 + this.goInvitationBtn.anchorOffsetX, e.jrylq.visible = !1, 
            e.img_qr.visible = !0, e.jindu.visible = !0)) : this.goInvitationBtn.x = 183 + this.goInvitationBtn.anchorOffsetX;
        }, i.prototype.timeFunc = function() {
            if (util.jzlog(">>>timeFunc"), this) {
                var t = this;
                playerModel.inviteFriendVIPRemain -= 1;
                var i = _.isNumber(playerModel.inviteFriendVIPRemain);
                i && (t.timeLabel.text = playerModel.inviteFriendVIPRemain > 0 ? "剩余时间：" + e.ComFunc.formatTimeCNNew3(playerModel.inviteFriendVIPRemain) : ""), 
                playerModel.inviteFriendVIPRemain <= 0 && (this.timer && (this.timer.stop(), this.timer = null), 
                gateModel.updateGate(e.WindowType.WINDOW_INVITE_VIP));
            }
        }, i.prototype.inviteBtnFunc = function() {
            e.PlatformManager.share(e.ShareType.InviteVipShare);
        }, i.prototype.progressBtnFunc = function() {
            soundModel.buttonOpen(), util.jzlog("playerModel ===", playerModel), this.hasReached ? HttpService.post(e.ServerMsg.INVITE_FRIEND_VIP_REWARD, "uid=" + playerModel.uid, function(t) {
                util.jzlog("领取邀请vip奖励返回, data ========", t), playerModel.inviteFriendVIPRemain = null, 
                playerModel.maxEnergy = 60, playerModel.gotMonthCardReward = 0 == playerModel.monthCardExpired ? !1 : !0, 
                playerModel.monthCardExpired += 86400, EventCenter.sendEvent(EventConst.EnergyChange), 
                EventCenter.sendEvent(EventConst.RefreshWheelRedPoint);
                var i = {
                    reward: {
                        monthcard30: 1
                    }
                };
                playerModel.update(t), hortor.WindowManager.showWindow(e.WindowType.WINDOW_REWARD, i), 
                gateModel.updateGate(e.WindowType.WINDOW_INVITE_VIP), hortor.WindowManager.hideWindow(e.WindowType.WINDOW_INVITE_VIP), 
                gateModel.updateGate(e.WindowType.WINDOW_INVITEREWARD);
            }) : hortor.WindowManager.currentWindow = e.WindowType.WINDOW_INVITATIONLIST;
        }, i.prototype.vipIconFunc = function() {
            this.monthCardGroup.visible ? soundModel.buttonClose() : soundModel.buttonOpen(), 
            this.monthCardGroup.visible = !this.monthCardGroup.visible;
        }, i.gloabl_timer = null, i;
    }(e.TabWindowBase);
    e.InvitationVipWindow = t, __reflect(t.prototype, "game.InvitationVipWindow");
    var i = function() {
        function e() {}
        return e.Share = "share", e.Recall = "recall", e.MoneyBox = "moneyBox", e.AllInOne = "allInOne", 
        e.Recruitment = "recruitment", e;
    }();
    e.InviteShowType = i, __reflect(i.prototype, "game.InviteShowType");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e.strokeColor = 11751443, e.allowColor = 16704564, e.banColor = 7157272, 
            e.addition = 0, e.isMiniShieldAnimPlaying = !1, e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.shiledImg.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onShiledImgFunc, this), 
            this.miniBg.addEventListener(egret.TouchEvent.TOUCH_TAP, this.miniBgFunc, this);
            for (var e = 0; 5 > e; e++) this["miniIcon" + (e + 1)].addEventListener(egret.TouchEvent.TOUCH_TAP, this.miniFunc, this);
        }, i.prototype.onOpen = function() {
            for (var t = islandModel.buildings, i = !1, n = 0; n < t.length; n++) for (var o = 0; 5 > o; o++) {
                var a = this["item" + n]["itemGroup" + o];
                uiModel.onShow(e.UINameType.buildItem + n + "_" + o, a), playerModel.island < 1 && (i || (i = a.buildAble && playerModel.island < 1, 
                i && e.AutoTipManager.startTip(e.UINameType.buildItem + n + "_" + o)));
            }
        }, i.prototype.onClose = function() {
            for (var t = islandModel.buildings, i = 0; i < t.length; i++) for (var n = 0; 5 > n; n++) {
                this["item" + i]["itemGroup" + n];
                uiModel.onHide(e.UINameType.buildItem + i + "_" + n);
            }
        }, i.prototype.initView = function() {
            this.panel.helpBtn.visible = !1, this.miniGroup.visible = !1, this.shiledNumLabel.text = playerModel.miniShieldCount + "";
            var t = playerModel.island % playerModel.islandCount + 1;
            this.shiledImg.source = e.ResourcePath.getItemIconByName("popIcon_miniShield");
            var i, n = islandModel.buildings, o = islandModel.buildingCost;
            if (n && n.length > 0) for (var a = 0; a < n.length; a++) {
                i = n[a], this["item" + a].shieldBgImg.source = i.isShield ? "islandBuild_json.build_img_tz1" : "islandBuild_json.build_img_tz0", 
                this["item" + a].miniShiledImg.source = i.isShield ? "islandBuild_json.build_icon_jy" + (a + 1) + "_1" : "islandBuild_json.build_icon_jy" + (a + 1) + "_0";
                for (var r = 0; 5 > r; r++) {
                    var s = this["item" + a]["itemGroup" + r];
                    s.buildAble = !1;
                    var l = this["item" + a]["costLabel" + r], d = this["item" + a]["gouImg" + r], u = this["item" + a]["islandImg" + r], h = this["item" + a]["fixImg" + r];
                    l.text = e.ComFunc.toThousands(o[a].costs[r]), d.visible = !1, h.visible = !1;
                    var c = "building_icon_" + t + "_" + (a + 1) + "_" + (r + 1) + "_0_png", p = "building_icon_" + t + "_" + (a + 1) + "_" + (r + 1) + "_1_png";
                    u.source = this.buildSheet.getTexture(p), r + 1 < i.level ? (u.source = this.buildSheet.getTexture(c), 
                    d.visible = !0, l.visible = !1, h.visible = !1, s.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.touchFunc, this)) : r + 1 == i.level ? 1 == i.status ? (u.source = this.buildSheet.getTexture(c), 
                    d.visible = !1, l.visible = !0, l.text = e.ComFunc.toThousands(.5 * o[a].costs[r]), 
                    playerModel.money < .5 * o[a].costs[i.level - 1] ? (l.textColor = this.banColor, 
                    l.stroke = 0) : (l.textColor = this.allowColor, l.strokeColor = this.strokeColor, 
                    l.stroke = 2, s.buildAble = !0), h.visible = !0, s.once(egret.TouchEvent.TOUCH_TAP, this.touchFunc, this)) : (u.source = this.buildSheet.getTexture(c), 
                    d.visible = !0, l.visible = !1, l.textColor = this.allowColor, l.strokeColor = this.strokeColor, 
                    l.stroke = 2, h.visible = !1, s.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.touchFunc, this)) : r + 1 == i.level + 1 && 1 != i.status ? (u.source = this.buildSheet.getTexture(c), 
                    d.visible = !1, l.visible = !0, h.visible = !1, playerModel.money < o[a].costs[i.level] * (1 - this.addition) ? (l.textColor = this.banColor, 
                    l.stroke = 0) : (l.textColor = this.allowColor, l.strokeColor = this.strokeColor, 
                    l.stroke = 2, s.buildAble = !0), s.once(egret.TouchEvent.TOUCH_TAP, this.touchFunc, this)) : (u.source = this.buildSheet.getTexture(p), 
                    d.visible = !1, l.visible = !0, h.visible = !1, l.textColor = this.banColor, l.stroke = 0);
                }
            }
        }, i.prototype.touchFunc = function(t) {
            var i = this, n = t.currentTarget.name, o = t.currentTarget.parent.parent.name, a = parseInt(o.substr(o.length - 1, 1)), r = (parseInt(n.substr(n.length - 1, 1)), 
            islandModel.buildings), s = islandModel.buildingCost;
            islandModel.island = playerModel.island;
            if (1 == r[a].status) {
                if (playerModel.money < .5 * s[a].costs[r[a].level - 1]) return void this.checkPopView();
                HttpService.post(e.ServerMsg.REPAIR, "uid=" + playerModel.uid + "&island=" + playerModel.island + "&building=" + a, function(e) {
                    i.dealIslandData(e, a, !0);
                }, null, this);
            } else {
                if (playerModel.money < s[a].costs[r[a].level] * (1 - this.addition)) return void this.checkPopView();
                for (var l = 0, d = 0; d < r.length; d++) l += r[d].level;
                24 == l && hortor.NotificationManager.dispatch(e.NotificationType.ISLAND_BUILD_HIDE), 
                this.buildRequest(a);
            }
        }, i.prototype.checkPopView = function() {
            var t = playerModel.inviteMoneyCount > 0 && 1 == playerModel.showBoxType;
            if (playerModel.isSubscribed || playerModel.gotNewSubscribedReward || playerModel.isAudit) !playerModel.isSubscribed || playerModel.gotNewSubscribedReward || playerModel.isAudit ? t ? hortor.WindowManager.showWindow(e.WindowType.WINDOW_INVITE_JBBX) : gateModel.iosPay && !playerModel.gotNewbieGift ? hortor.WindowManager.showWindow(e.WindowType.WINDOW_NEWBIE_GIFT) : hortor.TipManager.alert("金币不足!\n快去转轮盘获得金币吧", function() {
                hortor.WindowManager.hideWindow(e.WindowType.WINDOW_ISLANDBUIND), EventCenter.sendEvent(EventConst.IslandMoveBack);
            }, null, this) : hortor.WindowManager.showWindow(e.WindowType.WINDOW_FOCUS_REWARD_TIP); else {
                var i = gateModel.checkFocus ? e.WindowType.WINDOW_FOCUS_REWARD_TIP : e.WindowType.WINDOW_WXFOCUS_NOREWARD;
                hortor.WindowManager.showWindow(i);
            }
        }, i.prototype.buildRequest = function(t) {
            var i = this;
            HttpService.post(e.ServerMsg.BUILD, "uid=" + playerModel.uid + "&island=" + playerModel.island + "&building=" + t + "&level=" + (islandModel.buildings[t].level + 1), function(e) {
                i.dealIslandData(e, t);
            });
        }, i.prototype.dealIslandData = function(t, i, n) {
            var o = this;
            if (t) {
                islandModel.update(t), playerModel.update(t), hortor.NotificationManager.dispatch(e.NotificationType.ISLAND_BUILD_REFRESH, {
                    index: i,
                    isRepair: n
                });
                var a = egret.setTimeout(function() {
                    if (egret.clearTimeout(a), t.newRank > 0 && t.oldRank > 0 && t.newRank < t.oldRank && (rankModel.rankUpList.push([ t.oldRank, t.newRank ]), 
                    hortor.WindowManager.showWindow(e.WindowType.WINDOW_RANKUP)), playerModel.island - 1 == islandModel.island) {
                        var i = playerModel.island % playerModel.islandCount + 1;
                        hortor.ResourceManager.loadSheet(e.ResourcePath.getBuildingIconJson(i), function(e) {
                            o.buildSheet = e;
                        }), console.log("岛屿完成！"), EventCenter.sendEvent(EventConst.islandOver), EventCenter.sendEvent(EventConst.gainIslandShare);
                    }
                }, this, 1400);
                EventCenter.sendEvent(EventConst.CheckPaoLock);
            }
            hortor.WindowManager.hideWindow(e.WindowType.WINDOW_ISLANDBUIND);
        }, i.prototype.onShiledImgFunc = function(t) {
            if (!this.isMiniShieldAnimPlaying) {
                if (soundModel.buttonOpen(), playerModel.miniShieldCount < 1) return void (gateModel.iosPay ? HttpService.get(e.ServerMsg.SHOP_LIST, "uid=" + playerModel.uid, function(t) {
                    var i = _.find(t.goods.prop, function(e) {
                        return "miniShield" == e.goodsId;
                    });
                    i && hortor.WindowManager.showWindow(e.WindowType.WINDOW_SHOP_GOODS, i);
                }) : hortor.TipManager.alert("道具不足"));
                for (var i = islandModel.buildings, n = 0, o = 0; o < i.length; o++) i[o].isShield ? (n++, 
                this["miniIconGroup" + (o + 1)].visible = !1, this["miniIconLight" + (o + 1)].visible = !1, 
                egret.Tween.removeTweens(this["miniIconLight" + (o + 1)])) : 0 == i[o].level ? (this["miniIconGroup" + (o + 1)].visible = !1, 
                this["miniIconLight" + (o + 1)].visible = !1, egret.Tween.removeTweens(this["miniIconLight" + (o + 1)])) : (this["miniIconGroup" + (o + 1)].visible = !0, 
                this["miniIconLight" + (o + 1)].visible = !0, egret.Tween.get(this["miniIconLight" + (o + 1)], {
                    loop: !0
                }).to({
                    alpha: 0
                }, 600).to({
                    alpha: 1
                }, 600));
                return n > 2 ? void hortor.TipManager.alert("同时最多使用3个迷你盾!") : void (this.miniGroup.visible = !0);
            }
        }, i.prototype.miniFunc = function(t) {
            soundModel.buttonOpen();
            var i = (t.currentTarget.name, t.currentTarget.parent.name), n = parseInt(i.substr(i.length - 1, 1)) - 1;
            console.log("miniFunc", n);
            var o = this;
            hortor.TipManager.alert("你确定要为该建筑添加迷你保护盾吗？", function() {
                HttpService.post(e.ServerMsg.ISLAND_PROTECT, "uid=" + playerModel.uid + "&building=" + n, function(e) {
                    console.log("迷你盾返回：" + JSON.stringify(e)), playerModel.update(e), islandModel.update(e), 
                    EventCenter.sendEvent(EventConst.MiniShieldUsed, n), o && o.miniShieldUsedFunc(n);
                });
            });
        }, i.prototype.miniBgFunc = function() {
            this.miniGroup.visible = !1;
            for (var e = 1; 6 > e; e++) egret.Tween.removeTweens(this["miniIconLight" + e]);
        }, i.prototype.miniShieldUsedFunc = function(e) {
            var t = this;
            if (this) {
                this.miniGroup.visible = !1, this._light && (this._light.parent.removeChild(this._light), 
                this._light = null), this._icon && (this._icon.parent.removeChild(this._icon), this._icon = null);
                RES.getResAsync("main_json.jigsaw_light", function(i, n) {
                    if (t) {
                        this._light = new egret.Bitmap(), this._light.texture = i;
                        var o = t["item" + e].miniShiledImg.localToGlobal(0, 0);
                        this._light.x = o.x + t["item" + e].miniShiledImg.width / 2, this._light.y = o.y + t["item" + e].miniShiledImg.height / 2, 
                        this._light.visible = !1, this.addChild(this._light), this._light.anchorOffsetX = this._light.width / 2, 
                        this._light.anchorOffsetY = this._light.height / 2, this._light.scaleX = this._light.scaleY = .2, 
                        RES.getResAsync("icon_building_shield_png", function(i, n) {
                            var o = this;
                            if (t) {
                                t._icon = new egret.Bitmap(), t._icon.texture = i, t._icon.width = t._icon.height = 51;
                                var a = t.shiledImg.localToGlobal(0, 0);
                                t._icon.scaleX = t._icon.scaleY = 0, t.addChild(t._icon), t._icon.x = a.x + 26, 
                                t._icon.y = a.y + 26, t._icon.anchorOffsetX = t._icon.width / 2, t._icon.anchorOffsetY = t._icon.height / 2, 
                                t.isMiniShieldAnimPlaying = !0;
                                var r = new egret.Timer(6e3, 1);
                                r.addEventListener(egret.TimerEvent.TIMER, function() {
                                    t && (t.isMiniShieldAnimPlaying = !1), r.stop();
                                }, this), r.start();
                                var s = t["item" + e].miniShiledImg.localToGlobal(0, 0);
                                egret.Tween.get(this._icon).to({
                                    scaleX: 1.5,
                                    scaleY: 1.5
                                }, 800, egret.Ease.bounceOut).to({
                                    x: s.x + 26,
                                    y: s.y + 26
                                }, 1e3, egret.Ease.quadInOut).call(function() {
                                    return t ? (t.miniShieldRefreshFunc(), void (o._light && (o._light.visible = !0, 
                                    egret.Tween.get(o._light).to({
                                        rotation: 1440
                                    }, 2e3).call(function() {
                                        return t ? (egret.Tween.removeTweens(o._light), o._light.visible = !1, void (o._icon.visible = !1)) : void (o.isMiniShieldAnimPlaying = !1);
                                    })))) : void (o.isMiniShieldAnimPlaying = !1);
                                }).to({
                                    x: s.x + 26,
                                    y: s.y + 26,
                                    scaleX: 1,
                                    scaleY: 1
                                }, 300, egret.Ease.quadIn).call(function() {
                                    egret.Tween.removeTweens(o._icon), o.isMiniShieldAnimPlaying = !1, r.stop();
                                });
                            }
                        }, this);
                    }
                }, this);
            }
        }, i.prototype.miniShieldRefreshFunc = function() {
            this && this.initView();
        }, i.prototype.onData = function() {
            this.initView();
        }, i.prototype.prepare = function(t, i) {
            var n = this, o = playerModel.island % playerModel.islandCount + 1;
            hortor.ResourceManager.loadSheet(e.ResourcePath.getBuildingIconJson(o), function(e) {
                n.buildSheet = e, t(null);
            }, i);
        }, i;
    }(e.WindowBase);
    e.IslandBuildWindow = t, __reflect(t.prototype, "game.IslandBuildWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.moneyPosY = 357, e.skinPath = "island/IslandItemNodeSkin", e.once(egret.Event.REMOVED_FROM_STAGE, e.removeFunc, e), 
            e;
        }
        return __extends(i, t), i.prototype.onInit = function() {}, i.prototype.onData = function() {}, 
        i.prototype.removeFunc = function() {
            var e = this;
            egret.Tween.removeTweens(e.islandBottom), egret.Tween.removeTweens(e.leftWave0), 
            egret.Tween.removeTweens(e.leftWave1), egret.Tween.removeTweens(e.rightWave0), egret.Tween.removeTweens(e.rightWave1), 
            egret.Tween.removeTweens(e.planet2), egret.Tween.removeTweens(e.planet3);
        }, i.prototype.initIslandView = function(t, i) {
            var n = this;
            this.callSafe(function() {
                var o = islandModel.getIslandData(t), a = o.buildings, r = o.island + 1;
                n.planet3.anchorOffsetY = o.island > 68 ? IslandLocation.building3Height[68] : IslandLocation.building3Height[o.island], 
                n.islandBg.source = e.ResourcePath.getIslandImage(r);
                for (var s = 1; 6 > s; s++) {
                    0 == a[s - 1].level ? n["planet" + s].source = "" : n["planet" + s].source = e.ResourcePath.getIslandBuildings(r + "_" + s + "_" + a[s - 1].level + "_" + a[s - 1].status);
                    var l = r > 68 ? IslandLocation.isLand69 : IslandLocation["isLand" + r];
                    n["planet" + s].x = l[s - 1][0], n["planet" + s].y = l[s - 1][1] - 233, s > 2 && (n["gray" + s].visible = 2 == a[s - 1].status), 
                    1 == a[s - 1].status && 3 != s ? n["yanMC" + s] || (n["yanMC" + s] = new e.MoviePlayer("maoyan"), 
                    n["yanGroup" + s].addChild(n["yanMC" + s]), n["yanMC" + s].x = Const.BuildingAttackPosX[s - 1] - 30, 
                    n["yanMC" + s].y = Const.BuildingAttackPosY[s - 1] - 233, n["yanMC" + s].play()) : n["yanMC" + s] && n["yanMC" + s].parent && (n["yanMC" + s].parent.removeChild(n["yanMC" + s]), 
                    n["yanMC" + s] = null);
                }
                i || n.playEffect(), n.effectGroup.visible = !i;
            });
        }, i.prototype.playEffect = function() {
            var e = this, t = egret.Tween.get(e.islandBottom, {
                loop: !0
            });
            t.to({
                scaleX: 1.1,
                scaleY: 1.1
            }, 1800).to({
                scaleX: 1,
                scaleY: 1
            }, 1600);
            var i = e.leftWave0.x, n = e.leftWave0.y, o = e.rightWave0.x, a = e.rightWave0.y, r = egret.Tween.get(e.leftWave0, {
                loop: !0
            });
            r.to({
                alpha: 1,
                x: i - 26,
                y: n + 29
            }, 1800).to({
                alpha: 0,
                x: i - 52,
                y: n + 57
            }, 1600).wait(3e3);
            var s = egret.Tween.get(e.leftWave1, {
                loop: !0
            });
            s.wait(3e3).to({
                alpha: 1,
                x: i - 26,
                y: n + 29
            }, 1800).to({
                alpha: 0,
                x: i - 52,
                y: n + 57
            }, 1600);
            var l = egret.Tween.get(e.rightWave0, {
                loop: !0
            });
            l.to({
                alpha: 1,
                x: o + 14,
                y: a + 37
            }, 2200).to({
                alpha: 0,
                x: o + 28,
                y: a + 73
            }, 2e3).wait(3800);
            var d = egret.Tween.get(e.rightWave1, {
                loop: !0
            });
            d.wait(3800).to({
                alpha: 1,
                x: o + 14,
                y: a + 37
            }, 2200).to({
                alpha: 0,
                x: o + 28,
                y: a + 73
            }, 2e3);
            var u = egret.Tween.get(e.planet2, {
                loop: !0
            });
            u.to({
                y: e.planet2.y + 10
            }, 2200).to({
                y: e.planet2.y
            }, 2e3);
            var h = egret.Tween.get(e.planet3, {
                loop: !0
            });
            h.to({
                scaleY: 1.05
            }, 1400).to({
                scaleY: .95
            }, 1300).to({
                scaleY: 1
            }, 1200);
        }, i.prototype.setMoneyBitMap = function(e) {
            this.moneyBitMap.text = e;
        }, i.prototype.moneyTween = function() {
            var e = this;
            this.moneyBitMap.y = 0, this.moneyBitMap.visible = !0;
            var t = egret.Tween.get(this.moneyBitMap);
            t.to({
                y: this.moneyPosY
            }, 400, egret.Ease.bounceOut).call(function() {
                egret.Tween.removeTweens(e.moneyBitMap);
            });
        }, i;
    }(e.ItemRenderBase);
    e.IslandItemNode = t, __reflect(t.prototype, "game.IslandItemNode");
}(game || (game = {})), window.IslandItemNode = game.IslandItemNode;

var IslandLocation = function() {
    function e() {}
    return e.isLand1 = [ [ 204, 434 ], [ 386, 613 ], [ 230, 699 ], [ 101, 502 ], [ 398, 367 ] ], 
    e.isLand2 = [ [ 234, 454 ], [ 378, 613 ], [ 240, 703 ], [ 103, 476 ], [ 409, 360 ] ], 
    e.isLand3 = [ [ 214, 433 ], [ 365, 650 ], [ 263, 703 ], [ 108, 488 ], [ 382, 429 ] ], 
    e.isLand4 = [ [ 280, 441 ], [ 364, 656 ], [ 240, 693 ], [ 150, 490 ], [ 381, 396 ] ], 
    e.isLand5 = [ [ 238, 456 ], [ 364, 635 ], [ 230, 707 ], [ 102, 403 ], [ 343, 503 ] ], 
    e.isLand6 = [ [ 178, 422 ], [ 348, 651 ], [ 228, 695 ], [ 123, 355 ], [ 397, 465 ] ], 
    e.isLand7 = [ [ 193, 444 ], [ 358, 596 ], [ 188, 701 ], [ 136, 324 ], [ 345, 367 ] ], 
    e.isLand8 = [ [ 303, 414 ], [ 334, 655 ], [ 230, 693 ], [ 142, 405 ], [ 373, 473 ] ], 
    e.isLand9 = [ [ 215, 481 ], [ 334, 595 ], [ 250, 706 ], [ 102, 355 ], [ 403, 473 ] ], 
    e.isLand10 = [ [ 177, 483 ], [ 384, 605 ], [ 250, 698 ], [ 112, 395 ], [ 363, 453 ] ], 
    e.isLand11 = [ [ 204, 371 ], [ 378, 590 ], [ 173, 699 ], [ 113, 268 ], [ 408, 460 ] ], 
    e.isLand12 = [ [ 159, 435 ], [ 368, 641 ], [ 189, 696 ], [ 113, 414 ], [ 355, 370 ] ], 
    e.isLand13 = [ [ 207, 371 ], [ 358, 648 ], [ 231, 710 ], [ 110, 452 ], [ 415, 556 ] ], 
    e.isLand14 = [ [ 188, 493 ], [ 397, 635 ], [ 203, 709 ], [ 109, 382 ], [ 394, 438 ] ], 
    e.isLand15 = [ [ 57, 387 ], [ 333, 557 ], [ 148, 669 ], [ 130, 338 ], [ 338, 485 ] ], 
    e.isLand16 = [ [ 19, 335 ], [ 390, 682 ], [ 180, 709 ], [ 98, 381 ], [ 310, 481 ] ], 
    e.isLand17 = [ [ 108, 390 ], [ 267, 679 ], [ 162, 701 ], [ 146, 368 ], [ 362, 488 ] ], 
    e.isLand18 = [ [ 88, 381 ], [ 344, 582 ], [ 155, 720 ], [ 125, 376 ], [ 296, 463 ] ], 
    e.isLand19 = [ [ 176, 435 ], [ 344, 697 ], [ 181, 704 ], [ 130, 337 ], [ 380, 404 ] ], 
    e.isLand20 = [ [ 184, 363 ], [ 395, 652 ], [ 214, 697 ], [ 120, 381 ], [ 389, 447 ] ], 
    e.isLand21 = [ [ 228, 426 ], [ 384, 622 ], [ 196, 708 ], [ 132, 447 ], [ 414, 345 ] ], 
    e.isLand22 = [ [ 233, 428 ], [ 396, 622 ], [ 235, 703 ], [ 131, 436 ], [ 419, 388 ] ], 
    e.isLand23 = [ [ 217, 400 ], [ 381, 663 ], [ 213, 727 ], [ 120, 337 ], [ 398, 541 ] ], 
    e.isLand24 = [ [ 252, 355 ], [ 412, 623 ], [ 212, 707 ], [ 109, 427 ], [ 399, 392 ] ], 
    e.isLand26 = [ [ 320, 395 ], [ 402, 597 ], [ 198, 719 ], [ 116, 414 ], [ 417, 393 ] ], 
    e.isLand25 = [ [ 311, 407 ], [ 365, 635 ], [ 198, 690 ], [ 133, 409 ], [ 377, 532 ] ], 
    e.isLand27 = [ [ 315, 466 ], [ 356, 639 ], [ 213, 699 ], [ 144, 430 ], [ 426, 444 ] ], 
    e.isLand28 = [ [ 282, 476 ], [ 356, 617 ], [ 221, 700 ], [ 133, 352 ], [ 392, 403 ] ], 
    e.isLand29 = [ [ 261, 396 ], [ 342, 635 ], [ 213, 713 ], [ 112, 427 ], [ 404, 346 ] ], 
    e.isLand30 = [ [ 259, 494 ], [ 342, 628 ], [ 221, 706 ], [ 105, 348 ], [ 388, 519 ] ], 
    e.isLand31 = [ [ 290, 473 ], [ 342, 628 ], [ 222, 696 ], [ 120, 394 ], [ 388, 378 ] ], 
    e.isLand32 = [ [ 197, 476 ], [ 342, 605 ], [ 228, 703 ], [ 134, 375 ], [ 405, 448 ] ], 
    e.isLand33 = [ [ 197, 411 ], [ 353, 636 ], [ 219, 710 ], [ 104, 419 ], [ 394, 320 ] ], 
    e.isLand34 = [ [ 249, 464 ], [ 365, 680 ], [ 229, 705 ], [ 83, 346 ], [ 360, 314 ] ], 
    e.isLand35 = [ [ 192, 447 ], [ 338, 682 ], [ 211, 695 ], [ 134, 321 ], [ 363, 498 ] ], 
    e.isLand36 = [ [ 187, 422 ], [ 342, 648 ], [ 244, 697 ], [ 107, 421 ], [ 391, 447 ] ], 
    e.isLand37 = [ [ 244, 393 ], [ 365, 633 ], [ 230, 695 ], [ 143, 433 ], [ 366, 540 ] ], 
    e.isLand38 = [ [ 70, 305 ], [ 365, 579 ], [ 234, 693 ], [ 129, 456 ], [ 391, 420 ] ], 
    e.isLand39 = [ [ 180, 477 ], [ 370, 573 ], [ 162, 708 ], [ 144, 406 ], [ 377, 463 ] ], 
    e.isLand40 = [ [ 290, 473 ], [ 388, 607 ], [ 224, 700 ], [ 155, 493 ], [ 385, 373 ] ], 
    e.isLand41 = [ [ 307, 448 ], [ 352, 589 ], [ 184, 709 ], [ 150, 420 ], [ 397, 493 ] ], 
    e.isLand42 = [ [ 287, 471 ], [ 374, 637 ], [ 222, 696 ], [ 146, 425 ], [ 375, 472 ] ], 
    e.isLand43 = [ [ 216, 414 ], [ 374, 625 ], [ 163, 689 ], [ 117, 442 ], [ 401, 493 ] ], 
    e.isLand44 = [ [ 251, 486 ], [ 397, 561 ], [ 169, 692 ], [ 132, 435 ], [ 406, 501 ] ], 
    e.isLand45 = [ [ 251, 361 ], [ 368, 555 ], [ 161, 702 ], [ 175, 396 ], [ 381, 410 ] ], 
    e.isLand46 = [ [ 285, 457 ], [ 371, 617 ], [ 227, 704 ], [ 141, 511 ], [ 400, 534 ] ], 
    e.isLand47 = [ [ 281, 484 ], [ 386, 613 ], [ 211, 688 ], [ 133, 497 ], [ 387, 568 ] ], 
    e.isLand48 = [ [ 180, 435 ], [ 386, 644 ], [ 220, 699 ], [ 113, 486 ], [ 387, 361 ] ], 
    e.isLand49 = [ [ 209, 426 ], [ 386, 607 ], [ 221, 693 ], [ 93, 431 ], [ 393, 346 ] ], 
    e.isLand50 = [ [ 249, 461 ], [ 363, 628 ], [ 227, 693 ], [ 141, 430 ], [ 384, 477 ] ], 
    e.isLand51 = [ [ 220, 462 ], [ 386, 579 ], [ 239, 706 ], [ 86, 420 ], [ 398, 445 ] ], 
    e.isLand52 = [ [ 257, 464 ], [ 364, 599 ], [ 232, 699 ], [ 101, 425 ], [ 370, 408 ] ], 
    e.isLand53 = [ [ 182, 428 ], [ 386, 667 ], [ 259, 714 ], [ 103, 422 ], [ 395, 385 ] ], 
    e.isLand54 = [ [ 208, 437 ], [ 386, 599 ], [ 230, 698 ], [ 91, 437 ], [ 369, 414 ] ], 
    e.isLand55 = [ [ 193, 441 ], [ 363, 670 ], [ 246, 705 ], [ 81, 493 ], [ 376, 485 ] ], 
    e.isLand56 = [ [ 204, 451 ], [ 387, 650 ], [ 195, 689 ], [ 88, 444 ], [ 343, 446 ] ], 
    e.isLand57 = [ [ 239, 464 ], [ 386, 675 ], [ 239, 710 ], [ 74, 435 ], [ 394, 432 ] ], 
    e.isLand58 = [ [ 234, 485 ], [ 381, 584 ], [ 238, 680 ], [ 91, 430 ], [ 394, 470 ] ], 
    e.isLand59 = [ [ 227, 463 ], [ 386, 681 ], [ 260, 689 ], [ 118, 478 ], [ 399, 435 ] ], 
    e.isLand60 = [ [ 156, 432 ], [ 386, 645 ], [ 209, 704 ], [ 136, 401 ], [ 389, 479 ] ], 
    e.isLand61 = [ [ 178, 467 ], [ 348, 688 ], [ 258, 712 ], [ 137, 321 ], [ 398, 504 ] ], 
    e.isLand62 = [ [ 194, 462 ], [ 350, 645 ], [ 246, 697 ], [ 117, 345 ], [ 364, 493 ] ], 
    e.isLand63 = [ [ 162, 444 ], [ 328, 670 ], [ 215, 690 ], [ 111, 345 ], [ 367, 491 ] ], 
    e.isLand64 = [ [ 259, 421 ], [ 386, 613 ], [ 259, 699 ], [ 103, 458 ], [ 390, 478 ] ], 
    e.isLand65 = [ [ 227, 481 ], [ 384, 642 ], [ 236, 703 ], [ 108, 470 ], [ 367, 500 ] ], 
    e.isLand66 = [ [ 238, 425 ], [ 376, 621 ], [ 243, 696 ], [ 103, 471 ], [ 366, 454 ] ], 
    e.isLand67 = [ [ 214, 446 ], [ 394, 663 ], [ 250, 699 ], [ 101, 462 ], [ 346, 541 ] ], 
    e.isLand68 = [ [ 229, 408 ], [ 386, 703 ], [ 230, 715 ], [ 100, 482 ], [ 402, 431 ] ], 
    e.isLand69 = [ [ 99, 306 ], [ 305, 550 ], [ 176, 711 ], [ 88, 444 ], [ 366, 309 ] ], 
    e.building3Width = [ 84, 87, 61, 92, 110, 123, 157, 123, 91, 88, 150, 119, 84, 157, 191, 137, 177, 197, 156, 142, 135, 133, 144, 117, 129, 159, 133, 110, 127, 122, 133, 87, 121, 89, 117, 78, 120, 67, 199, 104, 123, 109, 200, 144, 217, 97, 128, 100, 160, 98, 107, 102, 125, 149, 106, 186, 105, 83, 114, 120, 71, 100, 138, 85, 114, 112, 71, 131, 218, 84 ], 
    e.building3Height = [ 108, 107, 80, 87, 104, 105, 62, 150, 94, 89, 133, 104, 106, 93, 203, 179, 127, 172, 140, 160, 116, 108, 98, 117, 125, 113, 99, 122, 107, 132, 137, 82, 118, 91, 72, 115, 122, 104, 104, 98, 111, 87, 94, 86, 103, 74, 59, 98, 139, 112, 144, 120, 85, 82, 78, 85, 118, 118, 82, 129, 132, 134, 163, 103, 95, 111, 108, 94, 204, 108 ], 
    e;
}();

__reflect(IslandLocation.prototype, "IslandLocation");

var IslandNode = function(e) {
    function t() {
        var t = e.call(this) || this;
        return t.yanMC1 = null, t.yanMC2 = null, t.yanMC3 = null, t.yanMC4 = null, t.yanMC5 = null, 
        t.islandId = 0, t.skinName = IslandNodeSkin, t.once(egret.Event.COMPLETE, t.createCompleteEvent, t), 
        t.once(egret.Event.REMOVED_FROM_STAGE, t.removeFunc, t), t;
    }
    return __extends(t, e), t.prototype.createCompleteEvent = function(e) {
        var t = this.name.substr(this.name.length - 1, 1), i = /^[0-9]$/;
        if (0 != i.test(t)) {
            var n = parseInt(t);
            this.islandId = n;
        }
    }, t.prototype.removeFunc = function() {
        var e = this;
        egret.Tween.removeTweens(e.islandBottom), egret.Tween.removeTweens(e.leftWave0), 
        egret.Tween.removeTweens(e.leftWave1), egret.Tween.removeTweens(e.rightWave0), egret.Tween.removeTweens(e.rightWave1), 
        egret.Tween.removeTweens(e.planet2), egret.Tween.removeTweens(e.planet3);
    }, t.prototype.initIslandView = function(e, t) {
        var i = islandModel.getIslandData(e).buildings;
        this.planet3.anchorOffsetY = islandModel.getBuilding3Height(islandModel.getIslandData(e).island);
        var n = islandModel.getIslandData(e).island + 1;
        this.islandBg.source = game.ResourcePath.getIslandImage(n);
        for (var o = 1; 6 > o; o++) {
            if (0 == i[o - 1].level) this["planet" + o].source = ""; else {
                this["planet" + o].source = game.ResourcePath.getIslandBuildings(islandModel.getIslandData(e).island + 1 + "_" + o + "_" + i[o - 1].level + "_" + i[o - 1].status);
                var a = islandModel.getCityPoints(islandModel.getIslandData(e).island + 1);
                this["planet" + o].x = a[o - 1][0], this["planet" + o].y = a[o - 1][1] - 233;
            }
            (3 == o || 4 == o || 5 == o) && (2 == i[o - 1].status ? this["gray" + o].visible = !0 : this["gray" + o].visible = !1), 
            1 == i[o - 1].status && 3 != o ? this["yanMC" + o] || (this["yanMC" + o] = new game.MoviePlayer("maoyan"), 
            this["yanMC" + o].x = Const.BuildingAttackPosX[o - 1] - 30, this["yanMC" + o].y = Const.BuildingAttackPosY[o - 1] - 223, 
            this["yanMC" + o].MovieClip && this["yanMC" + o].MovieClip.gotoAndPlay(-1, -1), 
            this["yanGroup" + o].addChild(this["yanMC" + o])) : this["yanMC" + o] && this["yanMC" + o].parent && (this["yanMC" + o].parent.removeChild(this["yanMC" + o]), 
            this["yanMC" + o] = null);
        }
        t || this.playEffect(), this.effectGroup.visible = !t;
    }, t.prototype.playEffect = function() {
        var e = this, t = egret.Tween.get(e.islandBottom, {
            loop: !0
        });
        t.to({
            scaleX: 1.1,
            scaleY: 1.1
        }, 1800).to({
            scaleX: 1,
            scaleY: 1
        }, 1600);
        var i = e.leftWave0.x, n = e.leftWave0.y, o = e.rightWave0.x, a = e.rightWave0.y, r = egret.Tween.get(e.leftWave0, {
            loop: !0
        });
        r.to({
            alpha: 1,
            x: i - 26,
            y: n + 29
        }, 1800).to({
            alpha: 0,
            x: i - 52,
            y: n + 57
        }, 1600).wait(3e3);
        var s = egret.Tween.get(e.leftWave1, {
            loop: !0
        });
        s.wait(3e3).to({
            alpha: 1,
            x: i - 26,
            y: n + 29
        }, 1800).to({
            alpha: 0,
            x: i - 52,
            y: n + 57
        }, 1600);
        var l = egret.Tween.get(e.rightWave0, {
            loop: !0
        });
        l.to({
            alpha: 1,
            x: o + 14,
            y: a + 37
        }, 2200).to({
            alpha: 0,
            x: o + 28,
            y: a + 73
        }, 2e3).wait(3800);
        var d = egret.Tween.get(e.rightWave1, {
            loop: !0
        });
        d.wait(3800).to({
            alpha: 1,
            x: o + 14,
            y: a + 37
        }, 2200).to({
            alpha: 0,
            x: o + 28,
            y: a + 73
        }, 2e3);
        var u = egret.Tween.get(e.planet2, {
            loop: !0
        });
        u.to({
            y: e.planet2.y + 10
        }, 2200).to({
            y: e.planet2.y
        }, 2e3);
        var h = egret.Tween.get(e.planet3, {
            loop: !0
        });
        h.to({
            scaleY: 1.05
        }, 1400).to({
            scaleY: .95
        }, 1300).to({
            scaleY: 1
        }, 1200);
    }, t;
}(eui.Component);

__reflect(IslandNode.prototype, "IslandNode"), window.IslandNode = IslandNode;

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.effect = null, e;
        }
        return __extends(i, t), i.prototype.onInit = function() {}, i.prototype.onOpen = function() {}, 
        i.prototype.initView = function() {
            var t = this, i = this;
            i.mapBg.scaleX = .2, i.contentGroup.visible = !1, util.setRemoteAvatar(i.headImg, playerModel.headImg), 
            i.line1.mask = new egret.Rectangle(0, 0, 0, 234), i.island2.alpha = 0, i.headGroup.alpha = 0, 
            i.islandName2.visible = !1;
            var n = (playerModel.island - 1) % playerModel.islandCount, o = playerModel.island % playerModel.islandCount;
            i.island1.source = e.ResourcePath.getIslandMapImage(n, 1), i.island2.source = e.ResourcePath.getIslandMapImage(o, 1), 
            i.islandName1.text = islandModel.mapInfo.islandNames[playerModel.island - 1], i.islandName2.text = islandModel.mapInfo.islandNames[playerModel.island], 
            t.playOpenEffect();
        }, i.prototype.playOpenEffect = function() {
            var t = this, i = this;
            soundModel.playSound(e.SoundType.SOUND_ISLAND_SHOW_MAP), this.headGroup.x = 174, 
            this.headGroup.y = 187, t.leftBoder.visible = !0, t.rightBoder.visible = !0;
            var n = egret.Tween.get(t.mapBg);
            n.to({
                scaleX: 1
            }, 500).call(function() {
                egret.Tween.removeTweens(t.mapBg), t.contentGroup.visible = !0, egret.Tween.get(t.headGroup).to({
                    alpha: 1
                }, 1200).wait(500).call(function() {
                    egret.Tween.removeTweens(t.headGroup);
                    for (var n = 1; 45 > n; n++) {
                        egret.setTimeout(function(e) {
                            t.line1.mask = new egret.Rectangle(0, 0, e / 44 * 155, 234);
                        }, this, 100 / 3 * n, n);
                    }
                    var o = egret.setTimeout(function() {
                        egret.Tween.get(t.island2).to({
                            alpha: 1
                        }, 400).call(function() {
                            egret.Tween.removeTweens(t.island2), t.islandName2.visible = !0;
                            var n = new egret.Point(174, 187), o = new egret.Point(219, 7), a = new egret.Point(253, -106), r = new egret.Point(310, 19), s = new MoveAction(t.headGroup, [ n, o, a, r ], 1500, egret.Ease.quadInOut, function() {
                                s = null, t.contentGroup.visible = !1;
                                var n = egret.Tween.get(t.mapBg);
                                n.to({
                                    scaleX: .1
                                }, 300).call(function() {
                                    egret.Tween.removeTweens(t.mapBg), hortor.WindowManager.hideWindow(e.WindowType.WINDOW_ISLANDOVEREFFECT), 
                                    egret.setTimeout(function() {
                                        hortor.NotificationManager.dispatch(e.NotificationType.ISLAND_NEXTISLAND);
                                    }, i, 200);
                                });
                                var o = egret.Tween.get(t.leftBoder);
                                o.to({
                                    x: 323
                                }, 300).call(function() {
                                    egret.Tween.removeTweens(t.leftBoder);
                                });
                                var a = egret.Tween.get(t.rightBoder);
                                a.to({
                                    x: 315
                                }, 300).call(function() {
                                    egret.Tween.removeTweens(t.rightBoder);
                                });
                            });
                        }), egret.clearTimeout(o);
                    }, this, 1500);
                });
            });
            var o = egret.Tween.get(t.leftBoder);
            o.to({
                x: 44
            }, 500).call(function() {
                egret.Tween.removeTweens(t.leftBoder);
            });
            var a = egret.Tween.get(t.rightBoder);
            a.to({
                x: 596
            }, 500).call(function() {
                egret.Tween.removeTweens(t.rightBoder);
            });
        }, i.prototype.onData = function() {
            this.initView();
        }, i.prototype.onClose = function() {
            egret.Tween.removeTweens(this.leftBoder), egret.Tween.removeTweens(this.rightBoder), 
            egret.Tween.removeTweens(this.mapBg), egret.Tween.removeTweens(this.island2), egret.Tween.removeTweens(this.headGroup);
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i;
    }(e.WindowBase);
    e.IslandOverEffectWindow = t, __reflect(t.prototype, "game.IslandOverEffectWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.effect = null, e;
        }
        return __extends(i, t), i.prototype.onInit = function() {}, i.prototype.onOpen = function() {}, 
        i.prototype.initView = function() {
            var t = this, i = this;
            i.okBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.okBtnFunc, this), i.bottomGroup.y = hortor.StageManager.stageHeight, 
            i.bottomGroup.visible = !1, soundModel.playSound(e.SoundType.SOUND_ISLAND_BOX_DROP), 
            i.energyReward.text = "x" + e.ComFunc.formatNumber(islandModel.energyReward), i.moneyReward.text = "x" + e.ComFunc.formatNumber(islandModel.moneyReward), 
            this.box || (this.box = new e.ArmaturePlayer("box"), this.addChild(this.box), this.box.x = hortor.StageManager.stageWidth / 2, 
            this.box.y = hortor.StageManager.stageHeight / 2, this.box.touchEnabled = !0, this.box.addEventListener(egret.TouchEvent.TOUCH_TAP, this.openBoxFunc, this)), 
            this.box.play("begin", 1, function() {
                soundModel.playSound(e.SoundType.SOUND_ISLAND_BOX_SHAKE, 0), t.box.play("loop", 0);
            });
        }, i.prototype.openBoxFunc = function() {
            var t = this;
            soundModel.stopSound(e.SoundType.SOUND_ISLAND_BOX_SHAKE), this.box && (this.box.touchEnabled = !1, 
            this.box.play("open", 1, function() {
                var i = {
                    energy: islandModel.energyReward,
                    money: islandModel.moneyReward
                };
                hortor.WindowManager.showWindow(e.WindowType.WINDOW_REWARD, i, null, null, function() {
                    t && t.okBtnFunc();
                });
            }));
        }, i.prototype.okBtnFunc = function() {
            if (EventCenter.sendEvent(EventConst.PassIslandOver), EventCenter.sendEvent(EventConst.RefreshWheelRedPoint), 
            islandModel.isMoving = !1, hortor.WindowManager.hideWindow(e.WindowType.WINDOW_ISLANDOVERREWARD), 
            hortor.NotificationManager.dispatch(e.NotificationType.ISLAND_NEXTISLAND_BACK), 
            playerModel.money += islandModel.moneyReward, EventCenter.sendEvent(EventConst.GoldChange), 
            playerModel.island >= playerModel.islandCount) {
                EventCenter.sendEvent(EventConst.AllIslandOver);
                var t = egret.setTimeout(function() {
                    EventCenter.sendEvent(EventConst.IslandMoveBack), egret.clearTimeout(t);
                }, this, 1e3);
            } else EventCenter.sendEvent(EventConst.IslandMoveBack);
            gateModel.guide[e.AcLockType.mine] && MapProxy.mapFullRedPoint && (MapProxy.mapFullRedPoint = !1, 
            MapProxy.refreshMapRedPoint()), 1 == playerModel.island && (e.PlatformManager.LogEvent("islandOver-1"), 
            EventCenter.sendEvent(EventConst.ShowMapBtn, {
                isShow: !0
            }));
        }, i.prototype.onClose = function() {
            this.okBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.okBtnFunc, this), 
            egret.Tween.removeTweens(this.bx1), egret.Tween.removeTweens(this.bottomGroup), 
            this.box && (this.box.dispose(), util.remove(this.box), this.box = null);
        }, i.prototype.onData = function() {
            hortor.NotificationManager.dispatch(e.NotificationType.ISLAND_HIDE_OVERGROUP);
            var t = hortor.WindowManager.isOpen(e.WindowType.WINDOW_SHAREISLAND);
            t && hortor.WindowManager.hideWindow(e.WindowType.WINDOW_SHAREISLAND), this.initView();
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i;
    }(e.WindowBase);
    e.IslandOverRewardWindow = t, __reflect(t.prototype, "game.IslandOverRewardWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.islandShare = !1, e.effect = null, e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.nextBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.nextBtnFunc, this), 
            this.inviteBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.shareBtnFunc, this);
        }, i.prototype.onOpen = function() {
            var t = this;
            t.bgImg.source = "island_share_bg_" + Math.floor((playerModel.island - 1) % 4) + "_png";
            var i = 0;
            playerModel.island < 22 ? i = 0 : playerModel.island < 47 ? i = 1 : playerModel.island < 72 ? i = 2 : playerModel.island < 89 && (i = 3), 
            t.iconImg.source = "island_share_map_" + i + "_png";
            var n = {
                island: playerModel.island - 1,
                buildings: [ {
                    level: 5,
                    status: 0
                }, {
                    level: 5,
                    status: 0
                }, {
                    level: 5,
                    status: 0
                }, {
                    level: 5,
                    status: 0
                }, {
                    level: 5,
                    status: 0
                } ],
                crowns: 0
            };
            this.islandNode = new IslandNode(), this.islandNode.initIslandView(n, !0), t.infoGroup.addChild(this.islandNode), 
            this.islandNode.x = -3, this.islandNode.y = 69, this.islandNode.scaleX = this.islandNode.scaleY = .8, 
            t.topImg1.y = -96, t.topImg2.y = -304, t.infoGroup.y = -655, t.inviteBtn.visible = !1, 
            egret.Tween.get(t.topImg1).to({
                y: 208
            }, 400, egret.Ease.sineOut).call(function() {
                egret.Tween.removeTweens(t.topImg1);
            }), egret.Tween.get(t.topImg2).to({
                y: 0
            }, 400, egret.Ease.sineOut).call(function() {
                egret.Tween.removeTweens(t.topImg2);
            }), egret.Tween.get(t.infoGroup).wait(800).call(function() {
                soundModel.playSound(e.SoundType.SOUND_ISLAND_PHOTO), t.lightRect.alpha = 1, egret.Tween.get(t.lightRect).wait(100).to({
                    alpha: 0
                }, 300).call(function() {
                    egret.Tween.removeTweens(t.lightRect);
                });
            }).to({
                y: 199
            }, 1e3).call(function() {
                t.inviteBtn.visible = !0, egret.Tween.removeTweens(t.infoGroup);
            });
        }, i.prototype.nextBtnFunc = function() {
            var t = this;
            soundModel.playSound(e.SoundType.SOUND_PANEL_OPEN);
            var i = this;
            return i.islandShare ? void this.nextIsland() : (hortor.SystemManager.isWxGame ? hortor.TipManager.alert("真的不想炫耀一下吗？", function() {
                t.shareBtnFunc();
            }, null, null, !1, null, "common_txt_qxy") : playerModel.canIslandShare ? hortor.TipManager.alert("分享立即获得能量*20", function() {
                t.shareBtnFunc();
            }, null, null, !1, null, "common_txt_qxy") : hortor.TipManager.alert("真的不想炫耀一下吗？", function() {
                t.shareBtnFunc();
            }, null, null, !1, null, "common_txt_qxy"), void (i.islandShare = !0));
        }, i.prototype.nextIsland = function() {
            console.log("下一个岛");
            var t = this;
            t.nextBtn.touchEnabled = !1, t.islandShare = !1, HttpService.post(e.ServerMsg.ISLAND_REWARD, "uid=" + playerModel.uid, function(t) {
                3 == playerModel.island && (playerModel.hasRecruit = !0), wheelModel.markRollerItems = util.deepClone(wheelModel.rollerItems), 
                islandModel.update(t), playerModel.update(t), wheelModel.update(t), playerModel.gainIslandReward = !1, 
                playerModel.canIslandShare = !1, islandModel.energyReward = t.energyReward, islandModel.moneyReward = t.moneyReward, 
                playerModel.money -= t.moneyReward, hortor.WindowManager.hideWindow(e.WindowType.WINDOW_SHAREISLAND), 
                console.log("新岛动画 islandWindow.playNewIslandEffet"), hortor.NotificationManager.dispatch("playNewIslandEffet"), 
                hortor.WindowManager.currentWindow = e.WindowType.WINDOW_ISLANDOVEREFFECT;
            });
        }, i.prototype.shareBtnFunc = function() {
            this.islandShare = !0;
            var t = islandModel.mapInfo.islandNames[playerModel.island - 1] || "敬请期待", i = t, n = playerModel.island, o = {
                title: {
                    $1: t
                },
                desc: {
                    $1: i
                },
                img: {
                    $1: n
                }
            };
            e.PlatformManager.share(Const.island, null, o);
        }, i.prototype.onData = function() {
            var e = this;
            e.inviteBtn.y += .5 * hortor.StageManager.stageOffHeight;
        }, i.prototype.onClose = function() {
            this.islandNode && this.islandNode.parent && (this.islandNode.parent.removeChild(this.islandNode), 
            this.islandNode = null);
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i;
    }(e.WindowBase);
    e.IslandShareWindow = t, __reflect(t.prototype, "game.IslandShareWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return t.call(this) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.setNotchFit(this.backBtn), this.setNotchFit(this.group0), this.setNotchFit(this.islandNameGroup);
        }, i.prototype.onOpen = function() {}, i.prototype.onClose = function() {
            this.onViewRemove(), this.onEventCenterRemove();
        }, i.prototype.onData = function() {
            this.onViewRegister(), this.onEventCenterRegister(), hortor.NotificationManager.dispatch(e.NotificationType.BG_ADJUST, {
                isUp: !0
            }), hortor.NotificationManager.dispatch(EventConst.WheelForSteal, {
                isShow: !1
            }), this.openPanel();
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.onViewRegister = function() {
            var e = this;
            e.delBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.delBtnFunc, this), e.joinBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.joinBtnFunc, this), 
            e.mailBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.mailBtnFunc, this), 
            e.backBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.closeBtnFunc, this);
            for (var t = 1; 6 > t; t++) this["headImgGroup" + t].addEventListener(egret.TouchEvent.TOUCH_TAP, this.headImgGroupFunc, this);
        }, i.prototype.onViewRemove = function() {
            var e = this;
            e.delBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.delBtnFunc, this), 
            e.joinBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.joinBtnFunc, this), 
            e.mailBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.mailBtnFunc, this), 
            e.backBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.closeBtnFunc, this);
            for (var t = 1; 6 > t; t++) this["headImgGroup" + t].removeEventListener(egret.TouchEvent.TOUCH_TAP, this.headImgGroupFunc, this);
            egret.Tween.removeTweens(e.islandBottom), egret.Tween.removeTweens(e.leftWave0), 
            egret.Tween.removeTweens(e.leftWave1), egret.Tween.removeTweens(e.rightWave0), egret.Tween.removeTweens(e.rightWave1), 
            egret.Tween.removeTweens(e.planet2), egret.Tween.removeTweens(e.planet3), egret.Tween.removeTweens(e.group), 
            egret.Tween.removeTweens(e.group0);
        }, i.prototype.onEventCenterRegister = function() {
            EventCenter.addEventListener(EventConst.toRankIslandsBack, this.WheelForRankBackFunc, this);
        }, i.prototype.onEventCenterRemove = function() {
            EventCenter.removeEventListener(EventConst.toRankIslandsBack, this.WheelForRankBackFunc, this);
        }, i.prototype.delBtnFunc = function() {
            var t = this;
            if (soundModel.buttonOpen(), this.freeDelGroup.visible) return void hortor.TipManager.alert("确定删除这个好友？", function() {
                HttpService.post(e.ServerMsg.FRIEND_DEL, "uid=" + playerModel.uid + "&fid=" + rankModel.selectedRankPlayer.uid, function(e) {
                    playerModel.updateAll(e), hortor.TipManager.tip("删除好友成功"), t.delGroup.visible && (t.delGroup.visible = !1), 
                    t.mailGroup.visible && (t.mailGroup.visible = !1);
                });
            });
            if (playerModel.ShipwreckCount > 0) {
                var i = '确定使用"友尽卷轴"删除好友？\n当前拥有' + playerModel.ShipwreckCount + "个";
                hortor.TipManager.alert(i, function() {
                    HttpService.post(e.ServerMsg.FRIEND_DEL, "uid=" + playerModel.uid + "&fid=" + rankModel.selectedRankPlayer.uid, function(e) {
                        playerModel.updateAll(e), hortor.TipManager.tip("删除好友成功"), t.delGroup.visible && (t.delGroup.visible = !1), 
                        t.mailGroup.visible && (t.mailGroup.visible = !1);
                    });
                });
            } else gateModel.iosPay ? HttpService.get(e.ServerMsg.SHOP_LIST, "uid=" + playerModel.uid, function(t) {
                var i = _.find(t.goods.prop, function(e) {
                    return "shipwreck" == e.goodsId;
                });
                i && hortor.WindowManager.showWindow(e.WindowType.WINDOW_SHOP_GOODS, i);
            }) : hortor.TipManager.tip("友尽卷轴不足");
        }, i.prototype.joinBtnFunc = function() {
            this.joinBtn.visible = !1, hortor.WindowManager.showWindow(e.WindowType.WINDOW_ADDFRIEND, {
                inviteCode: rankModel.selectedRankPlayer.inviteCode,
                requestType: 0
            });
        }, i.prototype.mailBtnFunc = function() {
            chatModel.showPrivateChat(rankModel.selectedRankPlayer.uid, rankModel.selectedRankPlayer.chatSign);
        }, i.prototype.openPanel = function() {
            var t = this, i = this;
            i.headImgGroup1.scaleX = i.headImgGroup1.scaleY = .8, i.headImgGroup2.scaleX = i.headImgGroup2.scaleY = 1, 
            i.headImgGroup3.scaleX = i.headImgGroup3.scaleY = .9, i.headImgGroup4.scaleX = i.headImgGroup4.scaleY = .9, 
            i.headImgGroup5.scaleX = i.headImgGroup5.scaleY = .9, util.setRemoteAvatar(i.headImg0, e.ComFunc.headImg(rankModel.selectedRankPlayer.headImg)), 
            i.name0.text = util.strSub(rankModel.selectedRankPlayer.name, 5), i.crowns0.text = rankModel.selectedRankPlayer.crowns + "", 
            i.group0.visible = !1, i.group0.scaleX = i.group0.scaleY = .1, HttpService.get(e.ServerMsg.SHOW_ISLAND, "uid=" + playerModel.uid + "&fid=" + rankModel.selectedRankPlayer.uid + "&chatSign=" + rankModel.selectedRankPlayer.chatSign, function(e) {
                rankModel.selectedRankPlayer.chatSign = e.chatSign, rankModel.selectedRankPlayer.inviteCode = "" == e.inviteCode ? rankModel.selectedRankPlayer.inviteCode : e.inviteCode, 
                i._data = e, t.initIslandOwnerInfo(e), i.group.x = 0, util.setScale(i.group0, 1), 
                t.showBtnView(e), t.playEffect();
            });
        }, i.prototype.initIslandOwnerInfo = function(t) {
            var i = this;
            t.gid ? (i.guildGroup.visible = !1, i.guildIcon.source = "guild_icon" + t.guildIcon, 
            i.guildName.text = t.guildName) : i.guildGroup.visible = !1, t.isVip ? i.vipIcon.source = "common_icon_vip1" : i.vipIcon.source = "common_icon_vip0", 
            t.gender > 0 ? (i.sexIcon.source = 1 == t.gender ? "common_img_portrait1" : "common_img_portrait0", 
            i.name0.textColor = 1 == t.gender ? Const.manNameColor : Const.womanNameColor, i.sexIcon.visible = !0) : i.sexIcon.visible = !1, 
            i.islandName.text = islandModel.mapInfo.islandNames[t.island];
            var n = islandModel.getIslandData(t).buildings;
            i.planet3.anchorOffsetY = islandModel.getBuilding3Height(islandModel.getIslandData(t).island);
            var o = islandModel.getIslandData(t).island + 1;
            i.islandBg.source = e.ResourcePath.getIslandImage(o);
            for (var a = 1; 6 > a; a++) {
                if (0 == n[a - 1].level) i["planet" + a].source = ""; else {
                    i["planet" + a].source = e.ResourcePath.getIslandBuildings(islandModel.getIslandData(t).island + 1 + "_" + a + "_" + n[a - 1].level + "_" + n[a - 1].status);
                    var r = islandModel.getCityPoints(islandModel.getIslandData(t).island + 1);
                    i["planet" + a].x = r[a - 1][0], i["planet" + a].y = r[a - 1][1] - 75;
                }
                (3 == a || 4 == a || 5 == a) && (2 == n[a - 1].status ? i["gray" + a].visible = !0 : i["gray" + a].visible = !1), 
                1 == n[a - 1].status && 3 != a ? i["yanMC" + a] || (i["yanMC" + a] = new e.MoviePlayer("maoyan"), 
                i["yanMC" + a].x = Const.BuildingAttackPosX[a - 1] - 30, i["yanMC" + a].y = Const.BuildingAttackPosY[a - 1] - 65, 
                i["yanMC" + a].MovieClip && i["yanMC" + a].MovieClip.gotoAndPlay(-1, -1), i["yanGroup" + a].addChild(i["yanMC" + a])) : i["yanMC" + a] && i["yanMC" + a].parent && (i["yanMC" + a].parent.removeChild(i["yanMC" + a]), 
                i["yanMC" + a] = null), this["headImgGroup" + a].visible = 2 == n[a - 1].status && n[a - 1].attackHeadImg, 
                util.setRemoteAvatar(this["headImg" + a], e.ComFunc.headImg(n[a - 1].attackHeadImg));
            }
        }, i.prototype.headImgGroupFunc = function(t) {
            var i = this, n = i._data.buildings, o = t.target.name, a = o.substr(o.length - 1, 1), r = parseInt(a);
            return playerModel.uid == n[r - 1].attackUid ? void hortor.TipManager.tip("这是你自己呦！") : void HttpService.get(e.ServerMsg.MORE_PLAYER, "uid=" + playerModel.uid + "&fid=" + n[r - 1].attackUid + "&checksum=" + n[r - 1].checksum + "&algorithm=&showDetails=true", function(t) {
                hortor.WindowManager.showWindow(e.WindowType.WINDOW_PLAYERINFO, {
                    playerInfo: t,
                    from: rankModel.selectedRankPlayer.fromType,
                    type: 0
                });
            });
        }, i.prototype.showBtnView = function(e) {
            var t = this;
            e.isFriend ? (e.isFreeDel ? t.freeDelGroup.visible = !0 : t.freeDelGroup.visible = !1, 
            t.delGroup.visible = !0, t.mailGroup.visible = !0, t.joinGroup.visible = !1) : (t.delGroup.visible = !1, 
            rankModel.selectedRankPlayer && rankModel.selectedRankPlayer.inviteCode && rankModel.selectedRankPlayer.inviteCode.length > 0 ? (t.joinGroup.visible = !0, 
            t.mailGroup.visible = !0) : (t.mailGroup.visible = !1, t.joinGroup.visible = !1), 
            rankModel.selectedRankPlayer && rankModel.selectedRankPlayer.fromType && "worldChat" == rankModel.selectedRankPlayer.fromType && (t.joinGroup.visible = !0, 
            t.mailGroup.visible = !1)), t.group0.visible = !0;
        }, i.prototype.WheelForRankBackFunc = function() {
            var t = this;
            t.delGroup.visible = !1, t.joinGroup.visible = !1, t.mailGroup.visible = !1, t.group0.visible = !1, 
            hortor.WindowManager.getWindow(e.WindowType.WINDOW_RANK) && hortor.WindowManager.hideWindow(e.WindowType.WINDOW_RANK), 
            egret.Tween.get(this.group).to({
                x: 640
            }, Const.moveTime1, egret.Ease.quadIn).call(function() {
                egret.Tween.removeTweens(t.group), rankModel.selectedRankPlayer.inviteCode = "", 
                hortor.ScreenManager.hideScreen(e.ScreenType.ISLANDSPACE), EventCenter.sendEvent(EventConst.WheelForRankBack);
            });
        }, i.prototype.playEffect = function() {
            var e = this, t = egret.Tween.get(e.islandBottom, {
                loop: !0
            });
            t.to({
                scaleX: 1.1,
                scaleY: 1.1
            }, 1800).to({
                scaleX: 1,
                scaleY: 1
            }, 1600);
            var i = e.leftWave0.x, n = e.leftWave0.y, o = e.rightWave0.x, a = e.rightWave0.y, r = egret.Tween.get(e.leftWave0, {
                loop: !0
            });
            r.to({
                alpha: 1,
                x: i - 26,
                y: n + 29
            }, 1800).to({
                alpha: 0,
                x: i - 52,
                y: n + 57
            }, 1600).wait(3e3);
            var s = egret.Tween.get(e.leftWave1, {
                loop: !0
            });
            s.wait(3e3).to({
                alpha: 1,
                x: i - 26,
                y: n + 29
            }, 1800).to({
                alpha: 0,
                x: i - 52,
                y: n + 57
            }, 1600);
            var l = egret.Tween.get(e.rightWave0, {
                loop: !0
            });
            l.to({
                alpha: 1,
                x: o + 14,
                y: a + 37
            }, 2200).to({
                alpha: 0,
                x: o + 28,
                y: a + 73
            }, 2e3).wait(3800);
            var d = egret.Tween.get(e.rightWave1, {
                loop: !0
            });
            d.wait(3800).to({
                alpha: 1,
                x: o + 14,
                y: a + 37
            }, 2200).to({
                alpha: 0,
                x: o + 28,
                y: a + 73
            }, 2e3);
            var u = egret.Tween.get(e.planet2, {
                loop: !0
            });
            u.to({
                y: e.planet2.y + 10
            }, 2200).to({
                y: e.planet2.y
            }, 2e3);
            var h = egret.Tween.get(e.planet3, {
                loop: !0
            });
            h.to({
                scaleY: 1.05
            }, 1400).to({
                scaleY: .95
            }, 1300).to({
                scaleY: 1
            }, 1200);
        }, i.prototype.closeBtnFunc = function() {
            hortor.ScreenManager.back(), hortor.NotificationManager.dispatch(e.NotificationType.BG_ADJUST, {
                isUp: !1
            }), hortor.NotificationManager.dispatch(EventConst.WheelForSteal, {
                isShow: !0
            });
        }, i;
    }(e.ScreenBase);
    e.IslandSpaceScreen = t, __reflect(t.prototype, "game.IslandSpaceScreen");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this, !1) || this;
            return e.bottomY = -88, e.timeIndex = 0, e.timeIndex0 = 0, e._startPosX = 0, e.isTouchBegin = !1, 
            e._moving = !1, e.bindEvent(), e.skinPath = "island/IslandWindowSkin", e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.initUI(), this.setItemsVisible(!1), this.initPlants(), this.playWaveEffect(), 
            this.headImgGroup();
        }, i.prototype.onData = function() {
            this.initUI(), this.setItemsVisible(!1), this.initPlants(), this.headImgGroup();
        }, i.prototype.prepare = function(e, t) {
            e();
        }, i.prototype.initUI = function() {
            this.islandGroup.height = e.GameConfig.stageHeight, this.islandGroup.scaleX = this.islandGroup.scaleY = .45, 
            this.islandGroup.horizontalCenter = 260, this.islandGroup.verticalCenter = 230, 
            this.addEventListener(egret.TouchEvent.TOUCH_BEGIN, this.touchBegin, this), this.addEventListener(egret.TouchEvent.TOUCH_MOVE, this.touchMove, this), 
            this.addEventListener(egret.TouchEvent.TOUCH_END, this.touchEnd, this), this.addEventListener(egret.TouchEvent.TOUCH_TAP, this.touchEvent, this), 
            this.nameGroup.addEventListener(egret.TouchEvent.TOUCH_TAP, this.openWorldMap, this);
        }, i.prototype.bindEvent = function() {
            var t = this;
            hortor.NotificationManager.add(EventConst.IslandMove, function() {
                t.callSafe(t.islandMove, t);
            }, this), hortor.NotificationManager.add(EventConst.WheelForSteal, function(e) {
                t.callSafe(t.isShowIsland, t, e);
            }, this), hortor.NotificationManager.add(e.NotificationType.ISLAND_BUILD_REFRESH, function(e) {
                t.callSafe(t.playBuildEffect, t, e);
            }, this), hortor.NotificationManager.add(e.NotificationType.ISLAND_BUILD_HIDE, function() {
                t.callSafe(t.hideBuildGroup, t);
            }, this), hortor.NotificationManager.add(e.NotificationType.ISLAND_NEXTISLAND, function() {
                t.callSafe(t.nextIslandEffect, t);
            }, this), hortor.NotificationManager.add(e.NotificationType.ISLAND_NEXTISLAND_BACK, function() {
                t.callSafe(t.toWheel, t);
            }, this), hortor.NotificationManager.add(e.NotificationType.ISLAND_WHEEL_TO_ATTACK, function() {
                t.callSafe(t.wheelToAttack, t);
            }, this), hortor.NotificationManager.add(e.NotificationType.ISLAND_WHEEL_TO_STEAL, function() {
                t.callSafe(t.wheelToAttack, t);
            }, this), hortor.NotificationManager.add(e.NotificationType.ISLAND_ATTACK_TO_WHEEL, function() {
                t.callSafe(t.attackToWheel, t);
            }, this), hortor.NotificationManager.add(e.NotificationType.ISLAND_STEAL_TO_WHEEL, function() {
                t.callSafe(t.attackToWheel, t);
            }, this), hortor.NotificationManager.add(e.NotificationType.ISLAND_BUILD_ATTACKED, function(e) {
                t.callSafe(t.playAttackedEffect, t, e);
            }, this), hortor.NotificationManager.add(e.NotificationType.ISLAND_RETURN_OVER, function() {
                t.callSafe(t.userRecallOver, t);
            }, this), hortor.NotificationManager.add(e.NotificationType.ISLAND_HIDE_OVERGROUP, function() {
                t.callSafe(t.hideOverGroup, t);
            }, this), EventCenter.addEventListener(EventConst.RefreshBuilds, function() {
                t.callSafe(t.initPlants, t);
            }, this);
        }, i.prototype.touchEvent = function(e) {
            var t = e.target;
            if (t) switch (console.log("target.name ==>", t.name), t.name) {
              case "playGroup":
                this.toWheel();
                break;

              case "headImgGroup1":
              case "headImgGroup2":
              case "headImgGroup3":
              case "headImgGroup4":
              case "headImgGroup5":
                this.headImgGroupFunc(t.name);
                break;

              case "beatBtn1":
              case "beatBtn2":
              case "beatBtn3":
              case "beatBtn4":
              case "beatBtn5":
                this.repairFunc(t.name);
                break;

              case "overBtnGroup":
                this.overBtnGroupFunc();
            }
        }, i.prototype.touchBegin = function(e) {
            this._startPosX = e.stageX, this.isTouchBegin = !0;
        }, i.prototype.touchMove = function(e) {
            if (!wheelModel.isRotate && !islandModel.isMoving && this.isTouchBegin && 2 != islandModel.islandStatus) {
                var t = this._startPosX - e.stageX;
                !this._moving && -30 > t && (this.isTouchBegin = !1, this.toWheel());
            }
        }, i.prototype.touchEnd = function(e) {
            wheelModel.isRotate || islandModel.isMoving || this.isTouchBegin && 2 != islandModel.islandStatus && !this._moving && this._startPosX - e.stageX < -50 && (this.isTouchBegin = !1, 
            this.toWheel());
        }, i.prototype.toWheel = function(t) {
            var i = this;
            void 0 === t && (t = !1), soundModel.playSound(e.SoundType.SOUND_VIEW_SWITCH_IN), 
            this._moving = !0, uiModel.onHide(e.UINameType.buildBtn), uiModel.onHide(e.UINameType.buildWheelBtn), 
            uiModel.onHide(e.UINameType.islandNameGroup), this.overEffect && (this.overEffect.play("2", 0), 
            soundModel.stopSound(e.SoundType.SOUND_FIREWORKS_DISPLAY)), playerModel.gainIslandReward || uiModel.boater.setBtnEffect(e.WheelBtnType.Anniu_build_down, this, !0), 
            this.setItemsVisible(!1), hortor.NotificationManager.dispatch(EventConst.IslandMoveBack, t), 
            hortor.NotificationManager.dispatch(e.NotificationType.BG_ADJUST, {
                isUp: !1,
                reset: t
            });
            var n = t ? 0 : Const.tweenTime1;
            egret.Tween.removeTweens(this.islandGroup), egret.Tween.get(this.islandGroup).to({
                horizontalCenter: 260,
                verticalCenter: 230,
                scaleX: .45,
                scaleY: .45
            }, n, egret.Ease.quadInOut).call(function() {
                egret.Tween.removeTweens(i.islandGroup);
            });
        }, i.prototype.setItemsVisible = function(e) {
            var t = playerModel.island >= playerModel.islandCount, i = playerModel.gainIslandReward;
            this.playGroup.visible = e, this.buttonGroup.visible = e && !t && !i, this.allOverGroup.visible = e && t, 
            this.overGroup.visible = e && !t && i;
        }, i.prototype.islandMove = function() {
            var t = this;
            this._moving = !0, uiModel.boater.registButtonFunc(null, this.openBuildWindow.bind(this), null), 
            egret.Tween.get(this.islandGroup).to({
                scaleX: 1,
                scaleY: 1,
                horizontalCenter: 0,
                verticalCenter: -100
            }, Const.tweenTime1, egret.Ease.quadInOut).call(function() {
                egret.Tween.removeTweens(t.islandGroup), uiModel.boater.setBtnEffect(e.WheelBtnType.Anniu_build_up, t, !0), 
                t.overEffect && (t.overEffect.play("1", 0), soundModel.playSound(e.SoundType.SOUND_FIREWORKS_DISPLAY, 0)), 
                playerModel.leaveDays > Const.recallLeaveDays ? (t.recallGroup.visible = !0, t.head_ar = new e.ArmaturePlayer("huifu"), 
                t.recallGroup.addChild(t.head_ar), t.head_ar.x = 320, t.head_ar.y = 690, t.head_ar.play("huifu", 1, t.playRecallBuild.bind(t)), 
                t.setItemsVisible(!1), t.head_ar.setSlotSkin("head_slot1", e.ComFunc.headImg(islandModel.robotAvatars[0]), 55, 55), 
                t.head_ar.setSlotSkin("head_slot2", e.ComFunc.headImg(islandModel.robotAvatars[1]), 55, 55), 
                t.head_ar.setSlotSkin("head_slot3", e.ComFunc.headImg(islandModel.robotAvatars[2]), 55, 55), 
                t.head_ar.setSlotSkin("head_slot4", e.ComFunc.headImg(islandModel.robotAvatars[3]), 55, 55), 
                t.head_ar.setSlotSkin("head_slot5", e.ComFunc.headImg(islandModel.robotAvatars[4]), 55, 55)) : (t.recallGroup.visible = !1, 
                t.setItemsVisible(!0), t._moving = !1), uiModel.onShow(e.UINameType.buildBtn, uiModel.boater.turnBtnGroup), 
                uiModel.onShow(e.UINameType.buildWheelBtn, t.playGroup), uiModel.onShow(e.UINameType.islandNameGroup, t.nameGroup), 
                t.autoTip();
            });
        }, i.prototype.autoTip = function() {
            playerModel.island < 1 && (islandModel.ableToBuildCount ? e.AutoTipManager.startTip(e.UINameType.buildBtn) : e.AutoTipManager.startTip(e.UINameType.buildWheelBtn));
        }, i.prototype.initPlants = function() {
            var t = islandModel.getIslandData(playerModel).buildings, i = islandModel.getIslandData(playerModel).island;
            this.mainLand.source = e.ResourcePath.getIslandImage(i + 1), this.planet3.anchorOffsetY = islandModel.getBuilding3Height(i), 
            console.log("--islandWindow-initPlants-:", t);
            for (var n = 1; 6 > n; n++) {
                0 == t[n - 1].level ? this["planet" + n].source = "" : this["planet" + n].source = e.ResourcePath.getIslandBuildings(i + 1 + "_" + n + "_" + t[n - 1].level + "_" + t[n - 1].status);
                var o = islandModel.getCityPoints(i + 1);
                this["planet" + n].x = o[n - 1][0], this["planet" + n].y = o[n - 1][1], n > 2 && (2 == t[n - 1].status ? this["gray" + n].visible = !0 : this["gray" + n].visible = !1), 
                1 == t[n - 1].status ? (3 == n || this["yanMC" + n] || (this["yanMC" + n] = hortor.ObjectPool.getObject(e.ArmaturePlayer, "paoeffects", "paoeffects"), 
                new e.MoviePlayer("maoyan"), this["yanGroup" + n].addChild(this["yanMC" + n]), this["yanMC" + n].x = Const.BuildingAttackPosX[n - 1], 
                this["yanMC" + n].y = Const.BuildingAttackPosY[n - 1] + 30, this["yanMC" + n].play("smoke", 0)), 
                this["headImgGroup" + n].visible = !1, this["beatBtn" + n + "Group"].visible = !0) : 2 == t[n - 1].status ? (this["yanMC" + n] && this["yanMC" + n].parent && (this["yanMC" + n].parent.removeChild(this["yanMC" + n]), 
                hortor.ObjectPool.disposeObject(this["yanMC" + n])), this["headImgGroup" + n].visible = 0 != t[n - 1].attackUid, 
                util.setRemoteAvatar(this["headImg" + n], t[n - 1].attackHeadImg), this["beatBtn" + n + "Group"].visible = !1) : (this["yanMC" + n] && this["yanMC" + n].parent && (this["yanMC" + n].parent.removeChild(this["yanMC" + n]), 
                hortor.ObjectPool.disposeObject(this["yanMC" + n])), this["beatBtn" + n + "Group"].visible = !1, 
                this["headImgGroup" + n].visible = !1);
            }
            this.islandName.text = islandModel.mapInfo.islandNames[playerModel.island] || "敬请期待", 
            playerModel.gainIslandReward ? this.overEffect || (this.overEffect = new e.ArmaturePlayer("guodao_yanhua"), 
            this.overEffect.scaleX = this.overEffect.scaleY = 2, this.overEffect.x = 320, this.overEffect.y = 650, 
            this.overGroup1.addChild(this.overEffect), this.overEffect.play(0 == islandModel.islandStatus ? "1" : "2", 0), 
            0 == islandModel.islandStatus ? soundModel.playSound(e.SoundType.SOUND_FIREWORKS_DISPLAY, 0) : soundModel.stopSound(e.SoundType.SOUND_FIREWORKS_DISPLAY)) : this.overEffect && this.overEffect.parent && (this.overEffect.parent.removeChild(this.overEffect), 
            this.overEffect.dispose(), this.overEffect = null, soundModel.stopSound(e.SoundType.SOUND_FIREWORKS_DISPLAY));
        }, i.prototype.playPlanet2Effect = function() {}, i.prototype.playWaveEffect = function() {
            var e = egret.Tween.get(this.islandBottom, {
                loop: !0
            });
            e.to({
                scaleX: 1.1,
                scaleY: 1.1
            }, 1800).to({
                scaleX: 1,
                scaleY: 1
            }, 1600);
            var t = this.leftWave0.x, i = this.leftWave0.y, n = this.rightWave0.x, o = this.rightWave0.y, a = egret.Tween.get(this.leftWave0, {
                loop: !0
            });
            a.to({
                alpha: 1,
                x: t - 26,
                y: i + 29
            }, 1800).to({
                alpha: 0,
                x: t - 52,
                y: i + 57
            }, 1600).wait(3e3);
            var r = egret.Tween.get(this.leftWave1, {
                loop: !0
            });
            r.wait(3e3).to({
                alpha: 1,
                x: t - 26,
                y: i + 29
            }, 1800).to({
                alpha: 0,
                x: t - 52,
                y: i + 57
            }, 1600);
            var s = egret.Tween.get(this.rightWave0, {
                loop: !0
            });
            s.to({
                alpha: 1,
                x: n + 14,
                y: o + 37
            }, 2200).to({
                alpha: 0,
                x: n + 28,
                y: o + 73
            }, 2e3).wait(3800);
            var l = egret.Tween.get(this.rightWave1, {
                loop: !0
            });
            l.wait(3800).to({
                alpha: 1,
                x: n + 14,
                y: o + 37
            }, 2200).to({
                alpha: 0,
                x: n + 28,
                y: o + 73
            }, 2e3);
            var d = egret.Tween.get(this.planet3, {
                loop: !0
            });
            d.to({
                scaleY: 1.05
            }, 1400).to({
                scaleY: .95
            }, 1300).to({
                scaleY: 1
            }, 1200);
        }, i.prototype.headImgGroup = function() {
            this.headImgGroup1.scaleX = this.headImgGroup1.scaleY = .8, this.headImgGroup2.scaleX = this.headImgGroup2.scaleY = 1, 
            this.headImgGroup3.scaleX = this.headImgGroup3.scaleY = .9, this.headImgGroup4.scaleX = this.headImgGroup4.scaleY = .9, 
            this.headImgGroup5.scaleX = this.headImgGroup5.scaleY = .9, util.initBtnAnchorNew(this.headImgGroup1, .9, .8, !0), 
            util.initBtnAnchorNew(this.headImgGroup2, 1.1, 1, !0), util.initBtnAnchorNew(this.headImgGroup3, 1, .9, !0), 
            util.initBtnAnchorNew(this.headImgGroup4, 1, .9, !0), util.initBtnAnchorNew(this.headImgGroup5, 1, .9, !0);
        }, i.prototype.headImgGroupFunc = function(t) {
            var i = t.substr(t.length - 1, 1), n = parseInt(i), o = islandModel.getIslandData(playerModel).buildings;
            console.log("islandWindow-headImgGroupFunc=", o), HttpService.get(e.ServerMsg.MORE_PLAYER, "uid=" + playerModel.uid + "&fid=" + o[n - 1].attackUid + "&checksum=" + o[n - 1].checksum + "&algorithm=&showDetails=true", function(t) {
                hortor.WindowManager.showWindow(e.WindowType.WINDOW_PLAYERINFO, {
                    playerInfo: t,
                    from: Const.Buildings
                });
            });
        }, i.prototype.repairFunc = function(t) {
            var i = this, n = t.substr(t.length - 1, 1), o = parseInt(n), a = islandModel.getIslandData(playerModel).buildings;
            if (1 != a[o - 1].status) return void hortor.TipManager.bubble("建筑已经被摧毁了,快去看看谁干的");
            playerModel.island;
            return playerModel.money < .5 * islandModel.buildingCost[o - 1].costs[islandModel.buildings[o - 1].level - 1] ? void this.checkPopView() : (this["headImgGroup" + o].visible = !1, 
            this["beatBtn" + o + "Group"].visible = !1, void HttpService.post(e.ServerMsg.REPAIR, {
                uid: playerModel.uid,
                island: playerModel.island,
                building: o - 1
            }, function(e) {
                e && (playerModel.updateAll(e), islandModel.update(e), i.playBuildEffect({
                    index: o - 1,
                    isRepair: !0
                }));
            }));
        }, i.prototype.checkPopView = function() {
            !playerModel.gotNewbieGift && playerModel.rollTotalCount >= 10 ? hortor.WindowManager.showWindow(e.WindowType.WINDOW_NEWBIE_GIFT) : playerModel.energy > 0 ? hortor.TipManager.bubble("金币不足，快去转转盘！") : hortor.TipManager.bubble("金币不足!");
        }, i.prototype.playRecallBuild = function() {
            var t = this;
            this.head_ar && (this.head_ar.parent && this.head_ar.parent.removeChild(this.head_ar), 
            this.head_ar.dispose()), soundModel.playSound(e.SoundType.SOUND_UPGRADE_BUILD);
            for (var i = 0; 5 > i; i++) for (var n = 0; 5 > n; n++) {
                var o = hortor.ObjectPool.getObject(e.ArmaturePlayer, "buildeffects", "buildeffects");
                o.x = Const.BuildingAttackPosX[n], o.y = Const.BuildingAttackPosY[n], this.buildingsGroup.addChild(o), 
                o.play("build_yanwu", 1, function() {
                    o && o.parent && o.parent.removeChild(o), hortor.ObjectPool.disposeObject(o);
                }, this);
            }
            var a = egret.setTimeout(function() {
                egret.clearTimeout(a);
                var i = new e.ArmaturePlayer("huifutexiao");
                t.recallGroup.addChild(i), i.x = 320, i.y = 670, i.play("huifutexiao", 1, function() {
                    i && i.parent && i.parent.removeChild(i), i.dispose();
                }, t), soundModel.playSound(e.SoundType.SOUND_USERRECALL_3), islandModel.buildings = islandModel.userRecallBuildings, 
                t.initPlants();
                for (var n = [ [ 245, 278 ], [ 425, 578 ], [ 235, 488 ], [ 123, 408 ], [ 375, 388 ] ], o = 0; 5 > o; o++) {
                    var r = new e.ReturnHeadItem(o);
                    t.recallGroup.addChild(r), r.x = n[o][0], r.y = n[o][1];
                }
            }, this, 1400);
        }, i.prototype.isShowIsland = function(e) {
            this.islandGroup.visible = e.isShow;
        }, i.prototype.overBtnGroupFunc = function() {
            soundModel.playSound(e.SoundType.SOUND_PANEL_OPEN), this.playGroup.visible = !1, 
            this.overGroup.visible = !1, islandModel.isMoving = !0, hortor.WindowManager.currentWindow = e.WindowType.WINDOW_SHAREISLAND;
        }, i.prototype.playBuildEffect = function(t) {
            var i = this, n = t.index, o = t.isRepair;
            soundModel.playSound(e.SoundType.SOUND_UPGRADE_BUILD);
            var a = hortor.ObjectPool.getObject(e.ArmaturePlayer, "buildeffects", "buildeffects");
            a.x = Const.BuildingAttackPosX[n], a.y = Const.BuildingAttackPosY[n], this.buildingsGroup.addChild(a), 
            a.play("build_yanwu", 1, function() {
                o || i.crownsChange(n), i.initPlants(), playerModel.island - 1 == islandModel.island && (i.overGroup.visible || soundModel.playSound(e.SoundType.SOUND_LEVEL_SUCCESS), 
                i.setItemsVisible(!0));
            }, this);
        }, i.prototype.shieldEffectFunc = function() {
            var e = this;
            egret.Tween.removeTweens(e.defineImg), e.defineGroup.visible = !1, e.defineImg.alpha = 1, 
            e.defineImg.scaleX = e.defineImg.scaleY = 1, e.defineGroup.visible = !0, egret.Tween.get(e.defineImg).to({
                scaleX: .95,
                scaleY: .95
            }, 150).to({
                scaleX: 1,
                scaleY: 1
            }, 150).wait(1e3).to({
                alpha: 0
            }, 500).call(function() {
                egret.Tween.removeTweens(e.defineImg), e.defineGroup.visible = !1, e.defineImg.alpha = 1;
            });
        }, i.prototype.playAttackedEffect = function(t) {
            if (islandModel.islandStatus == e.IslandStatus.BUILD) {
                var i = t.values[1], n = this, o = new e.ArmaturePlayer("paodan"), a = [ -100, hortor.StageManager.stageWidth + 100 ], r = Math.floor(Math.random() * a.length);
                o.x = a[r], o.y = 300, o.anchorOffsetX = 56, o.anchorOffsetY = 56, o.play("paodan", 0), 
                this.addChild(o), soundModel.playSound(e.SoundType.SOUND_BOMB_FLYING);
                var s = 0 == t.values[0], l = 1 == t.values[0], d = 2 == t.values[0], u = 3 == t.values[0], h = 5 == t.values[0], c = 6 == t.values[0], p = Const.BuildingAttackPosX[i], g = Const.BuildingAttackPosY[i];
                egret.Tween.get(o).to({
                    x: p,
                    y: g,
                    scaleX: .4,
                    scaleY: .4
                }, 600, egret.Ease.sineIn).call(function() {
                    if (egret.Tween.removeTweens(o), s || l || h || c) soundModel.playSound(e.SoundType.SOUND_CANNON_HIT_SHEILD), 
                    egret.Tween.removeTweens(o), egret.Tween.get(o).to({
                        x: Const.BOOMFlipPosX[i],
                        y: Const.BOOMFlipPosY[i],
                        scaleX: .4,
                        scaleY: .4
                    }, 500).call(function() {
                        egret.Tween.removeTweens(o), o.parent.removeChild(o), o.dispose();
                    }), n.paImg.visible = !0, n.paImg.alpha = 1, n.paImg.x = Const.BuildingAttackPosX[i], 
                    n.paImg.y = Const.BuildingAttackPosY[i], egret.Tween.get(n.paImg).to({
                        alpha: 0
                    }, 300).call(function() {
                        egret.Tween.removeTweens(n.paImg);
                    }), n.shieldEffectFunc(); else if ((d || u) && (o && o.parent && (o.parent.removeChild(o), 
                    o.dispose()), soundModel.playSound(e.SoundType.SOUND_BOMB_EXPLODE), n)) {
                        var a = islandModel.buildings, r = t.values[1];
                        if (2 == a[r].status) {
                            n["headImgGroup" + (r + 1)].visible = 0 != a[r].attackUid, util.setRemoteAvatar(n["headImgGroup" + (r + 1)], a[r].attackHeadImg), 
                            n["beatBtn" + (r + 1) + "Group"].visible && (n["beatBtn" + (r + 1) + "Group"].visible = !1);
                            var p = n["headImgGroup" + (r + 1)].y;
                            n["headImgGroup" + (r + 1)].alpha = 0;
                            var g = p - 50;
                            n["headImgGroup" + (r + 1)].y = g, egret.Tween.get(n["headImgGroup" + (r + 1)]).to({
                                y: p,
                                alpha: 1
                            }, 400).call(function() {
                                n && n.initPlants();
                            });
                        } else n.initPlants();
                    }
                });
            }
        }, i.prototype.showBuildGroup = function() {
            var t = this;
            playerModel.gainIslandReward || uiModel.boater.boaterUp(function() {
                uiModel.boater.setBtnEffect(e.WheelBtnType.Anniu_build_up, t, !0);
            });
        }, i.prototype.hideBuildGroup = function() {
            uiModel.boater.setBtnEffect(e.WheelBtnType.Anniu_build_down, this, !0), uiModel.boater.boaterDown();
        }, i.prototype.nextIslandEffect = function() {
            var t = this;
            this._moving = !0, egret.Tween.get(this.islandGroup).to({
                horizontalCenter: -640
            }, Const.tweenTime1, egret.Ease.quadInOut).call(function() {
                egret.Tween.removeTweens(t.islandGroup), t.initPlants(), t.islandGroup.horizontalCenter = 640, 
                t.overEffect && t.overEffect.parent && (t.overEffect.parent.removeChild(t.overEffect), 
                t.overEffect.dispose(), t.overEffect = null, soundModel.stopSound(e.SoundType.SOUND_FIREWORKS_DISPLAY)), 
                egret.Tween.get(t.islandGroup).to({
                    horizontalCenter: 0
                }, Const.tweenTime1, egret.Ease.quadInOut).call(function() {
                    egret.Tween.removeTweens(t.islandGroup), hortor.WindowManager.currentWindow = e.WindowType.WINDOW_ISLANDOVERREWARD;
                });
            });
        }, i.prototype.nextIslandEffectBack = function() {
            var e = this;
            this.setItemsVisible(!0), this.showBuildGroup(), egret.Tween.get(this.islandGroup).to({
                horizontalCenter: 0
            }, Const.moveTime1, egret.Ease.quadInOut).call(function() {
                egret.Tween.removeTweens(e.islandGroup), e._moving = !1;
            });
        }, i.prototype.wheelToAttack = function() {
            var e = this;
            egret.Tween.get(this.islandGroup).to({
                horizontalCenter: 900
            }, Const.tweenTime1, egret.Ease.quadInOut).call(function() {
                egret.Tween.removeTweens(e.islandGroup);
            });
        }, i.prototype.attackToWheel = function(e) {
            var t = this;
            void 0 === e && (e = !1);
            var i = e ? 0 : Const.tweenTime1;
            egret.Tween.get(this.islandGroup).to({
                horizontalCenter: 260
            }, i, egret.Ease.quadInOut).call(function() {
                egret.Tween.removeTweens(t.islandGroup);
            });
        }, i.prototype.openBuildWindow = function() {
            soundModel.buttonOpen(), this._moving || playerModel.leaveDays > Const.recallLeaveDays || hortor.WindowManager.showWindow(e.WindowType.WINDOW_ISLANDBUIND, null, null, null, this.autoTip.bind(this));
        }, i.prototype.crownsChange = function(t) {
            soundModel.playSound(e.SoundType.SOUND_UPGRADE_BUILD_DONE);
            var i = hortor.ObjectPool.getObject(eui.Image, "crownsStar", "crownsStar");
            i.source = "common_img_zjm2", i.x = Const.BuildingAttackPosX[t] - 35, i.y = Const.BuildingAttackPosY[t] + 50, 
            this.addChild(i), egret.Tween.get(i).wait(50).to({
                scaleX: 1.5,
                scaleY: 1.5,
                y: Const.BuildingAttackPosY[t] - 100
            }, 300, egret.Ease.quadOut).to({
                y: Const.BuildingAttackPosY[t]
            }, 300, egret.Ease.quadIn).wait(200).to({
                scaleX: 1,
                scaleY: 1,
                x: 9,
                y: 9
            }, 600, egret.Ease.quartIn).call(function() {
                egret.Tween.removeTweens(i), i.parent.removeChild(i), hortor.ObjectPool.disposeObject(i), 
                hortor.NotificationManager.dispatch(e.NotificationType.FACEUI_corwns_change);
            });
        }, i.prototype.userRecallOver = function() {
            this.playGroup.visible = !0, this.recallGroup.visible = !1, this.recallGroup.removeChildren(), 
            islandModel.robotAvatars = null, playerModel.leaveDays = 0, this._moving = !1;
        }, i.prototype.hideOverGroup = function() {
            this.overGroup && (this.overGroup.visible = !1);
        }, i.prototype.openWorldMap = function() {
            return soundModel.buttonOpen(), playerModel.highestCrowns < Const.mapLimit ? void e.ComFunc.openComConfirmPanel(e.AcLockType.map) : void hortor.ScreenManager.showScreen(e.ScreenType.WORLD_SCREEN);
        }, i;
    }(e.WindowBase);
    e.IslandWindow = t, __reflect(t.prototype, "game.IslandWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return t.call(this) || this;
        }
        return __extends(i, t), i.prototype.onData = function() {
            var e = this.data.itemPos;
            this.group.x = e.x + 50, this.group.y = e.y;
            var t = this.data.itemData, i = jigsawModel.jigsawInfo, n = t.id - 1;
            if (this.btnBg.height = 256, this.useBtn.enabled = !0, -1 == n) {
                this.sendBtn.visible = !1, this.exchangeBtn.visible = !1, this.btnBg.height = 110;
                for (var o = !0, a = 0; 9 > a; a++) if (!i.pieces[a]) {
                    o = !1;
                    break;
                }
                o && (this.useBtn.enabled = !1);
            } else this.useBtn.enabled = !i.pieces[n];
            i.RewardCount >= i.rewardLimit && (this.useBtn.enabled = !1);
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.sendBtnFunc = function() {
            hortor.WindowManager.showWindow(e.WindowType.WINDOW_JIGSAWFRIEND);
        }, i.prototype.exchangeBtnFunc = function() {
            hortor.WindowManager.showWindow(e.WindowType.WINDOW_JIGSAW_EXCHANG);
        }, i.prototype.useBtnFunc = function() {
            var t = this.data.itemData;
            this.useBtn.enabled = !1;
            var i = 0 == t.id;
            i ? hortor.WindowManager.showWindow(e.WindowType.WINDOW_JIGSAWUSEMAGNA) : (this.useRequest(), 
            this.hide());
        }, i.prototype.useRequest = function() {
            var t = this.data.itemData, i = this.data.itemPos;
            HttpService.post(e.ServerMsg.JIGSAW_UPDATE, "uid=" + playerModel.uid + "&idx=" + t.id + "&isLoad=true", function(e) {
                jigsawModel.update(e), hortor.NotificationManager.dispatch(EventConst.UseJigsaw, {
                    jigsawId: t.id,
                    startX: i.x + 50,
                    isAllInOne: !1
                });
            });
        }, i;
    }(e.ComAcPropBtnWindow);
    e.JigsawBtnWindow = t, __reflect(t.prototype, "game.JigsawBtnWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            t.prototype.onInit.call(this), this.list.itemRenderer = e.JigsawFriendItem;
        }, i.prototype.onData = function() {
            this.desc.text = "好友互换碎片，可以更快凑齐哦！", this.showAllView(!1);
        }, i;
    }(e.ComFriendListWindow);
    e.JigsawExchangeListWindow = t, __reflect(t.prototype, "game.JigsawExchangeListWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            t.prototype.onInit.call(this), this.list.itemRenderer = e.JigsawFriendItem;
        }, i.prototype.onData = function() {
            this.desc.text = "好友互换碎片，可以更快凑齐哦！", this.showAllView(!0);
        }, i;
    }(e.ComFriendListWindow);
    e.JigsawFriendListWindow = t, __reflect(t.prototype, "game.JigsawFriendListWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onData = function() {
            this.inputText.text = "";
        }, i.prototype.getFunc = function() {
            var e = new RegExp("[0-9]+"), t = this.inputText.text;
            e.test(t) && parseInt(t) > 999 && parseInt(t) < 1e4 ? this.sendJigsawReceive() : (this.inputText.text = "", 
            hortor.TipManager.alert("密码错误，请确认后重试"));
        }, i.prototype.sendJigsawReceive = function() {
            var t = this, i = this.data;
            HttpService.post(e.ServerMsg.JIGSAW_RECEIVE, "uid=" + playerModel.uid + "&logId=" + i.logId + "&password=" + this.inputText.text, function(e) {
                var n = jigsawModel.jigsawInfo.bags[i.pieceNum - 1], o = e.bags[i.pieceNum - 1];
                o > n ? (jigsawModel.jigsawInfo = e, hortor.NotificationManager.dispatch(EventConst.sendJigsaw, {
                    logId: i.logId
                }), t.hide(), hortor.TipManager.bubble("领取成功")) : hortor.TipManager.alert("密码错误，请确认后重试");
            });
        }, i;
    }(e.ComGetPropWindow);
    e.JigsawGetPropWindow = t, __reflect(t.prototype, "game.JigsawGetPropWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.initEvent = e.addEventFunc.bind(e), e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            t.prototype.onInit.call(this), this.list.itemRenderer = e.JigsawNewsItem;
        }, i.prototype.addEventFunc = function() {
            hortor.NotificationManager.add(EventConst.sendJigsaw, this.refreshListFunc, this);
        }, i.prototype.onData = function() {
            jigsawModel.newJigsawNews = !1, gateModel.updateGate(e.ActivityType.Jigsaw), this.logs = this.data.logs;
        }, i.prototype.prepare = function(t, i) {
            HttpService.get(e.ServerMsg.JIGSAW_LOG, "uid=" + playerModel.uid, function(e) {
                t(e);
            }, i);
        }, i.prototype.refreshListFunc = function(e) {
            if (this.isOpen) {
                var t = e.logId, i = this.logs, n = _.find(i, function(e) {
                    return e.logId == t;
                });
                n && (n.gotPiece = !0), this.logs = i;
            }
        }, i;
    }(e.ComNewsWindow);
    e.JigsawNewsWindow = t, __reflect(t.prototype, "game.JigsawNewsWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.pos = [ {
                x: 174,
                y: 186
            }, {
                x: 257,
                y: 186
            }, {
                x: 339,
                y: 186
            }, {
                x: 173,
                y: 269
            }, {
                x: 256,
                y: 269
            }, {
                x: 339,
                y: 269
            }, {
                x: 173,
                y: 352
            }, {
                x: 256,
                y: 351
            }, {
                x: 339,
                y: 352
            } ], e.effect = null, e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            for (var t = 0; 9 > t; t++) {
                var i = t + 1;
                this["piece" + t].source = e.ResourcePath.getColorJigsaw(i);
            }
        }, i.prototype.onOpen = function() {
            this.showAction();
        }, i.prototype.showAction = function() {
            for (var e = this, t = function(t) {
                if (4 != t) {
                    var n = egret.Tween.get(i["piece" + t]), o = i.pos[t];
                    n.to({
                        x: o.x,
                        y: o.y
                    }, 500, egret.Ease.quadIn).call(function() {
                        egret.Tween.removeTweens(e["piece" + t]);
                    });
                }
            }, i = this, n = 0; 9 > n; n++) t(n);
            var o = egret.setTimeout(function() {
                egret.clearTimeout(o), e.light.visible = !0;
                var t = egret.Tween.get(e.light, {
                    loop: !0
                });
                t.to({
                    rotation: 360
                }, 2e3);
            }, this, 520), a = egret.setTimeout(function() {
                egret.clearTimeout(a), egret.Tween.removeTweens(e.light);
                var t = egret.Tween.get(e.light);
                t.to({
                    alpha: 0
                }, 300);
                var i = egret.Tween.get(e.jigsawGroup);
                i.to({
                    scaleX: 1.1,
                    scaleY: 1.1
                }, 200).to({
                    scaleX: 1,
                    scaleY: 1
                }, 200).to({
                    scaleX: .1,
                    scaleY: .1,
                    y: e.jigsawGroup.y + 290,
                    x: 70
                }, 800, egret.Ease.quadOut).call(function() {
                    e.hide(), hortor.NotificationManager.dispatch(EventConst.CheckJigsawGift);
                });
            }, this, 1e3);
            hortor.SoundManager.playSound("common_award");
        }, i;
    }(e.WindowBase);
    e.JigsawOverWindow = t, __reflect(t.prototype, "game.JigsawOverWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.addClick(this.getBtn, this.getBtnFunc, this);
        }, i.prototype.onData = function() {
            var t = jigsawModel.jigsawInfo;
            if (this.energyIcon.source = e.ItemManager.getItemInfo("energy").icon, this.moneyIcon.source = e.ItemManager.getItemInfo("money").icon, 
            _.isEmpty(t.rewardList)) this.numL0.text = "???", this.numL1.text = "???", this.numL2.text = "???"; else {
                var i = t.rewardList;
                this.numL0.text = e.ComFunc.formatNumber(i.energy), this.numL1.text = e.ComFunc.formatNumber(i.money);
                var n = "cookie";
                i[n] || (n = "potion"), i[n] || (n = "horn");
                var o = e.ItemManager.getItemInfo(n);
                this.numL2.text = e.ComFunc.formatNumber(i[n]), this.icon2.source = o.icon;
            }
            this.getBtn.enabled = !_.isEmpty(t.rewardList);
        }, i.prototype.getBtnFunc = function() {
            var t = this, i = jigsawModel.jigsawInfo;
            if (!_.isEmpty(i.rewardList)) {
                var n = i.rewardList;
                this.getBtn.enabled = !1, HttpService.post(e.ServerMsg.JIGSAW_COMPOSE, "uid=" + playerModel.uid, function(i) {
                    hortor.WindowManager.showWindow(e.WindowType.WINDOW_REWARD, n), jigsawModel.update(i), 
                    playerModel.update(i), hortor.NotificationManager.dispatch(EventConst.CheckJigsawGift), 
                    hortor.NotificationManager.dispatch(EventConst.JigsawRefreshTop), EventCenter.sendEvent(EventConst.ReportJigsawComplete), 
                    t.hide();
                });
            }
        }, i;
    }(e.WindowBase);
    e.JigsawRewardWindow = t, __reflect(t.prototype, "game.JigsawRewardWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onData = function() {
            this.desc.text = "确定要赠送碎片吗？", this.pw = _.random(1e3, 9999), this.scretLabel.text = "" + this.pw;
        }, i.prototype.sendFunc = function() {
            var t = this;
            HttpService.post(e.ServerMsg.JIGSAW_DONATE, "uid=" + playerModel.uid + "&fid=" + jigsawModel.sendData.uid + "&idx=" + jigsawModel.sendId + "&password=" + this.pw, function(i) {
                jigsawModel.update(i), dailyModel.dailyEventInfo.donateJigsawCount++, hortor.NotificationManager.dispatch(EventConst.sendJigsaw), 
                EventCenter.sendEvent(EventConst.ReportGive), hortor.TipManager.bubble("赠送成功"), 
                t.hide(), hortor.WindowManager.hideWindow(e.WindowType.WINDOW_JIGSAWFRIEND);
            });
        }, i;
    }(e.ComSendPropWindow);
    e.JigsawSendPropWindow = t, __reflect(t.prototype, "game.JigsawSendPropWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.effect = null, e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            for (var e = this, t = 0; 9 > t; t++) this.addClick(this["piece" + t], this.useFunc, this);
            this.addClick(this.closeImg, function() {
                e.hide();
            }, this);
        }, i.prototype.onData = function() {
            for (var t = jigsawModel.jigsawInfo, i = 0; i < t.pieces.length; i++) {
                RES.getResAsync("jigsaw_wanneng_" + (i + 1) + "_png", function(e) {}, this);
                var n = i + 1;
                this["piece" + i].source = e.ResourcePath.getGrayJigsaw(n), this["piece" + i].visible = !t.pieces[i], 
                this["light" + i].visible = !t.pieces[i];
            }
        }, i.prototype.useFunc = function(t) {
            var i = this, n = t.target.name, o = n.substr(n.length - 1, 1), a = /^[0-9]$/;
            if (0 != a.test(o)) {
                var r = parseInt(o);
                HttpService.post(e.ServerMsg.JIGSAW_UPDATE, "uid=" + playerModel.uid + "&idx=" + r + "&isLoad=true&isAllInOne=true", function(e) {
                    jigsawModel.update(e), playerModel.update(e), hortor.NotificationManager.dispatch(EventConst.UseJigsaw, {
                        jigsawId: r,
                        startX: 140,
                        isAllInOne: !0
                    }), i.hide();
                });
            }
        }, i;
    }(e.WindowBase);
    e.JigsawUseMagnaWindow = t, __reflect(t.prototype, "game.JigsawUseMagnaWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.baseScroll.viewport = this.baseList, this.panelBase.helpBtn.visible = !0, this.addClick(this.newsBtn, this.newsBtnFunc, this), 
            this.addClick(this.panelBase.helpBtn, this.helpBtnFunc, this), this.addClick(this.giftBtn, this.giftBtnFunc, this), 
            this.arrow1.addEventListener(egret.TouchEvent.TOUCH_TAP, this.leftFunc, this), this.arrow2.addEventListener(egret.TouchEvent.TOUCH_TAP, this.rightFunc, this);
            for (var t = 0; 9 > t; t++) this.addClick(this["piece" + t], this.unLoadFunc, this);
            this.baseList.addEventListener(eui.ItemTapEvent.ITEM_TAP, this.jigsawItemFunc, this);
            var i = new hortor.TouchScaleEffect();
            i.start(this.giftBtn), hortor.NotificationManager.add(EventConst.UseJigsaw, this.showEffect, this), 
            hortor.NotificationManager.add(EventConst.sendJigsaw, this.refreshListFunc, this), 
            hortor.NotificationManager.add(EventConst.CheckJigsawGift, this.giftBtnTween, this), 
            hortor.NotificationManager.add(EventConst.JigsawRefreshTop, this.composeJigsaw, this);
            var n = '<font color="#FFEB42" size="21">海盗公安提醒您：谨防交易诈骗，请不要相信任何售卖碎片、能量等的信息，不要转账或发红包给任何不认识的人。</font>';
            this.marque.marqueue([ n ]), jigsawModel.bind("newJigsawNews", this, this.showNewRedPoint.bind(this)), 
            this.baseData = new eui.ArrayCollection(), this.baseList.dataProvider = this.baseData, 
            this.baseList.itemRenderer = e.JigsawMainNode, this.clock = activityModel.getActivityInfo(e.ActivityType.Jigsaw).clock, 
            this.clock.registCallBack(this, null, this._countDown.bind(this));
        }, i.prototype.onOpen = function() {}, i.prototype.onData = function() {
            this.showAll(), this.giftBtnTween(), this.showNewRedPoint();
        }, i.prototype.onClose = function() {
            this.clock && this.clock.pause(), gateModel.updateGate(e.ActivityType.Jigsaw);
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.showNewRedPoint = function() {
            this.redPoint.visible = jigsawModel.newJigsawNews;
        }, i.prototype.giftBtnTween = function() {
            var e = jigsawModel.jigsawInfo;
            egret.Tween.removeTweens(this.giftBtn), this.giftBtn.rotation = 0;
            for (var t = !0, i = 0; i < e.pieces.length; i++) if (!e.pieces[i]) {
                t = !1;
                break;
            }
            t && util.rockTween(this.giftBtn);
        }, i.prototype.showAll = function() {
            this.showGrayJigsaw(), this.showJigSawTop(), this.showJigsawBottom(), this.showLimitTimes();
        }, i.prototype.composeJigsaw = function() {
            this.showJigSawTop(), this.showLimitTimes();
        }, i.prototype.showLimitTimes = function() {
            var e = jigsawModel.jigsawInfo;
            this.hasGotNum.text = e.RewardCount + "/" + e.rewardLimit, this.sendNum.text = "今日赠送次数：" + dailyModel.dailyEventInfo.donateJigsawCount + "/5";
        }, i.prototype.showGrayJigsaw = function() {
            for (var t = 0; 9 > t; t++) {
                var i = t + 1;
                this["grayPic" + t].source = e.ResourcePath.getGrayJigsaw(i);
            }
        }, i.prototype.showJigSawTop = function() {
            for (var t = jigsawModel.jigsawInfo, i = 0; i < t.pieces.length; i++) {
                var n = i + 1;
                this["piece" + i].source = e.ResourcePath.getColorJigsaw(n), this["piece" + i].visible = t.pieces[i], 
                t.allInOnes && (this["wanneng" + i].visible = t.allInOnes[i]);
            }
        }, i.prototype.showJigsawBottom = function() {
            var e = jigsawModel.jigsawInfo, t = [];
            playerModel.allInOnePiece > 0 && t.push({
                id: 0,
                num: playerModel.allInOnePiece
            });
            for (var i = 0; i < e.bags.length; i++) t.push({
                id: i + 1,
                num: e.bags[i]
            });
            this.baseData.source = t;
        }, i.prototype.refreshListFunc = function() {
            this.showNewRedPoint();
            var e = jigsawModel.jigsawInfo, t = [];
            playerModel.allInOnePiece > 0 && t.push({
                id: 0,
                num: playerModel.allInOnePiece
            });
            for (var i = 0; i < e.bags.length; i++) t.push({
                id: i + 1,
                num: e.bags[i]
            });
            this.baseData.replaceAll(t), this.baseList.dataProviderRefreshed(), this.sendNum.text = "今日赠送次数：" + dailyModel.dailyEventInfo.donateJigsawCount + "/5";
        }, i.prototype.jigsawItemFunc = function(t) {
            var i = t.item, n = t.itemRenderer.localToGlobal(0, 0), o = jigsawModel.jigsawInfo, a = i.id - 1;
            (o.bags[a] > 0 || -1 == a) && (soundModel.buttonOpen(), playerModel.selectedActivityType = Const.JigsawType, 
            jigsawModel.sendId = i.id, hortor.WindowManager.showWindow(e.WindowType.WINDOW_JIGSAWBTN, {
                itemData: i,
                itemPos: n
            }));
        }, i.prototype.newsBtnFunc = function() {
            hortor.WindowManager.showWindow(e.WindowType.WINDOW_JIGSAWNEWS);
        }, i.prototype.helpBtnFunc = function() {
            var t = HelpTextLabel.getJigsawTextLabel();
            e.ComFunc.openHelpPanel(t);
        }, i.prototype.giftBtnFunc = function() {
            soundModel.buttonOpen(), hortor.WindowManager.showWindow(e.WindowType.WINDOW_JIGSAWREWARD);
        }, i.prototype.closeBtnFunc = function() {}, i.prototype.unLoadFunc = function(t) {
            for (var i = this, n = jigsawModel.jigsawInfo, o = !1, a = 0; a < n.pieces.length; a++) if (!n.pieces[a]) {
                o = !0;
                break;
            }
            if (o) {
                var r = t.target, s = t.target.name, l = s.substr(s.length - 1, 1), d = /^[0-9]$/;
                if (0 != d.test(l)) {
                    var u = parseInt(l);
                    HttpService.post(e.ServerMsg.JIGSAW_UPDATE, "uid=" + playerModel.uid + "&idx=" + u + "&isLoad=false", function(e) {
                        jigsawModel.update(e), playerModel.update(e);
                        var t = r.y;
                        egret.Tween.get(r).to({
                            y: t + 20,
                            rotation: 3,
                            alpha: 0
                        }, 300, egret.Ease.quadOut).call(function() {
                            egret.Tween.removeTweens(r), r.y = t, r.rotation = 0, r.alpha = 1, i.showJigSawTop();
                        }), i.refreshListFunc();
                    });
                }
            }
        }, i.prototype.showEffect = function(t) {
            var i = this, n = t.jigsawId, o = t.startX;
            this.refreshListFunc();
            var a = this["piece" + (n - 1)], r = a.localToGlobal(0, 0);
            this.maskBg.alpha = 1, this.maskBg.visible = !0, this.suipianAr ? this.playSuipianAr(o, n) : (this.suipianAr = new e.ArmaturePlayer("suipian"), 
            this.addChild(this.suipianAr), this.playSuipianAr(o, n));
            var s = egret.Tween.get(this.suipianAr);
            s.to({
                scaleX: 1,
                scaleY: 1
            }, 170, egret.Ease.backOut).to({
                x: r.x + 109,
                y: r.y + 104
            }, 430, egret.Ease.quadIn).wait(400).call(function() {
                egret.Tween.get(i.maskBg).to({
                    alpha: 0
                }, 300).call(function() {
                    i.maskBg.visible = !1;
                });
            }).wait(300).call(function() {
                hortor.SoundManager.playSound("wheel_shield_got"), i.showJigSawTop(), egret.Tween.removeTweens(i.suipianAr), 
                egret.setTimeout(function() {
                    i.checkOver();
                }, i, 200);
            });
        }, i.prototype.playSuipianAr = function(t, i) {
            var n = this, o = e.ResourcePath.getColorJigsaw(i);
            this.suipianAr.setSlotSkin("card", o), this.suipianAr.visible = !0, this.suipianAr.x = t, 
            this.suipianAr.y = 880 + .5 * hortor.StageManager.stageOffHeight, util.setScale(this.suipianAr, .1), 
            this.suipianAr.play("suipian", 1, function() {
                n.suipianAr.visible = !1;
            });
        }, i.prototype.checkOver = function() {
            for (var t = jigsawModel.jigsawInfo, i = !1, n = 0; n < t.pieces.length; n++) if (!t.pieces[n]) {
                i = !0;
                break;
            }
            i || hortor.WindowManager.showWindow(e.WindowType.WINDOW_JIGSAWOVER);
        }, i.prototype.leftFunc = function() {
            soundModel.buttonOpen(), this.baseScroll.validateNow(), this.baseScroll.viewport.scrollH = 0;
        }, i.prototype.rightFunc = function() {
            soundModel.buttonOpen(), this.baseScroll.validateNow(), this.baseScroll.viewport.scrollH = 364, 
            playerModel.allInOnePiece > 0 && (this.baseScroll.viewport.scrollH = 466);
        }, i.prototype._countDown = function() {
            this.leftTime.text = "剩余时间：" + util.formatTimeCNNew3(this.clock.leftSecond);
        }, i;
    }(e.WindowBase);
    e.JigsawWindow = t, __reflect(t.prototype, "game.JigsawWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.btnFunc = function() {
            "send" == this.data.btnType ? (jigsawModel.sendData = this.data, hortor.WindowManager.showWindow(e.WindowType.WINDOW_JIGSAWSENDPROP)) : hortor.WindowManager.showWindow(e.WindowType.WINDOW_EXCHANGE, this.data);
        }, i;
    }(e.ComFriendItem);
    e.JigsawFriendItem = t, __reflect(t.prototype, "game.JigsawFriendItem");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.skinPath = "jigsaw/node/JigsawNodeSkin", e;
        }
        return __extends(i, t), i.prototype.onData = function() {
            this.initView();
        }, i.prototype.initView = function() {
            var t = this.data;
            this.numLabel.text = "x" + t.num;
            var i = "jigsaw_json.jigsaw_wanneng";
            this.pieceNum.visible = !1, 0 != t.id && (this.pieceNum.visible = !0, this.pieceNum.text = t.id, 
            i = t.num > 0 ? e.ResourcePath.getColorJigsaw(t.id) : e.ResourcePath.getGrayJigsaw(t.id)), 
            this.pieceImg.source = i;
        }, i;
    }(e.ItemRenderBase);
    e.JigsawMainNode = t, __reflect(t.prototype, "game.JigsawMainNode");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onData = function() {
            var e = this.data;
            this.avatarInfo.data = {
                gender: e.donorGender || 0,
                headImg: e.donorHeadImg || "",
                crowns: 0,
                showStar: !1
            }, this.nameLabel.text = "" + (e.donorName || ""), this.nameLabel.textColor = 1 == e.donorGender ? Const.manNameColor : Const.womanNameColor;
            var t = moment().month() - moment.unix(e.createAt).month(), i = moment().date() - moment.unix(e.createAt).date() + 30 * t;
            if (1 > i) {
                var n = moment.unix(e.createAt).minute(), o = 10 > n ? "0" + n : "" + n;
                this.timeLabel.text = "今天" + moment.unix(e.createAt).hour() + ":" + o;
            } else 1 == i ? this.timeLabel.text = "昨天" : this.timeLabel.text = i + "天前";
            var a = this.desc;
            a.textFlow = [], e.fromFriend ? (this.getBtn.visible = !e.gotPiece, this.hasGet.visible = e.gotPiece, 
            this.password.visible = !1, this.sendIcon.visible = !1, a.textFlow.push({
                text: "赠送你一块碎片",
                style: {
                    textColor: this.descColor
                }
            }), a.textFlow.push({
                text: "" + e.pieceNum,
                style: {
                    textColor: this.targetColor
                }
            })) : (this.getBtn.visible = !1, this.hasGet.visible = !1, this.password.visible = !0, 
            this.sendIcon.visible = !0, this.password.text = "(密码:" + e.password + ")", a.textFlow.push({
                text: "收到你一块碎片",
                style: {
                    textColor: this.descColor
                }
            }), a.textFlow.push({
                text: "" + e.pieceNum,
                style: {
                    textColor: this.targetColor
                }
            })), e.gotAt > 0 && (this.password.visible = !0, this.password.text = moment(1e3 * e.gotAt).format("MM-DD hh:mm") + "领取");
        }, i.prototype.getBtnFunc = function() {
            this.data.gotPiece || hortor.WindowManager.showWindow(e.WindowType.WINDOW_JIGSAWGETPROP, this.data);
        }, i;
    }(e.ComNewsItem);
    e.JigsawNewsItem = t, __reflect(t.prototype, "game.JigsawNewsItem");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onData = function() {
            var e = this.data.itemPos;
            this.group.x = e.x + 50 + 110 * this.data.itemIndex, this.group.y = e.y, this.btnBg.height = 110, 
            this.useBtn.visible = this.useBtn.includeInLayout = !1, this.exchangeBtn.visible = this.exchangeBtn.includeInLayout = !1;
        }, i.prototype.sendBtnFunc = function() {
            return KiteEnter.donateCount >= 3 ? void hortor.TipManager.bubble("每天最多赠送3次材料，请明天赠送吧") : void hortor.WindowManager.showWindow(e.WindowType.WINDOW_KITE_SENDFRIEND);
        }, i;
    }(e.ComAcPropBtnWindow);
    e.KiteBtnWindow = t, __reflect(t.prototype, "game.KiteBtnWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            t.prototype.onInit.call(this), this.list.itemRenderer = e.KiteFriendItem;
        }, i.prototype.onData = function() {
            this.desc.text = "好友互换材料，可以更快兑换奖品哦！", this.showAllView(!0);
        }, i;
    }(e.ComFriendListWindow);
    e.KiteFriendWindow = t, __reflect(t.prototype, "game.KiteFriendWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onData = function() {
            this.inputText.text = "";
        }, i.prototype.getFunc = function() {
            var e = new RegExp("[0-9]+"), t = this.inputText.text;
            e.test(t) && parseInt(t) > 999 && parseInt(t) < 1e4 ? this.sendKiteReceive() : (this.inputText.text = "", 
            hortor.TipManager.alert("密码错误，请确认后重试"));
        }, i.prototype.sendKiteReceive = function() {
            var t = this, i = this.data;
            HttpService.post(e.ServerMsg.KITE_RECV, "uid=" + playerModel.uid + "&logId=" + i.logId + "&password=" + this.inputText.text, function(n) {
                KiteFunc.updateKiteEnterData(n);
                var o = hortor.WindowManager.getWindow(e.WindowType.WINDOW_KITE_MAIN);
                hortor.WindowManager.isOpen(e.WindowType.WINDOW_KITE_MAIN) && o.update(), EventCenter.sendEvent(EventConst.KiteRecvMaterial, {
                    logId: i.logId
                }), hortor.TipManager.bubble("领取成功"), t.hide();
            });
        }, i;
    }(e.ComGetPropWindow);
    e.KiteGetPropWindow = t, __reflect(t.prototype, "game.KiteGetPropWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e._currentKiteId = 0, e.mcGroupPos = [ [ 220, 295 ], [ 430, 295 ], [ 414, 462 ], [ 240, 422 ], [ 246, 482 ], [ 321, 357 ] ], 
            e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.materialDataSource = new eui.ArrayCollection([]), this.materialList.dataProvider = this.materialDataSource, 
            this.materialList.itemRenderer = e.KiteMaterialNode, this.onViewRegister();
            var t = '<font color="#FFEB42" size="21">海盗公安提醒您：谨防交易诈骗，请不要相信任何售卖碎片、能量等的信息，不要转账或发红包给任何不认识的人。</font>';
            this.marque.marqueue([ t ]);
        }, i.prototype.onOpen = function() {}, i.prototype.onData = function() {
            this._currentKiteId = this.data <= 0 ? KiteDefaultData.KiteId : this.data, this.openPanel();
        }, i.prototype.prepare = function(e) {
            e(null);
        }, i.prototype.onViewRegister = function() {
            var e = this;
            e.addEventListener(egret.TouchEvent.TOUCH_TAP, this.viewFunc, this), e.materialList.addEventListener(eui.ItemTapEvent.ITEM_TAP, this.kiteMaterialItemFunc, this), 
            this.addEventListener(EventConst.updateKiteNewsRed, this.updateNewRedPoint, this);
        }, i.prototype.onViewRemove = function() {
            var e = this;
            e.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.viewFunc, this), e.materialList.removeEventListener(eui.ItemTapEvent.ITEM_TAP, this.kiteMaterialItemFunc, this);
            for (var t = 0; 5 > t; t++) {
                var i = e["mc" + t + "Group"];
                egret.Tween.removeTweens(i);
            }
        }, i.prototype.openPanel = function() {
            var e = this;
            this.updateSelectBtnStatus(), this.initMaterialData(e._currentKiteId), this.updateNewRedPoint();
        }, i.prototype.initMaterialData = function(e) {
            var t = this;
            t._currentKiteId = e, t._enough = !0;
            var i = KiteFunc.getKiteItemConf(e);
            for (var n in i.needsCount) {
                var o = i.needsCount[n], a = "mc" + n + "Group";
                if (0 >= o) t[a].visible = !1; else {
                    t[a].visible = !0;
                    var r = t["mc" + n + "Label"];
                    r.textFlow = [];
                    var s = KiteEnter.bags[n];
                    s >= o ? r.textFlow.push({
                        text: "" + s,
                        style: {
                            textColor: 6008577
                        }
                    }) : (t._enough = !1, r.textFlow.push({
                        text: "" + s,
                        style: {
                            textColor: 16733782
                        }
                    })), r.textFlow.push({
                        text: "/" + o,
                        style: {
                            textColor: 9730404
                        }
                    });
                }
            }
            t._enough ? t.kiteImg.source = "kite_" + t._currentKiteId + "_1_png" : t.kiteImg.source = "kite_" + t._currentKiteId + "_0_png";
            var l = [];
            for (var n in KiteMaterialStaticConf) {
                var d = KiteMaterialStaticConf[n];
                l.push({
                    mName: d.mName,
                    mIcon: d.mIcon,
                    mHave: KiteEnter.bags[n]
                });
            }
            t.materialDataSource.replaceAll(l), t.materialList.dataProviderRefreshed(), t.count.text = "今日赠送次数：" + KiteEnter.donateCount + "/3", 
            t.makeBtn.icon = !t._enough || KiteEnter.isFly ? "common_txt_ck" : "common_txt_zz";
        }, i.prototype.update = function() {
            var e = this;
            e._enough = !0;
            var t = KiteFunc.getKiteItemConf(e._currentKiteId);
            for (var i in t.needsCount) {
                var n = t.needsCount[i], o = "mc" + i + "Group";
                if (0 >= n) e[o].visible = !1; else {
                    e[o].visible = !0;
                    var a = e["mc" + i + "Label"];
                    a.textFlow = [];
                    var r = KiteEnter.bags[i];
                    r >= n ? a.textFlow.push({
                        text: "" + r,
                        style: {
                            textColor: 6008577
                        }
                    }) : (e._enough = !1, a.textFlow.push({
                        text: "" + r,
                        style: {
                            textColor: 16733782
                        }
                    })), a.textFlow.push({
                        text: "/" + n,
                        style: {
                            textColor: 9730404
                        }
                    });
                }
            }
            e._enough ? e.kiteImg.source = "kite_" + e._currentKiteId + "_1_png" : e.kiteImg.source = "kite_" + e._currentKiteId + "_0_png";
            var s = [];
            for (var i in KiteMaterialStaticConf) {
                var l = KiteMaterialStaticConf[i];
                s.push({
                    mName: l.mName,
                    mIcon: l.mIcon,
                    mHave: KiteEnter.bags[i]
                }), t.needsCount[i] > KiteEnter.bags[i] && (e._enough = !1);
            }
            e.materialDataSource.replaceAll(s), e.materialList.dataProviderRefreshed(), e.count.text = "今日赠送次数：" + KiteEnter.donateCount + "/3", 
            e.makeBtn.icon = !e._enough || KiteEnter.isFly ? "common_txt_ck" : "common_txt_zz";
        }, i.prototype.MoveKitAction = function() {
            for (var e = this, t = 0; 5 > t; t++) {
                var i = e["mc" + t + "Group"];
                i.visible = !1, util.setScale(i, 0), i.x = e.mcGroupPos[5][0], i.y = e.mcGroupPos[5][1];
            }
            var n = KiteFunc.getKiteItemConf(e._currentKiteId);
            for (var o in n.needsCount) {
                var a = n.needsCount[o], i = e["mc" + o + "Group"];
                if (a > 0) {
                    i.visible = !0;
                    var r = egret.Tween.get(i);
                    r.to({
                        scaleX: 1,
                        scaleY: 1,
                        x: e.mcGroupPos[o][0],
                        y: e.mcGroupPos[o][1]
                    }, 300);
                }
            }
        }, i.prototype.updateNewRedPoint = function() {
            this.redPoint.visible = KiteFunc.hasSendMsg;
        }, i.prototype.viewFunc = function(e) {
            var t = e.target, i = t.name;
            i && ("leftSelect" == i ? this.selectKite(-1) : "rightSelect" == i ? this.selectKite(1) : "makeBtn" == i ? this.makeKite() : "msg" == i && this.msgFunc());
        }, i.prototype.makeKite = function() {
            var t = this._currentKiteId, i = KiteFunc.getKiteItemConf(t);
            if (i) {
                var n = {};
                for (var o in i.awardOneType) {
                    var a = i.awardOneType[o], r = i.awardOneCount[o];
                    n[a] = r;
                }
                var s = "放飞风筝后开启额外大宝箱", l = "common_txt_zz", d = {
                    reward: n,
                    ok: !KiteEnter.isFly,
                    enough: this._enough,
                    type: "make",
                    kiteId: t,
                    tip: s,
                    btnLabel: l
                };
                hortor.WindowManager.showWindow(e.WindowType.WINDOW_KITE_REWARD, d);
            }
        }, i.prototype.msgFunc = function() {
            hortor.WindowManager.showWindow(e.WindowType.WINDOW_KITE_NEWS);
        }, i.prototype.kiteMaterialItemFunc = function(t) {
            soundModel.buttonOpen();
            var i = t.item;
            if (!(i.mHave <= 0)) {
                var n = t.target.localToGlobal(0, 0), o = {
                    x: n.x,
                    y: n.y
                };
                KiteTmpData.kiteSendMaterialId = t.itemIndex, hortor.WindowManager.showWindow(e.WindowType.WINDOW_KITE_BTN, {
                    itemPos: o,
                    itemIndex: t.itemIndex
                });
            }
        }, i.prototype.selectKite = function(e) {
            var t = this;
            e > 0 && t._currentKiteId >= 3 || 0 > e && t._currentKiteId <= 1 || (t._currentKiteId += Number(e), 
            this.updateSelectBtnStatus(), this.update(), this.MoveKitAction());
        }, i.prototype.updateSelectBtnStatus = function() {
            var e = this;
            switch (e.selectStatus0.source = "kite_select_1", e.selectStatus1.source = "kite_select_1", 
            e.selectStatus2.source = "kite_select_1", e._currentKiteId) {
              case 1:
                e.leftSelect.source = "kite_select_left_0", e.rightSelect.source = "kite_select_right", 
                e.leftSelect.touchEnabled = !1, e.rightSelect.touchEnabled = !0, e.selectStatus0.source = "kite_select_1", 
                e.selectStatus1.source = "kite_select_0", e.selectStatus2.source = "kite_select_0";
                break;

              case 2:
                e.leftSelect.source = "kite_select_left", e.leftSelect.touchEnabled = !0, e.rightSelect.source = "kite_select_right", 
                e.rightSelect.touchEnabled = !0, e.selectStatus0.source = "kite_select_0", e.selectStatus1.source = "kite_select_1", 
                e.selectStatus2.source = "kite_select_0";
                break;

              case 3:
                e.leftSelect.source = "kite_select_left", e.rightSelect.source = "kite_select_right_0", 
                e.rightSelect.touchEnabled = !1, e.leftSelect.touchEnabled = !0, e.selectStatus0.source = "kite_select_0", 
                e.selectStatus1.source = "kite_select_0", e.selectStatus2.source = "kite_select_1";
            }
        }, i;
    }(e.WindowBase);
    e.KiteMainWindow = t, __reflect(t.prototype, "game.KiteMainWindow");
}(game || (game = {}));

var KiteFunc = function() {
    function e() {}
    return Object.defineProperty(e, "kiteMenuRedStatus", {
        get: function() {
            return this._redStatus;
        },
        set: function(e) {
            this._redStatus = e, gateModel.updateGate(game.ActivityType.kite);
        },
        enumerable: !0,
        configurable: !0
    }), Object.defineProperty(e, "hasSendMsg", {
        get: function() {
            return this._hasSendMsg;
        },
        set: function(e) {
            this._hasSendMsg = e, EventCenter.sendEvent(EventConst.updateKiteNewsRed), gateModel.updateGate(game.ActivityType.kite);
        },
        enumerable: !0,
        configurable: !0
    }), Object.defineProperty(e, "firstEnter", {
        get: function() {
            return this._firstEnter;
        },
        set: function(e) {
            this._firstEnter = e, gateModel.updateGate(game.ActivityType.kite);
        },
        enumerable: !0,
        configurable: !0
    }), e.enterKiteSquare = function(t) {
        HttpService.post(game.ServerMsg.KITE_ENTER, "uid=" + playerModel.uid + "&fid=" + t, function(t) {
            if (KiteEnter = t, hortor.ScreenManager.isOpen(game.ScreenType.KITE_SCREEN) && hortor.ScreenManager.hideScreen(game.ScreenType.KITE_SCREEN), 
            KiteMark.isOther = KiteEnter.owner != playerModel.uid, game.TutorialManager.instance.newbieTutorialing || hortor.ScreenManager.showScreen(game.ScreenType.KITE_SCREEN), 
            KiteEnter.owner != playerModel.uid) switch (0 == KiteEnter.helpResult && (KiteTmpData.AssistItem = KiteEnter.helpPlayers.pop()), 
            KiteEnter.helpResult) {
              case 0:
                if (hortor.TipManager.bubble("风筝助力成功"), hortor.Log.log("KiteFunc,newbieTutorialing=", game.TutorialManager.instance.newbieTutorialing), 
                game.TutorialManager.instance.newbieTutorialing) ; else {
                    var i = {
                        currentSpeed: KiteEnter.kiteSpeed,
                        upSpeed: KiteEnter.speedAdd
                    };
                    hortor.WindowManager.showWindow(game.WindowType.WINDOW_KITE_SUCCESSPOP, {
                        data: i,
                        popType: KitePopType.ASSIST_SUCCESS,
                        kiteId: 0
                    });
                    var n = hortor.ScreenManager.getScreen(game.ScreenType.KITE_SCREEN);
                    hortor.Log.log("KiteFunc,KiteScreenIsOpen=", hortor.ScreenManager.isOpen(game.ScreenType.KITE_SCREEN)), 
                    hortor.ScreenManager.isOpen(game.ScreenType.KITE_SCREEN) && n.assistOtherSuccess();
                }
                break;

              case 1:
                hortor.TipManager.bubble("你已经助力过了");
                break;

              case 2:
                hortor.TipManager.bubble("当前风筝助力已满");
                break;

              case 3:
                hortor.TipManager.bubble("风筝已经放飞啦！你来晚了！");
            } else e.kiteMenuRedStatus = !1, e.firstEnter = !1;
        });
    }, e.getKiteItemConf = function(e) {
        var t = activityModel.getActivityInfo(game.ActivityType.kite);
        return _.find(t.configData.KiteConfs, function(t) {
            return t.id == e;
        });
    }, e.updateKiteEnterData = function(e) {
        for (var t in e) _.isUndefined(KiteEnter[t]) || (KiteEnter[t] = e[t]);
    }, e._redStatus = !1, e._hasSendMsg = !1, e._firstEnter = !1, e;
}();

__reflect(KiteFunc.prototype, "KiteFunc");

var KiteMark = {
    getKiteOverReward: !1,
    kiteGuideStep: 0,
    sendData: null,
    isOther: !1
}, KitePopType = {
    MAKE_SUCCESS: 1,
    ASSIST_SUCCESS: 2
}, KiteGiftBoxStatus = {
    NO: 0,
    CAN: 1,
    DONE: 2
}, KiteItemConfInfo = function() {
    function e() {}
    return e;
}();

__reflect(KiteItemConfInfo.prototype, "KiteItemConfInfo");

var HelpPlayerItemInfo = function() {
    function e() {}
    return e;
}();

__reflect(HelpPlayerItemInfo.prototype, "HelpPlayerItemInfo");

var KiteText = {
    tips0: "互相赠送材料可以更快完成风筝制作哦"
}, KiteMaterialStaticConf = [ {
    mName: "绳子",
    mIcon: "m_shengzi"
}, {
    mName: "竹篾",
    mIcon: "m_zhumie"
}, {
    mName: "砂纸",
    mIcon: "m_shazhi"
}, {
    mName: "浆糊",
    mIcon: "m_jianghu"
}, {
    mName: "颜料",
    mIcon: "m_yanliao"
} ], KietCostStaticConf = [ {
    mName: "绳子",
    mIcon: "m_shengzi_1_png"
}, {
    mName: "竹篾",
    mIcon: "m_zhumie_1_png"
}, {
    mName: "砂纸",
    mIcon: "m_shazhi_1_png"
}, {
    mName: "浆糊",
    mIcon: "m_jianghu_1_png"
}, {
    mName: "颜料",
    mIcon: "m_yanliao_1_png"
} ], KiteTmpData = {
    kiteSendMaterialId: 0,
    KiteMaterialRedPoint: !1,
    AssistItem: {
        uid: 96,
        name: "test34",
        headImg: "http://wx.qlogo.cn/mmopen/btgohxsIeu0BPSnytPWEvsBZx7usMovmQ45DhuIISW8ibqHtwbV1pPVXFsZzBdEPlaoyGYWMIOowBmBeCMHibRkkDkqZlKSMUl/0",
        crowns: 24,
        gender: 1,
        isVip: !1,
        speedAdd: 10
    }
}, KiteDefaultData = {
    KiteId: 1
}, KiteEnter = {
    bags: [ 0, 0, 0, 0, 0 ],
    ownerInfo: {
        uid: 100,
        name: "test34",
        headImg: "http://wx.qlogo.cn/mmopen/btgohxsIeu0BPSnytPWEvsBZx7usMovmQ45DhuIISW8ibqHtwbV1pPVXFsZzBdEPlaoyGYWMIOowBmBeCMHibRkkDkqZlKSMUl/0",
        crowns: 24,
        gender: 1,
        isVip: !1
    },
    helpPlayers: [ {
        uid: 96,
        name: "test34",
        headImg: "http://wx.qlogo.cn/mmopen/btgohxsIeu0BPSnytPWEvsBZx7usMovmQ45DhuIISW8ibqHtwbV1pPVXFsZzBdEPlaoyGYWMIOowBmBeCMHibRkkDkqZlKSMUl/0",
        crowns: 24,
        gender: 1,
        isVip: !1,
        speedAdd: 10
    } ],
    donateCount: 0,
    receiveCount: 0,
    kiteId: 1,
    kiteHeight: 0,
    kiteSpeed: 21,
    isFly: !1,
    owner: 10002,
    isHelpSuccess: !1,
    helpResult: 0,
    speedAdd: 0
}, game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.initEvent = e.addEventFunc.bind(e), e;
        }
        return __extends(i, t), i.prototype.addEventFunc = function() {
            EventCenter.addEventListener(EventConst.KiteRecvMaterial, this.refreshListFunc, this);
        }, i.prototype.onInit = function() {
            t.prototype.onInit.call(this), this.list.itemRenderer = e.KiteNewsNode;
        }, i.prototype.onData = function() {
            this.logs = this.data.logs.reverse();
        }, i.prototype.prepare = function(t, i) {
            HttpService.post(e.ServerMsg.KITE_MATERIAL_LOGS, "uid=" + playerModel.uid, function(i) {
                KiteFunc.hasSendMsg = !1;
                var n = hortor.WindowManager.getWindow(e.WindowType.WINDOW_KITE_MAIN);
                hortor.WindowManager.isOpen(e.WindowType.WINDOW_KITE_MAIN) && n.updateNewRedPoint(), 
                gateModel.updateGate(e.ActivityType.kite), t(i);
            }, i);
        }, i.prototype.refreshListFunc = function(e) {
            if (this.isOpen) {
                var t = e.data.logId, i = this.logs, n = _.find(i, function(e) {
                    return e.logId == t;
                });
                n && (n.got = !0), this.logs = i;
            }
        }, i;
    }(e.ComNewsWindow);
    e.KiteNewsWindow = t, __reflect(t.prototype, "game.KiteNewsWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onData = function() {
            t.prototype.onData.call(this), this.panelAlert && this.panelAlert.okBtn && (this.panelAlert.okBtn.enabled = this.data.ok, 
            this.panelAlert.okBtn.touchEnabled = !0), "make" == this.data.type ? this.panelAlert.okBtn.enabled = this.data.enough : this.panelAlert.okBtn.enabled = this.data.ok;
        }, i.prototype.prepare = function(e) {
            e(null);
        }, i.prototype.getRewardFunc = function() {
            this.getBtnFunc();
        }, i.prototype.getBtnFunc = function() {
            this.panelAlert.okBtn.touchEnabled = !1, "make" == this.data.type ? this.makeKite() : "fly" == this.data.type ? this.takeFlyReward() : hortor.WindowManager.hideWindow(e.WindowType.WINDOW_KITE_REWARD);
        }, i.prototype.makeKite = function() {
            if (!this.data.ok) return hortor.TipManager.tip("小鹅同时只能放一个风筝"), void hortor.WindowManager.hideWindow(e.WindowType.WINDOW_KITE_REWARD);
            var t = this.data.kiteId;
            HttpService.post(e.ServerMsg.KITE_MAKE, "uid=" + playerModel.uid + "&id=" + t, function(i) {
                KiteFunc.updateKiteEnterData(i);
                var n = hortor.WindowManager.isOpen(e.WindowType.WINDOW_KITE_REWARD);
                if (n) {
                    var o = hortor.WindowManager.getWindow(e.WindowType.WINDOW_KITE_REWARD);
                    o && o.update();
                }
                var a = hortor.ScreenManager.getScreen(e.ScreenType.KITE_SCREEN);
                a && (a.updateFlyHeight(), a.updateArmature(), a.updateAssist()), playerModel.update(i), 
                hortor.WindowManager.hideWindow(e.WindowType.WINDOW_KITE_REWARD), i.reward ? hortor.WindowManager.showWindow(e.WindowType.WINDOW_REWARD, i, null, null, function() {
                    hortor.WindowManager.showWindow(e.WindowType.WINDOW_KITE_SUCCESSPOP, {
                        data: i,
                        popType: KitePopType.MAKE_SUCCESS,
                        kiteId: t
                    });
                }) : hortor.WindowManager.showWindow(e.WindowType.WINDOW_KITE_SUCCESSPOP, {
                    data: i,
                    popType: KitePopType.MAKE_SUCCESS,
                    kiteId: t
                });
            }, function() {
                hortor.WindowManager.hideWindow(e.WindowType.WINDOW_KITE_REWARD);
            });
        }, i.prototype.takeFlyReward = function() {
            var t = this;
            return this.data.ok ? void HttpService.post(e.ServerMsg.KITE_GIFT_OPEN, "uid=" + playerModel.uid, function(t) {
                if (playerModel.update(t), KiteFunc.updateKiteEnterData(t), hortor.ScreenManager.isOpen(e.ScreenType.KITE_SCREEN)) {
                    var i = hortor.ScreenManager.getScreen(e.ScreenType.KITE_SCREEN);
                    i && (i.updateFlyHeight(), i.updateArmature(), i.updateAssist());
                }
                hortor.WindowManager.hideWindow(e.WindowType.WINDOW_KITE_REWARD), hortor.WindowManager.showWindow(e.WindowType.WINDOW_KITE_MAIN, KiteDefaultData.KiteId), 
                t.reward && hortor.WindowManager.showWindow(e.WindowType.WINDOW_REWARD, t.reward);
            }, function() {
                hortor.WindowManager.hideWindow(e.WindowType.WINDOW_KITE_REWARD), t.panelAlert.okBtn.touchEnabled = !0;
            }, this) : (hortor.TipManager.tip("风筝放到最高点领取宝箱"), void this.hide());
        }, i;
    }(e.ComRewardPopWithCbWindow);
    e.KiteRewardWindow = t, __reflect(t.prototype, "game.KiteRewardWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.kiteActivityData = activityModel.getActivityInfo(e.ActivityType.kite), this.clock = activityModel.getActivityInfo(e.ActivityType.kite).clock, 
            this.clock.registCallBack(this, null, this._countDown.bind(this)), this.addEventListener(egret.TouchEvent.TOUCH_TAP, this.viewFunc, this), 
            this.assistHeadList.addEventListener(eui.ItemTapEvent.ITEM_TAP, this.kiteAssistItemFunc, this), 
            this.addEventListener(EventConst.updateKiteNewsRed, this.updateNewRedPoint, this);
            var t = new hortor.TouchScaleEffect();
            t.start(this.kiteGiftImg);
        }, i.prototype._countDown = function() {
            var t = "活动剩余时间：" + e.ComFunc.formatTimeCNNew3(this.kiteActivityData.clock.leftSecond);
            this.activityTimeLabel.text = "" + t;
        }, i.prototype.show = function(e, i, n, o, a) {
            return void 0 === n && (n = null), void 0 === o && (o = null), void 0 === a && (a = null), 
            KiteMark.isOther ? t.prototype.show.call(this, hortor.StageManager.getLayer(hortor.Layer.TIP), i, n, o, a) : t.prototype.show.call(this, hortor.StageManager.getLayer(hortor.Layer.SCREEN), i, n, o, a);
        }, i.prototype.onData = function() {
            this.updateGiftState();
        }, i.prototype.updateGiftState = function() {
            var t = activityModel.getActivityInfo(e.ActivityType.occasionalGift, e.ActivityType.kiteGift), i = t && t.isRunning && gateModel.iosPay && !t.playerData.gotOccasionalGift && playerModel.island > 0;
            this.kiteGiftImg.visible = i && KiteEnter.owner == playerModel.uid;
        }, i.prototype.prepare = function(e) {
            e(null);
        }, i.prototype.onOpen = function() {
            this.hGiftBoxTween = !1;
            this.initData(), this.updateFlyHeight(), this.updateAssist(), this.showFlyTips("init"), 
            this.initBackTips(), this.initArmature(), this.dropGroupDown(), this.fitScreen(), 
            this.updateNewRedPoint();
        }, i.prototype.updateNewRedPoint = function() {
            this.newsRedPoint.visible = KiteFunc.hasSendMsg;
        }, i.prototype.assistOtherTweens = function() {
            var e = this, t = e, i = t.headImgFly;
            i.scaleX = 2, i.scaleY = 2, i.visible = !0;
            var n = KiteEnter.helpPlayers.length, o = egret.Tween.get(i);
            o.to({
                scaleX: .5,
                scaleY: .5,
                x: t.assistListGroup.x + 53 * n + 30,
                y: t.assistListGroup.y + 60
            }, 300).call(function() {
                i.visible = !1, KiteEnter.helpPlayers.push(KiteTmpData.AssistItem), e.updateAssist(), 
                egret.Tween.removeTweens(i);
            });
        }, i.prototype.showFlyTips = function(e) {
            var t = this;
            if (KiteEnter.isFly) {
                do {
                    if (KiteEnter.owner != playerModel.uid) {
                        this.qipaoLabel.text = "谢谢你帮我助力！";
                        break;
                    }
                    if ("make" == e) {
                        this.qipaoLabel.text = "放飞到最高点\n可领取大宝箱";
                        break;
                    }
                    var i = KiteFunc.getKiteItemConf(KiteEnter.kiteId);
                    if (KiteEnter.kiteHeight >= i.kiteHeight) {
                        this.qipaoLabel.text = "已放飞到最高处\n赶紧领取奖励吧";
                        break;
                    }
                    var n = (i.kiteHeight - KiteEnter.kiteHeight) / KiteEnter.kiteSpeed * 60, o = Math.floor(n / 60), a = Math.ceil(n - 60 * o);
                    this.qipaoLabel.text = o + "小时" + a + "分后\n可领取宝箱";
                } while (!1);
                util.setScale(this.qipaoGroup, .1);
                var r = egret.Tween.get(this.qipaoGroup);
                this.qipaoGroup.visible = !0, r.to({
                    scaleX: 1,
                    scaleY: 1
                }, 500).call(function() {
                    egret.Tween.removeTweens(t.qipaoGroup);
                });
                var s = this, l = egret.setTimeout(function() {
                    egret.clearTimeout(l), t.qipaoGroup.visible = !1;
                }, s, 5e3);
            }
        }, i.prototype.initBackTips = function() {
            return KiteEnter.owner == playerModel.uid ? void (this.continueImg.visible = !1) : (this.continueImg.visible = !0, 
            void egret.Tween.get(this.continueImg, {
                loop: !0
            }).to({
                x: 95
            }, 200).to({
                x: 100
            }, 200).to({
                x: 105
            }, 200).to({
                x: 100
            }, 200));
        }, i.prototype.initArmature = function() {
            this.kiteFlyArmature = new e.ArmaturePlayer("kiteFly"), this.kiteFlyArmatureGroup.addChild(this.kiteFlyArmature), 
            this.kiteFlyArmature.x = 176, this.kiteFlyArmature.y = 528, this.kiteFlyArmature.play("deng", 0), 
            this.kiteArmature = new e.ArmaturePlayer("kite"), this.kiteArmatureGroup.addChild(this.kiteArmature), 
            this.kiteFlyArmature.setSlotArmature("fengzheng", this.kiteArmature);
            var t = "fang";
            KiteEnter.isFly ? (this.kiteArmature.visible = !0, this.kiteArmature.play("" + KiteEnter.kiteId, 0)) : (this.kiteArmature.visible = !1, 
            t = "deng"), this.kiteFlyArmature.play(t, 0), this.houseArmature = new e.ArmaturePlayer("kiteHouse"), 
            this.houseArmatureGroup.addChild(this.houseArmature), this.houseArmature.x = 108, 
            this.houseArmature.y = 274;
            var i = "kezhizuo";
            (KiteEnter.isFly || KiteEnter.owner != playerModel.uid) && (i = "zhengchang"), this.houseArmature.play(i, 0), 
            this.squareArmature = new e.ArmaturePlayer("kiteSquare"), this.squareArmatureGroup.addChild(this.squareArmature), 
            this.squareArmature.x = 380, this.squareArmature.y = 380, this.squareArmature.play("changjing", 0);
        }, i.prototype.updateArmature = function() {
            var e = "kezhizuo";
            (KiteEnter.isFly || KiteEnter.owner != playerModel.uid) && (e = "zhengchang"), this.houseArmature.play(e, 0);
            var t = "fang";
            KiteEnter.isFly ? (this.kiteArmature.visible = !0, this.kiteArmature.play("" + KiteEnter.kiteId, 0)) : (this.kiteArmature.visible = !1, 
            t = "deng"), this.kiteFlyArmature.play(t, 0);
        }, i.prototype.dropGroupDown = function() {
            this.friendInfoGroup.y = -160, egret.Tween.get(this.friendInfoGroup).wait(300).to({
                y: 0
            }, 1e3, egret.Ease.bounceOut);
        }, i.prototype.fitScreen = function() {
            var e = .5 * hortor.StageManager.stageOffHeight;
            this.houseArmatureGroup.y += e, this.kiteFlyArmatureGroup.y += e, this.qipaoGroup.y += e, 
            this.assistListGroup.y += e;
        }, i.prototype.updateAssist = function() {
            if (!KiteEnter.isFly) return this.assistListGroup.visible = !1, void (this.askAssistGroup.visible = !1);
            this.assistListGroup.visible = !0, this.askAssistGroup.visible = !0;
            var t = KiteEnter.owner != playerModel.uid;
            this.assistHeadList.touchChildren = !t, this.askAssistGroup.visible = !t;
            var i = [];
            for (var n in KiteEnter.helpPlayers) {
                var o = KiteEnter.helpPlayers[n];
                i.push({
                    head: o.headImg,
                    desc: "+" + o.speedAdd
                });
            }
            for (var n = i.length; 5 > n; n++) i.push({
                head: "no",
                desc: ""
            });
            this.assistHeadList.itemRenderer = e.KiteAssistHeadNode, this.assistHeadList.dataProvider = new eui.ArrayCollection(i), 
            this.assistHeadList.dataProviderRefreshed();
            var a = KiteFunc.getKiteItemConf(KiteEnter.kiteId);
            KiteEnter.kiteHeight >= a.kiteHeight ? this.askAssistBtn.icon = "comBtnTxt_json.common_txt_lqbx" : this.askAssistBtn.icon = "comBtnTxt_json.common_txt_qzjs", 
            this.flySpeed.text = "当前放飞速度：" + KiteEnter.kiteSpeed + "米/小时";
        }, i.prototype.assistPushUpdate = function(t, i, n, o) {
            KiteEnter.helpPlayers.length >= 5 || (KiteEnter.helpPlayers.push({
                uid: t,
                name: i,
                headImg: e.ComFunc.headImg(n),
                crowns: 0,
                gender: 0,
                isVip: !1,
                speedAdd: o
            }), KiteEnter.kiteSpeed += o, this.updateAssist());
        }, i.prototype.assistOtherSuccess = function() {
            var e = this;
            hortor.Log.log("KiteScreen =>> assistOtherSuccess,", e.headImgFly), e.headImgFly.visible = !0, 
            util.setRemoteAvatar(e.headImgFly, playerModel.headImg), e.updateAssist();
        }, i.prototype.kiteAssistItemFunc = function(e) {
            var t = KiteEnter.helpPlayers.length;
            t < e.itemIndex + 1 && this.askAssistBtnFunc();
        }, i.prototype.viewFunc = function(e) {
            var t = e.target.name;
            if (t) if ("closeBtn" == t) this.closeBtnFunc(); else if ("backBtn" == t) this.backBtnFunc(); else if ("askAssistBtn" == t) {
                var i = KiteFunc.getKiteItemConf(KiteEnter.kiteId);
                if (!i) return;
                KiteEnter.kiteHeight >= i.kiteHeight ? this.takeGiftBox() : this.askAssistBtnFunc();
            } else "helpBtn" == t ? this.helpBtnFunc() : "newsBtn" == t ? this.newsBtnFunc() : "hGiftBox" == t ? this.takeGiftBox() : "houseArmature" == t ? this.kiteHouseFunc() : "kiteGiftImg" == t && this.kiteGiftFunc();
        }, i.prototype.kiteGiftFunc = function() {
            hortor.WindowManager.currentWindow = e.WindowType.WINDOW_KITEGIFT;
        }, i.prototype.closeBtnFunc = function() {
            hortor.ScreenManager.back();
        }, i.prototype.timerFunc = function() {
            if (KiteEnter.isFly) {
                var e = KiteEnter.kiteHeight;
                KiteEnter.kiteHeight += KiteEnter.kiteSpeed / 3600, Math.ceil(e) < Math.ceil(KiteEnter.kiteHeight) && this.updateFlyHeight();
            }
        }, i.prototype.initData = function() {
            var t = this;
            activityModel.getActivityInfo(e.ActivityType.kite);
            if (this.timer = new egret.Timer(1e3), this.timer.addEventListener(egret.TimerEvent.TIMER, this.timerFunc, this), 
            this.timer.start(), KiteEnter.ownerInfo && (util.setRemoteAvatar(this.headImg, KiteEnter.ownerInfo.headImg), 
            this.userName.text = util.strSub(KiteEnter.ownerInfo.name, 4), this.kImgHeadFrame.source = 1 == KiteEnter.ownerInfo.gender ? "common_img_portrait1" : "common_img_portrait0"), 
            this.info.visible = playerModel.uid == KiteEnter.owner, KiteEnter.isFly || KiteEnter.owner != playerModel.uid) ; else var i = egret.setTimeout(function() {
                egret.clearTimeout(i), hortor.WindowManager.showWindow(e.WindowType.WINDOW_KITE_MAIN, KiteEnter.kiteId);
            }, t, 100);
        }, i.prototype.updateFlyHeight = function() {
            if (!KiteEnter.isFly) return void (this.heightGroup.visible = !1);
            this.heightGroup.visible = !0, this.hGiftBox.touchEnabled = KiteEnter.owner == playerModel.uid;
            var e = KiteFunc.getKiteItemConf(KiteEnter.kiteId);
            KiteEnter.kiteHeight > e.kiteHeight && (KiteEnter.kiteHeight = e.kiteHeight);
            var t = 400 * (KiteEnter.kiteHeight / e.kiteHeight);
            this.heightLabel.text = Math.floor(KiteEnter.kiteHeight) + "米";
            var i = this.flyProgressBg.y + (400 - t);
            this.flyProgress.source = "kite_scale_" + KiteEnter.kiteId, this.flyProgress.y = i, 
            this.heightLabel.y = i + 20, KiteEnter.kiteHeight >= e.kiteHeight ? (this.askAssistBtn.icon = "comBtnTxt_json.common_txt_lqbx", 
            this.hGiftBoxTween || (this.hGiftBoxTween = !0, util.rockTween(this.hGiftBox))) : (this.askAssistBtn.icon = "comBtnTxt_json.common_txt_qzjs", 
            this.hGiftBoxTween && (this.hGiftBoxTween = !1, egret.Tween.removeTweens(this.hGiftBox))), 
            this.maxHeightLabel.text = e.kiteHeight + "米";
        }, i.prototype.backBtnFunc = function() {}, i.prototype.takeGiftBox = function() {
            var t = KiteFunc.getKiteItemConf(KiteEnter.kiteId);
            if (t) {
                var i = {};
                for (var n in t.awardOneType) {
                    var o = t.awardTwoType[n], a = t.awardTwoCount[n];
                    i[o] = a;
                }
                var r = Boolean(KiteEnter.kiteHeight >= t.kiteHeight), s = "", l = "common_txt_lq", d = {
                    reward: i,
                    ok: r,
                    enough: !0,
                    type: "fly",
                    tip: s,
                    btnLabel: l
                };
                hortor.WindowManager.showWindow(e.WindowType.WINDOW_KITE_REWARD, d);
            }
        }, i.prototype.askAssistBtnFunc = function() {
            soundModel.buttonOpen(), e.PlatformManager.share(e.ShareType.kiteAssist);
        }, i.prototype.helpBtnFunc = function() {
            var t = HelpTextLabel.getKiteTextLabel();
            e.ComFunc.openHelpPanel(t);
        }, i.prototype.newsBtnFunc = function() {
            HttpService.post(e.ServerMsg.KITE_LOGS, "uid=" + playerModel.uid, function(t) {
                hortor.WindowManager.showWindow(e.WindowType.WINDOW_KITE_NEWS, t);
            });
        }, i.prototype.kiteHouseFunc = function() {
            KiteEnter.owner != playerModel.uid ? hortor.TipManager.tip("请回自己家制作风筝") : hortor.WindowManager.showWindow(e.WindowType.WINDOW_KITE_MAIN, KiteEnter.kiteId);
        }, i.prototype.onClose = function() {
            KiteMark.isOther = !1, this.timer && (this.timer.stop(), this.timer.removeEventListener(egret.TimerEvent.TIMER, this.timerFunc, this), 
            this.timer = null), this.houseArmature && (this.houseArmature.dispose(), this.houseArmature = null), 
            this.squareArmature && (this.squareArmature.dispose(), this.squareArmature = null), 
            this.kiteArmature && (this.kiteArmature.dispose(), this.kiteArmature = null), this.kiteFlyArmature && (this.kiteFlyArmature.dispose(), 
            this.kiteFlyArmature = null), egret.Tween.removeTweens(this.friendInfoGroup), egret.Tween.removeTweens(this.hGiftBox), 
            egret.Tween.removeTweens(this.continueImg);
        }, i;
    }(e.ScreenBase);
    e.KiteScreen = t, __reflect(t.prototype, "game.KiteScreen");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onData = function() {
            this.desc.text = "确定要赠送风筝材料吗？", this.pw = _.random(1e3, 9999), this.scretLabel.text = "" + this.pw;
        }, i.prototype.sendFunc = function() {
            var t = this;
            HttpService.post(e.ServerMsg.KITE_DONATE, "uid=" + playerModel.uid + "&fid=" + KiteMark.sendData.uid + "&idx=" + KiteTmpData.kiteSendMaterialId + "&password=" + this.pw, function(i) {
                KiteFunc.updateKiteEnterData(i);
                var n = hortor.WindowManager.getWindow(e.WindowType.WINDOW_KITE_MAIN);
                n && n.update(), EventCenter.sendEvent(EventConst.ReportGive), gateModel.updateGate(e.ActivityType.kite), 
                hortor.TipManager.bubble("赠送成功"), t.hide(), hortor.WindowManager.hideWindow(e.WindowType.WINDOW_KITE_SENDFRIEND);
            });
        }, i;
    }(e.ComSendPropWindow);
    e.KiteSendPropWindow = t, __reflect(t.prototype, "game.KiteSendPropWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.effect = null, e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.onViewRegister();
        }, i.prototype.show = function(e, i, n, o, a) {
            return void 0 === n && (n = null), void 0 === o && (o = null), void 0 === a && (a = null), 
            t.prototype.show.call(this, hortor.StageManager.getLayer(hortor.Layer.TIP), i, n, o, a);
        }, i.prototype.onOpen = function() {}, i.prototype.onClose = function() {
            this.rewardAnim && this.rewardAnim.parent && (this.rewardAnim.parent.removeChild(this.rewardAnim), 
            this.rewardAnim = null), this.makeGroup.visible = !1, this.assistGroup.visible = !1;
        }, i.prototype.onData = function() {
            hortor.Log.log("KiteSuccessPopWindow =>> onData"), this.openPanel();
        }, i.prototype.prepare = function(e) {
            e(null);
        }, i.prototype.onViewRegister = function() {
            this.sureBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.viewFunc, this);
        }, i.prototype.onViewRemove = function() {
            this.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.viewFunc, this);
        }, i.prototype.openPanel = function() {
            var t = this.data.popType;
            this.makeGroup.visible = t == KitePopType.MAKE_SUCCESS, this.assistGroup.visible = t == KitePopType.ASSIST_SUCCESS, 
            t == KitePopType.ASSIST_SUCCESS ? (this.data.data.currentSpeed > 100 ? this.addLabel.x = 258 : this.addLabel.x = 228, 
            this.leftLabel.text = "" + (this.data.data.currentSpeed - this.data.data.upSpeed), 
            this.rightLabel.text = "" + this.data.data.currentSpeed, this.addLabel.text = "+" + this.data.data.upSpeed, 
            this.sureBtn.icon = "comBtnTxt_json.common_txt_qr") : (this.kiteImg.source = "kite_" + this.data.kiteId + "_1_png", 
            this.sureBtn.icon = "comBtnTxt_json. common_txt_ff", this.rewardAnim = new e.ArmaturePlayer("jiangli"), 
            this.effectGroup.addChildAt(this.rewardAnim, 0), this.rewardAnim.x = .5 * this.effectGroup.width, 
            this.rewardAnim.y = .5 * this.effectGroup.height, this.rewardAnim.scaleX = this.rewardAnim.scaleY = 1.15, 
            this.rewardAnim.play("jinru", 0));
        }, i.prototype.viewFunc = function(t) {
            var i = hortor.ScreenManager.getScreen(e.ScreenType.KITE_SCREEN);
            hortor.ScreenManager.isOpen(e.ScreenType.KITE_SCREEN) && (this.data.popType == KitePopType.MAKE_SUCCESS ? (e.ComFunc.hideViewByWindowType(e.WindowType.WINDOW_KITE_MAIN), 
            i && i.showFlyTips("make")) : this.data.popType == KitePopType.ASSIST_SUCCESS && i && (i.assistOtherTweens(), 
            i.showFlyTips("init"))), this.hide();
        }, i;
    }(e.WindowBase);
    e.KiteSuccessPopWindow = t, __reflect(t.prototype, "game.KiteSuccessPopWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(e) {
        function t() {
            var t = e.call(this) || this;
            return t.skinPath = "kite/KiteAssistHeadSkin", t;
        }
        return __extends(t, e), t.prototype.onInit = function() {}, t.prototype.onData = function() {
            "no" != this.data.head ? (util.setRemoteAvatar(this.head, this.data.head), this.desc.text = "" + this.data.desc) : (this.head.source = "", 
            this.desc.text = "");
        }, t;
    }(e.ItemRenderBase);
    e.KiteAssistHeadNode = t, __reflect(t.prototype, "game.KiteAssistHeadNode");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.btnFunc = function() {
            "send" == this.data.btnType && (KiteMark.sendData = this.data, hortor.WindowManager.showWindow(e.WindowType.WINDOW_KITE_SENDPROP));
        }, i;
    }(e.ComFriendItem);
    e.KiteFriendItem = t, __reflect(t.prototype, "game.KiteFriendItem");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(e) {
        function t() {
            var t = e.call(this) || this;
            return t.skinPath = "kite/KiteMaterialSkin", t;
        }
        return __extends(t, e), t.prototype.onData = function() {
            this.initView();
        }, t.prototype.initView = function() {
            var e = this.data;
            this.mName.text = e.mName, this.mIcon.source = e.mIcon, this.mDesc.text = "x" + e.mHave;
        }, t;
    }(e.ItemRenderBase);
    e.KiteMaterialNode = t, __reflect(t.prototype, "game.KiteMaterialNode");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e.mGenderColor = [ 16734615, 42223 ], e;
        }
        return __extends(i, t), i.prototype.onData = function() {
            var t = this.data;
            this.avatarInfo.data = {
                gender: t.friendGender,
                headImg: t.friendHeadImg || "",
                crowns: 0,
                showStar: !1
            }, Boolean(1 == t.friendGender) ? this.nameLabel.textColor = this.mGenderColor[1] : this.nameLabel.textColor = this.mGenderColor[0], 
            this.nameLabel.text = "" + t.friendName, this.timeLabel.text = e.ComFunc.toTodayTime(this.data.createTime);
            var i = KiteMaterialStaticConf[t.idx], n = this.desc;
            n.textFlow = [], t.fromFriend ? (this.getBtn.visible = !t.got, this.hasGet.visible = t.got, 
            this.password.visible = !1, this.sendIcon.visible = !1, n.textFlow.push({
                text: "赠送你一种材料",
                style: {
                    textColor: this.descColor
                }
            }), n.textFlow.push({
                text: i.mName,
                style: {
                    textColor: this.targetColor
                }
            })) : (this.getBtn.visible = !1, this.hasGet.visible = !1, this.password.visible = !0, 
            this.sendIcon.visible = !0, this.password.text = "(密码:" + t.password + ")", n.textFlow.push({
                text: "收到你送的一种材料",
                style: {
                    textColor: this.descColor
                }
            }), n.textFlow.push({
                text: i.mName,
                style: {
                    textColor: this.targetColor
                }
            })), t.gotTime > 0 && (this.password.visible = !0, this.password.text = moment(1e3 * t.gotTime).format("MM-DD hh:mm") + "领取");
        }, i.prototype.getBtnFunc = function() {
            this.data.got || hortor.WindowManager.showWindow(e.WindowType.WINDOW_KITE_GETPROP, this.data);
        }, i;
    }(e.ComNewsItem);
    e.KiteNewsNode = t, __reflect(t.prototype, "game.KiteNewsNode");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.getBtnGroup.addEventListener(egret.TouchEvent.TOUCH_TAP, this.payBtnFunc, this), 
            this.kiteGift = this.getPirateGift(), this.getBtnGroup.touchChildren = !1;
            var e = new hortor.TouchScaleEffect();
            e.start(this.getBtnGroup), this.kiteGift && this.kiteGift.clock.registCallBack(this, this.onTimeChange, this.onTimeUpdate);
        }, i.prototype.onData = function() {
            this.payBtn.enabled = this.kiteGift && this.kiteGift.isRunning, gateModel.updateGate(e.ActivityType.kiteGift);
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.onTimeUpdate = function() {
            this.timeLabel.text = this.kiteGift.clock.leftTimeFormatZh;
        }, i.prototype.onTimeChange = function() {
            this.timeLabel && (this.timeLabel.text = "活动结束", this.payBtn.enabled = this.kiteGift.isRunning), 
            gateModel.getGate(e.WindowType.WINDOW_PARTYGIFT).isUnlock = !1;
        }, i.prototype.getPirateGift = function() {
            var t = activityModel.getActivityInfo(e.ActivityType.occasionalGift, e.ActivityType.kiteGift);
            return t;
        }, i.prototype.payBtnFunc = function() {
            0 != this.payBtn.enabled && this.kiteGift && this.kiteGift.isRunning && (shopModel.payGiftType = e.ActivityType.kiteGift, 
            e.PlatformManager.pay("occasionalGift", 1, this.kiteGift.aid));
        }, i;
    }(e.TabWindowBase);
    e.KiteGiftWindow = t, __reflect(t.prototype, "game.KiteGiftWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function() {
        function e() {
            this.queue = [];
        }
        return e;
    }();
    e.GenericNotificationGroup = t, __reflect(t.prototype, "game.GenericNotificationGroup");
    var i;
    !function(e) {
        e[e.none = 0] = "none", e[e.couple = 1] = "couple", e[e.friend_quick = 2] = "friend_quick", 
        e[e.login_msg = 3] = "login_msg", e[e.login_friend = 4] = "login_friend", e[e.exchange_success = 5] = "exchange_success", 
        e[e.receive_donate = 6] = "receive_donate", e[e.exchange_request = 7] = "exchange_request", 
        e[e.friend_request = 8] = "friend_request", e[e.max = 9] = "max";
    }(i = e.NotificationMainType || (e.NotificationMainType = {}));
    var n;
    !function(e) {
        e[e.none = 0] = "none", e[e.jigsaw = 1] = "jigsaw", e[e.octopus = 2] = "octopus", 
        e[e.beach = 3] = "beach", e[e.kite = 4] = "kite", e[e.max = 5] = "max";
    }(n = e.NotificationSubType || (e.NotificationSubType = {}));
    var o = function() {
        function o(e) {
            this.isBubbleShowing = !1, this.curData = null, this.isPaused = !1, this.isOnTapPaused = !1, 
            this._tempPoint = null, this.names = [ "赵君", "GreenDay", "Neo3", "张某", "Orochimaru", "test14", "椰奶终结者" ], 
            this.heads = [ "http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLkhzfibpyOY1u119Gv0AyyjVp93jQvNCFnX5NPT1HN4g44j2XfMrzcrpzjdVViclO3IrOOhhyibhcZA/132", "http://wx.qlogo.cn/mmopen/Q3auHgzwzM4wXpcUXZYcbWdMbwpmQ6lDBiaUJAXZY9XB5X8mwE8TklxnR0Hb6bcSNiaibzA5W7nhfLWnOibPsCmzpw/132", "http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEIgeLXeOQAI0U7Tl9DZNCWibDH9vSbu9F2Z7nRSkB2RNnAr4X4RhjiaP5ibQx44ov5urzhbMXuWb8woA/132", "https://wx.qlogo.cn/mmopen/vi_32/DYAIOgq83eokgrJcv6B3vQ7kB9vSgcv2NRXaHzmabaVdzXtsfTx7ndXnG0Y6q7HZfVYzIDOrpGgEf0IJjqcR4A/132", "http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erpQsHl15Erk14c968rXVlemroXlje56s3RM6sn8Q1H9eWH1L9tuF0sfy5PgmYnKTD8kbEFCF98Rg/132", "http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK0f0WmvVqBBHvTUcINjDHFOVbrnKXkXYpCqz8756TkV1vczm1LlCSvicZfyXF02AnbCfJI5ddrNrQ/132" ], 
            this.datas = [ {
                action: 11,
                values: [ 5, 1e5, 0 ]
            }, {
                action: 11,
                values: [ 5, 1e5, 0 ]
            }, {
                action: 11,
                values: [ 5, 1e5, 0 ]
            }, {
                action: 7,
                values: [ 2, 4, 1 ]
            }, {
                action: 11,
                values: [ 2, 4, 1 ]
            }, {
                action: 6,
                values: [ 0 ]
            }, {
                action: 6,
                values: [ 0 ]
            }, {
                action: 6,
                values: [ 2, 4, 1 ]
            }, {
                action: 6,
                values: [ 2, 4, 1 ]
            } ], this.mediator = e;
        }
        return o.prototype.init = function() {
            var e = this.mediator;
            e.notificationA.parent.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onTap, this), 
            this._timer = new egret.Timer(500), this._timer.addEventListener(egret.TimerEvent.TIMER, this.timerFunc, this), 
            this._timer.start(), util.jzlog(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>监听了消息推送。。。。。"), 
            EventCenter.addEventListener(EventConst.ReceiveNotification, this.receiveNotification, this), 
            this.bubbleList = [], this.bubbleList.push(e.notificationA), this.bubbleList.push(e.notificationB), 
            this.notificationGroupList = [];
        }, o.prototype.timerFunc = function() {
            if (0 != this.notificationGroupList.length) {
                if (util.jzlog("::::timerFunc begin========="), this.isOnTapPaused) return void util.jzlog(">this.isOnTapPaused == true>>>>>return");
                var e = this.mediator.notificationGroup;
                if (null == this._tempPoint && (this._tempPoint = e.localToGlobal(10, 10)), !e || !e.stage) return void util.jzlog("!_root || !_root.stage  return 了");
                for (var t = e.stage.$hitTest(this._tempPoint.x, this._tempPoint.y), i = !1, n = 0; null != t && 4 > n; ) {
                    if (t == e) {
                        i = !0;
                        break;
                    }
                    t = t.parent, ++n;
                }
                i ? (util.jzlog(">>>>_hit = true"), this.isPaused ? (util.jzlog(">>>>this.isPaused == true"), 
                this.isPaused = !1, egret.Tween.resumeTweens(this.mediator.notificationA), egret.Tween.resumeTweens(this.mediator.notificationB), 
                this.showBubble()) : util.jzlog(">>>>this.isPaused == false ,do nothing")) : (util.jzlog("   __>>>>>_hit = false"), 
                this.isPaused ? util.jzlog(">>>>true == this.isPaused, do nothing") : (util.jzlog(">>>>!this.isPaused"), 
                this.isPaused = !0, egret.Tween.pauseTweens(this.mediator.notificationA), egret.Tween.pauseTweens(this.mediator.notificationB)));
            }
        }, o.prototype.isFriendNewPanelShow = function() {
            return hortor.WindowManager.isOpen(e.WindowType.WINDOW_NEW_FRIEND);
        }, o.prototype.isChatPanelShow = function() {
            return hortor.WindowManager.isOpen(e.WindowType.GROUP_FRIEND);
        }, o.prototype.receiveNotification = function(e) {
            util.jzlog("notification事件处理, evt :", e);
            var t = this.curData;
            return null != t && t.mainType == e.data[0] && t.subType == e.data[1] && t.queue.length > 1 ? void util.jzlog(">>>当前显示的就是这个类型，因为maintype和subtype都一样，并且当前的队列中有数据") : void this._insertNotification(e.data[0], e.data[1], e.data[2]);
        }, o.prototype._removeNotificationByType = function(e) {
            for (var t = this.notificationGroupList, i = t.length - 1; i >= 0; --i) t[i].mainType == e && t.splice(i, 1);
        }, o.prototype._insertNotification = function(e, n, o) {
            if (!(e == i.friend_request && this.isFriendNewPanelShow() || (e == i.exchange_request || e == i.exchange_success) && this.isChatPanelShow())) {
                for (var a = this.notificationGroupList, r = 1e3 * e + n, s = 0; s < a.length; ++s) {
                    var l = a[s];
                    if (l.sortId == r) return void l.queue.push(o);
                    if (l.sortId > r) {
                        var d = new t();
                        return d.sortId = r, d.mainType = e, d.subType = n, d.queue = [ o ], void a.splice(s, 0, d);
                    }
                }
                var u = new t();
                u.sortId = r, u.mainType = e, u.subType = n, u.queue = [ o ], a.push(u), this.showBubble();
            }
        }, o.prototype.showBubble = function(e) {
            void 0 === e && (e = !1), this.isOnTapPaused || this.isPaused || this.isBubbleShowing && !e || this.notificationGroupList.length > 0 && this.pop(this.notificationGroupList.shift());
        }, o.prototype.pop = function(e) {
            var t = this, o = i[e.mainType] + "_parse_" + n[e.subType];
            if (this[o] || (o = i[e.mainType] + "_parse_default"), !this[o]) return void util.jzlog("无法解析的通知类型: " + o);
            util.jzlog("notification: " + o);
            var a = this.bubbleList.shift();
            a.parent.setChildIndex(a, 10), this.bubbleList.push(a), egret.Tween.removeTweens(a), 
            this.curData = e, this.isBubbleShowing = !0, a.visible = !0, a.scaleX = 1, a.scaleY = 1, 
            a.alpha = 0, a.y = 50, egret.Tween.get(a).to({
                y: 0,
                alpha: 1
            }, 150).wait(5e3).call(function() {
                t.curData = null, t.isBubbleShowing = !1, t.showBubble();
            }).to({
                alpha: 0
            }, 150).call(function() {
                a.visible = !1;
            }), this[o](a, e);
        }, o.prototype.onTap = function(e) {
            this._onTapBubble();
        }, o.prototype._onTapBubble = function() {
            var e = this;
            if (null != this.curData) {
                var t = this.bubbleList[this.bubbleList.length - 1];
                this.isOnTapPaused = !0, egret.Tween.removeTweens(t), egret.Tween.get(t).to({
                    scaleX: 0,
                    scaleY: 0
                }, 100).call(function() {
                    e.curData = null, e.isBubbleShowing = !1, e.isOnTapPaused = !1, t.visible = !1;
                });
                var o = this.curData, a = i[o.mainType] + "_tap_" + n[o.subType];
                if (this[a] || (a = i[o.mainType] + "_tap_default"), !this[a]) return void util.jzlog("无法解析的通知类型: " + a);
                soundModel.buttonOpen(), wheelModel.isRotate || this[a](o);
            }
        }, o.prototype._getName = function(e) {
            var t = e.from_name;
            t = t.length > 10 ? t.substr(0, 10) + "..." : t;
            var i = util.getColorByGender(e.gender);
            return {
                text: t,
                style: {
                    size: 18,
                    textColor: i
                }
            };
        }, o.prototype._getItemName = function(e) {
            return {
                text: e,
                style: {
                    size: 20,
                    textColor: 15332465
                }
            };
        }, o.prototype._getDefaultText = function(e) {
            return {
                text: e,
                style: {
                    size: 18,
                    textColor: 16777215
                }
            };
        }, o.prototype._setPortrait = function(e, t) {
            e.headImg.visible = !0, util.setRemoteAvatar(e.headImg, t.from_headimg);
        }, o.prototype._setGender = function(e, t) {
            2 == t ? e.girl.visible = !0 : e.girl.visible = !1;
        }, o.prototype._getItemRawName = function(e, t) {
            var i;
            switch (t) {
              case n.jigsaw:
                i = "拼图碎片";
                break;

              case n.octopus:
                i = "海盗装备";
                break;

              case n.beach:
                i = "海鲜";
                break;

              case n.kite:
                i = "风筝材料";
            }
            return (_.isUndefined(i) || _.isNull(i) || 0 === i.trim().length) && (i = "活动道具"), 
            i;
        }, o.prototype.couple_parse_default = function(e, t) {
            util.jzlog("couple消息解析>>>>>c = ", e, ";group = ", t);
            var i = t.queue[0];
            this._setPortrait(e, i), this._setGender(e, i.gender);
            var n = "发来了CP消息!";
            switch (i.goodsId) {
              case "cpApply":
                n = "邀请您组成CP!";
                break;

              case "cpReply":
                n = "同意了您的CP邀请!";
                break;

              case "cpRemove":
                n = "与您解除了CP!";
            }
            e.content.textFlow = [ this._getName(i), this._getDefaultText(n) ];
        }, o.prototype.friend_quick_parse_default = function(e, t) {
            util.jzlog("推荐好友消息解析>>>>>c = ", e, ";group = ", t);
            var i = t.queue[0];
            util.setRemoteAvatar(e.headImg, i.headImg), e.content.text = i.message, util.jzlog(">>>记录自定义事件:quickFriend_bubble_show");
        }, o.prototype.login_msg_parse_default = function(e, t) {
            util.jzlog("推荐好友消息解析>>>>>c = ", e, ";group = ", t), e.content.text = "您有新的消息，点击查看";
        }, o.prototype.login_friend_parse_default = function(e, t) {
            util.jzlog("上线好友解析>>>>>c = ", e, ";group = ", t), e.content.text = "您有新的好友请求，点击查看";
        }, o.prototype.receive_donate_parse_default = function(e, t) {
            util.jzlog("赠送提示解析>>>>>c = ", e, ";group = ", t);
            var i = t.queue[0];
            util.jzlog("赠送道具: " + JSON.stringify(i)), this._setPortrait(e, i), this._setGender(e, i.gender);
            var n = "赠送了您一个";
            t.queue.length > 1 && (n = "等" + t.queue.length + "人赠送了您一些"), e.content.textFlow = [ this._getName(i), this._getDefaultText(n), this._getItemName(this._getItemRawName(i, t.subType)), this._getDefaultText("!") ];
        }, o.prototype.friend_request_parse_default = function(e, t) {
            util.jzlog("好友申请解析>>>>>c = ", e, ";group = ", t);
            var i = t.queue[0];
            util.jzlog("申请好友: " + JSON.stringify(i)), this._setPortrait(e, i), this._setGender(e, i.gender);
            var n = "想要加您为好友!";
            t.queue.length > 1 && (n = "等" + t.queue.length + "人" + n), e.content.textFlow = [ this._getName(i), this._getDefaultText(n) ];
        }, o.prototype.exchange_success_parse_default = function(e, t) {
            util.jzlog("交换成功解析>>>>>c = ", e, ";group = ", t);
            var i = t.queue[0];
            util.jzlog("交换成功: " + JSON.stringify(i)), this._setPortrait(e, i), this._setGender(e, i.gender);
            var n = "与您交换成功!";
            t.queue.length > 1 && (n = "等" + t.queue.length + "人" + n), e.content.textFlow = [ this._getName(i), this._getDefaultText(n) ];
        }, o.prototype.exchange_request_parse_default = function(e, t) {
            util.jzlog("请求交换解析>>>>>c = ", e, ";group = ", t);
            var i = t.queue[0];
            util.jzlog("请求交换: " + JSON.stringify(i)), this._setPortrait(e, i), this._setGender(e, i.gender);
            var n = "想与您交换物品!";
            t.queue.length > 1 && (n = "等" + t.queue.length + "人" + n), e.content.textFlow = [ this._getName(i), this._getDefaultText(n) ];
        }, o.prototype.friend_request_tap_default = function(t) {
            util.jzlog("好友申请 - 点击解析>>>>>group = ", t), hortor.WindowManager.currentWindow = e.WindowType.WINDOW_NEW_FRIEND, 
            this._removeNotificationByType(i.friend_request);
        }, o.prototype.receive_donate_tap_default = function(e) {
            util.jzlog("赠送提示 - 点击- 点击解析>>>>>group = ", e);
            var t = n[e.subType] + "Func";
            util.jzlog("赠送提示 - 点击: " + t), ActivityFunc[t] && ActivityFunc[t]();
        }, o.prototype.login_friend_tap_default = function(t) {
            util.jzlog("上线 好友申请 - 点击 点击解析>>>>>group = ", t), hortor.WindowManager.currentWindow = e.WindowType.WINDOW_NEW_FRIEND, 
            this._removeNotificationByType(i.friend_request);
        }, o.prototype.login_msg_tap_default = function(t) {
            util.jzlog("上线 新消息 - 点击 点击解析>>>>>group = ", t), hortor.WindowManager.currentWindow = e.WindowType.WINDOW_FRIEND, 
            this._removeNotificationByType(i.exchange_request), this._removeNotificationByType(i.exchange_success);
        }, o.prototype.exchange_request_tap_default = function(t) {
            util.jzlog("交换请求 - 点击解析>>>>>group = ", t), hortor.WindowManager.currentWindow = e.WindowType.WINDOW_PRIVATE_CHAT, 
            this._removeNotificationByType(i.exchange_request), this._removeNotificationByType(i.exchange_success);
        }, o.prototype.exchange_success_tap_default = function(t) {
            util.jzlog("交换成功 - 点击解析>>>>>group = ", t), hortor.WindowManager.currentWindow = e.WindowType.WINDOW_FRIEND, 
            this._removeNotificationByType(i.exchange_request), this._removeNotificationByType(i.exchange_success);
        }, o.prototype.friend_quick_tap_default = function(t) {
            util.jzlog("推荐好友 - 点击解析>>>>>group = ", t), hortor.WindowManager.currentWindow = e.WindowType.WINDOW_FRIEND, 
            util.jzlog("todo:打点:::quickFriend_bubble_click");
        }, o.prototype._addRandom = function() {
            var e = _.random(i.exchange_success, i.max - 1), t = _.random(1, n.max - 1);
            this._addFakeNotification(e, t);
        }, o.prototype._addExchangeSuccess = function() {
            this._addFakeNotification(i.exchange_success, n.none);
        }, o.prototype._addReceiveDonate = function() {
            this._addFakeNotification(i.receive_donate, n.octopus);
        }, o.prototype._addExchangeRequest = function() {
            this._addFakeNotification(i.exchange_request, n.none);
        }, o.prototype._addFriendRequest = function() {
            this._addFakeNotification(i.friend_request, n.none);
        }, o.prototype._addFakeNotification = function(e, t) {
            var i = _.random(this.names.length - 1), n = _.random(this.heads.length - 1), o = this.datas[e - 1];
            o.gender = _.random(2), o.from_name = this.names[i], o.from_headimg = this.heads[n];
            var a = this.curData;
            null != a && a.mainType == e && a.subType == t && a.queue.length > 1 || EventCenter.sendEvent(EventConst.ReceiveNotification, [ e, t, o ]);
        }, o.prototype.test = function(e, t) {
            this._addFakeNotification(e, t);
        }, o;
    }();
    e.ButtonLayerNotificationCtrl = o, __reflect(o.prototype, "game.ButtonLayerNotificationCtrl");
}(game || (game = {}));

var g_Notice = null, game;

!function(e) {
    var t = function(e) {
        function t() {
            return null !== e && e.apply(this, arguments) || this;
        }
        return __extends(t, e), t.prototype.onInit = function() {}, t.prototype.onData = function() {
            this._desc = this.data, this.text.textFlow = new egret.HtmlTextParser().parser(this._desc || "");
        }, t.prototype.prepare = function(e, t) {
            e(null);
        }, t;
    }(e.WindowBase);
    e.HelpPanelWindow = t, __reflect(t.prototype, "game.HelpPanelWindow");
}(game || (game = {}));

var HelpTextLabel = function() {
    function e() {}
    return e.getHelpTextLabel = function() {
        var e = "<font color='#F99B37' size=22 blod=true>1.岛屿建设</font>\n岛屿建设是游戏的核心，每个岛屿可建造5个建筑，每个建筑最高等级为5级，当岛屿上所有建筑都升级到满级后，就会进入下一个岛屿开始新的旅程\n\n<font color='#F99B37' size=22 blod=true>2.地图</font>\n在地图中可以查看开拓岛屿的进度以及好友们的状态，并且可以在已经建成的岛屿上开设金矿，持续的增加金币产量\n\n<font color='#F99B37' size=22 blod=true>3.能量</font>\n能量主要用于转盘的消耗，通过时间可以自然恢复到上限，还可以通过购买，每日分享，邀请好友，好友赠送，每日能量，月卡等方式额外获取更多的能量\n\n<font color='#F99B37' size=22 blod=true>4.攻击</font>\n通过转盘抽取攻击指令，玩家可以选择对目标岛屿、好友岛屿、仇人岛屿上的任一建筑进行炮击，如果被炮击的玩家有护盾则攻击失败，攻击者只能获得少量金币，如果没有护盾则攻击成功，攻击者会获得大量金币\n\n<font color='#F99B37' size=22 blod=true>5.偷取</font>\n通过转盘抽取偷取指令，玩家可以在3个岛屿中任选1个偷取金币，如果选中“土豪”岛屿（偷取目标）即可成功偷取大量金币，如果没有猜中也不要紧，快快记住它的样子，以备下次成功偷取\n\n<font color='#F99B37' size=22 blod=true>6.护盾</font>\n护盾可以保护玩家的岛屿免受攻击，最多同时可以拥有3个护盾，每个护盾只能抵御1次攻击，当没有护盾时，岛屿上的建筑很可能被敌人摧毁掉\n\n<font color='#F99B37' size=22 blod=true>7.迷你盾</font>\n迷你盾可以保护单个建筑免受1次攻击，直到通过当前岛屿后才会失效，当护盾不足时快补充一些迷你盾把高级的建筑保护起来\n\n<font color='#F99B37' size=22 blod=true>8.通缉令</font>\n玩家在仇人榜可以对任一仇人进行通缉，玩家的所有好友都可以在攻击时对被通缉者进行攻击，将会额外获得300K的金币奖励，通缉效果最多持续48小时，并且最多可以攻击5次\n\n<font color='#F99B37' size=22 blod=true>9.宠物</font>\n每个宠物都有不同的技能，可以帮助玩家抵御攻击或增加攻击收益，但需要给宠物喂食饼干，否则饥饿的宠物只能“冬眠”（技能无效）了，同时只可以有一只宠物上阵，上阵的宠物可以通过转盘获取经验\n\n<font color='#F99B37' size=22 blod=true>10.月卡</font>\n月卡持续时间为30天，购买后立即获得30点能量，并且每小时能量恢复数量与每日邮件发送数量增加，在持续时间内每日都可以领取10点能量，正所谓一次购买“终身”受益\n\n<font color='#F99B37' size=22 blod=true>FAQ:</font>\nQ: 被偷的人真的会损失金币吗？\n\nA: 会损失，所以尽量不要留太多的金钱，如果好友变成了偷取对象时，一定不要放过他/她！\n\nQ: 已经完成的岛会被攻击吗？\n\nA: 所有之前已经完全的岛就不会被攻击了，是安全的。\n\nQ: 为什么收不到提示？\n\nA: 公众号的推送机器人隔48小时就会睡觉，发送”你好“给公众号，或者点击公众号菜单里的按钮就可以把它唤醒啦。\n\nQ: 我通缉的人我打了怎么不会获得额外奖励？\n\nA: 通缉令是邀请好友来帮你打仇人的，所以额外奖励仅对来帮忙的好友有效。\n\nQ: 怎么领取/赠送好友能量？\n\nA: 打开左上角的“菜单”，打开“好友”功能，在这里可以领取/赠送好友能量，当好友比较多时可以使用正下方的“一键领取/赠送”功能\n\nQ: 怎么添加好友？\n\nA: 打开左上角的“菜单”，打开“好友”功能，点击右上方的“添加好友”，输入对方的友情码或将自己的友情码告诉给朋友，就可以加对方为好友了，也可以将邀请信息发送给您的朋友，邀请他们进入游戏\n\nQ: 怎么删除好友？\n\nA: 打开左上角的“排行榜”，点击上方“好友”功能，点击一个想要删除的好友进入他的岛屿，点击右下角的“删除好友”即可将他删除\n\nQ: 饼干和药水是做什么用的？\n\nA: 饼干是用于增加宠物活跃的，活跃的宠物才会发挥作用，药水是增加宠物经验的，宠物经验满后可以对宠物进行升级，提升技能强度\n\nQ: 声音在哪里关闭？\n\nA: 打开左上角的“菜单”，打开“设置”功能，点击音效前面的按钮，变成OFF状态就会进入无声世界\n\nQ: 游戏时提示“登录信息失效”是什么原因？\n\nA: 出现这种提示一般是由于其他设备登录了相同的账号或者是服务器停机维护造成的，可以退出游戏重新登录\n\nQ: 为什么我分享了却没有获得能量？\n\nA: 每日分享是有次数限制的，超出限制不会获得奖励，每日最多可分享五次，中间间隔需两分钟以上，每日中午11点刷新分享次数\n\nQ: 为什么转轮盘一直转不到攻击？\n\nA: 岛屿为空的时候是转不到攻击的呦！\n\n";
        return e;
    }, e.getBeachTextLabel = function() {
        var e = "<font color='#F99B37' size=22 blod=true>基础玩法</font>\n● 派遣水手搬运沙滩的物品，可获得相应奖励\n● 水手数量会影响搬运速度，数量越多搬运速\n　度越快\n● 与好友抢夺物品</font>时，水手能力强的一方获胜\n● 每邀请1位好友助威</font>都可以增加25%水手能力\n● 在一个好友家同时只能抢夺2个物品</font>\n● 力量药剂可以提升当前海滩上所有己方水手\n　能力10%\n\n<font color='#F99B37' size=22 blod=true>刷新海滩</font>\n● 点击刷新按钮可以召唤海浪刷新海滩，6小时\n　后才可以再次召唤海浪\n● 使用海浪可以立即刷新海滩上所有闲置物品\n● 海滩上最多可容纳5个物品\n\n<font color='#F99B37' size=22 blod=true>巨蟹宝箱</font>\n● 当自己海滩没有水手在拉物品时，海浪刷新\n　海滩时，有概率刷新出巨蟹宝箱\n● 水手越多，刷新出巨蟹宝箱的概率越高，并\n　且巨蟹宝箱携带的金块也会更多\n● 一个巨蟹宝箱可以同时被6个人拉，主人一\n　方3个人，抢夺一方3个人，每个人都可以派\n　水手并且可以助威\n● 拉取巨蟹宝箱时，可以点击加号，分享邀请\n　好友来帮助你一起拉螃蟹\n● 主人一方拉取成功后，主人会获得大部分奖\n　励，其余人获得少量奖励\n● 抢夺方拉取成功后，则所有人平分这些奖励\n\n<font color='#F99B37' size=22 blod=true>水手数量</font>\n● 活动初始每位玩家拥有5名水手\n● 通过积累订单价值可以获取更多额外水手\n● 额外水手可以使用到本期活动结束\n\n<font color='#F99B37' size=22 blod=true>奖励兑换</font>\n● 收集齐订单所需要的物品就可以兑换奖励了\n● 使用金块可以兑换大量金币\n● 个别档位每天有一定的兑换次数，每日凌晨\n　重置次数\n● 使用刷新卷轴可以立即重新刷新1个新订单\n● 每天最多可以赠送3个收藏品，最多也只能收\n　取3个\n● 活动结束后，会清空所有物品，包括海浪、\n　刷新卷轴和力量药剂、金块\n\n<font color='#F99B37' size=22 blod=true>邻居和坏蛋</font>\n● 每2小时可以刷新一次随机邻居，同时自己也\n　有几率被陌生人随机到\n● 坏蛋列表里是所有从你家抢过东西（或正在\n　抢夺）的人，当你反抢一次以后，对方就会\n　从这个列表中消失";
        return e;
    }, e.getJigsawTextLabel = function() {
        var e = activityModel.getActivityInfo("jigsaw"), t = 1e6, i = 6e6;
        e && e.configData && e.configData.money && (t = e.configData.money[0], i = e.configData.money[1]);
        var n = "<font color='#F99B37' size=22 blod=true>拼图规则</font>\n● 集齐拼图碎片即可获得大量奖励，完成的越\n　多，奖励越多！\n● 活动期间内最多可获得10套拼图奖励！\n● 活动结束后，未领取的奖励将被清空，请务\n　必在活动结束前把奖励领取。\n\n<font color='#F99B37' size=22 blod=true>拼图奖励</font>\n● 能量 50 ~ 100\n● 金币 " + game.ComFunc.formatNumber(t) + " ~ " + game.ComFunc.formatNumber(i) + "\n● 随机道具(饼干、喇叭、经验药水)\n\n<font color='#F99B37' size=22 blod=true>拼图获得</font>\n● 转轮盘有一定几率获得碎片\n● 建造或者修复建筑、购买矿工均有机会获得\n　碎片，花费金币越多获得碎片的几率越高\n● 好友之间可以互相赠送拼图碎片（每天最多\n　赠送5次）\n\n<font color='#F99B37' size=22 blod=true>万能碎片</font>\n● 可以替代任意一个缺少的碎片，拼图合成后\n　万能碎片将被消耗\n● 活动结束后万能碎片不会被清空";
        return n;
    }, e.getHateRankTextLabel = function() {
        var e = "<font color='#F99B37' size=22 blod=true>榜单规则</font>\n● 仇人榜会根据被攻击的次数进行排序，最多\n　显示前50名仇人\n● 超过30天未登录的仇人将会被移除\n\n<font color='#F99B37' size=22 blod=true>通缉规则</font>\n● 可以对仇人榜中的任意仇人（未被通缉的）\n　发布通缉令，好友可以协助攻击\n● 被通缉状态最多持续48小时或因通缉被攻击\n　5次后失效\n";
        return e;
    }, e.getOctopusTextLabel = function() {
        var e = "<font color='#F99B37' size=22 blod=true>玩法规则</font>\n● 使用“河豚弹”击落章鱼身上的礼盒可以获得\n　礼盒中的奖励\n● 合理控制弹弓力度与角度更容易击落礼盒\n● 礼盒打光了？没关系，快去好友那里看看吧\n\n<font color='#F99B37' size=22 blod=true>河豚弹获得</font>\n● 通过转转盘有一定几率可以获得“河豚弹”\n● 开启免费宝箱即可获得河豚弹，每天0点重置\n\n<font color='#F99B37' size=22 blod=true>收集品获得</font>\n● 击落章鱼礼盒有几率获得不同的收集品\n    　普通章鱼：酒杯、钩子、望远镜\n    　稀有章鱼：短刀、火枪\n    　传奇章鱼：海盗帽\n● 每天最多赠送可以赠送3个收集品，最多可以\n　领取3个收集品\n\n<font color='#F99B37' size=22 blod=true>章鱼苏醒</font>\n● 当礼盒都被击落后，章鱼会进入睡眠状态，\n　8小时后会自然苏醒并且重新挂满礼盒\n● 可以通过使用“棒棒糖”快速唤醒章鱼\n\n<font color='#F99B37' size=22 blod=true>奖励兑换</font>\n● 使用收集品可以兑换各种不同的大奖\n● 活动结束后，棒棒糖、河豚弹、收集品都将\n　被清空，请尽快使用及兑换，避免损失";
        return e;
    }, e.getSailingTextLabel = function() {
        var e = "<font color='#F99B37' size=22 blod=true>基础规则</font>\n● 竞赛每周一15:00开始，周六15:00结束\n● 竞赛开始前活跃的海盗团都将自动报名加入\n● 竞赛进行中加入的成员不可参加本次竞赛\n\n<font color='#F99B37' size=22 blod=true>赛场规则</font>\n● 竞赛期间海盗团成员完成竞赛任务获得积分\n● 积分会影响帆船的航行距离\n● 帆船越过宝箱即可开启对应的宝箱奖励\n● 竞赛中未获得积分的海盗团将会被直接降级\n\n<font color='#F99B37' size=22 blod=true>任务信息</font>\n● 任务板上的空余位置将在30分钟后自动补充\n● 团长与副团可以撕毁任意任务，每天36次撕\n　毁次数，重置时间为15:00\n● 根据海盗团上周的活跃等级计算本周竞赛总\n　任务次数，单人最多可完成12个任务\n　  海盗团活跃等级1级：任务总数量100\n　  海盗团活跃等级2级：任务总数量120\n　  海盗团活跃等级3级：任务总数量140\n　  海盗团活跃等级4级：任务总数量160\n　  海盗团活跃等级5级：任务总数量180\n\n<font color='#F99B37' size=22 blod=true>联赛信息</font>\n● 竞赛分为青铜、白银、黄金、铂金、钻石、\n　王者6种不同等级的联赛\n● 竞赛结束后根据各等级联赛内的规则升降级\n● 相同积分的海盗团根据其达到该积分的时间\n　制定排序先后\n● 钻石联赛中的佼佼者将会有机会参加王者联\n　赛，王者联赛最多只能容纳10个海盗团\n\n<font color='#F99B37' size=22 blod=true>奖励相关</font>\n● 帆船达到相应的积分即可开启积分宝箱\n● 赛季宝箱每次开启需要消耗1枚幸运币，幸运\n　币可以通过竞赛结束时最终排名获得\n● 联赛等级越高可以开启的积分奖励宝箱数量\n　越多，赛季宝箱内容越豪华\n● 所有奖励都将于下次竞赛开始时重置，所以\n　当获得了奖励记得尽快领取\n● 离开海盗团将无法获得当前竞赛的所有奖励";
        return e;
    }, e.getTaptitansTextLabel = function() {
        var e = "<font color='#F99B37' size=22 blod=true>基础规则</font>\n● 消耗1个唤醒石即可唤醒怪兽，唤醒石每天\n　0点会自动补充至1个，不会累加\n● 长按大炮攻击怪兽，每次消耗1个炮弹，每\n　天0点自动补充至30个，不会累加\n● 自己召唤的怪兽被击败，会获得召唤者奖励\n● 协助好友击败怪兽，根据伤害可获得排名奖\n　励，召唤者计入排名但不会获得排名奖励\n\n<font color='#F99B37' size=22 blod=true>奖励相关</font>\n● 召唤者奖励：\n　15~25能量 + 1.5~2.5M金币 + 随机道具\n● 协助者奖励：\n　第1名：15能量 + 1.5M金币 + 随机道具\n　第2名：10能量 + 750K金币\n　第3名：5能量 + 500K金币\n　第4名：200K金币\n　参与奖：100K金币\n● 协助好友时，伤害排名第5名及以后，或伤\n　害未达到500只能获得参与奖\n● 获得的奖励需要在48小时内领取，否则过\n　期就会消失掉";
        return e;
    }, e.getTreasureTextLabel = function() {
        var e = "<font color='#F99B37' size=22 blod=true>基础规则</font>\n● 砸开金蛋找到宝箱的钥匙，即可获得奖励\n● 使用木槌砸开金蛋，首次消耗1个木槌，第\n　二次消耗2个木槌，之后每次消耗3个木槌\n● 砸开第一个金蛋后，好友们就可以看到你的\n　宝箱，并有6小时的时间帮忙砸蛋，找到钥\n　匙的好友可以和你分享宝箱内的奖励\n● 成功打开宝箱后，再等6个小时就可以开启\n　下一个宝箱了。如果宝箱没有成功打开，\n　则失败后可以马上开启下一宝箱\n\n<font color='#F99B37' size=22 blod=true>木槌获得</font>\n● 转轮盘可以获得木槌\n● 每日可以分享两次，各获得3个木槌\n\n<font color='#F99B37' size=22 blod=true>奖励相关</font>\n● 每个宝箱内装有1 ~ 5M金币\n● 协助好友找到钥匙可以分得一半奖励";
        return e;
    }, e.getTreeTextLabel = function() {
        var e = "<font color='#F57300' size=22 blod=true>基础玩法</font>\n● 点击船上的水果图标，就可以放置货物了\n● 自己不够的水果，可以求助好友帮助，每\n　次新的商船，好友最多只能帮助3次，其\n　余的需要你自己完成哦！\n● 点击求助按钮，选择想要的水果，分享\n　到微信群，当好友点击链接后，就会获\n　得选择的水果，每天可以获得3次水果，\n　每天凌晨3点刷新获得次数\n● 点击好友列表，可以查看好友求助信息，\n　帮助好友装水果，会获得相应奖励\n● 将船上的货物装满，领取黑心商人的礼\n　物，之后，商船会带着货物离开港口\n● 间隔6个小时，黑心商人会带着新的订\n　单回来刷新所有货物的清单，可以重\n　新放置水果\n\n<font color='#F57300' size=22 blod=true>活动奖励</font>\n● 每次放满水果，都会获得一定的奖励\n● 放满水果之后，可以领取黑新船长的\n　礼物，获得大量奖励\n　　能量，金币\n　　道具：通缉令、万能碎片、迷你盾、\n　　　　　饼干、VIP卡、友尽卷轴、\n　　　　　河豚弹、棒棒糖、双倍金币卡\n　　　　　(随机获得其中一个)\n\n<font color='#F57300' size=22 blod=true>获得道具</font>\n● 可以通过转转盘获得水果\n";
        return e;
    }, e.getKiteTextLabel = function() {
        var e = "<font color='#F99B37' size=22 blod=true>材料收集</font>\n● 活动期间转转盘会获得风筝材料\n● 每天可以赠送和收取好友材料各3次\n<font color='#F99B37' size=22 blod=true>风筝制作</font>\n● 总共3种风筝，每种对应不同制作材料以及\n　奖励\n● 制作风筝成功后，会有一定的奖励，并且\n　小鹅会自动放飞此风筝\n● 如果小鹅正在放风筝，则不能制作新的风\n　筝\n<font color='#F99B37' size=22 blod=true>放风筝</font>\n● 小鹅把风筝放到最高点，即可领取放飞大\n　奖领取奖励后，即放飞风筝\n● 小鹅同时只能放一个风筝\n● 放风筝有一个初始速度，分享求助好友可以\n　助力加速，每个风筝最多可以有5个好友助力\n";
        return e;
    }, e.getMoonCakeHelpLabel = function() {
        var e = "● 活动期间，转轮盘有几率获得美食\n● 每次获得美食后，会额外获得一个美食礼\n　盒，把礼盒分享到微信群，只要好友猜中\n　正确的礼盒，双方会各获得一个美食\n● 收集美食兑换各种不同的礼品\n● 活动结束后，所有的美食将被清空，请尽\n　早兑换奖励";
        return e;
    }, e.getGuildHallHelpLabel = function() {
        var e = "● 每个海盗团最多可容纳20名成员\n● 海盗团的职务分为：\n　团长（1人），副团（2人）\n　精英（5人），团员（不限）\n　团长与副团拥有对海盗团的管理权\n● 海盗团活跃度获取：\n　成员每消耗1点能量增加1点活跃度\n　成员每完成1次海盗团任务增加30点\n　活跃度\n　成员每领取1次每日签到奖励增加30点\n　活跃度\n● 每周日24点结算本周海盗团活跃度\n　作为下一周的活跃评定，并且所有活\n　跃度清零重新计算\n● 初始活跃度等级为1级，最高可升至5级，\n　1级活跃度：0\n　2级活跃度：10000\n　3级活跃度：20000\n　4级活跃度：35000\n　5级活跃度：50000\n● 团长7天未登录游戏，将根据职务与\n　活跃度自动转让给他人\n● 离开海盗团的成员在本周所有贡献\n　的活跃度都会被清空\n";
        return e;
    }, e.getPlaneTextLabel = function() {
        var e = "<font color='#F99B37' size=22 blod=true>基础规则</font>\n● 飞机竞速活动时间为每日19:00~23:00\n● 每日最多可参加3次，每局对战人数为4人\n● 活动开始阶段点击开始匹配即可参加活动\n<font color='#F99B37' size=22 blod=true>玩法详情</font>\n● 竞速开始，每架飞机都有一定的初始速度\n● 竞速开始后技能条上随机出现两个技能，\n　并且指针在不停移动，点击屏幕的任何一\n　个位置，指针会停下，如果指针停在技能\n　图标上，则选中技能，即立即释放技能\n● 使用每一个技能都有一定的释放时间\n● 被攻击前有警报预警，记得及时加盾噢！\n● 技能分为4种：\n　　加速：加速飞行一段时间\n　　护盾：获得护盾，可以抵挡一次攻击\n　　前炮弹：向前发射炮弹\n　　后炮弹：向后发射炮弹\n● 被炮弹击中，则减速慢行一段时间\n● 向前发射炮弹时，会随机攻打在你之前的\n　玩家，距离越近，攻击概率越高，向后\n　发炮同理\n● 比赛结束根据排名以及消耗时间会获得\n　相应积分，积分可以兑换奖励\n<font color='#F99B37' size=22 blod=true>赛季段位规则说明：</font>\n● 总共7个段位，分别是：\n　　英勇青铜、不屈白银、荣耀黄金\n　　尊贵铂金、璀璨钻石、至尊星耀\n　　最强王者\n● 每个段位有对应的星星数，升满即可晋\n　升段位，空星再掉星的时，会降低段位\n● 每场比赛的第一名会升一星，最后一名\n　会降一星，其余名次则无星星变化\n● 赛季结束会根据对应段位等级，以邮件\n　的形式发放相应奖励\n<font color='#F99B37' size=22 blod=true>活动奖励</font>\n● 每天会根据当天最好名次领取相应宝箱奖\n　励，第四名只可以领取一个，第一名则可\n　全部领取\n● 每日奖励会在凌晨0点重置，记得及时领\n　取\n";
        return e;
    }, e.getFlowerHelpLabel = function() {
        var e = "● 情人节活动期间转转盘可以获得玫瑰花\n● 赠送玫瑰花双方都可以获得魅力值，送花\n　加10点，收花加20点\n● 魅力值增加到一定阶段可领取宝箱奖励，\n　并且解锁相应称号，只允许顺序领取\n● 送你玫瑰最多的玩家会成为你的爱神\n● 系统每人每天会赠送1朵玫瑰，每日凌晨\n　0点更新\n● 当有玩家送出520朵玫瑰的时候，全服所\n　有在线玩家都可以抢到一个礼盒\n● 赠送玫瑰：\n　一心一意：玫瑰*1\n　十全十美：玫瑰*10\n　天长地久：玫瑰*99\n　　展示：系统全服消息推送\n　我爱你　：玫瑰*520\n　　展示：全服特效展示，并全服礼盒发放\n● 额外礼物：\n　一等奖：整套娃娃（共20套）\n　　条件：世界排行榜前10名及其爱神\n　二等奖：随机一个娃娃（180个）\n　　条件：世界排行榜11-100名及其爱神\n　三等奖：随机一个娃娃（200个）\n　　条件：随机选取魅力值大于5000的\n　　　　　200名玩家\n● 中奖通知：\n　活动结束后，所有中奖玩家会收到中奖\n　信息邮件\n● 领奖方式：\n　活动结束后5个工作日以内海盗委员会\n　会以邮件的方式与中奖玩家联系，届时\n　请您关注邮件并及时回复相应的快递信息，\n　方便及时收到娃娃";
        return e;
    }, e.getTreausreMapTextLabel = function() {
        var e = "<font color='#F99B37' size=22 blod=true>基础玩法</font>\n● 点击藏宝图上宝石矿，消耗铲子进行挖掘，\n  短暂时间后会挖出宝石或宝箱，但有极小几\n  率什么都没挖到，打开宝箱后会获得能量、\n  宝石、随机道具，当宝石被挖光后，进入地\n  图绘制倒计时，时间结束后会出现新的藏宝\n  图，随时可以去挖好友的宝箱。\n<font color='#F99B37' size=22 blod=true>藏宝图</font>\n● 普通藏宝图可以开出普通宝箱\n● 稀有藏宝图可以开出稀有宝箱\n● 传奇藏宝图可以开出传奇宝箱\n<font color='#F99B37' size=22 blod=true>宝箱</font>\n● 不同品质宝箱开出的物品数量也不一样，越\n  好的宝箱开出的物品越好\n    能量：5-50\n    宝石：5-50\n    道具：铲子，经验药水，双倍金币，迷你\n               盾，饼干，万能碎片，1天VIP\n<font color='#F99B37' size=22 blod=true>助力</font>\n● 每个助力将为宝箱加速30分钟，新玩家可以\n  直接开启宝箱\n  加速时间只作用于当前宝箱，已经可以打开\n  的宝箱将不能被加速\n<font color='#F99B37' size=22 blod=true>兑换</font>\n● 宝石可以在右下角兑换金币，里边有可兑换\n  大量金币的选项，但有每日次数限制，不要\n  错过哦\n● 活动结束后将清空所有宝石，请您尽早兑换\n";
        return e;
    }, e.getEnergyPartTextLabel = function() {
        var e = "<font color='#F99B37' size=22 blod=true>准备阶段</font>\n● 消耗能量即可升级瓜分瓶，瓜分瓶等级越\n  高则瓜分到的能量越多\n● 达到银瓜分瓶时，可以解锁爱心加成功能\n● 爱心加成可额外提升瓜分到的能量\n<font color='#F99B37' size=22 blod=true>爱心加成</font>\n● 分享到微信群可邀请好友送爱心\n● 每个好友都可以赠送你一枚爱心\n  每个爱心增加10%能量加成\n● 新玩家送爱心则增加20%能量加成\n● 每个人最多收到10个好友的爱心\n<font color='#F99B37' size=22 blod=true>瓜分阶段</font>\n● 在开奖时间内点击瓜分按钮即可参与瓜分\n● 瓜分后会立即获得相应能量\n● 瓜分到的能量会乘以相应的爱心加成作为额\n  外的能量奖励\n<font color='#F99B37' size=22 blod=true>温馨提示</font>\n● 活动结束后将清空所有数据，请及时参与瓜\n  分大奖\n";
        return e;
    }, e.getPirateKingTextLabel = function() {
        var e = "<font color='#F99B37' size=22 blod=true>骰子</font>\n● 通过转盘获得骰子，骰子可以累积\n\n<font color='#F99B37' size=22 blod=true>玩法</font>\n● 通过摇骰子使船前进\n● 踩到绿圈或骷髅会触发随机事件\n● 在岛屿停留会获得海盗王船员\n● 走完一圈可领取奖励\n\n<font color='#F99B37' size=22 blod=true>事件</font>\n● 绿圈事件-会发生好的事情\n● 骷髅事件-会发生不好的事情\n● 岛屿事件-会获得船员\n● 互动事件-给好友赠送帮助道具或捣蛋道具\n\n<font color='#F99B37' size=22 blod=true>奖励</font>\n● 前四圈，每走完一圈可领取一次奖励\n● 次日重置次数及奖励\n● 第五圈开始每次走完一圈可分享\n  翻倍获得船员\n\n<font color='#F99B37' size=22 blod=true>排行榜</font>\n● 每天获得船员从高到低的排行\n● 前三名会有能量奖励\n● 每日重置船员数量及排行榜名次\n";
        return e;
    }, e.getCoupleRankTextLabel = function() {
        var e = "<font color='#F99B37' size=22 blod=true>排行榜奖励</font>\n● 第1名：每人4500元携程卡，可兑换泰国双人游等产品\n● 第2～7名: 每人1000元携程卡，可兑换迪士尼一日游门票等\n● 第8～17名：每人388元哈根达斯蛋糕券，可兑换哈根达斯指定产品\n● 第18～77名：每人100元话费充值卡，让你享受和CP的甜言蜜语\n● 第78～777名：每人价值60元的CP礼包：50能量，1200000金币\n\n<font color='#F99B37' size=22 blod=true>活动时间</font>\n● 截止8月20日中午12点，统计默契值排名前777名的CP，可以获得海量超值奖励。\n\n<font color='#F99B37' size=22 blod=true>领奖时间</font>\n●  领奖时间截止到8月27日中午12点。逾期未根据客服邮件，填写信息的玩家，将不再发放奖励\n\n<font color='#F99B37' size=22 blod=true>最终解释权归北京豪腾嘉科科技有限公司所有</font>\n";
        return e;
    }, e.getCoupleDiamondTextLabel = function() {
        var e = "<font color='#F99B37' size=22 blod=true>默契度是什么</font>\n● 默契度是CP间感情的见证，共分为5个阶段：情窦初开，惺惺相惜，相知相识，亲密无间，生死不离\n● 情窦初开：默契值1～499\n● 惺惺相惜：默契值500～1499\n● 相知相识：默契值1500～2999\n● 亲密无间：默契值3000～4999\n● 生死不离：默契值5000及以上\n\n<font color='#F99B37' size=22 blod=true>获取默契值</font>\n● CP间相互赠送能量，CP间互相赠送CP盾，每日签到，每日首次分享CP手册，必能获得默契值\n● 转转盘，建造岛屿，购买矿工，均有概率获得默契值。\n";
        return e;
    }, e.getCoupleTextLabel = function() {
        var e = "<font color='#F99B37' size=22 blod=true>如何组CP</font>\n● 达到85星后，转转盘解锁CP系统，点击“我想组CP”，对感兴趣的其他玩家／好友，发送求CP请求即可\n\n<font color='#F99B37' size=22 blod=true>配对成功</font>\n● 若有人同意了你的请求，或者你同意了TA人的请求，则组合成功\n\n<font color='#F99B37' size=22 blod=true>CP权益之默契度</font>\n1) 默契度是什么\n   默契度是CP间感情的见证，共分为5个阶段：情窦初开，惺惺相惜，相知相识，亲密无间，生死不离\n● 情窦初开：默契值1～499\n● 惺惺相惜：默契值500～1499\n● 相知相识：默契值1500～2999\n● 亲密无间：默契值3000～4999\n● 生死不离：默契值5000及以上\n2) 获取默契值\n   CP间相互赠送能量，CP间互相赠送CP盾，每日签到，每日首次分享CP手册，必能获得默契值；转转盘，建造岛屿，购买矿工，均有概率获得默契值\n\n<font color='#F99B37' size=22 blod=true>CP权益之CP盾</font>\n1) CP盾是什么\n   当转到多余的盾牌时，可选择送给自己的CP，帮助CP抵挡一次攻击\n2) 每日可成功赠送3次\n\n<font color='#F99B37' size=22 blod=true>CP权益之互赠能量为每日10点</font>\n\n<font color='#F99B37' size=22 blod=true>解除CP</font>\n●  点击CP的头像，可以通过解除CP按钮来解除关系，主动解除需要消耗3个友尽卷轴\n";
        return e;
    }, e.getRecallFriendTextLabel = function() {
        var e = "<font color='#F57300' size=22 blod=true>谁是老船长</font>\n● 离线超过3天以上的玩家即为老船长\n\n<font color='#F57300' size=22 blod=true>召回奖励</font>\n● 每天可领取3个召回奖励，并且零点重置\n   不领取同样也会清空\n\n<font color='#F57300' size=22 blod=true>召回方式</font>\n● 召回好友，是查看微信好友谁是老船长\n● 召回群友，是将分享链接分享到任意群\n   点击此分享链接查看微信群内老船长\n● 只要老船长通过你的分享链接进入游戏\n   即算成功召回\n\n<font color='#F57300' size=22 blod=true>召回限制</font>\n● 每个玩家最多可被召回5次，超过召回次\n   数的玩家，即使被召回，也无奖励可领\n\n";
        return e;
    }, e.getGuildShopText = function() {
        var e = "1 海盗商店内的所有物品只能通过使用海盗币进行兑换\n\n2  海盗币获取\n● 领取每日签到奖励\n● 领取出勤礼包\n● 完成海盗团任务\n● 帮助海盗团成员完成捐赠请求\n● 领取帆船竞赛奖励\n\n3 每日0点刷新每日限购次数";
        return e;
    }, e.getGuildTaskText = function() {
        var e = "1 每个任务完成后都可以获得一定数量的海盗币，用于在海盗商店中兑换物品\n\n2 海盗团成员每完成一个任务都可以增加30点海盗团活跃度\n\n3 每位成员每日最多可完成6个任务，每日0点刷新所有任务";
        return e;
    }, e.getPetTextLabel = function() {
        var e = "<font color='#F99B37' size=22 blod=true>玩法规则</font>\n● 喂食\n  宠物经过喂食才能发挥作用,\n  每次喂食将保持宠物4小时的活跃时间。\n● 升级\n  当经验满足后，宠物就可以升级了。\n● 经验药水\n  让宠物瞬间获得一大笔经验。";
        return e;
    }, e;
}();

__reflect(HelpTextLabel.prototype, "HelpTextLabel");

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e._count = 0, e._shareCoinType = "", e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.closeBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.closeBtnFunc, this), 
            this.inviteBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.inviteBtnFunc, this);
        }, i.prototype.onOpen = function() {
            var t = this;
            this.kImgPiece.source = e.ItemManager.getItemInfo("allInOne").icon, this.bottomGroup.visible = !gateModel.isWxgame;
            var i = gateModel.isWxgame && "video" == this._shareCoinType;
            this.inviteBtn.icon = i ? "comBtnTxt_json.common_txt_lqsp" : "comBtnTxt_json.common_txt_lqfx", 
            i && (this.inviteBtn.icon = "comBtnTxt_json.common_txt_lqsp"), this.kMultipleAnim = new e.ArmaturePlayer("multipleAward"), 
            this.kGrpAnim.addChild(this.kMultipleAnim), this.kMultipleAnim.x = 200, this.kMultipleAnim.y = 200, 
            this.kGrpBottom.scaleX = this.kGrpBottom.scaleY = 0, this.kGrpBottom.alpha = 0, 
            this.closeBtn.alpha = 0, this.kMultipleAnim.setSlotSkin("101", "share_text_doubleGold_" + this._count + "_png"), 
            this.kMultipleAnim.play("award1", 1, function() {
                t.kMultipleAnim.play("loop", 0);
            }), this.showInfo();
        }, i.prototype.showInfo = function() {
            egret.Tween.removeTweens(this.kGrpBottom), egret.Tween.get(this.kGrpBottom).wait(1e3).to({
                scaleX: 1,
                scaleY: 1,
                alpha: 1
            }, 800, egret.Ease.backOut), egret.Tween.get(this.closeBtn).wait(1300).to({
                alpha: 1
            }, 800, egret.Ease.quartOut);
        }, i.prototype.onData = function() {
            this._count = this.data.count, this._shareCoinType = this.data.type;
        }, i.prototype.inviteBtnFunc = function() {
            "comBtnTxt_json.common_txt_lqsp" == this.inviteBtn.icon ? gateModel.wxCanShowAd ? e.PlatformManager.createVideoAd(e.AdType.adUnitId_money, this.getAdReward.bind(this), this.getAdReward.bind(this), function() {}) : hortor.TipManager.alert("未能成功获取到视频", function() {
                e.PlatformManager.share(e.ShareType.shareForGold);
            }) : gateModel.isWxgame ? "comBtnTxt_json.common_txt_lqfx" == this.inviteBtn.icon ? e.PlatformManager.share(e.ShareType.shareForGold) : "comBtnTxt_json.common_txt_lq" == this.inviteBtn.icon && this.getAdReward() : e.PlatformManager.share(e.ShareType.shareForGold);
        }, i.prototype.getAdReward = function() {
            HttpService.post(e.ServerMsg.SHARE_COIN_REWARD, "uid=" + playerModel.uid, function(t) {
                playerModel.money = t.money, EventCenter.sendEvent(EventConst.GoldChange), hortor.WindowManager.showWindow(e.WindowType.WINDOW_REWARD, {
                    money: t.reward
                }), hortor.WindowManager.isOpen(e.WindowType.WINDOW_MULTIPLE_GOLD) && hortor.WindowManager.hideWindow(e.WindowType.WINDOW_MULTIPLE_GOLD);
            });
        }, i.prototype.onClose = function() {
            this.kGrpBottom.scaleX = this.kGrpBottom.scaleY = 0, this.kGrpBottom.alpha = 0, 
            this.closeBtn.alpha = 0, egret.Tween.removeTweens(this.kGrpBottom), egret.Tween.removeTweens(this.closeBtn), 
            this.kMultipleAnim && this.kMultipleAnim.parent && (this.kMultipleAnim.dispose(), 
            this.kMultipleAnim = null), soundModel.buttonClose();
        }, i.prototype.closeBtnFunc = function() {
            this.hide();
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i;
    }(e.WindowBase);
    e.MultipleGoldWindow = t, __reflect(t.prototype, "game.MultipleGoldWindow");
}(game || (game = {}));

var MainTopMenu = function() {
    function e(e) {
        this.mediator = e;
    }
    return e.prototype.onViewRegister = function() {
        this.mediator.moneyGroup.addEventListener(egret.TouchEvent.TOUCH_TAP, this.addBtnFunc, this);
    }, e.prototype.onViewRemove = function() {
        this.mediator.moneyGroup.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.addBtnFunc, this);
    }, e.prototype.onEventCenterRegister = function() {
        EventCenter.addEventListener(EventConst.GoldChange, this.refreshGold, this), EventCenter.addEventListener(EventConst.ShieldChange, this.refreshShields, this), 
        EventCenter.addEventListener(EventConst.CPShieldChange, this.refreshShields, this), 
        EventCenter.addEventListener(EventConst.CrownsChange, this.refreshCrowns, this);
    }, e.prototype.onEventCenterRemove = function() {
        EventCenter.removeEventListener(EventConst.GoldChange, this.refreshGold, this), 
        EventCenter.removeEventListener(EventConst.ShieldChange, this.refreshShields, this), 
        EventCenter.removeEventListener(EventConst.CPShieldChange, this.refreshShields, this), 
        EventCenter.removeEventListener(EventConst.CrownsChange, this.refreshCrowns, this);
    }, e.prototype.openPanel = function() {
        this.initTopView();
        var e = this.mediator;
        e.moneyGroup.x = platform.user ? 250 : 402, game.ComFunc.isShowPayNode(e.addBtn), 
        e.touchEnabled = e.addBtn.visible;
    }, e.prototype.addBtnFunc = function(e) {
        HttpService.get(game.ServerMsg.SHOP_LIST, "uid=" + playerModel.uid, function(e) {
            soundModel.buttonOpen(), hortor.WindowManager.showWindow(game.WindowType.WINDOW_SHOP);
        });
    }, e.prototype.initTopView = function() {
        var e = this.mediator;
        e.starNum.text = playerModel.crowns + "", e.moneyNum.text = game.ComFunc.toThousands(playerModel.money), 
        this.refreshShields();
    }, e.prototype.refreshGold = function() {
        var e = this.mediator;
        this.showAddTween(e.moneyNum), e.moneyNum.text = game.ComFunc.toThousands(playerModel.money), 
        EventCenter.sendEvent(EventConst.MenuRedPoint);
    }, e.prototype.refreshShields = function() {
        for (var e = this.mediator, t = 0; 3 > t; t++) {
            var i = e["defense" + t];
            i.visible = playerModel.shields - 1 >= t;
        }
        var n = playerModel.couple || {
            coupleShieldCount: 0
        };
        e.defense3.visible = n.coupleShieldCount > 0;
    }, e.prototype.refreshCrowns = function() {
        var e = this.mediator;
        this.showAddTween(e.starNum), e.starNum.text = playerModel.crowns + "";
    }, e.prototype.showAddTween = function(e) {
        var t = egret.Tween.get(e);
        t.to({
            scaleX: 1.4,
            scaleY: 1.4
        }, 300, egret.Ease.quadOut).to({
            scaleX: 1,
            scaleY: 1
        }, 100);
    }, e;
}();

__reflect(MainTopMenu.prototype, "MainTopMenu");

var MapProxy = function() {
    function e() {}
    return e.openMineWindow = function() {
        for (var e = playerModel, t = islandModel.mapInfo, i = t.mines, n = -1, o = i.length - 2; o > 0; o--) {
            var a = i[o];
            if (e.money >= a.costs[a.miner]) {
                n = a.island;
                break;
            }
        }
        n = -1 == n ? e.island : n, n = n >= e.islandCount ? e.islandCount - 1 : n, hortor.ScreenManager.showScreen(game.ScreenType.MAP_SCREEN, {
            mapInfo: t,
            idx: n
        }), EventCenter.sendEvent(EventConst.openCloudEffect);
    }, e.refreshMapRedPoint = function() {
        EventCenter.sendEvent(EventConst.RefreshMapRedPoint);
    }, e.refreshToBuildCount = function() {
        islandModel.ableToBuildCount = 0;
        for (var e = 0; 5 > e; e++) 1 == islandModel.buildings[e].status ? playerModel.money >= .5 * islandModel.buildingCost[e].costs[islandModel.buildings[e].level - 1] && islandModel.ableToBuildCount++ : playerModel.money >= islandModel.buildingCost[e].costs[islandModel.buildings[e].level] && islandModel.ableToBuildCount++;
        if (islandModel.ableToBuildCount > 0 ? EventCenter.sendEvent(EventConst.toBuildRedPointOpen) : EventCenter.sendEvent(EventConst.toBuildRedPointClose), 
        islandModel.ableToMineCount = 0, playerModel.island > 1) for (var t = islandModel.mapInfo.mines, e = 0; e < t.length; e++) t[e].miner < 5 && t[e].island < playerModel.island && playerModel.money >= t[e].costs[t[e].miner] && islandModel.ableToMineCount++;
    }, e.mapFullRedPoint = !1, e.worldMapFriends = [], e;
}();

__reflect(MapProxy.prototype, "MapProxy");

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.data = {
                islandId: 0
            }, e.isMoving = !1, e.middleBuilding = 0, e.buildIdArr = [ -1, 0, 1 ], e.markNum = 0, 
            e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.init();
        }, i.prototype.onOpen = function() {
            this.onViewRegister(), this.onEventCenterRegister(), this.closeBtn.enabled = !0, 
            uiModel.onShow(e.UINameType.getMoney, this.getMoney), uiModel.onShow(e.UINameType.addMine, this.addMine), 
            e.TutorialManager.instance.setCondition("mineOpen");
        }, i.prototype.onClose = function() {
            if (this.onViewRemove(), this.onEventCenterRemove(), this.getGoldGroup.numChildren > 0) for (;this.getGoldGroup.numChildren > 0; ) {
                var e = this.getGoldGroup.getChildAt(0);
                e && e.dispose(), this.getGoldGroup.removeChildAt(0);
            }
        }, i.prototype.onData = function() {
            this.buildArrs = [], this._startPosX = 0, this.isMoving = !1, this.middleBuilding = 0, 
            this.buildIdArr = [ -1, 0, 1 ], this.markNum = 0, this.interval = 0, this.getInterval = 0, 
            this._moving = !1, this.initView();
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.initView = function() {
            var t = islandModel.mapInfo;
            playerModel.island > 1 && (this.goldNum.text = e.ComFunc.toThousands(Math.floor(t.moneyBox)), 
            this.moneyTimer = new egret.Timer(1e3, 0), t.producePerSecond > 0 && this.moneyTimer.start()), 
            this.openPanel();
        }, i.prototype.init = function() {
            this.mainTopMenu || (this.mainTopMenu = new MainTopMenu(this)), this.getGoldGroup.y -= hortor.StageManager.stageOffHeight, 
            this.setNotchFit(this.mainTopGroup), this.setNotchFit(this.closeBtn);
        }, i.prototype.onViewRegister = function() {
            var e = this;
            e.closeBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.playCloseEffect, this), 
            e.getMoney.addEventListener(egret.TouchEvent.TOUCH_TAP, this.getMoneyBtnFunc, this), 
            e.addMine.addEventListener(egret.TouchEvent.TOUCH_TAP, this.addMineFunc, this), 
            e.lockBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.lockBtnFunc, this), 
            e.moneyTimer && e.moneyTimer.addEventListener(egret.TimerEvent.TIMER, this._countDown, this), 
            e.addEventListener(egret.TouchEvent.TOUCH_BEGIN, this.touchBegin, this), e.addEventListener(egret.TouchEvent.TOUCH_MOVE, this.touchMove, this), 
            e.addEventListener(egret.TouchEvent.TOUCH_END, this.touchEnd, this), this.mainTopMenu.onViewRegister();
        }, i.prototype.onViewRemove = function() {
            var e = this;
            e.closeBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.playCloseEffect, this), 
            e.getMoney.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.getMoneyBtnFunc, this), 
            e.addMine.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.addMineFunc, this), 
            e.lockBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.lockBtnFunc, this), 
            e.moneyTimer && (e.moneyTimer.removeEventListener(egret.TimerEvent.TIMER, this._countDown, this), 
            e.moneyTimer.stop(), e.moneyTimer = null), e.removeEventListener(egret.TouchEvent.TOUCH_BEGIN, this.touchBegin, this), 
            e.removeEventListener(egret.TouchEvent.TOUCH_MOVE, this.touchMove, this), e.removeEventListener(egret.TouchEvent.TOUCH_END, this.touchEnd, this), 
            egret.clearInterval(e.interval), e.getInterval && egret.clearInterval(e.getInterval), 
            this.mainTopMenu.onViewRemove(), egret.Tween.removeTweens(e.building0), egret.Tween.removeTweens(e.building1), 
            egret.Tween.removeTweens(e.building2), egret.Tween.removeTweens(e.bottomGroup), 
            egret.Tween.removeTweens(e.closeBtn), egret.Tween.removeTweens(e.cloud0), egret.Tween.removeTweens(e.cloud1), 
            egret.Tween.removeTweens(e.cloud2), egret.Tween.removeTweens(e.cloud3);
        }, i.prototype.onEventCenterRegister = function() {
            EventCenter.addEventListener(EventConst.BuyMiner, this.refreshGoldView, this), this.mainTopMenu.onEventCenterRegister();
        }, i.prototype.onEventCenterRemove = function() {
            EventCenter.removeEventListener(EventConst.BuyMiner, this.refreshGoldView, this), 
            this.mainTopMenu.onEventCenterRemove();
        }, i.prototype.openPanel = function() {
            var t = this;
            t.buildArrs = [], t.buildArrs.push(t.building0), t.buildArrs.push(t.building1), 
            t.buildArrs.push(t.building2);
            var i = playerModel;
            t.lockGroup.visible = !gateModel.guide[e.AcLockType.mine], t.openGroup.visible = !!gateModel.guide[e.AcLockType.mine], 
            t.lockLabel.text = Const.LimitText_18, t.data.idx = _.isUndefined(t.data.idx) ? i.island >= i.islandCount ? i.islandCount - 1 : i.island : t.data.idx, 
            t.buildIdArr[0] = t.data.idx - 1, t.buildIdArr[1] = t.data.idx, t.buildIdArr[2] = t.data.idx + 1, 
            playerModel.isTutorialMiner && (t.buildIdArr[0] = i.island - 3, t.buildIdArr[1] = i.island - 2, 
            t.buildIdArr[2] = i.island - 1);
            var n = [ {
                x: 260,
                y: 140
            }, {
                x: 410,
                y: 137
            }, {
                x: 320,
                y: 130
            }, {
                x: 370,
                y: 165
            }, {
                x: 290,
                y: 170
            } ];
            if (t.minerGroup.visible = !1, gateModel.guide[e.AcLockType.mine]) {
                for (var o = "ekuang", a = 0; 5 > a; a++) {
                    var r = hortor.ObjectPool.getObject(e.MoviePlayer, o + (a + 1), o + (a + 1));
                    t["minerMC" + a] = r, t["minerMC" + a].play(-1), (a + 1) % 2 == 0 && (t["minerMC" + a].scaleX = -1), 
                    t.minerGroup.addChild(t["minerMC" + a]), t["minerMC" + a].x = n[a].x, t["minerMC" + a].y = n[a].y, 
                    t.markNum++, 5 == t.markNum && this.refreshBuilding(!0), t["minerMC" + a].visible = !1;
                }
                this.refreshMineGold(), t.interval = egret.setInterval(this.playMineGold, this, 3e3);
            } else this.refreshBuilding();
            this.getMoney.enabled = islandModel.mapInfo.moneyBox > 100, this.mainTopMenu.openPanel(), 
            this.playOpenEffect();
        }, i.prototype.initRedPoint = function(e) {
            var t = this, i = islandModel.mapInfo, n = i.mines[e ? e : t.data.idx];
            if (t.addMinePoint.visible = !1, t.getMoneyPoint.visible = MapProxy.mapFullRedPoint, 
            n) for (var o = 0; 5 > o; o++) if (n.miner == o && playerModel.money >= n.costs[o]) {
                t.addMinePoint.visible = !0;
                break;
            }
        }, i.prototype.playOpenEffect = function() {
            var t = this, i = 640, n = 100;
            t.building0.x += i, t.building1.x += i, t.building2.x += i;
            var o = .3 * (i + n), a = .3 * n, r = 1200, s = egret.Ease.quadInOut, l = 0, d = 400, u = egret.Ease.quadOut;
            t.titleGroup.visible = !1, t.myMineGroup.visible = !1, t._moving = !0;
            var h = egret.Tween.get(t.cloud0);
            h.to({
                x: t.cloud0.x - o
            }, r, s).wait(l).call(function() {
                egret.Tween.removeTweens(t.cloud0), t.cloud0.x < -960 ? t.cloud0.x = t.cloud0.x + 1920 : t.cloud0.x > 960 && (t.cloud0.x = t.cloud0.x + 1920), 
                egret.Tween.get(t.cloud0).to({
                    x: t.cloud0.x + a
                }, d, u).call(function() {
                    egret.Tween.removeTweens(t.cloud0), t.cloud0.x < -960 ? t.cloud0.x = t.cloud0.x + 1920 : t.cloud0.x > 960 && (t.cloud0.x = t.cloud0.x + 1920);
                });
            });
            var c = egret.Tween.get(t.cloud1);
            c.to({
                x: t.cloud1.x - o
            }, r, s).wait(l).call(function() {
                egret.Tween.removeTweens(t.cloud1), t.cloud1.x < -960 ? t.cloud1.x = t.cloud1.x + 1920 : t.cloud1.x > 960 && (t.cloud1.x = t.cloud1.x + 1920), 
                egret.Tween.get(t.cloud1).to({
                    x: t.cloud1.x + a
                }, d, u).call(function() {
                    egret.Tween.removeTweens(t.cloud1), t.cloud1.x < -960 ? t.cloud1.x = t.cloud1.x + 1920 : t.cloud1.x > 960 && (t.cloud1.x = t.cloud1.x + 1920);
                });
            });
            var p = egret.Tween.get(t.cloud2);
            p.to({
                x: t.cloud2.x - o
            }, r, s).wait(l).call(function() {
                egret.Tween.removeTweens(t.cloud2), t.cloud2.x < -960 ? t.cloud2.x = t.cloud2.x + 1920 : t.cloud2.x > 960 && (t.cloud2.x = t.cloud2.x + 1920), 
                egret.Tween.get(t.cloud2).to({
                    x: t.cloud2.x + a
                }, d, u).call(function() {
                    egret.Tween.removeTweens(t.cloud2), t.cloud2.x < -960 ? t.cloud2.x = t.cloud2.x + 1920 : t.cloud2.x > 960 && (t.cloud2.x = t.cloud2.x + 1920);
                });
            });
            var g = egret.Tween.get(t.cloud3);
            g.to({
                x: t.cloud3.x - o
            }, r, s).wait(l).call(function() {
                egret.Tween.removeTweens(t.cloud3), t.cloud3.x < -960 ? t.cloud3.x = t.cloud3.x + 1920 : t.cloud3.x > 960 && (t.cloud3.x = t.cloud3.x + 1920), 
                egret.Tween.get(t.cloud3).to({
                    x: t.cloud3.x + a
                }, d, u).call(function() {
                    egret.Tween.removeTweens(t.cloud3), t.cloud3.x < -960 ? t.cloud3.x = t.cloud3.x + 1920 : t.cloud3.x > 960 && (t.cloud3.x = t.cloud3.x + 1920);
                });
            });
            var m = egret.Tween.get(t.building0), f = t.building0.x;
            m.to({
                x: f - i - n
            }, r, s).wait(l).to({
                x: f - i
            }, d, u);
            var v = egret.Tween.get(t.building1), y = t.building1.x;
            v.to({
                x: y - i - n
            }, r, s).wait(l).to({
                x: y - i
            }, d, u);
            var w = egret.Tween.get(t.building2), T = t.building2.x;
            w.to({
                x: T - i - n
            }, r, s).wait(l).to({
                x: T - i
            }, d, u);
            t.bottomGroup.y = 310 + hortor.StageManager.stageOffHeight, t.closeBtn.alpha = 1;
            var _ = egret.Tween.get(t.bottomGroup);
            _.to({
                y: hortor.StageManager.stageOffHeight
            }, 1500, egret.Ease.quadOut), egret.setTimeout(function() {
                t.titleGroup.visible = !0, t.refreshMinerMC(), gateModel.guide[e.AcLockType.mine] && (t.myMineGroup.visible = !0), 
                t._moving = !1;
            }, this, 2e3);
        }, i.prototype.playCloseEffect = function() {
            var e = this;
            this.isShowMiners(!1), egret.Tween.removeTweens(e), hortor.ScreenManager.back();
        }, i.prototype.refreshBuilding = function(e) {
            if (this) {
                for (var t = this, i = 0; 3 > i; i++) {
                    var n = t.buildArrs[i].name, o = n.substr(n.length - 1, 1), a = /^[0-9]$/;
                    if (0 == a.test(o)) return;
                    var r = parseInt(o);
                    t.buildArrs[i].visible = t.buildIdArr[i] >= 0 && t.buildIdArr[i] <= playerModel.islandCount, 
                    t.buildIdArr[i] >= 0 && this.showBuilding(r, t.buildIdArr[i]);
                }
                this.refreshMineGroup(), e || this.refreshMinerMC();
            }
        }, i.prototype.showBuilding = function(t, i) {
            var n = playerModel, o = this, a = islandModel.mapInfo, r = a.islandNames[i], s = i % playerModel.islandCount;
            if (n.island >= i ? i >= playerModel.islandCount ? o["island" + t].source = e.ResourcePath.getIslandMapImage(s, 0) : o["island" + t].source = e.ResourcePath.getIslandMapImage(s, 1) : o["island" + t].source = e.ResourcePath.getIslandMapImage(s, 0), 
            o["produceGroup" + t].visible = n.island > 1 && n.island > i, o["iconLock" + t].visible = n.island < i, 
            o["islandName" + t].text = r, gateModel.guide[e.AcLockType.mine] && n.island > i && n.island <= playerModel.islandCount) {
                var l = a.mines[i];
                l ? o["produceNum" + t].text = l.miner > 0 ? e.ComFunc.toThousands(l.produces[l.miner - 1]) : "0" : o["produceNum" + t].text = "0";
            }
        }, i.prototype.refreshMineGroup = function() {
            var t = playerModel;
            if (gateModel.guide[e.AcLockType.mine]) {
                var i = this, n = islandModel.mapInfo, o = n.mines[i.buildIdArr[1]];
                if (i.mineGroup.visible = !1, o) {
                    if (t.island > i.buildIdArr[1]) {
                        i.mineGroup.visible = !0;
                        for (var a = 0; 5 > a; a++) i["icon" + a].visible = o.miner > a;
                    } else i.mineGroup.visible = !1;
                    o.miner >= 5 && (i.mineGroup.visible = !1), i.addMine.visible = o.miner < 5, i.gouIcon.visible = o.miner >= 5, 
                    this.initRedPoint(i.buildIdArr[1]);
                }
            }
        }, i.prototype.refreshMineGold = function() {
            if (this) {
                if (gateModel.guide[e.AcLockType.mine]) {
                    var t = this, i = islandModel.mapInfo;
                    t.goldNum.text = e.ComFunc.toThousands(Math.floor(i.moneyBox));
                    for (var n = 0, o = 0; o < i.mines.length; o++) {
                        var a = i.mines[o];
                        a.miner > 0 && (n += a.produces[a.miner - 1]);
                    }
                    t.goldRate.text = e.ComFunc.toThousands(n) + "/天", t.totalGold.text = e.ComFunc.toThousands(i.limit), 
                    this.refreshMineGoldProcess();
                }
            }
        }, i.prototype.refreshMineGoldProcess = function() {
            var t = this;
            if (!gateModel.guide[e.AcLockType.mine]) return void (t.mapGold.y = 750);
            var i = islandModel.mapInfo, n = i.moneyBox / i.limit;
            t.goldNum.text = e.ComFunc.toThousands(Math.floor(i.moneyBox)), t.goldBar.mask = new egret.Rectangle(0, 0, 375 * n, 46), 
            t.mapGold.y = 750 - 112 * n;
        }, i.prototype.refreshMinerMC = function() {
            var t = playerModel;
            if (gateModel.guide[e.AcLockType.mine]) {
                for (var i = this, n = islandModel.mapInfo, o = n.mines[i.buildIdArr[1]], a = 0; 5 > a; a++) i["minerMC" + a] && (i["minerMC" + a].visible = !1);
                if (o) {
                    i.minerGroup.visible = i.buildIdArr[1] < t.island;
                    for (var r = 0; r < o.miner; r++) i["minerMC" + r] && (i["minerMC" + r].visible = !0);
                }
            }
        }, i.prototype.refreshGoldView = function(t) {
            var i = this;
            if (gateModel.guide[e.AcLockType.mine]) {
                var n = islandModel.mapInfo;
                !i.moneyTimer.running && n.producePerSecond > 0 && i.moneyTimer.start(), this.refreshBuilding(), 
                this.refreshMineGold(), this.CrownsChangeEffectFunc(t.data.duckId);
            }
        }, i.prototype.playMineGold = function() {
            var t = this, i = islandModel.mapInfo, n = i.mines[t.buildIdArr[1]];
            if (n && 0 != n.miner) for (var o = (i.moneyBox / i.limit, hortor.StageManager.stageHeight - this.minerGroup.y - 200), a = [ {
                x: 260,
                y: 60
            }, {
                x: 410,
                y: 57
            }, {
                x: 320,
                y: 50
            }, {
                x: 370,
                y: 85
            }, {
                x: 290,
                y: 90
            } ], r = "jingbi3_1", s = function(i) {
                var n = hortor.ObjectPool.getObject(e.MoviePlayer, r, r);
                t.minerGroup.addChild(n), n.x = a[i].x, n.y = a[i].y, n.play(-1), util.setScale(n, .5);
                var s = _.random(100, 540), l = _.random(.7, .1), d = egret.Tween.get(n);
                d.wait(200 * i).to({
                    x: s,
                    y: o,
                    scaleX: l,
                    scaleY: l
                }, 800, egret.Ease.cubicIn).call(function() {
                    egret.Tween.removeTweens(n), hortor.ObjectPool.disposeObject(n), t.minerGroup.removeChild(n);
                });
            }, l = 0; l < n.miner; l++) s(l);
        }, i.prototype.getMoneyBtnFunc = function(t) {
            var i = this, n = this, o = this;
            if (!o._moving) {
                soundModel.buttonOpen();
                var a = islandModel.mapInfo;
                a.moneyBox > 0 && (this.getMoney.enabled = !1, soundModel.playSound(e.SoundType.SOUND_MINER_COIN_COLLECT), 
                HttpService.post(e.ServerMsg.COLLECT, "uid=" + playerModel.uid, function(t) {
                    islandModel.mapInfo.moneyBox = t.moneyBox, n.playGetGold(), playerModel.money = t.money, 
                    EventCenter.sendEvent(EventConst.GoldChange), guildModel.addGuildTaskValue(e.GuildProxy.collectMoneyBox, 1), 
                    MapProxy.mapFullRedPoint = !1, MapProxy.refreshMapRedPoint(), i.initRedPoint();
                }));
            }
        }, i.prototype.playGetGold = function() {
            var t = this, i = this, n = islandModel.mapInfo;
            t.moneyTimer.stop();
            for (var o, a, r, s, l = hortor.StageManager.stageHeight - 189, d = "jingbi3_1", u = function(i) {
                var n = hortor.ObjectPool.getObject(e.MoviePlayer, d, d);
                t.getGoldGroup.addChild(n), n.x = 320, n.y = l, n.play(-1), util.setScale(n, .5);
                _.random(100, 540), _.random(.7, .1);
                o = new egret.Point(n.x, n.y), a = new egret.Point(160, 600), r = new egret.Point(400, 200);
                var u = t.goldImg.localToGlobal(0, 0);
                s = new egret.Point(u.x + 32, u.y + 32);
                var c = egret.setTimeout(function() {
                    var e = new MoveAction(n, [ o, a, r, s ], 500, egret.Ease.cubicOut, function() {
                        t.getGoldGroup.removeChild(n), hortor.ObjectPool.disposeObject(n), e = null;
                    });
                    egret.clearTimeout(c);
                }, h, 50 * i);
            }, h = this, c = 0; 20 > c; c++) u(c);
            var p = egret.Tween.get(t.mapGold);
            p.to({
                y: 850
            }, 1600);
            var g = n.moneyBox / 35, m = 0;
            t.getInterval = egret.setInterval(function() {
                n.moneyBox -= g, n.moneyBox < 0 && (n.moneyBox = 0);
                var o = n.moneyBox / n.limit;
                t.goldNum.text = e.ComFunc.toThousands(Math.floor(n.moneyBox)), t.goldBar.mask = new egret.Rectangle(0, 0, 411 * o, 46), 
                m++, m >= 35 && (egret.clearInterval(t.getInterval), t && (t.moneyTimer.start(), 
                n.moneyBox = 0, i.refreshMineGold()));
            }, this, 25);
        }, i.prototype.touchBegin = function(e) {
            var t = this;
            t._startPosX = e.stageX;
        }, i.prototype.touchMove = function(e) {
            var t = this, i = t._startPosX - e.stageX;
            t._moving || (i > 30 && t.buildIdArr[2] <= playerModel.islandCount ? (t._moving = !0, 
            this.toLeftMove()) : -30 > i && t.buildIdArr[0] >= 0 && (t._moving = !0, this.toRightMove()));
        }, i.prototype.touchEnd = function(e) {
            var t = this;
            t._moving || (t._startPosX - e.stageX > 50 && t.buildIdArr[2] <= playerModel.islandCount ? this.toLeftMove() : t._startPosX - e.stageX < -50 && t.buildIdArr[0] >= 0 && this.toRightMove());
        }, i.prototype.toLeftMove = function() {
            var e = this, t = this;
            t.mineGroup.visible = !1, t.minerGroup.visible = !1, t.gouIcon.visible = !1;
            for (var i = 0; 3 > i; i++) t.buildIdArr[i]++;
            var n = 348 * .3, o = egret.Tween.get(t.cloud0);
            o.to({
                x: t.cloud0.x - n
            }, 500, egret.Ease.circOut).call(function() {
                t.cloud0.x < -960 ? t.cloud0.x = t.cloud0.x + 1920 : t.cloud0.x > 960 && (t.cloud0.x = t.cloud0.x + 1920);
            });
            var a = egret.Tween.get(t.cloud1);
            a.to({
                x: t.cloud1.x - n
            }, 500, egret.Ease.circOut).call(function() {
                t.cloud1.x < -960 ? t.cloud1.x = t.cloud1.x + 1920 : t.cloud1.x > 960 && (t.cloud1.x = t.cloud1.x + 1920);
            });
            var r = egret.Tween.get(t.cloud2);
            r.to({
                x: t.cloud2.x - n
            }, 500, egret.Ease.circOut).call(function() {
                t.cloud2.x < -960 ? t.cloud2.x = t.cloud2.x + 1920 : t.cloud2.x > 960 && (t.cloud2.x = t.cloud2.x + 1920);
            });
            var s = egret.Tween.get(t.cloud3);
            s.to({
                x: t.cloud3.x - n
            }, 500, egret.Ease.circOut).call(function() {
                t.cloud3.x < -960 ? t.cloud3.x = t.cloud3.x + 1920 : t.cloud3.x > 960 && (t.cloud3.x = t.cloud3.x + 1920);
            });
            var l = egret.Tween.get(t.buildArrs[0]);
            l.to({
                x: t.buildArrs[0].x - 100
            }, 500, egret.Ease.circOut);
            var d = egret.Tween.get(t.buildArrs[1]);
            d.to({
                x: Const.MapGroupPos[0].x,
                y: Const.MapGroupPos[0].y
            }, 500, egret.Ease.circOut);
            var u = egret.Tween.get(t.buildArrs[2]);
            u.to({
                x: Const.MapGroupPos[1].x,
                y: Const.MapGroupPos[1].y
            }, 500, egret.Ease.circOut).call(function() {
                egret.Tween.removeTweens(t.building0), egret.Tween.removeTweens(t.building1), egret.Tween.removeTweens(t.building2);
                var i = t.buildArrs.shift();
                t.buildArrs.push(i), e.refreshBuilding(), i.x = Const.MapGroupPos[2].x, i.y = Const.MapGroupPos[2].y, 
                t._moving = !1;
            });
        }, i.prototype.toRightMove = function() {
            var e = this, t = this;
            t.mineGroup.visible = !1, t.minerGroup.visible = !1, t.gouIcon.visible = !1;
            for (var i = 0; 3 > i; i++) t.buildIdArr[i]--;
            var n = 102.6, o = egret.Tween.get(t.cloud0);
            o.to({
                x: t.cloud0.x + n
            }, 500, egret.Ease.circOut).call(function() {
                t.cloud0.x < -960 ? t.cloud0.x = t.cloud0.x + 1920 : t.cloud0.x > 960 && (t.cloud0.x = t.cloud0.x - 1920);
            });
            var a = egret.Tween.get(t.cloud1);
            a.to({
                x: t.cloud1.x + n
            }, 500, egret.Ease.circOut).call(function() {
                t.cloud1.x < -960 ? t.cloud1.x = t.cloud1.x + 1920 : t.cloud1.x > 960 && (t.cloud1.x = t.cloud1.x - 1920);
            });
            var r = egret.Tween.get(t.cloud2);
            r.to({
                x: t.cloud2.x + n
            }, 500, egret.Ease.circOut).call(function() {
                t.cloud2.x < -960 ? t.cloud2.x = t.cloud2.x + 1920 : t.cloud2.x > 960 && (t.cloud2.x = t.cloud2.x - 1920);
            });
            var s = egret.Tween.get(t.cloud3);
            s.to({
                x: t.cloud3.x + n
            }, 500, egret.Ease.circOut).call(function() {
                t.cloud3.x < -960 ? t.cloud3.x = t.cloud3.x + 1920 : t.cloud3.x > 960 && (t.cloud3.x = t.cloud3.x - 1920);
            });
            var l = egret.Tween.get(t.buildArrs[0]);
            l.to({
                x: Const.MapGroupPos[1].x,
                y: Const.MapGroupPos[1].y
            }, 500, egret.Ease.circOut);
            var d = egret.Tween.get(t.buildArrs[1]);
            d.to({
                x: Const.MapGroupPos[2].x,
                y: Const.MapGroupPos[2].y
            }, 500, egret.Ease.circOut);
            var u = egret.Tween.get(t.buildArrs[2]);
            u.to({
                x: t.buildArrs[2].x + 100
            }, 500, egret.Ease.circOut).call(function() {
                egret.Tween.removeTweens(t.building0), egret.Tween.removeTweens(t.building1), egret.Tween.removeTweens(t.building2);
                var i = t.buildArrs.pop();
                t.buildArrs.unshift(i), e.refreshBuilding(), i.x = Const.MapGroupPos[0].x, i.y = Const.MapGroupPos[0].y, 
                t._moving = !1;
            });
        }, i.prototype.addMineFunc = function() {
            var t = this;
            soundModel.buttonOpen(), hortor.WindowManager.showWindow(e.WindowType.WINDOW_MAP_MINE, t.buildIdArr[1]);
        }, i.prototype._countDown = function() {
            var e = islandModel.mapInfo;
            this.getMoney.enabled = e.moneyBox > 100, this.refreshMineGoldProcess();
        }, i.prototype.lockBtnFunc = function() {
            soundModel.buttonOpen(), e.ComFunc.openComConfirmPanel(e.AcLockType.mine);
        }, i.prototype.CrownsChangeEffectFunc = function(e) {
            var t = e - 1, i = [ {
                x: 245,
                y: 500
            }, {
                x: 390,
                y: 497
            }, {
                x: 300,
                y: 490
            }, {
                x: 350,
                y: 535
            }, {
                x: 270,
                y: 540
            } ];
            RES.getResAsync("common_img_zjm2", function(e, n) {
                var o = new egret.Bitmap();
                o.texture = e, o.x = i[t].x, o.y = i[t].y, this.addChild(o), egret.Tween.get(o).to({
                    scaleX: 1.5,
                    scaleY: 1.5,
                    y: i[t].y - 100
                }, 300, egret.Ease.quadOut).to({
                    y: i[t].y
                }, 300, egret.Ease.quadIn).wait(200).to({
                    scaleX: 1,
                    scaleY: 1,
                    x: 50,
                    y: 35
                }, 600, egret.Ease.quartIn).call(function() {
                    egret.Tween.removeTweens(o), o && o.parent && o.parent.removeChild(o), EventCenter.sendEvent(EventConst.CrownsChange);
                });
            }, this);
        }, i.prototype.isShowMiners = function(t) {
            var i = this;
            if (gateModel.guide[e.AcLockType.mine]) for (var n = 0; 5 > n; n++) i["minerMC" + n] && (i["minerMC" + n].visible = t);
        }, i.prototype.createArmature = function() {
            var t = this, i = new e.ArmaturePlayer("yanjing");
            t.armatureGroup.addChild(i), i.x = 100, i.y = 1040, i.play("attack", 0);
        }, i.prototype.fitSpecialMobile = function() {
            var e = this;
            e.topNameGroup.visible = !1, e.mainTopGroup.y += Const.SpecialMobileOffY, e.closeBtn.y += Const.SpecialMobileOffY;
        }, i;
    }(e.ScreenBase);
    e.MapWindow = t, __reflect(t.prototype, "game.MapWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return t.call(this) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.onViewRegister();
        }, i.prototype.onOpen = function() {
            uiModel.onShow(e.UINameType.buyBtn0, this.buyBtn0);
        }, i.prototype.onClose = function() {}, i.prototype.onData = function() {
            this.initView();
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.onViewRegister = function() {
            this.buyBtn0.addEventListener(egret.TouchEvent.TOUCH_TAP, this.buyFunc, this), this.buyBtn1.addEventListener(egret.TouchEvent.TOUCH_TAP, this.buyFunc, this), 
            this.buyBtn2.addEventListener(egret.TouchEvent.TOUCH_TAP, this.buyFunc, this), this.buyBtn3.addEventListener(egret.TouchEvent.TOUCH_TAP, this.buyFunc, this), 
            this.buyBtn4.addEventListener(egret.TouchEvent.TOUCH_TAP, this.buyFunc, this);
        }, i.prototype.onViewRemove = function() {
            this.buyBtn0.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.buyFunc, this), 
            this.buyBtn1.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.buyFunc, this), 
            this.buyBtn2.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.buyFunc, this), 
            this.buyBtn3.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.buyFunc, this), 
            this.buyBtn4.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.buyFunc, this);
        }, i.prototype.initView = function() {
            var t = this, i = islandModel.mapInfo, n = i.mines[t.data];
            if (n) {
                t.nowProduce.text = n.miner > 0 ? e.ComFunc.toThousands(n.produces[n.miner - 1]) + "/天" : "0/天", 
                t.nextProduce.text = n.miner > 4 ? e.ComFunc.toThousands(n.produces[4]) + "/天" : e.ComFunc.toThousands(n.produces[n.miner]) + "/天";
                for (var o = 0; 5 > o; o++) t["right" + o].visible = !1, t["moenyGroup" + o].visible = !0, 
                n.miner > o ? (t["bgImg" + o].source = "common_img_zitishuru", t["right" + o].visible = !0, 
                t["moenyGroup" + o].visible = !1, t["buyBtn" + o].visible = !1, t["duck" + o].source = "map_yazi" + o + "_2", 
                t["duck" + o].bottom = 0) : n.miner == o ? (t["bgImg" + o].source = "common_img_tz2", 
                t["duck" + o].source = "map_yazi" + o + "_1", t["buyBtn" + o].visible = !0, t["buyBtn" + o].enabled = !0, 
                t["duck" + o].bottom = 8) : (t["bgImg" + o].source = "common_img_tz2", t["duck" + o].source = "map_yazi" + o + "_0", 
                t["buyBtn" + o].visible = !0, t["buyBtn" + o].enabled = !1, t["duck" + o].bottom = 8), 
                t["money" + o].text = e.ComFunc.toThousands(n.costs[o]), n.costs[o] > playerModel.money ? t["money" + o].textColor = 8487297 : t["money" + o].textColor = 2982842;
            }
        }, i.prototype.buyFunc = function(e) {
            var t = this, i = islandModel.mapInfo, n = i.mines[t.data], o = e.target;
            if (o.name) {
                var a = o.name.indexOf("buy");
                if (-1 != a) {
                    var r = o.name.substr(o.name.length - 1, 1), s = /^[0-9]$/;
                    if (0 == s.test(r)) return;
                    var l = parseInt(r);
                    n.miner == l && this.buyMiner(l + 1);
                }
            }
        }, i.prototype.buyMiner = function(t) {
            var i = this, n = islandModel.mapInfo, o = n.mines[i.data];
            return playerModel.money < o.costs[o.miner] ? void this.checkPopView() : void HttpService.post(e.ServerMsg.MINER, "uid=" + playerModel.uid + "&island=" + i.data + "&miner=" + t, function(i) {
                i.newRank > 0 && i.oldRank > 0 && i.newRank < i.oldRank && (rankModel.rankUpList.push([ i.oldRank, i.newRank ]), 
                hortor.WindowManager.showWindow(e.WindowType.WINDOW_RANKUP));
                for (var o in i) n[o] = i[o];
                playerModel.crowns = i.crowns, playerModel.money = i.money, playerModel.highestCrowns = i.highestCrowns, 
                EventCenter.sendEvent(EventConst.GoldChange), EventCenter.sendEvent(EventConst.BuyMiner, {
                    duckId: t
                }), EventCenter.sendEvent(EventConst.RefreshWorldMapView, {
                    mapData: i
                }), hortor.WindowManager.hideWindow(e.WindowType.WINDOW_MAP_MINE);
                var a = hortor.ScreenManager.getScreen(e.ScreenType.MAP_SCREEN);
                a && a.initRedPoint(), MapProxy.refreshMapRedPoint();
            });
        }, i.prototype.checkPopView = function() {
            var t = playerModel;
            !t.gotNewbieGift && t.rollTotalCount >= 10 && gateModel.iosPay ? hortor.WindowManager.showWindow(e.WindowType.WINDOW_NEWBIE_GIFT) : t.shareTime < 1 && t.shareCount < 5 && 0 == t.energy ? hortor.SystemManager.isWxGame ? hortor.TipManager.alert("金币不足!") : hortor.TipManager.alert("金币不足!") : t.energy > 0 ? hortor.TipManager.alert("金币不足，快去转转盘！", function() {
                hortor.WindowManager.hideWindow(e.WindowType.WINDOW_MAP_MINE), hortor.ScreenManager.currentScreen = e.ScreenType.WHEEL_SCREEN;
            }) : hortor.TipManager.alert("金币不足!");
        }, i;
    }(e.WindowBase);
    e.MineWindow = t, __reflect(t.prototype, "game.MineWindow");
}(game || (game = {}));

var WorldMapFriendsGroup = function(e) {
    function t() {
        var t = e.call(this) || this;
        return t._type = "", t._touched = !1, t.once(egret.Event.COMPLETE, t.createCompleteEvent, t), 
        t.once(egret.Event.REMOVED_FROM_STAGE, t.removeFunc, t), t.skinName = WorldMapFriendsGroupSkin, 
        t;
    }
    return __extends(t, e), t.prototype.createCompleteEvent = function(e) {
        EventCenter.addEventListener(EventConst.WorldMapFriendsGroup, this.eventFunc, this), 
        this.addEventListener(egret.TouchEvent.TOUCH_TAP, this.touchFunc, this);
    }, t.prototype.removeFunc = function() {
        EventCenter.removeEventListener(EventConst.WorldMapFriendsGroup, this.eventFunc, this), 
        this.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.touchFunc, this);
    }, t.prototype.touchFunc = function() {
        this._touched = !0, EventCenter.sendEvent(EventConst.WorldMapFriendsGroup), this._data.length < 2 || ("hide" == this._type ? this._type = "show" : this._type = "hide", 
        this.initData(this._data, this._type), this._touched = !1);
    }, t.prototype.eventFunc = function() {
        "show" != this._type || this._touched || (this._type = "hide", this.initData(this._data, this._type));
    }, t.prototype.initData = function(e, t) {
        if (this._data = e, this._type = t, this.arrImg.visible = this.arrImg.includeInLayout = e.length > 1, 
        this.nodeGroup.removeChildren(), "show" == t) {
            this.arrImg.scaleX = -1;
            for (var i = 0; i < (e.length > 3 ? 3 : e.length); i++) {
                var n = new WorldMapFriendsNode();
                this.nodeGroup.addChild(n), n.initData(e[i], t);
            }
        } else {
            this.arrImg.scaleX = 1;
            var n = new WorldMapFriendsNode();
            this.nodeGroup.addChild(n), n.initData(e[0], t);
        }
    }, t;
}(eui.Component);

__reflect(WorldMapFriendsGroup.prototype, "WorldMapFriendsGroup"), window.WorldMapFriendsGroup = WorldMapFriendsGroup;

var WorldMapFriendsNode = function(e) {
    function t() {
        var t = e.call(this) || this;
        return t.skinName = WorldMapFriendsNodeSkin, t;
    }
    return __extends(t, e), t.prototype.initData = function(e, t) {
        if (util.setRemoteAvatar(this.headImg, e.headImg, 64), this.headMask.source = e.uid == playerModel.uid ? "head_bg10_png" : "head_bg7_png", 
        e.uid == playerModel.uid && "hide" == t) {
            for (var i = 0, n = islandModel.buildings, o = 0; o < n.length; o++) i += n[o].level;
            playerModel.gainIslandReward && (i = 25), this.selfLabel.text = "进度:" + Math.floor(i / 25 * 100) + "%", 
            this.selfGroup.visible = !0;
        } else this.selfGroup.visible = !1;
    }, t;
}(eui.Component);

__reflect(WorldMapFriendsNode.prototype, "WorldMapFriendsNode"), window.WorldMapFriendsNode = WorldMapFriendsNode;

var WorldMapNode = function(e) {
    function t() {
        var t = e.call(this) || this;
        return t.once(egret.Event.COMPLETE, t.createCompleteEvent, t), t.once(egret.Event.REMOVED_FROM_STAGE, t.removeFunc, t), 
        t.skinName = WorldMapNodeSkin, t;
    }
    return __extends(t, e), t.prototype.createCompleteEvent = function(e) {}, t.prototype.removeFunc = function() {}, 
    t.prototype.initView = function(e, t) {
        this.wIcon.visible = !1, this.qizhi.visible = !1;
        var i = playerModel, n = t, o = 0;
        e < i.islandCount && (o = e > i.island ? 0 : 1, this.wIcon.source = game.ResourcePath.getWorldMapIcon(e, o), 
        this.wIcon.visible = !0), n[e] && 5 == n[e].miner && (this.qizhi.visible = !0);
    }, t;
}(eui.Component);

__reflect(WorldMapNode.prototype, "WorldMapNode"), window.WorldMapNode = WorldMapNode;

var WorldMapPos = function() {
    function e() {}
    return e.markPos1 = [ [ 1882, 546 ], [ 1541, 307 ], [ 1641, 180 ], [ 1682, 242 ], [ 1880, 197 ], [ 1637, 622 ], [ 1554, 784 ], [ 1326, 784 ], [ 1395, 606 ], [ 1320, 641 ], [ 1280, 604 ], [ 1189, 719 ], [ 1169, 504 ], [ 1114, 461 ], [ 979, 677 ], [ 852, 746 ], [ 844, 502 ], [ 750, 408 ], [ 562, 425 ], [ 492, 373 ], [ 278, 253 ], [ 311, 121 ], [ 311, 121 ] ], 
    e.pointPos1 = [ [ 1866, 496 ], [ 1525, 257 ], [ 1625, 130 ], [ 1666, 192 ], [ 1864, 147 ], [ 1621, 572 ], [ 1538, 734 ], [ 1310, 734 ], [ 1379, 556 ], [ 1304, 591 ], [ 1264, 554 ], [ 1173, 669 ], [ 1153, 454 ], [ 1098, 411 ], [ 963, 627 ], [ 836, 696 ], [ 828, 452 ], [ 734, 358 ], [ 546, 375 ], [ 476, 323 ], [ 262, 203 ], [ 295, 71 ], [ 295, 71 ] ], 
    e.markPos2 = [ [ 1591, 669 ], [ 1459, 627 ], [ 1392, 671 ], [ 1371, 739 ], [ 1269, 835 ], [ 1084, 693 ], [ 1023, 822 ], [ 745, 779 ], [ 527, 806 ], [ 603, 425 ], [ 735, 404 ], [ 700, 562 ], [ 805, 492 ], [ 847, 443 ], [ 924, 417 ], [ 924, 325 ], [ 1093, 400 ], [ 1204, 370 ], [ 1215, 312 ], [ 1295, 236 ], [ 1228, 156 ], [ 1148, 236 ], [ 898, 107 ], [ 565, 164 ], [ 124, 203 ] ], 
    e.pointPos2 = [ [ 1575, 619 ], [ 1443, 577 ], [ 1376, 621 ], [ 1355, 689 ], [ 1253, 785 ], [ 1068, 643 ], [ 1007, 772 ], [ 729, 729 ], [ 511, 756 ], [ 587, 375 ], [ 719, 354 ], [ 684, 512 ], [ 789, 442 ], [ 831, 393 ], [ 908, 367 ], [ 908, 275 ], [ 1077, 350 ], [ 1188, 320 ], [ 1199, 262 ], [ 1279, 186 ], [ 1212, 106 ], [ 1132, 186 ], [ 882, 57 ], [ 549, 114 ], [ 108, 153 ], [ 108, 153 ] ], 
    e.markPos3 = [ [ 369, 339 ], [ 270, 584 ], [ 151, 698 ], [ 184, 758 ], [ 179, 824 ], [ 234, 835 ], [ 234, 710 ], [ 285, 674 ], [ 268, 758 ], [ 341, 738 ], [ 415, 831 ], [ 474, 893 ], [ 373, 904 ], [ 236, 910 ], [ 203, 971 ], [ 238, 1080 ], [ 314, 1127 ], [ 355, 1188 ], [ 260, 1257 ], [ 292, 1360 ], [ 400, 1288 ], [ 512, 1196 ], [ 512, 1196 ] ], 
    e.pointPos3 = [ [ 353, 289 ], [ 254, 534 ], [ 135, 648 ], [ 168, 708 ], [ 163, 774 ], [ 218, 785 ], [ 218, 660 ], [ 269, 624 ], [ 252, 708 ], [ 325, 688 ], [ 399, 781 ], [ 458, 843 ], [ 357, 854 ], [ 220, 860 ], [ 187, 921 ], [ 222, 1030 ], [ 298, 1077 ], [ 339, 1138 ], [ 244, 1207 ], [ 276, 1310 ], [ 384, 1238 ], [ 496, 1146 ], [ 496, 1146 ] ], 
    e.markPos4 = [ [ 512, 1196 ], [ 400, 1288 ], [ 292, 1360 ], [ 260, 1257 ], [ 355, 1188 ], [ 314, 1127 ], [ 238, 1080 ], [ 203, 971 ], [ 236, 910 ], [ 373, 904 ], [ 474, 893 ], [ 415, 831 ], [ 341, 738 ], [ 268, 758 ], [ 285, 674 ], [ 234, 710 ], [ 234, 835 ], [ 179, 824 ], [ 184, 758 ], [ 151, 698 ], [ 270, 584 ], [ 369, 339 ], [ 369, 339 ] ], 
    e.pointPos4 = [ [ 496, 1146 ], [ 384, 1238 ], [ 276, 1310 ], [ 244, 1207 ], [ 339, 1138 ], [ 298, 1077 ], [ 222, 1030 ], [ 187, 921 ], [ 220, 860 ], [ 357, 854 ], [ 458, 843 ], [ 399, 781 ], [ 325, 688 ], [ 252, 708 ], [ 269, 624 ], [ 218, 660 ], [ 218, 785 ], [ 163, 774 ], [ 168, 708 ], [ 135, 648 ], [ 254, 534 ], [ 353, 289 ], [ 353, 289 ] ], 
    e.islandPos1 = [ [ 68, 175 ], [ 280, 193 ], [ 471, 186 ], [ 366, 403 ], [ 193, 409 ], [ 126, 660 ], [ 299, 646 ], [ 462, 634 ], [ 715, 610 ], [ 922, 613 ], [ 1156, 539 ], [ 978, 392 ], [ 781, 376 ], [ 809, 133 ], [ 1089, 178 ], [ 1455, 166 ], [ 1650, 134 ], [ 1823, 174 ], [ 1709, 399 ], [ 1513, 413 ], [ 1575, 657 ], [ 1827, 669 ] ], 
    e.islandPos2 = [ [ 42, 661 ], [ 234, 647 ], [ 423, 636 ], [ 392, 399 ], [ 193, 409 ], [ 118, 144 ], [ 281, 132 ], [ 482, 134 ], [ 771, 166 ], [ 942, 171 ], [ 1118, 161 ], [ 1162, 364 ], [ 915, 388 ], [ 749, 425 ], [ 795, 638 ], [ 991, 630 ], [ 1172, 588 ], [ 1459, 624 ], [ 1649, 659 ], [ 1811, 625 ], [ 1751, 385 ], [ 1477, 389 ], [ 1453, 143 ], [ 1647, 121 ], [ 1833, 119 ] ], 
    e.islandPos3 = [ [ 82, 191 ], [ 310, 109 ], [ 487, 168 ], [ 376, 391 ], [ 165, 447 ], [ 118, 622 ], [ 311, 642 ], [ 476, 538 ], [ 769, 566 ], [ 1054, 621 ], [ 1042, 391 ], [ 818, 360 ], [ 757, 180 ], [ 967, 139 ], [ 1169, 190 ], [ 1457, 220 ], [ 1674, 64 ], [ 1853, 182 ], [ 1771, 385 ], [ 1527, 397 ], [ 1625, 589 ], [ 1831, 661 ], [ 1453, 143 ], [ 1647, 121 ], [ 1833, 119 ] ], 
    e.islandPos4 = [ [ 62, 663 ], [ 310, 663 ], [ 395, 396 ], [ 192, 409 ], [ 119, 147 ], [ 404, 142 ], [ 771, 164 ], [ 1120, 164 ], [ 1161, 364 ], [ 912, 387 ], [ 990, 631 ], [ 1628, 658 ], [ 1749, 388 ], [ 1477, 385 ], [ 1451, 144 ], [ 1815, 116 ], [ 1654, 64 ] ], 
    e;
}();

__reflect(WorldMapPos.prototype, "WorldMapPos");

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.isShowFriends = !0, e.friendNodes = [], e.nowPositionId = 1, e.menuAction = !1, 
            e.titlePos = [ 30, 125, 220, 315 ], e.titleIds = [ 1, 2, 3, 4 ], e.isPause = !1, 
            e.islandsToFrineds = {}, e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.onViewRegister(), this.onEventCenterRegister(), this.fitScreen();
        }, i.prototype.onOpen = function() {}, i.prototype.onClose = function() {}, i.prototype.onData = function() {
            this.initView();
        }, i.prototype.prepare = function(t, i) {
            HttpService.get(e.ServerMsg.WORLD_MAP, "uid=" + playerModel.uid, function(e) {
                MapProxy.worldMapFriends = e.displayIds, islandModel.mapInfo = e.mapInfo, t(e);
            }, i);
        }, i.prototype.onViewRegister = function() {
            this.addEventListener(egret.TouchEvent.TOUCH_TAP, this.viewFunc, this), this.scroller.addEventListener(eui.UIEvent.CHANGE_START, this.scrollChangeStart, this), 
            this.scroller.addEventListener(eui.UIEvent.CHANGE_END, this.scrollChanged, this);
        }, i.prototype.onViewRemove = function() {
            this.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.viewFunc, this), this.scroller.removeEventListener(eui.UIEvent.CHANGE_START, this.scrollChangeStart, this), 
            this.scroller.removeEventListener(eui.UIEvent.CHANGE_END, this.scrollChanged, this);
            for (var e = 1; 3 > e; e++) egret.Tween.removeTweens(this["selectImg" + e]);
        }, i.prototype.onEventCenterRegister = function() {
            EventCenter.addEventListener(EventConst.RefreshWorldMapView, this.refreshWorldMapView, this), 
            EventCenter.addEventListener(EventConst.RefreshMapRedPoint, this.isShowRedPoint, this);
        }, i.prototype.onEventCenterRemove = function() {
            EventCenter.removeEventListener(EventConst.RefreshWorldMapView, this.refreshWorldMapView, this), 
            EventCenter.removeEventListener(EventConst.RefreshMapRedPoint, this.isShowRedPoint, this);
        }, i.prototype.initView = function() {
            var e = this;
            e.x = 320, e.alpha = 1, e.backBtn.enabled = !0, this.mapInfo = islandModel.mapInfo, 
            playerModel.island < Const.worldMapIsland1 ? (this.nowPositionId = 1, this.titleIds = [ 1, 2, 3, 4 ]) : playerModel.island < Const.worldMapIsland1 + Const.worldMapIsland2 ? (this.nowPositionId = 2, 
            this.titleIds = [ 2, 1, 3, 4 ]) : playerModel.island < Const.worldMapIsland1 + Const.worldMapIsland2 + Const.worldMapIsland3 ? (this.nowPositionId = 3, 
            this.titleIds = [ 3, 1, 2, 4 ]) : playerModel.island <= Const.worldMapIsland1 + Const.worldMapIsland2 + Const.worldMapIsland3 + Const.worldMapIsland4 && (this.nowPositionId = 4, 
            this.titleIds = [ 4, 1, 2, 3 ]);
            var t = playerModel.gainIslandReward ? playerModel.island - 1 : playerModel.island, i = {
                uid: playerModel.uid,
                name: playerModel.name,
                headImg: playerModel.headImg,
                crowns: playerModel.crowns,
                gender: 0,
                isVip: !1,
                province: 0,
                city: 0,
                island: t,
                buildingCount: 0,
                updatedTime: 0
            };
            e.islandsToFrineds = [], e.islandsToFrineds["" + t] = [], e.islandsToFrineds["" + t].push(i);
            for (var n = 0; n < e.data.friends.length; n++) e.islandsToFrineds["" + e.data.friends[n].island] || (e.islandsToFrineds["" + e.data.friends[n].island] = []), 
            e.islandsToFrineds["" + e.data.friends[n].island].push(e.data.friends[n]);
            this.isShowRedPoint(), this.refreshTitleIds(e.nowPositionId), this.initIslandsPos();
        }, i.prototype.fitScreen = function() {
            for (var e = this, t = 0; t < e.titlePos.length; t++) e.titlePos[t] += .25 * hortor.StageManager.stageOffHeight, 
            e["selectImg" + t].y = e.titlePos[0], t > 0 && (e["selectImg" + t].visible = !1);
            e.backBtn.y += hortor.StageManager.stageOffHeight, e.mapGroup.y += hortor.StageManager.stageOffHeight, 
            e.friendShow.y += hortor.StageManager.stageOffHeight, e.isShowFriend.y += hortor.StageManager.stageOffHeight, 
            e.bottomBg0.y += hortor.StageManager.stageOffHeight, e.bottomBg1.y += hortor.StageManager.stageOffHeight;
        }, i.prototype.initIslandsPos = function() {
            var t = this, i = WorldMapPos["islandPos" + t.nowPositionId], n = Const["worldMapIsland" + t.nowPositionId], o = t.mapInfo.mines, a = (playerModel.island, 
            0);
            switch (t.nowPositionId) {
              case 1:
                a = 0;
                break;

              case 2:
                a = Const.worldMapIsland1;
                break;

              case 3:
                a = Const.worldMapIsland1 + Const.worldMapIsland2;
                break;

              case 4:
                a = Const.worldMapIsland1 + Const.worldMapIsland2 + Const.worldMapIsland3;
            }
            t.scroller.viewport.scrollH = 0, this.initTitleImg();
            for (var r = 0; r < Const.worldMapIsland2; r++) t["mapNode" + r].visible = !1;
            for (var s = 0; 3 > s; s++) t["mapbg" + s].source = e.ResourcePath.getWorldMapBg(t.nowPositionId, s);
            t.friendPosGroup.removeChildren();
            for (var l = 0; n > l; l++) {
                t["mapNode" + l].x = i[l][0], t["mapNode" + l].y = i[l][1];
                var d = a + l;
                if (t["mapNode" + l].initView(d, o), t["mapNode" + l].visible = !0, t.islandsToFrineds["" + d] && t.islandsToFrineds["" + d][0]) {
                    var u = new WorldMapFriendsGroup();
                    t.islandsToFrineds["" + d].length > 1 ? u.x = i[l][0] - 22 : u.x = i[l][0] - 35, 
                    u.y = i[l][1] - 70, t.friendPosGroup.addChild(u), u.initData(t.islandsToFrineds["" + d], "hide");
                }
            }
        }, i.prototype.initTitleImg = function() {
            for (var e = this, t = 0; t < e.titleIds.length; t++) e["selectImg" + t].source = "world_n_title" + e.titleIds[t];
        }, i.prototype.refreshWorldMapView = function(e) {
            var t = e.data.mapData, i = this;
            for (var n in t) i.data[n] = t[n];
            i.mapInfo.mines = t.mines, this.initIslandsPos();
        }, i.prototype.isShowRedPoint = function() {
            var t = this;
            t.redPoint.visible = gateModel.guide[e.AcLockType.mine] && (islandModel.ableToMineCount > 0 || MapProxy.mapFullRedPoint);
        }, i.prototype.viewFunc = function(e) {
            var t = e.target, i = this, n = t.name;
            if (n && !i.isPause) if (n.indexOf("mapNode") > -1) {
                var o = n.substring(7), a = parseInt(o);
                this.selectIsland(a);
            } else switch (n) {
              case "backBtn":
                this.backBtnFunc();
                break;

              case "mapBtn":
                this.mapBtnFunc();
                break;

              case "selectImg0":
                this.selectImg0Func();
                break;

              case "selectImg1":
                this.selectImgFunc(1);
                break;

              case "selectImg2":
                this.selectImgFunc(2);
                break;

              case "selectImg3":
                this.selectImgFunc(3);
                break;

              case "titleMask":
                this.titleBackAction(i.nowPositionId);
                break;

              case "friendShow":
                this.friendShowFunc();
            }
        }, i.prototype.mapBtnFunc = function() {
            soundModel.buttonOpen(), MapProxy.openMineWindow();
        }, i.prototype.selectIsland = function(t) {
            var i = this;
            soundModel.buttonOpen();
            var n = t;
            2 == i.nowPositionId ? n += Const.worldMapIsland1 : 3 == i.nowPositionId ? n = n + Const.worldMapIsland1 + Const.worldMapIsland2 : 4 == i.nowPositionId && (n = n + Const.worldMapIsland1 + Const.worldMapIsland2 + Const.worldMapIsland3), 
            n >= playerModel.islandCount ? hortor.TipManager.alert("即将开通到达此地的航行路线，敬请期待") : n > playerModel.island ? hortor.TipManager.alert("离这里还有一段距离，继续努力吧") : playerModel.island >= playerModel.islandCount && n >= playerModel.islandCount ? hortor.TipManager.alert("已到达当前航线的终点") : hortor.ScreenManager.showScreen(e.ScreenType.MAP_SCREEN, {
                mapInfo: i.mapInfo,
                idx: n
            });
        }, i.prototype.selectImg0Func = function() {
            soundModel.buttonOpen();
            var e = this;
            if (e.titleMask.visible) this.titleBackAction(e.titleIds[0]); else {
                e.titleMask.visible = !0;
                for (var t = 1; t < e.titlePos.length; t++) {
                    e["selectImg" + t].visible = !0;
                    var i = egret.Tween.get(e["selectImg" + t]);
                    i.to({
                        y: e.titlePos[t]
                    }, 200, egret.Ease.backOut);
                }
            }
        }, i.prototype.selectImgFunc = function(e) {
            soundModel.buttonOpen();
            var t = this;
            this.titleBackAction(t.titleIds[e]);
        }, i.prototype.refreshTitleIds = function(e) {
            var t = this;
            t.titleIds[0] = e;
            for (var i = 1; i < t.titleIds.length; i++) t.titleIds[i] = i >= e ? i + 1 : i;
        }, i.prototype.titleBackAction = function(e) {
            soundModel.buttonClose();
            for (var t = this, i = function(e) {
                var i = egret.Tween.get(t["selectImg" + e]);
                i.to({
                    y: t.titlePos[0]
                }, 200, egret.Ease.backIn).call(function() {
                    egret.Tween.removeTweens(t["selectImg" + e]), t["selectImg" + e].visible = !1, t.titleMask.visible = !1;
                });
            }, n = 1; n < t.titleIds.length; n++) i(n);
            e != t.nowPositionId && (t.nowPositionId = e, this.refreshTitleIds(e), this.initIslandsPos());
        }, i.prototype.friendShowFunc = function() {
            soundModel.buttonOpen();
        }, i.prototype.backBtnFunc = function() {
            hortor.ScreenManager.back();
        }, i.prototype.scrollChangeStart = function() {
            this && (EventCenter.sendEvent(EventConst.WorldMapFriendsGroup), this.scorllerGroup.touchChildren = !1);
        }, i.prototype.scrollChanged = function() {
            this && (this.scorllerGroup.touchChildren = !0);
        }, i;
    }(e.ScreenBase);
    e.WorldMapWindow = t, __reflect(t.prototype, "game.WorldMapWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.payBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.payBtnFunc, this), 
            this.closeBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.closeBtnFunc, this), 
            this.getGroup.addEventListener(egret.TouchEvent.TOUCH_TAP, this.getBtnFunc, this);
        }, i.prototype.onData = function() {
            playerModel.monthCardExpired > 0 ? (this.info.visible = !0, this.info.text = "剩余时间" + e.ComFunc.formatTimeCN(playerModel.monthCardExpired), 
            this.timer = new egret.Timer(1e3), this.timer.addEventListener(egret.TimerEvent.TIMER, this.timerFunc, this), 
            this.timer.start()) : (this.info.text = "", this.info.visible = !1), this.info2.text = this.info.text;
            var t = playerModel.monthCardExpired > 0 && !playerModel.gotMonthCardReward;
            this.setBuyGroup(!t), this.getGroup.visible = t;
        }, i.prototype.timerFunc = function() {
            this && playerModel.monthCardExpired > 0;
        }, i.prototype.payBtnFunc = function() {
            return soundModel.buttonOpen(), gateModel.iosPay ? void e.PlatformManager.pay("monthcard") : void e.ComFunc.PopConfirmView("该功能暂未开放");
        }, i.prototype.setBuyGroup = function(e) {
            this.payBtn.visible = e && gateModel.iosPay;
        }, i.prototype.getBtnFunc = function() {
            soundModel.buttonOpen();
            var t = this;
            hortor.TipManager.alert("恭喜获得VIP每日福利", function() {
                t.setBuyGroup(!0), t.getGroup.visible = !1, HttpService.post(e.ServerMsg.MONTHCARD_REWARD, "uid=" + playerModel.uid, function(t) {
                    t && (playerModel.update(t), EventCenter.sendEvent(EventConst.EnergyChange), playerModel.gotMonthCardReward = !0, 
                    gateModel.updateGate(e.WindowType.WINDOW_MONTHCARD), hortor.WindowManager.showWindow(e.WindowType.WINDOW_REWARD, {
                        energy: 10
                    }));
                });
            }, null, this);
        }, i.prototype.closeBtnFunc = function() {
            soundModel.buttonClose(), this.hide();
        }, i;
    }(e.WindowBase);
    e.MonthCardWindow = t, __reflect(t.prototype, "game.MonthCardWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.nodeList = [ [ 17, 17 ], [ 136, 17 ], [ 254, 17 ], [ 372, 17 ], [ 372, 136 ], [ 372, 255 ], [ 372, 373 ], [ 254, 373 ], [ 136, 373 ], [ 17, 373 ], [ 17, 255 ], [ 17, 136 ] ], 
            e.actionIndex = 0, e.nowIndex = 0, e.targetIndex = 0, e.countIndex = 0, e.jx = !1, 
            e.effect = null, e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.getBtnGroup.addEventListener(egret.TouchEvent.TOUCH_TAP, this.payBtnFunc, this), 
            hortor.NotificationManager.add(e.NotificationType.MYSTICAL_ENERGY_WHEEL_PAY, this.energyWheelPay, this), 
            this.showXingyunArmature();
            var t = new hortor.TouchScaleEffect();
            t.start(this.getBtnGroup);
        }, i.prototype.onData = function() {
            console.log("this.data --\x3e", this.data), this.data && (this.initWheel(), this.btnImages.source = 0 == this.data.price ? "comBtnTxt_json.common_txt_mf" : this.data.alreadyBuy ? "comBtnTxt_json.common_txt_kq" : "comBtnTxt_json.common_txt_gm", 
            this.moneyLabel.visible = this.moneyLabel.includeInLayout = 0 != this.data.price && !this.data.alreadyBuy, 
            this.moneyLabel.visible && (this.moneyLabel.text = "¥" + this.data.price), this.timeLabel.text = "剩余时间：" + e.ComFunc.formatTimeHMSNew(this.data.remainTime), 
            this.timer || (this.timer = new egret.Timer(1e3), this.timer.addEventListener(egret.TimerEvent.TIMER, this.timerFunc, this), 
            this.timer.start()));
        }, i.prototype.prepare = function(t) {
            HttpService.get(e.ServerMsg.SHOP_MYSTICAL_LIST, {
                uid: playerModel.uid
            }, function(i) {
                if (0 == i.goods.length) hortor.TipManager.alert("当前没有神秘商品可以购买了"), playerModel.hasMystical = !1, 
                gateModel.update(e.WindowType.WINDOW_MYSTICAL_ENERGY_WHEEL), t(null); else {
                    for (var n = void 0, o = 0; o < i.goods.length; o++) if (3 == i.goods[o].boxType) {
                        n = i.goods[o];
                        break;
                    }
                    t(n);
                }
            });
        }, i.prototype.onClose = function() {
            this && this.timer && (this.timer.removeEventListener(egret.TimerEvent.TIMER, this.timerFunc, this), 
            this.timer.stop(), this.timer = null);
        }, i.prototype.timerFunc = function() {
            this.data.remainTime < 1 || (this.data.remainTime--, this.timeLabel.text = 0 == this.data.remainTime ? "活动已结束" : "剩余时间：" + e.ComFunc.formatTimeHMSNew(this.data.remainTime));
        }, i.prototype.showXingyunArmature = function() {
            this.wheelArmature = new e.ArmaturePlayer("xingyun"), this.wheelNodeGroup.addChild(this.wheelArmature), 
            this.wheelArmature.x = 60, this.wheelArmature.y = 60, this.wheelArmature.play("jingzhi", 0), 
            this.wheelArmature.touchEnabled = !1, this.wheelArmature.touchChildren = !1;
        }, i.prototype.initWheel = function() {
            for (var e = 0; 12 > e; e++) this["icon" + e].source = this.getEnergyIcon(this.data.gifts[e].giftNum), 
            this["iconLabel" + e].text = this.data.gifts[e].giftNum;
        }, i.prototype.payBtnFunc = function() {
            var t = this;
            return soundModel.buttonOpen(), this.jx ? (this.jx = !1, void HttpService.get(e.ServerMsg.SHOP_MYSTICAL_LIST, {
                uid: playerModel.uid
            }, function(e) {
                var i = _.findIndex(e.goods, function(e) {
                    return 3 == e.boxType;
                });
                if (0 > i) return void hortor.TipManager.alert("购买次数已达上限");
                for (var n = 0; n < e.goods.length; n++) if (3 == e.goods[n].boxType) {
                    t.data = e.goods[n];
                    break;
                }
            })) : void (this.data.alreadyBuy ? HttpService.post(e.ServerMsg.SHOP_MYSTICAL_ROLL, {
                uid: playerModel.uid,
                goodsId: this.data.goodId
            }, function(e) {
                t.data.alreadyBuy = !1, t.initWheelData(e);
            }) : 0 == this.data.price ? HttpService.post(e.ServerMsg.SHOP_MYSTICAL_ORDER_FREE, {
                uid: playerModel.uid,
                goodsId: this.data.goodId,
                miPay: gateModel.isWxgame && hortor.SystemManager.isIOS
            }, function(e) {
                t.initWheelData(e);
            }) : e.IapManager.paySpecial(e.ServerMsg.SHOP_MYSTICAL_ORDER, this.data.goodId));
        }, i.prototype.initWheelData = function(e) {
            playerModel.update(e), this.rewardMap = e.rewards;
            for (var t = (_.keys(e.rewards)[0], _.values(e.rewards)[0]), i = 0; i < this.data.gifts.length; i++) if (this.data.gifts[i].giftNum == t) {
                this.targetIndex = i, this.countIndex = this.targetIndex - this.nowIndex + 24, this.initAction();
                break;
            }
        }, i.prototype.initAction = function() {
            var t = this;
            if (this) {
                var i = 50;
                i = this.actionIndex < 12 ? 50 : this.actionIndex < this.countIndex - 4 ? 100 : 100 + 100 * (this.actionIndex - (this.countIndex - 4)), 
                this.wheelArmature && this.wheelArmature.play("zhuanquan", 0);
                var n = egret.setTimeout(function() {
                    if (t.actionIndex++, egret.clearTimeout(n), t.wheelActionImg.source = t.getEnergyIcon(t.data.gifts[(t.nowIndex + t.actionIndex) % 12].giftNum), 
                    t.wheelActionLabel.text = "+" + t.data.gifts[(t.nowIndex + t.actionIndex) % 12].giftNum, 
                    t.wheelArmature.x = t.nodeList[(t.nowIndex + t.actionIndex) % 12][0] + 43, t.wheelArmature.y = t.nodeList[(t.nowIndex + t.actionIndex) % 12][1] + 43, 
                    t.actionIndex < t.countIndex) t.initAction(); else var i = egret.setTimeout(function() {
                        egret.clearTimeout(i), t.wheelActionLabel.text = "+" + _.values(t.rewardMap)[0], 
                        hortor.WindowManager.showWindow(e.WindowType.WINDOW_REWARD, t.rewardMap, t), t.wheelArmature && t.wheelArmature.play("suoding", 0), 
                        t.nowIndex = t.targetIndex, t.actionIndex = 0, t.btnImages.source = "comBtnTxt_json.common_txt_jx", 
                        t.jx = !0;
                    }, t, 300);
                }, this, i);
            }
        }, i.prototype.getEnergyIcon = function(t) {
            var i = "popIcon_energy_1";
            return i = 20 > t ? "popIcon_energy_1" : 51 > t ? "popIcon_energy_2" : 121 > t ? "popIcon_energy_3" : 251 > t ? "popIcon_energy_4" : "popIcon_energy_5", 
            e.ResourcePath.getItemIconByName(i);
        }, i.prototype.energyWheelPay = function() {
            this.data.alreadyBuy = !0, this.btnImages.source = "comBtnTxt_json.common_txt_kq", 
            this.moneyLabel.visible = this.moneyLabel.includeInLayout = !1;
        }, i;
    }(hortor.Window);
    e.MysticalEnergyWheelWindow = t, __reflect(t.prototype, "game.MysticalEnergyWheelWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.mStatus = !1, e.mRewardList = [], e.skinName = mailNodeSkin, e;
        }
        return __extends(i, t), i.produce = function(e) {
            void 0 === e && (e = "1"), null == i.mCacheDict[e] && (i.mCacheDict[e] = []);
            var t, n = i.mCacheDict[e];
            return t = n.length > 0 ? n.pop() : new i();
        }, i.reclaim = function(e, t) {
            void 0 === t && (t = "1"), null == i.mCacheDict[t] && (i.mCacheDict[t] = []);
            var n = i.mCacheDict[t];
            -1 == n.indexOf(e) && (n.push(e), e.clear());
        }, i.prototype.partAdded = function(e, i) {
            t.prototype.partAdded.call(this, e, i);
        }, i.prototype.childrenCreated = function() {
            t.prototype.childrenCreated.call(this), this.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onTouch, this);
        }, i.prototype.setData = function(t, i, n) {
            if (void 0 === n && (n = !1), EventCenter.addEventListener(EventConst.foldEmailItem, this.onHide, this), 
            this.mData = t, this.mIndex = i, this.mStatus = n, this.kLabelTime.text = moment.unix(this.mData.createAt).format("YYYY-MM-DD H:mm"), 
            this.kLabelTittle.text = this.mData.title, this.kLabelDesc.text = this.mData.content, 
            this.mData.attachment && !_.isEmpty(this.mData.attachment)) {
                this.mData.getGoods ? (this.kBtn.icon = "news_json.mail_icon_look", this.kBtn.skinName = "common.ButtonSmallBlue") : (this.kBtn.icon = "news_json.mail_icon_get", 
                this.kBtn.skinName = "common.ButtonSmallOrange"), this.mData.hasOpened ? this.kImgIcon.source = "news_json.icon_gift_open" : this.kImgIcon.source = "news_json.icon_gift_close";
                for (var o in this.mData.attachment) {
                    var a = new e.MailRewardItem();
                    a.setData(o, this.mData.attachment[o], this.mData.getGoods), this.kGrpGoods.addChild(a), 
                    this.mRewardList.push(a);
                }
            } else this.mData.hasOpened ? (this.kImgIcon.source = "news_json.icon_msg_open", 
            this.kBtn.skinName = "common.ButtonSmallBlue", this.kBtn.icon = "news_json.mail_icon_look") : (this.kBtn.icon = "comBtnTxt_json.common_txt_dk", 
            this.kImgIcon.source = "news_json.icon_msg_close");
            "user" == this.mData.sendType && util.setRemoteAvatar(this.kImgIcon, this.mData.fromHead), 
            this.onAdapt();
        }, i.prototype.onTouch = function(e) {
            "btn" == e.target.name ? this.onDealMail() : (this.onAdapt(), soundModel.buttonOpen());
        }, i.prototype.onHide = function(e) {
            if (e.data != this.mIndex) {
                egret.Tween.removeTweens(this), egret.Tween.removeTweens(this.kGrpBig), egret.Tween.removeTweens(this.kImgBgSmall);
                var t = (this.height, 104);
                egret.Tween.get(this.kGrpBig).to({
                    alpha: 0
                }, 0), egret.Tween.get(this.kImgBgSmall).to({
                    alpha: 1
                }, 0), this.mStatus = !0, egret.Tween.get(this).to({
                    height: t
                }, 300, egret.Ease.quintOut);
            }
        }, i.prototype.onAdapt = function() {
            egret.Tween.removeTweens(this), egret.Tween.removeTweens(this.kGrpBig), egret.Tween.removeTweens(this.kImgBgSmall);
            var e = (this.height, 0);
            this.mStatus ? (e = 389, egret.Tween.get(this.kGrpBig).to({
                alpha: 1
            }, 0), egret.Tween.get(this.kImgBgSmall).to({
                alpha: 0
            }, 0), EventCenter.sendEvent(EventConst.foldEmailItem, this.mIndex), this.mData.hasOpened || this.sendOpenMail()) : (e = 104, 
            egret.Tween.get(this.kGrpBig).to({
                alpha: 0
            }, 0), egret.Tween.get(this.kImgBgSmall).to({
                alpha: 1
            }, 0)), this.mStatus = !this.mStatus, egret.Tween.get(this).to({
                height: e
            }, 300, egret.Ease.quintOut);
        }, i.prototype.onDealMail = function() {
            var t = this;
            !this.mData.attachment || _.isEmpty(this.mData.attachment) || this.mData.getGoods ? this.onAdapt() : HttpService.post(e.ServerMsg.OPEN_MAIL, "uid=" + playerModel.uid + "&mid=" + this.mData.mid + "&getGoods=true", function(i) {
                if (i.reward && hortor.WindowManager.showWindow(e.WindowType.WINDOW_REWARD, i.reward), 
                playerModel.updateAll(i), !_.isUndefined(t.mData.attachment.guildCoin) && t.mData.attachment.guildCoin > 0, 
                _.isUndefined(t.mData.attachment.doubleMoneyCard) || EventCenter.sendEvent(EventConst.GetDoubleMoneyCard), 
                t.getJigsawReward(), t.kBtn.enabled = !0, _.isUndefined(t.mData.attachment.moonCake)) if (_.isUndefined(t.mData.attachment.pumpkin)) if (_.isUndefined(t.mData.attachment.annualCollect)) _.isUndefined(t.mData.attachment.jetton) && (_.isUndefined(t.mData.attachment.worldCupScore) ? hortor.WindowManager.showWindow(e.WindowType.WINDOW_REWARD, t.mData.attachment) : t.mData.attachment.worldCupScore >= 100); else {
                    var n = {};
                    n["moonCake" + (t.mData.attachment.annualCollect - 1)] = 1, hortor.WindowManager.showWindow(e.WindowType.WINDOW_REWARD, n);
                } else {
                    var n = {};
                    n["pumpkin" + t.mData.attachment.pumpkin] = 1, hortor.WindowManager.showWindow(e.WindowType.WINDOW_REWARD, n);
                } else {
                    var n = {};
                    n["moonCake" + t.mData.attachment.moonCake] = 1, hortor.WindowManager.showWindow(e.WindowType.WINDOW_REWARD, n);
                }
                t.mData.hasOpened = !0, t.mData.getGoods = !0, t.kBtn.icon = "news_json.mail_icon_look", 
                t.kBtn.skinName = "common.ButtonSmallBlue", t.mData.attachment && !_.isEmpty(t.mData.attachment) ? t.mData.hasOpened ? t.kImgIcon.source = "news_json.icon_gift_open" : t.kImgIcon.source = "news_json.icon_gift_close" : t.mData.hasOpened ? t.kImgIcon.source = "news_json.icon_msg_open" : t.kImgIcon.source = "news_json.icon_msg_close";
                for (var o = 0, a = t.mRewardList; o < a.length; o++) {
                    var r = a[o];
                    r.setGetStatus(!0);
                }
                gateModel.updateGate(e.WindowType.WINDOW_MAIL);
            });
        }, i.prototype.sendOpenMail = function() {
            var t = this, i = this.mData;
            HttpService.post(e.ServerMsg.OPEN_MAIL, "uid=" + playerModel.uid + "&mid=" + i.mid + "&getGoods=false", function(i) {
                t.mData.hasOpened = !0, gateModel.updateGate(e.WindowType.WINDOW_MAIL);
            });
        }, i.prototype.getJigsawReward = function() {
            var e = jigsawModel.jigsawInfo, t = this.mData;
            for (var i in t.attachment) {
                var n = 0;
                console.log("search = " + i.search("jigsaw")), -1 != i.search("jigsaw") && (n = parseInt(i.substr(6, 1)), 
                console.log("_num = " + n), e.bags[n] += t.attachment[i]);
            }
        }, i.prototype.clear = function() {
            egret.Tween.removeTweens(this), egret.Tween.removeTweens(this.kGrpBig), egret.Tween.removeTweens(this.kImgBgSmall), 
            this.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.onTouch, this), EventCenter.removeEventListener(EventConst.foldEmailItem, this.onHide, this);
        }, i.mCacheDict = {}, i;
    }(eui.Component);
    e.MailItem = t, __reflect(t.prototype, "game.MailItem", [ "eui.UIComponent", "egret.DisplayObject" ]);
}(game || (game = {})), window.game.MailItem = game.MailItem;

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.skinName = mailRewardItemSkin, e;
        }
        return __extends(i, t), i.prototype.partAdded = function(e, i) {
            t.prototype.partAdded.call(this, e, i);
        }, i.prototype.childrenCreated = function() {
            t.prototype.childrenCreated.call(this);
        }, i.prototype.setData = function(t, i, n) {
            void 0 === n && (n = !1), this.kImgIcon.source = e.ItemManager.getItemInfo(t).icon, 
            this.kLabelCount.text = "x" + e.ComFunc.formatNumber(i), this.setGetStatus(n);
        }, i.prototype.setGetStatus = function(e) {
            this.kGrp.alpha = e ? .5 : 1;
        }, i.prototype.clear = function() {}, i;
    }(eui.Component);
    e.MailRewardItem = t, __reflect(t.prototype, "game.MailRewardItem", [ "eui.UIComponent", "egret.DisplayObject" ]);
}(game || (game = {})), window.game.MailRewardItem = game.MailRewardItem;

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e.mMailList = [], e;
        }
        return __extends(i, t), i.prototype.onInit = function() {}, i.prototype.onOpen = function() {}, 
        i.prototype.onData = function() {
            this.updateMailData(), this.kScr.viewport.scrollV = 0;
        }, i.prototype.updateMailData = function() {
            this.mMailList = [];
            var t = !1;
            this.kGrpEmpty.visible = Boolean(messageModel.mails.length <= 0);
            for (var i = 0; i < messageModel.mails.length; i++) {
                var n = new e.MailItem(), o = messageModel.mails[i];
                t || !o.attachment || _.isEmpty(o.attachment) || o.getGoods ? n.setData(messageModel.mails[i], i) : (t = !0, 
                n.setData(messageModel.mails[i], i, t)), this.mMailList.push(n), this.kGrp.addChild(n);
            }
        }, i.prototype.onClose = function() {
            this.kGrp.removeChildren();
            for (var t = 0; t < this.mMailList.length; t++) {
                var i = this.mMailList[t];
                e.MailItem.reclaim(i), i = null;
            }
        }, i.prototype.prepare = function(e, t) {
            messageModel.update(!1, e, this);
        }, i;
    }(e.TabWindowBase);
    e.MailWindow = t, __reflect(t.prototype, "game.MailWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.nameColor = 15166214, e.descColor = 7962239, e.targetColor = 15166214, 
            e.timeColor = 12029531, e.mGenderColor = [ 16734615, 42223 ], e.skinPath = "news/newsNodeSkin", 
            e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.kBtnArrest.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onArrest, this), 
            this.kBtnLook.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onLook, this), this.addEventListener(egret.TouchEvent.TOUCH_TAP, this.showInfo, this);
        }, i.prototype.showInfo = function(t) {
            var i = this;
            "btn" != t.target.name && this.data.uid != playerModel.uid && HttpService.get(e.ServerMsg.MORE_PLAYER, "uid=" + playerModel.uid + "&fid=" + this.data.uid + "&checksum=" + this.data.chatSign + "&algorithm=chatSign&showDetails=true", function(t) {
                i.data.chatSign && (t.chatSign = i.data.chatSign), hortor.WindowManager.showWindow(e.WindowType.WINDOW_PLAYERINFO, {
                    playerInfo: t,
                    from: Const.NewsAndMails
                }), soundModel.buttonOpen();
            });
        }, i.prototype.onData = function() {
            var e = this.data;
            util.setRemoteAvatar(this.kAvatar.avatarImage, e.headImg), this.kAvatar.starLabel.text = e.crowns + "", 
            1 == this.data.gender ? (this.kAvatar.avatarBg.source = "common_json.common_img_tz1_1", 
            this.kLabelName.textColor = this.mGenderColor[1]) : (this.kAvatar.avatarBg.source = "common_json.common_img_tz1_0", 
            this.kLabelName.textColor = this.mGenderColor[0]);
            var t = 30, i = moment.unix(this.data.createAt).month(), n = moment().month() - i;
            1 == i ? t = 28 : (0 == i || 2 == i || 4 == i || 6 == i || 7 == i || 9 == i || 11 == i) && (t = 31);
            var o = moment().date() - moment.unix(this.data.createAt).date() + n * t;
            if (1 > o) {
                var a = moment.unix(this.data.createAt).minute();
                if (10 > a) var r = "0" + a; else var r = a + "";
                this.kLabelTime.text = "今天" + moment.unix(this.data.createAt).hour() + ":" + r;
            } else 1 == o ? this.kLabelTime.text = "昨天" : this.kLabelTime.text = o + "天前";
            var s = 0, l = {
                type: 0,
                value: 0,
                result: 0,
                name: "",
                param: "",
                gender: 0,
                relationShip: 0
            };
            switch (l.name = e.name, l.gender = e.gender, l.relationShip = e.relationShip, e.action) {
              case 1:
                0 == e.result ? l.type = 4 : 1 == e.result ? l.type = 14 : 2 == e.result ? l.type = 1 : 3 == e.result ? l.type = 2 : 4 == e.result ? (l.type = 6, 
                l.param = e.param, s = 5) : 5 == e.result ? l.type = 15 : 6 == e.result ? l.type = 20 : 7 == e.result && (s = 7, 
                l.type = 22), l.value = e.value, 5 != s && (s = 1 == e.result ? 2 : 7 == e.result ? 7 : 1);
                break;

              case 2:
                l.type = 3, l.value = e.value, s = 0;
                break;

              case 4:
                0 == e.result ? l.type = 5 : 1 == e.result ? (l.type = 7, l.param = e.param) : 2 == e.result ? (l.type = 8, 
                l.param = e.param, l.value = e.value) : 3 == e.result ? l.type = 9 : 4 == e.result && (l.type = 10), 
                s = 5;
                break;

              case 6:
                1 == e.result ? l.type = 11 : 2 == e.result ? l.type = 12 : 3 == e.result && (l.type = 13), 
                s = 3;
                break;

              case 8:
                0 == e.result && (l.type = 16);
                break;

              case 16:
                0 == e.result && (l.type = 17, l.value = e.value);
                break;

              case 17:
                0 == e.result && (l.type = 18, l.param = e.param), s = 4;
                break;

              case 20:
                0 == e.result && (l.type = 19, l.param = e.param), s = 4;
                break;

              case 42:
                0 == e.result && (l.type = 21, l.value = e.value), s = 6;
                break;

              case 537:
                l.type = 23, s = 8;
            }
            this.initDesc(l), this.kBtnLook.visible = 8 == e.action && 0 == e.result, this.kBtnLook.visible ? this.kBtnLook.skinName = "common.ButtonSmallBlue" : this.kBtnLook.skinName = "common.ButtonSmallOrange";
            var d = 1 == e.action && 2 == e.result, u = 1 == e.action && 3 == e.result, h = 2 == e.action && l.value > 999999, c = 4 == e.action && 0 == e.result;
            this.kBtnArrest.visible = d || u || h || c, this.kBtnArrest.visible, this.kImgType.source = "news_json.icon_news_" + s, 
            this.kImgType.visible = !Boolean(this.kBtnLook.visible || this.kBtnArrest.visible);
        }, i.prototype.initDesc = function(t) {
            this.kLabelName.text = "" + t.name;
            var i = this.kLabelDesc;
            i.textFlow = [];
            var n = "";
            switch (t.relationShip) {
              case 0:
                n = "";
                break;

              case 1:
                n = "你的好友";
                break;

              case 2:
                n = "你的仇人";
            }
            switch (t.type) {
              case 1:
                i.textFlow.push({
                    text: n,
                    style: {
                        textColor: this.descColor
                    }
                }), i.textFlow.push({
                    text: "损坏了你的",
                    style: {
                        textColor: this.descColor
                    }
                }), i.textFlow.push({
                    text: Const.BuildingName[t.value],
                    style: {
                        textColor: this.targetColor
                    }
                });
                break;

              case 2:
                i.textFlow.push({
                    text: n,
                    style: {
                        textColor: this.descColor
                    }
                }), i.textFlow.push({
                    text: "摧毁了你的",
                    style: {
                        textColor: this.descColor
                    }
                }), i.textFlow.push({
                    text: Const.BuildingName[t.value],
                    style: {
                        textColor: this.targetColor
                    }
                });
                break;

              case 3:
                i.textFlow.push({
                    text: n,
                    style: {
                        textColor: this.descColor
                    }
                }), i.textFlow.push({
                    text: "偷走了你",
                    style: {
                        textColor: this.descColor
                    }
                }), i.textFlow.push({
                    text: e.ComFunc.toThousands(t.value),
                    style: {
                        textColor: this.targetColor
                    }
                }), i.textFlow.push({
                    text: "金币",
                    style: {
                        textColor: this.descColor
                    }
                });
                break;

              case 4:
                i.textFlow.push({
                    text: n,
                    style: {
                        textColor: this.descColor
                    }
                }), i.textFlow.push({
                    text: "攻击了你，但被你成功防御了！",
                    style: {
                        textColor: this.descColor
                    }
                });
                break;

              case 5:
                i.textFlow.push({
                    text: "对你发起了通缉！",
                    style: {
                        textColor: this.descColor
                    }
                });
                break;

              case 6:
                i.textFlow.push({
                    text: n,
                    style: {
                        textColor: this.descColor
                    }
                }), i.textFlow.push({
                    text: "因为",
                    style: {
                        textColor: this.descColor
                    }
                }), i.textFlow.push({
                    text: t.param,
                    style: {
                        textColor: this.nameColor
                    }
                }), i.textFlow.push({
                    text: "的通缉攻打了你的岛",
                    style: {
                        textColor: this.descColor
                    }
                });
                break;

              case 7:
                i.textFlow.push({
                    text: "正在通缉",
                    style: {
                        textColor: this.descColor
                    }
                }), i.textFlow.push({
                    text: t.param,
                    style: {
                        textColor: this.nameColor
                    }
                }), i.textFlow.push({
                    text: "，帮助好友攻击可以获得300K",
                    style: {
                        textColor: this.descColor
                    }
                });
                break;

              case 8:
                i.textFlow.push({
                    text: "帮你打了",
                    style: {
                        textColor: this.descColor
                    }
                }), i.textFlow.push({
                    text: t.param,
                    style: {
                        textColor: this.nameColor
                    }
                }), t.value > 0 ? (i.textFlow.push({
                    text: "，给他造成了",
                    style: {
                        textColor: this.descColor
                    }
                }), i.textFlow.push({
                    text: t.value,
                    style: {
                        textColor: this.targetColor
                    }
                }), i.textFlow.push({
                    text: "的损失",
                    style: {
                        textColor: this.descColor
                    }
                })) : i.textFlow.push({
                    text: ",TA的攻击被盾挡住了",
                    style: {
                        textColor: this.descColor
                    }
                });
                break;

              case 9:
                i.textFlow.push({
                    text: "对TA的通缉已结束，好友们帮你对TA进行了惩罚",
                    style: {
                        textColor: this.descColor
                    }
                });
                break;

              case 10:
                i.textFlow.push({
                    text: "对你的通缉结束了，终于可以长舒一口气了",
                    style: {
                        textColor: this.descColor
                    }
                });
                break;

              case 11:
                i.textFlow.push({
                    text: "同意了你的好友申请",
                    style: {
                        textColor: this.descColor
                    }
                });
                break;

              case 12:
                i.textFlow.push({
                    text: "拒绝了你的好友申请",
                    style: {
                        textColor: this.descColor
                    }
                });
                break;

              case 13:
                i.textFlow.push({
                    text: "跟你解除了好友关系",
                    style: {
                        textColor: this.descColor
                    }
                });
                break;

              case 14:
                i.textFlow.push({
                    text: n,
                    style: {
                        textColor: this.descColor
                    }
                }), i.textFlow.push({
                    text: "攻击了你，但被你的宠物防御了",
                    style: {
                        textColor: this.descColor
                    }
                });
                break;

              case 15:
                i.textFlow.push({
                    text: n,
                    style: {
                        textColor: this.descColor
                    }
                }), i.textFlow.push({
                    text: "攻击了你，但被你的迷你盾防御了",
                    style: {
                        textColor: this.descColor
                    }
                });
                break;

              case 16:
                i.textFlow.push({
                    text: "邀请你去挑战寄居蟹",
                    style: {
                        textColor: this.descColor
                    }
                });
                break;

              case 17:
                i.textFlow.push({
                    text: "从你的章鱼礼盒中抢走了一个￥",
                    style: {
                        textColor: this.descColor
                    }
                }), i.textFlow.push({
                    text: (t.value / 100).toFixed(2) + "",
                    style: {
                        textColor: this.nameColor
                    }
                }), i.textFlow.push({
                    text: "元的红包",
                    style: {
                        textColor: this.descColor
                    }
                });
                break;

              case 18:
                i.textFlow.push({
                    text: "将你踢出了",
                    style: {
                        textColor: this.descColor
                    }
                }), i.textFlow.push({
                    text: t.param,
                    style: {
                        textColor: this.nameColor,
                        size: 22
                    }
                }), i.textFlow.push({
                    text: "海盗团",
                    style: {
                        textColor: this.descColor
                    }
                });
                break;

              case 19:
                i.textFlow.push({
                    text: "由于你连续7天未登录，团长职务被转让",
                    style: {
                        textColor: this.descColor
                    }
                });
                break;

              case 20:
                i.textFlow.push({
                    text: n,
                    style: {
                        textColor: this.descColor
                    }
                }), i.textFlow.push({
                    text: "攻击了你，但被你的互助盾防御了",
                    style: {
                        textColor: this.descColor
                    }
                });
                break;

              case 21:
                i.textFlow.push({
                    text: "帮你充能",
                    style: {
                        textColor: this.descColor
                    }
                }), i.textFlow.push({
                    text: t.value + "",
                    style: {
                        textColor: this.nameColor
                    }
                }), i.textFlow.push({
                    text: "点",
                    style: {
                        textColor: this.descColor
                    }
                });
                break;

              case 22:
                i.textFlow.push({
                    text: n,
                    style: {
                        textColor: this.descColor
                    }
                }), i.textFlow.push({
                    text: "攻击了你，但被你的CP成功防御了！",
                    style: {
                        textColor: this.descColor
                    }
                });
                break;

              case 23:
                i.textFlow.push({
                    text: "和你解除了CP，一别两宽，各生欢喜",
                    style: {
                        textColor: this.descColor
                    }
                });
            }
        }, i.prototype.onArrest = function() {
            var t = this, i = this;
            playerModel.wantedCount > 0 ? hortor.TipManager.alert("通缉" + this.data.name + "，\n召唤你的好友一起攻击Ta！", function() {
                HttpService.post(e.ServerMsg.WANTED, "uid=" + playerModel.uid + "&eid=" + i.data.uid, function(e) {
                    e && (playerModel.wantedCount -= 1, hortor.TipManager.alert("你通缉了" + i.data.name + "\n使用后48小时内有效\n召唤你的好友攻击Ta吧！"), 
                    t.kBtnArrest.visible = !1, EventCenter.sendEvent(EventConst.MessageRefresh, {
                        uid: i.data.uid
                    }));
                });
            }) : gateModel.iosPay ? (playerModel.wantedName = this.data.name, playerModel.wantedUid = this.data.uid, 
            hortor.WindowManager.showWindow(e.WindowType.WINDOW_WANTED)) : hortor.TipManager.alert("通缉令不足");
        }, i.prototype.onLook = function() {
            8 == this.data.action && 0 == this.data.result && (ActivityFunc.killTitanFunc(), 
            hortor.WindowManager.hideWindow(e.WindowType.GROUP_NEWS), egret.log("跳转至打怪兽界面, 需要判断打怪兽的活动开启情况"));
        }, i;
    }(e.ItemRenderBase);
    e.NewsItem = t, __reflect(t.prototype, "game.NewsItem");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.mListData = new eui.ArrayCollection(), this.kList.dataProvider = this.mListData, 
            this.kList.itemRenderer = e.NewsItem;
        }, i.prototype.onOpen = function() {}, i.prototype.onData = function() {
            this.updateNewsFormat();
        }, i.prototype.updateNewsFormat = function() {
            this.kGrpEmpty.visible = !Boolean(messageModel.messages.length > 0), 0 == !!this.mListData ? this.mListData.source = messageModel.messages : (this.mListData.replaceAll(messageModel.messages), 
            this.kList.dataProviderRefreshed());
        }, i.prototype.prepare = function(e, t) {
            messageModel.update(!1, e);
        }, i;
    }(e.TabWindowBase);
    e.NewsWindow = t, __reflect(t.prototype, "game.NewsWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(e) {
        function t() {
            return null !== e && e.apply(this, arguments) || this;
        }
        return __extends(t, e), t.prototype.onInit = function() {
            this.closeBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.hide, this);
        }, t.prototype.onOpen = function() {}, t.prototype.onData = function() {}, t.prototype.prepare = function(e) {
            e(null);
        }, t;
    }(e.WindowBase);
    e.BannerInfoWindow = t, __reflect(t.prototype, "game.BannerInfoWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e._isMoving = !1, e.effect = null, e;
        }
        return __extends(i, t), i.prototype.addEvents = function() {
            this.okBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.closeBtnFunc, this);
        }, i.prototype.onInit = function() {
            this.addEvents();
        }, i.prototype.onOpen = function() {}, i.prototype.onData = function() {
            this.initView();
        }, i.prototype.initView = function() {
            var t = this, i = this;
            i._isMoving = !0, NoticeModel.noticesList.length < 1 && hortor.WindowManager.hideWindow(e.WindowType.WINDOW_NOTICEBAR);
            var n = Const.BuildingName, o = NoticeModel.noticesList[0];
            switch (i.textField && i.textField.parent && (i.textField.parent.removeChild(i.textField), 
            i.textField = null), i.textField = new egret.TextField(), i.textField.width = 260, 
            i.textField.height = 80, i.textField.x = 150, i.textField.y = .5 * (i.group.height - i.textField.height), 
            i.textField.size = 24, i.textField.lineSpacing = 6, i.textField.textFlow = [], o.action) {
              case 1:
                var a = o.from_name || "", r = "", s = n[o.values[1]] || "", l = "";
                0 == o.values[0] ? (r = "攻击了你的", l = "，但被你的护盾防御住了", playerModel.shields--, EventCenter.sendEvent(EventConst.ShieldChange)) : 1 == o.values[0] ? (r = "攻击了你的", 
                l = "，但被你的宠物防御住了") : 2 == o.values[0] ? (r = "损坏了你的", l = "，快去复仇吧", islandModel.buildings[o.values[1]].status = 1) : 3 == o.values[0] ? (r = "摧毁了你的", 
                l = "，快去复仇吧", islandModel.buildings[o.values[1]].level = 0, islandModel.buildings[o.values[1]].status = 2, 
                islandModel.buildings[o.values[1]].attackHeadImg = o.from_headimg, islandModel.buildings[o.values[1]].attackUid = o.from_uid, 
                islandModel.buildings[o.values[1]].checksum = o.values[3], EventCenter.sendEvent(EventConst.CrownsChange), 
                EventCenter.sendEvent(EventConst.CheckPaoLock)) : 5 == o.values[0] ? (r = "攻击了你的", 
                l = "，但被你的迷你盾防御住了", islandModel.buildings[o.values[1]].isShield = !1, EventCenter.sendEvent(EventConst.MiniShieldRefresh)) : 6 == o.values[0] ? (r = "攻击了你的", 
                l = "，但被你的互助盾防御住了", playerModel.shieldEnergy = 0) : 7 == o.values[0] && (r = "攻击了你的", 
                l = "，但被你的CP成功防御了", playerModel.couple.coupleShieldCount = 0, EventCenter.sendEvent(EventConst.CPShieldChange, {
                    type: "del"
                })), this.textField.textFlow.push({
                    text: a,
                    style: {
                        textColor: 15363328
                    }
                }), this.textField.textFlow.push({
                    text: r,
                    style: {
                        textColor: 7408138
                    }
                }), this.textField.textFlow.push({
                    text: s,
                    style: {
                        textColor: 15363328
                    }
                }), this.textField.textFlow.push({
                    text: l,
                    style: {
                        textColor: 7408138
                    }
                });
                break;

              case 2:
                var a = o.from_name || "", r = "偷走了你", d = e.ComFunc.toThousands(o.values[0]), l = "金币，快去复仇吧";
                this.textField.textFlow.push({
                    text: a,
                    style: {
                        textColor: 15363328
                    }
                }), this.textField.textFlow.push({
                    text: r,
                    style: {
                        textColor: 7408138
                    }
                }), this.textField.textFlow.push({
                    text: d,
                    style: {
                        textColor: 15363328
                    }
                }), this.textField.textFlow.push({
                    text: l,
                    style: {
                        textColor: 7408138
                    }
                }), playerModel.money -= o.values[0], EventCenter.sendEvent(EventConst.GoldChange);
                break;

              case 4:
                var a = o.from_name || "";
                this.textField.textFlow.push({
                    text: a,
                    style: {
                        textColor: 15363328
                    }
                }), this.textField.textFlow.push({
                    text: "通缉了你，请注意防备！",
                    style: {
                        textColor: 7408138
                    }
                });
                break;

              case 537:
                if ("cpApply" == o.goodsId) {
                    var a = o.from_name || "";
                    this.textField.textFlow.push({
                        text: a,
                        style: {
                            textColor: 15363328
                        }
                    }), this.textField.textFlow.push({
                        text: "邀请你和Ta组CP",
                        style: {
                            textColor: 7408138
                        }
                    });
                } else if ("cpReply" == o.goodsId) {
                    var a = o.from_name || "";
                    this.textField.textFlow.push({
                        text: a,
                        style: {
                            textColor: 15363328
                        }
                    }), this.textField.textFlow.push({
                        text: "同意和你组成CP啦！快去合成信物吧！",
                        style: {
                            textColor: 7408138
                        }
                    });
                } else "cpShield" == o.goodsId && (this.textField.textFlow.push({
                    text: "送你了CP盾牌，守护在你的身前",
                    style: {
                        textColor: 7408138
                    }
                }), playerModel.couple.coupleShieldCount = 1);
            }
            i.group.addChild(i.textField), this.emojiImg && (egret.Tween.removeTweens(this.emojiImg), 
            this.emojiImg.scaleX = this.emojiImg.scaleY = 0, this.emojiImg.visible = !0, 1 == o.action && (0 == o.values[0] || 1 == o.values[0] || 5 == o.values[0] || 6 == o.values[0] ? this.emojiImg.source = "city_emoij0_png" : 2 == o.values[0] ? this.emojiImg.source = "city_emoij1_png" : 3 == o.values[0] ? this.emojiImg.source = "city_emoij2_png" : this.emojiImg.source = "city_emoij0_png")), 
            util.setRemoteAvatar(this.headImage, o.from_headimg), i.group.bottom = -200;
            var u = 0;
            islandModel.islandStatus != e.IslandStatus.BUILD ? u = 0 : 1 == o.action && (u = 600), 
            egret.Tween.get(i.group, {
                loop: !1
            }).wait(u).to({
                bottom: 0
            }, 500).call(function() {
                egret.Tween.removeTweens(i.group), i._isMoving = !1, 1 == o.action && t.showEmojiAni();
            });
        }, i.prototype.showEmojiAni = function() {
            var e = this;
            e && e.emojiImg && (e.emojiImg.scaleX = e.emojiImg.scaleY = .3, e.emojiImg.alpha = .3, 
            egret.Tween.get(e.emojiImg).wait(200).to({
                scaleX: 1.15,
                scaleY: 1.15,
                alpha: 1
            }, 300, egret.Ease.backOut).to({
                scaleX: 1,
                scaleY: 1
            }, 100).wait(200).to({
                scaleX: .8,
                scaleY: .8
            }, 100).to({
                scaleX: 1,
                scaleY: 1
            }, 100).to({
                scaleX: .8,
                scaleY: .8
            }, 100).to({
                scaleX: 1,
                scaleY: 1
            }, 100).to({
                scaleX: .8,
                scaleY: .8
            }, 100).to({
                scaleX: 1,
                scaleY: 1
            }, 100).wait(200).to({
                scaleX: .3,
                scaleY: .3,
                alpha: 0
            }, 200).call(function() {
                e && e.emojiImg && egret.Tween.removeTweens(e.emojiImg);
            }));
        }, i.prototype.createArmature = function(t) {
            var i = this;
            if (!i.armature) {
                i.armature = new e.ArmaturePlayer("guideMan"), i.personGroup.addChild(i.armature), 
                i.armature.x = 120, i.armature.y = 438;
                var n = "attack4";
                switch (t) {
                  case 1:
                    n = "attack4";
                    break;

                  case 2:
                    n = "attack4";
                    break;

                  default:
                    n = "attack0";
                }
                i.armature.play(n, 0);
            }
        }, i.prototype.checkCpTween = function() {
            var e = NoticeModel.noticesList[0];
            if (537 == e.action && "cpShield" == e.goodsId) {
                var t = util.createBitmapByName("couple_mini_shield_png"), i = hortor.StageManager.getLayer(hortor.Layer.FACEUI);
                i.addChild(t), t.width = 30, t.height = 29, t.anchorOffsetX = 17, t.x = .5 * hortor.StageManager.stageWidth, 
                t.y = hortor.StageManager.stageHeight - 300;
                var n = egret.Tween.get(t);
                n.to({
                    x: 219,
                    y: 17
                }, 500, egret.Ease.quadIn).call(function() {
                    EventCenter.sendEvent(EventConst.CPShieldChange, {
                        type: "add"
                    }), t && (egret.Tween.removeTweens(t), util.removeFromParent(t));
                });
            }
        }, i.prototype.closeBtnFunc = function() {
            this._isMoving || (egret.Tween.removeTweens(this.group), this.checkCpTween(), this.emojiImg && egret.Tween.removeTweens(this.emojiImg), 
            NoticeModel.noticesList.splice(0, 1), NoticeModel.noticesList.length > 0 ? (this.group.bottom = -200, 
            this.onOpen()) : hortor.WindowManager.hideWindow(e.WindowType.WINDOW_NOTICEBAR));
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i;
    }(e.WindowBase);
    e.NoticeBarWindow = t, __reflect(t.prototype, "game.NoticeBarWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(e) {
        function t() {
            var t = e.call(this) || this;
            return t.skinPath = "notice/NoticeItemSkin", t;
        }
        return __extends(t, e), t.prototype.onInit = function() {
            this.label = new eui.Label(), this.label.textColor = 38362, this.label.size = 20, 
            this.label.lineSpacing = 6, this.label.x = 27.5, this.label.width = 520, this.label.bold = !0, 
            this.label.textAlign = egret.HorizontalAlign.LEFT, this.label.lineSpacing = 8, this.textGroup.addChild(this.label);
        }, t.prototype.onData = function() {
            this.title.text = this.data.title || "更新内容", this.label.textFlow = new egret.HtmlTextParser().parser(this.data.content || "");
        }, t.prototype.openAcView = function() {}, t;
    }(e.ViewBase);
    e.NoticeItem = t, __reflect(t.prototype, "game.NoticeItem");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.isFirst = !0, e.bannerId = -1, e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.panel.helpBtn.visible = !1, this.banner.addEventListener(egret.TouchEvent.TOUCH_TAP, this.showBannerInfo, this);
        }, i.prototype.onData = function() {
            for (var t, i = [], n = 0; n < this.data.length; n++) "banner" == this.data[n].title ? t = this.data[n] : i.push(this.data[n]);
            this.scrollGroup.removeChildren();
            for (var n = 0; n < i.length; n++) {
                var o = hortor.ObjectPool.getObject(e.NoticeItem);
                o.data = i[n], this.scrollGroup.addChild(o);
            }
            t && (this.bannerId = t.content), this.banner.source = e.ResourcePath.getNoticeBannerPath(t ? t.content : 1);
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.showBannerInfo = function() {
            12 == this.bannerId && hortor.WindowManager.showWindow(e.WindowType.WINDOW_BANNER_INFO);
        }, i;
    }(hortor.Window);
    e.NoticeWindow = t, __reflect(t.prototype, "game.NoticeWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onData = function() {
            var e = this.data.itemPos;
            this.group.x = e.x, this.group.y = e.y, this.btnBg.height = 178, this.useBtn.visible = this.useBtn.includeInLayout = !1;
        }, i.prototype.sendBtnFunc = function() {
            return octopusModel.octopusPlayer.DonateCount >= 3 ? void hortor.TipManager.bubble("每天最多赠送3次装备，请明天赠送吧") : void hortor.WindowManager.showWindow(e.WindowType.WINDOW_OCTOPUS_SENDFRIEND);
        }, i.prototype.exchangeBtnFunc = function() {
            hortor.WindowManager.showWindow(e.WindowType.WINDOW_OCTOPUS_EXCHANG);
        }, i;
    }(e.ComAcPropBtnWindow);
    e.OctopusBtnWindow = t, __reflect(t.prototype, "game.OctopusBtnWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            t.prototype.onInit.call(this), this.list.itemRenderer = e.OctopusFriendItem;
        }, i.prototype.onData = function() {
            this.list.itemRenderer = e.OctopusFriendItem, this.desc.text = "好友互换装备，可以更快兑换奖品哦！", 
            this.showAllView(!1);
        }, i;
    }(e.ComFriendListWindow);
    e.OctopusExchangeWindow = t, __reflect(t.prototype, "game.OctopusExchangeWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            t.prototype.onInit.call(this), this.list.itemRenderer = e.OctopusFriendsListNode;
        }, i.prototype.onData = function() {
            this.desc.text = "看看好友那里的章鱼是不是还有很多礼盒", this.initOctopusList(), this.initTimer();
        }, i.prototype.onClose = function() {
            this.clock && this.clock.pause();
        }, i.prototype.prepare = function(t, i) {
            HttpService.get(e.ServerMsg.OCTOPUS_LIST, "uid=" + playerModel.uid, function(e) {
                t(e);
            }, i);
        }, i.prototype.initTimer = function() {
            octopusModel.octopusTimer = 0, this.clock ? this.clock.resume() : (this.clock = hortor.TimerManager.addClock(e.ClockType.OctopusFriend, 36e3, 1e3, 1), 
            this.clock.registCallBack(this, function() {}, function() {
                octopusModel.octopusTimer++;
            }));
        }, i.prototype.initOctopusList = function() {
            var e = this.data;
            this.friendData = [];
            for (var t = 0; t < e.friends.length; t++) if (playerModel.uid != e.friends[t].uid) {
                for (var i = 0, n = 0; n < e.friends[t].boxes.length; n++) 0 != n && 0 != e.friends[t].boxes[n] && i++;
                e.friends[t].openingRemain < 1 && i > 2 - e.friends[t].ownerGotGoods ? e.friends[t].hasGift = 0 : e.friends[t].hasGift = 1, 
                this.friendData.push(e.friends[t]);
            }
            this.empty.visible = 0 == this.friendData.length, this.refreshListFunc();
        }, i.prototype.refreshListFunc = function(e) {
            this.baseData && this.baseData.removeAll();
            var t = e ? e : this.friendData, i = util.cloneArr(t);
            i = _.sortBy(i, "openingRemain"), i.reverse();
            for (var n = [], o = [], a = 0; a < i.length; a++) i[a].openingRemain < 1 ? n.push(i[a]) : o.push(i[a]);
            o.reverse(), i = o.concat(n), i = _.sortBy(i, "hasGift"), this.baseData = new eui.ArrayCollection(i), 
            this.list.dataProvider = this.baseData;
        }, i;
    }(e.ComFriendListWindow);
    e.OctopusFriendListWindow = t, __reflect(t.prototype, "game.OctopusFriendListWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            t.prototype.onInit.call(this), this.list.itemRenderer = e.OctopusFriendItem;
        }, i.prototype.onData = function() {
            this.desc.text = "好友互换装备，可以更快兑换奖品哦！", this.showAllView(!0);
        }, i;
    }(e.ComFriendListWindow);
    e.OctopusFriendWindow = t, __reflect(t.prototype, "game.OctopusFriendWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.startPos = {
                x: 0,
                y: 0
            }, e.middlePos = {
                x: 0,
                y: 0
            }, e.endPos = {
                x: 321,
                y: 470
            }, e.propType = "", e.effect = null, e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.rewardList = [], this.animationPlayer = new e.ArmaturePlayer("jiangli"), this.rewardGroup.addChild(this.animationPlayer), 
            this.animationPlayer.x = 200, this.animationPlayer.y = 230, this.getBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.getBtnFunc, this);
        }, i.prototype.onData = function() {
            this.startPos = this.data, this.openPanel();
        }, i.prototype.openPanel = function() {
            var t = this;
            this.calMiddlePos(), this.animationPlayer.play("jinru", 1, function() {
                t.animationPlayer.play("xunhuan", 0);
            });
            var i = octopusModel.gainRewardList[0], n = _.keys(i)[0], o = _.values(i)[0], a = e.ItemManager.getItemInfo(n);
            this.icon.source = a.icon, this.infoLabel.text = -1 == n.indexOf("jewel") ? a.name + "x" + o : a.name, 
            this.propType = -1 == n.indexOf("jewel") ? "prop" : "octopusGift", this.initRewardGroup(), 
            this.animationPlayer.visible = !1, this.getBtn.alpha = 0;
            var r = egret.Tween.get(this);
            r.to({
                factor: 1
            }, 600).call(function() {
                t.animationPlayer.visible = !0, egret.Tween.get(t.getBtn).to({
                    alpha: 1
                }, 500).call(function() {
                    egret.Tween.removeTweens(t.getBtn);
                });
            }), this.maskImage.alpha = 0, egret.Tween.get(this.maskImage).to({
                alpha: 1
            }, 1500);
        }, i.prototype.initRewardGroup = function() {
            var e = this;
            this.iconGroup.scaleX = this.iconGroup.scaleY = .1, egret.Tween.get(this.iconGroup, {
                loop: !1
            }).to({
                scaleX: 1,
                scaleY: 1
            }, 800, egret.Ease.backOut).call(function() {
                egret.Tween.removeTweens(e.iconGroup);
            }), this.infoLabel.alpha = 0, egret.Tween.get(this.infoLabel, {
                loop: !1
            }).wait(400).to({
                alpha: 1
            }, 400, egret.Ease.backOut).call(function() {
                egret.Tween.removeTweens(e.infoLabel);
            });
        }, i.prototype.getBtnFunc = function() {
            octopusModel.gainRewardList.splice(0, 1), this.propFlyAction();
        }, i.prototype.calMiddlePos = function() {
            this.middlePos.x = Math.floor(this.endPos.x + (this.startPos.x - this.endPos.x) / 2), 
            this.middlePos.y = this.startPos.y > this.endPos.y ? this.endPos.y - 500 : this.startPos.y - 400;
        }, Object.defineProperty(i.prototype, "factor", {
            get: function() {
                return 0;
            },
            set: function(e) {
                this.iconGroup.x = (1 - e) * (1 - e) * this.startPos.x + 2 * e * (1 - e) * this.middlePos.x + e * e * this.endPos.x, 
                this.iconGroup.y = (1 - e) * (1 - e) * this.startPos.y + 2 * e * (1 - e) * this.middlePos.y + e * e * this.endPos.y;
                var t = 1;
                this.iconGroup.scaleX = this.iconGroup.scaleY = e * t;
            },
            enumerable: !0,
            configurable: !0
        }), i.prototype.propFlyAction = function() {
            var e = this;
            if ("octopusGift" == this.propType) {
                var t = {
                    x: 102,
                    y: 804
                };
                egret.Tween.get(this.getBtn).to({
                    alpha: 0
                }, 500).call(function() {
                    e.infoLabel.visible = !1, e.animationPlayer.visible = !1, egret.Tween.get(e.maskImage).to({
                        alpha: 0
                    }, 300);
                    var i = egret.Tween.get(e.iconGroup);
                    i.to({
                        x: t.x,
                        y: t.y,
                        scaleX: .1,
                        scaleY: .1
                    }, 500, egret.Ease.quadOut).call(function() {
                        e.iconGroup.visible = !1, e.forOctopusGuide(), e.hide();
                    });
                });
            } else this.forOctopusGuide(), this.hide();
        }, i.prototype.forOctopusGuide = function() {
            var t = octopusModel.checkOctopusGuide();
            if (2 == t) {
                var i = hortor.ScreenManager.getScreen(e.ScreenType.OCTOPUS_SCREEN);
                i && (i.setFingerVisible(!0), e.TutorialManager.instance.setCondition("2"));
            } else if (3 == t) {
                var i = hortor.ScreenManager.getScreen(e.ScreenType.OCTOPUS_SCREEN);
                i && (i.setRewardBtnVisible(!0), i.setSugarGroupVisible(!0), i.setFingerVisible(!0), 
                i.removeFingerAction(), i.stopGuildLabel(), e.TutorialManager.instance.setCondition("3"));
            }
        }, i;
    }(e.WindowBase);
    e.OctopusGainRewardWindow = t, __reflect(t.prototype, "game.OctopusGainRewardWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onData = function() {
            this.inputText.text = "";
        }, i.prototype.getFunc = function() {
            var e = new RegExp("[0-9]+"), t = this.inputText.text;
            e.test(t) && parseInt(t) > 999 && parseInt(t) < 1e4 ? this.sendJigsawReceive() : (this.inputText.text = "", 
            hortor.TipManager.alert("密码错误，请确认后重试"));
        }, i.prototype.sendJigsawReceive = function() {
            var t = this, i = this.data;
            HttpService.post(e.ServerMsg.OCTOPUS_RECEIVE, "uid=" + playerModel.uid + "&logId=" + i.logId + "&password=" + this.inputText.text, function(e) {
                var n = octopusModel.octopusPlayer.Jewels[i.jewelId], o = e.octopusPlayer.Jewels[i.jewelId];
                o > n ? (octopusModel.octopusPlayer = e.octopusPlayer, EventCenter.sendEvent(EventConst.SendOctopus), 
                EventCenter.sendEvent(EventConst.GetOctopus, {
                    logId: i.logId
                }), t.hide(), hortor.TipManager.bubble("领取成功")) : hortor.TipManager.alert("密码错误，请确认后重试");
            });
        }, i;
    }(e.ComGetPropWindow);
    e.OctopusGetPropWindow = t, __reflect(t.prototype, "game.OctopusGetPropWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(e) {
        function t() {
            var t = e.call(this) || this;
            return t.effect = null, t;
        }
        return __extends(t, e), t.prototype.onInit = function() {
            this.addClick(this.bg, this.closeFunc, this), this.setNotchFit(this.mainGroup);
        }, t.prototype.closeFunc = function() {
            this.hide();
        }, t;
    }(e.WindowBase);
    e.OctopusHelpWindow = t, __reflect(t.prototype, "game.OctopusHelpWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e.speedX = 2, e.posOffY = [], e.giftPos = [ {
                x: 258,
                y: 531
            }, {
                x: 137,
                y: 447
            }, {
                x: 158,
                y: 315
            }, {
                x: 238,
                y: 212
            }, {
                x: 382,
                y: 256
            }, {
                x: 500,
                y: 312
            }, {
                x: 518,
                y: 487
            }, {
                x: 391,
                y: 560
            } ], e.otherStartPos = {
                x: 0,
                y: 0
            }, e.otherMiddlePos = {
                x: 0,
                y: 0
            }, e.otherEndPos = {
                x: 0,
                y: 0
            }, e.clawsLivePosY = [ 636, 551, 537, 316, 360, 505, 590, 663 ], e.OctopusLivePosY = 540, 
            e.clawsSleepPosY = [ 686, 601, 587, 436, 460, 585, 640, 713 ], e.OctopusSleepPosY = 590, 
            e.octopusMoving = !1, e.isPlayingGoldEffect = !1, e._pufferNums = 0, e.startActioning = !0, 
            e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.init(), this.closeBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.closeBtnFun, this), 
            this.backBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.closeBtnFun, this), 
            this.rewardGroup.addEventListener(egret.TouchEvent.TOUCH_TAP, this.rewardBtnFunc, this), 
            this.helpBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.helpBtnFunc, this), 
            this.friendBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.friendBtnFunc, this), 
            this.newsBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.newsBtnFunc, this), 
            this.bombsGroup.addEventListener(egret.TouchEvent.TOUCH_TAP, this.bombsGroupFunc, this), 
            this.sugarGroup.addEventListener(egret.TouchEvent.TOUCH_TAP, this.sugarGroupFunc, this), 
            this.dropGroup.addEventListener(egret.TouchEvent.TOUCH_TAP, this.octopusHelpBtnFunc, this), 
            this.octGift.onViewRegister(), this.bombLogic.onViewRegister(), EventCenter.addEventListener(EventConst.OctopusRefresh, this.refreshOctopusView, this), 
            EventCenter.addEventListener(EventConst.refreshOctopusProp, this.initPropNum, this), 
            EventCenter.addEventListener(EventConst.OctopusPlayerHide, this.playPlayerGroupHide, this), 
            EventCenter.addEventListener(EventConst.OctopusDown, this.OctopusGoSleep, this), 
            EventCenter.addEventListener(EventConst.OctopusUp, this.OctopusGoWait, this), this.setNotchFit(this.timeGroup), 
            this.setNotchFit(this.dropGroup), this.setNotchFit(this.buttonGroup), this.setNotchFit(this.guideLabel), 
            octopusModel.bind("octopusMessageRedPoint", this, this.showRedPoint.bind(this)), 
            octopusModel.bind("octopusLogRedPoint", this, this.showRedPoint.bind(this)), this.clock = activityModel.getActivityInfo(e.ActivityType.Octopus).clock, 
            this.clock.registCallBack(this, null, this._countDown.bind(this));
        }, i.prototype.init = function() {
            this.bombLogic = new e.OctBombLogic(this), this.bombLogic.onInit(), this.octBoss = new e.OctBoss(this), 
            this.octBoss.onInit(this.monsterGroup), this.octGift = new e.OctGift(this), this.octGift.onInit();
        }, i.prototype.onOpen = function() {
            if (this._timer && this._timer.resume(), octopusModel.showTutorial) {
                uiModel.onShow(e.UINameType.sugarGroup, this.sugarGroup);
                var t = octopusModel.checkOctopusGuide();
                e.TutorialManager.instance.startTutorial("octopus", t);
            }
            octopusModel.gainRewardList = [];
        }, i.prototype.onClose = function() {
            this._timer && this._timer.pause();
        }, i.prototype.onData = function() {
            var t = octopusModel.octopusInfo, i = activityModel.getActivityInfo(e.ActivityType.Octopus);
            this.activityTimeLabel.text = "活动剩余时间:" + util.formatTimeCNNew3(this.clock.leftSecond), 
            this.createRewardArmature(), this.octBoss.openPanel(), this.octGift.openPanel(), 
            this.bombLogic.initBombView(), this._pufferNums = octopusModel.octopusPlayer.puffer, 
            this.initPropNum(), this._timer || (this._timer = hortor.TimerManager.addClock(e.ClockType.OctopusBgMove, 864e3, 100 / 3, 1), 
            this._timer.registCallBack(this, function() {}, this.timerFunc.bind(this))), this.activeTimer || (this.activeTimer = hortor.TimerManager.addClock(e.ClockType.OctopusScreen, i.endRemain, 1e3, 1), 
            this.activeTimer.registCallBack(this, function() {}, this.activeTimerFunc.bind(this)));
            for (var n = 0; 8 > n; n++) this["claw" + n].y = this.clawsSleepPosY[n];
            this.octBoss.boss.y = this.OctopusSleepPosY, 0 == t.openingRemain && this.OctopusGoWait(), 
            this.guildVisible(!octopusModel.showTutorial), octopusModel.showTutorial && this.setBombNumLabel("∞"), 
            this.startAction(), this.showDropView(), octopusModel.showTutorial || 0 != t.openingRemain || this.dropGroupDown(), 
            this.mainBg.y += .5 * octopusModel.stageOffHeight, this.rewardGroup.y += .5 * octopusModel.stageOffHeight, 
            this.monsterGroup.y += .5 * octopusModel.stageOffHeight;
        }, i.prototype.prepare = function(t, i) {
            HttpService.get(e.ServerMsg.OCTOPUS_SHOW, "uid=" + playerModel.uid, function(e) {
                octopusModel.update(e), t(e);
            }, i);
        }, i.prototype.createRewardArmature = function() {
            this.rewardAr ? this.rewardAr.play("zhangyuduihuan", -1) : (this.rewardAr = new e.ArmaturePlayer("zhangyuduihuan"), 
            this.rewardGroup.addChild(this.rewardAr), this.rewardAr.x = 76, this.rewardAr.y = 95, 
            this.rewardAr.play("zhangyuduihuan", -1));
        }, i.prototype.setGuildView = function() {
            var e = this;
            this.guildVisible(!1), this.finger || (this.finger = new egret.Bitmap(), this.addChild(this.finger), 
            this.finger.visible = !0, this.finger.width = 134, this.finger.height = 220, this.finger.x = 275, 
            this.finger.y = 635 + .5 * octopusModel.stageOffHeight, this.finger.touchEnabled = !1, 
            RES.getResAsync("octopus_shouzhi_png", function(t) {
                e.finger.texture = t;
            }, this));
            var t = egret.Tween.get(this.finger, {
                loop: !0
            });
            t.to({
                y: this.finger.y + 100,
                alpha: .2
            }, 1500);
            var i = egret.Tween.get(this.guideLabel, {
                loop: !0
            });
            i.to({
                alpha: 1
            }, 1e3).to({
                alpha: 0
            }, 1e3);
        }, i.prototype.removeFingerAction = function() {
            this.finger && (egret.Tween.removeTweens(this.finger), this.removeChild(this.finger), 
            this.finger = null);
        }, i.prototype.setFingerVisible = function(e) {
            this.finger && (this.finger.visible = e);
        }, i.prototype.stopGuildLabel = function() {
            egret.Tween.removeTweens(this.guideLabel), this.guideLabel.visible = !1;
        }, i.prototype.guildVisible = function(e) {
            this.friendBtn.visible = e, this.newsBtn.visible = e, this.rewardGroup.visible = e, 
            octopusModel.checkOctopusGuide() >= 3 ? this.sugarGroup.visible = !0 : this.sugarGroup.visible = e, 
            this.checkIsFreeBtnVisible();
        }, i.prototype.checkIsFreeBtnVisible = function() {
            this.freeImg.visible = octopusModel.shareCount < 2;
        }, i.prototype.setBombNumLabel = function(e) {
            this.bombNum.text = e;
        }, i.prototype.bombsGroupFunc = function() {
            this.bombLogic.isMoving || this.octopusMoving || octopusModel.showTutorial || (soundModel.playSound(e.SoundType.SOUND_PANEL_OPEN), 
            hortor.WindowManager.showWindow(e.WindowType.WINDOW_OCTOPUS_PUFFERPOP));
        }, i.prototype.sugarGroupFunc = function() {
            this.bombLogic.isMoving || this.octopusMoving || (soundModel.playSound(e.SoundType.SOUND_PANEL_OPEN), 
            hortor.WindowManager.showWindow(e.WindowType.WINDOW_OCTOPUS_PAYCONFIRM, {
                type: "lolly"
            }));
        }, i.prototype.octopusHelpBtnFunc = function() {
            this.bombLogic.isMoving || this.octopusMoving || (soundModel.playSound(e.SoundType.SOUND_PANEL_OPEN), 
            hortor.WindowManager.showWindow(e.WindowType.WINDOW_OCTOPUS_HELP));
        }, i.prototype.initPropNum = function() {
            this.sugarNumGroup.visible = octopusModel.octopusPlayer.lolly > 0, this.addSugarBtn.visible = !(octopusModel.octopusPlayer.lolly > 0), 
            this.bombNumGroup.visible = octopusModel.octopusPlayer.puffer > 0, this.addBombBtn.visible = !(octopusModel.octopusPlayer.puffer > 0), 
            this.sugarNum.text = octopusModel.octopusPlayer.lolly + "", this.bombNum.text = octopusModel.octopusPlayer.puffer + "", 
            this.bombLogic.checkBombVisible(), this.startActioning || this.showRedPoint(), this._pufferNums != octopusModel.octopusPlayer.puffer && (this.showAddTween(this.bombNum), 
            this._pufferNums = octopusModel.octopusPlayer.puffer), this.checkIsFreeBtnVisible();
        }, i.prototype.showRedPoint = function() {
            this.messageRedpoint.visible = octopusModel.octopusMessageRedPoint, this.rewardRedPoint.visible = octopusModel.octopusLogRedPoint;
            var t = octopusModel.octopusPlayer.puffer > 0 && 0 == octopusModel.octopusInfo.openingRemain;
            octopusModel.octopusRedPoint = t, gateModel.updateGate(e.ActivityType.Octopus);
        }, i.prototype.showAddTween = function(e) {
            var t = egret.Tween.get(e);
            t.to({
                scaleX: 1.4,
                scaleY: 1.4
            }, 300, egret.Ease.quadOut).to({
                scaleX: 1,
                scaleY: 1
            }, 100).call(function() {
                egret.Tween.removeTweens(e);
            });
        }, i.prototype.refreshOctopusView = function(t) {
            var i = octopusModel.octopusInfo;
            this.closeBtn.visible = i.uid == playerModel.uid, this.backBtn.visible = !(i.uid == playerModel.uid), 
            i.openingRemain > 0 && this.octBoss.isActive ? this.octBoss.sleepState(0) : i.openingRemain <= 0 && !this.octBoss.isActive && (i.uid == playerModel.uid && soundModel.playSound("octopus_awapen.mp3"), 
            soundModel.stopSound(e.SoundType.SOUND_OCTOPUS_SNORE), this.octBoss.waitState(0));
            for (var n = 0; 8 > n; n++) this["claw" + n].y = this.clawsSleepPosY[n];
            this.octBoss.boss.y = this.OctopusSleepPosY, this.octGift.showGiftAndClawView(), 
            0 == i.openingRemain && this.OctopusGoWait(), this.showPlayerHead(), this.sugarGroup.visible = i.uid == playerModel.uid, 
            this.timeGroup.visible = i.openingRemain > 0, t.data && t.data.useLolly || this.showDropView(), 
            this.checkIsFreeBtnVisible();
        }, i.prototype.setSugarGroupVisible = function(e) {
            this.sugarGroup.visible = e;
        }, i.prototype.showPlayerHead = function() {
            var e = octopusModel.octopusInfo;
            this.avatar.data = {
                gender: 0,
                headImg: e.ownerHeadImg,
                crowns: 0,
                showStar: !1
            };
            var t = e.ownerName;
            t = t.length > 6 ? t.substr(0, 5) + "..." : t, this.nameL.text = t, this.playerGroup.visible = e.uid != playerModel.uid;
        }, i.prototype.playPlayerGroupHide = function() {
            if (this.playerGroup.visible) {
                egret.Tween.removeTweens(this.playerGroup), this.playerGroup.x = 0;
                var e = egret.Tween.get(this.playerGroup);
                e.to({
                    x: -147
                }, 500, egret.Ease.quadIn);
            }
        }, i.prototype.playPlayerGroupShow = function() {
            egret.Tween.removeTweens(this.playerGroup), this.playerGroup.x = -147;
            var e = egret.Tween.get(this.playerGroup);
            e.to({
                x: 0
            }, 1200, egret.Ease.bounceOut);
        }, i.prototype.rewardBtnFunc = function() {
            this.bombLogic.isMoving || this.octopusMoving || (soundModel.playSound(e.SoundType.SOUND_PANEL_OPEN), 
            hortor.WindowManager.showWindow(e.WindowType.WINDOW_OCTOPUS_REWARD));
        }, i.prototype.friendBtnFunc = function() {
            this.bombLogic.isMoving || this.octopusMoving || hortor.WindowManager.showWindow(e.WindowType.WINDOW_OCTOPUS_FRIEND);
        }, i.prototype.newsBtnFunc = function() {
            this.bombLogic.isMoving || this.octopusMoving || hortor.WindowManager.showWindow(e.WindowType.WINDOW_OCTOPUS_MES);
        }, i.prototype.showGiftAndBoss = function() {
            this.octGift.showGiftAndClawView();
        }, i.prototype.helpBtnFunc = function() {
            if (!this.bombLogic.isMoving && !this.octopusMoving) {
                var t = HelpTextLabel.getOctopusTextLabel();
                e.ComFunc.openHelpPanel(t);
            }
        }, i.prototype.closeBtnFun = function() {
            var t = this;
            if (!(this.bombLogic.isMoving || this.octopusMoving || this.isPlayingGoldEffect)) {
                var i = octopusModel.octopusInfo;
                i.uid == playerModel.uid ? (soundModel.stopSound(e.SoundType.SOUND_OCTOPUS_SNORE), 
                hortor.ScreenManager.back()) : HttpService.post(e.ServerMsg.OCTOPUS_ENTER, "uid=" + playerModel.uid + "&fid=" + playerModel.uid, function(i) {
                    EventCenter.sendEvent(EventConst.OctopusPlayerHide), t.dropGroupUp(), e.ScreenLoading.instance.loadingState = !0;
                    var n = egret.setTimeout(function() {
                        egret.clearTimeout(n), octopusModel.update(i), t.sugarGroup.visible = !0, EventCenter.sendEvent(EventConst.OctopusRefresh), 
                        e.ScreenLoading.instance.loadingState = !1;
                    }, t, 700), o = egret.setTimeout(function() {
                        egret.clearTimeout(o), t.dropGroupDown();
                    }, t, 1600);
                }, function() {
                    t.hide();
                }, this);
            }
        }, i.prototype.timerFunc = function() {}, i.prototype.activeTimerFunc = function() {
            var t = octopusModel.octopusInfo;
            this.timeGroup.visible = t.openingRemain > 0, 0 != octopusModel.octopusInfo.openingRemain || this.octBoss.isActive || (soundModel.stopSound(e.SoundType.SOUND_OCTOPUS_SNORE), 
            soundModel.playSound(e.SoundType.SOUND_OCTOPUS_AWAPEN), this.octBoss.waitState(0), 
            this.OctopusGoWait(), this.showDropView(), this.dropGroupDown(), this.octGift.showGiftAndClawView()), 
            t.openingRemain > 0 && (this.timeL.text = util.formatTimeHMS(t.openingRemain), octopusModel.octopusInfo.openingRemain--);
        }, i.prototype._countDown = function() {
            this.activityTimeLabel.text = "活动剩余时间:" + util.formatTimeCNNew3(this.clock.leftSecond);
        }, i.prototype.playWaveEffect = function() {
            var e = this.leftWave0.x = this.leftWave1.x = 50, t = this.leftWave0.y = this.leftWave1.y = 557, i = this.rightWave0.x = this.rightWave1.x = 400, n = this.rightWave0.y = this.rightWave1.y = 643, o = egret.Tween.get(this.leftWave0, {
                loop: !1
            });
            o.to({
                alpha: 1,
                x: e - 21,
                y: t + 24
            }, 200).to({
                alpha: 0,
                x: e - 42,
                y: t + 47
            }, 350);
            var a = egret.Tween.get(this.leftWave1, {
                loop: !1
            });
            a.wait(180).to({
                alpha: 1,
                x: e - 21,
                y: t + 24
            }, 350).to({
                alpha: 0,
                x: e - 42,
                y: t + 47
            }, 500);
            var r = egret.Tween.get(this.rightWave0, {
                loop: !1
            });
            r.to({
                alpha: 1,
                x: i + 19,
                y: n + 42
            }, 250).to({
                alpha: 0,
                x: i + 18,
                y: n + 63
            }, 400);
            var s = egret.Tween.get(this.rightWave1, {
                loop: !1
            });
            s.wait(180).to({
                alpha: 1,
                x: i + 19,
                y: n + 42
            }, 400).to({
                alpha: 0,
                x: i + 18,
                y: n + 63
            }, 550);
        }, i.prototype.playGoldEffect = function(t, i, n) {
            var o = this;
            if (this && this) {
                this.isPlayingGoldEffect = !0;
                for (var a = function(t) {
                    var a = _.random(1, 2), s = "jingbi3_" + a, l = hortor.ObjectPool.getObject(e.MoviePlayer, s, s);
                    r.addChild(l), l.y = _.random(n - 5, n + 5), l.x = _.random(i - 5, i + 5), l.play(-1), 
                    util.setScale(l, .4);
                    var d = _.random(i - 250, i + 320), u = d > i ? _.random(d, d + 100) : _.random(d, d - 100), h = _.random(n - 250, n - 380), c = _.random(n + 680, n + 500), p = Math.random() < .5 ? .7 : 1.2, g = Math.random() < .5 ? .7 : 1.2, m = _.random(500, 800), f = _.random(700, 1e3), v = egret.Tween.get(l);
                    v.to({
                        x: d,
                        y: h,
                        scaleX: p,
                        scaleY: p,
                        rotation: _.random(0, 150)
                    }, m, egret.Ease.sineOut).to({
                        x: u,
                        y: c,
                        scaleX: g,
                        scaleY: g,
                        rotation: _.random(0, 150)
                    }, f, egret.Ease.quadIn).call(function() {
                        hortor.ObjectPool.disposeObject(l), o.removeChild(l), EventCenter.sendEvent(EventConst.GoldChange);
                    });
                }, r = this, s = 0; t > s; s++) a(s);
                var l = egret.setTimeout(function() {
                    egret.clearTimeout(l), o.showGoldAddEffect(i, n);
                }, this, 1500);
                if (octopusModel.showTutorial && 1 == octopusModel.checkOctopusGuide()) var d = egret.setTimeout(function() {
                    egret.clearTimeout(d), e.TutorialManager.instance.setCondition("1"), o.setFingerVisible(!0);
                }, this, 800);
            }
        }, i.prototype.showGoldAddEffect = function(t, i) {
            var n = this;
            if (this && this) {
                var o = 0;
                if (octopusModel.gainRewardList[0] && octopusModel.gainRewardList[0].money && (o = octopusModel.gainRewardList[0].money), 
                0 != o) {
                    octopusModel.gainRewardList.splice(0, 1);
                    var a = new egret.BitmapText();
                    RES.getResAsync("money_text0_fnt", function(e) {
                        a.font = e;
                    }, this), a.text = e.ComFunc.toThousands(o), this.addChild(a), a.y = .5 * octopusModel.stageHeight - 200, 
                    a.x = .5 * octopusModel.stageWidth, a.anchorOffsetX = 215, a.anchorOffsetY = 49, 
                    a.scaleX = a.scaleY = .1;
                    var r = egret.Tween.get(a);
                    r.to({
                        scaleX: .8,
                        scaleY: .8
                    }, 500).wait(800).call(function() {
                        n.removeChild(a), a = null, n && (n.isPlayingGoldEffect = !1);
                    });
                }
            }
        }, i.prototype.showOtherBombEffect = function(t) {
            var i = octopusModel.octopusInfo;
            if (i.uid == t.values[1]) {
                var n = t.values[2] - 1, o = this.giftPos[n];
                3 >= n ? this.otherStartPos = {
                    x: -300,
                    y: 780
                } : this.otherStartPos = {
                    x: 940,
                    y: 780
                };
                var a = o.y + .5 * octopusModel.stageOffHeight;
                this.otherEndPos = {
                    x: o.x,
                    y: a
                }, this.otherMiddlePos.x = this.otherStartPos.x + (this.otherEndPos.x - this.otherStartPos.x) / 2, 
                this.otherMiddlePos.y = this.otherEndPos.y - 300, octopusModel.octopusInfo.boxes[t.values[2]] = 0;
                var r = new e.BombAction(this, this.otherStartPos, this.otherMiddlePos, this.otherEndPos, t);
                r.init();
            }
        }, i.prototype.OctopusGoSleep = function() {
            var t = this;
            if (soundModel.playSound(e.SoundType.SOUND_OCTOPUS_WATER), this.octBoss.boss.y == this.OctopusLivePosY) {
                this.octopusMoving = !0;
                var i = 1500, n = egret.Tween.get(this.claw0);
                n.wait(800).to({
                    y: this.clawsLivePosY[0] + 50
                }, i, egret.Ease.cubicInOut);
                var o = egret.Tween.get(this.claw1);
                o.wait(600).to({
                    y: this.clawsLivePosY[1] + 50
                }, i, egret.Ease.cubicInOut);
                var a = egret.Tween.get(this.claw2);
                a.wait(200).to({
                    y: this.clawsLivePosY[2] + 50
                }, i, egret.Ease.cubicInOut);
                var r = egret.Tween.get(this.claw3);
                r.wait(300).to({
                    y: this.clawsLivePosY[3] + 120
                }, i, egret.Ease.cubicInOut);
                var s = egret.Tween.get(this.claw4);
                s.wait(500).to({
                    y: this.clawsLivePosY[4] + 100
                }, i, egret.Ease.cubicInOut);
                var l = egret.Tween.get(this.claw5);
                l.wait(800).to({
                    y: this.clawsLivePosY[5] + 80
                }, i, egret.Ease.cubicInOut);
                var d = egret.Tween.get(this.claw6);
                d.wait(600).to({
                    y: this.clawsLivePosY[6] + 50
                }, i, egret.Ease.cubicInOut);
                var u = egret.Tween.get(this.claw7);
                u.wait(700).to({
                    y: this.clawsLivePosY[7] + 50
                }, i, egret.Ease.cubicInOut);
                var h = egret.Tween.get(this.octBoss.boss);
                h.wait(200).to({
                    y: this.OctopusLivePosY + 70
                }, i + 600, egret.Ease.cubicInOut).call(function() {
                    t.octBoss.sleepState(0), t.octopusMoving = !1;
                });
            }
        }, i.prototype.OctopusGoWait = function() {
            var t = this;
            if (soundModel.playSound(e.SoundType.SOUND_OCTOPUS_WATER), this.octBoss.boss.y != this.OctopusLivePosY) {
                this.octopusMoving = !0;
                var i = 1500, n = egret.Tween.get(this.claw0);
                n.wait(800).to({
                    y: this.clawsLivePosY[0]
                }, i, egret.Ease.cubicInOut);
                var o = egret.Tween.get(this.claw1);
                o.wait(600).to({
                    y: this.clawsLivePosY[1]
                }, i, egret.Ease.cubicInOut);
                var a = egret.Tween.get(this.claw2);
                a.wait(200).to({
                    y: this.clawsLivePosY[2]
                }, i, egret.Ease.cubicInOut);
                var r = egret.Tween.get(this.claw3);
                r.wait(800).to({
                    y: this.clawsLivePosY[3]
                }, i, egret.Ease.cubicInOut);
                var s = egret.Tween.get(this.claw4);
                s.wait(500).to({
                    y: this.clawsLivePosY[4]
                }, i, egret.Ease.cubicInOut);
                var l = egret.Tween.get(this.claw5);
                l.wait(800).to({
                    y: this.clawsLivePosY[5]
                }, i, egret.Ease.cubicInOut);
                var d = egret.Tween.get(this.claw6);
                d.wait(600).to({
                    y: this.clawsLivePosY[6]
                }, i, egret.Ease.cubicInOut);
                var u = egret.Tween.get(this.claw7);
                u.wait(700).to({
                    y: this.clawsLivePosY[7]
                }, i, egret.Ease.cubicInOut);
                var h = egret.Tween.get(this.octBoss.boss);
                h.wait(200).to({
                    y: this.OctopusLivePosY
                }, i + 600, egret.Ease.cubicInOut).call(function() {
                    t.octopusMoving = !1;
                });
            }
        }, i.prototype.startAction = function() {
            var t = this;
            this.helpBtn.alpha = this.friendBtn.alpha = this.newsBtn.alpha = this.sugarGroup.alpha = this.bombsGroup.alpha = 0;
            var i = egret.setTimeout(function() {
                egret.clearTimeout(i), t.helpBtn.scaleX = t.helpBtn.scaleY = 0, t.friendBtn.scaleX = t.friendBtn.scaleY = 0, 
                t.newsBtn.scaleX = t.newsBtn.scaleY = 0, t.sugarGroup.scaleX = t.sugarGroup.scaleY = 0, 
                t.bombsGroup.scaleX = t.bombsGroup.scaleY = 0, t.helpBtn.alpha = t.friendBtn.alpha = t.newsBtn.alpha = t.sugarGroup.alpha = t.bombsGroup.alpha = 1;
                var e = egret.Tween.get(t.helpBtn), n = egret.Tween.get(t.friendBtn), o = egret.Tween.get(t.newsBtn), a = egret.Tween.get(t.sugarGroup), r = egret.Tween.get(t.bombsGroup), s = 300;
                e.to({
                    scaleX: 1,
                    scaleY: 1
                }, s, egret.Ease.cubicOut), n.to({
                    scaleX: 1,
                    scaleY: 1
                }, s, egret.Ease.cubicOut), o.to({
                    scaleX: 1,
                    scaleY: 1
                }, s, egret.Ease.cubicOut), a.to({
                    scaleX: 1,
                    scaleY: 1
                }, s, egret.Ease.cubicOut), r.to({
                    scaleX: 1,
                    scaleY: 1
                }, s, egret.Ease.cubicOut).call(function() {
                    t.showRedPoint(), t.startActioning = !1;
                });
            }, this, 1800), n = egret.Tween.get(this.startGroup);
            n.to({
                y: .5 * octopusModel.stageOffHeight
            }, 1800, egret.Ease.cubicOut).call(function() {
                octopusModel.showTutorial && (t.setBombNumLabel("∞"), octopusModel.checkOctopusGuide() >= 3 ? (t.guildVisible(!1), 
                e.TutorialManager.instance.setCondition("3")) : t.setGuildView()), t.startActioning = !1;
            }), this.checkIsFreeBtnVisible();
        }, i.prototype.showBtnAction = function() {
            var e = this;
            this.guildVisible(!0), this.friendBtn.scaleX = this.friendBtn.scaleY = 0, this.newsBtn.scaleX = this.newsBtn.scaleY = 0, 
            this.sugarGroup.scaleX = this.sugarGroup.scaleY = 0;
            var t = egret.Tween.get(this.friendBtn), i = egret.Tween.get(this.newsBtn), n = egret.Tween.get(this.sugarGroup), o = 300;
            t.to({
                scaleX: 1,
                scaleY: 1
            }, o, egret.Ease.cubicOut), i.to({
                scaleX: 1,
                scaleY: 1
            }, o, egret.Ease.cubicOut), n.to({
                scaleX: 1,
                scaleY: 1
            }, o, egret.Ease.cubicOut).call(function() {
                e.showRedPoint();
            });
        }, i.prototype.showDropView = function() {
            this.showDropGroup.removeChildren();
            var e = octopusModel.octopusInfo, t = octopusModel.jewelConfs;
            this.dropTitle.source = "octopus_title_" + e.color;
            var i = t[e.color];
            i.sort();
            for (var n = 0; n < i.length; n++) i[n] && this.createDrop(i[n] - 1);
        }, i.prototype.createDrop = function(t) {
            var i = octopusModel.octopusInfo, n = new eui.Group();
            n.width = 59, n.height = 59, this.showDropGroup.addChild(n);
            var o = new egret.Bitmap();
            n.addChild(o), RES.getResAsync("octopus_boder_" + i.color, function(e) {
                o.texture = e;
            }, this), o.x = 0, o.y = 0;
            var a = new eui.Image();
            n.addChild(a), a.source = e.ResourcePath.getItemIconByName("octopus_gift" + t), 
            a.width = a.height = 52, a.x = 2, a.y = 2;
        }, i.prototype.dropGroupDown = function() {
            var e = octopusModel.octopusInfo;
            if (!(e.openingRemain > 0)) {
                util.setScale(this.dropGroup, 0), this.dropGroup.visible = !0;
                var t = egret.Tween.get(this.dropGroup);
                t.to({
                    scaleX: 1,
                    scaleY: 1
                }, 500, egret.Ease.cubicOut);
            }
        }, i.prototype.dropGroupUp = function() {
            var e = this, t = octopusModel.octopusInfo;
            if (t.openingRemain > 0) return void (this.dropGroup.visible = !1);
            util.setScale(this.dropGroup, 1), this.dropGroup.visible = !0;
            var i = egret.Tween.get(this.dropGroup);
            i.to({
                scaleX: 0,
                scaleY: 0
            }, 500, egret.Ease.cubicOut).call(function() {
                e.dropGroup.visible = !1;
            });
        }, i.prototype.setRewardBtnVisible = function(e) {
            this.rewardGroup.visible = e;
        }, i;
    }(e.ScreenBase);
    e.OctopusMainScreen = t, __reflect(t.prototype, "game.OctopusMainScreen");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            t.prototype.onInit.call(this), this.list.itemRenderer = e.OctopusMesNode;
        }, i.prototype.onData = function() {
            this.desc.text = "礼盒可是谁先打到就归谁哦！", this.initOctopusMessages();
        }, i.prototype.prepare = function(t, i) {
            HttpService.get(e.ServerMsg.OCTOPUS_LIST, "uid=" + playerModel.uid, function(i) {
                octopusModel.octopusMessageRedPoint = !1, gateModel.updateGate(e.ActivityType.Octopus), 
                t(i);
            }, i);
        }, i.prototype.initOctopusMessages = function() {
            for (var e = this.data, t = e.messages, i = e.friends, n = [], o = 0; o < t.length; o++) {
                for (var a = void 0, r = 0; r < i.length; r++) if (i[r].uid == t[o].friendId) {
                    a = i[r];
                    break;
                }
                if (a) {
                    var s = {
                        friendId: t[o].friendId,
                        friendName: t[o].friendName,
                        friendHeadImg: t[o].friendHeadImg,
                        rewardType: t[o].rewardType,
                        rewardValue: t[o].rewardValue,
                        createAt: t[o].createAt,
                        ownerGotGoods: a.ownerGotGoods || 0,
                        openingRemain: a.openingRemain || 0,
                        boxes: a.boxes || []
                    };
                    n.push(s);
                }
            }
            n.reverse(), this.logs = n;
        }, i;
    }(e.ComNewsWindow);
    e.OctopusMesWindow = t, __reflect(t.prototype, "game.OctopusMesWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.initEvent = e.addEventFunc.bind(e), e;
        }
        return __extends(i, t), i.prototype.addEventFunc = function() {
            EventCenter.addEventListener(EventConst.GetOctopus, this.refreshListFunc, this);
        }, i.prototype.onInit = function() {
            t.prototype.onInit.call(this), this.list.itemRenderer = e.OctopusNewsNode;
        }, i.prototype.onData = function() {
            octopusModel.octopusLogRedPoint = !1, EventCenter.sendEvent(EventConst.refreshOctopusProp), 
            gateModel.updateGate(e.ActivityType.Octopus), this.logs = this.data.logs.reverse(), 
            this.setHasGotNum();
        }, i.prototype.prepare = function(t, i) {
            HttpService.get(e.ServerMsg.OCTOPUS_LOG, "uid=" + playerModel.uid, function(e) {
                t(e);
            }, i);
        }, i.prototype.refreshListFunc = function(t) {
            if (this.isOpen) {
                var i = t.data.logId, n = this.logs, o = _.find(n, function(e) {
                    return e.logId == i;
                });
                o && (o.gotJewel = !0), this.logs = n, octopusModel.newOctopusNews = !1;
                for (var a = 0; a < n.length; a++) {
                    var r = n[a];
                    if (r.fromFriend && !r.gotJewel) {
                        octopusModel.newOctopusNews = !0;
                        break;
                    }
                }
                gateModel.updateGate(e.ActivityType.Octopus), EventCenter.sendEvent(EventConst.OctopusRedPoint), 
                this.setHasGotNum();
            }
        }, i.prototype.setHasGotNum = function() {
            this.desc.text = "已领取装备数量:" + octopusModel.octopusPlayer.ReceiveCount + "/3";
        }, i;
    }(e.ComNewsWindow);
    e.OctopusNewsWindow = t, __reflect(t.prototype, "game.OctopusNewsWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.panelAlert.registCallBack(this.confirmFunc, null, this);
        }, i.prototype.onClose = function() {
            uiModel.onHide(e.UINameType.payConfirmOkBtn);
        }, i.prototype.onOpen = function() {
            uiModel.onShow(e.UINameType.payConfirmOkBtn, this.panelAlert.okBtn);
        }, i.prototype.onData = function() {
            var e = this.data.type;
            this.infoLabel.text = "puffer" == e ? "使用河豚弹可以将章鱼身上的礼盒打掉" : "喂给章鱼一只甜甜的棒棒糖", this.tipsLabel.text = "puffer" == e ? "通过转转盘有概率获得河豚弹" : "可以让章鱼挂满礼盒重新出现", 
            this.panelAlert.okBtn.icon = "puffer" == e ? "comBtnTxt_json.common_txt_gm" : octopusModel.octopusPlayer.lolly > 0 ? "comBtnTxt_json.common_txt_sy" : "comBtnTxt_json.common_txt_gm";
            var t = {};
            t = "puffer" == e ? {
                puffer: octopusModel.octopusPlayer.puffer
            } : {
                lolly: octopusModel.octopusPlayer.lolly
            }, this.rewardNode.initNodeView(t), gateModel.iosPay || 0 != octopusModel.octopusPlayer.lolly || (this.panelAlert.okBtn.visible = !1);
        }, i.prototype.confirmFunc = function() {
            "lolly" == this.data.type && octopusModel.octopusPlayer.lolly > 0 ? this.refreshOctopus() : this.buyOctopusProp();
        }, i.prototype.buyOctopusProp = function() {
            var t = this;
            HttpService.get(e.ServerMsg.SHOP_LIST, "uid=" + playerModel.uid, function(i) {
                var n = _.find(i.goods.prop, function(e) {
                    return e.goodsId == t.data.type;
                });
                hortor.WindowManager.showWindow(e.WindowType.WINDOW_SHOP_GOODS, n), t.hide();
            });
        }, i.prototype.refreshOctopus = function() {
            var t = this;
            HttpService.post(e.ServerMsg.OCTOPUS_REFRESH, "uid=" + playerModel.uid, function(i) {
                var n = hortor.ScreenManager.getScreen(e.ScreenType.OCTOPUS_SCREEN);
                if (n && n.dropGroupUp(), octopusModel.update(i), octopusModel.showTutorial) {
                    octopusModel.showTutorial = !1;
                    var o = hortor.ScreenManager.getScreen(e.ScreenType.OCTOPUS_SCREEN);
                    o && (o.initPropNum(), o.showBtnAction());
                } else EventCenter.sendEvent(EventConst.refreshOctopusProp);
                EventCenter.sendEvent(EventConst.OctopusRefresh, {
                    useLolly: !0
                }), EventCenter.sendEvent(EventConst.OctopusUp);
                var a = egret.setTimeout(function() {
                    egret.clearTimeout(a), n && (n.showDropView(), n.dropGroupDown());
                }, t, 800);
                t.hide();
            });
        }, i;
    }(e.WindowBase);
    e.OctopusPayConfirmWindow = t, __reflect(t.prototype, "game.OctopusPayConfirmWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.addClick(this.closeBtn, this.closeBtnFunc, this), this.addClick(this.buyBtn, this.buyBtnFunc, this), 
            this.addClick(this.shareBtn, this.shareBtnFunc, this);
        }, i.prototype.onOpen = function() {}, i.prototype.onData = function() {
            this.leftTimeView();
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.leftTimeView = function() {
            this.shareBtn.enabled = octopusModel.shareCount < 2, this.leftTime.text = "免费剩余次数：" + octopusModel.shareCount + "/2", 
            gateModel.isWxgame && (this.buyBtn.visible = gateModel.iosPay, this.shareBtn.x = this.buyBtn.visible ? 361 + this.shareBtn.anchorOffsetX : 219 + this.shareBtn.anchorOffsetX);
        }, i.prototype.closeBtnFunc = function() {
            this.hide();
        }, i.prototype.buyBtnFunc = function() {
            HttpService.get(e.ServerMsg.SHOP_LIST, "uid=" + playerModel.uid, function(t) {
                var i = _.find(t.goods.prop, function(e) {
                    return "puffer" == e.goodsId;
                });
                hortor.WindowManager.showWindow(e.WindowType.WINDOW_SHOP_GOODS, i);
            });
        }, i.prototype.shareBtnFunc = function() {
            var t = this;
            hortor.SystemManager.isWxGame ? gateModel.ShareInterFaceId ? this.toShare() : gateModel.wxCanShowAd ? e.PlatformManager.createVideoAd(e.AdType.adUnitId_octopus, this.getAdReward.bind(this), this.getAdReward.bind(this), function() {}) : hortor.TipManager.alert("未能成功获取到视频", function() {
                t.toShare();
            }) : this.toShare();
        }, i.prototype.toShare = function() {
            e.PlatformManager.share(e.ShareType.octopus);
        }, i.prototype.getAdReward = function() {
            e.OctopusShare.getShareReward();
        }, i;
    }(e.WindowBase);
    e.OctopusPufferPopWindow = t, __reflect(t.prototype, "game.OctopusPufferPopWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.getRewardFunc = function() {
            var t = this, i = this.data;
            HttpService.post(e.ServerMsg.OCTOPUS_REWARD, "uid=" + playerModel.uid + "&rid=" + i.id, function(n) {
                var o = {
                    money: i.money,
                    energy: i.energy,
                    cookie: i.cookie,
                    miniShield: i.miniShield,
                    potion: i.potion,
                    wanted: i.wanted,
                    puffer: i.puffer,
                    lolly: i.lolly
                }, a = {};
                for (var r in o) o[r] > 0 && (a[r] = o[r]);
                hortor.WindowManager.showWindow(e.WindowType.WINDOW_REWARD, a), playerModel.update(n), 
                octopusModel.octopusPlayer = n.octopusPlayer, EventCenter.sendEvent(EventConst.SendOctopus), 
                octopusModel.octopusPlayer.puffer = playerModel.puffer, octopusModel.octopusPlayer.lolly = playerModel.lolly, 
                EventCenter.sendEvent(EventConst.refreshOctopusProp), t.hide();
            });
        }, i;
    }(e.ComRewardPopWindow);
    e.OctopusRewardPopWindow = t, __reflect(t.prototype, "game.OctopusRewardPopWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.addClick(this.chatBtn, this.chatBtnFunc, this);
            var t = activityModel.getActivityInfo(e.ActivityType.Octopus);
            this.clock = hortor.TimerManager.addClock(e.ClockType.OctopusWindow, t.endRemain, 1e3, 1), 
            this.clock.registCallBack(this, function() {}, this.timeFunc.bind(this));
            var i = '<font color="#FFEB42" size="21">海盗公安提醒您：谨防交易诈骗，请不要相信任何售卖碎片、能量等的信息，不要转账或发红包给任何不认识的人。</font>';
            this.marque.marqueue([ i ]), EventCenter.addEventListener(EventConst.SendOctopus, this.refreshList, this), 
            EventCenter.addEventListener(EventConst.refreshOctopusProp, this.initLogPoint, this), 
            this.baseData = new eui.ArrayCollection([]), this.baseList.dataProvider = this.baseData, 
            this.baseList.itemRenderer = e.OctopusRewardsListNode, this.baseData2 = new eui.ArrayCollection([]), 
            this.baseList2.dataProvider = this.baseData2, this.baseList2.itemRenderer = e.OctopusRewardsListNode2, 
            this.panel.helpBtn.visible = !1;
        }, i.prototype.onData = function() {
            this.clock && this.clock.resume(), this.openPanel();
        }, i.prototype.onClose = function() {
            this.clock && this.clock.pause();
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.openPanel = function() {
            var e = octopusModel.rewardConfs;
            this.baseData.replaceAll(e), this.baseList.dataProviderRefreshed();
            for (var t = octopusModel.octopusPlayer.Jewels, i = [], n = 0; n < t.length; n++) 0 != n && i.push(t[n]);
            this.baseData2.replaceAll(i), this.baseList2.dataProviderRefreshed(), this.setHasGotNum(), 
            this.initLogPoint(), this.timeFunc();
        }, i.prototype.initLogPoint = function() {
            this.chatBtnRedPoint.visible = octopusModel.octopusLogRedPoint;
        }, i.prototype.chatBtnFunc = function() {
            hortor.WindowManager.showWindow(e.WindowType.WINDOW_OCTOPUS_NEWS);
        }, i.prototype.refreshList = function() {
            this.setHasGotNum();
            var e = octopusModel.rewardConfs;
            this.baseData.replaceAll(e), this.baseList.dataProviderRefreshed();
            for (var t = octopusModel.octopusPlayer.Jewels, i = [], n = 0; n < t.length; n++) 0 != n && i.push(t[n]);
            this.baseData2.replaceAll(i), this.baseList2.dataProviderRefreshed();
        }, i.prototype.setHasGotNum = function() {
            this.hasGotNum.text = "今日赠送次数:" + octopusModel.octopusPlayer.DonateCount + "/3";
        }, i.prototype.timeFunc = function() {
            var t = activityModel.getActivityInfo(e.ActivityType.Octopus);
            t && (t.beginRemain <= 0 && t.endRemain > 0 ? this.timeLabel.text = "活动剩余时间：" + util.formatTimeCNNew3(t.endRemain) : this.timeLabel.text = "活动已结束");
        }, i;
    }(e.WindowBase);
    e.OctopusRewardWindow = t, __reflect(t.prototype, "game.OctopusRewardWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onData = function() {
            this.desc.text = "确定要赠送碎片吗？", this.pw = _.random(1e3, 9999), this.scretLabel.text = "" + this.pw;
        }, i.prototype.sendFunc = function() {
            var t = this;
            HttpService.post(e.ServerMsg.OCTOPUS_DONATE, "uid=" + playerModel.uid + "&fid=" + octopusModel.sendData.uid + "&idx=" + octopusModel.sendId + "&password=" + this.pw, function(i) {
                octopusModel.octopusPlayer = i.octopusPlayer, EventCenter.sendEvent(EventConst.SendOctopus), 
                EventCenter.sendEvent(EventConst.ReportGive), hortor.TipManager.bubble("赠送成功"), 
                t.hide(), hortor.WindowManager.hideWindow(e.WindowType.WINDOW_OCTOPUS_SENDFRIEND);
            });
        }, i;
    }(e.ComSendPropWindow);
    e.OctopusSendPropWindow = t, __reflect(t.prototype, "game.OctopusSendPropWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onShareSuc = function(e) {
            t.prototype.onShareSuc.call(this, e), i.getShareReward(e);
        }, i.getShareReward = function(t) {
            void 0 === t && (t = null), HttpService.post(e.ServerMsg.OCTOPUS_SHARE_REWARD, "uid=" + playerModel.uid, function(t) {
                octopusModel.shareCount++, octopusModel.octopusPlayer.puffer = t.puffer, hortor.WindowManager.hideWindow(e.WindowType.WINDOW_OCTOPUS_PUFFERPOP), 
                hortor.WindowManager.showWindow(e.WindowType.WINDOW_REWARD, t.reward), EventCenter.sendEvent(EventConst.refreshOctopusProp), 
                gateModel.updateGate(e.ActivityType.Octopus);
            });
        }, i;
    }(e.GameShare);
    e.OctopusShare = t, __reflect(t.prototype, "game.OctopusShare");
}(game || (game = {}));

var game;

!function(e) {
    var t = function() {
        function t(e, t, i, n, o) {
            this.startPos = {
                x: 0,
                y: 0
            }, this.middlePos = {
                x: 0,
                y: 0
            }, this.endPos = {
                x: 0,
                y: 0
            }, this.startPos = t, this.middlePos = i, this.endPos = n, this.parentNode = e, 
            this.wsData = o;
        }
        return t.prototype.init = function() {
            var e = this;
            this._bombImg = new egret.Bitmap(), this.parentNode.addChild(this._bombImg), this._bombImg.width = 52, 
            this._bombImg.height = 48, this._bombImg.anchorOffsetX = 26, this._bombImg.anchorOffsetY = 24, 
            this._bombImg.x = this.startPos.x, this._bombImg.y = this.startPos.y, RES.getResAsync("octopus_bomb3", function(t) {
                e._bombImg.texture = t, e.playAction();
            }, this);
        }, t.prototype.playAction = function() {
            var e = this, t = egret.Tween.get(this);
            t.to({
                factor: 1
            }, 350).call(function() {
                EventCenter.sendEvent(EventConst.OctopusRefreshGift);
                for (var t = !1, i = octopusModel.octopusInfo.boxes, n = 1; 9 > n; n++) if (i[n] > 0) {
                    t = !0;
                    break;
                }
                e.parentNode.octBoss.attackedState(1), e.parentNode.playWaveEffect(), e.playBoomEffect(), 
                e._bombImg.visible = !1;
                var o = new LightAction(e.parentNode, e.startPos, e.middlePos, e.endPos, e.wsData);
                o.init(), t || 0 != octopusModel.octopusInfo.openingRemain || (e.parentNode.dropGroupUp(), 
                octopusModel.octopusInfo.openingRemain = 36e3, EventCenter.sendEvent(EventConst.OctopusDown)), 
                e.parentNode.removeChild(e._bombImg);
            });
        }, Object.defineProperty(t.prototype, "factor", {
            get: function() {
                return 0;
            },
            set: function(e) {
                this._bombImg && (this._bombImg.x = (1 - e) * (1 - e) * this.startPos.x + 2 * e * (1 - e) * this.middlePos.x + e * e * this.endPos.x, 
                this._bombImg.y = (1 - e) * (1 - e) * this.startPos.y + 2 * e * (1 - e) * this.middlePos.y + e * e * this.endPos.y);
            },
            enumerable: !0,
            configurable: !0
        }), t.prototype.playBoomEffect = function() {
            this._boomboom ? this.playBoom() : (this._boomboom = new e.MoviePlayer("octopus_boom"), 
            this.parentNode.addChild(this._boomboom), this.playBoom());
        }, t.prototype.playBoom = function() {
            this._boomboom.x = this.endPos.x, this._boomboom.y = this.endPos.y, this._boomboom.scaleX = this._boomboom.scaleY = 2, 
            this._boomboom.play(1);
        }, t;
    }();
    e.BombAction = t, __reflect(t.prototype, "game.BombAction");
}(game || (game = {}));

var LightAction = function() {
    function e(e, t, i, n, o) {
        this.startPos = {
            x: 0,
            y: 0
        }, this.middlePos = {
            x: 0,
            y: 0
        }, this.endPos = {
            x: 0,
            y: 0
        }, this.startPos = t, this.middlePos = i, this.endPos = n, this.parentNode = e, 
        this.wsData = o, this._group = new eui.Group(), this.parentNode.addChild(this._group), 
        this._light = new egret.Bitmap(), this._group.addChild(this._light), this._reward = new eui.Image(), 
        this._group.addChild(this._reward);
    }
    return e.prototype.init = function() {
        var e = this;
        this._group.width = 90, this._group.height = 90, this._group.anchorOffsetX = 45, 
        this._group.anchorOffsetY = 45, this._group.x = this.endPos.x, this._group.y = this.endPos.y, 
        this._group.scaleX = this._group.scaleY = .1, this._light.width = 467, this._light.height = 479, 
        this._light.anchorOffsetX = 233.5, this._light.anchorOffsetY = 239.5, this._light.scaleX = this._light.scaleY = .3, 
        this._light.x = 48, this._light.y = 50, RES.getResAsync("jigsaw_light_png", function(t) {
            e._light.texture = t, egret.Tween.get(e._light, {
                loop: !0
            }).to({
                rotation: 360
            }, 2500);
        }, this);
        var t = this.wsData.goodsId, i = "";
        if (-1 == t.indexOf("jewel")) i = game.ItemManager.getItemInfo(t).icon; else {
            var n = t.substr(t.length - 1, 1), o = parseInt(n) - 1;
            i = "octopus_gift_" + o + "_png";
        }
        this._reward.width = 220, this._reward.height = 220, this._reward.anchorOffsetX = 26, 
        this._reward.anchorOffsetY = 24, this._reward.scaleX = this._reward.scaleY = .3, 
        this._reward.x = 14, this._reward.y = 16, this._reward.source = i;
        var a = egret.Tween.get(this._group);
        a.to({
            scaleX: 1,
            scaleY: 1
        }, 300).wait(1e3).call(function() {
            e.playAction();
        });
    }, e.prototype.playAction = function() {
        var e = this, t = egret.Tween.get(this);
        t.to({
            factor: 1
        }, 1e3).call(function() {
            e._group.visible = !1, e.parentNode.removeChild(e._group);
        });
    }, Object.defineProperty(e.prototype, "factor", {
        get: function() {
            return 0;
        },
        set: function(e) {
            this._group && (this._group.x = (1 - e) * (1 - e) * this.endPos.x + 2 * e * (1 - e) * this.middlePos.x + e * e * this.startPos.x, 
            this._group.y = (1 - e) * (1 - e) * this.endPos.y + 2 * e * (1 - e) * this.middlePos.y + e * e * this.startPos.y);
        },
        enumerable: !0,
        configurable: !0
    }), e;
}();

__reflect(LightAction.prototype, "LightAction");

var game;

!function(e) {
    var t = function() {
        function t(e) {
            this._endPosX = 321, this._endPosY = 750, this.bombGroupMinY = 750, this.bombGroupMaxY = 960, 
            this.bombGroupYK = 1, this.bombGroupMinX = 187, this.bombGroupMaxX = 455, this.bombGroupXK = 1, 
            this.bombGroupX = 321, this.bombGroupY = 750, this.targetY = 0, this.targetX = 0, 
            this.isTouching = !1, this._onChangeTime = 0, this._time0 = 380, this._time1 = 380, 
            this._time2 = 450, this._actionK = 0, this._actionB = 0, this._mark = 0, this.isMoving = !1, 
            this._pullSound = !1, this.isInit = !1, this.screen = e;
        }
        return t.prototype.onViewRegister = function() {
            this.screen.addEventListener(egret.TouchEvent.TOUCH_BEGIN, this.bombBeginFunc, this), 
            this.screen.addEventListener(egret.TouchEvent.TOUCH_MOVE, this.bombMoveFunc, this), 
            this.screen.addEventListener(egret.TouchEvent.TOUCH_END, this.bombEndFunc, this), 
            this.screen.addEventListener(egret.TouchEvent.TOUCH_CANCEL, this.bombEndFunc, this);
        }, t.prototype.onInit = function() {
            this.isInit || (this.isInit = !0, this.bombGroupYK = 611 / (this.bombGroupMaxY - this.bombGroupMinY), 
            this.bombGroupXK = 772 / (this.bombGroupMaxX - this.bombGroupMinX), this.leftLine = new egret.Shape(), 
            this.screen.boatGroup.addChild(this.leftLine), this.screen.boatGroup.swapChildren(this.screen.bombGroup, this.leftLine), 
            this.rightLine = new egret.Shape(), this.screen.boatGroup.addChild(this.rightLine), 
            this.screen.boatGroup.swapChildren(this.screen.bombGroup, this.rightLine), this.drawLine(), 
            this._bombTailImg = new egret.Bitmap(), this.screen.boatGroup.addChild(this._bombTailImg), 
            this._bombTailImg.visible = !1, this._bombImg = new egret.Bitmap(), this.screen.boatGroup.addChild(this._bombImg), 
            this._bombImg.visible = !1, this.checkBombVisible());
        }, t.prototype.checkBombVisible = function() {
            var e = octopusModel.octopusPlayer;
            this.screen.bomb.visible = e.puffer > 0;
        }, t.prototype.bombBeginFunc = function(t) {
            if (!t.target.name || "touchImg" != t.target.name) return void (this.isTouching = !1);
            var i = octopusModel.octopusPlayer;
            return i.puffer <= 0 ? (this.isTouching = !1, void hortor.WindowManager.showWindow(e.WindowType.WINDOW_OCTOPUS_PUFFERPOP)) : void (octopusModel.showTutorial && octopusModel.checkOctopusGuide() >= 3 || (this.isTouching = !0, 
            this._endPosY = this.screen.bombGroup.y, this._endPosX = this.screen.bombGroup.x, 
            octopusModel.showTutorial && this.screen.finger && this.screen.setFingerVisible(!1)));
        }, t.prototype.bombMoveFunc = function(t) {
            if (this.isTouching) {
                var i = octopusModel.octopusPlayer;
                return i.puffer <= 0 ? (this.isTouching = !1, void this.initBombView()) : void (octopusModel.showTutorial && octopusModel.checkOctopusGuide() >= 3 || (this._pullSound || (soundModel.playSound(e.SoundType.SOUND_OCTOPUS_PULL), 
                this._pullSound = !0), this.screen.bombGroup.y = t.stageY - .5 * octopusModel.stageOffHeight, 
                this.screen.bombGroup.y = this.screen.bombGroup.y > this.bombGroupMaxY ? this.bombGroupMaxY : this.screen.bombGroup.y, 
                this.screen.bombGroup.y = this.screen.bombGroup.y <= this.bombGroupMinY ? this.bombGroupMinY : this.screen.bombGroup.y, 
                this._endPosY = this.screen.bombGroup.y, this.screen.bombGroup.x = t.stageX, this.screen.bombGroup.x = this.screen.bombGroup.x > this.bombGroupMaxX ? this.bombGroupMaxX : this.screen.bombGroup.x, 
                this.screen.bombGroup.x = this.screen.bombGroup.x < this.bombGroupMinX ? this.bombGroupMinX : this.screen.bombGroup.x, 
                this._endPosX = this.screen.bombGroup.x, this.drawLine()));
            }
        }, t.prototype.bombEndFunc = function(t) {
            if (this.isTouching && !(octopusModel.showTutorial && octopusModel.checkOctopusGuide() >= 3)) {
                var i = octopusModel.octopusInfo;
                this._endPosX = this.screen.bombGroup.x;
                var n = Math.floor(750 - (this._endPosY - this.bombGroupMinY) * this.bombGroupYK), o = Math.floor(705 - (this._endPosX - this.bombGroupMinX) * this.bombGroupXK);
                this.targetY = n, this.targetX = o;
                var a = octopusModel.octopusPlayer;
                if ((a.puffer <= 0 || octopusModel.octopusInfo.openingRemain > 0) && (this.isTouching = !1, 
                this._pullSound = !1), a.puffer <= 0) return void this.initBombView();
                if (this._endPosY - this.bombGroupMinY < 45 || this.isMoving) return this._pullSound = !1, 
                void this.initBombView();
                if (octopusModel.octopusInfo.openingRemain > 0) return this._actionK = (this.targetY - this.bombGroupY) / (this.targetX - this.bombGroupX), 
                this._actionB = this.targetY - this._actionK * this.targetX, hortor.TipManager.bubble("章鱼睡觉中,去其他好友那看看吧!"), 
                void this.playSlingshotBackEffect();
                var r = 0;
                if (i.uid != playerModel.uid) {
                    for (var s = 1; 9 > s; s++) i.boxes[s] > 0 && r++;
                    var l = 2 - i.ownerGotGoods;
                    if (l > 0 && l >= r) return this.isTouching = !1, this._pullSound = !1, this._actionK = (this.targetY - this.bombGroupY) / (this.targetX - this.bombGroupX), 
                    this._actionB = this.targetY - this._actionK * this.targetX, hortor.TipManager.bubble("不要太过分噢！给主人留点吧!"), 
                    void this.playSlingshotBackEffect();
                }
                soundModel.playSound(e.SoundType.SOUND_OCTOPUS_SHOOT), this._mark = 0;
                for (var d = i.boxes, u = n + .5 * octopusModel.stageOffHeight, s = 0; 8 > s; s++) if (d[s + 1] > 0 && this.screen["hitImg" + s].hitTestPoint(o, u)) {
                    this._mark = s + 1;
                    break;
                }
                this._actionK = (this.targetY - this._endPosY) / (this.targetX - this._endPosX), 
                this._actionB = this.targetY - this._actionK * this.targetX, this.isTouching = !1, 
                this._pullSound = !1, this.bombAction();
            }
        }, t.prototype.bombAction = function() {
            var t = this, i = octopusModel.octopusInfo;
            this.isMoving = !0;
            var n = this.screen.bombGroup.rotation;
            this._bombImg.visible = !0, this._bombImg.width = 104, this._bombImg.height = 96, 
            this._bombImg.anchorOffsetX = 52, this._bombImg.anchorOffsetY = 48, this._bombImg.x = this.screen.bombGroup.x - 2, 
            this._bombImg.y = this.screen.bombGroup.y - 22, this._bombImg.rotation = n, RES.getResAsync("octopus_bomb1", function(e) {
                t._bombImg.texture = e;
            }, this), this._bombTailImg.visible = !0, this._bombTailImg.width = 90, this._bombTailImg.height = 255, 
            this._bombTailImg.anchorOffsetX = 45, this._bombTailImg.anchorOffsetY = 0, this._bombTailImg.x = this._bombImg.x, 
            this._bombTailImg.y = this._bombImg.y, this._bombTailImg.rotation = n, RES.getResAsync("octopus_tuowei", function(e) {
                t._bombTailImg.texture = e;
            }, this), this.screen.bomb.visible = !1;
            var o = this.targetX, a = this.targetY;
            a = Math.floor(this.targetY - (140 / 600 * (this._endPosY - this.bombGroupMinY) * this.bombGroupYK + 45)), 
            o = Math.floor((a - this._actionB) / this._actionK), this._bombImg.scaleX = this._bombImg.scaleY = 1;
            var r = this._time1, s = .4, l = .7;
            0 != this._mark || this.checkHitBoss() || (s = .01, r = this._time2);
            var d = egret.Tween.get(this._bombImg);
            d.to({
                x: o,
                y: a,
                scaleX: l,
                scaleY: l
            }, this._time0, egret.Ease.sineOut).wait(30).to({
                x: this.targetX,
                y: this.targetY,
                scaleX: s,
                scaleY: s
            }, r, egret.Ease.cubicIn).call(function() {
                (t.checkHitBoss() || 0 != t._mark) && (t.playBoomEffect(), t.playHitEffectBoss(), 
                t.screen.octBoss.attackedState(1), t.screen.playWaveEffect()), 0 != t._mark || t.checkHitBoss() || t.playStarEffect(), 
                t._bombImg.visible = !1, t.isMoving = !1, !octopusModel.showTutorial || octopusModel.showTutorial && 0 != t._mark ? HttpService.post(e.ServerMsg.OCTOPUS_OPEN, "uid=" + playerModel.uid + "&fid=" + i.uid + "&idx=" + t._mark, function(i) {
                    if (playerModel.update(i), EventCenter.sendEvent(EventConst.ReportOctopusOpen), 
                    i.octopusInfo && i.octopusInfo.openingRemain > 0 && t.screen.dropGroupUp(), octopusModel.update(i), 
                    octopusModel.showTutorial || t.screen.initPropNum(), octopusModel.octopusInfo.openingRemain > 0 && EventCenter.sendEvent(EventConst.OctopusDown), 
                    "" != i.rewardType) {
                        var n = {};
                        n[i.rewardType] = i.rewardValue, octopusModel.gainRewardList.push(n);
                    }
                    if ("" != i.rewardType) if (t.playArmature(), t.screen.showGiftAndBoss(), "money" == i.rewardType ? soundModel.playSound(e.SoundType.SOUND_WHEEL_GOLD_MED) : soundModel.playSound(e.SoundType.SOUND_OCTOPUS_REWARD), 
                    octopusModel.gainRewardList.length > 0 && "money" != i.rewardType) var o = egret.setTimeout(function() {
                        egret.clearTimeout(o), hortor.WindowManager.showWindow(e.WindowType.WINDOW_OCTOPUS_GAINREWARD, {
                            x: t.targetX,
                            y: t.targetY
                        });
                    }, t, 100); else if (octopusModel.gainRewardList.length > 0 && "money" == i.rewardType) {
                        t.screen.isPlayingGoldEffect = !0;
                        var a = egret.setTimeout(function() {
                            egret.clearTimeout(a), t.screen.playGoldEffect(30, t.targetX, t.targetY);
                        }, t, 100);
                    }
                    t.checkBombVisible();
                }, function(e) {
                    t.checkBombVisible(), t.initBombView();
                }, t) : t.checkBombVisible();
            }), this._bombTailImg.scaleY = .3, this._onChangeTime = egret.getTimer();
            var u = egret.Tween.get(this._bombTailImg, {
                onChange: this.onChangeFunc.bind(this)
            });
            u.to({
                x: o,
                y: a,
                scaleX: l
            }, this._time0, egret.Ease.sineOut).wait(30).to({
                x: this.targetX,
                y: this.targetY,
                scaleX: s
            }, r, egret.Ease.cubicIn).call(function() {
                t._onChangeTime = 0, t._bombTailImg.visible = !1;
            }), this.playSlingshotBackEffect();
        }, t.prototype.onChangeFunc = function() {
            var e = -.3, t = egret.getTimer() - this._onChangeTime;
            t < this._time0 / 2 ? this._bombTailImg.scaleY = t / (this._time0 / 2) * .7 + .3 : t < this._time0 ? this._bombTailImg.scaleY = 1 - (t - this._time0 / 2) / (this._time0 / 2) * .7 : t > this._time0 + 30 && (this._bombTailImg.scaleY = e * ((t - (this._time0 + 30)) / (this._time1 / 2)) < e ? e : e * ((t - (this._time0 + 30)) / (this._time1 / 2)));
        }, t.prototype.initBombView = function() {
            var e = this.screen;
            this.screen.bombGroup.x = this.bombGroupX, this.screen.bombGroup.y = this.bombGroupY, 
            this.drawLine(), octopusModel.showTutorial && 0 == this._mark && this.screen.finger && e.setFingerVisible(!0);
        }, t.prototype.drawLine = function() {
            var e = this.screen.bombGroup.y, t = this.screen.bombGroup.y, i = this.screen.bombGroup.x - 60, n = this.screen.bombGroup.x + 60, o = this.screen.bombGroup.y - this.bombGroupY, a = this.screen.bombGroup.x - this.bombGroupX, r = 0 != o ? 360 * Math.atan(a / o) / (2 * Math.PI) : 0;
            0 == o && a > 40 ? r = 90 : 0 == o && -40 > a && (r = -90), Math.abs(a) <= 40 && 30 > o && (r = 0), 
            0 == o && 134 == Math.abs(a) && (r = 90 * (a / 134)), this.screen.bombGroup.rotation = Math.floor(-1 * r);
            var s = Math.abs(Math.floor(50 * r / 90)), l = Math.abs(Math.floor(70 * r / 90));
            0 >= r && -30 >= a ? (i += l, e -= s, n -= l, t += s) : r >= 0 && a >= 30 && (i += l, 
            e += s, n -= l, t -= s);
            var d = 209, u = 720, h = Math.floor((this.screen.bombGroup.y - this.bombGroupY) / 30);
            this.screen.slingshotImg.height = d - h, u += h, this.leftLine.graphics.clear(), 
            this.leftLine.graphics.lineStyle(7, 16766845), this.leftLine.graphics.moveTo(226, u), 
            this.leftLine.graphics.lineTo(i, e), this.leftLine.graphics.endFill(), this.rightLine.graphics.clear(), 
            this.rightLine.graphics.lineStyle(7, 16766845), this.rightLine.graphics.moveTo(413, u), 
            this.rightLine.graphics.lineTo(n, t), this.rightLine.graphics.endFill();
        }, t.prototype.playSlingshotBackEffect = function() {
            var e = this, t = this.screen, i = this.bombGroupX, n = this.bombGroupY;
            n = this.bombGroupY - 35, i = Math.floor((n - this._actionB) / this._actionK);
            var o = this.bombGroupY + 20, a = Math.floor((o - this._actionB) / this._actionK), r = this.bombGroupY - 15, s = Math.floor((r - this._actionB) / this._actionK), l = this.bombGroupY + 10, d = Math.floor((l - this._actionB) / this._actionK), u = this.bombGroupY - 5, h = Math.floor((u - this._actionB) / this._actionK), c = this.bombGroupY + 3, p = Math.floor((c - this._actionB) / this._actionK), g = this.bombGroupY - 1, m = Math.floor((g - this._actionB) / this._actionK), f = egret.Tween.get(this.screen.bombGroup, {
                onChange: this.slingshotBackChangeFunc.bind(this)
            });
            f.to({
                x: i,
                y: n
            }, 120, egret.Ease.sineOut).to({
                x: a,
                y: o
            }, 120, egret.Ease.cubicIn).to({
                x: s,
                y: r
            }, 120, egret.Ease.sineOut).to({
                x: d,
                y: l
            }, 120, egret.Ease.cubicIn).to({
                x: h,
                y: u
            }, 100, egret.Ease.sineOut).to({
                x: p,
                y: c
            }, 100, egret.Ease.cubicIn).to({
                x: m,
                y: g
            }, 100, egret.Ease.sineOut).to({
                x: this.bombGroupX,
                y: this.bombGroupY
            }, 50, egret.Ease.cubicIn).call(function() {
                octopusModel.showTutorial && 0 == e._mark && e.screen.finger && t.setFingerVisible(!0);
            });
        }, t.prototype.slingshotBackChangeFunc = function() {
            this.drawLine();
        }, t.prototype.playBoomEffect = function() {
            soundModel.playSound(e.SoundType.SOUND_OCTOPUS_HIT), this._boomboom ? this.playBoom() : (this._boomboom = new e.MoviePlayer("octopus_boom"), 
            this.screen.startGroup.addChild(this._boomboom), this.playBoom());
        }, t.prototype.playBoom = function() {
            this._boomboom.x = this.targetX, this._boomboom.y = this.targetY, this._boomboom.scaleX = this._boomboom.scaleY = 2, 
            this._boomboom.play(1);
        }, t.prototype.playStarEffect = function() {
            this._star ? this.playStar() : (this._star = new e.MoviePlayer("oct_start"), this.screen.startGroup.addChild(this._star));
        }, t.prototype.playStar = function() {
            this._star.x = this.targetX, this._star.y = this.targetY, this._star.play(1);
        }, t.prototype.playArmature = function() {
            this.caipenAr ? this.playCaiPen() : (this.caipenAr = new e.ArmaturePlayer("caipen"), 
            this.screen.startGroup.addChild(this.caipenAr), this.playCaiPen());
        }, t.prototype.playCaiPen = function() {
            this.caipenAr.x = this.targetX, this.caipenAr.y = this.targetY, this.caipenAr.play("boom", 1);
        }, t.prototype.checkHitBoss = function() {
            var e = !1, t = this.targetY + .5 * octopusModel.stageOffHeight;
            if (e = this.screen.bossImg.hitTestPoint(this.targetX, t), this.screen.octBoss.checkHit(this.targetX, t)) e = !0; else for (var i = 0; 8 > i; i++) if (this.screen["claw" + i].hitTestPoint(this.targetX, t)) {
                e = !0;
                break;
            }
            return e;
        }, t.prototype.playHitEffectBoss = function() {
            if (this && this.screen) {
                var e = 50, t = this.screen.monsterGroup.x, i = this.screen.monsterGroup.y, n = egret.Tween.get(this.screen.monsterGroup);
                n.to({
                    x: t - 2,
                    y: i - 4
                }, e, egret.Ease.sineOut).to({
                    x: t,
                    y: i + 2
                }, e, egret.Ease.cubicIn).to({
                    x: t + 2,
                    y: i - 2
                }, e, egret.Ease.sineOut).to({
                    x: t,
                    y: i + 2
                }, e, egret.Ease.cubicIn).to({
                    x: t - 2,
                    y: i - 4
                }, e, egret.Ease.sineOut).to({
                    x: t,
                    y: i
                }, e, egret.Ease.cubicIn);
            }
        }, t;
    }();
    e.OctBombLogic = t, __reflect(t.prototype, "game.OctBombLogic");
}(game || (game = {}));

var game;

!function(e) {
    var t = function() {
        function t(e) {
            this.isInit = !1, this.screen = e;
        }
        return t.prototype.onInit = function(t) {
            this.isInit || (this.isInit = !0, this.boss = new e.ArmaturePlayer("zhangyu"), t.addChildAt(this.boss, 9), 
            this.boss.x = t.width / 2, this.boss.y = 540);
        }, t.prototype.openPanel = function() {
            octopusModel.octopusInfo.openingRemain > 0 ? this.sleepState(0) : this.waitState(0);
        }, t.prototype.sleepState = function(t) {
            var i = t ? t : 0;
            soundModel.playSound(e.SoundType.SOUND_OCTOPUS_SNORE, 999), this.boss.play("sleep", i), 
            this.isActive = !1;
        }, t.prototype.waitState = function(e) {
            var t = e ? e : 0;
            this.boss.play("attack", t), this.isActive = !0;
        }, t.prototype.attackedState = function(e) {
            var t = e ? e : 1;
            this.boss.play("attack2", t, this.completeHandler, this);
        }, t.prototype.completeHandler = function(e) {
            "attack2" == e.animationName && this.waitState(0);
        }, t.prototype.checkHit = function(e, t) {
            return this.boss.hitTestPoint(e, t);
        }, t;
    }();
    e.OctBoss = t, __reflect(t.prototype, "game.OctBoss");
}(game || (game = {}));

var game;

!function(e) {
    var t = function() {
        function e(e) {
            this.screen = e;
        }
        return e.prototype.onViewRegister = function() {
            EventCenter.addEventListener(EventConst.OctopusRefreshGift, this.showGiftAndClawView, this);
        }, e.prototype.onInit = function() {
            if (this.onViewRegister(), 0 == this.screen.posOffY.length) for (var e = 0; 8 > e; e++) this.screen.posOffY.push(this.screen["claw" + e].y - this.screen["gift" + e].y);
        }, e.prototype.openPanel = function() {
            this.showGiftAndClawView(), this.initClawAction(), this.initGiftAction();
        }, e.prototype.showGiftAndClawView = function() {
            for (var e = octopusModel.octopusInfo, t = e.boxes, i = 0; 8 > i; i++) {
                var n = i + 1;
                this.screen["gift" + i].visible = t[n] > 0 && e.openingRemain <= 0, t[n] > 0 && (this.screen["gift" + i].source = "octopus_gift" + t[n]), 
                this.showClawStatus(i);
            }
        }, e.prototype.showClawStatus = function(e) {
            var t = octopusModel.octopusInfo.boxes, i = "octopus_claw_0_";
            2 == e || 5 == e ? i = "octopus_claw_1_" : (3 == e || 4 == e) && (i = "octopus_claw_0_0");
            var n = t[e + 1] > 0 ? 0 : 1;
            this.screen["claw" + e].source = i + n;
        }, e.prototype.initClawAction = function() {
            for (var e = 1, t = 0; 8 > t; t++) {
                e = 3 == t || 5 == t || 6 == t || 7 == t ? -1 : 1, egret.Tween.removeTweens(this.screen["claw" + t]);
                var i = egret.Tween.get(this.screen["claw" + t], {
                    loop: !0,
                    onChange: this.giftOnChange.bind(this)
                });
                i.to({
                    scaleY: 1.05,
                    scaleX: 1.05 * e
                }, _.random(1600, 1800)).to({
                    scaleY: .95,
                    scaleX: .95 * e
                }, _.random(1600, 1800)).to({
                    scaleY: 1,
                    scaleX: 1 * e
                }, _.random(1600, 1800));
            }
        }, e.prototype.giftOnChange = function() {
            if (this && this.screen) for (var e = 0; 8 > e; e++) this.screen && this.screen["gift" + e] && (this.screen["gift" + e].y = this.screen["claw" + e].y + this.screen["claw" + e].height * (1 - this.screen["claw" + e].scaleY) - this.screen.posOffY[e], 
            this.screen["hitImg" + e].y = this.screen["gift" + e].y);
        }, e.prototype.initGiftAction = function() {
            for (var e = _.random(500, 700), t = 0; 8 > t; t++) {
                egret.Tween.removeTweens(this.screen["gift" + t]), this.screen["gift" + t].rotation = 0;
                var i = egret.Tween.get(this.screen["gift" + t], {
                    loop: !0
                });
                i.to({
                    rotation: 3
                }, e).to({
                    rotation: 0
                }, e).to({
                    rotation: -3
                }, e).to({
                    rotation: 0
                }, e).to({
                    rotation: 3
                }, e).to({
                    rotation: 0
                }, e).to({
                    rotation: -3
                }, e).to({
                    rotation: 0
                }, e);
            }
        }, e;
    }();
    e.OctGift = t, __reflect(t.prototype, "game.OctGift");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.btnFunc = function() {
            "send" == this.data.btnType ? (octopusModel.sendData = this.data, hortor.WindowManager.showWindow(e.WindowType.WINDOW_OCTOPUS_SENDPROP)) : hortor.WindowManager.showWindow(e.WindowType.WINDOW_EXCHANGE, this.data);
        }, i;
    }(e.ComFriendItem);
    e.OctopusFriendItem = t, __reflect(t.prototype, "game.OctopusFriendItem");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.skinPath = "octopus/node/OctopusFriendNodeSkin", e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.addClick(this.goBtn, this.goBtnFunc, this), this.clock ? this.clock.resume() : (this.clock = hortor.TimerManager.addClock(e.ClockType.OctopusFriend, 36e3, 1e3, 1), 
            this.clock.registCallBack(this, function() {}, this.timerFunc));
        }, i.prototype.onClose = function() {
            this.clock && this.clock.pause();
        }, i.prototype.onData = function() {
            var t = this.data;
            this.avatarInfo.data = {
                gender: t.ownerGender,
                headImg: t.ownerHeadImg,
                crowns: 0,
                showStar: !1
            }, this.nameLabel.text = "" + t.ownerName, this.nameLabel.textColor = 1 == t.ownerGender ? Const.manNameColor : Const.womanNameColor, 
            this.timeLabel.text = "章鱼睡觉中：" + e.ComFunc.formatTime(t.openingRemain - octopusModel.octopusTimer, !0), 
            this.timeLabel.visible = t.openingRemain > 0, this.giftIcon.source = "octopus_box_" + t.color;
            for (var i = 0, n = 0; n < t.boxes.length; n++) 0 != n && 0 != t.boxes[n] && i++;
            t.openingRemain < 1 && i > 2 - t.ownerGotGoods ? this.giftIcon.visible = !0 : this.giftIcon.visible = !1;
        }, i.prototype.goBtnFunc = function() {
            var t = this;
            HttpService.post(e.ServerMsg.OCTOPUS_ENTER, "uid=" + playerModel.uid + "&fid=" + this.data.uid, function(i) {
                EventCenter.sendEvent(EventConst.OctopusPlayerHide), e.ScreenLoading.instance.loadingState = !0;
                var n = hortor.ScreenManager.getScreen(e.ScreenType.OCTOPUS_SCREEN);
                n && n.dropGroupUp();
                var o = egret.setTimeout(function() {
                    octopusModel.update(i), egret.clearTimeout(o), EventCenter.sendEvent(EventConst.OctopusRefresh), 
                    e.ScreenLoading.instance.loadingState = !1;
                }, t, 700), a = egret.setTimeout(function() {
                    egret.clearTimeout(a), n && n.playPlayerGroupShow();
                }, t, 1e3), r = egret.setTimeout(function() {
                    egret.clearTimeout(r), n && n.dropGroupDown();
                }, t, 1600);
                hortor.WindowManager.hideWindow(e.WindowType.WINDOW_OCTOPUS_FRIEND);
            });
        }, i.prototype.timerFunc = function() {
            var t = this.data.openingRemain - octopusModel.octopusTimer;
            this.timeLabel.text = "章鱼睡觉中：" + e.ComFunc.formatTime(t, !0), 0 == t && (this.data.openingRemain = 0, 
            this.onData());
        }, i;
    }(e.ItemRenderBase);
    e.OctopusFriendsListNode = t, __reflect(t.prototype, "game.OctopusFriendsListNode");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.nameColor = 16748828, e.descColor = 8816262, e.targetColor = 16748828, 
            e.skinPath = "common/ComMesItemSkin", e;
        }
        return __extends(i, t), i.prototype.onData = function() {
            var t = this.data;
            this.avatarInfo.data = {
                gender: 0,
                headImg: t.friendHeadImg,
                crowns: 0,
                showStar: !1
            }, this.timeLabel.text = e.ComFunc.showTimeBeforeNew(t.createAt || moment().unix()), 
            this.desc.textFlow = [], this.desc.textFlow.push({
                text: this.data.friendName,
                style: {
                    textColor: this.nameColor
                }
            }), this.desc.textFlow.push({
                text: "从你的章鱼礼盒中获得了",
                style: {
                    textColor: this.descColor
                }
            }), this.desc.textFlow.push({
                text: this.initReward(),
                style: {
                    textColor: this.targetColor
                }
            });
        }, i.prototype.initReward = function() {
            var t = "";
            if (-1 == this.data.rewardType.indexOf("jewel")) switch (this.data.rewardType) {
              case "potion":
                t = "经验药水x" + this.data.rewardValue;
                break;

              case "cookie":
                t = "饼干x" + this.data.rewardValue;
                break;

              case "shipwreck":
                t = "友尽卷轴x" + this.data.rewardValue;
                break;

              case "miniShield":
                t = "迷你盾x" + this.data.rewardValue;
                break;

              case "energy":
                t = "能量x" + this.data.rewardValue;
                break;

              case "lolly":
                t = "棒棒糖x" + this.data.rewardValue;
                break;

              case "money":
                t = "金币x" + e.ComFunc.formatNumber(this.data.rewardValue);
                break;

              case "cash":
                t = "红包x" + (this.data.rewardValue / 100).toFixed(2) + "元";
            } else {
                var i = this.data.rewardType.substr(this.data.rewardType.length - 1, 1);
                t = Const.octopusNames[parseInt(i)];
            }
            return t;
        }, i;
    }(e.ItemRenderBase);
    e.OctopusMesNode = t, __reflect(t.prototype, "game.OctopusMesNode");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onData = function() {
            var t = this.data;
            this.avatarInfo.data = {
                gender: t.friendGender,
                headImg: t.friendHeadImg || "",
                crowns: 0,
                showStar: !1
            }, this.nameLabel.text = "" + t.friendName, this.nameLabel.textColor = 1 == t.friendGender ? Const.manNameColor : Const.womanNameColor, 
            this.timeLabel.text = e.ComFunc.toTodayTime(this.data.createAt);
            var i = this.desc;
            i.textFlow = [], t.fromFriend ? (this.getBtn.visible = !t.gotJewel, this.hasGet.visible = t.gotJewel, 
            this.password.visible = !1, this.sendIcon.visible = !1, i.textFlow.push({
                text: "赠送你一块",
                style: {
                    textColor: this.descColor
                }
            }), i.textFlow.push({
                text: Const.octopusNames[t.jewelId] || "",
                style: {
                    textColor: this.targetColor
                }
            })) : (this.getBtn.visible = !1, this.hasGet.visible = !1, this.password.visible = !0, 
            this.sendIcon.visible = !0, this.password.text = "(密码:" + t.password + ")", i.textFlow.push({
                text: "收到你送的一个",
                style: {
                    textColor: this.descColor
                }
            }), i.textFlow.push({
                text: Const.octopusNames[t.jewelId] || "",
                style: {
                    textColor: this.targetColor
                }
            })), t.gotAt > 0 && (this.password.visible = !0, this.password.text = moment(1e3 * t.gotAt).format("MM-DD hh:mm") + "领取");
        }, i.prototype.getBtnFunc = function() {
            this.data.gotJewel || hortor.WindowManager.showWindow(e.WindowType.WINDOW_OCTOPUS_GETPROP, this.data);
        }, i;
    }(e.ComNewsItem);
    e.OctopusNewsNode = t, __reflect(t.prototype, "game.OctopusNewsNode");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.isAll = !0, e.skinPath = "octopus/node/OctopusRewardListNodeSkin", e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.addClick(this.rewardBtn, this.rewardBtnFunc, this);
        }, i.prototype.onData = function() {
            this.isAll = !0;
            for (var t = 0, i = function(i) {
                var o = i - 1, a = _.find(n.data.formula, function(e) {
                    return e == i;
                });
                a ? (n["duck" + i].visible = !0, n["duck" + i].x = 9 + 63 * t, t++, octopusModel.octopusPlayer.Jewels[i] > 0 ? n["duck" + i].source = e.ResourcePath.getItemIconByName("octopus_gift" + o) : (n["duck" + i].source = e.ResourcePath.getItemIconByName("octopus_gift0_" + o), 
                n.isAll = !1)) : n["duck" + i].visible = !1;
            }, n = this, o = 1; 7 > o; o++) i(o);
        }, i.prototype.rewardBtnFunc = function() {
            soundModel.buttonOpen();
            var t = {
                id: this.data.id,
                cookie: this.data.cookie,
                energy: this.data.energy,
                miniShield: this.data.miniShield,
                money: this.data.money,
                potion: this.data.potion,
                wanted: this.data.wanted,
                puffer: this.data.puffer,
                lolly: this.data.lolly,
                isAll: this.isAll
            };
            hortor.WindowManager.showWindow(e.WindowType.WINDOW_OCTOPUS_REWARDPOP, t);
        }, i;
    }(e.ItemRenderBase);
    e.OctopusRewardsListNode = t, __reflect(t.prototype, "game.OctopusRewardsListNode");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.blueColor = 4948915, e.purpleColor = 8145099, e.brownColor = 15239501, 
            e.skinPath = "octopus/node/OctopusRewardListNode2Skin", e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.addClick(this.bg, this.bgFunc, this);
        }, i.prototype.onData = function() {
            5 == this.itemIndex ? this.cardName.textColor = this.brownColor : 4 == this.itemIndex || 3 == this.itemIndex ? this.cardName.textColor = this.purpleColor : this.cardName.textColor = this.blueColor, 
            this.card.source = e.ResourcePath.getItemIconByName("octopus_gift" + this.itemIndex), 
            this.cardName.text = Const.octopusNames[this.itemIndex + 1], this.cardCount.text = this.data + "";
        }, i.prototype.bgFunc = function(t) {
            if (this.data > 0) {
                soundModel.buttonOpen(), playerModel.selectedActivityType = Const.OctopusType;
                var i = t.target.localToGlobal(0, 0), n = {
                    x: i.x + 45,
                    y: i.y
                };
                octopusModel.sendId = this.itemIndex + 1, hortor.WindowManager.showWindow(e.WindowType.WINDOW_OCTOPUS_BTN, {
                    itemPos: n
                });
            }
        }, i;
    }(e.ItemRenderBase);
    e.OctopusRewardsListNode2 = t, __reflect(t.prototype, "game.OctopusRewardsListNode2");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.wxtipImg.addEventListener(egret.TouchEvent.TOUCH_END, this.tipFuncWx, this), 
            this.h5tipImg.addEventListener(egret.TouchEvent.TOUCH_END, this.tipFuncH5, this), 
            this.closeBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.hide, this);
        }, i.prototype.onData = function() {
            this.wxGroup.visible = gateModel.isWxgame, this.h5Group.visible = !gateModel.isWxgame, 
            this.wxtipImg.source = playerModel.isSubscribed ? "offcialvip_focus5_png" : "offcialvip_focus4_png";
        }, i.prototype.tipFuncWx = function() {
            soundModel.buttonOpen(), hortor.WindowManager.currentWindow = e.WindowType.WINDOW_OFFICIALVIP_GUIDE;
        }, i.prototype.tipFuncH5 = function() {
            soundModel.buttonOpen(), HORTOR_AGENT.showQRCode(), this.hide();
        }, i;
    }(e.WindowBase);
    e.OfficialVipGetWindow = t, __reflect(t.prototype, "game.OfficialVipGetWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(e) {
        function t() {
            return null !== e && e.apply(this, arguments) || this;
        }
        return __extends(t, e), t.prototype.onInit = function() {
            this.closeBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.hide, this);
        }, t.prototype.onOpen = function() {
            this.finger.visible = !0;
        }, t.prototype.onData = function() {
            this.finger.visible = !1, this.tipImg.source = playerModel.isSubscribed ? "gamefocus_2_png" : "gamefocus_1_png";
        }, t;
    }(e.WindowBase);
    e.OfficialVipGuideWindow = t, __reflect(t.prototype, "game.OfficialVipGuideWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.getBtn.addEventListener(egret.TouchEvent.TOUCH_END, this.getVip, this);
        }, i.prototype.onOpen = function() {}, i.prototype.onData = function() {
            var t = this;
            this.data || (this.data = 1), this.img1.source = "offcialvip_" + this.data + "_png", 
            this.img2.source = "offcialvip_" + this.data + "_bm_png", this.getBtn.stopBreath();
            var i = gateModel.getGate(e.WindowType.WINDOW_OFFICIALVIP).clock;
            playerModel.isPrivilege && i ? (this.getBtn.visible = !1, this.tiptxt.visible = !0, 
            i.registCallBack(this, function() {
                t.getBtn.visible = !0, t.tiptxt.visible = !1;
            }, function(e) {
                t.tiptxt.textFlow = new egret.HtmlTextParser().parse('<font color="#884736">特权</font><font color="#ff4b3d">' + i.leftTimeFormat + '</font><font color="#884736">后失效\n重新激活可重置为24小时</font>');
            })) : gateModel.checkFocus ? (this.getBtn.visible = !0, this.tiptxt.visible = !1, 
            this.getBtn.startBreath()) : (this.getBtn.visible = !1, this.tiptxt.visible = !0, 
            this.tiptxt.text = "未激活特权");
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.getVip = function(t) {
            hortor.WindowManager.currentWindow = e.WindowType.WINDOW_OFFICIALVIP_GET;
        }, i;
    }(e.TabWindowBase);
    e.OfficialVipWindow = t, __reflect(t.prototype, "game.OfficialVipWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e._time = 86400, e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.clock = hortor.TimerManager.addClock(e.ClockType.PetHatchWindow, 86400, 1e3, 1), 
            this.clock.registCallBack(this, function() {}, this.timerFunc.bind(this)), this.onViewRegister();
        }, i.prototype.onData = function() {
            this._time = this.data.createRemain, this.openPanel();
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.onViewRegister = function() {
            this.closeBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.closeBtnFunc, this), 
            this.payBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.payBtnFunc, this);
        }, i.prototype.onViewRemove = function() {
            this.closeBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.closeBtnFunc, this), 
            this.payBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.payBtnFunc, this);
        }, i.prototype.openPanel = function() {
            this.timeLabel.text = "孵化时间：" + util.formatTimeCNNew3(this._time);
            var e = "";
            "seal" == this.data.name ? e = "pet_mc_png" : "bear" == this.data.name && (e = "pet_bear_png"), 
            this.eggImg.source = e;
        }, i.prototype.timerFunc = function() {
            this._time--, this._time > 0 ? this.timeLabel.text = "孵化时间：" + util.formatTimeCNNew3(this._time) : (EventCenter.sendEvent(EventConst.EggHatchOver), 
            soundModel.playSound(e.SoundType.SOUND_PANEL_CLOSE), this.closeBtnFunc());
        }, i.prototype.payBtnFunc = function() {
            e.PlatformManager.pay("finishHatch");
        }, i.prototype.closeBtnFunc = function() {
            this.hide();
        }, i;
    }(e.WindowBase);
    e.PetHatchWindow = t, __reflect(t.prototype, "game.PetHatchWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e.indexPet = 0, e.isLock = !1, e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.onViewRegister(), this.onEventCenterRegister(), this.setNotchFit(this.helpBtn);
        }, i.prototype.onData = function() {
            uiModel.onShow(e.UINameType.eggOverBtn, this.eggOverBtn), uiModel.onShow(e.UINameType.expGroup, this.expGroup), 
            uiModel.onShow(e.UINameType.lvUpBtn, this.lvUpBtn), uiModel.onShow(e.UINameType.foodGroup, this.foodGroup), 
            this.petData = this.data;
            for (var t = 0; t < this.petData.length; t++) if (this.petData[t].onStage) {
                this.indexPet = t;
                break;
            }
            this.openPanel();
        }, i.prototype.prepare = function(t, i) {
            HttpService.get(e.ServerMsg.PET_SHOW, "uid=" + playerModel.uid, function(e) {
                t(e.pets);
            }, i);
        }, i.prototype.onViewRegister = function() {
            var t = this;
            t.backBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.closeBtn, this), t.toLeftBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.toLeftBtnFunc, this), 
            t.toRightBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.toRightBtnFunc, this), 
            t.helpBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.helpBtnFunc, this), 
            t.workBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.workBtnFunc, this), 
            t.eggBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.eggBtnFunc, this), t.eggOverBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.eggOverBtnFunc, this), 
            t.lvUpBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.lvUpBtnFunc, this), 
            t.expGroup.addEventListener(egret.TouchEvent.TOUCH_TAP, this.expGroupFunc, this), 
            t.foodGroup.addEventListener(egret.TouchEvent.TOUCH_TAP, this.foodGroupFunc, this), 
            t.touchGroup.addEventListener(egret.TouchEvent.TOUCH_BEGIN, this.touchBegin, this), 
            t.touchGroup.addEventListener(egret.TouchEvent.TOUCH_MOVE, this.touchMove, this), 
            t.touchGroup.addEventListener(egret.TouchEvent.TOUCH_END, this.touchEnd, this), 
            this.skillTimer = hortor.TimerManager.addClock(e.ClockType.PetSkill, 86400, 1e3, 10), 
            this.skillTimer.registCallBack(this, function() {}, this._skillCountDown.bind(this)), 
            this.hatchTimer = hortor.TimerManager.addClock(e.ClockType.PetHatch, 86400, 1e3, 10), 
            this.hatchTimer.registCallBack(this, function() {}, this._hatchCountDown.bind(this)), 
            this.foreverTimer = hortor.TimerManager.addClock(e.ClockType.PetForever, 86400, 1e3, 10), 
            this.foreverTimer.registCallBack(this, function() {}, this._foreverCountDown.bind(this));
        }, i.prototype.onClose = function() {
            this.skillTimer.pause(), this.hatchTimer.pause(), this.foreverTimer.pause();
        }, i.prototype.onViewRemove = function() {
            var e = this;
            e.backBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.closeBtn, this), 
            e.toLeftBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.toLeftBtnFunc, this), 
            e.toRightBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.toRightBtnFunc, this), 
            e.helpBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.helpBtnFunc, this), 
            e.workBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.workBtnFunc, this), 
            e.eggBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.eggBtnFunc, this), 
            e.eggOverBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.eggOverBtnFunc, this), 
            e.lvUpBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.lvUpBtnFunc, this), 
            e.expGroup.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.expGroupFunc, this), 
            e.foodGroup.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.foodGroupFunc, this), 
            e.touchGroup.removeEventListener(egret.TouchEvent.TOUCH_BEGIN, this.touchBegin, this), 
            e.touchGroup.removeEventListener(egret.TouchEvent.TOUCH_MOVE, this.touchMove, this), 
            e.touchGroup.removeEventListener(egret.TouchEvent.TOUCH_END, this.touchEnd, this), 
            egret.Tween.removeTweens(e.skillIcon0), egret.Tween.removeTweens(e.timeLabel), egret.Tween.removeTweens(e.proNum), 
            egret.Tween.removeTweens(e.nowRate), egret.Tween.removeTweens(e.nextRate);
        }, i.prototype.onEventCenterRegister = function() {
            EventCenter.addEventListener(EventConst.EggHatchOver, this.eggHatchOver, this), 
            EventCenter.addEventListener(EventConst.RefreshPetProps, this.changePropNum, this);
        }, i.prototype.onEventCenterRemove = function() {
            EventCenter.removeEventListener(EventConst.EggHatchOver, this.eggHatchOver, this), 
            EventCenter.removeEventListener(EventConst.RefreshPetProps, this.changePropNum, this);
        }, i.prototype.openPanel = function() {
            this.cookieIcon0.source = this.cookieIcon.source = e.ItemManager.getItemInfo("cookie").icon, 
            this.potionIcon.source = e.ItemManager.getItemInfo("potion").icon, this.skillTimer.resume(), 
            this.hatchTimer.resume(), this.foreverTimer.resume(), this.showPetStatusView(), 
            this.showAllView(), this.checkPetGuide();
        }, i.prototype.showPetStatusView = function() {
            var e = this;
            e.displayGroup && (e.displayGroup.removeChildren(), e.displayGroup = null);
            var t = e.petData[e.indexPet];
            t.level > 0 ? e.displayGroup = this.createPetArmature(0, e.indexPet) : 0 == t.level && 0 == t.createRemain ? e.displayGroup = this.createEggReady(0) : e.displayGroup = this.createEgg(0);
        }, i.prototype.eggHatchOver = function() {
            this.showPetStatusView(), this.showMidView();
        }, i.prototype.showAllView = function() {
            this.showSideBtn(), this.showTopView(), this.showMidView(), this.showBottomView();
        }, i.prototype.showTopView = function() {
            var e = this, t = e.petData[e.indexPet];
            e.skillTimer.pause(), 0 == t.level ? e.topGroup.visible = !1 : (e.topGroup.visible = !0, 
            e.petNameL.text = t.chineseName, e.skillIcon0.source = "pet_skill_" + t.name, t.awakeRemain > 0 ? (e.timeLabel.text = util.formatTime(t.awakeRemain, !0), 
            e.skillTimer.resume()) : e.timeLabel.text = "未激活");
        }, i.prototype.showMidView = function() {
            var e = this;
            e.hatchTimer.pause();
            var t = e.petData[e.indexPet];
            0 == t.level ? (e.petGroup.visible = !1, t.createRemain > 0 && playerModel.hatchCount < 1 ? (e.eggTimeLabel.text = "孵化时间:" + util.formatTimeCNNew3(t.createRemain), 
            e.hatchTimer.resume(), e.eggGroup.visible = !0, e.eggOverGroup.visible = !1) : (e.eggGroup.visible = !1, 
            e.eggOverGroup.visible = !0), e.eggBtnGroup.visible = !hortor.SystemManager.isWxGame) : (0 == t.awakeRemain && this.playNeedFoodTw(), 
            e.needFoodGroup.visible = 0 == t.awakeRemain, t.onStage ? (e.workBtn.skinName = "common.ButtonMiddleBlue", 
            e.workBtn.icon = "pet_json.pet_txt_ysz") : (e.workBtn.skinName = "common.ButtonMiddleYellow", 
            e.workBtn.icon = "pet_json.pet_txt_sz"), e.eggGroup.visible = !1, e.eggOverGroup.visible = !1, 
            e.petGroup.visible = !0);
        }, i.prototype.showBottomView = function() {
            var e = this;
            e.foodNum.text = (playerModel.cookieCount || 0) + "", e.expNum.text = (playerModel.potionCount || 0) + "";
            var t = e.petData[e.indexPet];
            if (0 == t.level) e.bottomGroup.visible = !1, e.foodGroup.visible = !1, e.expGroup.visible = !1; else {
                if (e.bottomGroup.visible = !0, e.foodGroup.visible = !0, e.expGroup.visible = !0, 
                0 == t.nextExp ? (e.proNum.text = "已满级", e.nextRate.text = "下一级:" + .1 * t.chance + "%") : (e.proNum.text = t.exp + "/" + t.nextExp, 
                e.nextRate.text = "下一级:" + .1 * t.nextChance + "%"), e.skillIcon1.source = "pet_skill_" + t.name, 
                e.petLv.text = "lv." + t.level, e.skillDesc.text = t.skill, e.nowRate.text = "当前几率:" + .1 * t.chance + "%", 
                t.nextExp > 0) {
                    var i = t.exp / t.nextExp;
                    i = i > 1 ? 1 : i, e.petBar.mask = new egret.Rectangle(0, 0, 450 * i, 24);
                }
                t.exp < t.nextExp ? e.lvUpBtn.enabled = !1 : e.lvUpBtn.enabled = !0, 0 == t.nextExp ? (e.lvUpBtn.enabled = !1, 
                e.nextRate.visible = !1, e.lvUpBtn.icon = "pet_json.pet_txt_ymj", e.petBar.mask = new egret.Rectangle(0, 0, 450, 24)) : (e.nextRate.visible = !0, 
                e.lvUpBtn.icon = "pet_json.pet_txt_sj");
            }
        }, i.prototype.showSideBtn = function() {
            var e = this, t = e.petData;
            t[e.indexPet - 1] ? (e.toLeftBtn.source = "pet_img_3", e.toLeftBtn.touchEnabled = !0) : (e.toLeftBtn.source = "pet_img_4", 
            e.toLeftBtn.touchEnabled = !1), t[e.indexPet + 1] ? (e.toRightBtn.source = "pet_img_3", 
            e.toRightBtn.touchEnabled = !0) : (e.toRightBtn.source = "pet_img_4", e.toRightBtn.touchEnabled = !1);
        }, i.prototype.toLeftBtnFunc = function() {
            var t = this;
            if (t.petData[t.indexPet - 1] && !t.isLock) {
                soundModel.playSound(e.SoundType.SOUND_PANEL_OPEN);
                var i = t.petData[this.indexPet];
                soundModel.stopSound(e.SoundType.getPetSound(i.name, "sleep")), t.isLock = !0, t.indexPet--, 
                this.clearStarArmature(), this.showAllView(), i = t.petData[t.indexPet], i.level > 0 ? t.tempGroup = this.createPetArmature(-320, t.indexPet) : 0 == i.level && 0 == i.createRemain ? t.tempGroup = this.createEggReady(-320) : t.tempGroup = this.createEgg(-320), 
                this.toRightMoveTween();
            }
        }, i.prototype.toRightBtnFunc = function() {
            var t = this;
            if (t.petData[t.indexPet + 1] && !t.isLock) {
                soundModel.playSound(e.SoundType.SOUND_PANEL_OPEN);
                var i = t.petData[this.indexPet];
                soundModel.stopSound(e.SoundType.getPetSound(i.name, "sleep")), t.isLock = !0, t.indexPet++, 
                this.clearStarArmature(), this.showAllView(), i = t.petData[t.indexPet], i.level > 0 ? t.tempGroup = this.createPetArmature(640, t.indexPet) : 0 == i.level && 0 == i.createRemain ? t.tempGroup = this.createEggReady(640) : t.tempGroup = this.createEgg(640), 
                this.toLeftMoveTween();
            }
        }, i.prototype.toLeftMoveTween = function() {
            var e = this, t = egret.Tween.get(e.displayGroup), i = egret.Tween.get(e.tempGroup);
            t.to({
                x: -640
            }, 500, egret.Ease.circOut), i.to({
                x: 0
            }, 500, egret.Ease.circOut).call(function() {
                egret.Tween.removeTweens(e.displayGroup), egret.Tween.removeTweens(e.tempGroup);
                var t = e.displayGroup;
                e.displayGroup = e.tempGroup, e.tempGroup = t, e.tempGroup.removeChildren(), e.tempGroup = null, 
                e.isLock = !1;
            });
        }, i.prototype.toRightMoveTween = function() {
            var e = this, t = egret.Tween.get(e.displayGroup), i = egret.Tween.get(e.tempGroup);
            t.to({
                x: 640
            }, 500, egret.Ease.circOut), i.to({
                x: 0
            }, 500, egret.Ease.circOut).call(function() {
                egret.Tween.removeTweens(e.displayGroup), egret.Tween.removeTweens(e.tempGroup);
                var t = e.displayGroup;
                e.displayGroup = e.tempGroup, e.tempGroup = t, e.tempGroup.removeChildren(), e.tempGroup = null, 
                e.isLock = !1;
            });
        }, i.prototype.touchBegin = function(e) {
            var t = this;
            t._startPosX = e.stageX;
        }, i.prototype.touchMove = function(e) {
            var t = this, i = t._startPosX - e.stageX;
            t._moving || (i > 30 ? (t._moving = !0, this.toRightBtnFunc()) : -30 > i && (t._moving = !0, 
            this.toLeftBtnFunc()));
        }, i.prototype.touchEnd = function(e) {
            var t = this;
            t._moving || (t._startPosX - e.stageX > 50 ? this.toRightBtnFunc() : t._startPosX - e.stageX < -50 && this.toLeftBtnFunc()), 
            t._moving = !1;
        }, i.prototype.workBtnFunc = function() {
            var t = this;
            if ("common.ButtonMiddleYellow" != t.workBtn.skinName) return void hortor.TipManager.bubble("已上阵");
            var i = t.petData[t.indexPet];
            HttpService.post(e.ServerMsg.PET_SWITCH, "uid=" + playerModel.uid + "&petName=" + i.name, function(n) {
                t.petData = n.pets, t.workBtn.skinName = "common.ButtonMiddleBlue", t.workBtn.icon = "pet_json.pet_txt_ysz", 
                playerModel.petName = i.name, playerModel.petSleepRemain = i.awakeRemain, playerModel.petExpRemain = n.petExpRemain, 
                EventCenter.sendEvent(EventConst.refreshPetStatus), t.petStatus.setState(Const.pet_Enter), 
                soundModel.playSound(e.SoundType.getPetSound(i.name, "select"));
            });
        }, i.prototype.eggBtnFunc = function() {
            var t = this;
            if (gateModel.iosPay) {
                var i = t.petData[t.indexPet];
                hortor.WindowManager.showWindow(e.WindowType.WINDOW_PET_HATCH, i);
            }
        }, i.prototype.eggOverBtnFunc = function() {
            var t = this, i = this, n = i.petData[i.indexPet];
            this.closePetGuide(), 16 == playerModel.tutorial, HttpService.post(e.ServerMsg.PET_HATCH, "uid=" + playerModel.uid + "&petName=" + n.name + "&useFinishHatch=true", function(o) {
                i.petData = o.pets, playerModel.cookieCount = o.cookieCount, playerModel.potionCount = o.potionCount, 
                i.clearStarArmature(), i.showPetStatusView(), i.showAllView(), 16 == playerModel.tutorial ? (playerModel.tutorial++, 
                playerModel.petName = n.name, playerModel.petSleepRemain = n.awakeRemain, hortor.WindowManager.showWindow(e.WindowType.WINDOW_PET_OPENEGG, {
                    eggData: n,
                    cb: t.checkPetGuide.bind(t)
                })) : hortor.WindowManager.showWindow(e.WindowType.WINDOW_PET_OPENEGG, {
                    eggData: n
                }), EventCenter.sendEvent(EventConst.refreshPetStatus);
            });
        }, i.prototype.helpBtnFunc = function() {
            var t = HelpTextLabel.getPetTextLabel();
            e.ComFunc.openHelpPanel(t);
        }, i.prototype.lvUpBtnFunc = function() {
            var t = this;
            this.closePetGuide();
            var i = this, n = i.petData[i.indexPet];
            18 == playerModel.tutorial && (i.foodGroup.touchEnabled = !1), i.lvUpBtn.touchEnabled = !1, 
            HttpService.post(e.ServerMsg.PET_UPGRADE, "uid=" + playerModel.uid + "&petName=" + n.name, function(o) {
                if (i.petData = o.pets, i.lvUpBtn.touchEnabled = !0, i.showBottomView(), 18 == playerModel.tutorial) {
                    playerModel.tutorial++, t.checkPetGuide();
                    var a = egret.setTimeout(function() {
                        egret.clearTimeout(a), i.foodGroup.touchEnabled = !0;
                    }, t, 1300);
                }
                var r = new e.ArmaturePlayer("pet_levelUP");
                i.addChild(r), r.x = .5 * petModel.stageWidth, r.y = 254.5, r.play("enter", 1, function() {
                    r.dispose();
                });
                var s = new e.ArmaturePlayer("pet_food");
                i.displayGroup.addChild(s), s.x = .5 * petModel.stageWidth;
                var l = t.petStatus.petArmature;
                s.y = l.y, s.play("pet_food", 1, function() {
                    s.dispose();
                }), petModel.petNowStatus = n.awakeRemain > 0 ? Const.pet_Wait : Const.pet_Sleep, 
                t.playPetEnterArmature(), t.playUpTween(), soundModel.playSound(e.SoundType.getPetSound(n.name, "levelup"));
            });
        }, i.prototype.expGroupFunc = function() {
            var t = this;
            this.closePetGuide();
            var i = this;
            if (soundModel.playSound(e.SoundType.SOUND_PANEL_OPEN), !i.isLock) {
                if (playerModel.potionCount < 1) return void (gateModel.iosPay ? HttpService.get(e.ServerMsg.SHOP_LIST, "uid=" + playerModel.uid, function(t) {
                    var i = _.find(t.goods.prop, function(e) {
                        return "potion" == e.goodsId;
                    });
                    hortor.WindowManager.showWindow(e.WindowType.WINDOW_SHOP_GOODS, i);
                }) : hortor.TipManager.alert("经验药水不足"));
                var n = i.petData[i.indexPet];
                17 == playerModel.tutorial && (i.lvUpBtn.touchEnabled = !1), i.expGroup.touchEnabled = !1, 
                HttpService.post(e.ServerMsg.PET_POTION, "uid=" + playerModel.uid + "&petName=" + n.name, function(o) {
                    if (i.petData = o.pets, playerModel.cookieCount = o.cookieCount, playerModel.potionCount = o.potionCount, 
                    playerModel.petExpRemain -= 50, 17 == playerModel.tutorial) {
                        playerModel.tutorial++, t.checkPetGuide();
                        var a = egret.setTimeout(function() {
                            egret.clearTimeout(a), i.lvUpBtn.touchEnabled = !0;
                        }, t, 1600);
                    }
                    petModel.petNowStatus = n.awakeRemain > 0 ? Const.pet_Wait : Const.pet_Sleep, t.playEatEffect("exp"), 
                    i.expGroup.touchEnabled = !0, guildModel.addGuildTaskValue(e.GuildProxy.usePotion, 1), 
                    soundModel.playSound(e.SoundType.getPetSound(n.name, "exp"));
                });
            }
        }, i.prototype.foodGroupFunc = function() {
            var t = this;
            this.closePetGuide(), soundModel.playSound(e.SoundType.SOUND_PANEL_OPEN);
            var i = this;
            if (!i.isLock) {
                if (playerModel.cookieCount < 1) return void (gateModel.iosPay ? HttpService.get(e.ServerMsg.SHOP_LIST, "uid=" + playerModel.uid, function(t) {
                    var i = _.find(t.goods.prop, function(e) {
                        return "cookie" == e.goodsId;
                    });
                    hortor.WindowManager.showWindow(e.WindowType.WINDOW_SHOP_GOODS, i);
                }) : hortor.TipManager.alert("饼干不足"));
                var n = i.petData[i.indexPet];
                19 == playerModel.tutorial, i.foodGroup.touchEnabled = !1, HttpService.post(e.ServerMsg.PET_COOKIE, "uid=" + playerModel.uid + "&petName=" + n.name, function(e) {
                    i.petData = e.pets, playerModel.cookieCount = e.cookieCount, playerModel.potionCount = e.potionCount, 
                    t.showBottomView(), 19 == playerModel.tutorial && (playerModel.tutorial++, t.checkPetGuide()), 
                    t.showTopView(), i.needFoodGroup.visible = !1, i.petData[i.indexPet].onStage && (playerModel.petName = i.petData[i.indexPet].name, 
                    playerModel.petSleepRemain = i.petData[i.indexPet].awakeRemain, EventCenter.sendEvent(EventConst.refreshPetStatus)), 
                    i.foodGroup.touchEnabled = !0;
                }), petModel.petNowStatus = Const.pet_Wait, this.playEatEffect("food"), soundModel.stopSound(e.SoundType.getPetSound(n.name, "sleep")), 
                soundModel.playSound(e.SoundType.getPetSound(n.name, "cookie"));
            }
        }, i.prototype.showShakeTween = function(e, t) {
            var i = t;
            egret.Tween.removeTweens(e), e.rotation = 0;
            var n = egret.Tween.get(e, {
                loop: !0
            });
            n.to({
                rotation: 3
            }, i).to({
                rotation: 0
            }, i).to({
                rotation: -3
            }, i).to({
                rotation: 0
            }, i).to({
                rotation: 3
            }, i).to({
                rotation: 0
            }, i).to({
                rotation: -3
            }, i).to({
                rotation: 0
            }, i).wait(800);
        }, i.prototype.playEatEffect = function(t) {
            var i, n, o, a = this, r = this;
            if ("food" == t) {
                o = e.ItemManager.getItemInfo("cookie").icon;
                var s = r.foodGroup.localToGlobal(0, 0);
                i = s.x + .5 * r.foodGroup.width, n = s.y + .5 * r.foodGroup.height;
            } else if ("exp" == t) {
                o = e.ItemManager.getItemInfo("potion").icon;
                var l = r.expGroup.localToGlobal(0, 0);
                i = l.x + .5 * r.expGroup.width, n = l.y + .5 * r.expGroup.height;
            }
            var d = new egret.Bitmap();
            r.addChild(d), d.width = 80, d.height = 81, d.anchorOffsetX = 40, d.anchorOffsetY = 40.5, 
            d.x = i, d.y = n, util.setScale(d, .1), RES.getResAsync(o, function(e) {
                d.texture = e;
            }, this);
            var u = this.petStatus.petArmature, h = u.localToGlobal(0, 0).y, c = egret.Tween.get(d);
            c.to({
                scaleX: 1.3,
                scaleY: 1.3
            }, 300, egret.Ease.cubicOut).to({
                x: .5 * petModel.stageWidth,
                y: h - u.height / 2
            }, 400, egret.Ease.cubicIn).to({
                scaleX: .5,
                scaleY: .5
            }, 300).call(function() {
                r.removeChild(d);
            });
            var p = egret.setTimeout(function() {
                a && a && (egret.clearTimeout(p), a.showBottomView(), "exp" == t ? (a.playExpTween(), 
                a.playExpArmature()) : (a.playSkillTween(), a.playFoodArmature()), a.playPetEatArmature());
            }, r, 750);
        }, i.prototype.playExpArmature = function() {
            var t = this, i = new e.ArmaturePlayer("pet_exp");
            t.displayGroup.addChild(i), i.x = .5 * petModel.stageWidth;
            var n = this.petStatus.petArmature;
            i.y = n.y, i.play("pet_exp", 1, function() {
                i.dispose();
            });
        }, i.prototype.playFoodArmature = function() {
            var t = this, i = new e.ArmaturePlayer("pet_food");
            t.displayGroup.addChild(i), i.x = .5 * petModel.stageWidth;
            var n = this.petStatus.petArmature;
            i.y = n.y, i.play("pet_food", 1, function() {
                i.dispose();
            });
        }, i.prototype.playPetEatArmature = function() {
            var e = this;
            if (e.petStatus) {
                e.petStatus.setState(Const.pet_Eat, 1);
                e.petData[e.indexPet];
            }
        }, i.prototype.playPetEnterArmature = function() {
            var t = this;
            if (t.petStatus) {
                t.petStatus.setState(Const.pet_Enter, 1);
                var i = t.petData[t.indexPet];
                soundModel.playSound(e.SoundType.getPetSound(i.name, "levelup"));
            }
        }, i.prototype.playSkillTween = function() {
            var e = this, t = egret.Tween.get(e.skillIcon0);
            t.to({
                scaleX: 1.4,
                scaleY: 1.4
            }, 300, egret.Ease.quadOut).to({
                scaleX: 1,
                scaleY: 1
            }, 100);
            var i = egret.Tween.get(e.timeLabel);
            i.to({
                scaleX: 1.4,
                scaleY: 1.4
            }, 300, egret.Ease.quadOut).to({
                scaleX: 1,
                scaleY: 1
            }, 100);
        }, i.prototype.playExpTween = function() {
            var e = this, t = egret.Tween.get(e.proNum);
            t.to({
                scaleX: 1.4,
                scaleY: 1.4
            }, 300, egret.Ease.quadOut).to({
                scaleX: 1,
                scaleY: 1
            }, 100);
        }, i.prototype.playUpTween = function() {
            var e = this;
            0 == e.nowRate.anchorOffsetX && (e.nowRate.anchorOffsetX = .5 * e.nowRate.width, 
            e.nowRate.anchorOffsetY = .5 * e.nowRate.height, e.nowRate.x += .5 * e.nowRate.width, 
            e.nowRate.y += .5 * e.nowRate.height);
            var t = egret.Tween.get(e.nowRate);
            t.to({
                scaleX: 1.4,
                scaleY: 1.4
            }, 300, egret.Ease.quadOut).to({
                scaleX: 1,
                scaleY: 1
            }, 100), 0 == e.nextRate.anchorOffsetX && (e.nextRate.anchorOffsetX = .5 * e.nextRate.width, 
            e.nextRate.anchorOffsetY = .5 * e.nextRate.height, e.nextRate.x += .5 * e.nextRate.width, 
            e.nextRate.y += .5 * e.nextRate.height);
            var i = egret.Tween.get(e.nextRate);
            i.wait(400).to({
                scaleX: 1.4,
                scaleY: 1.4
            }, 300, egret.Ease.quadOut).to({
                scaleX: 1,
                scaleY: 1
            }, 100);
        }, i.prototype._skillCountDown = function() {
            if (this.petData) {
                var t = this, i = t.petData[t.indexPet];
                i.awakeRemain <= 0 ? (t.timeLabel.text = "未激活", t.skillTimer.pause(), t.petStatus && t.petStatus._nowState != Const.pet_Sleep && (t.petStatus.setState(Const.pet_Sleep), 
                soundModel.playSound(e.SoundType.getPetSound(i.name, "sleep"), 0))) : t.timeLabel.text = util.formatTime(i.awakeRemain, !0);
            }
        }, i.prototype._hatchCountDown = function() {
            if (this.petData) {
                var e = this, t = e.petData[e.indexPet];
                t.createRemain > 0 ? e.eggTimeLabel.text = "孵化时间:" + util.formatTimeCNNew3(t.createRemain) : (e.hatchTimer.pause(), 
                this.clearStarArmature(), this.showPetStatusView(), this.showMidView());
            }
        }, i.prototype.clearStarArmature = function() {
            var e = this;
            e.starArmature && (util.removeFromParent(e.starArmature), e.starArmature = null);
        }, i.prototype._foreverCountDown = function() {
            if (this.petData) for (var e = this, t = 0; t < e.petData.length; t++) {
                var i = e.petData[t];
                i.onStage && i.awakeRemain > 0 && i.awakeRemain--, i.createRemain > 0 && i.createRemain--;
            }
        }, i.prototype.checkPetGuide = function() {
            if (this && this) {
                var e = this, t = e.petData[e.indexPet];
                playerModel.tutorial > 20 || (0 == t.level || 16 == playerModel.tutorial ? t && t.onStage && (playerModel.tutorial++, 
                this.checkPetGuide()) : 1 == t.level && 0 == t.exp || 17 == playerModel.tutorial ? 17 == playerModel.tutorial && playerModel.potionCount < 1 && playerModel.tutorial++ : 1 == t.level && 50 == t.exp && 50 == t.nextExp || 18 == playerModel.tutorial ? 18 == playerModel.tutorial && t.level > 1 ? playerModel.tutorial++ : 1 == t.level && t.exp < 50 && playerModel.tutorial++ : 19 == playerModel.tutorial ? playerModel.cookieCount < 1 && playerModel.tutorial++ : 20 == playerModel.tutorial && (playerModel.tutorial++, 
                egret.setTimeout(function() {}, e, 1200)));
            }
        }, i.prototype.playNeedFoodTw = function() {
            var e = this;
            egret.Tween.removeTweens(e.needFoodGroup);
            var t = (e.petData[e.indexPet], e.needFoodGroup.x, e.needFoodGroup.y), i = egret.Tween.get(e.needFoodGroup, {
                loop: !0
            });
            i.to({
                y: t - 8
            }, 1e3).to({
                y: t
            }, 1e3);
        }, i.prototype.closePetGuide = function() {}, i.prototype.createPetArmature = function(t, i) {
            var n = this, o = n.petData[i], a = new eui.Group();
            n.showGroup.addChild(a), a.width = 640, a.height = 541, a.x = t || 0, a.y = 176, 
            a.name = "tempGroup";
            var r = 460;
            return n.petStatus = new e.PetStatus("pet_" + o.name, a, .5 * petModel.stageWidth, r), 
            o.awakeRemain > 0 ? n.petStatus.setState(Const.pet_Wait) : (soundModel.playSound(e.SoundType.getPetSound(o.name, "sleep"), 0), 
            n.petStatus.setState(Const.pet_Sleep)), a;
        }, i.prototype.createEgg = function(t) {
            var i = this, n = new eui.Group();
            i.showGroup.addChild(n), n.width = 640, n.height = 541, n.x = t || 0, n.y = 276, 
            n.name = "tempGroup";
            var o = new egret.Bitmap();
            return n.addChild(o), o.width = 224, o.height = 264, o.anchorOffsetX = 112, o.anchorOffsetY = 132, 
            o.x = 320, o.y = 230, RES.getResAsync("pet_egg1_png", function(e) {
                o.texture = e;
            }, this), i.starArmature = new e.ArmaturePlayer("pet_star"), n.addChild(i.starArmature), 
            i.starArmature.x = .5 * petModel.stageWidth, i.starArmature.y = 360, i.starArmature.scaleX = i.starArmature.scaleY = 2, 
            i.starArmature.play("sleep", 0), n;
        }, i.prototype.createEggReady = function(t) {
            var i = this, n = new eui.Group();
            i.showGroup.addChild(n), n.width = 640, n.height = 541, n.x = t || 0, n.y = 276, 
            n.name = "tempGroup";
            var o = new eui.Group();
            n.addChild(o), o.width = 224, o.height = 264, o.anchorOffsetX = 112, o.anchorOffsetY = 264, 
            o.x = 320, o.y = 360;
            var a = new egret.Bitmap();
            o.addChild(a), a.width = 217, a.height = 135, a.x = 4, a.y = 0, RES.getResAsync("pet_egg3_png", function(e) {
                a.texture = e;
            }, this);
            var r = new egret.Bitmap();
            return o.addChild(r), r.width = 224, r.height = 155, r.x = 0, r.y = 107, RES.getResAsync("pet_egg2_png", function(e) {
                r.texture = e;
            }, this), this.showShakeTween(o, 80), i.starArmature = new e.ArmaturePlayer("pet_star"), 
            n.addChild(i.starArmature), i.starArmature.x = .5 * petModel.stageWidth, i.starArmature.y = 350, 
            i.starArmature.scaleX = i.starArmature.scaleY = 2, i.starArmature.play("wake", 0), 
            n;
        }, i.prototype.changePropNum = function() {
            var e = this;
            e.foodNum.text = (playerModel.cookieCount || 0) + "", e.expNum.text = (playerModel.potionCount || 0) + "";
        }, i.prototype.closeBtn = function() {
            hortor.ScreenManager.back();
            var t = this.petData[this.indexPet];
            soundModel.stopSound(e.SoundType.getPetSound(t.name, "sleep"));
        }, i;
    }(e.ScreenBase);
    e.PetMainScreen = t, __reflect(t.prototype, "game.PetMainScreen");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {}, i.prototype.onData = function() {
            this.eggData = this.data.eggData, this.data.cb && (this._cb = this.data.cb), this.openPanel();
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.openPanel = function() {
            var t = this, i = new e.ArmaturePlayer("pet_light");
            t.lightGroup.addChild(i), i.x = .5 * petModel.stageWidth, i.y = 390, i.play("still", 0), 
            i.scaleX = i.scaleY = 2, t.lightGroup.alpha = 0;
            var n = 620;
            t.petName.text = t.eggData.chineseName;
            var o = new e.PetStatus("pet_" + t.eggData.name, t.petGroup, .5 * petModel.stageWidth, n, 1, 1);
            o.setState(Const.pet_Wait), t.petGroup.visible = !1, t.petGroup.scaleX = t.petGroup.scaleY = 0, 
            this.playEggTween();
        }, i.prototype.playEggTween = function() {
            var e = this, t = this, i = egret.Tween.get(t.eggT), n = egret.Tween.get(t.eggB);
            i.to({
                y: t.eggT.y - 100,
                alpha: 0
            }, 300), n.to({
                y: t.eggB.y + 100,
                alpha: 0
            }, 300).call(function() {
                e.playPetTween();
            });
        }, i.prototype.playPetTween = function() {
            var e = this, t = this;
            t.petGroup.visible = !0;
            var i = egret.Tween.get(t.lightGroup);
            i.to({
                alpha: 1
            }, 300);
            var n = egret.Tween.get(t.petGroup);
            n.to({
                scaleX: 1,
                scaleY: 1
            }, 300).call(function() {
                egret.setTimeout(function() {
                    t._cb && t._cb(), e.hide();
                }, t, 3e3);
            });
        }, i;
    }(e.WindowBase);
    e.PetOpenEggWindow = t, __reflect(t.prototype, "game.PetOpenEggWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function() {
        function t(e, t, i, n, o, a) {
            this._nowState = "", this._name = e, this._parent = t, this._posX = i, this._posY = n, 
            this._scaleX = o || 1, this._scaleY = a || 1, this.initHeroState();
        }
        return t.prototype.initHeroState = function() {
            this.petArmature = new e.ArmaturePlayer(this._name), this._parent.addChild(this.petArmature), 
            this.petArmature.x = this._posX, this.petArmature.y = this._posY, this.petArmature.scaleX = this._scaleX, 
            this.petArmature.scaleY = this._scaleY;
        }, t.prototype.completeHandler = function(e) {
            this.setState(petModel.petNowStatus, 0);
        }, t.prototype.setState = function(e, t) {
            if (e != this._nowState) switch (this._nowState = e, this._nowState) {
              case Const.pet_Sleep:
                this.sleepState(t);
                break;

              case Const.pet_Wait:
                this.waitState(t);
                break;

              case Const.pet_Eat:
                this.eatState(t);
                break;

              case Const.pet_Skill:
                this.attackState(t);
                break;

              case Const.pet_Enter:
                this.enterState(t);
            }
        }, t.prototype.sleepState = function(e) {
            var t = e ? e : 0;
            this.petArmature.play(Const.pet_Sleep, t);
        }, t.prototype.waitState = function(e) {
            var t = e ? e : 0;
            this.petArmature.play(Const.pet_Wait, t);
        }, t.prototype.attackState = function(e) {
            var t = e ? e : 0;
            this.petArmature.play(Const.pet_Skill, t);
        }, t.prototype.eatState = function(e) {
            var t = e ? e : 0;
            this.petArmature.play(Const.pet_Eat, t, this.completeHandler, this);
        }, t.prototype.enterState = function(e) {
            var t = e ? e : 0;
            this.petArmature.play(Const.pet_Enter, t, this.completeHandler, this);
        }, t.prototype.dispose = function() {
            this.petArmature && this.petArmature.dispose();
        }, t;
    }();
    e.PetStatus = t, __reflect(t.prototype, "game.PetStatus");
}(game || (game = {}));

var game;

!function(e) {
    var t = function() {
        function e() {}
        return e.prototype.update = function(e) {
            this.data = e;
        }, e;
    }();
    e.PirateGiftModel = t, __reflect(t.prototype, "game.PirateGiftModel");
}(game || (game = {}));

var pirateGiftModel, game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e.goodsData = null, e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.getBtnGroup.addEventListener(egret.TouchEvent.TOUCH_TAP, this.payBtnFunc, this), 
            this.partyGift = this.getPirateGift(), this.getBtnGroup.touchChildren = !1;
            var e = new hortor.TouchScaleEffect();
            e.start(this.getBtnGroup), this.partyGift && this.partyGift.clock.registCallBack(this, this.onTimeChange, this.onTimeUpdate);
        }, i.prototype.onClose = function() {}, i.prototype.onData = function() {
            this.payBtn.enabled = this.partyGift && this.partyGift.isRunning, gateModel.updateGate(e.ActivityType.partyGift);
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.onTimeUpdate = function() {
            this.timeLabel.text = this.partyGift.clock.leftTimeFormatZh;
        }, i.prototype.onTimeChange = function() {
            this.timeLabel && (this.timeLabel.text = "活动结束", this.payBtn.enabled = this.partyGift.isRunning), 
            gateModel.getGate(e.WindowType.WINDOW_PARTYGIFT).isUnlock = !1;
        }, i.prototype.getPirateGift = function() {
            var t = activityModel.getActivityInfo(e.ActivityType.occasionalGift, e.ActivityType.partyGift);
            return t;
        }, i.prototype.payBtnFunc = function() {
            0 != this.payBtn.enabled && this.partyGift && this.partyGift.isRunning && (shopModel.payGiftType = e.ActivityType.partyGift, 
            e.PlatformManager.pay("occasionalGift", 1, this.partyGift.aid));
        }, i;
    }(e.TabWindowBase);
    e.PirateGiftWindow = t, __reflect(t.prototype, "game.PirateGiftWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.width = 640, e.height = egret.MainContext.instance.stage.stageHeight, e.createView(), 
            e;
        }
        return __extends(i, t), i.prototype.createView = function() {
            this.maskImage = new eui.Image(), this.addChild(this.maskImage), this.maskImage.width = 1280, 
            this.maskImage.height = 2078, this.maskImage.source = "commonImg_heiMask_png", this.maskImage.horizontalCenter = 0, 
            this.maskImage.verticalCenter = 0;
            var t = new eui.Group();
            this.addChild(t), t.width = 530, t.height = 419, t.horizontalCenter = 0, t.verticalCenter = 0;
            var i = new eui.Image();
            i.source = e.ResourcePath.getWxAuthBgImage(), t.addChild(i), i.width = 530, i.height = 419;
            var n = new eui.Label();
            t.addChild(n), n.size = 32, n.text = "微信授权", n.textColor = 0, n.x = 201, n.y = 25, 
            n.bold = !0;
            var o = new eui.Label();
            t.addChild(o), o.size = 26, o.text = "您的用户信息已过期", o.textColor = 0, o.x = 52, o.y = 145;
            var a = new eui.Label();
            t.addChild(a), a.size = 24, a.text = "请重新授权以获得你的公开信息（昵称，头像等）", a.textColor = 8947848, 
            a.x = 52, a.y = 221, a.width = 445, this.btnImg = new eui.Image(), t.addChild(this.btnImg), 
            this.btnImg.x = 16, this.btnImg.y = 326, this.btnImg.width = 498, this.btnImg.height = 76, 
            this.showUserInfoBtn();
        }, i.prototype.showUserInfoBtn = function() {
            console.log("WxAuthPanel---\x3e>>>showUserInfoBtn");
            var t = this, i = (this.btnImg.localToGlobal(0, 0), egret.MainContext.instance.stage.stageHeight), n = egret.MainContext.instance.stage.stageWidth, o = Math.ceil(498 / n * e.WxSystemInfo.windowWidth), a = Math.ceil(76 / i * e.WxSystemInfo.windowHeight), r = .5 * (e.WxSystemInfo.windowWidth - o), s = (636 + .5 * (i - 1039)) / i * e.WxSystemInfo.windowHeight, l = {
                type: "text",
                text: "确定",
                image: "",
                style: {
                    left: r,
                    top: s,
                    width: o,
                    height: a,
                    backgroundColor: "#51aa38",
                    color: "#ffffff",
                    borderRadius: 10,
                    textAlign: "center",
                    fontSize: 24,
                    lineHeight: a
                }
            }, d = platform.common.createUserInfoButton(l);
            d.onTap(function(e) {
                console.log("onTap res->>", e), e && e.encryptedData && (d.hide(), t.parent.removeChild(t));
            }), d.show();
        }, i;
    }(eui.Component);
    e.WxAuthPanel = t, __reflect(t.prototype, "game.WxAuthPanel");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            t.prototype.onInit.call(this), hortor.ResourceManager.loadText(e.ResourcePath.getLangPath(), this.enterGame, this);
        }, i.prototype.enterGame = function(t) {
            hortor.LocaleManager.lang = t, hortor.ScreenManager.currentScreen = e.ScreenType.PRELOAD_SCREEN;
        }, i;
    }(e.ScreenBase);
    e.PreloadScreen = t, __reflect(t.prototype, "game.PreloadScreen");
}(game || (game = {}));

var game;

!function(e) {
    var t = 0, i = function(e) {
        function i() {
            var t = e.call(this) || this;
            return t.skinPath = "rank/RankNodeSkin", t;
        }
        return __extends(i, e), i.prototype.onInit = function() {
            var e = this;
            egret.Tween.get(this.group, {
                loop: !1
            }).to({
                x: 0
            }, 200 + 50 * this.itemIndex, egret.Ease.sineIn).call(function() {
                e && egret.Tween.removeTweens(e.group);
            }), t += 1, util.jzlog(">>>显示第", t, "个RankNode"), util.jzlog("this.data>>>>", this.data), 
            this.data.showStar = !1, this.avatar.data = this.data, this.rankNum.text = this.data.rank, 
            this.starNum.text = this.data.crowns, this.userName.text = this.data.name;
        }, i.prototype.onData = function() {
            util.jzlog(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>this.data.self ==", this.data.self), 
            this.data.self ? (util.jzlog("利用这个数据来设置自己的UI"), hortor.NotificationManager.dispatch(Const.updateSelfRankUI, this.data), 
            this.bg.source = "rank_json.list_img_tz_0", this.rankNum.stroke = 2, this.rankNum.strokeColor = 14266456) : (this.bg.source = "rank_json.list_img_tz_1", 
            this.rankNum.stroke = 2, this.rankNum.strokeColor = 4298199), this.data.showStar = !1, 
            this.avatar.data = this.data, this.rankNum.text = this.data.rank, util.setScale(this.rankNum, util.getRankNumScaleFactor(this.data.rank)), 
            util.jzlog("this.data.rank ==", this.data.rank), this.starNum.text = this.data.crowns, 
            this.userName.textColor = util.getColorByGender(this.data.gender);
            var e = this.data.name.slice(0, 7), t = this.data.name.length, i = t > 7 ? "..." : "";
            this.userName.text = e + i;
        }, i;
    }(e.ItemRenderBase);
    e.RankNode = i, __reflect(i.prototype, "game.RankNode");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e.lastIndex = 1, e.worldData = new eui.ArrayCollection([]), e.friendData = new eui.ArrayCollection([]), 
            e.changeTypeBtnatLeft = !1, e.canChangeType = !1, e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.setNotchFit(this.rankDesc), this.setNotchFit(this.back), this.effect = new hortor.SlideEffect(1), 
            this.height = e.GameConfig.stageHeight, this.worldScroll.scrollPolicyH = eui.ScrollPolicy.OFF, 
            this.worldScroll.scrollPolicyV = eui.ScrollPolicy.ON, this.worldScroll.viewport = this.worldList, 
            this.friendScroll.scrollPolicyH = eui.ScrollPolicy.OFF, this.friendScroll.scrollPolicyV = eui.ScrollPolicy.ON, 
            this.friendScroll.viewport = this.friendList, this.worldList.addEventListener(eui.ItemTapEvent.ITEM_TAP, this.rankItemFunc, this), 
            this.friendList.addEventListener(eui.ItemTapEvent.ITEM_TAP, this.rankItemFunc, this), 
            this.chageTypeTouch.addEventListener(egret.TouchEvent.TOUCH_TAP, this.changeType, this), 
            this.back.addEventListener(egret.TouchEvent.TOUCH_TAP, this.backFunc, this), hortor.NotificationManager.add(Const.DeleteFriend, this.deleteFriendRefreshList, this), 
            hortor.NotificationManager.add(Const.updateSelfRankUI, this.updateSelfUI, this), 
            this.friendGroup.visible = !1, this.worldGroup.visible = !0, this.lastIndex = 1;
            egret.Tween.get(this.bg1, {
                loop: !0
            }).to({
                rotation: 360
            }, 6e4), this.worldRankOnData(), this.friendRankOnData();
        }, i.prototype.onData = function() {
            util.jzlog("RankWindow.onData"), this.changeTypeBtnatLeft = !1, this.canChangeType = !0, 
            egret.callLater(function() {
                this.changeType();
            }, this);
        }, i.prototype.getWorldRankData = function() {
            HttpService.get(e.ServerMsg.WORLD_RANK, "uid=" + playerModel.uid, function(e) {
                util.jzlog("res.ranks ===", e.ranks), rankModel.setWorldRankData(e.ranks);
                var t = rankModel.getHandlerWorldRankData();
                this.worldInitListView(t);
            }, null, this);
        }, i.prototype.getFriendRankData = function() {
            HttpService.get(e.ServerMsg.FRIEND_RANK, "uid=" + playerModel.uid, function(e) {
                rankModel.setFriendsRankData(e.friends);
                var t = rankModel.getHandlerFriendsRankData();
                this.friendInitListView(t);
            }, null, this);
        }, i.prototype.changeType = function(t) {
            var i = this;
            if (util.jzlog("this.chageTypeTouch.touchEnabled ==", this.canChangeType), 0 != this.canChangeType) {
                this.canChangeType = !1, soundModel.playSound(e.SoundType.SOUND_PANEL_OPEN), this.changeTypeBtnatLeft ? this.getWorldRankData() : this.getFriendRankData(), 
                this.changeListType(this.changeTypeBtnatLeft);
                var n, o;
                util.jzlog("this.changeTypeBtnatLeft ==", this.changeTypeBtnatLeft), 1 == this.changeTypeBtnatLeft ? (n = Const.RankWindowBtnLeftX, 
                o = Const.RankWindowBtnLeftText, this.changeTypeBtnatLeft = !1) : (n = Const.RankWindowBtnRightX, 
                o = Const.RankWindowBtnRightText, this.changeTypeBtnatLeft = !0), this.rankName.text = o;
                var a = this;
                egret.Tween.get(this.changeTypeBtnGroup).to({
                    x: n
                }, 400, egret.Ease.backOut).call(function() {
                    egret.Tween.removeTweens(i.changeTypeBtnGroup), a.chageTypeTouch.touchEnabled = !0, 
                    a.canChangeType = !0;
                });
            }
        }, i.prototype.backFunc = function(e) {
            soundModel.buttonClose(), this.hide();
        }, i.prototype.rankItemFunc = function(t) {
            var i = t.item;
            i.uid == playerModel.uid || 0 == i.uid || i.rank < 0 || (util.jzlog(">>>ljz/todo:排行榜的查询个人信息的时候返回404错误"), 
            HttpService.get(e.ServerMsg.MORE_PLAYER, "uid=" + playerModel.uid + "&fid=" + i.uid + "&checksum=" + i.checksum + "&algorithm=&showDetails=true", function(t) {
                util.jzlog(">>>>>>>>>>>>>显示设置信息界面.ljz/todo:这里应该要用到返回的数据用于显示"), hortor.WindowManager.showWindow(e.WindowType.WINDOW_PLAYERINFO, {
                    playerInfo: t,
                    from: Const.RankToIsland
                });
            }));
        }, i.prototype.deleteFriendRefreshList = function(e) {
            var t = e.data;
            if (t && t.delUid && 1 == this.lastIndex) {
                var i = _.findIndex(rankModel.getFriendsRankData(), function(e) {
                    return e.uid == t.delUid;
                }), n = rankModel.getFriendsRankData();
                _.isNumber(i) && i >= 0 && (n.splice(i, 1), rankModel.setFriendsRankData(n));
                var o = rankModel.getHandlerFriendsRankData();
                this.friendData.replaceAll(o), this.friendList.dataProviderRefreshed();
            }
        }, i.prototype.changeListType = function(e) {
            this.friendGroup.visible = !e, this.worldGroup.visible = e;
        }, i.prototype.updateSelfUI = function(e) {
            this.selfNode.data = e, this.rankNum.text = e.rank, this.starNum.text = e.crowns, 
            this.selfName.text = e.name, e.rank > 99999999 ? this.rankNum.size = 16 : e.rank > 9999999 ? this.rankNum.size = 18 : e.rank > 9999 ? this.rankNum.size = 20 : this.rankNum.size = 30;
        }, i.prototype.friendRankOnData = function() {
            this.friendList.dataProvider = this.friendData, this.friendList.itemRenderer = e.RankNode;
        }, i.prototype.worldRankOnData = function() {
            this.worldList.dataProvider = this.worldData, this.worldList.itemRenderer = e.RankNode;
        }, i.prototype.friendInitListView = function(e) {
            this.friendData.replaceAll(e), this.friendList.dataProviderRefreshed();
        }, i.prototype.worldInitListView = function(e) {
            this.worldData.replaceAll(e.slice(0, 30)), this.worldList.dataProviderRefreshed(), 
            this.rankNum.text = "未上榜", util.jzlog("data>>>", e);
            for (var t in e) 1 == e[t].self && (util.jzlog(">>>广播了。"), hortor.NotificationManager.dispatch(Const.updateSelfRankUI, e[t]));
        }, i;
    }(e.WindowBase);
    e.RankWindow = t, __reflect(t.prototype, "game.RankWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.oldRank = 0, e.newRank = 0, e.effect = null, e;
        }
        return __extends(i, t), i.prototype.onInit = function() {}, i.prototype.onOpen = function() {}, 
        i.prototype.onClose = function() {
            egret.Tween.removeTweens(this.upGroup);
        }, i.prototype.onData = function() {
            this.initView();
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.initView = function() {
            var t = this;
            if (this) {
                var i = this;
                if (util.setRemoteAvatar(i.headImg, e.ComFunc.headImg(playerModel.headImg)), this.headMask.source = 1 == playerModel.gender ? "common_img_portrait1" : "common_img_portrait0", 
                0 == rankModel.rankUpList.length) return void hortor.WindowManager.hideWindow(e.WindowType.WINDOW_RANKUP);
                i.oldRank = rankModel.rankUpList[0][0], i.newRank = rankModel.rankUpList[0][1];
                var n = i.oldRank - i.newRank;
                i.rankLabel.text = "0";
                var o = 0;
                i.upGroup.y = 63, i.upGroup.alpha = 0, egret.Tween.get(i.upGroup).to({
                    y: 10,
                    alpha: 1
                }, 500, egret.Ease.cubicIn).call(function() {
                    if (n > 100) for (var e = function(e) {
                        var a = egret.setTimeout(function() {
                            egret.clearTimeout(a), o += n / 100, i.rankLabel.text = "" + Math.round(o);
                        }, t, 10 * e);
                    }, a = 0; 100 > a; a++) e(a); else for (var r = function(e) {
                        var a = egret.setTimeout(function() {
                            egret.clearTimeout(a), o += 1, i.rankLabel.text = "" + o;
                        }, t, 1e3 / n * e);
                    }, a = 0; n > a; a++) r(a);
                }).wait(2e3).to({
                    y: -50,
                    alpha: 0
                }, 500, egret.Ease.cubicOut).call(function() {
                    if (egret.Tween.removeTweens(i.upGroup), rankModel.rankUpList.splice(0, 1), rankModel.rankUpList.length > 0) {
                        var n = rankModel.rankUpList[0][0], o = rankModel.rankUpList[rankModel.rankUpList.length - 1][1];
                        rankModel.rankUpList = [ [ n, o ] ], t && t.initView();
                    } else hortor.WindowManager.hideWindow(e.WindowType.WINDOW_RANKUP);
                });
            }
        }, i;
    }(e.WindowBase);
    e.RankUpWindow = t, __reflect(t.prototype, "game.RankUpWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(e) {
        function t() {
            var t = null !== e && e.apply(this, arguments) || this;
            return t.goodsData = null, t;
        }
        return __extends(t, e), t.prototype.onInit = function() {}, t.prototype.onData = function() {}, 
        t.prototype.prepare = function(e, t) {
            e(null);
        }, t;
    }(e.TabWindowBase);
    e.RealNameGiftWindow = t, __reflect(t.prototype, "game.RealNameGiftWindow");
}(game || (game = {}));

var RegressGiftProxy = function() {
    function e() {
        this.cdTime = 60, this.timer = null;
    }
    return e.getInstance = function() {
        return null == e._instance && (e._instance = new e()), e._instance;
    }, e.prototype.checkAddFriendnNum = function() {
        e.checkAddFriend = !0;
    }, e.checkAddFriend = !1, e.AddFriendRequestsLen = 0, e.AddFriendMin = 3, e.regressGiftData = null, 
    e.msgs = [ "很高兴认识你，以后一起玩！", "嗨！有缘哦！", "终于加上了你！以后和我一起玩哦", "以后一起玩，记得每天相互送能量哦！", "以后一起并肩作战，互相不打哦！", "以后缺啥东西和我说，和我换！", "咦？是你，好巧哦！", "缘分这个东西，从加上好友的那一刻就有了！" ], 
    e;
}();

__reflect(RegressGiftProxy.prototype, "RegressGiftProxy");

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return t.call(this) || this;
        }
        return __extends(i, t), i.prototype.addEvents = function() {
            this.closeBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.closeBtnFunc, this), 
            this.closeGroup.addEventListener(egret.TouchEvent.TOUCH_TAP, this.closeBtnFunc, this), 
            this.sureGroup.addEventListener(egret.TouchEvent.TOUCH_TAP, this.sureBtnFunc, this);
        }, i.prototype.onInit = function() {
            this.addEvents();
        }, i.prototype.onOpen = function() {
            util.setRemoteAvatar(this.headImg, chatModel.PersonInfo.headImg);
        }, i.prototype.onData = function() {}, i.prototype.sureBtnFunc = function() {
            soundModel.buttonOpen();
            var t = "很高兴认识你，以后一起玩！";
            RegressGiftProxy.msgs && RegressGiftProxy.msgs.length > 0 && (t = RegressGiftProxy.msgs[Math.floor(Math.random() * RegressGiftProxy.msgs.length)]), 
            HttpService.post(e.ServerMsg.CHAT_SEND_PRIVATE_MSG, "uid=" + playerModel.uid + "&fid=" + chatModel.PersonInfo.uid + "&content=" + t + "&chatSign=" + chatModel.PersonInfo.chatSign, function(t) {
                var i = hortor.WindowManager.getWindow(e.WindowType.WINDOW_PRIVATE_CHAT);
                i && i.addNewMsg(t.message), hortor.WindowManager.hideWindow(e.WindowType.WINDOW_REGRESSGIFT);
            });
        }, i.prototype.closeBtnFunc = function() {
            soundModel.buttonClose(), hortor.WindowManager.hideWindow(e.WindowType.WINDOW_REGRESSGIFT);
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i;
    }(e.WindowBase);
    e.RegressGiftWindow = t, __reflect(t.prototype, "game.RegressGiftWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i(e) {
            var i = t.call(this) || this;
            return i.descArr = [ "还记得我？", "很想你！", "快来一起玩", "欢迎归来", "别再走啦", "朋友一起玩", "抓紧赚钱", "抓紧建建筑" ], 
            i.index = 0, i.index = e, i.skinPath = "return/ReturnHeadItemSkin", i;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.once(egret.Event.REMOVED_FROM_STAGE, this.removeFunc, this), this.initNodeView();
        }, i.prototype.removeFunc = function() {
            egret.Tween.removeTweens(this.descGroup);
        }, i.prototype.initNodeView = function() {
            var t = this;
            egret.Tween.get(this.group).wait(200 * this.index).to({
                scaleX: 1,
                scaleY: 1
            }, 600, egret.Ease.backOut).call(function() {
                if (egret.Tween.removeTweens(t.group), t.randomText(), egret.Tween.get(t.descGroup, {
                    loop: !0
                }).wait(1300 * t.index).to({
                    scaleX: 1,
                    scaleY: 1
                }, 300, egret.Ease.backOut).wait(1e3).to({
                    scaleX: 0,
                    scaleY: 0
                }, 300).call(function() {
                    t.randomText();
                }).wait(6e3 - 1300 * t.index), 4 == t.index) {
                    var i = new e.Talker(), n = new e.TalkInfoData("船长大人，欢迎归来，游戏好友已经帮你重建家园，快和他们一起继续海盗之旅吧！");
                    i.talk(n, function() {
                        hortor.NotificationManager.dispatch(e.NotificationType.ISLAND_RETURN_OVER), HttpService.post(e.ServerMsg.REGRESS_SEND_BACK_MSG, {
                            uid: playerModel.uid
                        }, function(e) {}), console.log("回归发送世界聊天");
                    }, t);
                }
            }), util.setRemoteAvatar(this.headImg, islandModel.robotAvatars[this.index]);
        }, i.prototype.randomText = function() {
            this.descLabel.text = this.descArr[Math.floor(Math.random() * this.descArr.length)];
        }, i;
    }(e.ViewBase);
    e.ReturnHeadItem = t, __reflect(t.prototype, "game.ReturnHeadItem");
}(game || (game = {})), window.ReturnHeadItem = game.ReturnHeadItem;

var game;

!function(e) {
    var t = function(t) {
        function i(e) {
            var i = t.call(this) || this;
            return i.baseData = e, i.skinPath = "return/ReturnRewardItemSkin", i;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.addEventListener(egret.Event.REMOVED_FROM_STAGE, this.clearFunc, this), egret.Tween.get(this.lightImg, {
                loop: !0
            }).to({
                rotation: 360
            }, 1200), this.onData();
        }, i.prototype.clearFunc = function() {
            this.removeEventListener(egret.Event.REMOVED_FROM_STAGE, this.clearFunc, this), 
            egret.Tween.removeTweens(this.lightImg);
        }, i.prototype.onData = function() {
            var t = _.keys(this.baseData), i = _.values(this.baseData), n = "";
            switch (t[0]) {
              case "cookie":
                n = "popIcon_cookie";
                break;

              case "energy":
                n = "beach_prop11_0";
                break;

              case "money":
                n = "popIcon_money_2";
                break;

              case "miniShield":
                n = "popIcon_miniShield";
            }
            this.icon.source = e.ResourcePath.getItemIconByName(n), this.numL.text = e.ComFunc.formatNumber(i[0]);
        }, i;
    }(e.ViewBase);
    e.ReturnRewardItem = t, __reflect(t.prototype, "game.ReturnRewardItem");
}(game || (game = {})), window.ReturnRewardItem = game.ReturnRewardItem;

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            var t = this;
            this.confirmBtn.visible = !1, soundModel.playSound("userRecall_1.mp3"), this.arPlayer = new e.ArmaturePlayer("jxsk"), 
            this.arPlayer.x = 320, this.arPlayer.y = 640, this.mainGroup.addChild(this.arPlayer), 
            this.arPlayer.play("enter", 1, function() {
                t.confirmBtn.visible = !0, t.arPlayer.play("loop", 0);
            }), this.confirmBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.confirmBtnFunc, this);
        }, i.prototype.onData = function() {}, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.confirmBtnFunc = function() {
            var t = this;
            _.isNull(islandModel.robotAvatars) ? HttpService.get(e.ServerMsg.SHOW_DONATE, {
                uid: playerModel.uid
            }, function(i) {
                var n = e.ComFunc.getFreeEnergyData(i.friends, i.cp);
                islandModel.robotAvatars = [];
                for (var o = n.length > 5 ? 5 : n.length, a = 0; o > a; a++) islandModel.robotAvatars.push(n[a].headImg);
                t.toBuild();
            }) : this.toBuild();
        }, i.prototype.toBuild = function() {
            var t = this;
            hortor.WindowManager.hideWindow(e.WindowType.WINDOW_RETURN_SHOW, function() {
                t.arPlayer && (t.arPlayer.parent.removeChild(t.arPlayer), t.arPlayer.dispose()), 
                t.confirmBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, t.confirmBtnFunc, t), 
                hortor.NotificationManager.dispatch(e.NotificationType.WHEEL_TO_ISLAND);
            }, this, !0);
        }, i;
    }(hortor.Window);
    e.ReturnShowWindow = t, __reflect(t.prototype, "game.ReturnShowWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.confirmBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.closeBtnFunc, this), 
            this.setAwardItemGroup(playerModel.gainRecallReward || playerModel.gainReturnReward);
        }, i.prototype.onData = function() {}, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.setAwardItemGroup = function(e) {
            for (var t = this.awardGroup.numChildren - 1; t >= 0; t--) this.awardGroup.removeChildAt(t);
            e.miniShield > 0 && this.createAwardGroup({
                miniShield: e.miniShield
            }), e.energy > 0 && this.createAwardGroup({
                energy: e.energy
            }), e.money > 0 && this.createAwardGroup({
                money: e.money
            }), e.cookie > 0 && this.createAwardGroup({
                cookie: e.cookie
            });
        }, i.prototype.createAwardGroup = function(t) {
            var i = new e.ReturnRewardItem(t);
            this.awardGroup.addChild(i);
        }, i.prototype.closeBtnFunc = function() {
            var t = this;
            playerModel.gainRecallReward && (playerModel.money += playerModel.gainRecallReward.money, 
            hortor.WindowManager.showWindow(e.WindowType.WINDOW_REWARD, playerModel.gainRecallReward, null, null, function() {
                t.showRecall();
            })), playerModel.gainReturnReward && (playerModel.money += playerModel.gainReturnReward.money || 0, 
            playerModel.energy += playerModel.gainReturnReward.energy || 0, hortor.WindowManager.showWindow(e.WindowType.WINDOW_REWARD, playerModel.gainReturnReward, null, null, function() {
                t.showRecall();
            }));
        }, i.prototype.showRecall = function() {
            playerModel.gainRecallReward = null, playerModel.gainReturnReward = null, hortor.WindowManager.hideWindow(e.WindowType.WINDOW_RECALL, null, this, !0), 
            playerModel.leaveDays > Const.recallLeaveDays && !playerModel.gainIslandReward && (hortor.WindowManager.currentWindow = e.WindowType.WINDOW_RETURN_SHOW);
        }, i;
    }(hortor.Window);
    e.ReturnWindow = t, __reflect(t.prototype, "game.ReturnWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.effect = null, e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.rewardList = [], this.animationPlayer = new e.ArmaturePlayer("jiangli"), this.rewardGroup.addChild(this.animationPlayer), 
            this.animationPlayer.x = 200, this.animationPlayer.y = 230, this.getBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.getBtnFunc, this);
        }, i.prototype.show = function(e, i, n, o, a) {
            return void 0 === n && (n = null), void 0 === o && (o = null), void 0 === a && (a = null), 
            t.prototype.show.call(this, hortor.StageManager.getLayer(hortor.Layer.TIP), i, n, o, a);
        }, i.prototype.onData = function() {
            var t = this.data, i = this.data.hasOwnProperty("fly"), n = this.data.update;
            this.data.hasOwnProperty("reward") && (t = this.data.reward, playerModel.update(this.data)), 
            this.data.hasOwnProperty("rewards") && (t = this.data.rewards, playerModel.update(this.data));
            for (var o in t) {
                var a = -1 != o.indexOf("_vip"), r = t[o];
                o = o.split("_")[0];
                var s = this.hasItem(o);
                s && !a ? s.onGet(s.count + r, a) : (s = e.ItemManager.getItemInfo(o), s && (i && (s.flyName = this.getFlyUIName(o)), 
                s.onGet(r, a), this.rewardList.push(s))), n && (s.property ? playerModel[s.property] += r : hortor.Log.error(this, "property not found:" + s.type));
            }
            hortor.Log.log(this, "onData needShow:" + enterManager.available), enterManager.available || egret.callLater(this.hide, this);
        }, i.prototype.hasItem = function(e) {
            for (var t = 0; t < this.rewardList.length; t++) {
                var i = this.rewardList[t];
                if (i.type == e) return i;
            }
            return null;
        }, i.prototype.onOpen = function() {
            this.showReward();
        }, i.prototype.showReward = function() {
            var t = this;
            this.rewardList.length > 0 ? (this.animationPlayer.play("jinru", 1, function() {
                t.animationPlayer.play("xunhuan", 0);
            }), this.currentItem = this.rewardList.shift(), hortor.Log.log(this, "showReward:" + this.currentItem.type), 
            soundModel.playSound(e.SoundType.SOUND_WHEEL_GOT_ITEM), this.getBtn.touchEnabled = !1, 
            this.getBtn.alpha = 0, egret.Tween.get(this.getBtn).to({
                alpha: 1
            }, 500).call(function() {
                t.getBtn.touchEnabled = !0;
            }), egret.Tween.get(this.maskImage).to({
                alpha: 1
            }, 300).call(function() {
                egret.Tween.removeTweens(t.maskImage);
            }), this.icon.source = null, this.infoLabel.visible = !0, this.rewardGroup.visible = !0, 
            this.getBtn.visible = !0, this.iconGroup.visible = !0, this.icon.source = this.currentItem.icon, 
            this.infoLabel.text = this.currentItem.text, this.iconGroup.x = 200, this.iconGroup.y = 220, 
            this.iconGroup.scaleX = this.iconGroup.scaleY = .1, this.officialvipimg.visible = this.currentItem.isVip, 
            egret.Tween.get(this.iconGroup, {
                loop: !1
            }).to({
                scaleX: 1,
                scaleY: 1
            }, 800, egret.Ease.backOut), this.infoLabel.alpha = 0, egret.Tween.get(this.infoLabel, {
                loop: !1
            }).wait(400).to({
                alpha: 1
            }, 400, egret.Ease.backOut)) : this.hide();
        }, i.prototype.getBtnFunc = function() {
            this.getBtn.visible = !1, this.flyToPosition();
        }, i.prototype.flyToPosition = function() {
            var e = this, t = this.currentItem.flyName, i = t ? uiModel.getUI(t) : null;
            if (i) {
                this.infoLabel.visible = !1, this.rewardGroup.visible = !1;
                var n = egret.Tween.get(this.iconGroup), o = hortor.DisplayUtil.getGlobalBounds(i), a = this.mainGroup.globalToLocal(o.x + .5 * o.width, o.y + .5 * o.height);
                n.to({
                    x: a.x,
                    y: a.y,
                    scaleX: .1,
                    scaleY: .1
                }, 500, egret.Ease.quadOut).call(function() {
                    e.iconGroup.visible = !1, e.onFlyFinish();
                }), egret.Tween.get(this.maskImage).to({
                    alpha: 0
                }, 300).call(function() {
                    egret.Tween.removeTweens(e.maskImage);
                });
            } else this.onFlyFinish();
        }, i.prototype.onFlyFinish = function() {
            this.currentItem.flyName && -1 != this.currentItem.type.indexOf("annualCollect") && !playerModel.isAudit && hortor.WindowManager.showWindow(e.WindowType.WINDOW_ANNUALBOX, {}), 
            this.showReward();
        }, i.prototype.getFlyUIName = function(t) {
            var i = e.UINameType.actBtnGroup;
            switch (t) {
              case "privity":
                i = null;
            }
            return i;
        }, i;
    }(e.WindowBase);
    e.RewardWindow = t, __reflect(t.prototype, "game.RewardWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e.goodsData = null, e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.getBtnGroup.addEventListener(egret.TouchEvent.TOUCH_TAP, this.payBtnFunc, this);
        }, i.prototype.onData = function() {
            var t = this;
            this.payBtn.enabled = !1, this.setTimeLabel(), playerModel.speedGiftRemain && _.isNumber(playerModel.speedGiftRemain) && playerModel.speedGiftRemain > 0 && (null == this.timer && (this.timer = hortor.TimerManager.addClock(e.ClockType.RunningGiftWindow, 0, 1e3, -1), 
            this.timer.registCallBack(this, function() {}, this.timerFunc)), HttpService.get(e.ServerMsg.SHOP_LIST, "uid=" + playerModel.uid, function(e) {
                e.goods && (t.goodsData = _.find(e.goods.prop, function(e) {
                    return "speedGift" == e.goodsId;
                }), t.goodsData && (t.payBtn.enabled = _.isNumber(playerModel.speedGiftRemain) && playerModel.speedGiftRemain > 0));
            }));
        }, i.prototype.timerFunc = function() {
            this && this.setTimeLabel();
        }, i.prototype.setTimeLabel = function() {
            playerModel.speedGiftRemain -= 1, playerModel.speedGiftRemain && _.isNumber(playerModel.speedGiftRemain) && playerModel.speedGiftRemain > 0 ? this.timeLabel.text = "\b\b结束倒计时：" + e.ComFunc.formatTimeHMSNew(playerModel.speedGiftRemain) : (this.timeLabel.text = "活动结束", 
            this.payBtn.enabled = !1);
        }, i.prototype.payBtnFunc = function() {
            0 != this.payBtn.enabled && (util.jzlog("请求订单"), soundModel.buttonOpen(), this.goodsData && (playerModel.wantedName = "", 
            playerModel.wantedUid = 0, util.jzlog(">>>已经调用支付接口了"), e.PlatformManager.pay("speedGift")));
        }, i;
    }(e.TabWindowBase);
    e.RunningGiftWindow = t, __reflect(t.prototype, "game.RunningGiftWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e._canClose = !1, e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.maskImage.addEventListener(egret.TouchEvent.TOUCH_TAP, this.closeBtnFunc, this);
        }, i.prototype.onData = function() {
            var t = this;
            t.rankIcon.source = "sailing_rank_" + e.SailingShowData.lastGrade, t.rankTextImg.source = "sailing_text_" + e.SailingShowData.lastGrade, 
            t.rankLabel.text = "你的海盗团获得了第" + e.SailingShowData.lastRank + "名", t.maskImage.touchEnabled = !1, 
            t.mainBg.scaleX = 0, t.mainGroup.scaleX = t.mainGroup.scaleY = 0, t.rankLabel.alpha = 0, 
            t.tipsLabel.alpha = 0, egret.Tween.get(t.mainBg).to({
                scaleX: 1
            }, 300, egret.Ease.sineOut).call(function() {
                egret.Tween.removeTweens(t.mainBg), egret.Tween.get(t.mainGroup).to({
                    scaleX: 1,
                    scaleY: 1
                }, 300, egret.Ease.bounceOut).call(function() {
                    egret.Tween.removeTweens(t.mainGroup), egret.Tween.get(t.rankLabel).to({
                        alpha: 1
                    }, 300).call(function() {
                        egret.Tween.removeTweens(t.rankLabel), egret.Tween.get(t.tipsLabel).to({
                            alpha: 1
                        }, 300).call(function() {
                            egret.Tween.removeTweens(t.tipsLabel), t.maskImage.touchEnabled = !0;
                        });
                    });
                });
            });
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.initAction = function() {
            var t = this;
            egret.Tween.get(t.mainGroup).to({
                alpha: 0
            }, 300, egret.Ease.sineIn).call(function() {
                t.rankIcon.source = "sailing_rank_" + e.SailingShowData.grade, t.rankTextImg.source = "sailing_text_" + e.SailingShowData.grade, 
                t.mainGroup.scaleX = t.mainGroup.scaleY = 0, t.mainGroup.alpha = 1, egret.Tween.removeTweens(t.mainGroup), 
                egret.Tween.get(t.mainGroup).to({
                    scaleX: 1,
                    scaleY: 1
                }, 300, egret.Ease.bounceOut).call(function() {
                    egret.Tween.removeTweens(t.mainGroup);
                });
            }), egret.Tween.get(t.rankLabel).to({
                alpha: 0
            }, 300, egret.Ease.sineIn).call(function() {
                e.SailingShowData.lastGrade < e.SailingShowData.grade ? (soundModel.playSound(e.SoundType.SOUND_SAILING_OVER), 
                t.rankLabel.text = "成功晋级" + e.SailingCache.rankText[e.SailingShowData.grade - 1] + "联赛") : e.SailingShowData.lastGrade > e.SailingShowData.grade ? t.rankLabel.text = "降级至" + e.SailingCache.rankText[e.SailingShowData.grade - 1] + "联赛" : t.rankLabel.text = "保持在" + e.SailingCache.rankText[e.SailingShowData.grade - 1] + "联赛", 
                egret.Tween.removeTweens(t.rankLabel), egret.Tween.get(t.rankLabel).to({
                    alpha: 1
                }, 300).call(function() {
                    egret.Tween.removeTweens(t.rankLabel), t._canClose = !0, t.maskImage.touchEnabled = !0;
                });
            });
        }, i.prototype.closeBtnFunc = function() {
            soundModel.buttonClose();
            var t = this;
            t.maskImage.touchEnabled = !1, t._canClose ? (t.maskImage.touchEnabled = !1, hortor.NotificationManager.dispatch(e.NotificationType.SailingStartWave), 
            hortor.WindowManager.hideWindow(e.WindowType.WINDOW_SAILING_FINAL_REWARD)) : this.initAction();
        }, i;
    }(hortor.Window);
    e.SailingFinalRewardWindow = t, __reflect(t.prototype, "game.SailingFinalRewardWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.bg.addEventListener(egret.TouchEvent.TOUCH_TAP, this.closeBtnFunc, this);
            var t = this;
            t.nodeListData = new eui.ArrayCollection(), t.nodeList.dataProvider = t.nodeListData, 
            t.nodeList.itemRenderer = e.SailingMatchInfoNode;
        }, i.prototype.onData = function() {
            var e = this, t = [];
            for (var i in e.data.detail) t.push(e.data.detail[i]);
            e.nodeListData.source = t, e.mainGroup.scaleX = 0, e.bg.touchEnabled = !1, egret.Tween.get(e.mainGroup).to({
                scaleX: 1
            }, 200, egret.Ease.cubicOut).call(function() {
                egret.Tween.removeTweens(e.mainGroup), e.bg.touchEnabled = !0;
            });
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.closeBtnFunc = function() {
            soundModel.buttonClose(), hortor.WindowManager.hideWindow(e.WindowType.WINDOW_SAILING_MATCH_CUP);
        }, i;
    }(hortor.Window);
    e.SailingGuildCupInfoWindow = t, __reflect(t.prototype, "game.SailingGuildCupInfoWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.rankGroup.addEventListener(egret.TouchEvent.TOUCH_TAP, this.rankGroupFunc, this), 
            this.nodeGroup1.addEventListener(egret.TouchEvent.TOUCH_TAP, this.nodeGroup1Func, this), 
            this.helpBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.helpBtnFunc, this), 
            this.mainBg.addEventListener(egret.TouchEvent.TOUCH_TAP, this.mainBgFunc, this), 
            util.initBtnAnchorNew(this.helpBtn, 1.1, 1), this.panel.helpBtn.visible = !1;
            var t = this;
            t.nodeListData1 = new eui.ArrayCollection(), t.nodeList1.dataProvider = t.nodeListData1, 
            t.nodeList1.itemRenderer = e.SailingMatchInfoNode, t.nodeListData2 = new eui.ArrayCollection(), 
            t.nodeList2.dataProvider = t.nodeListData2, t.nodeList2.itemRenderer = e.SailingMatchInfoNode2;
        }, i.prototype.onClose = function() {
            hortor.NotificationManager.dispatch(e.NotificationType.SailingStartWave);
        }, i.prototype.onData = function() {
            var t = this, i = this;
            i.cupCountGroup.mask = new egret.Rectangle(0, 0, 570, 438), i.rankIcon.source = "sailing_rank_" + e.SailingShowData.grade, 
            i.rankTextImg.source = "sailing_text_" + e.SailingShowData.grade, i.tipsLabel.text = "" + i.data.rankInfo, 
            i.goldCount.text = "" + i.data.introduction.gold, i.sliverCount.text = "" + i.data.introduction.sliver, 
            i.copperCount.text = "" + i.data.introduction.copper;
            var n = [ [ 48, 779 ], [ 143, 738 ], [ 239, 699 ], [ 334, 658 ], [ 430, 619 ], [ 525, 579 ] ];
            i.lightMask.x = n[e.SailingShowData.grade - 1][0] - 20, i.lightMask.y = n[e.SailingShowData.grade - 1][1] - 65;
            var o = 1;
            1 == e.SailingShowData.grade ? o = .65 : 2 == e.SailingShowData.grade && (o = .825), 
            i.lightMask.scaleY = 0, egret.Tween.get(i.lightMask).wait(300).to({
                scaleY: o
            }, 300, egret.Ease.sineIn).call(function() {
                t && egret.Tween.removeTweens(i.lightMask);
            });
            var a = [];
            for (var r in i.data.detail) a.push(i.data.detail[r]);
            i.nodeListData1.source = a, i.nodeListData2.source = i.data.gradeConfs;
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.rankGroupFunc = function() {
            soundModel.buttonOpen();
            var e = this;
            e.nodeGroup2.visible && (e.nodeGroup2.visible = !1), e.mainBg.touchEnabled = !1, 
            egret.Tween.get(e.rankGroup).to({
                x: 570
            }, 200, egret.Ease.sineIn).call(function() {
                e.nodeGroup1.x = 570, e.nodeGroup1.visible = !0, egret.Tween.removeTweens(e.rankGroup), 
                egret.Tween.get(e.nodeGroup1).to({
                    x: 0
                }, 300, egret.Ease.sineIn).call(function() {
                    e.mainBg.touchEnabled = !0, egret.Tween.removeTweens(e.nodeGroup1);
                });
            });
        }, i.prototype.mainBgFunc = function() {
            var e = this;
            e.nodeGroup2.visible && (e.nodeGroup2.visible = !1), e.nodeGroup1.visible && this.nodeGroup1Func();
        }, i.prototype.nodeGroup1Func = function() {
            soundModel.buttonOpen();
            var e = this;
            e.mainBg.touchEnabled = !1, egret.Tween.get(e.nodeGroup1).to({
                x: 570
            }, 300, egret.Ease.sineOut).call(function() {
                e.nodeGroup1.visible = !1, egret.Tween.removeTweens(e.nodeGroup1), egret.Tween.get(e.rankGroup).to({
                    x: 432
                }, 200, egret.Ease.sineOut).call(function() {
                    e.mainBg.touchEnabled = !0, egret.Tween.removeTweens(e.rankGroup);
                });
            });
        }, i.prototype.helpBtnFunc = function() {
            soundModel.buttonOpen();
            var e = this;
            e.nodeGroup2.visible ? e.nodeGroup2.visible = !1 : (e.nodeGroup2.scaleX = e.nodeGroup2.scaleY = 0, 
            e.nodeGroup2.visible = !0, e.mainBg.touchEnabled = !1, egret.Tween.get(e.nodeGroup2).to({
                scaleX: 1,
                scaleY: 1
            }, 200, egret.Ease.backOut).call(function() {
                e.mainBg.touchEnabled = !0, egret.Tween.removeTweens(e.nodeGroup2);
            }));
        }, i;
    }(hortor.Window);
    e.SailingMatchInfoWindow = t, __reflect(t.prototype, "game.SailingMatchInfoWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.effect = null, e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.bg.addEventListener(egret.TouchEvent.TOUCH_TAP, this.closeBtnFunc, this), this.lookBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.lookBtnFunc, this);
        }, i.prototype.onData = function() {
            var t = this;
            t._data = this.data.data, t._pos = this.data.pos, t.guildName.text = "" + t._data.name, 
            t.guildId.text = "ID:" + t._data.gid;
            var i = e.GuildData.signRewards, n = t._data.lastExp, o = i[1].needGuildExp, a = 1;
            if (n >= i[i.length - 1].needGuildExp) a = i.length; else for (var r = 1; r < i.length; r++) if (n < i[r].needGuildExp) {
                a = r, o = i[r].needGuildExp;
                break;
            }
            t.guildLevel.text = "活跃等级:" + a, t._pos.y > 519.5 ? (t.alertBg1.y = 112, t.mainGroup.anchorOffsetY = 134, 
            t.mainGroup.y = t._pos.y + 20) : (t.alertBg1.y = 12, t.mainGroup.anchorOffsetY = 30, 
            t.mainGroup.y = t._pos.y + 20), t.mainGroup.x = t._pos.x + 35, t.mainGroup.scaleX = t.mainGroup.scaleY = .1, 
            egret.Tween.get(t.mainGroup).to({
                scaleX: 1,
                scaleY: 1
            }, 300, egret.Ease.backOut);
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.lookBtnFunc = function() {
            var t = this;
            egret.Tween.removeTweens(this.mainGroup), hortor.WindowManager.hideWindow(e.WindowType.WINDOW_SAILING_MATCH_OPERATION), 
            HttpService.get(e.ServerMsg.RACE_TROPHY_DETAIL, {
                uid: playerModel.uid,
                gid: t._data.gid
            }, function(t) {
                hortor.WindowManager.showWindow(e.WindowType.WINDOW_SAILING_MATCH_CUP, t);
            });
        }, i.prototype.closeBtnFunc = function() {
            soundModel.buttonClose(), egret.Tween.removeTweens(this.mainGroup), hortor.WindowManager.hideWindow(e.WindowType.WINDOW_SAILING_MATCH_OPERATION);
        }, i;
    }(hortor.Window);
    e.SailingMatchOperationWindow = t, __reflect(t.prototype, "game.SailingMatchOperationWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e.selectedIndex = 0, e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.baseScroll.viewport = this.baseList, this.tabBar.addEventListener(eui.ItemTapEvent.ITEM_TAP, this.tabBarFunc, this), 
            this.baseList.addEventListener(eui.ItemTapEvent.ITEM_TAP, this.listItemFunc, this), 
            this.panel.helpBtn.visible = !1;
            var t = this;
            t.baseData = new eui.ArrayCollection(), t.baseList.dataProvider = t.baseData, t.baseList.itemRenderer = e.SailingRankNode;
        }, i.prototype.onData = function() {
            var t = e.SailingShowData.openRemain > 0 ? e.SailingShowData.lastGrade : e.SailingShowData.grade;
            this.selectedIndex = t - 1, this.arrIcon.x = 62 + 91 * this.selectedIndex, this.tabBar.selectedIndex = this.selectedIndex, 
            this.initRankList();
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.onClose = function() {
            hortor.NotificationManager.dispatch(e.NotificationType.SailingStartWave);
        }, i.prototype.initRankList = function() {
            var t = this, i = e.SailingShowData.openRemain > 0 ? e.SailingShowData.lastGrade : e.SailingShowData.grade;
            t.emptyLabel.visible = 0 == e.SailingRankData.guilds.length, e.SailingRankData.ownerGuild ? (t.rankEmptyLabel.visible = !1, 
            t.selfGroup.visible = !0, t.selfRankLabel.text = "我的海盗团排名：" + e.SailingRankData.ownerGuild.rank, 
            t.scoreLabel.text = "" + e.SailingRankData.ownerGuild.score) : (t.rankEmptyLabel.visible = !0, 
            i == t.selectedIndex + 1 ? t.rankEmptyLabel.text = "你的海盗团目前没有排名" : t.rankEmptyLabel.text = "您的海盗团未处于" + e.SailingCache.rankText[t.selectedIndex] + "联赛", 
            t.selfGroup.visible = !1), t.baseData.source = e.SailingRankData.guilds;
        }, i.prototype.listItemFunc = function(t) {
            var i = t.item;
            HttpService.get(e.ServerMsg.GUILD_SHOW, {
                uid: playerModel.uid,
                gid: i.gid
            }, function(t) {
                hortor.WindowManager.showWindow(e.WindowType.WINDOW_GUILD_MEMBERLIST, {
                    type: e.GuildProxy.FromMember,
                    guildData: t
                });
            });
        }, i.prototype.tabBarFunc = function(t) {
            var i = this;
            soundModel.buttonOpen();
            var n = this;
            n.selectedIndex != t.itemIndex && (n.arrIcon.x = 62 + 91 * t.itemIndex, n.selectedIndex = t.itemIndex, 
            HttpService.get(e.ServerMsg.RACE_RANK, {
                uid: playerModel.uid,
                idx: n.selectedIndex + 1
            }, function(t) {
                e.SailingRankData = t, i.initRankList();
            }));
        }, i;
    }(hortor.Window);
    e.SailingRankWindow = t, __reflect(t.prototype, "game.SailingRankWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.effect = null, e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.bg.addEventListener(egret.TouchEvent.TOUCH_TAP, this.closeBtnFunc, this);
        }, i.prototype.onData = function() {
            var t = this;
            t._data = this.data.data, t._pos = this.data.pos, t._data.rewards.guildCoin ? (t.icon1.source = e.ItemManager.getItemInfo("guildCoin").icon, 
            t.group1.visible = t.group1.includeInLayout = !0, t.label1.text = "海盗币：" + t._data.rewards.guildCoin) : t.group1.visible = t.group1.includeInLayout = !1, 
            t._data.rewards.pirateGift ? (t.icon2.source = e.ItemManager.getItemInfo("pirateGift").icon, 
            t.group2.visible = t.group2.includeInLayout = !0, t.label2.text = "海盗宝箱：" + t._data.rewards.pirateGift) : t.group2.visible = t.group2.includeInLayout = !1, 
            t._data.rewards.energyGift ? (t.icon3.source = e.ItemManager.getItemInfo("energyGift").icon, 
            t.group3.visible = t.group3.includeInLayout = !0, t.label3.text = "能量宝箱：" + t._data.rewards.energyGift) : t.group3.visible = t.group3.includeInLayout = !1, 
            t._data.rewards.money ? (t.icon4.source = e.ItemManager.getItemInfo("money").icon, 
            t.group4.visible = t.group4.includeInLayout = !0, t.label4.text = "金币：" + e.ComFunc.formatNumber(t._data.rewards.money)) : t.group4.visible = t.group4.includeInLayout = !1, 
            t._data.rewards.energy ? (t.icon5.source = e.ItemManager.getItemInfo("energy").icon, 
            t.group5.visible = t.group5.includeInLayout = !0, t.label5.text = "能量：" + t._data.rewards.energy) : t.group5.visible = t.group5.includeInLayout = !1, 
            t._pos.x > 320 ? (t.alertBg1.x = 180, t.mainGroup.anchorOffsetX = 190, t.mainGroup.anchorOffsetY = 219, 
            t.mainGroup.x = t._pos.x + 45) : (t.alertBg1.x = 20, t.mainGroup.anchorOffsetX = 30, 
            t.mainGroup.anchorOffsetY = 219, t.mainGroup.x = t._pos.x + 43), t.mainGroup.y = t._pos.y + 40, 
            t.mainGroup.scaleX = t.mainGroup.scaleY = .1, egret.Tween.get(t.mainGroup).to({
                scaleX: 1,
                scaleY: 1
            }, 300, egret.Ease.backOut);
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.closeBtnFunc = function() {
            soundModel.buttonClose(), hortor.WindowManager.hideWindow(e.WindowType.WINDOW_SAILING_REWARD_OPERATION);
        }, i;
    }(hortor.Window);
    e.SailingRewardOperationWindow = t, __reflect(t.prototype, "game.SailingRewardOperationWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.scoreBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.scoreBtnFunc, this), 
            this.rewardBox.addEventListener(egret.TouchEvent.TOUCH_TAP, this.rewardBoxFunc, this), 
            hortor.NotificationManager.add(e.NotificationType.SailingRefreshRewardRedPoint, this.refreshRedPoint, this), 
            this.panel.helpBtn.visible = !1;
            var t = this;
            t.baseData = new eui.ArrayCollection(), t.baseList.dataProvider = t.baseData, t.baseList.itemRenderer = e.SailingRewardNode;
        }, i.prototype.onData = function() {
            var e = this;
            e.baseData.source = this.data.scoreConfs;
            for (var t = 0; t < this.data.gradeConfs.length; t++) e["bitmapLabel" + t].text = "x" + this.data.gradeConfs[t];
            e.scoreLabel.text = "" + this.data.guildScore, this.refreshRedPoint();
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.onClose = function() {
            hortor.NotificationManager.dispatch(e.NotificationType.SailingStartWave);
        }, i.prototype.refreshRedPoint = function() {
            e.GuildCache.GuildSailingRewardRedPoint = !1;
            for (var t = e.SailingShowData.openRemain > 0 ? e.SailingShowData.lastGrade : e.SailingShowData.grade, i = 0; i < this.data.scoreConfs.length; i++) if (e.SailingShowData.hasQualified && t >= this.data.scoreConfs[i].rankType && e.SailingCache.guildScore >= this.data.scoreConfs[i].score && !this.data.scoreConfs[i].gotReward) {
                e.GuildCache.GuildSailingRewardRedPoint = !0;
                break;
            }
            e.GuildCache.GuildSailingRewardRedPoint = e.GuildCache.GuildSailingRewardRedPoint || this.data.boxOpenRemain > 0, 
            EventCenter.sendEvent(EventConst.refreshGuildRedPoint), gateModel.updateGate(e.ScreenType.GUILD_SCREEN), 
            hortor.NotificationManager.dispatch(e.NotificationType.SailingRefreshRedPoint);
        }, i.prototype.scoreBtnFunc = function() {
            HttpService.get(e.ServerMsg.RACE_CONTRIBUTIONS, {
                uid: playerModel.uid
            }, function(t) {
                hortor.WindowManager.showWindow(e.WindowType.WINDOW_SAILING_SCORE_RANK, {
                    data: t,
                    type: "normal"
                });
            });
        }, i.prototype.rewardBoxFunc = function() {
            hortor.WindowManager.showWindow(e.WindowType.WINDOW_SAILING_WHEEL, this.data), hortor.WindowManager.hideWindow(e.WindowType.WINDOW_SAILING_REWARD);
        }, i;
    }(hortor.Window);
    e.SailingRewardWindow = t, __reflect(t.prototype, "game.SailingRewardWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e._type = "normal", e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.baseScroller.viewport = this.baseList, this.panel.helpBtn.visible = !1;
            var t = this;
            t.baseData = new eui.ArrayCollection(), t.baseList.dataProvider = t.baseData, t.baseList.itemRenderer = e.SailingScoreRankNode;
        }, i.prototype.onData = function() {
            var e = this;
            e._type = e.data.type;
            var t = "normal" == e._type;
            e.title.source = t ? "sailing_json.sailing_txt_jflb" : "sailing_json.sailing_txt_gxlb", 
            e.textGroup.visible = t, e.baseScroller.y = e.baseList.y = t ? 128 : 102, e.baseScroller.height = e.baseList.height = t ? 784 : 810, 
            e.title.source = t ? "sailing_json.sailing_txt_jflb" : "sailing_json.sailing_txt_gxlb", 
            e.tipsLabel.text = t ? "还没有人获得积分...加油哦!" : "还没有人获得贡献...加油哦!";
            var i = _.sortBy(this.data.data.members, "score").reverse();
            e.baseData.source = i, e.emptyGroup.visible = i.length < 1;
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i;
    }(hortor.Window);
    e.SailingScoreRankWindow = t, __reflect(t.prototype, "game.SailingScoreRankWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e.boatPosArray = [], e._distance = 0, e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            var t = this;
            t.returnBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.closeBtnFunc, this), 
            t.rewardBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.rewardBtnFunc, this), 
            t.rankBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.rankBtnFunc, this), 
            t.helpBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.helpBtnFunc, this), 
            t.taskBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.taskBtnFunc, this), 
            t.depotBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.depotBtnFunc, this), 
            t.matchGroup.addEventListener(egret.TouchEvent.TOUCH_TAP, this.matchGroupFunc, this), 
            t.boatScroll.addEventListener(egret.Event.CHANGE, this.boatScrollChange, this), 
            EventCenter.addEventListener(EventConst.sailingMatchAdjustBoat, this.changeScrollH, this), 
            hortor.NotificationManager.add(e.NotificationType.SailingStartWave, this.startWave, this), 
            hortor.NotificationManager.add(e.NotificationType.SailingRefreshRedPoint, this.initRedPoint, this), 
            hortor.NotificationManager.add(e.NotificationType.SailingScoreChange, this.scoreChange, this), 
            util.initBtnAnchorNew(t.taskBtn, 1.05, 1), util.initBtnAnchorNew(t.matchGroup, 1.05, 1), 
            gateModel.isWxgame && (this.helpBtn.y += 100, this.rankBtn.y += 100, this.rewardBtn.y += 100, 
            this.depotBtn.y += 100, this.rewardRedpoint.y += 100);
        }, i.prototype.onData = function() {
            this.boatPosArray = [], this._distance = 0;
            var t = egret.setTimeout(function() {
                egret.clearTimeout(t), soundModel.playSound(e.SoundType.SOUND_SAILING_ROW);
            }, this, 300);
            if (this.initBoatNode(), this.initTimeLabel(), this.initRedPoint(), e.SailingShowData.firstEnd && e.SailingShowData.lastRank > 0) var i = egret.setTimeout(function() {
                egret.clearTimeout(i), hortor.WindowManager.currentWindow = e.WindowType.WINDOW_SAILING_FINAL_REWARD;
            }, this, 500);
            this.matchRankIcon.source = "sailing_rank_" + e.SailingShowData.grade, this.matchRankText.source = "sailing_text_" + e.SailingShowData.grade, 
            this.waveTimer || (this.waveTimer = new egret.Timer(100 / 3), this.waveTimer.addEventListener(egret.TimerEvent.TIMER, this.waveTimerFunc, this), 
            this.waveTimer.start()), this.taskGroup.y += e.GameConfig.stageHeight - 1039;
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.initBoatNode = function() {
            e.SailingShowData.guilds = _.sortBy(e.SailingShowData.guilds, function(e) {
                return e.gid != playerModel.guild.gid;
            });
            var t = util.cloneArr(e.SailingShowData.guilds);
            for (var i in e.SailingShowData.scores) for (var n = 0; n < t.length; n++) if (parseInt(i) == t[n].gid) {
                t[n].score = e.SailingShowData.scores[i];
                break;
            }
            t = _.sortBy(t, "gid").reverse(), t = _.sortBy(t, "updateTime").reverse(), t = _.sortBy(t, "score"), 
            t.reverse();
            for (var o = [], a = 0; a < e.SailingShowData.guilds.length; a++) {
                var r = _.findIndex(t, function(t) {
                    return t.gid == e.SailingShowData.guilds[a].gid;
                });
                o.push({
                    id: a + 1,
                    rank: r + 1,
                    lastExp: e.SailingShowData.guilds[a].lastExp,
                    gid: e.SailingShowData.guilds[a].gid,
                    name: e.SailingShowData.guilds[a].name,
                    icon: e.SailingShowData.guilds[a].icon,
                    score: e.SailingShowData.guilds[a].score,
                    updateTime: e.SailingShowData.guilds[a].updateTime
                });
            }
            var s = [], l = [ 20, 89, 160, 232, 307, 383, 462, 543, 625, 710 ];
            this.boatGroup.removeChildren();
            for (var a = 0; a < o.length; a++) {
                var d = new e.SailingMatchNode();
                d.initData(o[a], this.boatScroll.viewport.scrollH), this.boatGroup.addChildAt(d, 0), 
                d.x = 70, d.y = l[9 - a] + 22, o[a].gid && s.push(o[a]), this.boatPosArray.push(d.getBoatPosition());
            }
            var u = this.boatPosArray[0] - 320 + .5 * e.SailingProxy.boatSize;
            this.boatScroll.viewport.scrollH = 0 > u ? 0 : u > 1920 ? 1920 : u, this._distance = this.boatScroll.viewport.scrollH, 
            this.waveGroup.x = -230 - this._distance;
            for (var a = 0; a < this.boatPosArray.length; a++) {
                var h = this.boatGroup.getChildAt(this.boatPosArray.length - 1 - a);
                h.initCupGroup(this.boatScroll.viewport.scrollH);
            }
            this.initGuildTitleNode(s);
            for (var c = 0; c < this.boatPosArray.length; c++) {
                var p = o[c].score;
                o[c].score = e.SailingShowData.scores[o[c].gid] ? e.SailingShowData.scores[o[c].gid] : 0;
                var h = this.boatGroup.getChildAt(this.boatPosArray.length - 1 - c);
                h.toNewPosition(o[c], p);
            }
        }, i.prototype.initGuildTitleNode = function(t) {
            var i = [ 34, 103, 174, 247, 322, 399, 478, 559, 642, 727 ];
            this.guildTitleGroup.removeChildren();
            for (var n = 0; n < t.length; n++) {
                var o = new e.SailingGuildTitleNode();
                o.intiData(t[n]), this.guildTitleGroup.addChild(o), o.anchorOffsetX = o.width / 2, 
                o.anchorOffsetY = o.height / 2, o.x = o.width / 2 + 5, o.y = i[9 - n];
            }
        }, i.prototype.initTimeLabel = function() {
            if (e.SailingShowData.openRemain > 0) {
                this.endTimeGroup.visible = !1, this.startTimeGroup.visible = !0;
                for (var t = e.ComFunc.getTimeString(e.SailingShowData.openRemain), i = 0; 6 > i; i++) this["startTimeLabel" + (5 - i)].text = "" + (t.charAt(t.length - 1 - i) || 0);
            } else {
                this.endTimeGroup.visible = !0, this.startTimeGroup.visible = !1;
                for (var n = e.ComFunc.getTimeString(e.SailingShowData.closeRemain), i = 0; 7 > i; i++) this["timeLabel" + (6 - i)].text = "" + (n.charAt(n.length - 1 - i) || 0);
            }
            this.timer || (this.timer = new egret.Timer(1e3), this.timer.addEventListener(egret.TimerEvent.TIMER, this.timerFunc, this), 
            this.timer.start());
        }, i.prototype.timerFunc = function() {
            var t = this;
            if (e.SailingShowData.openRemain > 0) {
                e.SailingShowData.openRemain--;
                for (var i = e.ComFunc.getTimeString(e.SailingShowData.openRemain), n = 0; 6 > n; n++) this["startTimeLabel" + (5 - n)].text = "" + (i.charAt(i.length - 1 - n) || 0);
                if (0 == e.SailingShowData.openRemain) var o = egret.setTimeout(function() {
                    t.endTimeGroup.visible = !0, t.startTimeGroup.visible = !1, egret.clearTimeout(o), 
                    HttpService.get(e.ServerMsg.RACE_SHOW, {
                        uid: playerModel.uid,
                        version: 1
                    }, function(i) {
                        e.SailingCache.isoWeek = i.isoWeek || 0, e.SailingShowData = i, e.GuildCache.GuildSailingRewardRedPoint = !1, 
                        t.clearData(), t.initBoatNode(), t.initRedPoint();
                    });
                }, this, 1e3);
            } else {
                e.SailingShowData.closeRemain--;
                for (var a = e.ComFunc.getTimeString(e.SailingShowData.closeRemain), n = 0; 7 > n; n++) this["timeLabel" + (6 - n)].text = "" + (a.charAt(a.length - 1 - n) || 0);
                if (0 == e.SailingShowData.closeRemain) var r = egret.setTimeout(function() {
                    egret.clearTimeout(r), t.endTimeGroup.visible = !1, t.startTimeGroup.visible = !0, 
                    HttpService.get(e.ServerMsg.RACE_SHOW, {
                        uid: playerModel.uid,
                        version: 1
                    }, function(i) {
                        e.SailingCache.isoWeek = i.isoWeek || 0, e.SailingShowData = i, e.SailingShowData.firstEnd && e.SailingShowData.lastRank > 0 && (hortor.WindowManager.currentWindow = e.WindowType.WINDOW_SAILING_FINAL_REWARD, 
                        t.stopWave()), t.clearData(), t.initBoatNode(), t.initRedPoint(), t.matchRankIcon.source = "sailing_rank_" + e.SailingShowData.grade, 
                        t.matchRankText.source = "sailing_text_" + e.SailingShowData.grade;
                    });
                }, this, 1e3);
            }
        }, i.prototype.clearData = function() {
            this.boatPosArray = [], this.boatGroup && this.boatGroup.removeChildren(), this.guildTitleGroup && this.guildTitleGroup.removeChildren();
        }, i.prototype.initRedPoint = function() {
            var t = this;
            t.matchRedPoint.visible = e.GuildCache.GuildSailingFirstOpenPoint, t.rewardRedpoint.visible = e.GuildCache.GuildSailingRewardRedPoint, 
            t.taskRedpoint.visible = e.GuildCache.GuildSailingRedPoint, EventCenter.sendEvent(EventConst.refreshGuildRedPoint);
        }, i.prototype.waveTimerFunc = function(e) {
            this.wave0.x -= .5, this.wave1.x -= .5, this.wave2.x -= .5, this.wave3.x -= .5, 
            this.wave4.x -= .5, this.wave0.x < -800 && (this.wave0.x = 3200), this.wave1.x < -800 && (this.wave1.x = 3200), 
            this.wave2.x < -800 && (this.wave2.x = 3200), this.wave3.x < -800 && (this.wave3.x = 3200), 
            this.wave4.x < -800 && (this.wave4.x = 3200);
        }, i.prototype.startWave = function() {
            var t = this;
            e.SailingShowData.openRemain > 0 && (t.startTimeGroup.visible = !0), t.waveTimer && !t.waveTimer.running && t.waveTimer.start(), 
            EventCenter.sendEvent(EventConst.SailingreStartAction);
        }, i.prototype.stopWave = function() {
            var e = this;
            e.startTimeGroup.visible = !1, e.waveTimer && e.waveTimer.running && e.waveTimer.stop(), 
            EventCenter.sendEvent(EventConst.SailingStopAction);
        }, i.prototype.closeBtnFunc = function() {
            hortor.ScreenManager.back(), this.waveTimer && (this.waveTimer.removeEventListener(egret.TimerEvent.TIMER, this.waveTimerFunc, this), 
            this.waveTimer.stop(), this.waveTimer = null), this.timer && (this.timer.removeEventListener(egret.TimerEvent.TIMER, this.waveTimerFunc, this), 
            this.timer.stop(), this.timer = null);
        }, i.prototype.rewardBtnFunc = function() {
            var t = this;
            return e.SailingShowData.hasQualified ? void HttpService.get(e.ServerMsg.RACE_REWARD_DETAIL, {
                uid: playerModel.uid
            }, function(i) {
                e.SailingCache.guildScore = i.guildScore, hortor.WindowManager.showWindow(e.WindowType.WINDOW_SAILING_REWARD, i), 
                t.stopWave();
            }) : void hortor.TipManager.bubble("本期竞赛已开启，请等待下期竞赛");
        }, i.prototype.rankBtnFunc = function() {
            var t = this, i = e.SailingShowData.openRemain > 0 ? e.SailingShowData.lastGrade : e.SailingShowData.grade;
            HttpService.get(e.ServerMsg.RACE_RANK, {
                uid: playerModel.uid,
                idx: i
            }, function(i) {
                e.SailingRankData = i, hortor.WindowManager.currentWindow = e.WindowType.WINDOW_SAILING_RANK, 
                t.stopWave();
            });
        }, i.prototype.helpBtnFunc = function() {
            this.stopWave();
            var t = HelpTextLabel.getSailingTextLabel();
            e.ComFunc.openHelpPanel(t);
        }, i.prototype.taskBtnFunc = function() {
            var t = this;
            return soundModel.buttonOpen(), e.SailingShowData.openRemain > 0 ? void hortor.TipManager.bubble("请耐心等待竞赛开启") : e.SailingShowData.hasQualified ? void HttpService.get(e.ServerMsg.RACE_TASK_DETAIL, {
                uid: playerModel.uid,
                version: 1
            }, function(i) {
                for (var n = 0; n < i.boards.length; n++) i.boards[n].idx = n;
                hortor.WindowManager.showWindow(e.WindowType.WINDOW_SAILING_TASK, i), t.stopWave();
            }) : void hortor.TipManager.bubble("本期竞赛已开启，请等待下期竞赛");
        }, i.prototype.depotBtnFunc = function() {
            var t = this;
            return e.SailingShowData.grade < 5 ? void hortor.TipManager.bubble("达到钻石联赛开启") : e.SailingShowData.openRemain > 0 ? void hortor.TipManager.bubble("请耐心等待竞赛开启") : e.SailingShowData.hasQualified ? void HttpService.get(e.ServerMsg.RACE_SUPPLY_DETAIL, {
                uid: playerModel.uid
            }, function(i) {
                e.SailingDepotData = i, hortor.WindowManager.currentWindow = e.WindowType.WINDOW_SAILING_DEPOT, 
                t.stopWave();
            }) : void hortor.TipManager.bubble("本期竞赛已开启，请等待下期竞赛");
        }, i.prototype.matchGroupFunc = function() {
            var t = this;
            soundModel.buttonOpen();
            var i = this;
            e.GuildCache.GuildSailingFirstOpenPoint = !1, i.matchRedPoint.visible = e.GuildCache.GuildSailingFirstOpenPoint, 
            EventCenter.sendEvent(EventConst.refreshGuildRedPoint), gateModel.updateGate(e.ScreenType.GUILD_SCREEN), 
            HttpService.get(e.ServerMsg.RACE_TROPHY_DETAIL, {
                uid: playerModel.uid,
                gid: playerModel.guild.gid
            }, function(i) {
                t.stopWave(), hortor.WindowManager.showWindow(e.WindowType.WINDOW_SAILING_MATCH_INFO, i);
            });
        }, i.prototype.boatScrollChange = function(e) {
            var t = this;
            t._distance = t.boatScroll.viewport.scrollH, t.waveGroup.x = -230 - t._distance;
            for (var i = 0; i < t.boatPosArray.length; i++) {
                var n = t.boatGroup.getChildAt(t.boatPosArray.length - 1 - i);
                n.initCupGroup(t.boatScroll.viewport.scrollH);
            }
        }, i.prototype.changeScrollH = function(e) {
            var t = this;
            egret.Tween.removeTweens(t.boatScroll.viewport), t.boatScroll.stopAnimation(), e.data != t.boatScroll.viewport.scrollH && egret.Tween.get(t.boatScroll.viewport, {
                onChange: this.boatScrollChange.bind(this)
            }).to({
                scrollH: e.data
            }, 800, egret.Ease.quadInOut).call(function() {
                egret.Tween.removeTweens(t.boatScroll.viewport);
            });
        }, i.prototype.scoreChange = function() {
            this.clearData(), this.initBoatNode(), this.initRedPoint();
        }, i;
    }(hortor.Screen);
    e.SailingScreen = t, __reflect(t.prototype, "game.SailingScreen");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.closeBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.closeBtnFunc, this), 
            this.okBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.confirmBtnFunc, this);
        }, i.prototype.onData = function() {
            var t = this;
            t.propIcon.source = e.ResourcePath.getItemIconByName("popIcon_sailing_depot" + this.data), 
            t.propIcon.source = e.ResourcePath.getItemIconByName("popIcon_sailing_depot" + this.data), 
            t.title.source = 1 == this.data ? "sailing_txt_hfjz" : "sailing_txt_shjz", t.coinNum.text = "" + e.SailingDepotData.shopConfs[this.data - 1].price, 
            2 == this.data ? (t.desc.text = "" + e.SailingDepotData.shopConfs[this.data - 1].itmeDescribe, 
            t.okBtn.enabled = e.SailingDepotData.supplyCoin >= e.SailingDepotData.shopConfs[this.data - 1].price && e.SailingDepotData.tearupRecoverCount < e.SailingDepotData.shopConfs[this.data - 1].limit, 
            t.hasOwnLabel.text = "已兑换：" + e.SailingDepotData.tearupRecoverCount) : (t.desc.text = e.SailingDepotData.shopConfs[this.data - 1].itmeDescribe + "\n\n本期竞赛可恢复任务次数：" + e.SailingDepotData.taskFailedCount, 
            t.okBtn.enabled = e.SailingDepotData.supplyCoin >= e.SailingDepotData.shopConfs[this.data - 1].price && e.SailingDepotData.taskFailedCount > 0 && e.SailingDepotData.taskRecoverCount < e.SailingDepotData.shopConfs[this.data - 1].limit, 
            t.hasOwnLabel.text = "已兑换：" + e.SailingDepotData.taskRecoverCount);
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.confirmBtnFunc = function() {
            var t = this;
            t.okBtn.touchEnabled = !1, HttpService.post(e.ServerMsg.RACE_SUPPLY_BUY, {
                uid: playerModel.uid,
                id: this.data
            }, function(i) {
                t.okBtn.touchEnabled = !0, e.SailingDepotData.taskFailedCount = i.taskFailedCount, 
                e.SailingDepotData.supplyCoin = i.supplyCoin, e.SailingDepotData.taskRecoverCount = i.taskRecoverCount, 
                e.SailingDepotData.tearupRecoverCount = i.tearupRecoverCount, hortor.NotificationManager.dispatch(e.NotificationType.SailingDepotChange, i.supplyCoin), 
                hortor.TipManager.bubble("兑换成功"), hortor.WindowManager.hideWindow(e.WindowType.WINDOW_SAILING_DEPOT_INFO);
            }, function() {
                t.okBtn.touchEnabled = !0;
            }, this);
        }, i.prototype.closeBtnFunc = function() {
            hortor.NotificationManager.dispatch(e.NotificationType.SailingStartWave), hortor.WindowManager.hideWindow(e.WindowType.WINDOW_SAILING_DEPOT_INFO);
        }, i;
    }(hortor.Window);
    e.SailingTaskDepotInfoWindow = t, __reflect(t.prototype, "game.SailingTaskDepotInfoWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.showBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.showBtnFunc, this), 
            this.payBtn1.addEventListener(egret.TouchEvent.TOUCH_TAP, this.payBtn1Func, this), 
            this.payImg1.addEventListener(egret.TouchEvent.TOUCH_TAP, this.payBtn1Func, this), 
            this.payBtn2.addEventListener(egret.TouchEvent.TOUCH_TAP, this.payBtn2Func, this), 
            this.payImg2.addEventListener(egret.TouchEvent.TOUCH_TAP, this.payBtn2Func, this), 
            hortor.NotificationManager.add(e.NotificationType.SailingDepotChange, this.SailingDepotChange, this), 
            this.payImg1.source = e.ResourcePath.getItemIconByName("popIcon_sailing_depot1"), 
            this.payImg2.source = e.ResourcePath.getItemIconByName("popIcon_sailing_depot2"), 
            util.initBtnAnchorNew(this.payBtn1, 1.1, 1), util.initBtnAnchorNew(this.payBtn2, 1.1, 1), 
            util.initBtnAnchorNew(this.payImg1, 1.1, 1), util.initBtnAnchorNew(this.payImg2, 1.1, 1), 
            this.baseData = new eui.ArrayCollection(), this.baseList.dataProvider = this.baseData, 
            this.baseList.itemRenderer = SailingTaskDepotNode, this.panel.helpBtn.visible = !1;
        }, i.prototype.onData = function() {
            var t = this;
            t.supplyCoinLabel.text = "" + e.SailingDepotData.supplyCoin, t.propPrice1.text = "" + e.SailingDepotData.shopConfs[0].price, 
            t.propPrice2.text = "" + e.SailingDepotData.shopConfs[1].price;
            for (var i = [], n = e.SailingDepotData.taskConfs[e.SailingDepotData.taskConfs.length - 1].taskGroup, o = [], a = 1; n + 1 > a; a++) {
                o = [];
                for (var r = 0; r < e.SailingDepotData.taskConfs.length; r++) e.SailingDepotData.taskConfs[r].taskGroup == a && o.push(e.SailingDepotData.taskConfs[r]);
                i.push(o);
            }
            this.baseData.source = i;
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.payBtn1Func = function() {
            soundModel.buttonOpen(), hortor.WindowManager.showWindow(e.WindowType.WINDOW_SAILING_DEPOT_INFO, 1);
        }, i.prototype.payBtn2Func = function() {
            soundModel.buttonOpen(), hortor.WindowManager.showWindow(e.WindowType.WINDOW_SAILING_DEPOT_INFO, 2);
        }, i.prototype.showBtnFunc = function() {
            HttpService.get(e.ServerMsg.RACE_SUPPLY_CONTRIBUTIONS, {
                uid: playerModel.uid
            }, function(t) {
                hortor.WindowManager.showWindow(e.WindowType.WINDOW_SAILING_SCORE_RANK, {
                    data: t,
                    type: "depot"
                });
            });
        }, i.prototype.SailingDepotChange = function(e) {
            this.supplyCoinLabel.text = "" + e;
        }, i;
    }(hortor.Window);
    e.SailingTaskDepotWindow = t, __reflect(t.prototype, "game.SailingTaskDepotWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e._hasFinishTask = !1, e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.taskScroller.viewport = this.taskList, this.personScroller.viewport = this.personList, 
            this.taskBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.taskBtnFunc, this), 
            this.abandonBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.abandonBtnFunc, this), 
            this.tearGroup.addEventListener(egret.TouchEvent.TOUCH_TAP, this.tearBtnFunc, this), 
            this.taskList.addEventListener(eui.ItemTapEvent.ITEM_TAP, this.taskItemFunc, this), 
            this.personList.addEventListener(eui.ItemTapEvent.ITEM_TAP, this.memberItemFunc, this), 
            this.panel.helpBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.helpBtnFunc, this), 
            this.helpMaskBg.addEventListener(egret.TouchEvent.TOUCH_TAP, this.helpMaskBgFunc, this), 
            EventCenter.addEventListener(EventConst.SailingCloseTask, this.dealWSCloseFunc, this), 
            EventCenter.addEventListener(EventConst.SailingGetTask, this.dealWSGetFunc, this), 
            EventCenter.addEventListener(EventConst.SailingTearUpTask, this.dealWSTearUpFunc, this);
        }, i.prototype.onData = function() {
            var t = this;
            this.selfData = _.find(e.GuildData.members, function(e) {
                return e.uid == playerModel.uid;
            }), this.taskTimer || (this.taskTimer = new egret.Timer(1e3), this.taskTimer.addEventListener(egret.TimerEvent.TIMER, this.timerFunc, this), 
            this.taskTimer.start()), this.hideInfoGroup(), this.showAllView(), t.maxScoreLabel.text = "任务最高分数:" + e.SailingCache.rankMaxScore[e.SailingShowData.grade - 1], 
            t.helpGroup.visible = !1, t.helpTextLabel.text = "青铜联赛：任务分数 20 ~ 100\n白银联赛：任务分数 50 ~ 150\n黄金联赛：任务分数 100 ~ 200\n铂金联赛：任务分数 150 ~ 250\n钻石联赛：任务分数 200 ~ 300\n王者联赛：任务分数 250 ~ 400\n";
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.onClose = function() {
            this._hasFinishTask && HttpService.get(e.ServerMsg.RACE_SHOW, {
                uid: playerModel.uid,
                version: 1
            }, function(t) {
                e.SailingCache.isoWeek = t.isoWeek || 0, e.SailingShowData = t, hortor.NotificationManager.dispatch(e.NotificationType.SailingScoreChange);
            });
        }, i.prototype.helpBtnFunc = function() {
            var e = this;
            e.helpAlertGroup.scaleX = e.helpAlertGroup.scaleY = 0, e.helpGroup.visible = !0, 
            egret.Tween.get(e.helpAlertGroup).to({
                scaleX: 1,
                scaleY: 1
            }, 300, egret.Ease.backOut);
        }, i.prototype.helpMaskBgFunc = function() {
            soundModel.buttonOpen();
            var e = this;
            e.helpGroup.visible = !1;
        }, i.prototype.showAllView = function() {
            var e = this;
            this.selfTask = _.find(e.data.tasks, function(e) {
                return playerModel.uid == e.uid;
            }), this.initTaskList(), this.initMemberList(), this.showLastTimes(), this.selfTask && (this.selectData = this.selfTask, 
            this.showTaskInfo(this.selfTask, !1));
        }, i.prototype.hideInfoGroup = function() {
            var e = this;
            e.infoGroup.visible = !1, e.tipsLabel.visible = !0;
        }, i.prototype.initTaskList = function() {
            var e = this, t = e.data.boards;
            e.taskData = new eui.ArrayCollection(t), e.taskList.dataProvider = e.taskData;
        }, i.prototype.refreshTaskList = function() {
            if (this) {
                var e = this;
                e.taskData.replaceAll(e.data.boards), e.taskList.dataProviderRefreshed();
            }
        }, i.prototype.showLastTimes = function() {
            var e = this;
            e.lastTimes.text = "竞赛任务次数：" + e.data.taskRemain, e.tearUpRemainLabel.text = "今日撕毁次数：" + e.data.tearUpRemain + "(+" + e.data.tearUpRemainSpecial + ")";
        }, i.prototype.taskItemFunc = function(e) {
            this.selectData = e.item, this.selectIndex = e.itemIndex, this.showTaskInfo(e.item, !0);
        }, i.prototype.testTaskList = function() {
            var e = this;
            e.personData.addItemAt({
                id: 0
            }, 0);
        }, i.prototype.initMemberList = function() {
            var e = this;
            this.dealMemData();
            var t = e.data.tasks;
            e.personData = new eui.ArrayCollection(t), e.personList.dataProvider = e.personData;
        }, i.prototype.refreshMemList = function() {
            var e = this;
            this.dealMemData(), e.data.tasks.length > 0 ? (e.personData.replaceAll(e.data.tasks), 
            e.personList.dataProviderRefreshed()) : (e.personData.removeAll(), e.personData = new eui.ArrayCollection([]), 
            e.personList.dataProvider = e.personData);
        }, i.prototype.dealMemData = function() {
            var e = this, t = _.find(e.data.tasks, function(e) {
                return playerModel.uid == e.uid;
            }), i = _.findIndex(e.data.tasks, function(e) {
                return playerModel.uid == e.uid;
            });
            t && i > 0 && (e.data.tasks.splice(i, 1), e.data.tasks.unshift(t));
        }, i.prototype.memberItemFunc = function(e) {
            this.selectData = e.item, this.showTaskInfo(e.item, !1);
        }, i.prototype.showTaskInfo = function(t, i) {
            var n = this;
            if (i && (1 == t.state || 2 == t.state)) {
                n.infoGroup.visible = !1, n.tipsLabel.visible = !0;
                var o = t.RemainTime;
                return void (n.tipsLabel.text = "任务刷新时间：" + e.ComFunc.formatTimeHMSNew(o));
            }
            n.infoGroup.visible = !0, n.tipsLabel.visible = !1, n.taskBtn.visible = !1, n.abandonBtn.visible = !1, 
            n.tearGroup.visible = !1, 0 != t.state && i || (n.infoGroup.visible = !0, n.targetLabel.text = "目标：" + t.description, 
            n.taskIconImg.source = "sailing_icon_" + t.taskIcon, n.jifenLabel.text = "" + t.score), 
            0 == t.state && (n.tearGroup.visible = this.selfData.authority >= 7, this.selfTask || (n.taskBtn.visible = !0, 
            n.taskBtn.icon = "comBtnTxt_json.common_txt_js")), this.selfTask && (1 == t.state && this.selfTask.tid == t.tid && this.selfTask.uid == t.uid && (n.abandonBtn.visible = !0), 
            4 == t.state && this.selfTask.tid == t.tid && this.selfTask.uid == t.uid && (n.taskBtn.visible = !0, 
            n.taskBtn.icon = "comBtnTxt_json.common_txt_lq"), 5 == t.state && this.selfTask.tid == t.tid && this.selfTask.uid == t.uid && (n.taskBtn.visible = !0, 
            n.taskBtn.icon = "comBtnTxt_json.common_txt_qd")), this.showTaskBar(t, i), n.tearImg.source = "sailing_text_lose", 
            n.tearImg.visible = 5 == t.state;
        }, i.prototype.showTaskBar = function(t, i) {
            var n = this, o = 231, a = 0;
            if (i) n.barLabel.text = "0/" + t.value, n.timeLimit.text = t.limit > 0 ? e.ComFunc.formatTimeHMS(t.limit) : "无限制", 
            n.taskBar.mask = new egret.Rectangle(0, 0, o * a, 28); else {
                var r = t.value > t.limit ? t.limit : t.value;
                n.barLabel.text = r + "/" + t.limit, a = r / t.limit, a = a > 1 ? 1 : a, n.taskBar.mask = new egret.Rectangle(0, 0, o * a, 28), 
                4 == t.state ? n.timeLimit.text = _.isNull(t.RemainTime) ? "无限制" : "00:00:00" : 0 == t.state || 1 == t.state ? n.timeLimit.text = _.isNull(t.RemainTime) ? "无限制" : e.ComFunc.formatTimeHMS(t.RemainTime) : 5 == t.state && (n.timeLimit.text = "00:00:00");
            }
        }, i.prototype.taskBtnFunc = function() {
            var t = this, i = this, n = this;
            if (this.selfTask && this.selfTask.tid == this.selectData.tid) soundModel.buttonOpen(), 
            4 == this.selectData.state ? this.sendCloseTaskPost("finish") : 5 == this.selectData.state && this.sendCloseTaskPost("expire"); else {
                if (!e.SailingShowData.hasQualified) return soundModel.buttonOpen(), void hortor.TipManager.alert("新入团成员无法参加本次竞赛\n请等待下次竞赛开始");
                if (0 == n.data.taskRemain) return soundModel.buttonOpen(), void hortor.TipManager.bubble("本次竞赛的任务次数已用尽");
                hortor.TipManager.alert("确定要接受此任务吗？", function() {
                    soundModel.playSound(e.SoundType.SOUND_SAILING_GETTASK), HttpService.post(e.ServerMsg.RACE_EXECUTE_TASK, {
                        uid: playerModel.uid,
                        tid: t.selectData.tid,
                        idx: t.selectData.idx,
                        version: 1
                    }, function(e) {
                        for (var o = 0; o < e.boards.length; o++) e.boards[o].idx = o;
                        hortor.TipManager.bubble("成功接受任务"), n.data = e, t.selectData = _.find(n.data.tasks, function(e) {
                            return e.tid == t.selectData.tid && e.uid == playerModel.uid;
                        }), t.selfTask = _.find(n.data.tasks, function(e) {
                            return e.uid == playerModel.uid;
                        }), i.refreshTaskList(), i.refreshMemList(), i.showLastTimes(), t.showTaskInfo(t.selectData, !1), 
                        t.playTaskGetOrTearAction(i.selectIndex);
                    });
                });
            }
        }, i.prototype.abandonBtnFunc = function() {
            var e = this;
            hortor.TipManager.alert("放弃任务将会浪费你在本次竞赛中的一次任务机会，确定要放弃吗？", function() {
                e.sendCloseTaskPost("abandon");
            });
        }, i.prototype.sendCloseTaskPost = function(t) {
            var i = this, n = this, o = this, a = "finish" == t;
            HttpService.post(e.ServerMsg.RACE_CLOSE_TASK, {
                uid: playerModel.uid,
                success: a,
                version: 1
            }, function(a) {
                "finish" == t ? (o.selectData.state = 4, n._hasFinishTask = !0, hortor.WindowManager.showWindow(e.WindowType.WINDOW_REWARD, {
                    reward: {
                        sailingScore: o.selectData.score
                    }
                }), e.GuildCache.GuildSailingRedPoint = !1, EventCenter.sendEvent(EventConst.refreshGuildRedPoint), 
                gateModel.updateGate(e.ScreenType.GUILD_SCREEN)) : "abandon" == t && hortor.TipManager.bubble("已放弃"), 
                n.infoGroup.visible = !1, n.tipsLabel.visible = !0, n.tipsLabel.text = "请先选择一个任务";
                var r = _.findIndex(n.data.tasks, function(e) {
                    return playerModel.uid == e.uid;
                });
                n.data.tasks.splice(r, 1), i.selfTask = null, o.refreshMemList();
            });
        }, i.prototype.tearBtnFunc = function() {
            var t = this, i = this, n = this;
            return e.SailingShowData.hasQualified ? void hortor.TipManager.alert("确定要撕毁这份任务吗？", function() {
                return i.data.tearUpRemain + i.data.tearUpRemainSpecial == 0 ? (soundModel.buttonClose(), 
                void hortor.TipManager.bubble("撕毁次数不足！")) : void HttpService.post(e.ServerMsg.RACE_TEARUP_TASK, {
                    uid: playerModel.uid,
                    tid: t.selectData.tid,
                    idx: t.selectData.idx,
                    version: 1
                }, function(o) {
                    for (var a = 0; a < o.boards.length; a++) o.boards[a].idx = a;
                    i.data.boards = o.boards, n.refreshTaskList(), i.data.tearUpRemain = o.tearUpRemain, 
                    i.data.tearUpRemainSpecial = o.tearUpRemainSpecial, n.showLastTimes(), i.tearGroup.visible = !1, 
                    i.taskBtn.visible = !1, i.tearImg.source = "sailing_text_tear", i.tearImg.visible = !0, 
                    soundModel.playSound(e.SoundType.SOUND_SAILING_TEAR), t.playTaskGetOrTearAction(n.selectIndex);
                });
            }) : (soundModel.buttonOpen(), void hortor.TipManager.alert("新入团成员无法参加本次竞赛\n请等待下次竞赛开始"));
        }, i.prototype.playTaskGetOrTearAction = function(e) {
            var t = this, i = t.taskList.getElementAt(e);
            i && i.showTaskAction();
        }, i.prototype.timerFunc = function() {
            var t = this, i = this;
            if (this && i.data) {
                for (var n = 0; n < i.data.boards.length; n++) {
                    var o = i.data.boards[n];
                    1 == o.state && !_.isNull(o.RemainTime) && o.RemainTime > 0 && (o.RemainTime--, 
                    0 == o.RemainTime && (o.state = 0, this.refreshTaskList()));
                }
                for (var a = 0; a < i.data.tasks.length; a++) {
                    var r = i.data.tasks[a];
                    1 == r.state && !_.isNull(r.RemainTime) && r.RemainTime > 0 && (r.RemainTime--, 
                    0 == r.RemainTime && (r.state = 5, this.refreshMemList()));
                }
                if (this.selectData && (0 == this.selectData.uid ? this.selectData = _.find(i.data.boards, function(e) {
                    return e.tid == t.selectData.tid && e.idx == t.selectData.idx;
                }) : this.selectData = _.find(i.data.tasks, function(e) {
                    return e.tid == t.selectData.tid && e.uid == t.selectData.uid;
                }), this.selectData)) {
                    if (!_.isNull(this.selectData.RemainTime) && this.selectData.RemainTime >= 0) if (0 != this.selectData.uid) {
                        if (!i) return;
                        i.timeLimit.text = e.ComFunc.formatTimeHMS(this.selectData.RemainTime);
                    } else {
                        if (!i) return;
                        var s = 0 == this.selectData.RemainTime ? "任务已刷新" : "任务刷新时间：" + e.ComFunc.formatTimeHMSNew(this.selectData.RemainTime);
                        i.tipsLabel.text = s;
                    }
                    if (0 != this.selectData.uid && 4 == this.selectData.state) {
                        if (!i) return;
                        i.timeLimit.text = _.isNull(this.selectData.RemainTime) ? "无限制" : "00:00:00";
                    }
                    if (0 != this.selectData.uid && 5 == this.selectData.state) {
                        if (!i) return;
                        i.timeLimit.text = _.isNull(this.selectData.RemainTime) ? "无限制" : "00:00:00", this.showTaskInfo(this.selectData, !1);
                    }
                }
            }
        }, i.prototype.hasTearUpNum = function() {
            for (var e = this, t = 0, i = 0; i < e.data.boards.length; i++) {
                var n = e.data.boards[i];
                2 == n.state && t++;
            }
            return t;
        }, i.prototype.dealWSCloseFunc = function(e) {
            var t = this;
            if (this && t.data) {
                var i = e.data, n = _.find(t.data.tasks, function(e) {
                    return e.uid == i.uid;
                });
                if (n) {
                    var o = _.findIndex(t.data.tasks, function(e) {
                        return e.uid == i.uid;
                    });
                    t.data.tasks.splice(o, 1), this.refreshMemList(), this.selectData && this.selectData.tid == n.tid && (t.tipsLabel.text = "请先选择一个任务", 
                    t.infoGroup.visible = !1, t.tipsLabel.visible = !0);
                }
            }
        }, i.prototype.dealWSGetFunc = function(e) {
            var t = this;
            if (this && t.data) {
                var i = e.data, n = _.find(t.data.boards, function(e) {
                    return e.tid == i.tid;
                }), o = _.findIndex(t.data.boards, function(e) {
                    return e.tid == i.tid;
                });
                if (n) {
                    n.state = 1;
                    var a = util.deepClone(n);
                    a.name = i.name, a.headImg = i.head, a.uid = i.uid, a.value = 0, a.limit = n.value, 
                    n.limit > 0 && (a.RemainTime = n.limit), t.data.tasks.push(a), this.refreshMemList(), 
                    n.RemainTime = 1800, this.refreshTaskList(), this.selectData && this.selectData.tid == n.tid && (this.selectData = a, 
                    this.showTaskInfo(this.selectData, !1)), o > -1 && this.playTaskGetOrTearAction(o);
                }
            }
        }, i.prototype.dealWSTearUpFunc = function(t) {
            var i = this;
            if (this && i.data) {
                var n = t.data, o = t.data.obj, a = _.find(i.data.boards, function(e) {
                    return e.tid == n.tid;
                }), r = _.findIndex(i.data.boards, function(e) {
                    return e.tid == n.tid;
                });
                if (a) {
                    i.data.boards[r] = o;
                    for (var s = 0; s < i.data.boards.length; s++) i.data.boards[s].idx = s;
                    this.refreshTaskList(), i.data.tearUpRemain = n.tearUpRemain, i.data.tearUpRemainSpecial = n.tearUpRemainSpecial, 
                    this.showLastTimes(), this.selectData && this.selectData.tid == a.tid && (i.tearGroup.visible = !1, 
                    i.taskBtn.visible = !1, i.tearImg.source = "sailing_text_tear", i.tearImg.visible = !0), 
                    soundModel.playSound(e.SoundType.SOUND_SAILING_TEAR), r > -1 && this.playTaskGetOrTearAction(r);
                }
            }
        }, i;
    }(hortor.Window);
    e.SailingTaskWindow = t, __reflect(t.prototype, "game.SailingTaskWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e.actionIndex = 0, e.lightIconIndex = 0, e.lightIconArr = [ [ 104, 130 ], [ 172, 129 ], [ 427, 129 ], [ 494, 130 ] ], 
            e.nodeList = [ [ 0, 0 ], [ 117, 0 ], [ 234, 0 ], [ 351, 0 ], [ 351, 117 ], [ 351, 232 ], [ 351, 350 ], [ 234, 350 ], [ 117, 350 ], [ 0, 350 ], [ 0, 232 ], [ 0, 116 ] ], 
            e.nowIndex = 0, e.targetIndex = 0, e.countIndex = 0, e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.closeBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.closeBtnFunc, this), 
            this.startBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.startBtnFunc, this);
        }, i.prototype.onData = function() {
            var t = this, i = e.SailingShowData.openRemain > 0 ? e.SailingShowData.lastGrade : e.SailingShowData.grade;
            t.boxLabel.text = e.SailingCache.rankText[i - 1] + "联赛", this.initWheelData(), this.initIconCount();
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.initWheelData = function() {
            var t = this;
            t.mainGroup.removeChildren();
            for (var i = 0; i < t.nodeList.length; i++) {
                var n = new e.SailingWheelNode();
                t.mainGroup.addChild(n), n.initData(t.data.boxConfs[i]), n.x = t.nodeList[i][0], 
                n.y = t.nodeList[i][1];
            }
        }, i.prototype.startBtnFunc = function() {
            var t = this;
            soundModel.buttonOpen();
            var i = this;
            return this.data.boxOpenRemain < 1 ? void hortor.TipManager.bubble("幸运币将会在竞赛结束后获得") : (i.closeBtn.enabled = !1, 
            i.startBtn.enabled = !1, void HttpService.post(e.ServerMsg.RACE_RANK_REWARD, {
                uid: playerModel.uid
            }, function(e) {
                playerModel.update(e), _.has(e, "guildCoin") && (playerModel.guild.coin = e.guildCoin), 
                EventCenter.sendEvent(EventConst.GuildSignReward), i.rewardMap = e.rewards, t.data.boxOpenRemain--, 
                t.initIconCount();
                for (var n = _.keys(e.rewards)[0], o = _.values(e.rewards)[0], a = 0; a < t.data.boxConfs.length; a++) if (t.data.boxConfs[a].rewardType == n && t.data.boxConfs[a].RewardNum == o) {
                    i.targetIndex = a, i.countIndex = i.targetIndex - i.nowIndex + 24, t.initAction();
                    break;
                }
            }, function() {
                i.closeBtn.enabled = !0, i.startBtn.enabled = !0;
            }, this));
        }, i.prototype.closeBtnFunc = function() {
            soundModel.buttonClose(), hortor.WindowManager.hideWindow(e.WindowType.WINDOW_SAILING_WHEEL), 
            HttpService.get(e.ServerMsg.RACE_REWARD_DETAIL, {
                uid: playerModel.uid
            }, function(t) {
                e.SailingCache.guildScore = t.guildScore, hortor.WindowManager.showWindow(e.WindowType.WINDOW_SAILING_REWARD, t);
            });
        }, i.prototype.initIconCount = function() {
            this.countLabel.text = "" + this.data.boxOpenRemain;
        }, i.prototype.initAction = function() {
            var t = this, i = this, n = 50;
            n = this.actionIndex < 12 ? 50 : this.actionIndex < i.countIndex - 4 ? 100 : 100 + 100 * (this.actionIndex - (i.countIndex - 4));
            var o = egret.setTimeout(function() {
                if (t.actionIndex++, egret.clearTimeout(o), t.lightIconIndex++, t.lightIconIndex = t.lightIconIndex > 3 ? 0 : t.lightIconIndex, 
                i.lightIcon.x = t.lightIconArr[t.lightIconIndex][0], i.lightIcon.y = t.lightIconArr[t.lightIconIndex][1] - 106, 
                i.lightMask.x = i.nodeList[(i.nowIndex + t.actionIndex) % 12][0], i.lightMask.y = i.nodeList[(i.nowIndex + t.actionIndex) % 12][1], 
                t.actionIndex < i.countIndex) t.initAction(); else var n = egret.setTimeout(function() {
                    egret.clearTimeout(n), hortor.WindowManager.showWindow(e.WindowType.WINDOW_REWARD, {
                        reward: i.rewardMap
                    }), i.nowIndex = i.targetIndex, t.actionIndex = 0, i.closeBtn.enabled = !0, i.startBtn.enabled = !0;
                }, t, 300);
            }, this, n);
        }, i;
    }(hortor.Window);
    e.SailingWheelWindow = t, __reflect(t.prototype, "game.SailingWheelWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.addEventListener(egret.Event.COMPLETE, e.createCompleteEvent, e), e.addEventListener(egret.Event.REMOVED_FROM_STAGE, e.clearFunc, e), 
            EventCenter.addEventListener(EventConst.refreshMatchRank, e.refreshMatchRank, e), 
            e.skinName = SailingGuildTitleNodeSkin, e;
        }
        return __extends(i, t), i.prototype.clearFunc = function() {
            this.removeEventListener(egret.Event.COMPLETE, this.createCompleteEvent, this), 
            this.removeEventListener(egret.Event.REMOVED_FROM_STAGE, this.clearFunc, this), 
            EventCenter.removeEventListener(EventConst.refreshMatchRank, this.refreshMatchRank, this);
        }, i.prototype.refreshMatchRank = function(e) {
            e.data.gid == this.data.gid && (this.numLabel.text = 0 == this.data.score ? "-" : this.data.rank + "");
        }, i.prototype.createCompleteEvent = function(e) {
            this.guildIcon.addEventListener(egret.TouchEvent.TOUCH_TAP, this.guildIconFunc, this);
        }, i.prototype.intiData = function(e) {
            this.data = e, this.guildIcon.source = "guild_icon" + e.icon, this.numLabel.text = 0 == e.score ? "-" : e.rank + "";
        }, i.prototype.guildIconFunc = function(t) {
            soundModel.buttonOpen();
            var i = t.target.localToGlobal(0, 0);
            hortor.WindowManager.showWindow(e.WindowType.WINDOW_SAILING_MATCH_OPERATION, {
                data: this.data,
                pos: i
            });
        }, i;
    }(eui.Component);
    e.SailingGuildTitleNode = t, __reflect(t.prototype, "game.SailingGuildTitleNode");
}(game || (game = {})), window.game.SailingGuildTitleNode = game.SailingGuildTitleNode;

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.skinName = SailingMatchInfoNodeSkin, e;
        }
        return __extends(i, t), i.prototype.dataChanged = function() {
            this.rankIcon.source = "sailing_rank_" + (this.itemIndex + 1), this.rankLabel.text = e.SailingCache.rankText[this.itemIndex] + "联赛", 
            this.goldCount.text = "" + this.data.gold, this.sliverCount.text = "" + this.data.sliver, 
            this.copperCount.text = "" + this.data.copper;
        }, i;
    }(eui.ItemRenderer);
    e.SailingMatchInfoNode = t, __reflect(t.prototype, "game.SailingMatchInfoNode");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(e) {
        function t() {
            var t = e.call(this) || this;
            return t.skinName = SailingMatchInfoNode2Skin, t;
        }
        return __extends(t, e), t.prototype.dataChanged = function() {
            this.rankIcon.source = "sailing_rank_" + (this.itemIndex + 1), this.rankLabel.text = this.data.rankName + "联赛", 
            this.scoreLabel.text = "最高" + this.data.taskMaxScore + "分", this.countLabel.text = "x" + this.data.rewardCount;
        }, t;
    }(eui.ItemRenderer);
    e.SailingMatchInfoNode2 = t, __reflect(t.prototype, "game.SailingMatchInfoNode2");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.scrollH = 0, e._isFirst = !1, e.addEventListener(egret.Event.COMPLETE, e.createCompleteEvent, e), 
            e.addEventListener(egret.Event.REMOVED_FROM_STAGE, e.clearFunc, e), e.skinName = SailingMatchNodeSkin, 
            e;
        }
        return __extends(i, t), i.prototype.clearFunc = function() {
            egret.Tween.removeTweens(this.boatImg), this.removeEventListener(egret.Event.COMPLETE, this.createCompleteEvent, this), 
            this.removeEventListener(egret.Event.REMOVED_FROM_STAGE, this.clearFunc, this), 
            this.rightScoreGroup.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.scoreGroupFunc, this), 
            this.leftScoreGroup.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.scoreGroupFunc, this), 
            EventCenter.removeEventListener(EventConst.SailingStopAction, this.stopAction, this), 
            EventCenter.removeEventListener(EventConst.SailingreStartAction, this.reStartAction, this);
        }, i.prototype.createCompleteEvent = function(t) {
            var i = this;
            if (!this.data) return void egret.setTimeout(this.createCompleteEvent, this, 100 / 3);
            this.rightScoreGroup.addEventListener(egret.TouchEvent.TOUCH_TAP, this.scoreGroupFunc, this), 
            this.leftScoreGroup.addEventListener(egret.TouchEvent.TOUCH_TAP, this.scoreGroupFunc, this), 
            EventCenter.addEventListener(EventConst.SailingStopAction, this.stopAction, this), 
            EventCenter.addEventListener(EventConst.SailingreStartAction, this.reStartAction, this);
            var n = this.boatImg.y, o = egret.setTimeout(function() {
                egret.clearTimeout(o), egret.Tween.get(i.boatImg, {
                    loop: !0
                }).to({
                    y: n + 2,
                    rotation: 1.5
                }, 800).to({
                    y: n,
                    rotation: 0
                }, 800).to({
                    y: n - 2,
                    rotation: -1.5
                }, 800).to({
                    y: n,
                    rotation: 0
                }, 800);
            }, this, 1e3 * Math.random());
            if (1 == this.data.id) for (var a = 0; a < e.SailingShowData.objects.length; a++) {
                var r = e.SailingShowData.RankMaxScore, s = e.SailingProxy.boatBgSize, l = new e.SailingMatchScoreNode();
                this.addChildAt(l, 0), l.initData(e.SailingShowData.objects[a]), l.anchorOffsetX = l.width / 2, 
                l.x = e.SailingShowData.objects[a] / r * s + e.SailingProxy.boatOffSize + 2 * this.data.id, 
                l.y = 22;
            }
        }, i.prototype.stopAction = function() {
            egret.Tween.pauseTweens(this.boatImg);
        }, i.prototype.reStartAction = function() {
            egret.Tween.resumeTweens(this.boatImg);
        }, i.prototype.scoreGroupFunc = function() {
            var t = this.boatImg.x - 320 + .5 * e.SailingProxy.boatSize;
            EventCenter.sendEvent(EventConst.sailingMatchAdjustBoat, 0 > t ? 0 : t > 1920 ? 1920 : t);
        }, i.prototype.initData = function(t, i) {
            this.data = t, this.scrollH = i || 0, this.boatImg.scaleX = this.boatImg.scaleY = 1 - .023 * (this.data.id - 1), 
            this.rightScoreGroup.scaleX = this.rightScoreGroup.scaleY = 1 - .023 * (this.data.id - 1), 
            this.leftScoreGroup.scaleX = this.leftScoreGroup.scaleY = 1 - .023 * (this.data.id - 1), 
            this.selfIcon.visible = 1 == this.data.id, this.rightScore.text = this.leftScore.text = "" + this.data.score;
            var n = e.SailingShowData.RankMaxScore, o = e.SailingProxy.boatBgSize;
            this.boatImg.x = this.data.score / n * o + e.SailingProxy.boatOffSize + 2 * this.data.id, 
            this.selfIcon.x = this.boatImg.x - 120, this.rightScoreGroup.x = this.boatImg.x + 96 - 2 * this.data.id, 
            this.leftScoreGroup.x = this.boatImg.x - 100 + 2 * this.data.id, this.leftCupGroup.visible = this.rightCupGroup.visible = this.data.rank < 4 && this.data.score;
            var a = (this.data.gid + e.SailingCache.isoWeek) % 12, r = [ 2, 0, 1, 3, 0, 2, 3, 1, 2, 3, 1, 0 ];
            a = r[a] || 0, this.boatImg.source = "sailing_boat_" + a;
            var s = 1 == this.data.id ? 2 : 1;
            if (this.rightArrow.source = this.leftArrow.source = "sailing_score_arrow_" + s, 
            this.rightArrowBg.source = this.leftArrowBg.source = "sailing_score_arrowBg_" + s, 
            this.rightCup.source = this.leftCup.source = "sailing_cup_" + (this.data.rank - 1 > 2 ? 0 : this.data.rank - 1), 
            !this._isFirst) {
                this._isFirst = !0;
                var l = new hortor.TouchScaleEffect();
                l.start(this.rightScoreGroup);
                var d = new hortor.TouchScaleEffect();
                d.start(this.leftScoreGroup);
            }
        }, i.prototype.getBoatPosition = function() {
            return this.boatImg.x;
        }, i.prototype.initCupGroup = function(t) {
            this.scrollH = t, this.scrollH + e.SailingProxy.boatOffSize > this.boatImg.x + e.SailingProxy.boatSize ? this.rightScoreGroup.x = this.scrollH + e.SailingProxy.boatOffSize + 13 : this.scrollH + 640 - .5 * e.SailingProxy.boatSize < this.boatImg.x ? this.leftScoreGroup.x = this.boatImg.x - 100 + 2 * this.data.id > 640 + this.scrollH - 125 ? 640 + this.scrollH - 125 : this.boatImg.x - 100 + 2 * this.data.id : this.rightScoreGroup.x = this.boatImg.x + 96 - 2 * this.data.id, 
            this.boatImg.x - e.SailingProxy.arrowOffSize - e.SailingProxy.boatOffSize < this.scrollH ? (this.rightScoreGroup.visible = !0, 
            this.leftScoreGroup.visible = !1) : this.boatImg.x + e.SailingProxy.boatSize + e.SailingProxy.arrowOffSize + 20 > this.scrollH + 640 ? (this.rightScoreGroup.visible = !1, 
            this.leftScoreGroup.visible = !0) : (this.rightScoreGroup.visible = !0, this.leftScoreGroup.visible = !1);
        }, i.prototype.toNewPosition = function(t, i) {
            var n = this, o = e.SailingShowData.RankMaxScore, a = e.SailingProxy.boatBgSize, r = t.score - i;
            if (0 != r) {
                var s = 2e3;
                if (r > 2e3 && (s += 150 * Math.floor((r - 2e3) / 1e3)), this.leftCupGroup.visible = this.rightCupGroup.visible = !1, 
                egret.Tween.get(this.boatImg, {
                    onChange: this.onChangeFunc.bind(this)
                }).to({
                    x: this.data.score / o * a + e.SailingProxy.boatOffSize + 2 * this.data.id
                }, s).call(function() {
                    EventCenter.sendEvent(EventConst.refreshMatchRank, t), n.initData(t, n.scrollH), 
                    n.leftCupGroup.visible = n.rightCupGroup.visible = n.data.rank < 4 && !!t.score;
                }), t.score - i < 100) for (var l = 0; l < t.score - i; l++) egret.setTimeout(function() {
                    i += 1, this.rightScore.text = this.leftScore.text = "" + i;
                }, this, s / (t.score - i) * l); else for (var d = Math.floor(.01 * (t.score - i)), l = 0; 100 > l; l++) egret.setTimeout(function() {
                    i += d, this.rightScore.text = this.leftScore.text = "" + i;
                }, this, .01 * s * l);
            }
        }, i.prototype.onChangeFunc = function() {
            this.rightScoreGroup.x = this.boatImg.x + 96 - 2 * this.data.id, this.leftScoreGroup.x = this.boatImg.x - 100 + 2 * this.data.id, 
            this.selfIcon.x = this.boatImg.x - 120, this.initCupGroup(this.scrollH);
        }, i;
    }(eui.Component);
    e.SailingMatchNode = t, __reflect(t.prototype, "game.SailingMatchNode");
}(game || (game = {})), window.game.SailingMatchNode = game.SailingMatchNode;

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.score = 0, e.addEventListener(egret.Event.COMPLETE, e.createCompleteEvent, e), 
            e.addEventListener(egret.Event.REMOVED_FROM_STAGE, e.clearFunc, e), e.skinName = SailingMatchScoreNodeSkin, 
            e;
        }
        return __extends(i, t), i.prototype.clearFunc = function() {
            egret.Tween.removeTweens(this.boxImg), this.removeEventListener(egret.Event.COMPLETE, this.createCompleteEvent, this), 
            this.removeEventListener(egret.Event.REMOVED_FROM_STAGE, this.clearFunc, this), 
            this.mainGroup.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.mainGroupFunc, this), 
            EventCenter.removeEventListener(EventConst.SailingStopAction, this.stopAction, this), 
            EventCenter.removeEventListener(EventConst.SailingreStartAction, this.reStartAction, this);
        }, i.prototype.createCompleteEvent = function(e) {
            this.bounceOutEffect(this.mainGroup), this.mainGroup.addEventListener(egret.TouchEvent.TOUCH_TAP, this.mainGroupFunc, this), 
            EventCenter.addEventListener(EventConst.SailingStopAction, this.stopAction, this), 
            EventCenter.addEventListener(EventConst.SailingreStartAction, this.reStartAction, this);
            var t = this.boxImg.y;
            egret.Tween.get(this.boxImg, {
                loop: !0
            }).to({
                y: t + 2,
                rotation: 1.5
            }, 800).to({
                y: t,
                rotation: 0
            }, 800).to({
                y: t - 2,
                rotation: -1.5
            }, 800).to({
                y: t,
                rotation: 0
            }, 800);
        }, i.prototype.stopAction = function() {
            egret.Tween.pauseTweens(this.boxImg);
        }, i.prototype.reStartAction = function() {
            egret.Tween.resumeTweens(this.boxImg);
        }, i.prototype.mainGroupFunc = function() {
            soundModel.buttonOpen();
            var t = _.find(e.SailingShowData.guilds, function(e) {
                return e.gid == playerModel.guild.gid;
            });
            this.score > t.score ? hortor.TipManager.bubble("再赢取" + (this.score - t.score) + "分即可获得") : hortor.TipManager.bubble("快去领取奖励吧");
        }, i.prototype.initData = function(e) {
            this.scoreLabel.text = "" + e, this.score = e;
        }, i.prototype.bounceOutEffect = function(e) {
            0 == e.anchorOffsetX && (e.anchorOffsetX = 97, e.anchorOffsetY = e.height, e.x = e.x + 97, 
            e.y = e.y + e.height), e.addEventListener(egret.TouchEvent.TOUCH_BEGIN, function(t) {
                e.scaleX = e.scaleY = .9;
            }.bind(this), this), e.addEventListener(egret.TouchEvent.TOUCH_END, function(t) {
                var i = egret.Tween.get(e);
                i.to({
                    scaleX: 1.05,
                    scaleY: 1.05
                }, 100).to({
                    scaleX: .95,
                    scaleY: .95
                }, 100).to({
                    scaleX: 1,
                    scaleY: 1
                }, 100);
            }.bind(this), this), e.addEventListener(egret.TouchEvent.TOUCH_RELEASE_OUTSIDE, function(t) {
                var i = egret.Tween.get(e);
                i.to({
                    scaleX: 1.05,
                    scaleY: 1.05
                }, 100).to({
                    scaleX: .95,
                    scaleY: .95
                }, 100).to({
                    scaleX: 1,
                    scaleY: 1
                }, 100);
            }.bind(this), this);
        }, i;
    }(eui.Component);
    e.SailingMatchScoreNode = t, __reflect(t.prototype, "game.SailingMatchScoreNode");
}(game || (game = {})), window.game.SailingMatchScoreNode = game.SailingMatchScoreNode;

var game;

!function(e) {
    var t = function(e) {
        function t() {
            var t = e.call(this) || this;
            return t.skinName = SailingRankNodeSkin, t;
        }
        return __extends(t, e), t.prototype.dataChanged = function() {
            this.initView();
        }, t.prototype.initView = function() {
            var e = this.data, t = e.rank > 3 ? 3 : e.rank;
            this.rankIcon.source = "pwzb_sz_" + (t - 1), this.rankIcon.visible = e.rank < 4, 
            this.guildIcon.source = "guild_icon" + e.icon, this.guildName.text = "" + e.name, 
            this.guildId.text = "ID:" + e.gid, this.guildScore.text = "" + e.score, this.rankBitLabel.visible = e.rank > 3, 
            this.rankBitLabel.text = "" + e.rank;
        }, t;
    }(eui.ItemRenderer);
    e.SailingRankNode = t, __reflect(t.prototype, "game.SailingRankNode");
}(game || (game = {}));

var SailingRankTabNode = function(e) {
    function t() {
        var t = e.call(this) || this;
        return t.skinName = SailingRankTabSkin, t;
    }
    return __extends(t, e), t.prototype.dataChanged = function() {
        this.icon.source = "sailing_rank_" + this.data.type;
    }, t;
}(eui.ItemRenderer);

__reflect(SailingRankTabNode.prototype, "SailingRankTabNode"), window.SailingRankTabNode = SailingRankTabNode;

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.skinPath = "sailing/node/SailingRewardUINodeSkin", e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.boxImg.addEventListener(egret.TouchEvent.TOUCH_TAP, this.boxImgFunc, this);
        }, i.prototype.boxImgFunc = function() {
            var t = this;
            this.data;
            soundModel.buttonOpen();
            var i = e.SailingShowData.openRemain > 0 ? e.SailingShowData.lastGrade : e.SailingShowData.grade;
            if (e.SailingShowData.hasQualified) if (i >= this.data.rankType && e.SailingCache.guildScore >= this.data.score && !this.data.gotReward) this.boxImg.touchEnabled = !1, 
            HttpService.post(e.ServerMsg.RACE_SCORE_REWARD, {
                uid: playerModel.uid,
                idx: this.itemIndex + 1
            }, function(i) {
                t.boxImg.touchEnabled = !0, playerModel.update(i), playerModel.guild.coin = i.guildCoin, 
                EventCenter.sendEvent(EventConst.GuildSignReward);
                for (var n = {}, o = 0; o < i.rewards.length; o++) n = _.extend(n, i.rewards[o]);
                hortor.WindowManager.showWindow(e.WindowType.WINDOW_REWARD, n), t.data.gotReward = !0, 
                egret.Tween.removeTweens(t.boxImg), t.boxImg.rotation = 0, t.boxImg.source = "sailing_reward_box4", 
                hortor.NotificationManager.dispatch(e.NotificationType.SailingRefreshRewardRedPoint);
            }, function() {
                t.boxImg.touchEnabled = !0;
            }); else {
                var n = this.boxImg.localToGlobal(0, 0);
                hortor.WindowManager.showWindow(e.WindowType.WINDOW_SAILING_REWARD_OPERATION, {
                    data: this.data,
                    pos: n
                });
            } else hortor.TipManager.alert("新入团成员无法参加本次竞赛\n请等待下次竞赛开始");
        }, i.prototype.onData = function() {
            this.data.score > 0 && e.SailingCache.guildScore >= this.data.score && !this.data.gotReward ? egret.Tween.get(this.boxImg, {
                loop: !0
            }).to({
                rotation: 3
            }, 50).to({
                rotation: 0
            }, 50).to({
                rotation: -3
            }, 50).to({
                rotation: 0
            }, 50).to({
                rotation: 3
            }, 50).to({
                rotation: 0
            }, 50).to({
                rotation: -3
            }, 50).to({
                rotation: 0
            }, 50).wait(800) : egret.Tween.removeTweens(this.boxImg);
            var t = e.SailingShowData.openRemain > 0 ? e.SailingShowData.lastGrade : e.SailingShowData.grade;
            this.boxImg.source = t >= this.data.rankType ? this.data.gotReward ? "sailing_reward_box4" : "sailing_reward_box3" : "sailing_reward_box2", 
            this.scoreLabel.text = this.data.score > 0 ? "" + this.data.score : e.SailingCache.rankText[this.data.rankType - 1] + "开启";
        }, i;
    }(e.ItemRenderBase);
    e.SailingRewardNode = t, __reflect(t.prototype, "game.SailingRewardNode");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.skinName = SailingScoreRankNodeSkin, e;
        }
        return __extends(i, t), i.prototype.dataChanged = function() {
            this.initView();
        }, i.prototype.initView = function() {
            var t = this.data, i = this.itemIndex > 2 ? 2 : this.itemIndex;
            this.rankIcon.source = "pwzb_sz_" + i, this.rankIcon.visible = this.itemIndex < 3, 
            util.setRemoteAvatar(this.headImg, t.headImg), this.nickName.text = "" + t.name;
            var n = "团员";
            switch (t.authority) {
              case 0:
                n = "团员";
                break;

              case 1:
                n = "精英";
                break;

              case 3:
                n = "长老";
                break;

              case 7:
                n = "副团";
                break;

              case 15:
                n = "团长";
            }
            this.duties.text = "" + n, this.guildScore.text = "" + t.score, this.countLabel.text = "" + t.taskFinish + "/" + t.taskExecute, 
            this.rankBitLabel.text = "" + (this.itemIndex + 1), this.rankBitLabel.visible = this.itemIndex > 2, 
            this.headMask.source = 1 == t.gender ? "friend_json.friend_img_sj6" : "friend_json.friend_img_sj7", 
            this.nickName.textColor = 1 == t.gender ? Const.genderCorlor1 : Const.genderCorlor2, 
            hortor.WindowManager.isOpen(e.WindowType.WINDOW_SAILING_DEPOT) ? (this.starIcon.source = "sailing_depot_icon0", 
            this.countLabel.visible = !1) : (this.starIcon.source = "sailing_icon_jifen2", this.countLabel.visible = !0);
        }, i;
    }(eui.ItemRenderer);
    e.SailingScoreRankNode = t, __reflect(t.prototype, "game.SailingScoreRankNode");
}(game || (game = {}));

var SailingTaskDepotNode = function(e) {
    function t() {
        var t = e.call(this) || this;
        return t.skinName = SailingTaskDepotNodeSkin, t;
    }
    return __extends(t, e), t.prototype.dataChanged = function() {
        var e = this.data;
        this.icon.source = "sailing_depot_icon" + this.data[0].taskIcon, this.group0.visible = this.group0.includeInLayout = !1, 
        this.group1.visible = this.group1.includeInLayout = !1, this.group2.visible = this.group2.includeInLayout = !1;
        for (var t = 0; t < e.length; t++) this["group" + t].visible = this["group" + t].includeInLayout = !0, 
        this["descLabel" + t].text = "" + e[t].taskDescribe, this["coinLabel" + t].text = t > 0 ? "x" + (e[t].reward - e[0].reward) : "x" + e[t].reward;
    }, t;
}(eui.ItemRenderer);

__reflect(SailingTaskDepotNode.prototype, "SailingTaskDepotNode");

var game;

!function(e) {
    var t = function(e) {
        function t() {
            var t = e.call(this) || this;
            return t.once(egret.Event.COMPLETE, t.createCompleteEvent, t), t.once(egret.Event.REMOVED_FROM_STAGE, t.removeFunc, t), 
            t.skinName = SailingTaskMemNodeSkin, t;
        }
        return __extends(t, e), t.prototype.createCompleteEvent = function(e) {
            this.group.anchorOffsetX = this.group.width / 2, this.group.anchorOffsetY = 5, this.group.x = this.group.x + this.group.width / 2, 
            this.group.y = this.group.y + 5, this.group.addEventListener(egret.TouchEvent.TOUCH_BEGIN, this.groupTouchBeginFunc, this), 
            this.group.addEventListener(egret.TouchEvent.TOUCH_MOVE, this.groupTouchMoveFunc, this), 
            this.group.addEventListener(egret.TouchEvent.TOUCH_END, this.groupTouchEndFunc, this), 
            this.group.addEventListener(egret.TouchEvent.TOUCH_TAP, this.groupTouchEndFunc, this), 
            this.group.addEventListener(egret.TouchEvent.TOUCH_RELEASE_OUTSIDE, this.groupTouchEndFunc, this);
        }, t.prototype.removeFunc = function() {
            egret.Tween.removeTweens(this.group), this.group.removeEventListener(egret.TouchEvent.TOUCH_BEGIN, this.groupTouchBeginFunc, this), 
            this.group.removeEventListener(egret.TouchEvent.TOUCH_MOVE, this.groupTouchMoveFunc, this), 
            this.group.removeEventListener(egret.TouchEvent.TOUCH_END, this.groupTouchEndFunc, this), 
            this.group.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.groupTouchEndFunc, this), 
            this.group.removeEventListener(egret.TouchEvent.TOUCH_RELEASE_OUTSIDE, this.groupTouchEndFunc, this);
        }, t.prototype.dataChanged = function() {
            this.initView();
        }, t.prototype.initView = function() {
            var e = this.data;
            util.setRemoteAvatar(this.headImg, e.headImg), this.mainBg.source = playerModel.uid == e.uid ? "sailing_task_bg4" : "sailing_task_bg5", 
            this.pName.text = util.strSub(e.name, 5), this.loseImg.visible = 5 == e.state;
        }, t.prototype.groupTouchBeginFunc = function(e) {
            soundModel.buttonOpen(), egret.Tween.removeTweens(this.group), this.group.rotation = 0, 
            this.group.scaleX = this.group.scaleY = .9, this._startPosX = e.stageX;
        }, t.prototype.groupTouchMoveFunc = function(e) {
            var t = this._startPosX - e.stageX;
            Math.abs(t) > 10 && (this.group.rotation = 0, this.group.scaleX = this.group.scaleY = 1);
        }, t.prototype.groupTouchEndFunc = function(e) {
            var t = egret.Tween.get(this.group);
            t.to({
                scaleX: 1.05,
                scaleY: 1.05
            }, 100).to({
                scaleX: .95,
                scaleY: .95
            }, 100).to({
                scaleX: 1,
                scaleY: 1
            }, 100);
            var i = egret.Tween.get(this.group);
            i.to({
                rotation: -8
            }, 300, egret.Ease.quadOut).to({
                rotation: 0
            }, 400, egret.Ease.quadIn).to({
                rotation: 8
            }, 400, egret.Ease.quadOut).to({
                rotation: 0
            }, 500, egret.Ease.quadOut);
        }, t;
    }(eui.ItemRenderer);
    e.SailingTaskMemNode = t, __reflect(t.prototype, "game.SailingTaskMemNode");
}(game || (game = {})), window.game.SailingTaskMemNode = game.SailingTaskMemNode;

var game;

!function(e) {
    var t = function(e) {
        function t() {
            var t = e.call(this) || this;
            return t.once(egret.Event.COMPLETE, t.createCompleteEvent, t), t.once(egret.Event.REMOVED_FROM_STAGE, t.removeFunc, t), 
            t.skinName = SailingTaskNodeSkin, t;
        }
        return __extends(t, e), t.prototype.createCompleteEvent = function(e) {
            this.group.anchorOffsetX = this.group.width / 2, this.group.anchorOffsetY = 18, 
            this.group.x = this.group.x + this.group.width / 2, this.group.y = this.group.y + 18, 
            this.group.addEventListener(egret.TouchEvent.TOUCH_BEGIN, this.groupTouchBeginFunc, this), 
            this.group.addEventListener(egret.TouchEvent.TOUCH_MOVE, this.groupTouchMoveFunc, this), 
            this.group.addEventListener(egret.TouchEvent.TOUCH_TAP, this.groupTouchEndFunc, this), 
            this.group.addEventListener(egret.TouchEvent.TOUCH_END, this.groupTouchEndFunc, this), 
            this.group.addEventListener(egret.TouchEvent.TOUCH_RELEASE_OUTSIDE, this.groupTouchEndFunc, this);
        }, t.prototype.removeFunc = function() {
            egret.Tween.removeTweens(this.group), egret.Tween.removeTweens(this.bottomImg), 
            this.group.removeEventListener(egret.TouchEvent.TOUCH_BEGIN, this.groupTouchBeginFunc, this), 
            this.group.removeEventListener(egret.TouchEvent.TOUCH_MOVE, this.groupTouchMoveFunc, this), 
            this.group.removeEventListener(egret.TouchEvent.TOUCH_END, this.groupTouchEndFunc, this), 
            this.group.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.groupTouchEndFunc, this), 
            this.group.removeEventListener(egret.TouchEvent.TOUCH_RELEASE_OUTSIDE, this.groupTouchEndFunc, this);
        }, t.prototype.dataChanged = function() {
            this.initView();
        }, t.prototype.initView = function() {
            var e = this.data;
            this.normalGroup.visible = !1, this.tearGroup.visible = !1, this.tearImg.visible = !1, 
            this.bottomImg.visible = !1, this.mainBg.source = "sailing_task_bg1", 0 == e.state ? (this.normalGroup.visible = !0, 
            this.bottomImg.visible = !0, this.taskIcon.source = "sailing_icon_" + e.taskIcon, 
            this.scoreLabel.text = e.score + "", this.timeIcon.visible = e.limit > 0) : 1 == e.state ? (this.tearGroup.visible = !0, 
            this.mainBg.source = "sailing_task_bg2") : 2 == e.state && (this.tearGroup.visible = !0, 
            this.tearImg.visible = !0, this.mainBg.source = "sailing_task_bg2");
        }, t.prototype.groupTouchBeginFunc = function(e) {
            soundModel.buttonOpen(), egret.Tween.removeTweens(this.group), this.group.rotation = 0, 
            this.group.scaleX = this.group.scaleY = .9, this._startPosX = e.stageX;
        }, t.prototype.groupTouchMoveFunc = function(e) {
            var t = this._startPosX - e.stageX;
            Math.abs(t) > 10 && (this.group.rotation = 0, this.group.scaleX = this.group.scaleY = 1);
        }, t.prototype.groupTouchEndFunc = function(e) {
            var t = egret.Tween.get(this.group);
            if (t.to({
                scaleX: 1.05,
                scaleY: 1.05
            }, 100).to({
                scaleX: .95,
                scaleY: .95
            }, 100).to({
                scaleX: 1,
                scaleY: 1
            }, 100), 2 != this.data.state && 1 != this.data.state) {
                var i = egret.Tween.get(this.group);
                i.to({
                    rotation: -8
                }, 300, egret.Ease.quadOut).to({
                    rotation: 0
                }, 400, egret.Ease.quadIn).to({
                    rotation: 8
                }, 400, egret.Ease.quadOut).to({
                    rotation: 0
                }, 500, egret.Ease.quadOut);
            }
        }, t.prototype.showTaskAction = function() {
            var e = this;
            this.tearGroup.visible = !0, this.mainBg.source = "sailing_task_bg2", this.bottomImg.y = 37, 
            this.bottomImg.visible = !0, this.tearImg.visible = !1, this.normalGroup.visible = !1;
            var t = this.bottomImg.y, i = egret.Tween.get(this.bottomImg);
            i.to({
                y: t + 130
            }, 500, egret.Ease.quadIn).call(function() {
                e.initView(), e.bottomImg.y = t;
            });
        }, t;
    }(eui.ItemRenderer);
    e.SailingTaskNode = t, __reflect(t.prototype, "game.SailingTaskNode");
}(game || (game = {})), window.game.SailingTaskNode = game.SailingTaskNode;

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.skinName = SailingWheelNodeSkin, e;
        }
        return __extends(i, t), i.prototype.createCompleteEvent = function(e) {}, i.prototype.initData = function(t) {
            var i = e.ItemManager.getItemInfo(t.rewardType);
            this.icon.source = "" + i.icon, this.numL.text = "" + e.ComFunc.formatNumber(t.RewardNum);
        }, i;
    }(eui.Component);
    e.SailingWheelNode = t, __reflect(t.prototype, "game.SailingWheelNode");
}(game || (game = {})), window.game.SailingWheelNode = game.SailingWheelNode;

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.addEventListener(egret.TouchEvent.TOUCH_TAP, this.viewFunc, this);
        }, i.prototype.onOpen = function() {
            for (var t = this.accountdata.accounts, i = 0; 2 > i; i++) {
                var n = t[i];
                this["star" + i].text = "" + n.crowns, this["island" + i].source = e.ResourcePath.getIslandMapImage(n.island, 1);
            }
        }, i.prototype.onData = function() {
            this.accountdata = this.data;
        }, i.prototype.viewFunc = function(e) {
            var t = e.target, i = t.name;
            i && ("selectBtn0" == i ? this.selectBtnFunc(0) : "selectBtn1" == i ? this.selectBtnFunc(1) : "cancelBtn" == i ? this.cancelBtnFunc() : "confirmBtn" == i && this.confirmBtnFunc());
        }, i.prototype.selectBtnFunc = function(e) {
            soundModel.buttonClose(), this.selectGroup.visible = !1, this.confirmGroup.visible = !0, 
            this.selectId = e, this.initConfirmGroup(e);
        }, i.prototype.initConfirmGroup = function(e) {
            var t = this.accountdata.accounts[e];
            this.selectStar.text = "" + t.crowns;
        }, i.prototype.cancelBtnFunc = function() {
            soundModel.buttonClose(), this.selectGroup.visible = !0, this.confirmGroup.visible = !1;
        }, i.prototype.confirmBtnFunc = function() {
            var t = this;
            soundModel.buttonClose();
            var i = this.accountdata.accounts[this.selectId];
            HttpService.post(e.ServerMsg.WX_BIND_ACCOUNT, "uid=" + playerModel.uid + "&platformId=" + i.platformId, function(i) {
                i && i.uid && (hortor.WindowManager.isOpen(e.WindowType.WINDOW_SETTING) && hortor.WindowManager.hideWindow(e.WindowType.WINDOW_SETTING), 
                t.hide(), hortor.TipManager.alert("账号已成功关联", function() {
                    gateModel.isWxgame ? hortor.NotificationManager.dispatch(e.NotificationType.RELOGIN, !1) : HORTOR_AGENT.refresh();
                }));
            });
        }, i.prototype.prepare = function(e) {
            e(null);
        }, i.prototype.onClose = function() {
            this.selectGroup.visible = !0, this.confirmGroup.visible = !1;
        }, i;
    }(e.WindowBase);
    e.AccountBindWindow = t, __reflect(t.prototype, "game.AccountBindWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.okBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onExchange, this), 
            this.closeBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.hide, this);
        }, i.prototype.onOpen = function() {}, i.prototype.onData = function() {}, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.onExchange = function() {
            return console.log(this.textInput.text), this.textInput.text && "" != this.textInput.text ? void HttpService.post(e.ServerMsg.COUPONS, {
                uid: playerModel.uid,
                code: this.textInput.text
            }, function(t) {
                playerModel.updateAll(t), hortor.WindowManager.showWindow(e.WindowType.WINDOW_REWARD, t.coupons), 
                EventCenter.sendEvent(EventConst.GoldChange), EventCenter.sendEvent(EventConst.EnergyChange);
            }) : (hortor.TipManager.alert("兑换码不能为空！"), void (this.okBtn.enabled = !0));
        }, i;
    }(e.WindowBase);
    e.ExchangeByCodeWindow = t, __reflect(t.prototype, "game.ExchangeByCodeWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.selectXingZuo = 0, e.selectPro = 0, e.selectCity = 0, e.wechat = "", e.weChatVisible = !0, 
            e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.signLabel.addEventListener(egret.FocusEvent.FOCUS_OUT, this.onInputFunc, this), 
            hortor.StageManager.stage.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onViewClickFunc, this), 
            this.wechatShowImg.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onWechatShowFunc, this), 
            this.wechatLabel.addEventListener(egret.Event.CHANGE, this.weChatFunc, this);
        }, i.prototype.onOpen = function() {}, i.prototype.onData = function() {
            this.initView();
        }, i.prototype.onClose = function() {
            var t = playerModel, i = this;
            i.selectXingZuo = this.comboBoxXingZuo.getData().id, i.selectPro = this.comboBoxPro.getData().id, 
            i.selectCity = this.comboBoxCity.getData().id, (t.constellation != i.selectXingZuo || t.province != i.selectPro || t.city != i.selectCity || t.wechat != i.wechatLabel.text || t.showWechat != i.weChatVisible) && HttpService.post(e.ServerMsg.SET_POSITION, "uid=" + playerModel.uid + "&province=" + i.selectPro + "&city=" + i.selectCity + "&constellation=" + i.selectXingZuo + "&wechat=" + i.wechatLabel.text + "&showWechat=" + i.weChatVisible, function(n) {
                t.constellation = i.selectXingZuo, t.province = i.selectPro, t.city = i.selectCity, 
                t.wechat = i.wechatLabel.text, t.showWechat = i.weChatVisible, gateModel.updateGate(e.WindowType.WINDOW_PLAYER_EDIT);
            });
        }, i.prototype.initView = function() {
            if (util.setRemoteAvatar(this.avatar.avatarImage, playerModel.headImg), this.signLabel.text = playerModel.signature, 
            this.avatar.bgImage.source = 1 == playerModel.gender ? "common_json.common_img_tz1_1" : "common_json.common_img_tz1_0", 
            this.avatar.starLabel.text = playerModel.crowns + "", this.nameLabel.text = util.strSub(playerModel.name, 14), 
            this.nameLabel.textColor = 1 == playerModel.gender ? Const.manNameColor : Const.womanNameColor, 
            playerModel.guild) {
                var e = playerModel.guild.icon;
                this.guildIcon.source = "guild_icon" + (e || 0), this.guildNameLabel.text = "" != playerModel.guild.name ? playerModel.guild.name : "无";
            } else this.guildIcon.source = "guild_icon0", this.guildNameLabel.text = "无";
            this.wechat = playerModel.wechat, this.weChatVisible = playerModel.showWechat, this.selectXingZuo = playerModel.constellation, 
            this.selectPro = playerModel.province, this.selectCity = playerModel.city, this.wechatLabel.text = this.wechat, 
            this.gouImg.visible = this.weChatVisible, this.xingzuoView(), this.provinceView(), 
            this.cityView();
        }, i.prototype.xingzuoView = function() {
            var t = [];
            for (var i in XingZuo) {
                var n = {
                    id: i,
                    label: XingZuo[i],
                    icon: "setting_xingzuo_" + i
                };
                t.push(n);
            }
            this.comboBoxXingZuo || (this.comboBoxXingZuo = new e.ComboBoxBase(), this.comboBoxXingZuo.name = "comboBoxXingZuo", 
            this.panel.addChild(this.comboBoxXingZuo), this.comboBoxXingZuo.x = 100, this.comboBoxXingZuo.y = 290), 
            this.comboBoxXingZuo.setData({
                defaultIndex: this.selectXingZuo,
                list: t
            });
        }, i.prototype.provinceView = function() {
            var t = (Province[this.selectPro], []);
            for (var i in Province) {
                var n = {
                    id: i,
                    label: Province[i],
                    icon: "setting_posBg"
                };
                t.push(n);
            }
            this.comboBoxPro || (this.comboBoxPro = new e.ComboBoxBase(), this.comboBoxPro.name = "comboBoxPro", 
            this.panel.addChild(this.comboBoxPro), this.comboBoxPro.x = 100, this.comboBoxPro.y = 230, 
            this.comboBoxPro.addEventListener(ComboBoxEvent.ComboBoxItemTapEvent, this.onComboBoxProItemTap, this)), 
            this.comboBoxPro.setData({
                defaultIndex: this.selectPro,
                list: t
            });
        }, i.prototype.cityView = function() {
            var t = [], i = this.selectPro, n = City[i];
            n[this.selectCity];
            for (var o in n) {
                var a = {
                    id: o,
                    label: n[o],
                    icon: "setting_posBg"
                };
                t.push(a);
            }
            this.comboBoxCity || (this.comboBoxCity = new e.ComboBoxBase(), this.comboBoxCity.name = "comboBoxCity", 
            this.panel.addChild(this.comboBoxCity), this.comboBoxCity.x = 300, this.comboBoxCity.y = 230), 
            this.comboBoxCity.setData({
                defaultIndex: this.selectCity,
                list: t
            });
        }, i.prototype.onComboBoxProItemTap = function(e) {
            this.selectPro = e.data.selectItem.id, this.cityView();
        }, i.prototype.onInputFunc = function() {
            var t = this, i = playerModel;
            t.signLabel.text != i.signature && HttpService.post(e.ServerMsg.SETTING, "uid=" + playerModel.uid + "&nightAllowPush=" + i.nightAllowPush + "&forbiddenPush=" + i.forbiddenPush + "&musicOff=" + i.musicOff + "&signature=" + t.signLabel.text, function(e) {
                playerModel.signature = t.signLabel.text;
            });
        }, i.prototype.onWechatShowFunc = function() {
            soundModel.buttonOpen(), this.weChatVisible = !this.weChatVisible, this.gouImg.visible = this.weChatVisible;
            var e = this.weChatVisible ? "已设置微信号对所有人可见" : "已设置微信号对所有人不可见";
            hortor.TipManager.tip(e);
        }, i.prototype.weChatFunc = function() {
            var e = this.wechatLabel.text, t = new RegExp("[\\u4E00-\\u9FFF]+", "g");
            t.test(e) && (hortor.TipManager.tip("不能输入汉字"), this.wechatLabel.text = "");
        }, i.prototype.onViewClickFunc = function(e) {
            var t = new egret.Point(e.stageX, e.stageY);
            this.comboBoxXingZuo.isOpen() && (this.comboBoxXingZuo.hitTestPoint(t.x, t.y, !1) || this.comboBoxXingZuo.hideList()), 
            this.comboBoxPro.isOpen() && (this.comboBoxPro.hitTestPoint(t.x, t.y, !1) || this.comboBoxPro.hideList()), 
            this.comboBoxCity.isOpen() && (this.comboBoxCity.hitTestPoint(t.x, t.y, !1) || this.comboBoxCity.hideList());
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i;
    }(e.WindowBase);
    e.PlayerEditWindow = t, __reflect(t.prototype, "game.PlayerEditWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return t.call(this) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.visitBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onVisitFunc, this), 
            this.addBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onAddFunc, this), 
            this.giftGroup.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onAddFunc, this), 
            this.delBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onDelFunc, this), 
            this.coupleBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onCoupleFunc, this), 
            this.hateBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onHateFunc, this), 
            this.privateChatBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onPrivateChatFunc, this);
        }, i.prototype.onOpen = function() {}, i.prototype.onData = function() {
            util.setRemoteAvatar(this.avatar.avatarImage, this.data.playerInfo.headImg), this.avatar.bgImage.source = 1 == this.data.playerInfo.gender ? "common_json.common_img_tz1_1" : "common_json.common_img_tz1_0", 
            this.avatar.starLabel.text = this.data.playerInfo.crowns + "", this.nameLabel.text = util.strSub(this.data.playerInfo.name, 10), 
            this.privateChatBtn.enabled = this.data.playerInfo.chatSign > 0, this.initData();
        }, i.prototype.initData = function() {
            var t = this, i = this, n = i.data.playerInfo;
            util.setRemoteAvatar(i.avatar.avatarImage, e.ComFunc.headImg(n.headImg)), i.avatar.data = n, 
            i.nameLabel.text = util.strSub(n.name, 10), i.nameLabel.textColor = 1 == n.gender ? Const.manNameColor : Const.womanNameColor, 
            i.vipIcon.visible = i.vipIcon.includeInLayout = n.isVip, i.offvipIcon.visible = i.offvipIcon.includeInLayout = !hortor.SystemManager.isWxGame || hortor.SystemManager.isWxGame && gateModel.ShareInterFaceId, 
            n.isPrivilege ? this.offvipIcon.source = "common_img_tq1" : this.offvipIcon.source = "common_img_tq0", 
            i.guildNameLabel.text = n.guild.gid > 0 ? n.guild.name : "无", i.guildIcon.source = n.guild.gid > 0 ? "guild_icon" + (n.guild.icon || 0) : "", 
            i.cityLabel.text = e.ComFunc.getUserLocation(n.province, n.city), i.xingzuoLabel.text = "" + XingZuo[n.constellation], 
            i.wechatLabel.text = "" + (n.wechat || "未设置"), i.signLabel.text = "" + (n.signature || "TA很懒，什么也没写"), 
            i.signLabel.touchEnabled = n.uid == playerModel.uid, i.addBtn.visible = i.addBtn.includeInLayout = !n.isFriend && i.data.from != Const.RankToIsland && i.data.from != Const.PlaneRank, 
            i.delBtn.visible = i.delBtn.includeInLayout = n.isFriend, i.hateBtn.visible = i.hateBtn.includeInLayout = i.data.from == Const.ChatPerson, 
            i.coupleBtn.visible = i.coupleBtn.includeInLayout = !1, i.hateBtn.visible && (i.hateBtn.source = i.data.playerInfo.hasBanned ? "setting_json.setting_btn_qxlh" : "setting_json.setting_btn_lh");
            var o = i.data.playerInfo.chatSign > 0 || i.coupleBtn.visible;
            i.coupleBtn.touchEnabled = o, o ? e.ComFunc.setDefaultFilters(i.coupleBtn) : e.ComFunc.setGrayFilters(i.coupleBtn);
            var a = this;
            this.data.type && !n.isFriend ? HttpService.post(e.ServerMsg.REGRESS_TAKE_NUM, "uid=" + playerModel.uid, function(e) {
                a && a && (RegressGiftProxy.regressGiftData = e, e.count < e.dayTakeMax ? (a.giftGroup.visible = !0, 
                a.giftBgImg.source = "regressGift_giftBg_png", a.giftImg.source = "regressGift_gift0_png", 
                util.rockTween(a.giftBoxGroup)) : t.giftGroup.visible = !1);
            }) : this.giftGroup.visible = !1;
        }, i.prototype.onVisitFunc = function() {
            soundModel.buttonOpen(), this.toSeeIsland();
        }, i.prototype.onAddFunc = function() {
            soundModel.buttonOpen(), this.data.type ? hortor.WindowManager.showWindow(e.WindowType.WINDOW_ADDREGRESSFRIEND, {
                inviteCode: this.data.playerInfo.inviteCode,
                data: RegressGiftProxy.regressGiftData
            }) : hortor.WindowManager.showWindow(e.WindowType.WINDOW_ADDFRIEND, {
                inviteCode: this.data.playerInfo.inviteCode
            });
        }, i.prototype.onDelFunc = function() {
            soundModel.buttonOpen();
            var t = this, i = t.data.playerInfo, n = Math.floor(i.updateElapse / 60 / 60 / 24 / 7);
            n > 0 ? hortor.TipManager.alert("确定删除这个好友？", function() {
                HttpService.post(e.ServerMsg.FRIEND_DEL, "uid=" + playerModel.uid + "&fid=" + i.uid, function(t) {
                    playerModel.updateAll(t), hortor.TipManager.tip("删除好友成功"), EventCenter.sendEvent(EventConst.DeleteFriend, {
                        delUid: i.uid
                    }), hortor.WindowManager.hideWindow(e.WindowType.WINDOW_PLAYERINFO);
                });
            }) : playerModel.ShipwreckCount > 0 ? hortor.TipManager.alert('确定使用"友尽卷轴"删除好友？\n当前拥有' + playerModel.ShipwreckCount + "个", function() {
                HttpService.post(e.ServerMsg.FRIEND_DEL, "uid=" + playerModel.uid + "&fid=" + i.uid, function(t) {
                    playerModel.updateAll(t), hortor.TipManager.tip("删除好友成功"), EventCenter.sendEvent(EventConst.DeleteFriend, {
                        delUid: i.uid
                    }), hortor.WindowManager.hideWindow(e.WindowType.WINDOW_PLAYERINFO);
                });
            }) : gateModel.iosPay ? HttpService.get(e.ServerMsg.SHOP_LIST, "uid=" + playerModel.uid, function(t) {
                for (var i = t.goods.prop, n = 0; n < i.length; n++) if ("shipwreck" == i[n].goodsId) {
                    hortor.WindowManager.showWindow(e.WindowType.WINDOW_SHOP_GOODS, i[n]);
                    break;
                }
            }) : hortor.TipManager.tip("友尽卷轴不足");
        }, i.prototype.onCoupleFunc = function() {
            soundModel.buttonOpen(), egret.log("解除cp");
        }, i.prototype.onHateFunc = function() {
            soundModel.buttonOpen();
            var e = "确认将TA拉入黑名单吗？";
            this.data.playerInfo.hasBanned ? this.sendBlackListPost() : hortor.TipManager.alert(e, this.sendBlackListPost.bind(this));
        }, i.prototype.sendBlackListPost = function() {
            var t = this;
            HttpService.post(e.ServerMsg.CHAT_BLACKLIST, "uid=" + playerModel.uid + "&fid=" + t.data.playerInfo.uid + "&isBan=" + !t.data.playerInfo.hasBanned, function(e) {
                t.data.playerInfo.hasBanned ? hortor.TipManager.tip("解除黑名单成功") : hortor.TipManager.tip("拉黑成功"), 
                t.data.playerInfo.hasBanned = !t.data.playerInfo.hasBanned, t.hateBtn.visible && (t.hateBtn.source = t.data.playerInfo.hasBanned ? "setting_btn_qxlh" : "setting_btn_lh"), 
                t.hateBtn.touchEnabled = !0;
            });
        }, i.prototype.onPrivateChatFunc = function() {
            chatModel.showPrivateChat(this.data.playerInfo.uid, this.data.playerInfo.chatSign), 
            hortor.WindowManager.hideWindow(e.WindowType.WINDOW_PLAYERINFO);
        }, i.prototype.toSeeIsland = function() {
            var t = this, i = t.data.playerInfo;
            rankModel.selectedRankPlayer = {
                uid: i.uid || 0,
                name: i.name || "",
                inviteCode: i.inviteCode || "",
                crowns: i.crowns || 0,
                headImg: i.headImg || "",
                chatSign: i.chatSign || 0,
                fromType: t.data.from
            }, t.data.from == Const.GuildsChat && (hortor.ScreenManager.hideScreen(e.ScreenType.GUILD_SCREEN), 
            hortor.WindowManager.hideWindow(e.WindowType.WINDOW_GUILD_MEMBERLIST), rankModel.selectedRankPlayer.chatSign = e.GuildCache.Members[t.data.playerInfo.uid] ? e.GuildCache.Members[t.data.playerInfo.uid].chatSign : 0), 
            t.data.from == Const.WorldChat && (rankModel.selectedRankPlayer.fromChat = !0), 
            (t.data.from == Const.RankToIsland || t.data.from == Const.PlaneRank) && (rankModel.selectedRankPlayer.inviteCode = ""), 
            EventCenter.sendEvent(EventConst.CloseMenuBtn), e.ComFunc.rankToIsland(), hortor.WindowManager.hideWindow(e.WindowType.WINDOW_PLAYERINFO);
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i;
    }(e.WindowBase);
    e.PlayerInfoWindow = t, __reflect(t.prototype, "game.PlayerInfoWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e.mMode = "agreement", e.page = 1, e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onTouch, this);
        }, i.prototype.onOpen = function() {
            var t = this;
            this.mMode = this.data, this.title.text = "agreement" == this.mMode ? "用户服务协议" : "隐私条款", 
            this.closeBtn.x = "agreement" == this.mMode ? 48 : 253, this.privacyScroller.visible = "privacy" == this.mMode, 
            this.fanyeGroup.visible = "agreement" == this.mMode, this.userDesc.visible = "agreement" == this.mMode, 
            this.leftBtn.visible = this.rightBtn.visible = Boolean("用户服务协议" == this.title.text), 
            HttpService.post(e.ServerMsg.USER_AGREEMENT, "uid=" + playerModel.uid + "&mode=" + this.mMode + "&page=" + this.page, function(e) {
                t && ("agreement" == t.mMode ? t.userDesc.text = e.content : t.descText.text = e.content);
            });
        }, i.prototype.onData = function() {}, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.onTouch = function(e) {
            var t = e.target, i = t.name;
            i && ("closeBtn" == i ? this.closeBtnFunc() : "leftBtn" == i ? this.leftBtnFunc() : "rightBtn" == i && this.rightBtnFunc());
        }, i.prototype.leftBtnFunc = function() {
            1 != this.page && (this.page--, HttpService.post(e.ServerMsg.USER_AGREEMENT, "uid=" + playerModel.uid + "&mode=" + this.mMode + "&page=" + this.page, function(e) {
                this.userDesc && (this.userDesc.text = e.content);
            }));
        }, i.prototype.rightBtnFunc = function() {
            var t = this;
            18 != this.page && (this.page++, HttpService.post(e.ServerMsg.USER_AGREEMENT, "uid=" + playerModel.uid + "&mode=" + this.mMode + "&page=" + this.page, function(e) {
                t.userDesc && (t.userDesc.text = e.content);
            }));
        }, i.prototype.closeBtnFunc = function() {
            this.userDesc.text = "", this.title.text = "", this.leftBtn.visible = this.rightBtn.visible = !1, 
            this.hide();
        }, i;
    }(e.WindowBase);
    e.ProtrocolWindow = t, __reflect(t.prototype, "game.ProtrocolWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e.mStates = [], e.mGenderColor = [ 16734615, 42223 ], e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.closeBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onCloseWindow, this), 
            this.helpBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onShowHelp, this), 
            this.kBtnExchange.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onExchange, this), 
            this.kBtnPrivacyProtocol.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onShowPrivacy, this), 
            this.kBtnUserProtocol.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onShowPortocol, this), 
            this.kBtnClean.addEventListener(egret.TouchEvent.TOUCH_TAP, this.clean, this), this.kBtnBind.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onBind, this), 
            this.kEdit.addEventListener(egret.Event.CHANGE, this.textInputFunc, this);
            for (var t = 0; 7 > t; t++) this["kBtnSlect" + t].addEventListener(egret.TouchEvent.TOUCH_TAP, this.onSelect, this), 
            this.mStates[t] = !1;
            this.version.text = "" + e.GameConfig.client + e.GameConfig.version;
        }, i.prototype.onOpen = function() {
            util.setRemoteAvatar(this.kAvatar.avatarImage, playerModel.headImg), this.kAvatar.starLabel.text = playerModel.crowns + "", 
            this.kLabelID.text = "ID:" + playerModel.uid, this.kLabelName.text = util.strSub(playerModel.name, 14), 
            this.kFriendCode.text = "邀请码:" + playerModel.inviteCode, 1 == playerModel.gender ? (this.kAvatar.avatarBg.source = "common_json.common_img_tz1_1", 
            this.kLabelName.textColor = this.mGenderColor[1]) : (this.kAvatar.avatarBg.source = "common_json.common_img_tz1_0", 
            this.kLabelName.textColor = this.mGenderColor[0]), this.showSign(), this.initSettingBtnStates(0, playerModel.forbiddenPush), 
            this.initSettingBtnStates(1, playerModel.nightAllowPush), this.initSettingBtnStates(2, playerModel.recommendOff), 
            this.initSettingBtnStates(3, playerModel.broadcastOff), this.initSettingBtnStates(4, playerModel.musicOff), 
            this.initSettingBtnStates(5, playerModel.musicBgOff), this.initSettingBtnStates(6, playerModel.worldChatOff), 
            this.kBtnBind.visible = !playerModel.isBindingWxGame, this.kBtnClean.visible = gateModel.isWxgame;
        }, i.prototype.onData = function() {
            this.kLabelRegister.text = "(" + moment(1e3 * this.data.createdAt).format("YYYY-MM-DD") + "注册)", 
            this.kLabelInviter.text = "邀请者:" + util.strSub(this.data.inviter.name, 7);
        }, i.prototype.textInputFunc = function() {
            this.kEdit.prompt = "";
            for (var e = 0, t = this.kEdit.text, i = 0; i < t.length; i++) {
                var n = new RegExp("[\\u4E00-\\u9FFF]", "");
                e += n.test(t[i]) ? 2 : 1;
            }
            if (48 >= e) this.kEdit.text = t; else {
                for (var o = "", e = 0, t = this.kEdit.text, i = 0; i < t.length; i++) {
                    var n = new RegExp("[\\u4E00-\\u9FFF]", "");
                    e += n.test(t[i]) ? 2 : 1, 48 >= e && (o += t[i]);
                }
                this.kEdit.text = o;
            }
        }, i.prototype.onSelect = function(e) {
            e.target.name && this.setBtnStates(parseInt(e.target.name));
        }, i.prototype.initSettingBtnStates = function(e, t) {
            1 == e ? this["kBtnSlect" + e].selected = t : this["kBtnSlect" + e].selected = !t, 
            this["kBtnSlect" + e].selected ? this["kImgStatus" + e].x = 480 : this["kImgStatus" + e].x = 448, 
            egret.Tween.removeTweens(this["kImgSelect" + e]), this["kBtnSlect" + e].selected ? this["kImgSelect" + e].alpha = 1 : this["kImgSelect" + e].alpha = 0;
        }, i.prototype.setBtnStates = function(e) {
            var t = 0, i = 0;
            switch (t = this["kBtnSlect" + e].selected ? 480 : 448, i = this["kBtnSlect" + e].selected ? 1 : 0, 
            egret.Tween.get(this["kImgStatus" + e]).to({
                x: t
            }, 200, egret.Ease.cubicOut), egret.Tween.get(this["kImgSelect" + e]).to({
                alpha: i
            }, 200), e) {
              case 0:
                this.setPushDay();
                break;

              case 1:
                this.setPushNight();
                break;

              case 2:
                this.setPushFriend();
                break;

              case 3:
                this.setSysNotice();
                break;

              case 4:
                this.setSound();
                break;

              case 5:
                this.setBgMusic();

              case 6:
                this.setChatBubble();
            }
        }, i.prototype.setPushDay = function() {
            HttpService.post(e.ServerMsg.SETTING, "uid=" + playerModel.uid + ("&forbiddenPush=" + !this.kBtnSlect0.selected), function(e) {
                playerModel.forbiddenPush = e.forbiddenPush;
            });
        }, i.prototype.setPushNight = function() {
            HttpService.post(e.ServerMsg.SETTING, "uid=" + playerModel.uid + ("&nightAllowPush=" + this.kBtnSlect1.selected), function(e) {
                playerModel.nightAllowPush = e.nightAllowPush;
            });
        }, i.prototype.setPushFriend = function() {
            var t = this;
            HttpService.post(e.ServerMsg.SETTING, "uid=" + playerModel.uid + ("&recommendOff=" + !this.kBtnSlect2.selected), function(e) {
                t.kBtnSlect2.selected || hortor.TipManager.alert("推荐好友已关闭\n您将不会被推荐给其他玩家。\n当您再次使用推荐好友功能时,\n开关会自动开启哦！"), 
                playerModel.recommendOff = e.recommendOff;
            });
        }, i.prototype.setSysNotice = function() {
            HttpService.post(e.ServerMsg.SETTING, "uid=" + playerModel.uid + ("&broadcastOff=" + !this.kBtnSlect3.selected), function(e) {
                playerModel.broadcastOff = e.broadcastOff;
            });
        }, i.prototype.setSound = function() {
            HttpService.post(e.ServerMsg.SETTING, "uid=" + playerModel.uid + ("&musicOff=" + !this.kBtnSlect4.selected), function(e) {
                playerModel.musicOff = e.musicOff, soundModel.soundOn = !playerModel.musicOff;
            });
        }, i.prototype.setChatBubble = function() {
            HttpService.post(e.ServerMsg.SETTING, "uid=" + playerModel.uid + ("&worldChatOff=" + !this.kBtnSlect6.selected), function(e) {
                playerModel.worldChatOff = e.worldChatOff;
            });
        }, i.prototype.setBgMusic = function() {
            HttpService.post(e.ServerMsg.SETTING, "uid=" + playerModel.uid + ("&musicBgOff=" + !this.kBtnSlect5.selected), function(e) {
                playerModel.musicBgOff = e.musicBgOff, soundModel.musicOn = !playerModel.musicBgOff;
            });
        }, i.prototype.showSign = function() {
            this.kEdit.text = playerModel.signature || "";
        }, i.prototype.onShowHelp = function() {
            e.ComFunc.openHelpPanel(HelpTextLabel.getHelpTextLabel());
        }, i.prototype.onExchange = function() {
            hortor.WindowManager.showWindow(e.WindowType.WINDOW_EXCHANGEBYCODE);
        }, i.prototype.onShowPrivacy = function() {
            soundModel.buttonClose(), hortor.WindowManager.showWindow(e.WindowType.WINDOW_PROTROCOL, "privacy");
        }, i.prototype.onShowPortocol = function() {
            soundModel.buttonClose(), hortor.WindowManager.showWindow(e.WindowType.WINDOW_PROTROCOL, "agreement");
        }, i.prototype.clean = function() {
            soundModel.buttonClose(), hortor.TipManager.alert("确定需要清理资源缓存？清理需要一段时间！", function() {
                hortor.VersionManager.clearCache();
            });
        }, i.prototype.onBind = function() {
            soundModel.buttonClose(), HttpService.get(e.ServerMsg.WX_CHECK_ACCOUNT, "uid=" + playerModel.uid, function(t) {
                t.accounts.length < 2 ? hortor.TipManager.tip("您还没有可关联的账号") : hortor.WindowManager.showWindow(e.WindowType.WINDOW_BIND, t);
            });
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.onCloseWindow = function() {
            var t = this, i = e.ComFunc.dealInputText(this.kEdit.text, 48);
            HttpService.post(e.ServerMsg.SETTING, "uid=" + playerModel.uid + "&nightAllowPush=" + playerModel.nightAllowPush + "&forbiddenPush=" + playerModel.forbiddenPush + "&musicOff=" + playerModel.musicOff + "&signature=" + i + "&musicBgOff=" + playerModel.musicBgOff + "&worldChatOff=" + playerModel.worldChatOff, function(e) {
                playerModel.signature = t.kEdit.text, EventCenter.sendEvent(EventConst.SetSignature), 
                t.hide();
            });
        }, i;
    }(e.WindowBase);
    e.SettingWindow = t, __reflect(t.prototype, "game.SettingWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.skinPath = "shop/ShopGiftItemSkin", e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.payBtn.addEventListener(egret.TouchEvent.TOUCH_BEGIN, this.touchBegin, this), 
            this.payBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.payBtnFunc, this);
        }, i.prototype.touchBegin = function(e) {
            e.stopPropagation();
        }, i.prototype.payBtnFunc = function(t) {
            e.PlatformManager.pay(this.data.goodsId);
        }, Object.defineProperty(i, "propTipRender", {
            get: function() {
                return null == this.mTipRender && (this.mTipRender = new e.PropTipsNode()), this.mTipRender;
            },
            enumerable: !0,
            configurable: !0
        }), i.prototype.onData = function() {
            var t = this.data;
            this.titleIcon.source = "shop_json.shop_img_icon_g" + (this.itemIndex + 1), this.payBtnLabel.text = "¥" + this.data.price;
            for (var n = 0; n < t.rewards.length; n++) {
                var o = e.ItemManager.getItemInfo(t.rewards[n].name);
                this["iconImg" + n].source = o.icon, this["numLabel" + n].text = "" + t.rewards[n].count, 
                hortor.TipManager.registTargetTip(this["iconImg" + n], t.rewards[n], 1500, i.propTipRender);
            }
            this.timer || (this.timer = new egret.Timer(1e3), this.timer.addEventListener(egret.TimerEvent.TIMER, this.timerFunc, this), 
            this.timer.start()), this.timeLabel.text = this.data.endRemain - shopModel.mTimer > 0 ? "剩余时间:" + e.ComFunc.formatTimeCNNew3(this.data.endRemain - shopModel.mTimer) : "活动已结束", 
            this.limitLabel.text = t.daily > 0 ? "每日限购：" + (t.daily - t.boughtTimes) : "限购：" + (t.timesLimit - t.boughtTimes), 
            this.payBtn.enabled = t.daily > 0 ? t.boughtTimes < t.daily : t.boughtTimes < t.timesLimit;
        }, i.prototype.timerFunc = function() {
            this.timeLabel.text = this.data.endRemain - shopModel.mTimer > 0 ? "剩余时间:" + e.ComFunc.formatTimeCNNew3(this.data.endRemain - shopModel.mTimer) : "活动已结束";
        }, i;
    }(e.ItemRenderBase);
    e.ShopGiftItem = t, __reflect(t.prototype, "game.ShopGiftItem");
}(game || (game = {})), window.ShopGiftItem = game.ShopGiftItem;

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.skinPath = "shop/ShopGoodsItemSkin", e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.payBtn.addEventListener(egret.TouchEvent.TOUCH_BEGIN, this.touchBegin, this), 
            this.payBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.payBtnFunc, this);
        }, i.prototype.touchBegin = function(e) {
            "prop" != this.data.type && e.stopPropagation();
        }, i.prototype.payBtnFunc = function(t) {
            "prop" != this.data.type && e.PlatformManager.pay(this.data.goodsId);
        }, i.prototype.onData = function() {
            if (this.numLabel.visible = !0, this.ownGroup.visible = !1, this.payBtnLabel.text = "¥" + this.data.price, 
            "energy" == this.data.type) {
                var t = this.data.goodsId, i = parseInt(t.substring(t.length - 1, t.length));
                this.goodsImg.source = e.ResourcePath.getItemIconByName("popIcon_energy_" + i), 
                this.numLabel.text = "x" + this.data.quantity;
            } else if ("money" == this.data.type) {
                var t = this.data.goodsId, i = parseInt(t.substring(t.length - 1, t.length));
                this.goodsImg.source = e.ResourcePath.getItemIconByName("popIcon_money_" + i), this.numLabel.text = "x" + this.data.quantity;
            } else if ("prop" == this.data.type) {
                this.numLabel.visible = !1, this.ownGroup.visible = !0, this.goodsImg.source = e.ItemManager.getItemInfo(this.data.goodsId).icon;
                var n = "";
                "monthcard" == this.data.goodsId ? (this.goodsName.text = "" + this.data.name, n = "(剩余时间:" + e.ComFunc.formatTimeCNNew3(e.ComFunc.getPropsCount(this.data.goodsId)) + ")") : (this.goodsName.text = this.data.name + "x" + e.ComFunc.toThousands(this.data.quantity), 
                n = "(拥有" + e.ComFunc.getPropsCount(this.data.goodsId) + "个)"), this.goodsCount.text = n;
            }
        }, i.prototype.getCurrentState = function() {
            return -1 == this.data.rank ? "cut" : "node";
        }, i.prototype.okBtnFunc = function() {
            soundModel.buttonOpen();
        }, i;
    }(e.ItemRenderBase);
    e.ShopGoodsItem = t, __reflect(t.prototype, "game.ShopGoodsItem");
}(game || (game = {})), window.ShopGoodsItem = game.ShopGoodsItem;

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e.limit = 0, e.count = 0, e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.closeBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.closeBtnFunc, this), 
            this.delBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.delBtnFunc, this), 
            this.addBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.addBtnFunc, this), 
            this.payBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.payBtnFunc, this);
        }, i.prototype.onData = function() {
            var t = this.data, i = e.ItemManager.getItemInfo(t.goodsId);
            this.iconImg.source = i.icon, this.nameLabel.text = t.name, this.descLabel.text = i.desc, 
            this.addBtn.visible = this.delBtn.visible = !gateModel.isWxgame, this.limit = this.getLimitCount(t.goodsId), 
            this.limitLabel.visible = -1 != this.limit, this.limitLabel.text = "今天最多再买" + this.limit * this.data.quantity + "个", 
            this.count = -1 == this.limit ? 1 : this.limit > 0 ? 1 : 0, this.initPrice();
        }, i.prototype.onClose = function() {
            this.delBtn.scaleX = this.delBtn.scaleY = 1, this.addBtn.scaleX = this.addBtn.scaleY = 1;
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.closeBtnFunc = function() {
            soundModel.buttonClose(), hortor.WindowManager.hideWindow(e.WindowType.WINDOW_SHOP_GOODS);
        }, i.prototype.getLimitCount = function(e) {
            var t = -1;
            switch (e) {
              case "killTitanCannonBall":
                t = playerModel.dailyEventInfo.buyKillTitanBallRemain;
                break;

              case "miniShield":
                t = playerModel.dailyEventInfo.buyMiniShieldRemain;
                break;

              case "puffer":
                t = playerModel.dailyEventInfo.buyPufferRemain;
                break;

              case "lolly":
                t = playerModel.dailyEventInfo.buyLollyRemain;
            }
            return t;
        }, i.prototype.initPrice = function() {
            this.countLabel.text = this.count * this.data.quantity + "个", this.payBtnLabel.text = "¥" + this.data.price * this.count;
        }, i.prototype.delBtnFunc = function() {
            this.count > 1 && (this.count--, this.initPrice());
        }, i.prototype.addBtnFunc = function() {
            -1 == this.limit ? (this.count++, this.initPrice()) : this.count < this.limit && (this.count++, 
            this.initPrice());
        }, i.prototype.payBtnFunc = function() {
            return this.count <= 0 ? void hortor.TipManager.bubble("今日已达购买上限，明日再来吧") : (shopModel.buyCounts = this.count * this.data.quantity, 
            void e.PlatformManager.pay(this.data.goodsId, this.count));
        }, i;
    }(hortor.Window);
    e.ShopGoodsWindow = t, __reflect(t.prototype, "game.ShopGoodsWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e.selectedIndex = 0, e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.baseScroll.viewport = this.baseList, this.baseList.addEventListener(eui.ItemTapEvent.ITEM_TAP, this.listItemFunc, this), 
            this.tabBar.addEventListener(eui.ItemTapEvent.ITEM_TAP, this.tabBarFunc, this), 
            this.closeBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.closeBtnFunc, this), 
            this.tabBar.dataProvider = new eui.ArrayCollection([ "shop0", "shop1", "shop2", "shop3" ]), 
            this.tabBar.itemRenderer = e.CommonTabSmall;
        }, i.prototype.onOpen = function() {
            this.tabBar.selectedIndex = this.selectedIndex = -1, this.tabBar.selectedIndex = this.selectedIndex = this.data;
        }, i.prototype.onData = function() {
            var t = this;
            this.tabBar.selectedIndex = this.selectedIndex = this.data, this.maskBg.visible = this.maskImg.visible = 0 != this.selectedIndex, 
            HttpService.get(e.ServerMsg.SHOP_LIST, {
                uid: playerModel.uid
            }, function(e) {
                t.listData = e, t.showList();
            }), this.timer || (this.timer = new egret.Timer(1e3), this.timer.addEventListener(egret.TimerEvent.TIMER, this.timerFunc, this), 
            this.timer.start());
        }, i.prototype.onClose = function() {
            this.timer && (this.timer.removeEventListener(egret.TimerEvent.TIMER, this.timerFunc, this), 
            this.timer.stop(), this.timer = null), shopModel.mTimer = 0;
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.timerFunc = function() {
            shopModel.mTimer++;
        }, i.prototype.closeBtnFunc = function() {
            soundModel.buttonClose(), hortor.WindowManager.hideWindow(e.WindowType.WINDOW_SHOP);
        }, i.prototype.showList = function() {
            switch (this.empty.visible = !1, this.selectedIndex) {
              case 0:
                this.initAcGroup();
                break;

              case 1:
                this.initEnergyGroup();
                break;

              case 2:
                this.initMoneyGroup();
                break;

              case 3:
                this.initPropsGroup();
                break;

              default:
                this.initAcGroup();
            }
        }, i.prototype.initAcGroup = function() {
            var t = this.listData.giftPackages;
            this.baseData = new eui.ArrayCollection(_.sortBy(t, "order")), this.baseList.dataProvider = this.baseData, 
            this.baseList.itemRenderer = e.ShopGiftItem, this.empty.visible = 0 == t.length;
        }, i.prototype.initEnergyGroup = function() {
            var t = this.listData.goods.energy;
            this.baseData = new eui.ArrayCollection(_.sortBy(t, "order")), this.baseList.dataProvider = this.baseData, 
            this.baseList.itemRenderer = e.ShopGoodsItem;
        }, i.prototype.initMoneyGroup = function() {
            var t = this.listData.goods.money;
            this.baseData = new eui.ArrayCollection(_.sortBy(t, "order")), this.baseList.dataProvider = this.baseData, 
            this.baseList.itemRenderer = e.ShopGoodsItem;
        }, i.prototype.initPropsGroup = function() {
            for (var t = this.listData.goods.prop, i = [], n = 0; n < t.length; n++) if (1 == t[n].isShow) if ("killTitanCannonBall" == t[n].goodsId || "summonStone" == t[n].goodsId) {
                var o = activityModel.getActivityInfo(e.ActivityType.KillTitan);
                o && playerModel.island >= 2 && i.push(t[n]);
            } else if ("puffer" == t[n].goodsId || "lolly" == t[n].goodsId) {
                var a = activityModel.getActivityInfo(e.ActivityType.Octopus);
                a && playerModel.highestCrowns >= Const.octopusLimit && (a.beginRemain <= 0 && a.endRemain > 0 || a.awardEndRemain > 0) && i.push(t[n]);
            } else if ("hamburger" == t[n].goodsId || "magicBook" == t[n].goodsId || "beachPowerPotion" == t[n].goodsId) {
                var r = activityModel.getActivityInfo(e.ActivityType.beach);
                r && playerModel.island >= Const.beachLimit && (r.beginRemain <= 0 && r.endRemain > 0 || r.awardEndRemain > 0) && i.push(t[n]);
            } else i.push(t[n]);
            this.baseData = new eui.ArrayCollection(_.sortBy(i, "order")), this.baseList.dataProvider = this.baseData, 
            this.baseList.itemRenderer = e.ShopGoodsItem;
        }, i.prototype.refreshData = function() {
            return __awaiter(this, void 0, void 0, function() {
                var e;
                return __generator(this, function(t) {
                    switch (t.label) {
                      case 0:
                        return console.log("this.listData ==>", this.listData), e = this, [ 4, this.getData() ];

                      case 1:
                        return e.listData = t.sent(), console.log("this.listData 2 ==>", this.listData), 
                        [ 2 ];
                    }
                });
            });
        }, i.prototype.getData = function() {
            return __awaiter(this, void 0, void 0, function() {
                return __generator(this, function(t) {
                    return [ 2, new Promise(function(t, i) {
                        HttpService.get(e.ServerMsg.SHOP_LIST, {
                            uid: playerModel.uid
                        }, function(e) {
                            t(e);
                        });
                    }) ];
                });
            });
        }, i.prototype.tabBarFunc = function(t) {
            var i = this;
            soundModel.buttonOpen(), this.selectedIndex != t.itemIndex && (this.selectedIndex = t.itemIndex, 
            this.maskBg.visible = this.maskImg.visible = 0 != this.selectedIndex, 0 == this.selectedIndex ? HttpService.get(e.ServerMsg.SHOP_LIST, {
                uid: playerModel.uid
            }, function(e) {
                i.listData = e, i.showList();
            }) : this.showList());
        }, i.prototype.listItemFunc = function(t) {
            soundModel.buttonOpen();
            var i = t.item;
            if (i.type && "prop" == i.type) switch (i.goodsId) {
              case "monthcard":
                hortor.WindowManager.currentWindow = e.WindowType.WINDOW_MONTHCARD;
                break;

              case "wanted":
                hortor.WindowManager.showWindow(e.WindowType.WINDOW_WANTED);
                break;

              default:
                hortor.WindowManager.showWindow(e.WindowType.WINDOW_SHOP_GOODS, i);
            }
        }, i;
    }(e.WindowBase);
    e.ShopWindow = t, __reflect(t.prototype, "game.ShopWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(e) {
        function t() {
            return e.call(this) || this;
        }
        return __extends(t, e), t.prototype.initView = function(e) {
            this.headImg && this.headBoder && this.crownsLabel && this.nameLabel && (util.setRemoteAvatar(this.headImg, e.headImg), 
            this.headBoder.source = 1 == e.gender ? "common_json.common_img_tz1_1" : "common_json.common_img_tz1_0", 
            this.crownsLabel.text = e.crowns, this.nameLabel.text = util.strSub(e.name, 5));
        }, t;
    }(e.ItemRenderBase);
    e.StealPlayerInfoItem = t, __reflect(t.prototype, "game.StealPlayerInfoItem");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.comeInTime = 800, e.selectId = -1, e.selectTargets = [], e.isRefresh = !1, 
            e.islandsPos = [ {
                x: 160,
                y: 506
            }, {
                x: 320,
                y: 692
            }, {
                x: 480,
                y: 506
            } ], e.islandsScale = [ .45, .7, .45 ], e.effect = null, e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            for (var e = 0; 3 > e; e++) util.initBtnAnchorNew(this["selectGroup" + e], 1.1, 1, !0), 
            this.addClick(this["selectGroup" + e], this.selectFunc, this);
            this.addClick(this.confirmBtn, this.confirmBtnFunc, this), this.setNotchFit(this.topGroup);
        }, i.prototype.onData = function() {
            if (e.TutorialManager.instance.newbieTutorialing) {
                wheelModel.stealIslands = [];
                for (var t = 0; 3 > t; t++) {
                    var i = {};
                    i.island = t + 4, i.buildings = [], i.crowns = 25 * i.island;
                    for (var n = 0; 5 > n; n++) {
                        var o = {};
                        o.status = 0, o.level = _.random(2, 5), i.crowns += o.level, i.buildings.push(o);
                    }
                    wheelModel.stealIslands.push(i);
                }
            }
            this.initKingView(), this.initIslandView(), this.setBetView(), this.stealGroup.scaleX = this.stealGroup.scaleY = .5, 
            this.stealGroup.horizontalCenter = 640, this.stealGroup.verticalCenter = 185, this.betGroup.visible = !1;
        }, i.prototype.onOpen = function() {
            for (var e = 0; 3 > e; e++) this["island" + e].x = this.islandsPos[e].x, this["island" + e].y = this.islandsPos[e].y, 
            util.setScale(this["island" + e], this.islandsScale[e]);
            this.data.posX > 0 && (util.setScale(this.tipsGroup, 0), this.comeInTween());
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.initKingView = function() {
            var t;
            t = e.TutorialManager.instance.newbieTutorialing ? new e.StealTarget(Robot.robotSteal) : wheelModel.stealTarget, 
            this.kingName.text = "" + t.name, this.kingMoney.text = e.ComFunc.toThousands(t.money), 
            this.avatar.data = {
                gender: t.gender,
                headImg: t.headImg,
                crowns: t.crowns,
                showStar: !1
            }, 13 == playerModel.tutorial && (this.kingMoney.text = e.ComFunc.toThousands(Const.KingMoney));
        }, i.prototype.initIslandView = function() {
            for (var e = wheelModel.stealIslands, t = 0; 3 > t; t++) this["island" + t].initIslandView(e[t]);
        }, i.prototype.setBetView = function() {
            this.betGroup.visible = playerModel.betCount > 0;
            var e = playerModel.betCount > 0 ? playerModel.betCount : 1;
            this.betImg.source = "steal_json.wheel_img_number" + e;
        }, i.prototype.comeInTween = function() {
            var t = this;
            this.setSelectTouchEnable(!1);
            var i = egret.Tween.get(this.stealGroup);
            i.to({
                horizontalCenter: 0
            }, this.comeInTime, egret.Ease.quadInOut).call(function() {
                hortor.NotificationManager.dispatch(e.NotificationType.BG_ADJUST_V, {
                    isUp: !0
                });
            }).to({
                scaleX: 1,
                scaleY: 1,
                verticalCenter: 0
            }, Const.tweenTime1, egret.Ease.quadInOut).call(function() {
                egret.Tween.removeTweens(t.stealGroup), t.selectTween(), t.betGroup.visible = !0;
            }), this.topTween();
        }, i.prototype.topTween = function(e) {
            var t = this;
            void 0 === e && (e = 0);
            var i = egret.Tween.get(this.topGroup);
            i.to({
                x: e
            }, Const.tweenTime2, egret.Ease.quadInOut).call(function() {
                egret.Tween.removeTweens(t.topGroup), 0 == e && t.tipsTween();
            });
        }, i.prototype.tipsTween = function(e) {
            void 0 === e && (e = 1);
            var t = egret.Tween.get(this.tipsGroup);
            t.to({
                scaleX: e,
                scaleY: e
            }, 200);
        }, i.prototype.selectTween = function() {
            for (var e = this, t = function(t) {
                var n = i["selectGroup" + t];
                util.setScale(n, 0), n.visible = !0;
                var o = egret.Tween.get(n);
                o.to({
                    scaleX: 1,
                    scaleY: 1
                }, 200).call(function() {
                    egret.Tween.removeTweens(n), e.setSelectTouchEnable(!0);
                });
            }, i = this, n = 0; 3 > n; n++) t(n);
        }, i.prototype.setSelectTouchEnable = function(e) {
            for (var t = 0; 3 > t; t++) this["selectGroup" + t].touchEnabled = e;
        }, i.prototype.selectFunc = function(e) {
            soundModel.buttonOpen();
            var t = e.target, i = t.name.substr(t.name.length - 1, 1), n = /^[0-9]$/;
            if (0 != n.test(i)) {
                var o = parseInt(i);
                this.selectId = o, this.setSelectTouchEnable(!1), this.tipsTween(0), this.playBoomPaoMc();
            }
        }, i.prototype.playBoomPaoMc = function() {
            var t = this, i = this.selectId;
            this["selectGroup" + i].visible = !1;
            var n = hortor.ObjectPool.getObject(e.MoviePlayer, "boomPao", "boomPao");
            n.x = this["selectGroup" + i].x, n.y = this["selectGroup" + i].y, this.stealGroup.addChild(n), 
            n.play(1, function() {
                n.parent.removeChild(n), hortor.ObjectPool.disposeObject(n);
            }, this);
            for (var o = 0; 3 > o; o++) {
                var a = egret.Tween.get(this["selectGroup" + o]);
                a.to({
                    scaleX: 0,
                    scaleY: 0
                }, 400, egret.Ease.circOut);
            }
            var r = egret.setTimeout(function() {
                egret.clearTimeout(r), t.sendStealPost();
            }, this, 400);
        }, i.prototype.sendStealPost = function() {
            var t = this;
            -1 != this.selectId && (13 == playerModel.tutorial ? HttpService.post(e.ServerMsg.TUTORIAL, "uid=" + playerModel.uid + "&step=13&idx=" + this.selectId, function(i) {
                e.PlatformManager.openEvent("tutorial_13"), playerModel.update(i), playerModel.betCount = 0;
                for (var n = 0; 3 > n; n++) i.targets[n].crowns = wheelModel.stealIslands[n].crowns;
                t.stealPostData = i, t.stealPostData.stealTarget = wheelModel.stealTarget, t.selectTargets = i.targets, 
                t.selectTargets[t.selectId].name = Robot.robotSteal.name, t.selectTargets[t.selectId].headImg = Robot.robotSteal.headImg, 
                t.selectTargets[t.selectId].isRichMan = !0, wheelModel.stealIslands = null, t.showChangeNumEffect(), 
                t.playFinalEffect();
            }) : HttpService.post(e.ServerMsg.STEAL, "uid=" + playerModel.uid + "&idx=" + this.selectId, function(i) {
                playerModel.update(i), t.stealPostData = i, t.selectTargets = i.targets, t.showChangeNumEffect(), 
                t.playFinalEffect(), EventCenter.sendEvent(EventConst.GoldChange), i.targets[t.selectId].isRichMan && guildModel.addGuildTaskValue(e.GuildProxy.guestRichman, 1);
            }));
        }, i.prototype.playFinalEffect = function() {
            var t = this, i = this.selectTargets;
            this.topTween(-this.topGroup.width), soundModel.playSound(e.SoundType.SOUND_STEAL_RESULT);
            for (var n = 0; n < i.length; n++) this["richIcon" + n].visible = !1, this["playerInfo" + n].initView(i[n]), 
            this["island" + n].setMoneyBitMap(e.ComFunc.toThousands(i[n].money)), n != this.selectId && (this["playerInfoGroup" + n].visible = !0, 
            this["island" + n].moneyTween());
            var o = egret.setTimeout(function() {
                egret.clearTimeout(o);
                for (var e = 0; 3 > e; e++) e != t.selectId && (t.setScaleTween(t["playerInfoGroup" + e]), 
                t["island" + e].moneyBitMap.visible = !1);
                t.showSelectPlayerTween();
            }, this, 1e3);
        }, i.prototype.showSelectPlayerTween = function() {
            for (var e = this, t = 300, i = 0; 3 > i; i++) if (i != this.selectId) {
                var n = egret.Tween.get(this["island" + i]);
                n.wait(200).to({
                    scaleX: 0,
                    scaleY: 0
                }, t, egret.Ease.quadIn);
            }
            var o = egret.Tween.get(this["island" + this.selectId]);
            o.wait(200).to({
                scaleX: 1,
                scaleY: 1,
                x: .5 * hortor.StageManager.stageWidth,
                y: 451
            }, t, egret.Ease.quadIn).wait(50).call(function() {
                e["island" + e.selectId].moneyTween();
                var t = egret.setTimeout(function() {
                    egret.clearTimeout(t), e.finalGroupTween(), e.bottomTween();
                }, e, 350);
            });
        }, i.prototype.finalGroupTween = function() {
            var t = this;
            this.stealEmojiAr && (this.stealEmojiAr.visible = !1), util.setScale(this.finalAvatarGroup, 0), 
            util.setScale(this.finalIcon, 0);
            var i = this.selectTargets[this.selectId];
            this.finalAvatar.data = {
                gender: i.gender,
                headImg: i.headImg,
                crowns: i.crowns
            }, this.finalNameLabel.text = "" + util.strSub(i.name, 7), this.finalNameLabel.textColor = 1 == i.gender ? Const.genderCorlor1 : Const.genderCorlor2, 
            this.finalIcon.source = i.isRichMan ? "steal_json.wheel_img_cdl1" : "steal_json.wheel_img_ccl1", 
            this.finalGroup.visible = !0, this.setScaleTween(this.finalAvatarGroup, 1), this.setScaleTween(this.finalIcon, 1), 
            this.richIcon.visible = i.isRichMan, i.isRichMan ? soundModel.playSound(e.SoundType.SOUND_STEAL_GOT_KING) : soundModel.playSound(e.SoundType.SOUND_STEAL_MISS_KING);
            var n = egret.setTimeout(function() {
                egret.clearTimeout(n), i.isRichMan && t.playEmojiArmature("ku");
            }, this, 300);
        }, i.prototype.playEmojiArmature = function(t) {
            egret.log("acName = ", t), this.stealEmojiAr ? (this.stealEmojiAr.visible = !0, 
            this.stealEmojiAr.play(t, 1)) : (this.stealEmojiAr = new e.ArmaturePlayer("stealEmoji"), 
            this.finalGroup.addChild(this.stealEmojiAr), this.stealEmojiAr.x = 260, this.stealEmojiAr.y = 240, 
            this.stealEmojiAr.play(t, 1));
        }, i.prototype.playEmojiArmature2 = function(t, i) {
            egret.log("acName = ", t);
            var n = hortor.ObjectPool.getObject(e.ArmaturePlayer, "stealEmoji", "stealEmoji");
            i.addChild(n), n.x = 60, n.y = 30, n.play(t, 1, function() {
                n && n.parent && (n.parent.removeChild(n), hortor.ObjectPool.disposeObject(n));
            });
        }, i.prototype.setScaleTween = function(e, t, i) {
            void 0 === t && (t = 0), void 0 === i && (i = 200);
            var n = egret.Tween.get(e);
            n.to({
                scaleX: t,
                scaleY: t
            }, i, egret.Ease.quadIn).call(function() {
                egret.Tween.removeTweens(e);
            });
        }, i.prototype.bottomTween = function() {
            var t = this, i = this.selectTargets[this.selectId];
            this.stealedMoney.text = "￥" + e.ComFunc.toThousands(i.money), this.descLabel.text = i.isRichMan ? "哇塞！猜到土豪！" : "很遗憾没猜到土豪！";
            var n = egret.Tween.get(this.bottomGroup);
            n.wait(200).to({
                bottom: 20
            }, 300, egret.Ease.backOut).call(function() {
                uiModel.onShow(e.UINameType.stealTipOkBtn, t.confirmBtn);
            });
        }, i.prototype.showChangeNumEffect = function() {
            var e = egret.Tween.get(this.betImg);
            e.to({
                scaleX: 2,
                scaleY: 2
            }, 200, egret.Ease.quadOut).to({
                scaleX: 1,
                scaleY: 1
            }, 100), this.setBetView();
        }, i.prototype.confirmBtnFunc = function() {
            var t = !0, i = this.stealPostData.stealTarget;
            t = wheelModel.stealTarget.name != i.name || wheelModel.stealTarget.money != i.money, 
            wheelModel.update(this.stealPostData), e.TutorialManager.instance.newbieTutorialing && (t = !0), 
            this.isRefresh = t, this.islandBackTween();
        }, i.prototype.islandBackTween = function() {
            var t = this;
            this.finalGroup.visible = !1, this.betGroup.visible = !1;
            for (var i = function(e) {
                var i = egret.Tween.get(n["island" + e]);
                n.selectId == e ? i.to({
                    scaleX: n.islandsScale[e],
                    scaleY: n.islandsScale[e],
                    x: n.islandsPos[e].x,
                    y: n.islandsPos[e].y
                }, 300, egret.Ease.quadIn).call(function() {
                    2 == e && t.initPlayerInfoTween();
                }).wait(1e3).call(function() {
                    2 == e && t.bottomBackTween(), egret.Tween.removeTweens(t["island" + e]);
                }) : (n["island" + e].moneyBitMap.visible = !0, i.to({
                    scaleX: n.islandsScale[e],
                    scaleY: n.islandsScale[e]
                }, 300, egret.Ease.quadIn).call(function() {
                    2 == e && t.initPlayerInfoTween();
                }).wait(1e3).call(function() {
                    2 == e && t.bottomBackTween(), egret.Tween.removeTweens(t["island" + e]);
                }));
            }, n = this, o = 0; 3 > o; o++) i(o);
            uiModel.onHide(e.UINameType.stealTipOkBtn);
            var a = egret.Tween.get(this.bottomGroup);
            a.to({
                bottom: -181
            }, 300, egret.Ease.quadOut).wait(1200).call(function() {
                egret.Tween.removeTweens(t.bottomGroup);
            });
        }, i.prototype.initPlayerInfoTween = function() {
            for (var e = this.selectTargets, t = 0; t < e.length; t++) this["playerInfoGroup" + t].scaleX = this["playerInfoGroup" + t].scaleY = 0, 
            this["playerInfoGroup" + t].visible = !0, this["richIcon" + t].visible = e[t].isRichMan, 
            this.setScaleTween(this["playerInfoGroup" + t], 1), e[t].isRichMan && this.selectId != t && this.playEmojiArmature2("xiao", this["playerInfoGroup" + t]);
        }, i.prototype.bottomBackTween = function() {
            var t = this;
            soundModel.playSound(e.SoundType.SOUND_WHEEL_STEAL_GONE);
            var i = wheelModel.stealIslands ? -640 : 640;
            hortor.NotificationManager.dispatch(e.NotificationType.BG_ADJUST_V, {
                isUp: !1
            });
            var n = egret.Tween.get(this.stealGroup);
            n.to({
                scaleX: .45,
                scaleY: .45,
                verticalCenter: 185
            }, Const.tweenTime1, egret.Ease.quadInOut).call(function() {
                wheelModel.stealIslands ? hortor.NotificationManager.dispatch(e.NotificationType.BG_CLOUD_GO) : hortor.NotificationManager.dispatch(e.NotificationType.BG_CLOUD_BACK);
            }), n.wait(200).to({
                horizontalCenter: i
            }, this.comeInTime, egret.Ease.quadInOut).call(function() {
                egret.Tween.removeTweens(t.stealGroup);
                for (var i = 0; 3 > i; i++) t["island" + i].moneyBitMap.visible = !1;
                wheelModel.stealIslands ? (hortor.WindowManager.hideWindow(e.WindowType.WINDOW_STEAL), 
                hortor.WindowManager.showWindow(e.WindowType.WINDOW_STEAL, {
                    posX: 960
                })) : (EventCenter.sendEvent(EventConst.WheelForStealBack, {
                    isRefresh: t.isRefresh
                }), hortor.WindowManager.hideWindow(e.WindowType.WINDOW_STEAL));
            });
        }, i;
    }(e.WindowBase);
    e.StealWindow = t, __reflect(t.prototype, "game.StealWindow");
}(game || (game = {}));

var TaptitansBoss = function() {
    function e(e) {
        this.mediator = e;
    }
    return e.prototype.onViewRemove = function() {
        this.clearMonsterEventListener();
    }, e.prototype.onViewRegister = function() {}, e.prototype.openPanel = function(e) {
        this.boss || (this.boss = new game.ArmaturePlayer("pet"), e.addChild(this.boss)), 
        this.boss.x = e.width / 2, this.boss.y = e.height / 2;
    }, Object.defineProperty(e.prototype, "name", {
        get: function() {
            return this.boss.getActionName();
        },
        enumerable: !0,
        configurable: !0
    }), e.prototype.play = function(e) {
        this.boss.play(e, 0);
    }, e.prototype.start = function() {
        this.clearMonsterEventListener(), soundModel.playSound(game.SoundType.SOUND_TAP_START), 
        this.boss.play("start", 1, this.monsterWakeupEnd, this);
    }, e.prototype.die = function() {
        this.state = e.STATE_DIE, this.clearMonsterEventListener(), soundModel.playSound(game.SoundType.SOUND_TAP_DIE), 
        this.boss.play("die", 1, this.monsterDieEnd, this);
    }, e.prototype.sleep = function() {
        this.clearMonsterEventListener(), soundModel.stopSound(game.SoundType.SOUND_TAP_STILL), 
        soundModel.playSound(game.SoundType.SOUND_TAP_LOOP, 999), this.boss.play("loop", 0);
    }, e.prototype.still = function() {
        this.state = e.STATE_STILL, this.clearMonsterEventListener(), soundModel.stopSound(game.SoundType.SOUND_TAP_LOOP), 
        soundModel.playSound(game.SoundType.SOUND_TAP_STILL, 999), this.boss.play("still", 0);
    }, e.prototype.wakeup = function() {
        this.clearMonsterEventListener(), soundModel.playSound(game.SoundType.SOUND_TAP_WAKE), 
        this.boss.play("wakeup", 1, this.monsterWakeupEnd, this);
    }, e.prototype.monsterDieEnd = function() {
        this.sleep();
    }, e.prototype.monsterWakeupEnd = function() {
        this.still();
    }, e.prototype.attacked = function() {
        soundModel.playSound(game.SoundType.SOUND_TAP_HURT), this.clearMonsterEventListener(), 
        this.boss.play("attacked", 1, this.monsterAttackedEnd, this);
    }, e.prototype.monsterAttackedEnd = function() {
        this.still();
    }, e.prototype.clearMonsterEventListener = function() {
        soundModel.stopSound(game.SoundType.SOUND_TAP_STILL);
    }, e.STATE_DIE = 0, e.STATE_STILL = 1, e;
}();

__reflect(TaptitansBoss.prototype, "TaptitansBoss");

var TaptitansCanon = function() {
    function e(e) {
        this.lock = !1, this.hold = !1, this.boatGroupStartY = 0, this.mediator = e, this.boatGroupStartY = this.mediator.boatGroup.y;
    }
    return e.prototype.openPanel = function() {
        this.mediator.boatGroup.y = this.mediator.height, this.mediator.boatGroup.alpha = 0, 
        this.canon || (this.canon = new game.ArmaturePlayer("cannon"), this.mediator.canonGroup.addChild(this.canon)), 
        this.canon.x = this.mediator.canonGroup.width / 2, this.canon.y = this.mediator.canonGroup.height / 2, 
        this.canon.play("wait", 1), this.canonBuff || (this.canonBuff = new game.ArmaturePlayer("cononbuff"), 
        this.mediator.canonGroup.addChild(this.canonBuff)), this.mediator.buffGroup.visible = !1, 
        this.canonBuff.x = this.mediator.canonGroup.width / 2, this.canonBuff.y = this.mediator.canonGroup.height / 2, 
        this.canonBuff.play("still", 1), this.canonBuff.visible = !1;
    }, e.prototype.onViewRegister = function() {
        this.mediator.canonGroup.addEventListener(egret.TouchEvent.TOUCH_BEGIN, this.onTouchBegin, this), 
        this.mediator.addEventListener(eui.UIEvent.ENTER_FRAME, this.onEnterFrame, this);
    }, e.prototype.onViewRemove = function() {
        var e = this.mediator;
        e.canonGroup.removeEventListener(egret.TouchEvent.TOUCH_BEGIN, this.onTouchBegin, this), 
        e.canonGroup.removeEventListener(egret.TouchEvent.TOUCH_END, this.onTouchEnd, this), 
        e.removeEventListener(eui.UIEvent.ENTER_FRAME, this.onEnterFrame, this), this.clearLockHandle(), 
        this.clearHoldHandle(), egret.Tween.removeTweens(e.boatGroup), egret.Tween.removeTweens(e.shellGroup), 
        egret.Tween.removeTweens(e.noticeImg);
    }, e.prototype.resetAni = function() {
        this.canonBuff && (this.canonBuff.play("still", 1), this.canonBuff.visible = !1);
    }, e.prototype.hide = function() {
        var e = this.mediator;
        egret.Tween.get(e.boatGroup).to({
            y: e.height,
            alpha: 0,
            visible: !1
        }, 200).call(function() {
            e.boatGroup.visible = !1, e.shellGroup.visible = !1, egret.Tween.removeTweens(e.boatGroup);
        });
    }, e.prototype.show = function() {
        var e = this, t = this.mediator;
        t.shellGroup.scaleX = t.shellGroup.scaleY = 0, t.shellGroup.visible = !0, egret.Tween.get(t.shellGroup).to({
            scaleX: 1,
            scaleY: 1
        }, 200, egret.Ease.backOut), egret.Tween.get(t.boatGroup).to({
            y: this.boatGroupStartY,
            alpha: 1,
            visible: !0
        }, 200).call(function() {
            t.boatGroup.visible = !0, e.canon.play("up", 1, function() {
                e.canon.play("still", 0);
            }), t._isFirst && (t.noticeImg.visible = !0, egret.Tween.get(t.noticeImg, {
                loop: !0
            }).to({
                alpha: 0
            }, 1e3, egret.Ease.quartIn).to({
                alpha: 1
            }, 1e3, egret.Ease.quartOut));
        });
    }, e.prototype.onTouchBegin = function(e) {
        var t = this;
        this.mediator.uiLock || this.lock || TaptitansInfo.info.remainTime > 0 && (playerModel.killTitanCannonBall > 0 ? (this.clearHoldHandle(), 
        this.hold = !0, this.canon.play("hold", 1), this.canonBuff.play("hold", 1), this.mediator.addEventListener(egret.TouchEvent.TOUCH_END, this.onTouchEnd, this), 
        this.mediator.addEventListener(egret.TouchEvent.TOUCH_CANCEL, this.onTouchEnd, this), 
        this.canonHoldHandle = egret.setTimeout(function() {
            t.onTouchEnd(null);
        }, this, 5100), this.mediator.onCanonTouchBegin(e)) : TaptitansInfo.info.shareCount >= TaptitansInfo.info.shareMaxCount ? gateModel.iosPay ? HttpService.get(game.ServerMsg.SHOP_LIST, "uid=" + playerModel.uid, function(e) {
            var t = _.find(e.goods.prop, function(e) {
                return "killTitanCannonBall" == e.goodsId;
            });
            hortor.WindowManager.showWindow(game.WindowType.WINDOW_SHOP_GOODS, t);
        }) : hortor.TipManager.tip("炮弹不足") : hortor.WindowManager.showWindow(game.WindowType.WINDOW_TAPTITANSFREESHELL));
    }, e.prototype.onTouchEnd = function(e) {
        var t = this;
        this.mediator.noticeImg && this.mediator.noticeImg.visible && (egret.Tween.removeTweens(this.mediator.noticeImg), 
        this.mediator.noticeImg.visible = !1, this.mediator._isFirst = !1), soundModel.playSound(game.SoundType.SOUND_TAP_BOOM), 
        this.clearHoldHandle(), this.clearLockHandle(), this.lock = !0, this.hold = !1, 
        this.canonLockHandle = egret.setTimeout(function() {
            t.clearLockHandle();
        }, this, 1300), this.canon.play("attack", 1, function() {
            t.canon.play("still", 0), t.canonBuff.play("still", 0);
        }, this), this.canonBuff.play("attack", 0), this.mediator.removeEventListener(egret.TouchEvent.TOUCH_END, this.onTouchEnd, this), 
        this.mediator.removeEventListener(egret.TouchEvent.TOUCH_CANCEL, this.onTouchEnd, this), 
        this.mediator.onCanonTouchEnd(e);
    }, e.prototype.onEnterFrame = function(e) {
        if (this.mediator.isBuffing) {
            var t = 1e3 * TaptitansInfo.info.bufferDuration;
            this.mediator.buffGroup.visible = !0, this.mediator.buffMask.height = Math.max(egret.getTimer() - this.mediator.buffBeginTime, 0) / t * 98, 
            this.canonBuff.visible = !0;
        } else this.mediator.buffGroup.visible = !1, this.canonBuff.visible = !1;
    }, e.prototype.clearHoldHandle = function() {
        this.canonHoldHandle > 0 && (egret.clearTimeout(this.canonHoldHandle), this.canonHoldHandle = 0);
    }, e.prototype.clearLockHandle = function() {
        this.lock = !1, this.canonLockHandle > 0 && (egret.clearTimeout(this.canonLockHandle), 
        this.canonLockHandle = 0);
    }, e;
}();

__reflect(TaptitansCanon.prototype, "TaptitansCanon");

var TaptitansDial = function() {
    function e(e) {
        this.mediator = e;
    }
    return e.prototype.openPanel = function() {
        this.perfectEffect || (this.perfectEffect = new game.ArmaturePlayer("perfect"), 
        this.mediator.dialGroup.addChild(this.perfectEffect)), this.perfectEffect.x = 225, 
        this.perfectEffect.y = 80, this.perfectEffect.visible = !1, this.mediator.dialGroup.visible = !1;
    }, e.prototype.onViewRemove = function() {
        var e = this.mediator;
        egret.Tween.removeTweens(e.indicatorImg), egret.Tween.removeTweens(e.dialGroup);
    }, e.prototype.onViewRegister = function() {}, e.prototype.show = function() {
        this.mediator.dialGroup.visible = !0;
    }, e.prototype.hide = function() {
        this.mediator.dialGroup.visible = !1;
    }, e.prototype.onCanonTouchBegin = function(e) {
        egret.Tween.removeTweens(this.mediator.indicatorImg), egret.Tween.removeTweens(this.mediator.dialGroup), 
        this.mediator.dialGroup.visible = !0, this.mediator.dialGroup.alpha = 1, this.mediator.indicatorImg.rotation = -75, 
        this.mediator.indicatorImg.visible = !0, this.indicatorGo();
    }, e.prototype.onCanonTouchEnd = function(e) {
        var t = this;
        egret.Tween.removeTweens(this.mediator.indicatorImg), egret.Tween.get(this.mediator.dialGroup).wait(300).to({
            alpha: 0
        }, 200).call(function() {
            t.mediator.dialGroup.visible = !1;
        });
        var i = this.mediator.indicatorImg.rotation;
        i >= 45 && 55 >= i && (this.perfectEffect.visible = !0, this.perfectEffect.play("newAnimation", 1, function() {
            t.perfectEffect.visible = !1;
        }, this), this.shwoPerfect());
    }, e.prototype.indicatorGo = function() {
        egret.Tween.get(this.mediator.indicatorImg).to({
            rotation: 75
        }, 550).call(this.indicatorBack, this);
    }, e.prototype.indicatorBack = function() {
        egret.Tween.get(this.mediator.indicatorImg).to({
            rotation: -75
        }, 300, egret.Ease.quadIn).call(this.indicatorGo, this);
    }, e.prototype.shwoPerfect = function() {
        var e = new eui.Image();
        this.mediator.isBuffing ? (e.source = "taptitans_perfect2", e.anchorOffsetX = 193, 
        e.anchorOffsetY = 51) : (e.source = "taptitans_perfect", e.anchorOffsetX = 147, 
        e.anchorOffsetY = 44), e.x = this.mediator.width / 2, e.y = this.mediator.height / 2, 
        this.mediator.addChild(e), egret.Tween.get(e).to({
            scaleX: 1.8,
            scaleY: 1.8
        }, 80).to({
            scaleX: .6,
            scaleY: .6
        }, 100).wait(100).to({
            y: e.y - 175,
            alpha: 0
        }, 1e3).call(function() {
            util.remove(e);
        });
    }, e.prototype.getDamage = function() {
        var e = 0, t = this.mediator.indicatorImg.rotation - -75;
        return e = 120 > t ? Math.floor(50 + t / 4) : t >= 120 && 130 >= t ? 100 : Math.floor(80 - (t - 130)), 
        this.mediator.isBuffing && (e *= 2), e = e > this.mediator.getBossHp() ? this.mediator.getBossHp() : e;
    }, e;
}();

__reflect(TaptitansDial.prototype, "TaptitansDial");

var TaptitansInfo = function() {
    function e() {
        this.tid = -1, this.closedNotice = !1, this.remainHP = 0, this.remainTime = 0, this.maxHP = 0, 
        this.summonStone = 0, this.cannonBallCount = 0, this.attackedCount = 0, this.haveAwards = !1, 
        this.invitedToKillTitan = !1, this.ranks = [], this.attackingIds = [], this.bufferBeginCount = 0, 
        this.bufferDuration = 0, this.rewards = [], this.shareCount = 0, this.shareMaxCount = 2, 
        this.tid = -1, this.closedNotice = !1, this.remainHP = 0, this.remainTime = 0, this.maxHP = activityModel.getActivityInfo(game.ActivityType.KillTitan).configData.monsterHP, 
        this.summonStone = 0, this.cannonBallCount = 0, this.attackedCount = 0, this.haveAwards = !1, 
        this.invitedToKillTitan = !1, this.ranks = [], this.attackingIds = [], this.bufferBeginCount = activityModel.getActivityInfo(game.ActivityType.KillTitan).configData.bufferBeginCount, 
        this.bufferDuration = activityModel.getActivityInfo(game.ActivityType.KillTitan).configData.bufferDuration, 
        this.rewards = [];
    }
    return e;
}();

__reflect(TaptitansInfo.prototype, "TaptitansInfo");

var TaptitansProxy = function() {
    function e() {}
    return e.enterTitan = function(t, i, n, o) {
        var a = this;
        i = -1 == i ? 0 : i, HttpService.post(game.ServerMsg.KILLTITAN_ENTER_TITAN, "uid=" + t + "&tid=" + i, function(t) {
            for (var i in t.titan) t[i] = t.titan[i];
            TaptitansInfo.info = new TaptitansInfo(), TaptitansInfo.info.remainTime = t.remainTime || 0, 
            TaptitansInfo.info.remainHP = t.remainHP, TaptitansInfo.info.tid = t.tid || 0, TaptitansInfo.info.closedNotice = t.closedNotice, 
            TaptitansInfo.info.haveAwards = !1;
            for (var o = 0; o < t.rewards.length; o++) if (t.rewards[o].rewardRemain > 0) {
                TaptitansInfo.info.haveAwards = !0;
                break;
            }
            TaptitansInfo.info.rewards = t.rewards, e.rewardTimer = 0, e.removeTimer(), e.timer = new egret.Timer(1e3), 
            e.timer.addEventListener(egret.TimerEvent.TIMER, e.timerFunc, a), e.timer.start(), 
            TaptitansInfo.info.invitedToKillTitan = t.invitedToKillTitan, TaptitansInfo.info.attackedCount = t.attackedCount || 0, 
            TaptitansInfo.info.ranks = t.damages ? t.damages : [], TaptitansInfo.info.attackingIds = t.attackingIds ? t.attackingIds : [], 
            TaptitansInfo.info.shareCount = t.shareCount, EventCenter.sendEvent(EventConst.refreshTaptitansBtnPoint), 
            playerModel.invitedToKillTitan = t.invitedToKillTitan, playerModel.invitedActivityId = t.invitedActivityId || 0, 
            playerModel.summonStone = t.summonStoneCount, playerModel.killTitanCannonBall = t.cannonBallCount, 
            playerModel.enteredKillTitan = !0, n(t);
        }, null, function(t) {
            o(t), e.checkTimeOut(t);
        });
    }, e.timerFunc = function() {
        e.rewardTimer++;
    }, e.removeTimer = function() {
        e.timer && (e.timer.stop(), e.timer.removeEventListener(egret.TimerEvent.TIMER, e.timerFunc, this));
    }, e.openTitan = function(e, t, i) {
        HttpService.post(game.ServerMsg.KILLTITAN_OPEN_TITAN, "uid=" + e, function(e) {
            for (var i in e.titan) e[i] = e.titan[i];
            TaptitansInfo.info.remainTime = e.remainTime, TaptitansInfo.info.remainHP = e.remainHP, 
            TaptitansInfo.info.tid = e.tid, TaptitansInfo.info.ranks = [], TaptitansInfo.info.attackingIds = [], 
            playerModel.summonStone -= 1;
            var n = activityModel.getActivityInfo(game.ActivityType.KillTitan);
            n && (n.playerData.hasTitanSleep = !1, gateModel.updateGate(game.ActivityType.KillTitan)), 
            t(e);
        }, null, i);
    }, e.attackTitan = function(t, i, n, o, a, r) {
        HttpService.post(game.ServerMsg.KILLTITAN_ATTACK_TITAN, "uid=" + t + "&tid=" + i + "&damage=" + n + "&buffing=" + o, function(e) {
            for (var t in e.titan) e[t] = e.titan[t];
            if (EventCenter.sendEvent(EventConst.ReportAttackTitan), TaptitansInfo.info.remainTime = e.remainTime, 
            TaptitansInfo.info.remainHP = e.remainHP, TaptitansInfo.info.tid = e.tid, TaptitansInfo.info.attackedCount = e.attackedCount, 
            playerModel.killTitanCannonBall = e.cannonBallCount, TaptitansInfo.info.remainHP <= 0) {
                var i = activityModel.getActivityInfo(game.ActivityType.KillTitan);
                i && (i.playerData.hasTitanSleep = !0, gateModel.updateGate(game.ActivityType.KillTitan));
            }
            a(e);
        }, null, function(t) {
            r(t), e.checkTimeOut(t);
        });
    }, e.gainTitanAward = function(t, i, n, o, a) {
        HttpService.post(game.ServerMsg.KILLTITAN_GAIN_TITAN_AWARD, "uid=" + t + "&awardId=" + n.awardId, function(t) {
            TaptitansInfo.info.haveAwards = !1;
            for (var i = 0; i < TaptitansInfo.info.rewards.length; i++) if (TaptitansInfo.info.rewards[i].rewardRemain > 0) {
                TaptitansInfo.info.haveAwards = !0;
                break;
            }
            e.showAward(t.rewardMap), playerModel.updateAll(t), EventCenter.sendEvent(EventConst.EnergyChange), 
            EventCenter.sendEvent(EventConst.GoldChange), EventCenter.sendEvent(EventConst.refreshTaptitansBtnPoint), 
            o(t);
        }, null, function(t) {
            a(t), e.checkTimeOut(t);
        });
    }, e.titanList = function(e, t) {
        HttpService.get(game.ServerMsg.KILLTITAN_LIST, "uid=" + e, function(e) {
            EventCenter.sendEvent(EventConst.refreshTaptitansBtnPoint), t(e.friendList);
        });
    }, e.invite = function(e, t) {
        for (var i = "", n = 0; n < t.length; n++) i += n != t.length - 1 ? t[n] + "," : t[n] + "";
        HttpService.post(game.ServerMsg.KILLTITAN_INVITE, "uid=" + e + "&friendIds=" + i, function() {});
    }, e.friendRank = function(t, i, n) {
        HttpService.get(game.ServerMsg.FRIEND_RANK, "uid=" + t, function(t) {
            _.each(t.friends, function(t) {
                if (!e.taptitansPlayerInfo[t.uid]) {
                    var i = new TaptitansSimpleInfo();
                    i.name = t.name, i.uid = t.uid, i.headImg = t.headImg, e.taptitansPlayerInfo[t.uid] = i;
                }
            }), i(_.filter(t.friends, function(e) {
                return e.uid != playerModel.uid;
            }));
        }, n);
    }, e.getPlayerSimpleInfo = function(t, i, n) {
        for (var o = "", a = 0; a < i.length; a++) o += a != i.length - 1 ? i[a] + "," : i[a] + "";
        HttpService.post(game.ServerMsg.KILLTITAN_GET_PLAYER_SIMLE_INFO, "uid=" + t + "&ids=" + o, function(t) {
            _.each(t.playerSimpleInfos, function(t) {
                if (!e.taptitansPlayerInfo[t.uid]) {
                    var i = new TaptitansSimpleInfo();
                    i.name = t.name, i.uid = t.uid, i.headImg = t.headImg, i.gender = t.gender, e.taptitansPlayerInfo[t.uid + ""] = i;
                }
            }), n();
        });
    }, e.checkTimeOut = function(e) {
        if (20030 == e) {
            var t = activityModel.getActivityInfo(game.ActivityType.KillTitan);
            t.awardEndRemain = 0, t.endRemain = 0;
        }
    }, e.gainAllAward = function(e, t, i) {
        HttpService.post(game.ServerMsg.KILLTITAN_GAIN_ALL_AWARD, "uid=" + e, function(e) {
            t(e.awards);
            var i = {};
            _.each(e.awards, function(e) {
                ~~e.energy > 0 && (i.energy ? i.energy += e.energy : i.energy = e.energy), ~~e.money > 0 && (i.money ? i.money += e.money : i.money = e.money), 
                ~~e.potionCount > 0 && (i.potion ? i.potion += e.potionCount : i.potion = e.potionCount), 
                ~~e.cookieCount > 0 && (i.cookie ? i.cookie += e.cookieCount : i.cookie = e.cookieCount);
            });
            for (var n in i) i[n] = game.ComFunc.format_Number_float(i[n]);
            hortor.WindowManager.showWindow(game.WindowType.WINDOW_REWARD, i), delete e.awards;
            for (var o = 0; o < TaptitansInfo.info.rewards.length; o++) if (TaptitansInfo.info.rewards[o].rewardRemain > 0) {
                TaptitansInfo.info.haveAwards = !0;
                break;
            }
            playerModel.updateAll(e), EventCenter.sendEvent(EventConst.EnergyChange), EventCenter.sendEvent(EventConst.GoldChange), 
            EventCenter.sendEvent(EventConst.refreshTaptitansBtnPoint);
        }, null, i);
    }, e.hasKillTitanInvited = function() {
        if (playerModel.invitedToKillTitan) {
            var e = activityModel.getActivityInfo(game.ActivityType.KillTitan);
            if (e && e.aid == playerModel.invitedActivityId) return !0;
        }
        return !1;
    }, e.showAward = function(e) {
        hortor.WindowManager.showWindow(game.WindowType.WINDOW_REWARD, e);
    }, e.closeTaptitans = function() {
        hortor.ScreenManager.back();
    }, e.rewardTimer = 0, e.taptitansPlayerInfo = {}, e.tapLastAttackPostBuff = !1, 
    e;
}();

__reflect(TaptitansProxy.prototype, "TaptitansProxy");

var TaptitansViewState;

!function(e) {
    e[e.normal = 0] = "normal", e[e.attack = 1] = "attack", e[e.assist = 2] = "assist";
}(TaptitansViewState || (TaptitansViewState = {}));

var TaptitansSimpleInfo = function() {
    function e() {
        this.gender = -1;
    }
    return e;
}();

__reflect(TaptitansSimpleInfo.prototype, "TaptitansSimpleInfo");

var TaptitansAwardItemInfo = function() {
    function e() {}
    return e;
}();

__reflect(TaptitansAwardItemInfo.prototype, "TaptitansAwardItemInfo");

var TaptitansAwardInfo = function() {
    function e() {}
    return e;
}();

__reflect(TaptitansAwardInfo.prototype, "TaptitansAwardInfo");

var TaptitansTitanRank = function() {
    function e() {}
    return e;
}();

__reflect(TaptitansTitanRank.prototype, "TaptitansTitanRank");

var TaptitansPlayerTitan = function() {
    function e() {}
    return e;
}();

__reflect(TaptitansPlayerTitan.prototype, "TaptitansPlayerTitan");

var TaptitansFriendInfo = function() {
    function e() {}
    return e;
}();

__reflect(TaptitansFriendInfo.prototype, "TaptitansFriendInfo");

var TaptitansActionDamage = function() {
    function e() {}
    return e;
}();

__reflect(TaptitansActionDamage.prototype, "TaptitansActionDamage");

var TaptitansShell = function() {
    function e(e) {
        this.handleList = [], this.shellList = [], this.mediator = e;
    }
    return Object.defineProperty(e.prototype, "damage", {
        get: function() {
            return this.mainDamage + this.otherDamage;
        },
        enumerable: !0,
        configurable: !0
    }), e.prototype.openPanel = function() {
        this.mainDamage = 0, this.otherDamage = 0;
    }, e.prototype.onViewRemove = function() {
        this.clearAll();
    }, e.prototype.clearAll = function() {
        for (this.mainDamage = 0, this.otherDamage = 0, this.mediator.refreshHP(), this.clearTimeHandle(); this.shellList.length > 0; ) {
            var e = this.shellList.pop();
            util.remove(e);
        }
        this.mainHitHandle > 0 && (egret.clearTimeout(this.mainHitHandle), this.mainHitHandle = 0);
    }, e.prototype.removeShell = function(e) {
        var t = _.indexOf(this.shellList, e);
        t >= 0 && this.shellList.splice(t, 1), e && e.parent && e.parent.removeChild(e);
    }, e.prototype.addSmallShell = function(e) {
        var t = this;
        if (TaptitansInfo.info.tid == e.tid) {
            this.otherDamage += e.damage;
            var i = new game.ArmaturePlayer("shell");
            this.mediator.addChild(i);
            var n = Math.floor(2 * Math.random());
            1 > n ? (i.x = this.mediator.width / 2 + game.ComFunc.rand(-50, 50), i.play("left", 1, function() {
                t.removeShell(i);
            }, this)) : (i.x = this.mediator.width / 2 + game.ComFunc.rand(-50, 50), i.play("right", 1, function() {
                t.removeShell(i);
            }, this)), i.y = this.mediator.height - 200 + game.ComFunc.rand(-50, 50);
            var o = egret.setTimeout(function() {
                t.onSmallHitTime(e, o);
            }, this, 19e3 / 24);
            this.shellList.push(i);
        }
    }, e.prototype.onSmallHitTime = function(e, t) {
        _.without(this.handleList, t), this.otherDamage -= e.damage, this.otherDamage = Math.max(0, this.otherDamage), 
        this.mediator.refreshHP(), e.tid == TaptitansInfo.info.tid && (this.mediator.onSmallShellHit(e), 
        this.showDamageText(e.damage));
    }, e.prototype.addMainShell = function(e, t) {
        var i = this;
        this.mainDamage = t;
        var n = new game.ArmaturePlayer("shell");
        this.mediator.addChild(n), n.x = this.mediator.width / 2, n.y = this.mediator.height - 200, 
        n.play("center", 1, function() {
            i.removeShell(n);
        }, this), this.mainHitHandle = egret.setTimeout(function() {
            i.onMainHitTime(e, t);
        }, this, 28e3 / 24), this.shellList.push(n);
    }, e.prototype.onMainHitTime = function(e, t) {
        this.mainHitHandle = 0, this.mainDamage = 0, this.mediator.refreshHP(), e == TaptitansInfo.info.tid && (this.mediator.onShellHit(e, t), 
        this.showDamageText(t));
    }, e.prototype.showDamageText = function(e) {
        if (this && this.mediator && this.mediator) {
            soundModel.playSound(game.SoundType.SOUND_TAP_HURT);
            var t = new eui.Label();
            t.textColor = 16714752, t.bold = !0, t.stroke = 2, t.strokeColor = 16777215, t.size = 36, 
            t.text = "-" + e, t.validateNow(), t.x = this.mediator.width / 2, t.y = 340, t.anchorOffsetX = t.width / 2, 
            t.anchorOffsetY = t.height / 2, t.alpha = 1, this.mediator.addChild(t);
            var i = egret.Tween.get(t);
            i.to({
                scaleX: 3.5,
                scaleY: 3.5
            }, 80).to({
                scaleX: 1.5,
                scaleY: 1.5
            }, 100).wait(100).to({
                y: 180
            }, 1e3, egret.Ease.quadIn).to({
                y: 150,
                alpha: 0
            }, 150).call(function() {
                egret.Tween.removeTweens(t), util.remove(t);
            }, this);
        }
    }, e.prototype.clearTimeHandle = function() {
        this.mainHitHandle > 0 && egret.clearTimeout(this.mainHitHandle), _.each(this.handleList, function(e) {
            egret.clearTimeout(e);
        });
    }, e;
}();

__reflect(TaptitansShell.prototype, "TaptitansShell");

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.skinPath = "taptitans/TaptitansAssistItemRendererSkin", e;
        }
        return __extends(i, t), i.prototype.getData = function() {
            return this.data;
        }, i.prototype.onInit = function() {
            this.assistBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onAssistBtnTap, this);
        }, i.prototype.onOpen = function() {}, i.prototype.onClose = function() {
            this.onRemoveTimer();
        }, i.prototype.onAddTimer = function() {
            this.timer || (this.timer = new egret.Timer(1e3), this.timer.addEventListener(egret.TimerEvent.TIMER, this.timerFunc, this));
        }, i.prototype.onRemoveTimer = function() {
            this.timer && (this.timer.stop(), this.timer.removeEventListener(egret.TimerEvent.TIMER, this.timerFunc, this), 
            this.timer = null);
        }, i.prototype.timerFunc = function(e) {
            var t = this.getData();
            t && (t.remainTime -= 1, this.refreshTimeLabel(), t.remainTime < 0 && (this.timer && this.timer.reset(), 
            this.dispatchEventWith("TaptitansAssistItemRendererTimeout", !0, this.data)));
        }, i.prototype.refreshTimeLabel = function() {
            var t = this.getData();
            t.remainTime < 0 ? (this.timeLabel.text = "已经结束", this.onRemoveTimer()) : t.remainHP > 0 ? this.timeLabel.text = e.ComFunc.formatTimeHMSNew(t.remainTime) : (this.timeLabel.text = "召唤的寄居蟹已被打败", 
            this.onRemoveTimer());
        }, i.prototype.onData = function() {
            this.onAddTimer();
            var t = this.getData();
            this.timer.reset(), this.headMask.source = 1 == t.gender ? "common_img_tz1_1" : "common_img_tz1_0", 
            this.nameLabel.text = util.strSub(t.name, 6), this.nameLabel.textColor = 1 == t.gender ? Const.manNameColor : Const.womanNameColor, 
            this.hpBar.maximum = activityModel.getActivityInfo(e.ActivityType.KillTitan).configData.monsterHP, 
            this.hpBar.value = t.remainHP, util.setRemoteAvatar(this.headImg, e.ComFunc.headImg(this.data.headImg)), 
            this.refreshTimeLabel(), t.remainHP > 0 && t.remainTime > 0 && this.timer.start(), 
            this.assistBtnGroup.visible = t.remainHP > 0 && t.remainTime > 0, this.succeedImg.visible = t.remainHP <= 0, 
            this.failImg.visible = t.remainTime <= 0 && t.remainHP > 0;
        }, i.prototype.onAssistBtnTap = function(e) {
            this.dispatchEventWith("TaptitansAssistItemRendererBtnClick", !0, this.data);
        }, i;
    }(e.ItemRenderBase);
    e.TaptitansAssistItemRenderer = t, __reflect(t.prototype, "game.TaptitansAssistItemRenderer");
}(game || (game = {})), window.TaptitansAssistItemRenderer = game.TaptitansAssistItemRenderer;

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.originalDataSource = [], e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.assistList.itemRenderer = e.TaptitansAssistItemRenderer, this.dataSource = new eui.ArrayCollection(), 
            this.assistList.dataProvider = this.dataSource;
        }, i.prototype.onOpen = function() {}, i.prototype.onClose = function() {
            this.onViewRemove();
        }, i.prototype.onData = function() {
            this.onViewRegister(), this.initView();
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.onViewRegister = function() {
            this.assistList.addEventListener("TaptitansAssistItemRendererBtnClick", this.onItemRendererBtnClick, this), 
            this.assistList.addEventListener("TaptitansAssistItemRendererTimeout", this.onItemRendererTimeout, this), 
            this.inputText.addEventListener(eui.UIEvent.CHANGE, this.inputFunc, this);
        }, i.prototype.onViewRemove = function() {
            this.assistList.removeEventListener("TaptitansAssistItemRendererBtnClick", this.onItemRendererBtnClick, this), 
            this.assistList.removeEventListener("TaptitansAssistItemRendererTimeout", this.onItemRendererTimeout, this), 
            this.inputText.removeEventListener(eui.UIEvent.CHANGE, this.inputFunc, this);
        }, i.prototype.initView = function() {
            TaptitansProxy.titanList(playerModel.uid, this.onTitanList.bind(this));
        }, i.prototype.onTitanList = function(e) {
            this.originalDataSource = e, this.refreshDataSource(e);
            var t = this;
            e && e.length > 0 ? t.empty.visible = !1 : (t.empty.visible = !0, t.empty.bg.source = "common_img_kong3_png", 
            t.empty.noticeLabel.text = "邀请好友一起打怪兽吧");
        }, i.prototype.refreshDataSource = function(e) {
            e = _.sortBy(e, function(e) {
                var t = 0;
                return e.remainTime > 0 && e.remainHP > 0 ? t += 10 : e.remainHP <= 0 && (t += 1), 
                t += _.toNumber("0." + e.uid, 10), -t;
            }), this.dataSource.source = e, this.dataSource.refresh();
        }, i.prototype.closeBtn = function() {
            soundModel.buttonClose(), hortor.WindowManager.hideWindow(e.WindowType.WINDOW_TAPTITANSASSIST);
        }, i.prototype.inputFunc = function() {
            var e = this, t = e.inputText.text, i = [], n = /^[a-zA-Z]+$/;
            if (this.originalDataSource) for (var o = 0; o < this.originalDataSource.length; o++) {
                var a = this.originalDataSource[o], r = a.name;
                n.test(t) ? (r.toLowerCase().indexOf(t.toLowerCase()) >= 0 || r.toUpperCase().indexOf(t.toUpperCase()) >= 0) && i.push(a) : a.name.indexOf(t) >= 0 && i.push(a);
            }
            this.refreshDataSource(i);
        }, i.prototype.onItemRendererBtnClick = function(e) {
            var t = e.data.tid;
            this.data && this.data(t), this.closeBtn();
        }, i.prototype.onItemRendererTimeout = function(e) {
            TaptitansProxy.titanList(playerModel.uid, this.onTitanList.bind(this));
        }, i;
    }(e.WindowBase);
    e.TaptitansAssistWindow = t, __reflect(t.prototype, "game.TaptitansAssistWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.addEventListener(egret.Event.REMOVED_FROM_STAGE, e.clearFunc, e), e.addEventListener(egret.Event.ADDED_TO_STAGE, e.addToStage, e), 
            e.skinName = TaptitansAwardItemRendererSkin, e;
        }
        return __extends(i, t), i.prototype.getData = function() {
            return this.data;
        }, i.prototype.childrenCreated = function() {
            t.prototype.childrenCreated.call(this), this.gainBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onGainBtnBtnTap, this);
        }, i.prototype.addToStage = function() {}, i.prototype.clearFunc = function() {
            this.removeEventListener(egret.Event.REMOVED_FROM_STAGE, this.clearFunc, this), 
            this.gainBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.onGainBtnBtnTap, this), 
            this.timer && (this.timer.removeEventListener(egret.TimerEvent.TIMER, this.timerFunc, this), 
            this.timer.stop(), this.timer = null);
        }, i.prototype.timerFunc = function() {
            this && (_.isNull(this.data.rewardRemain) || (this.timeLabel.text = e.ComFunc.formatTimeHMSNew(this.data.rewardRemain - TaptitansProxy.rewardTimer), 
            this.data.rewardRemain - TaptitansProxy.rewardTimer == 0 && (this.data.rewardRemain = null, 
            this.timeLabel.strokeColor = Const.grayStroke, this.gainBtnGroup.visible = !0, this.hasGotImg.visible = !1, 
            this.gainBtn.enabled = !1, this.gainBtn.visible = !1, this.timeLabel.visible = !1, 
            this.timeOverImg.visible = !0)));
        }, i.prototype.dataChanged = function() {
            t.prototype.dataChanged.call(this), this.gainBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onGainBtnBtnTap, this), 
            this.__data = this.getData();
            var i = this.getData();
            if (util.setRemoteAvatar(this.headImg, e.ComFunc.headImg(i.titanOwnHeadImg)), this.setAwardItemGroup(), 
            i.hasOwnProperty("titanOwnGender") && (this.headMask.source = 1 == i.titanOwnGender ? "common_img_tz1_1" : "common_img_tz1_0"), 
            i.titanOwnId == playerModel.uid) if (i.friendName && "" != i.friendName) {
                var n = i.friendName.length > 8 ? i.friendName.substr(0, 8) + "..." : i.friendName;
                this.descLabel.textFlow = new egret.HtmlTextParser().parser("在<font color=0x098ADE>" + n + "</font>的帮助下，你成功击败了寄居蟹。");
            } else this.descLabel.text = "你成功打败了寄居蟹。"; else {
                var o = i.titanOwnName.length > 8 ? i.titanOwnName.substr(0, 8) + "..." : i.titanOwnName, a = "你帮助<font color=0x098ADE>" + o + "</font>打败了寄居蟹，你的伤害名列第" + i.rank + "。";
                i.rewardMap.money && 1e5 == i.rewardMap.money && (a = "你帮助<font color=0x098ADE>" + o + "</font>打败了寄居蟹，获得参与奖"), 
                this.descLabel.textFlow = new egret.HtmlTextParser().parser(a);
            }
            _.isNull(i.rewardRemain) ? (this.gainBtn.enabled = !1, this.gainBtn.visible = !1, 
            this.timeOverImg.visible = !0, this.timeLabel.strokeColor = Const.grayStroke, this.gainBtnGroup.visible = !0, 
            this.timeLabel.visible = !1, this.hasGotImg.visible = !1) : (this.gainBtn.enabled = !0, 
            this.gainBtn.visible = !0, this.timeOverImg.visible = !1, this.timeLabel.text = e.ComFunc.formatTimeHMSNew(this.getData().rewardRemain - TaptitansProxy.rewardTimer), 
            this.timeLabel.visible = !0, this.timeLabel.strokeColor = 5541647, this.gainBtnGroup.visible = i.rewardRemain > 0, 
            this.hasGotImg.visible = 0 == i.rewardRemain), this.timer && (this.timer.removeEventListener(egret.TimerEvent.TIMER, this.timerFunc, this), 
            this.timer.stop()), this.data.rewardRemain > 0 && (this.timer = new egret.Timer(1e3), 
            this.timer.addEventListener(egret.TimerEvent.TIMER, this.timerFunc, this), this.timer.start());
        }, i.prototype.setAwardItemGroup = function() {
            this.energyGroup.visible = !1, this.moneyGroup.visible = !1, this.potionGroup.visible = !1, 
            this.energyGroup.includeInLayout = !1, this.moneyGroup.includeInLayout = !1, this.potionGroup.includeInLayout = !1;
            for (var t in this.getData().rewardMap) if (0 != this.getData().rewardMap[t]) switch (t) {
              case "energy":
                this.energyGroup.visible = !0, this.energyLabel.text = "+" + this.getData().rewardMap.energy, 
                this.energyGroup.includeInLayout = !0;
                break;

              case "money":
                this.moneyGroup.visible = !0, this.moneyLabel.text = "+" + e.ComFunc.formatNumber(this.getData().rewardMap.money), 
                this.moneyGroup.includeInLayout = !0;
                break;

              case "potion":
                this.propIcon.source = e.ResourcePath.getItemIconByName("popIcon_potion"), this.potionGroup.visible = !0, 
                this.potionLabel.text = "+" + this.getData().rewardMap.potion, this.potionGroup.includeInLayout = !0;
                break;

              case "cookie":
                this.propIcon.source = e.ResourcePath.getItemIconByName("popIcon_cookie"), this.potionGroup.visible = !0, 
                this.potionLabel.text = "+" + this.getData().rewardMap.cookie, this.potionGroup.includeInLayout = !0;
                break;

              case "killTitanCannonBall":
                this.propIcon.source = e.ResourcePath.getItemIconByName("shop_killTitanCannonBall"), 
                this.potionGroup.visible = !0, this.potionLabel.text = "+" + this.getData().rewardMap.killTitanCannonBall, 
                this.potionGroup.includeInLayout = !0;
                break;

              case "summonStone":
                this.propIcon.source = e.ResourcePath.getItemIconByName("shop_summonStone"), this.potionGroup.visible = !0, 
                this.potionLabel.text = "+" + this.getData().rewardMap.summonStone, this.potionGroup.includeInLayout = !0;
            }
        }, i.prototype.onGainBtnBtnTap = function(e) {
            this.data.rewardRemain = 0, this.gainBtnGroup.visible = !1, this.hasGotImg.visible = !0, 
            this.dispatchEventWith("TaptitansAwardItemRendererBtnClick", !0, this.data);
        }, i;
    }(eui.ItemRenderer);
    e.TaptitansAwardItemRenderer = t, __reflect(t.prototype, "game.TaptitansAwardItemRenderer");
}(game || (game = {})), window.TaptitansAwardItemRenderer = game.TaptitansAwardItemRenderer;

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return t.call(this) || this;
        }
        return __extends(i, t), i.prototype.onViewRegister = function() {
            this.awardList.addEventListener("TaptitansAwardItemRendererBtnClick", this.onItemRendererBtnClick, this), 
            this.gainAllBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onGainAllBtnTap, this), 
            EventCenter.addEventListener(EventConst.RefreshTaptitansRewardUI, this.RefreshTaptitansRewardUI, this);
        }, i.prototype.onViewRemove = function() {
            this.awardList.removeEventListener("TaptitansAwardItemRendererBtnClick", this.onItemRendererBtnClick, this), 
            this.gainAllBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.onGainAllBtnTap, this), 
            EventCenter.removeEventListener(EventConst.RefreshTaptitansRewardUI, this.RefreshTaptitansRewardUI, this);
        }, i.prototype.onInit = function() {
            this.onViewRegister(), this.dataSource = new eui.ArrayCollection(), this.awardList.itemRenderer = e.TaptitansAwardItemRenderer, 
            this.awardList.dataProvider = this.dataSource;
        }, i.prototype.onOpen = function() {}, i.prototype.onClose = function() {}, i.prototype.onData = function() {
            this.empty.bg.source = "common_img_kong1_png", this.empty.noticeLabel.text = "成功击败怪兽才能获得奖励", 
            this.initView();
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.initView = function() {
            this.onAwardList();
        }, i.prototype.onAwardList = function() {
            for (var e = [], t = [], i = [], n = 0; n < TaptitansInfo.info.rewards.length; n++) 0 == TaptitansInfo.info.rewards[n].rewardRemain ? e.push(TaptitansInfo.info.rewards[n]) : _.isNull(TaptitansInfo.info.rewards[n].rewardRemain) ? i.push(TaptitansInfo.info.rewards[n]) : t.push(TaptitansInfo.info.rewards[n]);
            t = _.sortBy(t, "rewardRemain").reverse(), e.reverse(), i.reverse();
            var o = t.concat(e).concat(i);
            this.titanAwardList = o, o.length > 0 ? this.emptyGroup.visible = !1 : this.emptyGroup.visible = !0, 
            this.dataSource.replaceAll(o), this.gainAllBtn.enabled = _.some(o, function(e) {
                return !(0 == e.rewardRemain);
            });
        }, i.prototype.RefreshTaptitansRewardUI = function() {
            var t = this;
            HttpService.post(e.ServerMsg.KILLTITAN_ENTER_TITAN, "uid=" + playerModel.uid + "&tid=0", function(e) {
                TaptitansProxy.rewardTimer = 0, TaptitansInfo.info.rewards = e.rewards, t.onAwardList();
            });
        }, i.prototype.onItemRendererBtnClick = function(e) {
            soundModel.buttonOpen(), TaptitansProxy.gainTitanAward(playerModel.uid, e.data.tid, e.data, this.onGainTitanReward.bind(this), this.gainTitanAwardFail.bind(this));
        }, i.prototype.onGainTitanReward = function(e) {}, i.prototype.gainTitanAwardFail = function() {
            hortor.WindowManager.hideWindow(e.WindowType.WINDOW_TAPTITANSAWARD);
        }, i.prototype.onGainAllBtnTap = function() {
            soundModel.buttonOpen();
            var t = this;
            this.gainAllBtn.enabled = !1;
            var i = activityModel.getActivityInfo(e.ActivityType.KillTitan);
            if (i) {
                for (var n = 0; n < t.titanAwardList.length; n++) t.titanAwardList[n].rewardRemain > 0 && (t.titanAwardList[n].rewardRemain = 0);
                this.dataSource.replaceAll(t.titanAwardList), TaptitansProxy.gainTitanAward(playerModel.uid, null, {
                    awardId: 0
                }, function(e) {
                    console.log(JSON.stringify(e));
                }, this.gainTitanAwardFail.bind(this));
            } else hortor.TipManager.alert("`\b活动已经结束。`"), hortor.WindowManager.hideWindow(e.WindowType.WINDOW_TAPTITANSAWARD), 
            TaptitansProxy.closeTaptitans();
        }, i;
    }(e.WindowBase);
    e.TaptitansAwardWindow = t, __reflect(t.prototype, "game.TaptitansAwardWindow");
}(game || (game = {}));

var TaptitansDamageList = function(e) {
    function t() {
        var t = e.call(this) || this;
        return t.dataSource = new eui.ArrayCollection([]), t.tid = -1, t.skinName = TaptitansDamageListSkin, 
        t;
    }
    return __extends(t, e), t.prototype.setMediator = function(e) {
        this.mediator = e;
    }, t.prototype.childrenCreated = function() {
        e.prototype.childrenCreated.call(this), this.btn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onBtnTap, this), 
        this.addEventListener(eui.UIEvent.ENTER_FRAME, this.onEnterFrame, this), this.damageList.dataProvider = this.dataSource;
    }, t.prototype.setDataSource = function(e, t) {
        this.tid = e;
        for (var i = 0; i < t.length; i++) t[i].name = util.strSub(t[i].name, 8);
        this.refreshDataSource(t);
    }, t.prototype.refreshDataSource = function(e) {
        e = _.sortBy(e, "updateTime"), e = _.sortBy(e, "damage").reverse();
        for (var t = 0; t < e.length; t++) e[t].rank = t + 1;
        this.dataSource.replaceAll(e);
    }, t.prototype.onEnterFrame = function(e) {
        this.btnGroup.visible = this.mediator && this.mediator.viewState != TaptitansViewState.assist;
    }, t.prototype.onBtnTap = function(e) {
        hortor.WindowManager.showWindow(game.WindowType.WINDOW_TAPTITANS_FRIEND);
    }, t.prototype.actionMyDamage = function(e, t) {
        if (this.tid == e) {
            var i = _.find(this.dataSource.source, function(e) {
                return e.uid == playerModel.uid;
            });
            if (i) i.damage += t; else {
                var n = new TaptitansTitanRank();
                n.uid = playerModel.uid, n.damage = t, n.name = playerModel.name, this.dataSource.source.push(n);
            }
            this.refreshDataSource(this.dataSource.source);
        }
    }, t.prototype.actionDamage = function(e) {
        if (this.tid == e.tid) {
            var t = this.dataSource.source, i = _.find(this.dataSource.source, function(t) {
                return t.uid == e.uid;
            });
            if (i) i.damage = e.newDamage, i.updateTime = e.updateTime; else if (e.uid == playerModel.uid) {
                var n = new TaptitansTitanRank();
                n.uid = e.uid, n.damage = e.newDamage, n.updateTime = e.updateTime, n.name = playerModel.name, 
                t.push(n);
            } else {
                var o = TaptitansProxy.taptitansPlayerInfo[e.uid];
                if (o) {
                    var a = new TaptitansTitanRank();
                    a.uid = e.uid, a.damage = e.newDamage, a.name = o.name, a.updateTime = o.updateTime, 
                    t.push(a);
                } else {
                    var r = new TaptitansTitanRank();
                    r.uid = e.uid, r.damage = e.newDamage, r.updateTime = e.updateTime, r.name = "", 
                    t.push(r), TaptitansProxy.getPlayerSimpleInfo(playerModel.uid, [ e.uid ], this.onGetInfo.bind(this));
                }
            }
            this.refreshDataSource(t);
        }
    }, t.prototype.onGetInfo = function() {
        var e = !1;
        _.each(this.dataSource.source, function(t) {
            "" == t.name && TaptitansProxy.taptitansPlayerInfo[t.uid] && (t.name = TaptitansProxy.taptitansPlayerInfo[t.uid].name, 
            e = !0);
        }), e && this.refreshDataSource(this.dataSource.source);
    }, t;
}(eui.Component);

__reflect(TaptitansDamageList.prototype, "TaptitansDamageList"), window.TaptitansDamageList = TaptitansDamageList;

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return t.call(this) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.onViewRegister();
        }, i.prototype.onOpen = function() {}, i.prototype.onData = function() {
            this.initView();
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.onViewRegister = function() {
            this.closeBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.closeBtnFunc, this), 
            this.inviteBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.inviteBtnFunc, this), 
            this.buyBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.buyBtnFunc, this);
        }, i.prototype.onViewRemove = function() {
            this.closeBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.closeBtnFunc, this), 
            this.inviteBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.inviteBtnFunc, this), 
            this.buyBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.buyBtnFunc, this);
        }, i.prototype.initView = function() {
            var e = this;
            hortor.SystemManager.isWxGame && !gateModel.ShareInterFaceId ? e.descLabel.text = "观看视频获得" : e.descLabel.text = "获得", 
            e.countLabel.text = "炮弹x3", e.shareCount.text = "（" + TaptitansInfo.info.shareCount + "/" + TaptitansInfo.info.shareMaxCount + "）", 
            e.inviteBtn.enabled = TaptitansInfo.info.shareCount < TaptitansInfo.info.shareMaxCount, 
            gateModel.iosPay ? (e.buyBtn.x = 122, e.buyBtn.y = 70, e.buyBtn.visible = !0, e.inviteBtn.x = 362, 
            e.inviteBtn.y = 70) : (e.buyBtn.visible = !1, e.inviteBtn.x = 241, e.inviteBtn.y = 70);
        }, i.prototype.inviteBtnFunc = function() {
            var t = this;
            hortor.SystemManager.isWxGame ? gateModel.ShareInterFaceId ? this.toShare() : gateModel.wxCanShowAd ? e.PlatformManager.createVideoAd(e.AdType.adUnitId_master, this.getAdReward.bind(this), this.getAdReward.bind(this), function() {}) : hortor.TipManager.alert("未能成功获取到视频", function() {
                t.toShare();
            }) : e.PlatformManager.share(e.ShareType.monster);
        }, i.prototype.buyBtnFunc = function() {
            HttpService.get(e.ServerMsg.SHOP_LIST, "uid=" + playerModel.uid, function(t) {
                var i = _.find(t.goods.prop, function(e) {
                    return "killTitanCannonBall" == e.goodsId;
                });
                hortor.WindowManager.showWindow(e.WindowType.WINDOW_SHOP_GOODS, i);
            });
        }, i.prototype.toShare = function() {
            this.taptitanShare();
        }, i.prototype.getAdReward = function() {
            e.MonsterShare.monsterShareSuccess();
        }, i.prototype.taptitanShare = function() {
            e.PlatformManager.share(e.ShareType.monster);
        }, i.prototype.closeBtnFunc = function() {
            hortor.WindowManager.hideWindow(e.WindowType.WINDOW_TAPTITANSFREESHELL);
        }, i;
    }(e.WindowBase);
    e.TaptitansFreeShellWindow = t, __reflect(t.prototype, "game.TaptitansFreeShellWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.skinPath = "taptitans/TaptitansFriendItemRendererSkin", e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.selectFrameImg.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onSelectFrameImgTap, this);
        }, i.prototype.onData = function() {
            var t = this.data;
            this.sexIcon.source = 1 == t.gender ? "common_img_tz1_1" : "common_img_tz1_0", this.selectImg.visible = t.selected, 
            util.setRemoteAvatar(this.headImg, e.ComFunc.headImg(this.data.headImg)), this.nameLabel.text = t.name, 
            this.nameLabel.textColor = 1 == t.gender ? Const.manNameColor : Const.womanNameColor;
        }, i.prototype.onSelectFrameImgTap = function(e) {
            var t = this.data;
            t.selected = !t.selected, this.selectImg.visible = t.selected, this.dispatchEventWith("TaptitansFriendItemRendererChange", !0);
        }, i;
    }(e.ItemRenderBase);
    e.TaptitansFriendItemRenderer = t, __reflect(t.prototype, "game.TaptitansFriendItemRenderer");
}(game || (game = {})), window.TaptitansFriendItemRenderer = game.TaptitansFriendItemRenderer;

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return t.call(this) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.onViewRegister(), this.inviteList.itemRenderer = e.TaptitansFriendItemRenderer, 
            this.dataSource = new eui.ArrayCollection(), this.inviteList.dataProvider = this.dataSource;
        }, i.prototype.onOpen = function() {}, i.prototype.onData = function() {
            this.initView();
        }, i.prototype.prepare = function(e, t) {
            TaptitansProxy.friendRank(playerModel.uid, function(t) {
                e(t);
            }, t);
        }, i.prototype.onViewRegister = function() {
            this.inviteBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onInviteBtnTap, this), 
            this.selectFrameImg.addEventListener(egret.TouchEvent.TOUCH_TAP, this.ohSelectTap, this), 
            this.inviteList.addEventListener("TaptitansFriendItemRendererChange", this.onItemChange, this), 
            this.inputLabel.addEventListener(egret.Event.CHANGE, this.inputFunc, this);
        }, i.prototype.onViewRemove = function() {
            this.inviteBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.onInviteBtnTap, this), 
            this.selectFrameImg.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.ohSelectTap, this), 
            this.inviteList.removeEventListener("TaptitansFriendItemRendererChange", this.onItemChange, this);
        }, i.prototype.initView = function() {
            this.dataSource.source = this.data;
        }, i.prototype.onFriendRank = function(e) {
            this.data = e, this.dataSource.replaceAll(e);
        }, i.prototype.onInviteBtnTap = function() {
            var t = [];
            _.each(this.dataSource.source, function(e) {
                e.selected && t.push(e.uid);
            }), t.length > 0 && (TaptitansProxy.invite(playerModel.uid, t), hortor.WindowManager.hideWindow(e.WindowType.WINDOW_TAPTITANS_FRIEND));
        }, i.prototype.onItemChange = function() {
            soundModel.buttonOpen(), this.selectImg.visible = !_.some(this.dataSource.source, function(e) {
                return !e.selected;
            });
        }, i.prototype.ohSelectTap = function() {
            soundModel.buttonOpen(), this.selectImg.visible ? (this.selectImg.visible = !1, 
            _.each(this.dataSource.source, function(e) {
                e.selected = !1;
            }), this.dataSource.replaceAll(this.dataSource.source)) : (this.selectImg.visible = !0, 
            _.each(this.dataSource.source, function(e) {
                e.selected = !0;
            }), this.dataSource.replaceAll(this.dataSource.source));
        }, i.prototype.inputFunc = function() {
            var e = this, t = e.inputLabel.text, i = [], n = /^[a-zA-Z]+$/;
            if (e.data) {
                for (var o = 0; o < e.data.length; o++) {
                    var a = e.data[o], r = a.name;
                    n.test(t) ? (r.toLowerCase().indexOf(t.toLowerCase()) >= 0 || r.toUpperCase().indexOf(t.toUpperCase()) >= 0) && i.push(a) : a.name.indexOf(t) >= 0 && i.push(a);
                }
                this.refreshListFunc(i);
            }
        }, i.prototype.refreshListFunc = function(e) {
            var t = this;
            t.dataSource.source = e, t.dataSource.refresh();
        }, i;
    }(e.WindowBase);
    e.TaptitansFriendWindow = t, __reflect(t.prototype, "game.TaptitansFriendWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return t.call(this) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {}, i.prototype.onOpen = function() {}, 
        i.prototype.onData = function() {
            this.initView();
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.onViewRegister = function() {
            this.bg.addEventListener(egret.TouchEvent.TOUCH_TAP, this.closeBtnFunc, this);
        }, i.prototype.onViewRemove = function() {
            this.bg.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.closeBtnFunc, this);
        }, i.prototype.initView = function() {
            this.textLabel.text = "1. 消耗1个唤醒石即可唤醒怪兽，唤醒石每天0点会自动补充至1个，不会累加\n\n2. 长按大炮攻击怪兽，每次消耗1个炮弹，每天0点自动补充至30个，不会累加。\n\n3. 自己召唤的怪兽被击败，就会获得召唤者奖励，无论是否输出伤害。协助好友击败怪兽，根据伤害可以获得排名奖励，召唤者会计入排名但不会获得排名奖励\n\n召唤者奖励：\n● 15~25能量 + 1.5~2.5M金币 + 随机道具\n\n协助者奖励：\n● 第1名：15能量 + 1.5M金币 + 随机道具\n● 第2名：10能量 + 750K金币\n● 第3名：5能量 + 500K金币\n● 第4名：200K金币\n● 参与奖：100K金币\n● 协助好友时，伤害排名第5名及第5名以后，或伤害未达到500只能获得参与奖\n\n4. 获得的奖励需要在48小时内领取，否则过期就会消失掉", 
            this.group.scaleX = this.group.scaleY = .1, egret.Tween.get(this.group).to({
                scaleX: 1,
                scaleY: 1
            }, 300, egret.Ease.backOut);
        }, i.prototype.closeBtnFunc = function() {
            var t = this;
            egret.Tween.get(t.group).to({
                scaleX: .1,
                scaleY: .1
            }, 300, egret.Ease.quadIn).call(function() {
                egret.Tween.removeTweens(t.group), hortor.WindowManager.hideWindow(e.WindowType.WINDOW_TAPTITANSHELP);
            });
        }, i;
    }(e.WindowBase);
    e.TaptitansHelpWindow = t, __reflect(t.prototype, "game.TaptitansHelpWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e._isFirst = !0, e.isPlayChangeAnimation = !1, e.isPlayAssistAnimation = !1, 
            e.bottomGroupStartY = 0, e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.dial = new TaptitansDial(this), this.boss = new TaptitansBoss(this), this.dummyBoss = new TaptitansBoss(this), 
            this.canon = new TaptitansCanon(this), this.shell = new TaptitansShell(this), this.setNotchFit(this.titleGroup), 
            this.setNotchFit(this.damageList), this.setNotchFit(this.helpBtn), this.setNotchFit(this.teamList);
        }, i.prototype.onOpen = function() {}, i.prototype.onClose = function() {
            this.onViewRemove();
        }, i.prototype.onData = function() {
            this.timer = new egret.Timer(1e3), this.buffTimer = new egret.Timer(50), this.isBuffing = !1, 
            this.onViewRegister(), this.initView();
        }, i.prototype.onViewRegister = function() {
            var e = this;
            e.addEventListener(eui.UIEvent.ENTER_FRAME, this.onEnterFrame, this), e.awardBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onAwardBtnTap, this), 
            e.assistBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onAssistBtnTap, this), 
            e.startBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onStartBtnTap, this), 
            e.shellBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onFreeShellBtnTap, this), 
            e.shellBtn2.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onFreeShellBtnTap, this), 
            e.freeShellBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onFreeShellBtnTap, this), 
            e.fightBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onFightBtnTap, this), 
            e.backBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.closeBtn, this), e.helpBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onHelpBtnTap, this), 
            e.addEventListener(eui.UIEvent.ADDED_TO_STAGE, this.onViewAddedToStage, this), this.timer.addEventListener(egret.TimerEvent.TIMER, this.timerFunc, this), 
            this.buffTimer.addEventListener(egret.TimerEvent.TIMER, this.buffTimerFunc, this), 
            EventCenter.addEventListener(EventConst.refreshTaptitansItemCount, this.refreshTaptitansItemCount, this), 
            EventCenter.addEventListener(EventConst.refreshTaptitansBtnPoint, this.refreshRedPoint, this), 
            this.canon.onViewRegister(), this.dial.onViewRegister(), this.boss.onViewRegister();
        }, i.prototype.onViewRemove = function() {
            var t = this;
            t.removeEventListener(eui.UIEvent.ENTER_FRAME, this.onEnterFrame, this), t.awardBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.onAwardBtnTap, this), 
            t.assistBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.onAssistBtnTap, this), 
            t.startBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.onStartBtnTap, this), 
            t.shellBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.onFreeShellBtnTap, this), 
            t.shellBtn2.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.onFreeShellBtnTap, this), 
            t.freeShellBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.onFreeShellBtnTap, this), 
            t.fightBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.onFightBtnTap, this), 
            t.backBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.closeBtn, this), 
            t.helpBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.onHelpBtnTap, this), 
            t.removeEventListener(eui.UIEvent.ADDED_TO_STAGE, this.onViewAddedToStage, this), 
            EventCenter.removeEventListener(EventConst.refreshTaptitansItemCount, this.refreshTaptitansItemCount, this), 
            EventCenter.removeEventListener(EventConst.refreshTaptitansBtnPoint, this.refreshRedPoint, this), 
            this.canon.onViewRemove(), this.dial.onViewRemove(), this.boss.onViewRemove(), this.shell.onViewRemove(), 
            this.timer && (this.timer.removeEventListener(egret.TimerEvent.TIMER, this.timerFunc, this), 
            this.timer.reset()), this.buffTimer && (this.buffTimer.removeEventListener(egret.TimerEvent.TIMER, this.buffTimerFunc, this), 
            this.buffTimer.reset()), this.changeHandle > 0 && (egret.clearTimeout(this.changeHandle), 
            this.changeHandle = 0), this.assistFriendHandle > 0 && (egret.clearTimeout(this.assistFriendHandle), 
            this.assistFriendHandle = 0), this.canon && this.canon.resetAni(), this.buffGroup.visible = !1, 
            egret.Tween.removeTweens(t.bottomGroup), egret.Tween.removeTweens(t.islandGroup), 
            egret.Tween.removeTweens(t.dummyGroup), egret.Tween.removeTweens(t.helpBtn), egret.Tween.removeTweens(t.titleGroup), 
            egret.Tween.removeTweens(t.teamList), egret.Tween.removeTweens(t.damageList), egret.Tween.removeTweens(t.monsterHpGroup), 
            egret.Tween.removeTweens(t.backBtn), soundModel.stopSound(e.SoundType.SOUND_TAP_STILL), 
            soundModel.stopSound(e.SoundType.SOUND_TAP_SLEEP), soundModel.stopSound(e.SoundType.SOUND_TAP_LOOP);
        }, i.prototype.initView = function() {
            var t = this;
            TaptitansInfo.info = new TaptitansInfo(), t.damageList.setMediator(this), this.boss.openPanel(t.monsterGroup), 
            this.dummyBoss.openPanel(t.dummyMonsterGroup), this.canon.openPanel(), this.shell.openPanel(), 
            this.dial.openPanel(), this.viewState = TaptitansViewState.normal, t.dummyGroup.visible = !1, 
            t.monsterHpGroup.visible = !1, t.titleGroup.visible = !1, t.damageList.visible = !1, 
            t.teamList.visible = !1, t.itemCountGroup.visible = !1, t.awardRedPointImg.visible = !1, 
            t.shellGroup.visible = !1, this.btnlight || (this.btnlight = new e.ArmaturePlayer("btnlight"), 
            this.bottomGroup.addChild(this.btnlight)), this.btnlight.visible = playerModel.summonStone > 0, 
            this.btnlight.x = 400, this.btnlight.y = 135, this.btnlight.visible = !1, this.refreshBtnLight(), 
            this.refreshRedPoint(), this.refreshTaptitansItemCount(), this.refreshShellNum(), 
            TaptitansProxy.enterTitan(playerModel.uid, -1, this.onEnterTitan.bind(this), this.onEnterTitanFail.bind(this)), 
            t.monsterHpGroup.y += .5 * hortor.StageManager.stageOffHeight, t.dummyGroup.y += hortor.StageManager.stageOffHeight, 
            t.islandGroup.y += hortor.StageManager.stageOffHeight, t.dialGroup.y += hortor.StageManager.stageOffHeight;
        }, Object.defineProperty(i.prototype, "uiLock", {
            get: function() {
                return this.isPlayChangeAnimation || this.isPlayAssistAnimation || this.canon.hold || this.boss.state != TaptitansBoss.STATE_STILL && this.viewState == TaptitansViewState.assist;
            },
            enumerable: !0,
            configurable: !0
        }), i.prototype.onCanonTouchBegin = function(e) {
            this.dial.onCanonTouchBegin(e);
        }, i.prototype.onCanonTouchEnd = function(e) {
            this.dial.onCanonTouchEnd(e);
            var t = this.dial.getDamage();
            this.shell.addMainShell(TaptitansInfo.info.tid, t), this.teamList.fire(playerModel.uid), 
            TaptitansProxy.tapLastAttackPostBuff = this.isBuffing, TaptitansProxy.attackTitan(playerModel.uid, TaptitansInfo.info.tid, t, this.isBuffing, this.onAttackTitan.bind(this), this.onAttackTitanFail.bind(this));
        }, i.prototype.actionDataDamage = function(e) {
            var t = this;
            if (this && e.values.length >= 5) {
                for (var i = [], n = 0; n < e.values.length; n += 5) {
                    var o = new TaptitansActionDamage();
                    o.uid = e.from_uid, o.tid = e.values[0], o.damage = e.values[1], o.newDamage = e.values[2], 
                    o.updateTime = e.values[4], i.push(o);
                }
                var a = e.values[3], r = i[0].tid;
                r == TaptitansInfo.info.tid && (TaptitansInfo.info.remainHP > a && (TaptitansInfo.info.remainHP = a), 
                _.each(i, function(e) {
                    e.uid != playerModel.uid && (t.isPlayAssistAnimation || (t.shell.addSmallShell(e), 
                    t.teamList.fire(e.uid), t.teamList.actionEnter(e.tid, [ e.uid ]), t.damageList.actionDamage(e)));
                }));
            }
        }, i.prototype.actionDataEnter = function(e) {
            if (this) {
                var t = [], i = new TaptitansActionDamage();
                if (i.uid = e.from_uid, i.tid = e.values[0], t.push(i), t.length > 0) {
                    var n = t[0].tid;
                    this.teamList.actionEnter(n, _.map(t, function(e) {
                        return e.uid;
                    }));
                }
            }
        }, i.prototype.actionDataExit = function(e) {
            if (this) {
                for (var t = [], i = 0; i < e.values.length; i += 2) {
                    var n = new TaptitansActionDamage();
                    n.uid = e.values[i], n.tid = e.values[i + 1], t.push(n);
                }
                if (t.length > 0) {
                    var o = t[0].tid;
                    this.teamList.actionExit(o, _.map(t, function(e) {
                        return e.uid;
                    }));
                }
            }
        }, i.prototype.onEnterFrame = function(e) {}, i.prototype.onHelpBtnTap = function(t) {
            var i = HelpTextLabel.getTaptitansTextLabel();
            e.ComFunc.openHelpPanel(i);
        }, i.prototype.onAwardBtnTap = function(t) {
            this.uiLock || (soundModel.buttonOpen(), hortor.WindowManager.showWindow(e.WindowType.WINDOW_TAPTITANSAWARD), 
            this.refreshRedPoint());
        }, i.prototype.onAssistBtnTap = function(t) {
            if (!this.uiLock) {
                soundModel.buttonOpen(), playerModel.invitedToKillTitan = !1, EventCenter.sendEvent(EventConst.refreshTaptitansBtnPoint);
                var i = activityModel.getActivityInfo(e.ActivityType.KillTitan);
                i ? hortor.WindowManager.showWindow(e.WindowType.WINDOW_TAPTITANSASSIST, this.assistCB.bind(this)) : (hortor.TipManager.alert("\b活动已经结束。"), 
                TaptitansProxy.closeTaptitans());
            }
        }, i.prototype.assistCB = function(e) {
            var t = this;
            if (e > 0) {
                TaptitansInfo.info.tid;
                TaptitansProxy.enterTitan(playerModel.uid, e, function(e) {
                    t.dummyBoss.play(t.boss.name), t.onEnterTitan(e), t.stateChange(TaptitansViewState.assist);
                }, function() {
                    hortor.TipManager.alert("你好友唤醒的寄居蟹已经被打败。"), TaptitansProxy.enterTitan(playerModel.uid, -1, t.onEnterTitan.bind(t), t.onEnterTitanFail.bind(t));
                });
            }
        }, i.prototype.onStartBtnTap = function(e) {
            this.uiLock || (soundModel.buttonOpen(), this.canOpen() ? playerModel.summonStone > 0 ? TaptitansProxy.openTitan(playerModel.uid, this.onOpenTitan.bind(this), this.onOpenTitanFail.bind(this)) : hortor.TipManager.alert("唤醒石数量不足。") : hortor.TipManager.alert("活动已经结束，不能再唤醒寄居蟹。"));
        }, i.prototype.onShellBtnTap = function(t) {
            !this.uiLock && gateModel.iosPay && (soundModel.buttonOpen(), hortor.TipManager.alert("\b你剩余" + ~~playerModel.killTitanCannonBall + "发炮弹，你可以去商店补充炮弹。", function() {
                HttpService.get(e.ServerMsg.SHOP_LIST, "uid=" + playerModel.uid, function(t) {
                    var i = _.find(t.goods.prop, function(e) {
                        return "killTitanCannonBall" == e.goodsId;
                    });
                    hortor.WindowManager.showWindow(e.WindowType.WINDOW_SHOP_GOODS, i);
                });
            }));
        }, i.prototype.onFreeShellBtnTap = function(t) {
            soundModel.buttonOpen(), hortor.WindowManager.showWindow(e.WindowType.WINDOW_TAPTITANSFREESHELL);
        }, i.prototype.onFightBtnTap = function(e) {
            this.uiLock || (soundModel.buttonOpen(), this.canAttack() && this.stateChange(TaptitansViewState.attack));
        }, i.prototype.onShellHit = function(e, t) {
            this && (this.boss.attacked(), this.damageList.actionMyDamage(e, t), this.checkWin());
        }, i.prototype.onSmallShellHit = function(e) {
            this && (this.boss.attacked(), this.damageList.actionDamage(e), this.checkWin());
        }, i.prototype.closeBtn = function() {
            if (!this.uiLock) {
                switch (soundModel.stopSound(e.SoundType.SOUND_TAP_LOOP), soundModel.buttonClose(), 
                this.viewState) {
                  case TaptitansViewState.normal:
                    TaptitansProxy.removeTimer(), hortor.ScreenManager.back();
                    break;

                  case TaptitansViewState.attack:
                    this.stateChange(TaptitansViewState.normal);
                    break;

                  case TaptitansViewState.assist:
                    this.dummyBoss.play(this.boss.name), this.stateChange(TaptitansViewState.normal), 
                    TaptitansProxy.enterTitan(playerModel.uid, -1, this.onEnterTitan.bind(this), this.onEnterTitanFail.bind(this));
                }
            }
        }, i.prototype.stateChange = function(e, t) {
            switch (this.viewState) {
              case TaptitansViewState.normal:
                switch (e) {
                  case TaptitansViewState.attack:
                    this.changeToAttack(t);
                    break;

                  case TaptitansViewState.assist:
                    this.shell.clearAll(), this.changeToAssist();
                }
                break;

              case TaptitansViewState.attack:
                switch (e) {
                  case TaptitansViewState.normal:
                    this.changeToNormal();
                }
                break;

              case TaptitansViewState.assist:
                switch (e) {
                  case TaptitansViewState.normal:
                    this.shell.clearAll(), this.changeToHome();
                }
            }
        }, i.prototype.changeToAttack = function(e) {
            var t = this;
            this.refreshBtnLight(), this.viewState = TaptitansViewState.attack, this.hideBottomGroup(), 
            e ? (egret.setTimeout(function() {
                t.canon.show();
            }, this, 8130), this.changeHandle = egret.setTimeout(this.changeEnd, this, 8230)) : (this.canon.show(), 
            this.changeHandle = egret.setTimeout(this.changeEnd, this, 200)), this.isPlayChangeAnimation = !0;
        }, i.prototype.changeToNormal = function() {
            this.refreshBtnLight(), this.viewState = TaptitansViewState.normal, this.showBottomGroup(), 
            this.canon.hide(), this.isPlayChangeAnimation = !0, this.changeHandle = egret.setTimeout(this.changeEnd, this, 200);
        }, i.prototype.changeEnd = function() {
            this.isPlayChangeAnimation = !1;
        }, i.prototype.hideBottomGroup = function() {
            var e = this;
            this.shellGroup.visible = !0, this.bottomGroupStartY = this.bottomGroup.y, egret.Tween.get(this.bottomGroup).to({
                y: this.height,
                alpha: 0
            }, 200).call(function() {
                e.bottomGroup.visible = !1;
            });
        }, i.prototype.showBottomGroup = function() {
            var e = this;
            this.shellGroup.visible = !1, egret.Tween.get(this.bottomGroup).to({
                y: this.bottomGroupStartY,
                alpha: 1
            }, 200).call(function() {
                e.bottomGroup.visible = !0;
            });
        }, i.prototype.changeToAssist = function() {
            this.buffTimeEnd(), this.viewState = TaptitansViewState.assist, this.isPlayAssistAnimation = !0, 
            this.hideBottomGroup(), this.canon.show(), this.islandGroupPoint = new egret.Point(this.islandGroup.x, this.islandGroup.y), 
            this.dummyGroup.x = this.islandGroupPoint.x, this.dummyGroup.y = this.islandGroupPoint.y, 
            this.dummyGroup.visible = !0, this.islandGroup.x += 1e3, egret.Tween.get(this.islandGroup).to({
                x: this.islandGroupPoint.x
            }, 700, egret.Ease.backOut).call(this.changeAssistEnd, this), egret.Tween.get(this.dummyGroup).to({
                x: this.dummyGroup.x - 1e3
            }, 700, egret.Ease.backOut);
        }, i.prototype.changeAssistEnd = function() {
            this.isPlayAssistAnimation = !1, this.dummyGroup.visible = !1;
        }, i.prototype.changeToHome = function() {
            this.buffTimeEnd(), this.viewState = TaptitansViewState.normal, this.isPlayAssistAnimation = !0, 
            this.changeHandle = egret.setTimeout(this.changeEnd, this, 200), this.showBottomGroup(), 
            this.canon.hide(), this.islandGroupPoint = new egret.Point(this.islandGroup.x, this.islandGroup.y), 
            this.dummyGroup.x = this.islandGroupPoint.x, this.dummyGroup.y = this.islandGroupPoint.y, 
            this.dummyGroup.visible = !0, this.islandGroup.x -= 1e3, egret.Tween.get(this.islandGroup).to({
                x: this.islandGroupPoint.x
            }, 700, egret.Ease.backOut).call(this.changeHomeEnd, this), egret.Tween.get(this.dummyGroup).to({
                x: this.dummyGroup.x + 1e3
            }, 700, egret.Ease.backOut);
        }, i.prototype.changeHomeEnd = function() {
            this.isPlayAssistAnimation = !1, this.dummyGroup.visible = !1;
        }, i.prototype.onEnterTitan = function(e, t) {
            var i = this;
            if (void 0 === t && (t = !1), this) {
                this.shell.clearAll(), EventCenter.sendEvent(EventConst.refreshTaptitansBtnPoint), 
                this.updataTitanInfo(), TaptitansInfo.info.tid > 0 ? (this.timer.start(), this.teamList.setDataSource(TaptitansInfo.info.tid, TaptitansInfo.info.attackingIds), 
                this.damageList.setDataSource(TaptitansInfo.info.tid, TaptitansInfo.info.ranks)) : (this.teamList.setDataSource(-1, []), 
                this.damageList.setDataSource(-1, []));
                var n = 500;
                if (this.helpBtn.scaleX = this.helpBtn.scaleY = 0, this.bottomGroup.y = hortor.StageManager.stageHeight + 100, 
                egret.Tween.get(this.helpBtn).to({
                    scaleX: 1,
                    scaleY: 1
                }, n, egret.Ease.backOut), egret.Tween.get(this.bottomGroup).to({
                    y: hortor.StageManager.stageHeight - 71
                }, n, egret.Ease.backOut), TaptitansInfo.info.tid > 0) {
                    this.boss.start(), this.titleGroup.y = -110, this.teamList.scaleX = this.teamList.scaleY = 0, 
                    this.damageList.scaleX = this.damageList.scaleY = 0, this.monsterHpGroup.scaleX = this.monsterHpGroup.scaleY = 0, 
                    this.backBtn.scaleX = this.backBtn.scaleY = 0;
                    var o = egret.setTimeout(function() {
                        egret.clearTimeout(o), soundModel.buttonOpen(), egret.Tween.get(i.titleGroup).to({
                            y: -13
                        }, n, egret.Ease.backOut).call(function() {
                            soundModel.buttonOpen(), egret.Tween.get(i.teamList).to({
                                scaleX: .8,
                                scaleY: .8
                            }, 200, egret.Ease.backOut).call(function() {
                                soundModel.buttonOpen(), egret.Tween.get(i.damageList).to({
                                    scaleX: .8,
                                    scaleY: .8
                                }, 200, egret.Ease.backOut).call(function() {
                                    soundModel.buttonOpen(), egret.Tween.get(i.monsterHpGroup).to({
                                        scaleX: 1,
                                        scaleY: 1
                                    }, 200, egret.Ease.backOut), egret.Tween.get(i.backBtn).to({
                                        scaleX: 1,
                                        scaleY: 1
                                    }, 200, egret.Ease.backOut);
                                });
                            });
                        });
                    }, this, 1e3);
                } else t || this.boss.sleep();
                TaptitansInfo.info.closedNotice && hortor.TipManager.alert("您所唤醒的怪兽在规定时间内未被击杀", function() {});
            }
        }, i.prototype.onEnterTitanFail = function(e) {
            TaptitansProxy.closeTaptitans();
        }, i.prototype.onOpenTitan = function(t) {
            var i = this;
            if (this.updataTitanInfo(), TaptitansInfo.info.tid > 0) {
                this.stateChange(TaptitansViewState.attack, !0), this.teamList.setDataSource(TaptitansInfo.info.tid, [ playerModel.uid ]), 
                this.timer.start(), this.teamList.setDataSource(TaptitansInfo.info.tid, TaptitansInfo.info.attackingIds), 
                this.damageList.setDataSource(TaptitansInfo.info.tid, TaptitansInfo.info.ranks), 
                this.titleGroup.y = -110, this.bottomGroup.y = 1150, this.teamList.scaleX = this.teamList.scaleY = 0, 
                this.damageList.scaleX = this.damageList.scaleY = 0, this.monsterHpGroup.scaleX = this.monsterHpGroup.scaleY = 0, 
                this.helpBtn.scaleX = this.helpBtn.scaleY = 0, this.backBtn.scaleX = this.backBtn.scaleY = 0;
                var n = egret.setTimeout(function() {
                    egret.clearTimeout(n), soundModel.buttonOpen();
                    var t = 500;
                    egret.Tween.get(i.helpBtn).to({
                        scaleX: 1,
                        scaleY: 1
                    }, t, egret.Ease.backOut), egret.Tween.get(i.bottomGroup).to({
                        y: 968
                    }, t, egret.Ease.backOut), egret.Tween.get(i.titleGroup).to({
                        y: 50
                    }, t, egret.Ease.backOut).call(function() {
                        soundModel.buttonOpen(), egret.Tween.get(i.teamList).to({
                            scaleX: .8,
                            scaleY: .8
                        }, 200, egret.Ease.backOut).call(function() {
                            soundModel.buttonOpen(), egret.Tween.get(i.damageList).to({
                                scaleX: .8,
                                scaleY: .8
                            }, 200, egret.Ease.backOut).call(function() {
                                soundModel.stopSound(e.SoundType.SOUND_TAP_LOOP), i.boss.wakeup(), soundModel.buttonOpen(), 
                                egret.Tween.get(i.monsterHpGroup).to({
                                    scaleX: 1,
                                    scaleY: 1
                                }, 200, egret.Ease.backOut), egret.Tween.get(i.backBtn).to({
                                    scaleX: 1,
                                    scaleY: 1
                                }, 200, egret.Ease.backOut);
                            });
                        });
                    });
                }, this, 1e3);
            }
        }, i.prototype.onOpenTitanFail = function() {
            TaptitansProxy.closeTaptitans();
        }, i.prototype.onAttackTitan = function(e) {
            this.updataTitanInfo(), TaptitansInfo.info.attackedCount % TaptitansInfo.info.bufferBeginCount != 0 || this.isBuffing || TaptitansProxy.tapLastAttackPostBuff || this.startBuffTime();
        }, i.prototype.onAttackTitanFail = function() {
            this.canon.clearLockHandle(), this.shell.clearAll(), this.stateChange(TaptitansViewState.normal), 
            TaptitansProxy.enterTitan(playerModel.uid, -1, this.onEnterTitan.bind(this), this.onEnterTitanFail.bind(this));
        }, i.prototype.buffTimerFunc = function(e) {
            var t = egret.getTimer(), i = t - this.buffBeginTime;
            i >= 1e3 * TaptitansInfo.info.bufferDuration && this.buffTimeEnd();
        }, i.prototype.startBuffTime = function() {
            this.buffTimer.reset(), this.buffTimer.start(), this.buffBeginTime = egret.getTimer(), 
            this.isBuffing = !0;
        }, i.prototype.buffTimeEnd = function() {
            this.buffTimer.reset(), this.isBuffing = !1;
        }, i.prototype.timerFunc = function(e) {
            TaptitansInfo.info.tid > 0 && (TaptitansInfo.info.remainTime = Math.max(TaptitansInfo.info.remainTime, 0), 
            this.timeLabel.text = util.formatTimeCNNew3(TaptitansInfo.info.remainTime), TaptitansInfo.info.remainTime -= 1, 
            this.checkFail());
        }, i.prototype.onViewAddedToStage = function(t) {
            activityModel.getActivityInfo(e.ActivityType.KillTitan).playerData.enteredKillTitan || (this.onHelpBtnTap(null), 
            activityModel.getActivityInfo(e.ActivityType.KillTitan).playerData.enteredKillTitan = !0);
        }, i.prototype.refreshTaptitansItemCount = function() {
            this && (this.refreshShellNum(), this.itemCountLabel.text = "唤醒石数量：" + ~~playerModel.summonStone);
        }, i.prototype.refreshRedPoint = function() {
            this && (this.assistRedPointImg.visible = TaptitansInfo.info.invitedToKillTitan, 
            this.awardRedPointImg.visible = TaptitansInfo.info.haveAwards, this.itemCountLabel.text = "唤醒石数量：" + ~~playerModel.summonStone, 
            this.refreshShellNum());
        }, i.prototype.updataTitanInfo = function() {
            this && (this.refreshTaptitansItemCount(), this.refreshRedPoint(), this.refreshBtnLight(), 
            TaptitansInfo.info.tid > 0 ? (this.startBtnGroup.visible = !1, this.fightBtn.visible = !0, 
            this.monsterHpGroup.visible = !0, this.titleGroup.visible = !0, this.damageList.visible = !0, 
            this.teamList.visible = !0, this.itemCountGroup.visible = !1, this.refreshHP()) : (this.startBtnGroup.visible = !0, 
            this.startBtn.visible = !0, this.fightBtn.visible = !1, this.monsterHpGroup.visible = !1, 
            this.titleGroup.visible = !1, this.damageList.visible = !1, this.teamList.visible = !1, 
            this.itemCountGroup.visible = !0, this.timer.reset()));
        }, i.prototype.refreshBtnLight = function() {
            this.btnlight.visible = this.viewState == TaptitansViewState.normal && this.canOpen() && playerModel.summonStone > 0 && -1 == TaptitansInfo.info.tid;
        }, i.prototype.refreshHP = function() {
            this && this.monsterHp && (this.monsterHp.maximum = TaptitansInfo.info.maxHP, this.monsterHp.value = this.getBossHp());
        }, i.prototype.getBossHp = function() {
            return TaptitansInfo.info.remainHP <= 0 && this.shell.damage >= 0 ? this.monsterHp.value < this.shell.damage ? this.monsterHp.value : this.shell.damage : Math.max(TaptitansInfo.info.remainHP + this.shell.damage, 0);
        }, i.prototype.refreshShellNum = function() {
            var e = playerModel.killTitanCannonBall > 0 ? playerModel.killTitanCannonBall : 0;
            this.shellLabel.text = "" + e, this.shellLabel0.text = this.shellLabel.text, TaptitansInfo.info.shareCount >= TaptitansInfo.info.shareMaxCount ? this.freeShellBtn.visible = !1 : this.freeShellBtn.visible = !0;
        }, i.prototype.checkWin = function() {
            var t = this;
            if (TaptitansInfo.info.tid > 0) {
                var i = TaptitansInfo.info.tid, n = this.getBossHp();
                0 >= n && (this.buffTimeEnd(), this.timer.reset(), this.canon.clearLockHandle(), 
                TaptitansProxy.enterTitan(playerModel.uid, -1, function(n) {
                    t.boss.die();
                    var o = egret.setTimeout(function() {
                        egret.clearTimeout(o);
                        var a = _.find(n.rewards, function(e) {
                            return e.tid == i;
                        });
                        a ? hortor.WindowManager.showWindow(e.WindowType.WINDOW_TAPTITANSWIN, {
                            tid: i,
                            awardInfo: a,
                            cb: function() {
                                t.stateChange(TaptitansViewState.normal), TaptitansProxy.enterTitan(playerModel.uid, -1, t.onEnterTitan.bind(t, !0), t.onEnterTitanFail.bind(t));
                            }
                        }) : (hortor.TipManager.tip("寄居蟹已经死亡。"), t.stateChange(TaptitansViewState.normal), 
                        t.onEnterTitan(n));
                    }, t, 3e3);
                }, null));
            }
        }, i.prototype.checkFail = function() {
            TaptitansInfo.info.tid > 0 && TaptitansInfo.info.remainHP > 0 && TaptitansInfo.info.remainTime <= 0 && (TaptitansInfo.info.tid = -1, 
            this.buffTimeEnd(), hortor.TipManager.tip("时间到，你未能击败寄居蟹。"), this.timer.reset(), 
            this.canon.clearLockHandle(), this.stateChange(TaptitansViewState.normal), TaptitansProxy.enterTitan(playerModel.uid, -1, this.onEnterTitan.bind(this), this.onEnterTitanFail.bind(this)));
        }, i.prototype.canOpen = function() {
            activityModel.getActivityInfo(e.ActivityType.KillTitan);
            return !0;
        }, i.prototype.canAttack = function() {
            var t = activityModel.getActivityInfo(e.ActivityType.KillTitan);
            return t && TaptitansInfo.info.tid > 0 && TaptitansInfo.info.remainHP > 0;
        }, i.prototype.fitSpecialMobile = function() {
            this.helpBtn.y = 33;
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i;
    }(e.ScreenBase);
    e.TaptitansMainScreen = t, __reflect(t.prototype, "game.TaptitansMainScreen");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(e) {
        function t() {
            var t = e.call(this) || this;
            return t.oldUid = 0, t.oldUid = 0, t.skinName = TaptitansTeamItemSkin, t;
        }
        return __extends(t, e), t.prototype.childrenCreated = function() {
            e.prototype.childrenCreated.call(this), this.fireImg.visible = !1, this.addEventListener(eui.UIEvent.ENTER_FRAME, this.onEnterFrame, this);
        }, t.prototype.fire = function() {
            var e = this;
            this.fireImg && (this.fireImg.visible = !0, this.fireImg.alpha = 1, egret.Tween.removeTweens(this.fireImg), 
            egret.Tween.get(this.fireImg).to({
                alpha: 0
            }, 2e3).call(function() {
                e.fireImg.visible = !1;
            }, this));
        }, t.prototype.dataChanged = function() {
            e.prototype.dataChanged.call(this);
            var t = this.data, i = "", n = "", o = "", a = 0;
            if (t == playerModel.uid) n = playerModel.headImg, i = util.strSub(playerModel.name, 4), 
            o = 1 == playerModel.gender ? "common_img_portrait1" : "common_img_portrait0", this.nameLabel.textColor = 1 == playerModel.gender ? Const.manNameColor : Const.womanNameColor, 
            a = playerModel.gender; else {
                var r = TaptitansProxy.taptitansPlayerInfo[t];
                r ? (i = util.strSub(r.name, 4), n = r.headImg, a = r.gender, -1 != r.gender && (o = 1 == r.gender ? "common_img_portrait1" : "common_img_portrait0", 
                this.nameLabel.textColor = 1 == r.gender ? Const.manNameColor : Const.womanNameColor)) : (n = "", 
                i = "", o = "common_img_portrait0");
            }
            this.nameLabel.text = util.strSub(i, 4), this.headMask.source = o, util.setRemoteAvatar(this.headImg, n), 
            this.oldUid != t && (this.oldUid = t, this.fireImg.visible = !1);
        }, t.prototype.onEnterFrame = function(e) {
            if ("" == this.nameLabel.text) {
                var t = TaptitansProxy.taptitansPlayerInfo[this.data];
                t && (this.nameLabel.text = util.strSub(t.name, 4), util.setRemoteAvatar(this.headImg, t.headImg));
            }
        }, t;
    }(eui.ItemRenderer);
    e.TaptitansTeamItem = t, __reflect(t.prototype, "game.TaptitansTeamItem");
}(game || (game = {})), window.TaptitansTeamItem = game.TaptitansTeamItem;

var TaptitansTeamList = function(e) {
    function t() {
        var t = e.call(this) || this;
        return t.originalDataSource = [], t.dataSource = new eui.ArrayCollection(), t.skinName = TaptitansTeamListSkin, 
        t;
    }
    return __extends(t, e), t.prototype.childrenCreated = function() {
        e.prototype.childrenCreated.call(this), this.list.dataProvider = this.dataSource, 
        this.list.itemRenderer = game.TaptitansTeamItem;
    }, t.prototype.setDataSource = function(e, t) {
        this.tid != e ? this.originalDataSource = t : this.originalDataSource = _.union(this.originalDataSource, t), 
        this.tid = e, this.refreshDataSource();
    }, t.prototype.refreshDataSource = function() {
        this.originalDataSource = _.union([ playerModel.uid ], this.originalDataSource), 
        this.dataSource.replaceAll(_.first(this.originalDataSource, 5));
        var e = [];
        _.each(this.dataSource.source, function(t) {
            TaptitansProxy.taptitansPlayerInfo[t] || e.push(t);
        }), e.length > 0 && TaptitansProxy.getPlayerSimpleInfo(playerModel.uid, e, function() {});
    }, t.prototype.actionEnter = function(e, t) {
        this.tid == e && (this.originalDataSource = _.union(this.originalDataSource, t), 
        this.refreshDataSource());
    }, t.prototype.actionExit = function(e, t) {
        this.tid == e && (this.originalDataSource = _.difference(this.originalDataSource, t), 
        this.refreshDataSource());
    }, t.prototype.fire = function(e) {
        var t = _.indexOf(this.dataSource.source, e);
        if (t >= 0) {
            var i = this.list.getElementAt(t);
            i && i.fire();
        }
    }, t;
}(eui.Component);

__reflect(TaptitansTeamList.prototype, "TaptitansTeamList"), window.TaptitansTeamList = TaptitansTeamList;

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return t.call(this) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.panelAlert.registCallBack(this.confirmBtnFunc.bind(this), this.closeBtnFunc.bind(this), this);
        }, i.prototype.onOpen = function() {}, i.prototype.onData = function() {
            this.initView();
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.initView = function() {
            var e = this, t = e.data.awardInfo;
            if (this._textField.text = "", this.desc.text = "", this.data.awardInfo.titanOwnId == playerModel.uid) this.desc.visible = !0, 
            this.desc.text = "你成功打败了寄居蟹", this._textField.visible = !1; else {
                this.desc.visible = !1, this._textField.textFlow = [], this._textField.textFlow.push({
                    text: "你帮助",
                    style: {
                        textColor: 4374271
                    }
                }), this._textField.textFlow.push({
                    text: util.strSub(t.titanOwnName, 6),
                    style: {
                        textColor: 16486441
                    }
                });
                var i = "打败了寄居蟹\n你的伤害名列第" + t.rank;
                t.rewardMap.money && 1e5 == t.rewardMap.money && (i = "打败了寄居蟹\n获得参与奖"), this._textField.textFlow.push({
                    text: i,
                    style: {
                        textColor: 4374271
                    }
                }), this._textField.visible = !0;
            }
            this.setAwardItemGroup(this.data.awardInfo);
        }, i.prototype.setAwardItemGroup = function(e) {
            for (var t = this.awardGroup.numChildren - 1; t >= 0; t--) this.awardGroup.removeChildAt(t);
            e.rewardMap.energy > 0 && this.createAwardGroup({
                energy: e.rewardMap.energy
            }), e.rewardMap.money > 0 && this.createAwardGroup({
                money: e.rewardMap.money
            }), e.rewardMap.potion > 0 && this.createAwardGroup({
                potion: e.rewardMap.potion
            }), e.rewardMap.killTitanCannonBall > 0 && this.createAwardGroup({
                killTitanCannonBall: e.rewardMap.killTitanCannonBall
            }), e.rewardMap.cookie > 0 && this.createAwardGroup({
                cookie: e.rewardMap.cookie
            }), e.rewardMap.summonStone > 0 && this.createAwardGroup({
                summonStone: e.rewardMap.summonStone
            });
        }, i.prototype.createAwardGroup = function(t) {
            var i = this, n = new e.ComRewardNode();
            i.awardGroup.addChild(n), n.initNodeView(t);
        }, i.prototype.closeBtnFunc = function() {
            soundModel.buttonClose(), this.data.cb && this.data.cb(), hortor.WindowManager.hideWindow(e.WindowType.WINDOW_TAPTITANSWIN);
        }, i.prototype.confirmBtnFunc = function() {
            var e = this;
            TaptitansProxy.gainTitanAward(playerModel.uid, this.data.tid, this.data.awardInfo, function() {
                e.closeBtnFunc();
            }, function() {
                e.closeBtnFunc();
            });
        }, i;
    }(e.WindowBase);
    e.TaptitansWinWindow = t, __reflect(t.prototype, "game.TaptitansWinWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            t.prototype.onInit.call(this), this.addClick(this.windowBtn, this.showClickHandler, this), 
            this.addClick(this.bubbleBtn, this.bubbleClickHandler, this), this.addClick(this.timeBtn, this.timeClickHandler, this), 
            this.addClick(this.bindBtn, this.bindClickHandler, this), this.addClick(this.mcBtn, this.movieClickHandler, this), 
            this.addClick(this.tipTestBtn, this.tipClickHandler, this), this.addClick(this.mcPlayerBtn, this.moviePlayerClickHandler, this), 
            this.addClick(this.armaturePlayerBtn, this.armaturePlayerClickHandler, this), hortor.TipManager.registTargetTip(this.tipBtn, "Test RegistTip", 10), 
            playerModel.bind("name", this.bindLabel), hortor.NotificationManager.add("testMessage", function(e) {
                console.log("get message:" + e);
            }, this);
        }, i.prototype.showClickHandler = function(t) {
            hortor.WindowManager.currentWindow = e.WindowType.WINDOW_TEST;
        }, i.prototype.timeClickHandler = function(e) {
            var t = this;
            this.timeLabel.text = "running";
            var i = hortor.TimerManager.addClock("testclock", 10, 1, 3);
            i.registCallBack(this, function() {
                t.timeLabel.text = "complete";
            }, function(e) {
                t.timeLabel.text = (100 * e).toFixed(1) + "%   " + i.leftTimeFormat;
            });
        }, i.prototype.bindClickHandler = function(e) {
            playerModel.name = this.bindInput.text;
        }, i.prototype.movieClickHandler = function(e) {
            var t = this;
            if (null == this.movieClip) {
                var i = hortor.ResourceManager.getSheet("testTexture_json");
                this.movieClip = i.createMovieClip("Loading", 200, 600), this.addChild(this.movieClip);
            }
            this.aniLabel.text = "onPlaying", this.movieClip.play(this.aniInput.text, !0, function() {
                t.aniLabel.text = "onPlayComplete";
            }, this);
        }, i.prototype.moviePlayerClickHandler = function(t) {
            var i = this;
            null == this.moviePlayer && (this.moviePlayer = new hortor.MoviePlayer(e.ResourcePath.getMovieClip("anniu")), 
            this.addChild(this.moviePlayer), this.moviePlayer.x = this.moviePlayer.y = 300), 
            this.aniPlayerLabel.text = "onPlaying", this.moviePlayer.play(3, function() {
                i.aniPlayerLabel.text = "onPlayComplete";
            }, this);
        }, i.prototype.armaturePlayerClickHandler = function(t) {
            var i = this;
            null == this.scanArmature && (this.scanArmature = new hortor.ArmaturePlayer(e.ResourcePath.getDragonPath("leida")), 
            this.scanArmature.anchorOffsetX = -320, this.scanArmature.anchorOffsetY = -520, 
            this.addChild(this.scanArmature)), this.scanArmature.play("enter", 1, function() {
                i.scanArmature.play("loop", 0);
            });
        }, i.prototype.bubbleClickHandler = function(e) {
            hortor.TipManager.bubble("This is a bubble!");
        }, i.prototype.tipClickHandler = function(e) {
            hortor.TipManager.tip("This is a tip!");
        }, i.prototype.notificationClickHandler = function(e) {
            hortor.NotificationManager.dispatch("testMessage", "hello");
        }, i;
    }(e.ScreenBase);
    e.TestScreen = t, __reflect(t.prototype, "game.TestScreen");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(e) {
        function t() {
            return null !== e && e.apply(this, arguments) || this;
        }
        return __extends(t, e), t.prototype.onInit = function() {
            e.prototype.onInit.call(this), this.enterBtn.addEventListener(egret.TouchEvent.TOUCH_END, this.loginClickHandler, this), 
            this.closeBtn.addEventListener(egret.TouchEvent.TOUCH_END, this.hide, this), this.addChild(this.resource.createMoviePlayer("Loading", 500, 400)), 
            this.effect = new hortor.FadeEffect();
        }, t.prototype.haveUserData = function() {
            return "" != this.nameLabel.text && "" != this.passLabel.text;
        }, t.prototype.loginClickHandler = function(e) {
            hortor.TipManager.alert("This is a alert window!");
        }, t;
    }(e.WindowBase);
    e.TestWindow = t, __reflect(t.prototype, "game.TestWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return t.call(this) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.closeBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.closeFunc, this), 
            this.okBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.okFunc, this);
        }, i.prototype.onOpen = function() {}, i.prototype.onClose = function() {}, i.prototype.onData = function() {
            this.data.desc ? this.desc.text = this.data.desc : this.desc.text = "转点金币吧";
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.okFunc = function() {
            this.data.cb && this.data.cb(), this.closeFunc();
        }, i.prototype.closeFunc = function() {
            hortor.WindowManager.hideWindow(e.WindowType.WINDOW_WHEEL_GOTOWHEELALERT);
        }, i;
    }(e.WindowBase);
    e.GotoWheelAlertWindow = t, __reflect(t.prototype, "game.GotoWheelAlertWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.descArrs = [ "", "需求:", TreeText.aidTips0, TreeText.aidTips1, TreeText.aidTips2 ], 
            e.skinPath = "tree/TreeAidFriendNodeSkin", e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.gotoBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.gotoBtnFunc, this);
        }, i.prototype.onData = function() {
            this.initView();
        }, i.prototype.initView = function() {
            var t = this.data;
            if (this.avatar.starGroup.visible = !1, t.gender > 0 ? this.avatar.bgImage.source = 1 == t.gender ? "common_json.common_img_tz1_1" : "common_json.common_img_tz1_0" : this.avatar.bgImage.source = "common_json.common_img_tz1_0", 
            util.setRemoteAvatar(this.avatar.avatarImage, e.ComFunc.headImg(t.headImg)), this.nameLabel.text = util.strSub(t.name, 10), 
            this.nameLabel.textColor = 1 == t.gender ? Const.manNameColor : Const.womanNameColor, 
            this.iconGroup.visible = 1 == t.sortType, this.desc.text = this.descArrs[t.sortType], 
            1 == t.sortType) for (var i = 0; 4 > i; i++) if (this["icon" + i].visible = !1, 
            t.needArrs[i]) {
                var n = t.needArrs[i] - 1;
                this["icon" + i].visible = !0, this["icon" + i].source = e.ItemManager.getItemInfo("treeGift" + n).icon;
            }
        }, i.prototype.gotoBtnFunc = function() {
            var t = this.data;
            return t.uid == TreeEnter.owner ? void hortor.WindowManager.hideWindow(e.WindowType.WINDOW_TREEAIDFRIEND) : void TreeFunc.enterTree(t.uid);
        }, i;
    }(e.ItemRenderBase);
    e.TreeAidFriendItem = t, __reflect(t.prototype, "game.TreeAidFriendItem");
}(game || (game = {})), window.TreeAidFriendItem = game.TreeAidFriendItem;

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return t.call(this) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            var t = this;
            t.dataSource = new eui.ArrayCollection(), t.aidList.dataProvider = t.dataSource, 
            t.aidList.itemRenderer = e.TreeAidFriendItem;
        }, i.prototype.onOpen = function() {}, i.prototype.onClose = function() {}, i.prototype.onData = function() {
            this.openPanel();
        }, i.prototype.prepare = function(t, i) {
            HttpService.get(e.ServerMsg.TREE_FRIEND, "uid=" + playerModel.uid, t, i);
        }, i.prototype.openPanel = function() {
            this.panel.helpBtn.visible = !1, this.showAidList();
        }, i.prototype.showAidList = function() {
            var e = this, t = this.dealAidDataList();
            e.emptyTips.text = "暂时没有好友求助你", e.emptyGroup.visible = 0 == t.length, e.dataSource.replaceAll(t);
        }, i.prototype.dealAidDataList = function() {
            for (var e = this, t = e.data.list, i = t.length, n = 0; i > n; n++) {
                var o = t[n], a = o.slots;
                o.needArrs = [];
                var r = _.find(a, function(e) {
                    return 0 == e.uid;
                });
                if (r) {
                    var s = _.find(a, function(e) {
                        return e.uid == playerModel.uid;
                    });
                    if (s) o.sortType = 3; else {
                        for (var l = 0, d = 0; d < a.length; d++) {
                            var u = a[d];
                            0 == u.uid ? o.needArrs.push(u.item) : u.uid != o.uid && l++;
                        }
                        o.needArrs = _.uniq(o.needArrs), o.needArrs.sort(function(e, t) {
                            return e > t;
                        }), l >= 3 ? o.sortType = 2 : o.sortType = 1;
                    }
                } else o.sortType = 4;
            }
            return t.sort(function(e, t) {
                return e.sortType - t.sortType;
            }), t;
        }, i;
    }(e.WindowBase);
    e.TreeAidFriendWindow = t, __reflect(t.prototype, "game.TreeAidFriendWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return t.call(this) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.onViewRegister();
        }, i.prototype.onOpen = function() {
            uiModel.onShow(e.UINameType.dressBtn, this.dressBtn);
        }, i.prototype.onClose = function() {}, i.prototype.onData = function() {
            this.openPanel();
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.onViewRegister = function() {
            this.addEventListener(egret.TouchEvent.TOUCH_TAP, this.viewFunc, this);
        }, i.prototype.onViewRemove = function() {
            this.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.viewFunc, this);
        }, i.prototype.openPanel = function() {
            var t = this, i = t.data.item - 1;
            t.giftImg.source = e.ItemManager.getItemInfo("treeGift" + i).icon, t.giftNeedNum.text = TreeEnter.bags[i] + ("/" + t.data.need);
            var n = TreeEnter.bags[i] >= t.data.need;
            n ? t.giftNeedNum.textColor = 1756253 : t.giftNeedNum.textColor = 16713479;
            var o = _.keys(t.data.reward), a = _.values(t.data.reward), r = e.ItemManager.getItemInfo(o[0]);
            t.rewardIcon.source = r.icon, t.rewardNum.text = "x" + e.ComFunc.formatNumber(a[0]), 
            TreeEnter.owner != playerModel.uid ? (t.friendBtn.visible = !1, t.dressBtn.visible = !1, 
            t.helpBtn.visible = !0, n ? (t.helpBtn.enabled = !0, this.setBigHeight(!1), this.desc.visible = !1) : (t.helpBtn.enabled = !1, 
            this.setBigHeight(!0), t.desc.visible = !0, t.desc.text = "剩下的他自己来吧")) : (t.friendBtn.visible = !1, 
            t.dressBtn.visible = !1, t.helpBtn.visible = !1, n ? (t.dressBtn.visible = !0, t.desc.visible = !1, 
            this.setBigHeight(!1)) : (t.friendBtn.visible = !0, t.desc.text = "每艘船可求助好友3次", 
            t.desc.visible = !0, this.setBigHeight(!0)));
        }, i.prototype.setBigHeight = function(e) {
            this.group.height = 1 == e ? 504 : 474;
        }, i.prototype.viewFunc = function(t) {
            var i = t.target, n = i.name;
            console.log("_targetName = " + n), n && ("friendBtn" == n ? (this.friendBtnFunc(), 
            e.PlatformManager.LogEvent("tree_clickFriendBtn")) : "dressBtn" == n ? (this.dressBtnFunc(), 
            e.PlatformManager.LogEvent("tree_clickDressBtn")) : "helpBtn" == n && (this.dressBtnFunc(), 
            e.PlatformManager.LogEvent("tree_clickHelpBtn")));
        }, i.prototype.friendBtnFunc = function() {
            var e = this, t = this.friendDressCount();
            if (TreeEnter.owner == playerModel.uid && t >= 3) return void hortor.TipManager.alert(TreeText.tips1);
            var i = this.canDressNum();
            return TreeEnter.owner == playerModel.uid && i > 3 ? void hortor.TipManager.alert(TreeText.tips7, function() {
                e.forHelpQuest();
            }) : void this.forHelpQuest();
        }, i.prototype.forHelpQuest = function() {
            HttpService.post(e.ServerMsg.TREE_HELP_ME, "uid=" + playerModel.uid, function(t) {
                hortor.TipManager.alert(TreeText.tips9), hortor.WindowManager.hideWindow(e.WindowType.WINDOW_TREEDRESS);
            });
        }, i.prototype.dressBtnFunc = function() {
            var t = this, i = this.friendDressCount();
            if (TreeEnter.owner != playerModel.uid && i >= 3) return void hortor.TipManager.alert(TreeText.tips4);
            var n = t.data.item - 1, o = TreeEnter.bags[n];
            o >= t.data.need ? (t.dressBtn.enabled = !1, t.helpBtn.enabled = !1, HttpService.post(e.ServerMsg.TREE_FILL, "uid=" + playerModel.uid + "&fid=" + TreeEnter.owner + "&slot=" + t.data.slot, function(i) {
                t.dressBtn.enabled = !0, t.helpBtn.enabled = !0;
                for (var n in i) _.isUndefined(TreeEnter[n]) || (TreeEnter[n] = i[n]);
                playerModel.update(i), hortor.WindowManager.hideWindow(e.WindowType.WINDOW_TREEDRESS), 
                hortor.WindowManager.showWindow(e.WindowType.WINDOW_REWARD, i.reward);
                var o = hortor.ScreenManager.getScreen(e.ScreenType.TREE_SCREEN);
                if (o && (o.playDressEffect(t.data), o.initProp()), TreeMark.treeGuideStep < 2) {
                    TreeMark.treeGuideStep++;
                    var a = activityModel.getActivityInfo(e.ActivityType.tree);
                    a.playerData.tutorial = TreeMark.treeGuideStep;
                }
            }, null, function() {
                t.dressBtn.enabled = !0, t.helpBtn.enabled = !0;
            })) : hortor.WindowManager.showWindow(e.WindowType.WINDOW_WHEEL_GOTOWHEELALERT, {
                cb: function() {
                    hortor.WindowManager.hideWindow(e.WindowType.WINDOW_TREEDRESS), hortor.ScreenManager.back();
                },
                desc: "转点水果吧"
            });
        }, i.prototype.friendDressCount = function() {
            for (var e = 0, t = TreeEnter.slots, i = 0; i < t.length; i++) {
                var n = t[i];
                0 != n.uid && n.uid != TreeEnter.owner && e++;
            }
            return e;
        }, i.prototype.canDressNum = function() {
            for (var e = 0, t = TreeEnter.slots, i = 0; i < t.length; i++) {
                var n = t[i];
                0 == n.uid && e++;
            }
            return e;
        }, i;
    }(e.WindowBase);
    e.TreeDressWindow = t, __reflect(t.prototype, "game.TreeDressWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.nameColor = 16748828, e.descColor = 8816262, e.targetColor = 16748828, 
            e.skinPath = "tree/TreeNewsItemSkin", e;
        }
        return __extends(i, t), i.prototype.onInit = function() {}, i.prototype.onData = function() {
            var t = this.data;
            util.setRemoteAvatar(this.avatarImage, e.ComFunc.headImg(t.friendHeadImg)), this.timeLabel.text = e.ComFunc.showTimeBeforeNew(this.data.createTime || moment().unix());
            var i = TreeConst.treeGiftNames[t.item - 1], n = e.ItemManager.getItemInfo("treeGift" + (t.item - 1)).icon;
            this.fruitImg.source = n, this.desc.textFlow = [];
            var o = util.strSub(t.friendName, 6);
            0 == t.status ? (this.desc.textFlow.push({
                text: "你帮",
                style: {
                    textColor: this.descColor
                }
            }), this.desc.textFlow.push({
                text: o,
                style: {
                    textColor: this.nameColor
                }
            }), this.desc.textFlow.push({
                text: "挂了",
                style: {
                    textColor: this.descColor
                }
            }), this.desc.textFlow.push({
                text: t.need + "个" + i,
                style: {
                    textColor: this.targetColor
                }
            })) : 1 == t.status ? (this.desc.textFlow.push({
                text: o,
                style: {
                    textColor: this.nameColor
                }
            }), this.desc.textFlow.push({
                text: "帮你挂了",
                style: {
                    textColor: this.descColor
                }
            }), this.desc.textFlow.push({
                text: t.need + "个" + i,
                style: {
                    textColor: this.targetColor
                }
            })) : 2 == t.status && (this.desc.textFlow.push({
                text: o,
                style: {
                    textColor: this.nameColor
                }
            }), this.desc.textFlow.push({
                text: "帮你收集了",
                style: {
                    textColor: this.descColor
                }
            }), this.desc.textFlow.push({
                text: t.need + "个" + i,
                style: {
                    textColor: this.targetColor
                }
            }));
        }, i;
    }(e.ItemRenderBase);
    e.TreeNewsItem = t, __reflect(t.prototype, "game.TreeNewsItem");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.initEvent = e.addEventFunc.bind(e), e;
        }
        return __extends(i, t), i.prototype.addEventFunc = function() {}, i.prototype.onInit = function() {
            t.prototype.onInit.call(this), this.list.itemRenderer = e.TreeNewsItem;
        }, i.prototype.onOpen = function() {}, i.prototype.onClose = function() {}, i.prototype.onData = function() {
            this.desc.text = TreeText.tips6, this.logs = this.data.logs;
        }, i.prototype.prepare = function(t, i) {
            HttpService.get(e.ServerMsg.TREE_LOGS, "uid=" + playerModel.uid, function(e) {
                t(e);
            }, i);
        }, i;
    }(e.ComNewsWindow);
    e.TreeNewsWindow = t, __reflect(t.prototype, "game.TreeNewsWindow");
}(game || (game = {}));

var TreeFunc = function() {
    function e() {}
    return e.openTree = function() {
        e.redPoint = !1;
        var t = activityModel.getActivityInfo(game.ActivityType.tree);
        t && t.beginRemain <= 0 && t.endRemain > 0 && (TreeMark.treeGuideStep = t.playerData.tutorial, 
        HttpService.post(game.ServerMsg.TREE_ENTER, "uid=" + playerModel.uid + "&fid=" + playerModel.uid, function(t) {
            if (TreeEnter = t, EventCenter.sendEvent(EventConst.openCloudEffect), t.logs && t.logs.length > 0) for (var i = 0; i < t.logs.length; i++) {
                var n = {
                    uid: 0,
                    name: "",
                    headImg: ""
                };
                n.name = t.logs[i].friendName, n.headImg = t.logs[i].friendHeadImg;
                var o = t.logs[i].item, a = t.logs[i].need, r = t.logs[i].bigItem, s = TreeConst.treeGiftNames[o - 1], l = [];
                if (l.push({
                    text: "帮你收集了",
                    style: {
                        textColor: 8487297
                    }
                }), l.push({
                    text: a + "个" + s,
                    style: {
                        textColor: 16203047
                    }
                }), 0 != r) {
                    var d = t.logs[i].bigNeed, u = TreeConst.treeGiftNames[r - 1];
                    l.push({
                        text: "，\n并额外获得",
                        style: {
                            textColor: 8487297
                        }
                    }), l.push({
                        text: d + "个" + u,
                        style: {
                            textColor: 16203047
                        }
                    });
                }
                var h = t.logs[i].key;
                e.helpMsgList.push({
                    playerInfo: n,
                    desc: l,
                    logId: h,
                    isReadToServer: !1
                });
            }
        }));
    }, e.enterTree = function(e) {
        var t = this;
        HttpService.post(game.ServerMsg.TREE_ENTER, "uid=" + playerModel.uid + "&fid=" + e, function(e) {
            TreeEnter = e, game.ScreenLoading.instance.loadingState = !0;
            var i = egret.setTimeout(function() {
                egret.clearTimeout(i);
                var e = hortor.ScreenManager.getScreen(game.ScreenType.TREE_SCREEN);
                e && (e.clearFruits(), e.showAllView(), e.dropGroupDown()), game.ScreenLoading.instance.loadingState = !1;
            }, t, 700);
            hortor.WindowManager.hideWindow(game.WindowType.WINDOW_TREEAIDFRIEND);
        });
    }, e.helpOthers = function(e, t, i) {
        HttpService.post(game.ServerMsg.TREE_HELPOTHERS, "uid=" + playerModel.uid + "&fid=" + t + "&itemId=" + i, function(e) {
            if (e.isSuccess) {
                var t = "水果";
                TreeConst.treeGiftNames[i - 1] && (t = TreeConst.treeGiftNames[i - 1]), hortor.TipManager.tip("感谢您帮助好友获得了2个" + t);
            }
        });
    }, e.share = function(e) {
        game.PlatformManager.share(Const.tree, {
            fruitId: e
        });
    }, e.checkHelpMsg = function() {
        var t = this;
        e.helpMsgList.length > 0 && (e.helpMsgList[0].isReadToServer && HttpService.post(game.ServerMsg.TREE_READSHAREHELPLOG, "uid=" + playerModel.uid + "&logId=" + e.helpMsgList[0].logId, function(e) {}), 
        game.ComFunc.PopConfirmWithHeadView(e.helpMsgList[0].playerInfo, e.helpMsgList[0].desc, function() {
            e.helpMsgList.shift(), egret.setTimeout(function() {
                var t = hortor.ScreenManager.isOpen(game.ScreenType.TREE_SCREEN);
                t && e.checkHelpMsg();
            }, t, 200);
        }));
    }, e.helpMsgList = [], e.redPoint = !1, e;
}();

__reflect(TreeFunc.prototype, "TreeFunc");

var TreeConst = function() {
    function e() {}
    return e.treeGiftNames = [ "蓝莓", "芒果", "葡萄", "香蕉" ], e;
}();

__reflect(TreeConst.prototype, "TreeConst");

var TreeText = {
    nextTime: "下一艘船剩余时间",
    tips0: "已经帮他装过水果，快去帮助其他人吧!",
    tips1: "每次装水果，好友最多帮你装3次，剩下的需要自己完成！",
    tips2: "已将所有装水果需求发送给游戏内好友",
    tips3: "好友最多可以帮你装3个箱子",
    tips4: "每次装水果，好友最多帮TA3次，剩下的需要TA自己完成哦！",
    tips5: "道具数量不足，快去转轮盘获得吧！",
    tips6: "互相帮助可以更快的装满水果哦",
    tips7: "每艘船只能援助3次，确定现在就援助吗？",
    tips8: "援助已求助好友，获得装水果奖励，每人一次",
    tips9: "已将所有装水果需求发送给游戏内好友,好友最多可以帮你装3个箱子",
    paoTips0: "装满水果，我就把礼物送给你！",
    paoTips1: "海盗商人，快来装满水果吧！",
    paoTips2: "水果我都带走了啦，我还会再回来的！",
    guideTips0: "海盗商人，快来装满水果吧！",
    guideTips1: "很棒哦！再挂一个芒果吧!",
    guideTips2: "装满水果，我就把礼物送给你！",
    aidTips0: "对方目前已经不能接受援助",
    aidTips1: "已经为他装过水果了",
    aidTips2: "箱子已装满"
}, TreeMark = {
    getTreeOverReward: !1,
    treeGuideStep: 0
}, TreeFruitPos = [ {
    x: 137,
    y: 0
}, {
    x: 287,
    y: 0
}, {
    x: 438,
    y: 0
}, {
    x: 85,
    y: 200
}, {
    x: 226,
    y: 200
}, {
    x: 367,
    y: 200
}, {
    x: 508,
    y: 200
} ], TreeEnter = {
    slots: [ {
        item: 1,
        need: 2,
        uid: 0,
        slot: 0
    }, {
        item: 1,
        need: 2,
        uid: 0,
        slot: 0
    }, {
        item: 1,
        need: 2,
        uid: 0,
        slot: 0
    }, {
        item: 1,
        need: 2,
        uid: 0,
        slot: 0
    }, {
        item: 1,
        need: 2,
        uid: 0,
        slot: 0
    }, {
        item: 1,
        need: 2,
        uid: 0,
        slot: 0
    }, {
        item: 1,
        need: 2,
        uid: 0,
        slot: 0
    } ],
    players: [ {
        uid: 96,
        name: "test34",
        headImg: "http://wx.qlogo.cn/mmopen/btgohxsIeu0BPSnytPWEvsBZx7usMovmQ45DhuIISW8ibqHtwbV1pPVXFsZzBdEPlaoyGYWMIOowBmBeCMHibRkkDkqZlKSMUl/0",
        crowns: 24,
        gender: 1,
        isVip: !1
    } ],
    bags: [ 0, 0, 0, 0 ],
    owner: 0,
    openRemain: 0,
    helpCount: 0,
    logs: [],
    rewardMoneyMin: 0,
    rewardMoneyMax: 0
}, game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.fruits = [], e.clickLock = !1, e.giftPosArrs = [ {
                x: 166,
                y: 219
            }, {
                x: 261,
                y: 216
            }, {
                x: 347,
                y: 201
            }, {
                x: 395,
                y: 228
            }, {
                x: 443,
                y: 212
            }, {
                x: 0,
                y: 0
            }, {
                x: 0,
                y: 0
            } ], e.groups = [], e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.setNotchFit(this.activityTimeGroup), this.setNotchFit(this.friendInfoGroup), 
            this.setNotchFit(this.newsGroup), this.setNotchFit(this.closeBtn), this.hideFruitHead(), 
            this.giftGroup && (this.scaleEffect = new hortor.TouchScaleEffect(), this.scaleEffect.start(this.giftGroup));
        }, i.prototype.onOpen = function() {
            0 == TreeMark.treeGuideStep && e.TutorialManager.instance.startTutorial("tree", TreeMark.treeGuideStep);
        }, i.prototype.onClose = function() {
            this.onViewRemove();
        }, i.prototype.onData = function() {
            this.shareBtn.visible = !playerModel.isAudit, this.onViewRegister(), this.openPanel();
        }, i.prototype.prepare = function(t, i) {
            var n = activityModel.getActivityInfo(e.ActivityType.tree);
            n && n.beginRemain <= 0 && n.endRemain > 0 && HttpService.post(e.ServerMsg.TREE_ENTER, "uid=" + playerModel.uid + "&fid=" + playerModel.uid, function(e) {
                if (TreeEnter = e, EventCenter.sendEvent(EventConst.openCloudEffect), e.logs && e.logs.length > 0) for (var i = 0; i < e.logs.length; i++) {
                    var n = {
                        uid: 0,
                        name: "",
                        headImg: "",
                        gender: 1
                    };
                    n.name = e.logs[i].friendName, n.headImg = e.logs[i].friendHeadImg, n.gender = e.logs[i].gender;
                    var o = e.logs[i].item, a = e.logs[i].need, r = e.logs[i].bigItem, s = TreeConst.treeGiftNames[o - 1], l = [];
                    if (l.push({
                        text: "帮你收集了",
                        style: {
                            textColor: 6110764
                        }
                    }), l.push({
                        text: a + "个" + s,
                        style: {
                            textColor: 16203047
                        }
                    }), 0 != r) {
                        var d = e.logs[i].bigNeed, u = TreeConst.treeGiftNames[r - 1];
                        l.push({
                            text: "，\n并额外获得",
                            style: {
                                textColor: 6110764
                            }
                        }), l.push({
                            text: d + "个" + u,
                            style: {
                                textColor: 16203047
                            }
                        });
                    }
                    var h = e.logs[i].key;
                    TreeFunc.helpMsgList.push({
                        playerInfo: n,
                        desc: l,
                        logId: h,
                        isReadToServer: !1
                    });
                }
                t(e);
            }, i);
        }, i.prototype.onViewRegister = function() {
            this.addEventListener(egret.TouchEvent.TOUCH_TAP, this.viewFunc, this);
        }, i.prototype.onViewRemove = function() {
            var e = this;
            e.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.viewFunc, this), e.roleArmature && (e.roleArmature.dispose(), 
            e.roleArmature = null), e.liheArmature && (e.liheArmature.dispose(), e.liheArmature = null), 
            e.seawaveArmature && (e.seawaveArmature.dispose(), e.seawaveArmature = null), e.removeBoatArmature(), 
            e.removeFruitstArmature(), e.timer && (e.timer.removeEventListener(egret.TimerEvent.TIMER, this.timerFunc, this), 
            e.timer.stop(), e.timer = null), egret.Tween.removeTweens(e.paoGroup), egret.Tween.removeTweens(e.friendInfoGroup), 
            egret.Tween.removeTweens(e.treeMain);
        }, i.prototype.openPanel = function() {
            var t = this;
            if (this.clickLock = !1, t.closeBtn.enabled = !0, t.nextTimeGroup.visible = !1, 
            t.paoGroup.visible = !1, t.paoLabel0.text = "能量：20-60", t.paoLabel1.text = "金币：3M-8M", 
            t.paoLabel2.text = "随机道具：？？？", t.friendRedPoint.visible = !0, TreeEnter.hasOwnProperty("rewardMoneyMin")) {
                var i = e.ComFunc.formatNumber(TreeEnter.rewardMoneyMin), n = e.ComFunc.formatNumber(TreeEnter.rewardMoneyMax);
                t.paoLabel1.text = "金币：" + i + "-" + n;
            }
            var o = activityModel.getActivityInfo(e.ActivityType.tree);
            TreeMark.treeGuideStep = o.playerData.tutorial, this.showAllView(), t.activityTimeLabel.text = "活动剩余时间：" + e.ComFunc.formatTimeCNNew3(o.endRemain), 
            t.nextTime.text = "" + e.ComFunc.formatTimeHMSNew(TreeEnter.openRemain), t.timer = new egret.Timer(1e3), 
            t.timer.addEventListener(egret.TimerEvent.TIMER, this.timerFunc, this), t.timer.start(), 
            this.dropGroupDown(), TreeEnter.logs && TreeEnter.logs.length > 0 && TreeFunc.helpMsgList.length > 0 && egret.setTimeout(function() {
                TreeFunc.checkHelpMsg();
            }, this, 200), this.updateGiftState();
        }, i.prototype.updateGiftState = function() {
            var t = activityModel.getActivityInfo(e.ActivityType.occasionalGift, e.ActivityType.partyGift), i = t && t.configData && "partyGift" == t.configData.name && gateModel.iosPay && !t.playerData.gotOccasionalGift && playerModel.island > 0 && t.beginRemain <= 0 && (t.endRemain > 0 || t.awardEndRemain > 0);
            this.giftGroup.visible = i;
        }, i.prototype.showAllView = function() {
            this.initArmature(), this.initProp(), this.initFriendInfoView(), this.initView();
        }, i.prototype.initView = function() {
            var e = this, t = !0;
            _.each(TreeEnter.slots, function(e) {
                0 == e.uid && (t = !1);
            }), 0 == TreeEnter.openRemain && playerModel.uid == TreeEnter.owner ? (e.liheGroup.visible = !0, 
            e.middleGroup.visible = !0, t ? this.creatLiheArmature("ready", 0) : this.creatLiheArmature("normal", 0)) : (e.liheGroup.visible = !1, 
            e.middleGroup.visible = !1), playerModel.uid != TreeEnter.owner && (e.middleGroup.visible = !0), 
            e.nextTimeGroup.visible = TreeEnter.openRemain > 0 && playerModel.uid == TreeEnter.owner, 
            this.setSeawaveVisible(e.nextTimeGroup.visible), e.closeBtn.visible = playerModel.uid == TreeEnter.owner, 
            e.backBtn.visible = playerModel.uid != TreeEnter.owner;
        }, i.prototype.initArmature = function() {
            this.createBoatArmature(0 == TreeMark.treeGuideStep), this.createSeawaveArmature(), 
            this.creatRoleArmature("sleep", -1);
        }, i.prototype.initfruits = function(t) {
            var i = this;
            if (void 0 === t && (t = !1), !(TreeEnter.openRemain > 0)) {
                var n = 0 == TreeMark.treeGuideStep || t;
                if (this.middleGroup.visible = !0, this.fruits.length > 0) return this.updateFruitState(), 
                void this.initFruitHead(!1);
                for (var o = 0; o < TreeEnter.slots.length; o++) {
                    var a = new e.ArmaturePlayer("fruit_box"), r = new eui.Group();
                    r.width = r.height = 150, r.addChild(a), this.fruitGroup.addChild(r), r.touchThrough = !0, 
                    r.x = TreeFruitPos[o].x - 75, r.y = TreeFruitPos[o].y - 75, r.name = "fruit" + o, 
                    this.groups.push(r), r.addChild(a), a.x = a.y = 75;
                    var s = new eui.Image();
                    s.source = "trader_icon_" + (TreeEnter.slots[o].item - 1) + "_1", s.anchorOffsetX = 34.5, 
                    s.anchorOffsetY = 30.5, a.setSlotArmature("item", s);
                    var l = new eui.Image();
                    l.source = "trader_icon_" + (TreeEnter.slots[o].item - 1) + "_0", l.anchorOffsetX = 39.5, 
                    l.anchorOffsetY = 31, a.setSlotArmature("item2_slot", l), a.touchEnabled = !0, a.touchChildren = !0, 
                    r.addEventListener(egret.TouchEvent.TOUCH_TAP, this.fruitFunc, this), this.fruits.push(a);
                    var d = "enter1";
                    n ? (d = TreeEnter.slots[o].uid > 0 ? "enter3" : TreeEnter.bags[TreeEnter.slots[o].item - 1] >= TreeEnter.slots[o].need ? "enter2" : "enter1", 
                    a.play(d, 1, function() {})) : TreeEnter.slots[o].uid > 0 ? a.play("fill", 1) : TreeEnter.bags[TreeEnter.slots[o].item - 1] >= TreeEnter.slots[o].need ? a.play("ready", -1) : (d = "ready", 
                    a.play(d, 1));
                }
                if (n) var u = egret.setTimeout(function() {
                    egret.clearTimeout(u);
                    var t = hortor.ScreenManager.isOpen(e.ScreenType.TREE_SCREEN);
                    t && i && i.initFruitHead && (i.initFruitHead(n), 0 == TreeMark.treeGuideStep && (e.TutorialManager.instance.startTutorial("tree", TreeMark.treeGuideStep), 
                    uiModel.onShow(e.UINameType.fruit1, i.groups[1])));
                }, this, 1500); else this.initFruitHead(n);
            }
        }, i.prototype.clearFruits = function() {
            if (this.fruits.length > 0) for (var e = 0; e < this.fruits.length; e++) this.fruits[e] && this.fruits[e].parent && (this.fruits[e].parent.removeChild(this.fruits[e]), 
            this.fruits[e].dispose());
            this.fruits = [], this.fruitGroup.removeChildren();
        }, i.prototype.removeFruitstArmature = function() {
            if (this.fruits.length > 0) for (var e = 0; e < this.fruits.length; ++e) this.fruits[e].dispose(), 
            util.remove(this.fruits[e]);
            this.fruits = [], this.fruitGroup.removeChildren();
        }, i.prototype.updateFruitState = function() {
            for (var e = 0; e < TreeEnter.slots.length; e++) this.fruits[e] && (TreeEnter.slots[e].uid > 0 ? this.fruits[e].play("fill", 1) : TreeEnter.bags[TreeEnter.slots[e].item - 1] >= TreeEnter.slots[e].need ? this.fruits[e].play("ready", -1) : this.fruits[e].stop());
        }, i.prototype.hideFruitHead = function() {
            for (var e = 0; 7 > e; e++) this["headNode" + e].visible = !1, this["headNode" + e].alpha = 0, 
            this["fruitNumNode" + e].visible = !1, this["fruitNumNode" + e].alpha = 0;
        }, i.prototype.initFruitHead = function(e) {
            this.hideFruitHead();
            for (var t = 0; t < TreeEnter.slots.length; t++) this && this["fruitNumNode" + t] && (this["fruitNumNode" + t].visible = !0, 
            e ? egret.Tween.get(this["fruitNumNode" + t]).wait(100 * (t + 1)).to({
                alpha: 1
            }, 50) : this["fruitNumNode" + t].alpha = 1), TreeEnter.slots[t].uid > 0 && TreeEnter.slots[t].uid != TreeEnter.owner && this && this["headNode" + t] && (this["headNode" + t].visible = !0, 
            e ? egret.Tween.get(this["headNode" + t]).wait(100 * (t + 1)).to({
                alpha: 1
            }, 50) : this["headNode" + t].alpha = 1);
        }, i.prototype.fruitFunc = function(e) {
            if (!(TreeEnter.openRemain < 0)) {
                var t = e.currentTarget.name, i = t.substr(t.length - 1, 1);
                -1 != i && this.gitfNodeFunc(i);
            }
        }, i.prototype.createBoatArmature = function(t) {
            var i = this;
            void 0 === t && (t = !1), TreeEnter.openRemain > 0 || (this.boatArmature || (this.boatArmature = new e.ArmaturePlayer("fruit_boat"), 
            this.boatGroup.addChild(this.boatArmature)), playerModel.uid == TreeEnter.owner && t ? (this.clickLock = !0, 
            this.boatArmature.play("enter", 1, function() {
                i.clickLock = !1, i.boatArmature.play("wait", -1), i.initfruits(!0);
            })) : (this.boatArmature.play("wait", -1), this.initfruits()));
        }, i.prototype.removeBoatArmature = function() {
            this.boatArmature && (util.remove(this.boatArmature), this.boatArmature.dispose(), 
            this.boatArmature = null);
        }, i.prototype.createSeawaveArmature = function() {
            this.seawaveArmature || (this.seawaveArmature = new e.ArmaturePlayer("fruit_seawave"), 
            this.seawaveGroup.addChild(this.seawaveArmature), this.seawaveArmature.stop());
        }, i.prototype.setSeawaveVisible = function(e) {
            this.seawaveArmature && (e ? this.seawaveArmature.play("fruit_seawave", -1) : this.seawaveArmature.stop());
        }, i.prototype.initProp = function() {
            for (var t = this, i = (0 == TreeEnter.openRemain, 0); 4 > i; i++) t["propNum" + i].text = "x" + TreeEnter.bags[i], 
            t["propIcon" + i].source = e.ItemManager.getItemInfo("treeGift" + i).icon;
            for (var n = function(t) {
                if (o["headNode" + t].x = TreeFruitPos[t].x - 50, o["headNode" + t].y = TreeFruitPos[t].y - 130, 
                o["fruitNumNode" + t].x = o["headNode" + t].x - 3, o["fruitNumNode" + t].y = o["headNode" + t].y - 10, 
                o["fruitNum" + t].text = TreeEnter.bags[TreeEnter.slots[t].item - 1] + "/" + TreeEnter.slots[t].need, 
                0 != TreeEnter.slots[t].uid && (o["fruitNum" + t].text = "已装填", TreeEnter.slots[t].uid != TreeEnter.owner)) {
                    var i = _.find(TreeEnter.players, function(e) {
                        return e.uid == TreeEnter.slots[t].uid;
                    });
                    i && util.setRemoteAvatar(o["headImg" + t], e.ComFunc.headImg(i.headImg));
                }
                if (TreeEnter.slots[t].uid > 0) o["fruitNumBg" + t].source = "trader_img_cd1"; else {
                    var n = TreeEnter.bags[TreeEnter.slots[t].item - 1] >= TreeEnter.slots[t].need;
                    o["fruitNumBg" + t].source = n ? "trader_img_ld1" : "trader_img_hd1";
                }
            }, o = this, a = 0; a < TreeEnter.slots.length; a++) n(a);
        }, i.prototype.updateProps = function() {
            for (var e = this, t = 0; 4 > t; t++) e["propNum" + t].text = "" + TreeEnter.bags[t];
            this.initProp();
        }, i.prototype.initFriendInfoView = function() {
            var t = this, i = _.find(TreeEnter.players, function(e) {
                return e.uid == TreeEnter.owner;
            });
            if (i) {
                util.setRemoteAvatar(t.headImg, e.ComFunc.headImg(i.headImg)), t.userName.text = util.strSub(i.name, 4);
                var n = 1 == i.gender ? Const.manNameColor : Const.womanNameColor;
                t.userName.textColor = n, t.headBgImage.source = 1 == i.gender ? "common_json.common_img_portrait1" : "common_json.common_img_portrait0";
            }
        }, i.prototype.fitSpecialMobile = function() {
            this.activityTimeGroup.y += 30, this.newsGroup.y += Const.SpecialMobileOffY;
        }, i.prototype.viewFunc = function(e) {
            if (!this.clickLock) {
                var t = e.target, i = t.name;
                t.name && ("closeBtn" == i ? this.closeBtnFunc() : "aidBtn" == i ? this.aidBtnFunc() : "yx_lihe" == i ? this.liheFunc() : "newsBtn" == i ? this.newsBtnFunc() : "backBtn" == i ? this.backBtnFunc() : "helpBtn" == i ? this.helpBtnFunc() : "role" == i ? this.roleFunc() : "shareBtn" == i ? this.seekHelpFunc() : ("giftGroup" == i || "giftImg" == i) && this.giftGroupFunc());
            }
        }, i.prototype.gitfNodeFunc = function(t) {
            soundModel.buttonOpen(), e.PlatformManager.LogEvent("tree_clickFruit_" + t);
            var i = TreeEnter.slots;
            if (0 == i[t].uid) {
                if (TreeEnter.owner != playerModel.uid) {
                    var n = _.find(TreeEnter.slots, function(e) {
                        return e.uid == playerModel.uid;
                    });
                    if (n) return void hortor.TipManager.alert(TreeText.tips0);
                }
                hortor.WindowManager.showWindow(e.WindowType.WINDOW_TREEDRESS, i[t]);
            }
        }, i.prototype.creatRoleArmature = function(t, i) {
            void 0 === i && (i = 0);
            var n = this;
            n.roleArmature ? n.roleArmature.play(t, i) : (n.roleArmature = new e.ArmaturePlayer("fruit_role"), 
            n.roleGroup.addChild(n.roleArmature), n.roleArmature.play(t, i), n.roleArmature.touchChildren = !1, 
            n.roleArmature.touchEnabled = !0, n.roleArmature.name = "role", n.roleArmature.x = 140, 
            n.roleArmature.y = 100);
        }, i.prototype.aidBtnFunc = function() {
            this.friendRedPoint.visible = !1, hortor.WindowManager.showWindow(e.WindowType.WINDOW_TREEAIDFRIEND), 
            e.PlatformManager.LogEvent("tree_clickAidBtn");
        }, i.prototype.roleFunc = function() {
            var e = this, t = this;
            if (!t.talkGroup.visible && !t.paoGroup.visible) {
                util.setScale(t.talkGroup, .1), t.talkLabel.text = "今天天气真适合收水果!", t.talkGroup.visible = !0, 
                soundModel.buttonOpen();
                var i = egret.Tween.get(t.talkGroup);
                i.to({
                    scaleX: 1,
                    scaleY: 1
                }, 200, egret.Ease.quadOut).wait(2e3).call(function() {
                    egret.Tween.removeTweens(i), t.talkGroup.visible = !1;
                }), this.roleArmature.play("talk", 1, function() {
                    e.creatRoleArmature("sleep", -1);
                });
            }
        }, i.prototype.liheFunc = function() {
            if (soundModel.buttonOpen(), !this.talkGroup.visible) {
                var t = this, i = this, n = !0;
                _.each(TreeEnter.slots, function(e) {
                    0 == e.uid && (n = !1);
                }), n ? (i.liheArmature.touchEnabled = !1, HttpService.post(e.ServerMsg.TREE_REWARD, "uid=" + playerModel.uid, function(n) {
                    TreeMark.getTreeOverReward = !0, TreeEnter.slots = n.slots, TreeEnter.openRemain = n.openRemain, 
                    i.liheArmature && (i.liheArmature.touchEnabled = !1), playerModel.update(n), t.middleGroup.visible = !0, 
                    t.liheArmature.play("open", 1, function() {
                        hortor.WindowManager.showWindow(e.WindowType.WINDOW_REWARD, n.reward, null, null, function() {
                            t.boatArmature.play("go", 1, function() {
                                t.nextTimeGroup.visible = !0, t.liheGroup.visible = !1;
                            }, t), egret.Tween.get(t.middleGroup).to({
                                x: 1154
                            }, 2500).call(function() {
                                t && t.middleGroup && (t.middleGroup.x = (hortor.StageManager.stageWidth - t.middleGroup.width) / 2, 
                                t.middleGroup.visible = !1);
                            });
                        });
                    });
                })) : i.paoGroup.visible || (util.setScale(i.paoGroup, .1), i.paoGroup.alpha = .3, 
                i.paoGroup.visible = !0, egret.Tween.get(i.paoGroup).to({
                    alpha: 1,
                    scaleX: 1,
                    scaleY: 1
                }, 200, egret.Ease.quadOut).wait(2e3).call(function() {
                    i.paoGroup.visible = !1, egret.Tween.removeTweens(i.paoGroup);
                }));
            }
        }, i.prototype.newsBtnFunc = function() {
            hortor.WindowManager.showWindow(e.WindowType.WINDOW_TREENEWS);
        }, i.prototype.helpBtnFunc = function() {
            var t = HelpTextLabel.getTreeTextLabel();
            e.ComFunc.openHelpPanel(t);
        }, i.prototype.seekHelpFunc = function() {
            e.PlatformManager.LogEvent("tree_clickSeekHelpBtn"), hortor.WindowManager.showWindow(e.WindowType.WINDOW_TREESEEKHELPSHARE);
        }, i.prototype.giftGroupFunc = function() {
            hortor.WindowManager.currentWindow = e.WindowType.WINDOW_PIRATEGIFT;
        }, i.prototype.timerFunc = function() {
            var t = this, i = activityModel.getActivityInfo(e.ActivityType.tree);
            t.activityTimeLabel.text = "活动剩余时间：" + e.ComFunc.formatTimeCNNew3(i.endRemain), 
            TreeEnter.openRemain > 0 && (TreeEnter.openRemain--, t.nextTime.text = "" + e.ComFunc.formatTimeHMSNew(TreeEnter.openRemain), 
            0 == TreeEnter.openRemain && (t.nextTimeGroup.visible = !1, t.liheGroup.visible = !0, 
            t.liheArmature ? t.liheArmature.visible = !0 : t.creatLiheArmature("normal", 0), 
            this.setSeawaveVisible(t.nextTimeGroup.visible), this.removeFruitstArmature(), this.hideFruitHead(), 
            this.createBoatArmature(!0)));
        }, i.prototype.dropGroupDown = function() {
            var e = this;
            e.friendInfoGroup.visible = TreeEnter.owner != playerModel.uid;
            var t = e.friendInfoGroup.top;
            e.friendInfoGroup.top = -200, egret.Tween.get(e.friendInfoGroup).wait(300).to({
                top: t
            }, 1e3, egret.Ease.bounceOut);
        }, i.prototype.backBtnFunc = function() {
            this.middleGroup.visible = !1, this.removeBoatArmature(), TreeFunc.enterTree(playerModel.uid);
        }, i.prototype.closeBtnFunc = function() {
            TreeFunc.helpMsgList = [];
            hortor.ScreenManager.back();
        }, i.prototype.guideFunc = function() {
            var e = this;
            this && (e.paoGroup.visible = !1, e.closeBtn.enabled = !0, e.aidBtn.enabled = !0);
        }, i.prototype.creatLiheArmature = function(t, i) {
            void 0 === i && (i = 0);
            var n = this;
            n.liheArmature ? n.liheArmature.play(t, i) : (n.liheArmature = new e.ArmaturePlayer("fruit_chest"), 
            n.liheGroup.addChild(n.liheArmature), n.liheArmature.play(t, i), n.liheArmature.touchChildren = !1, 
            n.liheArmature.touchEnabled = !0, n.liheArmature.name = "yx_lihe"), n.liheArmature.visible = !0, 
            n.liheArmature.touchEnabled = !0;
        }, i.prototype.wsDressTree = function(t) {
            var i = this;
            TreeEnter.owner == playerModel.uid && HttpService.post(e.ServerMsg.TREE_ENTER, "uid=" + playerModel.uid + "&fid=" + TreeEnter.owner, function(e) {
                TreeEnter = e, i.showAllView();
            });
        }, i.prototype.playDressEffect = function(t) {
            if (t) {
                console.log("tree playDressEffect,=", t);
                var i = t.item - 1, n = t.slot - 1;
                if (this["propNum" + i].text = "x" + TreeEnter.bags[i], this["fruitNum" + n].text = "已装填", 
                this["fruitNumBg" + n].source = "trader_img_cd1", TreeEnter.owner != playerModel.uid && 0 != TreeEnter.slots[n].uid) {
                    var o = _.find(TreeEnter.players, function(e) {
                        return e.uid == TreeEnter.slots[n].uid;
                    });
                    o && util.setRemoteAvatar(this["headImg" + n], e.ComFunc.headImg(o.headImg));
                }
                var a = this.fruits[n];
                a && a.play("fill", 1);
                var r = !0;
                _.each(TreeEnter.slots, function(e) {
                    0 == e.uid && (r = !1);
                }), r && this.creatLiheArmature("ready", 0);
            }
        }, i;
    }(e.ScreenBase);
    e.TreeScreen = t, __reflect(t.prototype, "game.TreeScreen");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.selectedIndex = -1, e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.onViewRegister();
        }, i.prototype.onOpen = function() {}, i.prototype.onClose = function() {
            egret.Tween.removeTweens(this.tipGroup), egret.Tween.removeTweens(this.helpImg);
        }, i.prototype.onData = function() {
            this.openPanel();
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.onViewRegister = function() {
            this.addEventListener(egret.TouchEvent.TOUCH_TAP, this.viewFunc, this);
        }, i.prototype.onViewRemove = function() {
            this.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.viewFunc, this);
        }, i.prototype.openPanel = function() {
            var t = this;
            t.tipGroup.visible = !1, t.selectedIndex = -1, this.updateTimes();
            for (var i = 0; 4 > i; i++) this["item" + i].fruitImg.source = e.ItemManager.getItemInfo("treeGift" + i).icon, 
            this["item" + i].numLabel.text = "x2";
            var n = "好友点击链接后自己将获得物品；新玩家点击可以获得", o = "3倍", a = "物品；每天12点重置分享次数";
            this.tipLabel.textFlow = [], this.tipLabel.textFlow.push({
                text: n,
                style: {
                    textColor: 182765
                }
            }), this.tipLabel.textFlow.push({
                text: o,
                style: {
                    textColor: 16539904
                }
            }), this.tipLabel.textFlow.push({
                text: a,
                style: {
                    textColor: 182765
                }
            }), this.initFruits();
        }, i.prototype.initFruits = function() {
            for (var e = 0; 4 > e; e++) e != this.selectedIndex ? this["item" + e].selectImg.visible = !1 : this["item" + e].selectImg.visible = !0;
            this.shareBtn.visible = this.timesLabel.visible = this.selectedIndex >= 0;
        }, i.prototype.updateTimes = function() {
            var e = this, t = 3 - TreeEnter.helpCount;
            t = 0 > t ? 0 : t, e.timesLabel.text = "（" + TreeEnter.helpCount + "/3）", this.shareBtn.enabled = t > 0;
        }, i.prototype.viewFunc = function(e) {
            var t = e.target, i = t.name;
            "closeBtn" == i || ("shareBtn" == i ? this.shareBtnFunc() : "helpImg" == i ? this.helpClickFunc() : "item0" == i ? this.itemClickFunc(0) : "item1" == i ? this.itemClickFunc(1) : "item2" == i ? this.itemClickFunc(2) : "item3" == i && this.itemClickFunc(3));
        }, i.prototype.itemClickFunc = function(e) {
            this.selectedIndex = e, this.initFruits(), soundModel.buttonOpen();
        }, i.prototype.helpClickFunc = function() {
            var t = this;
            t.tipGroup.visible || (t.tipGroup.scaleX = t.tipGroup.scaleY = 0, t.tipGroup.visible = !0, 
            egret.Tween.get(t.tipGroup).to({
                alpha: 1,
                scaleX: 1,
                scaleY: 1
            }, 300, egret.Ease.quadOut).wait(2e3).call(function() {
                t.tipGroup.visible = !1;
            }), e.PlatformManager.LogEvent("tree_clickBasketBtn"), soundModel.buttonOpen());
        }, i.prototype.shareBtnFunc = function() {
            if (-1 == this.selectedIndex) return void hortor.TipManager.alert("请选择一种水果");
            var e = this.selectedIndex + 1;
            TreeFunc.share(e);
        }, i;
    }(e.WindowBase);
    e.TreeSeekHelpShareWindow = t, __reflect(t.prototype, "game.TreeSeekHelpShareWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(e) {
        function t() {
            return null !== e && e.apply(this, arguments) || this;
        }
        return __extends(t, e), t.prototype.onInit = function() {}, t.prototype.onOpen = function() {}, 
        t.prototype.onData = function() {}, t.prototype.prepare = function(e, t) {
            e(null);
        }, t.prototype.openPanel = function() {
            var e = this;
            e.touchEnabled = !1, util.setScale(e, 3), e.useConfs = this.getConf(), this.setAnchor(), 
            this.createMask(), this.createFinger(), this.openAction();
        }, t.prototype.setAnchor = function() {
            var e = this, t = e.useConfs;
            e.anchorOffsetX = t.x, e.anchorOffsetY = t.y, e.x = t.x, e.y = t.y;
        }, t.prototype.createFinger = function() {
            var e = this;
            e.useConfs;
        }, t.prototype.createMask = function() {
            var e = "guide_mask1_png", t = this, i = t.useConfs, n = i.x, o = i.y, a = i.rectW, r = i.rectH;
            if (o - r > 0) {
                var s = util.createBitmapByName(e);
                t.addChild(s), s.x = s.y = 0, s.width = hortor.StageManager.stageWidth, s.height = o - r, 
                s.touchEnabled = !0;
            }
            if (o - r > 0 && n - a > 0) {
                var l = util.createBitmapByName(e);
                t.addChildAt(l, 0), l.x = 0, l.y = o - r, l.width = n - a, l.height = 2 * r, l.touchEnabled = !0;
            }
            if (o - r > 0 && hortor.StageManager.stageWidth - n - a > 0) {
                var d = util.createBitmapByName(e);
                t.addChildAt(d, 0), d.x = n + a, d.y = o - r, d.width = hortor.StageManager.stageWidth - n - a, 
                d.height = 2 * r, d.touchEnabled = !0;
            }
            if (hortor.StageManager.stageHeight - (o + r) > 0) {
                var u = util.createBitmapByName(e);
                t.addChildAt(u, 0), u.x = 0, u.y = o + r, u.width = hortor.StageManager.stageWidth, 
                u.height = hortor.StageManager.stageHeight - (o + r), u.touchEnabled = !0;
            }
            t.maskImg = util.createBitmapByName("guide_mask0_png"), t.addChild(t.maskImg), t.maskImg.width = 2 * a, 
            t.maskImg.height = 2 * r, t.maskImg.x = n - a, t.maskImg.y = o - r, t.maskImg.touchEnabled = !0;
        }, t.prototype.openAction = function() {
            var e = this, t = egret.Tween.get(e);
            t.to({
                scaleX: 1,
                scaleY: 1
            }, 500, egret.Ease.quadOut).call(function() {
                e.maskImg && (e.maskImg.touchEnabled = !1), e.fGroup && (e.fGroup.visible = !0);
            });
        }, t.prototype.getConf = function() {
            var e = {
                x: 0,
                y: 0,
                rectW: 0,
                rectH: 0
            }, t = this, i = t.conf.targetNode;
            return e.x = i ? i.localToGlobal(0, 0).x + .5 * i.width * i.scaleX : t.conf.x, e.y = i ? i.localToGlobal(0, 0).y + .5 * i.height * i.scaleY : t.conf.y, 
            e.rectW = i ? .5 * i.width : t.conf.rectW, e.rectH = i ? .5 * i.height : t.conf.rectH, 
            e;
        }, t.prototype.closeBtnFunc = function() {
            this.hide();
        }, t;
    }(e.WindowBase);
    e.GuideCircleWindow = t, __reflect(t.prototype, "game.GuideCircleWindow");
    var i = function() {
        function e() {}
        return e;
    }();
    e.guideConfs = i, __reflect(i.prototype, "game.guideConfs");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.lightEffect = new e.ArmaturePlayer("jiangli"), this.rewardGroup.addChildAt(this.lightEffect, 0), 
            this.lightEffect.x = .5 * this.rewardGroup.width, this.lightEffect.y = .5 * this.rewardGroup.height, 
            this.lightEffect.scaleX = this.lightEffect.scaleY = 1.15, this.jiesuoEffect = new e.ArmaturePlayer("jiesuo"), 
            this.effectGroup.addChildAt(this.jiesuoEffect, 0), this.jiesuoEffect.x = .5 * this.effectGroup.width, 
            this.jiesuoEffect.y = .5 * this.effectGroup.height, this.confirmBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.okBtnFunc, this);
        }, i.prototype.onData = function() {
            this.playEffect();
        }, i.prototype.playEffect = function() {
            var e = this;
            this.rewardGroup.addChild(this.floatIcon), this.floatIcon.source = this.data.icon, 
            this.descIcon.source = this.data.desc, this.floatIcon.x = 268, this.floatIcon.y = 220, 
            this.jiesuoEffect.setSlotSkin("name", this.data.tip, 204, 29), this.floatIcon.scaleX = this.floatIcon.scaleY = 0, 
            this.confirmBtn.scaleX = this.confirmBtn.scaleY = 0, this.descIcon.alpha = this.descIcon.alpha = 0, 
            this.jiesuoEffect.play("jiesuo", 1), egret.Tween.get(this.floatIcon).wait(2e3).to({
                scaleX: 1,
                scaleY: 1
            }, 200, egret.Ease.backOut).call(function() {
                e.lightEffect.visible = !0, e.lightEffect.play("jinru", 1, function() {
                    e.lightEffect.play("xunhuan", 0);
                }), egret.Tween.get(e.confirmBtn).to({
                    scaleX: 1,
                    scaleY: 1
                }, 200, egret.Ease.backOut), egret.Tween.get(e.descIcon).to({
                    alpha: 1
                }, 200, egret.Ease.backOut);
            });
        }, i.prototype.okBtnFunc = function() {
            var t = this;
            this.hide(), this.lightEffect.stop(), this.lightEffect.visible = !1, hortor.Log.warn(this, "lockStage"), 
            e.TutorialManager.instance.lockStage(), e.OpenFuncManager.saveGuide(this.data.id, function() {
                t.data.onOpen(), egret.setTimeout(t.pointTarget, t, 500);
            }, function() {
                hortor.Log.warn(t, "unlockStage"), e.TutorialManager.instance.unlockStage();
            });
        }, i.prototype.pointTarget = function() {
            var t = this;
            hortor.Log.warn(this, "unlockStage"), e.TutorialManager.instance.unlockStage();
            var i = this.data.target;
            if (i && (i = i instanceof egret.DisplayObject ? i : uiModel.getUI(i)), this.data.id) {
                var n = gateModel.getGateByLockType(this.data.id);
                if (i) {
                    var o = !0;
                    n && (n.show ? i.guide = n.id : (hortor.Log.error(this, "error not show:" + this.data.id), 
                    o = !1, this.data.onComplete(this.data.id))), o && (hortor.Log.warn(this, "pointTarget:" + this.data.target), 
                    e.TutorialPointer.instance.pointTarget(i, function() {
                        t.data.onComplete(t.data.id);
                    }, 0, this.data.direction));
                } else this.data.onComplete(this.data.id);
            }
        }, i;
    }(e.WindowBase);
    e.GuideOpenWindow = t, __reflect(t.prototype, "game.GuideOpenWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return t.call(this) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.getBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onOk, this);
        }, i.prototype.onData = function() {
            if (playerModel.isAuthed) this.btnLabel.text = "领取", this.tipsLabel.text = "赶快去建岛,和你的好友们互相伤害吧", 
            e.TutorialManager.instance.completeStep("newbie", 35, 14); else if (this.btnLabel.text = "登录并领取", 
            this.tipsLabel.text = "赶快去建岛,和你的好友们互相伤害吧", gateModel.isWxgame) {
                var t = e.PlatformManager.compareVersion(e.WxSystemInfo.SDKVersion, "2.0.1");
                console.log("授权检查:" + e.WxSystemInfo.SDKVersion + "," + t + ",wxShowUserBtn" + e.GameConfig.wxShowUserBtn), 
                e.GameConfig.wxShowUserBtn && t > -1 && (console.log("开始授权"), this.getGroup.visible = !1, 
                platform.user.login(function(t, i) {
                    console.log("强制授权结束,重新登录"), hortor.NotificationManager.dispatch(e.NotificationType.RELOGIN, !1);
                }, this.showUserInfoBtn.bind(this)));
            }
        }, i.prototype.showUserInfoBtn = function() {
            var t = Math.ceil(204 / hortor.StageManager.stageWidth * e.WxSystemInfo.windowWidth), i = Math.ceil(78 / hortor.StageManager.stageHeight * e.WxSystemInfo.windowHeight), n = .5 * (e.WxSystemInfo.windowWidth - t), o = (720 + .5 * hortor.StageManager.stageOffHeight) / hortor.StageManager.stageHeight * e.WxSystemInfo.windowHeight, a = e.ResourcePath.getWxAuthImage(), r = {
                type: "image",
                text: "登录并领取",
                image: a,
                style: {
                    left: n,
                    top: o,
                    width: t,
                    height: i
                }
            }, s = platform.common.createUserInfoButton(r);
            console.log("获取用户授权按钮:" + s), s.onTap(function(e) {
                console.log("授权按钮onTap", e), e && e.encryptedData && s.hide();
            }), s.show();
        }, i.prototype.onOk = function() {
            var t = this;
            playerModel.isAuthed ? (soundModel.buttonClose(), hortor.WindowManager.hideWindow(e.WindowType.WINDOW_GUIDE_OVER, function() {
                EventCenter.sendEvent(EventConst.GuideOver), egret.setTimeout(function() {
                    e.OpenFuncManager.checkAll();
                }, t, 4e3);
            })) : (soundModel.buttonOpen(), gateModel.isWxgame ? hortor.NotificationManager.dispatch(e.NotificationType.RELOGIN, !1) : HORTOR_AGENT.auth());
        }, i;
    }(e.WindowBase);
    e.GuideOverWindow = t, __reflect(t.prototype, "game.GuideOverWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function() {
        function e(e, t) {
            this.tutorialID = e, this.steps = [];
            for (var n = 0; n < t.steps.length; n++) {
                var o = t.steps[n], a = new i(o);
                this.steps.push(a), a.serverid > 0 && !this.startServerId && (this.startServerId = a.serverid);
            }
        }
        return e;
    }();
    e.TutorialInfoData = t, __reflect(t.prototype, "game.TutorialInfoData");
    var i = function() {
        function e(e) {
            this.id = parseInt(e.id), this.autoEnd = "0" != e.autoEnd, this.serverid = parseInt(e.serverid), 
            this.modal = parseFloat(e.modal), this.modal > 0 && (this.modal = .75), this.waitTime = parseInt(e.waitTime), 
            this.condition = e.condition, this.sound = e.sound, this.type = parseInt(e.type), 
            this.parameters = e.parameters.split("|");
        }
        return e;
    }();
    e.StepInfoData = i, __reflect(i.prototype, "game.StepInfoData");
    var n = function() {
        function e(e, t, i, n) {
            void 0 === t && (t = .7), void 0 === i && (i = 1), void 0 === n && (n = "begin"), 
            this.role = n, this.content = e, this.position = i, this.modal = t;
        }
        return e;
    }();
    e.TalkInfoData = n, __reflect(n.prototype, "game.TalkInfoData");
}(game || (game = {}));

var game;

!function(e) {
    var t = function() {
        function t() {
            this.currentSaveId = -1, this.conditionMap = {}, this.modalContainer = hortor.StageManager.getLayer(hortor.Layer.TOP);
        }
        return Object.defineProperty(t, "instance", {
            get: function() {
                return hortor.singletonFactory(t);
            },
            enumerable: !0,
            configurable: !0
        }), t.prototype.reset = function() {
            this.hideTutorial(), this.currentTutorial = null, this.currentTutorialID = null, 
            this.onComplete = null, this.currentSaveId = -1, this.currentStep && (this.currentStep.dispose(), 
            this.currentStep = null);
        }, t.prototype.setCondition = function(e) {
            this.conditionMap[e] = !0, hortor.NotificationManager.dispatch(t.ON_CHANGE, e);
        }, t.prototype.getCondition = function(e) {
            return null != this.conditionMap[e];
        }, Object.defineProperty(t.prototype, "newbieTutorialing", {
            get: function() {
                return playerModel.tutorial < 15;
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(t.prototype, "tutorialing", {
            get: function() {
                return this.newbieTutorialing || null != this.currentTutorialID && "octopus" != this.currentTutorialID && "newbie" != this.currentTutorialID;
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(t.prototype, "newbieStep", {
            get: function() {
                return this.newbieTutorialing ? this.currentStep.stepID : playerModel.tutorial;
            },
            enumerable: !0,
            configurable: !0
        }), t.prototype.startTutorial = function(t, i, n) {
            var o = this;
            this.onComplete = n, wheelModel.isRotate = !0, hortor.Log.warn(this, "startTutorial tutorialID:" + t + ",serverId:" + i), 
            this.currentTutorial && this.currentTutorial.tutorialID == t || (this.currentTutorialID = t, 
            hortor.ResourceManager.loadText(e.ResourcePath.getTutorialConfig(t), function(n) {
                if (wheelModel.isRotate = !1, o.currentTutorial = new e.TutorialInfoData(t, JSON.parse(n)), 
                i > o.currentTutorial.startServerId) {
                    for (var a = !1, r = 0, s = 0; s < o.currentTutorial.steps.length; s++) {
                        var l = o.currentTutorial.steps[s];
                        if (r = Math.max(r, l.serverid), l.serverid == i) {
                            a = !0, o.currentTutorial.steps.splice(0, s);
                            break;
                        }
                    }
                    if (!a && (hortor.Log.warn(o, "tutorial data error tutorialID:" + t + ",serverId" + i), 
                    i >= r)) return hortor.Log.warn(o, "tutorial has end tutorialID:" + t), void o.reset();
                }
                o.executeTutorial();
            }, this));
        }, t.prototype.completeStep = function(t, i, n) {
            var o = this;
            void 0 === i && (i = 0), void 0 === n && (n = 0), null != this.currentTutorial && this.currentTutorial.tutorialID == t && this.currentStep.stepID == i && (hortor.Log.warn(this, "提交步骤 tutorialID:" + this.currentTutorial.tutorialID + ",stepID:" + this.currentStep.stepID + ",serverId:" + n), 
            n > 0 && ("newbie" == t && 13 != n || "pet" == t) ? (this.lockStage(), -1 == this.currentSaveId && (this.currentSaveId = n, 
            HttpService.post(e.ServerMsg.TUTORIAL, "uid=" + playerModel.uid + "&step=" + n, function(t) {
                o.currentSaveId = -1, playerModel.update(t), e.PlatformManager.openEvent("tutorial_" + n), 
                o.runNextStep();
            }))) : this.runNextStep());
        }, t.prototype.hideTutorial = function() {
            null != e.TalkStep.talker && e.TalkStep.talker.hide(), e.TutorialPointer.instance.hide();
        }, t.prototype.lockStage = function() {
            null == this.stageModal && (this.stageModal = hortor.StageManager.createStageModalBlocker(null, null, 0, 0)), 
            this.modalContainer.addChild(this.stageModal);
        }, t.prototype.unlockStage = function() {
            this.stageModal && this.stageModal.removeFromParent();
        }, t.prototype.executeTutorial = function() {
            this.hideTutorial(), this.currentTutorial && this.currentTutorial.steps.length && (this.runNextStep(), 
            this.tutorialing && hortor.WindowManager.hideAllWindow());
        }, t.prototype.runNextStep = function() {
            this.unlockStage(), null != this.currentTutorial && (this.currentTutorial.steps.length ? (this.currentStep = e.TutorialStep.create(this.currentTutorial.steps.shift()), 
            this.currentStep.tutorialID = this.currentTutorial.tutorialID, hortor.Log.log(this, "引导下一步:" + this.currentStep.stepID), 
            this.currentStep.execute()) : (hortor.Log.log(this, "任务完成:" + this.currentTutorial.tutorialID), 
            null != this.onComplete && this.onComplete(), this.reset(), e.OpenFuncManager.checkAll()), 
            this.newbieTutorialing && (0 == Robot.robot1.crowns && HttpService.get(e.ServerMsg.ROBOT, "uid=" + playerModel.uid, function(e) {
                Robot.robot1 = e;
            }), 0 == Robot.robot0.crowns && 5 == this.currentStep.stepInfo.serverid && HttpService.get(e.ServerMsg.ROBOT, "uid=" + playerModel.uid, function(e) {
                Robot.robot0 = e;
            })));
        }, t.ON_CHANGE = "onConditionChanged", t;
    }();
    e.TutorialManager = t, __reflect(t.prototype, "game.TutorialManager");
}(game || (game = {}));

var game;

!function(e) {
    var t = function() {
        function t() {
            this.direction = 0, this.centerPosition = !0, this.maxCount = 5, this.container = hortor.StageManager.getLayer(hortor.Layer.TOP), 
            this.modalContainer = new egret.DisplayObjectContainer();
            for (var t = 0; 4 > t; t++) {
                var n = new eui.Rect(100, 100, 0);
                this.modalContainer.addChildAt(n, t);
            }
            this.tutorialTip = new i(), hortor.NotificationManager.add(e.UIModel.ON_CHANGE, this.onUIRefreshd, this), 
            hortor.StageManager.addResizeListener(this.onResize, this);
        }
        return Object.defineProperty(t, "instance", {
            get: function() {
                return hortor.singletonFactory(t);
            },
            enumerable: !0,
            configurable: !0
        }), t.prototype.pointTargetByName = function(t, i, n, o, a, r) {
            void 0 === n && (n = 0), void 0 === o && (o = 1), void 0 === a && (a = !0), void 0 === r && (r = !0), 
            this.targetName = t, this.showFinger = r, this.direction = o, this.centerPosition = a, 
            this.modal = n, this.hasModal = n >= 0, this.clickCallBack = i, this.hasModal && (hortor.Log.warn(this, "lockStage"), 
            e.TutorialManager.instance.lockStage()), hortor.Log.log("pointTargetByName:" + this.targetName), 
            this.tryPointTargetByName();
        }, t.prototype.pointTarget = function(t, i, n, o, a, r) {
            void 0 === n && (n = 0), void 0 === o && (o = 1), void 0 === a && (a = !0), void 0 === r && (r = !0), 
            this.target = t, this.showFinger = r, this.direction = o, this.centerPosition = a, 
            this.modal = n, this.hasModal = n >= 0, this.clickCallBack = i, this.hasModal && (hortor.Log.warn(this, "lockStage"), 
            e.TutorialManager.instance.lockStage()), null == t.stage || t.width * t.height == 0 ? (this.clock = hortor.TimerManager.addClock("tutorialClock", 1e3, 200, this.maxCount), 
            this.clock.registCallBack(this, this.clearTutorialClock, this.tryPointTarget)) : this.tryPointTarget();
        }, t.prototype.onUIRefreshd = function(e, t) {
            e == this.targetName && (hortor.Log.log("onUIRefreshd:" + this.targetName + ",show:" + t), 
            t && this.tryPointTargetByName());
        }, t.prototype.tryPointTargetByName = function() {
            null != this.target && (this.target.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.onUITouchHandler, this), 
            this.target.hasEventListener(egret.TouchEvent.TOUCH_RELEASE_OUTSIDE) && this.target.removeEventListener(egret.TouchEvent.TOUCH_RELEASE_OUTSIDE, this.onUITouchHandler, this)), 
            this.target = uiModel.getUI(this.targetName), this.target && (this.target.touchEnabled = !0, 
            t.instance.pointTarget(this.target, this.clickCallBack, this.modal, this.direction, this.centerPosition, this.showFinger));
        }, t.prototype.onUITouchHandler = function(e) {
            hortor.Log.log("onUITouchHandler suc:" + this.targetName), this.target && (this.target.hasEventListener(egret.TouchEvent.TOUCH_RELEASE_OUTSIDE) && this.target.removeEventListener(egret.TouchEvent.TOUCH_RELEASE_OUTSIDE, this.onUITouchHandler, this), 
            this.target.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.onUITouchHandler, this)), 
            this.hide(), this.clickCallBack && this.clickCallBack();
        }, t.prototype.tryPointTarget = function() {
            if (null != this.target && this.target.stage && this.target.width * this.target.height > 0) {
                hortor.Log.log("tryPointTargetByName suc:" + this.targetName), this.clearTutorialClock(), 
                this.stage = this.target.stage;
                var e = this.getModalBounds(this.target);
                this.pointBounds(e, this.showFinger, this.direction, this.centerPosition, this.modal), 
                this.target.addEventListener(egret.Event.REMOVED_FROM_STAGE, this.hide, this), this.target.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onUITouchHandler, this), 
                this.target.hasEventListener(egret.TouchEvent.TOUCH_RELEASE_OUTSIDE) && !this.target.hasEffect && this.target.addEventListener(egret.TouchEvent.TOUCH_RELEASE_OUTSIDE, this.onUITouchHandler, this);
            }
        }, t.prototype.clearTutorialClock = function() {
            this.target && !this.target.stage && hortor.Log.warn(this, "pointTarget指向的UI未在舞台:" + this.target), 
            hortor.TimerManager.removeClock("tutorialClock"), e.TutorialManager.instance.unlockStage();
        }, t.prototype.pointBounds = function(t, i, n, o, a) {
            function r(e, t, i, n, o) {
                void 0 === n && (n = 0), void 0 === o && (o = 0);
                var r = s.modalContainer.getChildAt(e);
                r.x = n, r.y = o, r.alpha = Math.max(0, a), r.width = t, r.height = i;
            }
            void 0 === i && (i = !0), void 0 === n && (n = 1), void 0 === o && (o = !0), void 0 === a && (a = 0), 
            e.TutorialManager.instance.unlockStage(), this.showFinger = i, this.direction = n, 
            this.centerPosition = o;
            var s = this;
            if (console.log("pointBounds target:" + this.targetName + ",bounds:" + t.toString()), 
            this.hasModal && t.width * t.height > 0) {
                this.container.addChild(this.modalContainer);
                var l = Math.ceil(hortor.StageManager.stageWidth), d = Math.ceil(hortor.StageManager.stageHeight);
                r(0, l, t.y), r(1, l, d - t.bottom, 0, t.bottom), r(2, t.x, t.height, 0, t.y), r(3, l - t.right, t.height, t.right, t.y);
            } else this.modalContainer.stage && this.container.removeChild(this.modalContainer);
            i && (this.container.addChild(this.tutorialTip), this.tutorialTip.show(n, t, o));
        }, t.prototype.hide = function(t) {
            void 0 === t && (t = null), this.targetName = null, e.TutorialManager.instance.unlockStage(), 
            null != this.target && (this.target.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.onUITouchHandler, this), 
            this.target.removeEventListener(egret.TouchEvent.TOUCH_RELEASE_OUTSIDE, this.onUITouchHandler, this), 
            this.target.removeEventListener(egret.Event.REMOVED_FROM_STAGE, this.hide, this), 
            this.target = null), this.clearTutorialClock(), this.modalContainer.stage && this.container.removeChild(this.modalContainer), 
            this.tutorialTip.stage && this.container.removeChild(this.tutorialTip);
        }, Object.defineProperty(t.prototype, "isRunning", {
            get: function() {
                return null != this.target;
            },
            enumerable: !0,
            configurable: !0
        }), t.prototype.getModalBounds = function(e) {
            var t = hortor.DisplayUtil.getGlobalBounds(e);
            return t.x = Math.ceil(t.x / hortor.StageManager.scaleFactor), t.y = Math.ceil(t.y / hortor.StageManager.scaleFactor), 
            t.width = Math.ceil(t.width / hortor.StageManager.scaleFactor), t.height = Math.ceil(t.height / hortor.StageManager.scaleFactor), 
            t;
        }, t.prototype.onResize = function() {
            null != this.target && this.pointTarget(this.target, this.clickCallBack, this.modal, this.direction, this.centerPosition, this.showFinger);
        }, t;
    }();
    e.TutorialPointer = t, __reflect(t.prototype, "game.TutorialPointer");
    var i = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.touchChildren = e.touchEnabled = !1, e;
        }
        return __extends(i, t), i.prototype.initUI = function() {
            this.movie = new e.ArmaturePlayer("tutorialhand"), this.addChild(this.movie);
        }, i.prototype.show = function(e, t, i) {
            void 0 === i && (i = !0), null == this.movie && this.initUI(), this.movie.play("tutorialhand", 0), 
            this.scaleX = -e, this.x = t.x, this.y = t.y, i && (this.x += .5 * t.width, this.y += .5 * t.height);
        }, i;
    }(egret.DisplayObjectContainer);
    e.TutorialTip = i, __reflect(i.prototype, "game.TutorialTip");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(e) {
        function t(t) {
            return e.call(this, t) || this;
        }
        return __extends(t, e), t.prototype.onExecute = function() {
            if (this.parameters.length < 2) return void hortor.Log.error(this, "config error tutorialId:" + this.tutorialID + "," + this.stepInfo.id);
            var e = parseInt(this.parameters[0]), t = parseInt(this.parameters[1]);
            switch (e) {
              case 1:
                hortor.ScreenManager.hideScreen(t);
                break;

              case 2:
                hortor.WindowManager.hideWindow(t);
                break;

              default:
                hortor.Log.warn(null, "跳转类型未定义:" + e);
            }
            this.end();
        }, t;
    }(e.TutorialStep);
    e.CloseStep = t, __reflect(t.prototype, "game.CloseStep");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(e) {
        function t(t) {
            return e.call(this, t) || this;
        }
        return __extends(t, e), t.prototype.onParse = function() {}, t.prototype.onExecute = function() {
            if (this.parameters.length < 2) return void hortor.Log.error(this, "config error tutorialId:" + this.tutorialID + "," + this.stepInfo.id);
            var e = parseInt(this.parameters[0]), t = this.parameters[1];
            switch (e) {
              case 1:
                hortor.ScreenManager.currentScreen = parseInt(t);
                break;

              case 2:
                hortor.WindowManager.currentWindow = parseInt(t);
                break;

              default:
                hortor.Log.warn(null, "跳转类型未定义:" + e);
            }
            this.end();
        }, t;
    }(e.TutorialStep);
    e.JumpStep = t, __reflect(t.prototype, "game.JumpStep");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i(e) {
            var i = t.call(this, e) || this;
            return i.uiName = "", i.direction = 1, i.showFinger = !0, i.centerPosition = !0, 
            i;
        }
        return __extends(i, t), i.prototype.onParse = function() {
            return this.parameters.length < 1 ? void hortor.Log.error(this, "config error tutorialId:" + this.tutorialID + "," + this.stepInfo.id) : (this.uiName = this.parameters[0], 
            this.direction = this.parameters.length > 1 ? parseFloat(this.parameters[1]) : 1, 
            this.showFinger = this.parameters.length > 2 ? "1" == this.parameters[2] : !0, void (this.centerPosition = this.parameters.length > 3 ? "1" == this.parameters[3] : !0));
        }, i.prototype.onExecute = function() {
            e.TutorialPointer.instance.pointTargetByName(this.uiName, this.onUITouchHandler.bind(this), this.stepInfo.modal, this.direction, this.centerPosition, this.showFinger);
        }, i.prototype.onUITouchHandler = function(e) {
            console.log("onUITouchHandler:" + this.uiName), this.end();
        }, i;
    }(e.TutorialStep);
    e.PointStep = t, __reflect(t.prototype, "game.PointStep");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i(e) {
            return t.call(this, e) || this;
        }
        return __extends(i, t), i.prototype.onParse = function() {
            if (this.parameters.length < 1) return void hortor.Log.error(this, "config error tutorialId:" + this.tutorialID + "," + this.stepInfo.id);
            var t = new e.TalkInfoData(this.parameters[0], this.stepInfo.modal);
            this.talks = [ t ];
        }, i.prototype.onExecute = function() {
            this.startTalk(this.talks);
        }, i.prototype.startTalk = function(t) {
            i.talker = i.talker || new e.Talker(), this.talks = t, this.continueNext();
        }, i.prototype.continueNext = function() {
            this.talks.length && (this.currentTalk = this.talks.shift(), i.talker.talk(this.currentTalk, this.onTalkEnd, this));
        }, i.prototype.onTalkEnd = function() {
            0 == this.talks.length && this.end();
        }, i;
    }(e.TutorialStep);
    e.TalkStep = t, __reflect(t.prototype, "game.TalkStep");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i(e) {
            return t.call(this, e) || this;
        }
        return __extends(i, t), i.prototype.onParse = function() {
            return this.parameters.length < 1 ? void hortor.Log.error(this, "config error tutorialId:" + this.tutorialID + "," + this.stepInfo.id) : void (this.tipType = parseInt(this.parameters[0]));
        }, i.prototype.onExecute = function() {
            switch (this.tipType) {
              case 1:
                hortor.WindowManager.showWindow(e.WindowType.WINDOW_ITEM_TIP, "energy");
                break;

              case 2:
                hortor.WindowManager.showWindow(e.WindowType.WINDOW_ITEM_TIP, "shield");
            }
        }, i;
    }(e.TutorialStep);
    e.TipStep = t, __reflect(t.prototype, "game.TipStep");
}(game || (game = {}));

var hortor;

!function(e) {
    var t = function(e) {
        function t() {
            var t = e.call(this, !1) || this;
            return t.targetX = 0, t.startX = 0, t;
        }
        return __extends(t, e), t.prototype.start = function(t, i) {
            var n = this;
            void 0 === i && (i = null), e.prototype.start.call(this, t), t.x = this.initX - t.width;
            var o = 50 * i;
            egret.Tween.get(this.target).wait(o).to({
                x: this.initX
            }, 300, egret.Ease.backOut).call(function() {
                egret.Tween.removeTweens(n.target);
            });
        }, t.prototype.stop = function(t, i) {
            void 0 === i && (i = null), e.prototype.stop.call(this, t), egret.Tween.removeTweens(t);
        }, t;
    }(e.EffectBase);
    e.ItemEffect = t, __reflect(t.prototype, "hortor.ItemEffect");
}(hortor || (hortor = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.onViewRegister(), this.onEventCenterRegister();
        }, i.prototype.onData = function() {}, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.onViewRegister = function() {
            this.closeBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.closeBtnFunc, this), 
            this.payBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.payBtnFunc, this);
        }, i.prototype.onViewRemove = function() {
            this.closeBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.closeBtnFunc, this), 
            this.payBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.payBtnFunc, this);
        }, i.prototype.onEventCenterRegister = function() {}, i.prototype.onEventCenterRemove = function() {}, 
        i.prototype.payBtnFunc = function() {
            shopModel.buyCounts = 1, e.PlatformManager.pay("wanted");
        }, i.prototype.closeBtnFunc = function() {
            this.hide();
        }, i;
    }(e.WindowBase);
    e.WantedWindow = t, __reflect(t.prototype, "game.WantedWindow");
}(game || (game = {}));

var hortor;

!function(e) {
    var t = function(e) {
        function t() {
            var t = e.call(this) || this;
            return t.actionName = game.WheelBtnType.Anniu_up, t.isShow = !0, t.addEventListener(egret.Event.ADDED_TO_STAGE, t.onInit, t), 
            t;
        }
        return __extends(t, e), t.prototype.onInit = function() {
            this.createWheelArmature(), this.turnBtnGroup.touchChildren = !1, this.turnBtnGroup.touchEnabled = !0, 
            this.turnBtnGroup.addEventListener(egret.TouchEvent.TOUCH_BEGIN, this.turnBeginFunc, this), 
            this.turnBtnGroup.addEventListener(egret.TouchEvent.TOUCH_TAP, this.turnTapFunc, this), 
            this.turnBtnGroup.addEventListener(egret.TouchEvent.TOUCH_RELEASE_OUTSIDE, this.turnTapFunc, this);
        }, t.prototype.registButtonFunc = function(e, t, i) {
            this.touchBegin = e, this.touchTap = t, this.touchOut = i;
        }, t.prototype.setBtnEffect = function(e, t, i, n) {
            this.actionName = e, this.thisObject = t, i && this.wheelArmature.play(this.actionName, 1, function() {
                n && n();
            });
        }, t.prototype.turnTapFunc = function(e) {
            this.touchTap && this.touchTap();
        }, t.prototype.turnBeginFunc = function() {
            this.touchBegin && this.touchBegin();
        }, t.prototype.playAnniuMc = function() {
            this.anniuMc ? this.anniuMc.play("layer", 1) : (this.anniuMc = new game.ArmaturePlayer("wheelAnniu"), 
            this.turnBtnGroup.addChild(this.anniuMc), this.anniuMc.x = 143, this.anniuMc.y = 269, 
            this.anniuMc.play("layer", 1), console.log("anniu mc width = " + this.anniuMc.width + " height = " + this.anniuMc.height));
        }, t.prototype.createWheelArmature = function() {
            this.wheelArmature || (this.wheelArmature = new game.ArmaturePlayer("wheelBtn"), 
            this.turnBtnGroup.addChild(this.wheelArmature), this.wheelArmature.x = 140, this.wheelArmature.y = 314, 
            this.wheelArmature.play(this.actionName, 1));
        }, Object.defineProperty(t.prototype, "uiName", {
            set: function(e) {
                this.boaterName != e && (uiModel.onHide(this.boaterName), this.boaterName = e, this.isShow && uiModel.onShow(this.boaterName, this.turnBtnGroup));
            },
            enumerable: !0,
            configurable: !0
        }), t.prototype.boaterDown = function(e) {
            var t = this;
            this.isShow = !1, this.boaterName && uiModel.onHide(this.boaterName), egret.Tween.removeTweens(this), 
            egret.Tween.get(this).to({
                bottom: -447
            }, Const.tweenTime2, egret.Ease.quadInOut).call(function() {
                egret.Tween.removeTweens(t), e && e();
            });
        }, t.prototype.boaterUp = function(e) {
            var t = this;
            egret.Tween.removeTweens(this), egret.Tween.get(this).to({
                bottom: -88
            }, Const.tweenTime2, egret.Ease.quadInOut).call(function() {
                t.isShow = !0, t.boaterName && uiModel.onShow(t.boaterName, t.turnBtnGroup), egret.Tween.removeTweens(t), 
                e && e();
            });
        }, t;
    }(eui.Component);
    e.BoaterHeader = t, __reflect(t.prototype, "hortor.BoaterHeader");
}(hortor || (hortor = {})), window.hortor.BoaterHeader = hortor.BoaterHeader;

var game;

!function(e) {
    var t = function() {
        function t(e) {
            this.coupleShiled = 0, this.sendCpShiled = 0, this.shieldFull = !1, this.screen = e;
        }
        return t.prototype.onInit = function() {
            var e = this;
            this.bitmapText = new egret.BitmapText(), RES.getResAsync("money_text0_fnt", function(t) {
                e.bitmapText.font = t;
            }, this), this.bitmapText.text = "x1", this.bitmapText.width = 200, this.bitmapText.height = 81, 
            this.bitmapText.textAlign = egret.HorizontalAlign.CENTER, this.bitmapText.verticalAlign = egret.VerticalAlign.MIDDLE, 
            this.screen.betEffectGroup.addChild(this.bitmapText), this.bitmapText.alpha = 0, 
            this.doubleCardImg = new eui.Image(), this.doubleCardImg.source = "wheel_json.wheel_doubleCard", 
            this.screen.betEffectGroup.addChild(this.doubleCardImg), this.doubleCardImg.x = 18, 
            this.doubleCardImg.y = 55, this.doubleCardImg.visible = !1, EventCenter.addEventListener(EventConst.GuideOver, this.guideOverReward, this);
        }, t.prototype.guideOverReward = function() {
            var e = this;
            this.playGoldEffect(30, !0);
            var t = egret.setTimeout(function() {
                egret.clearTimeout(t), e.getEnergyToPlayEffect(null, 1);
            }, this, 1200);
        }, t.prototype.getReward = function(t, i) {
            var n = this.screen;
            switch (t.type) {
              case Const.RollerTypeMoney:
                soundModel.playSound(e.SoundType.SOUND_WHEEL_GOLD), i.shareCoinFactor > 0 && enterManager.available && (this.screen.isTouching = !1, 
                ("share" == i.shareCoinType || gateModel.isWxgame && "video" == i.shareCoinType) && hortor.WindowManager.showWindow(e.WindowType.WINDOW_MULTIPLE_GOLD, {
                    count: i.shareCoinFactor,
                    type: i.shareCoinType
                }));
                var o = e.ComFunc.getWheelGoldEffectNum(t.value);
                if (n.setRotateStatus(!1), this.playGoldEffect(o), playerModel.update(i), this.screen.checkToTurn(), 
                n.doubleMoneyGroup.visible) {
                    var a = playerModel.doubleMoneyCard || 0;
                    n.doubleCount.text = "" + a, this.showAddTween(n.doubleCount, function() {
                        n.wheelBtn.hideDoubleMoney();
                    });
                }
                break;

              case Const.RollerTypeEnergy:
                soundModel.playSound(e.SoundType.SOUND_WHEEL_ENERGY_START), this.getEnergyToPlayEffect(i), 
                this.checkFriendTip();
                break;

              case Const.RollerTypeAttack:
                this.screen.isTouching = !1, soundModel.playSound(e.SoundType.SOUND_WHEEL_ATTACK_PREPARE), 
                this.playAttackEffect();
                break;

              case Const.RollerTypeSteal:
                this.screen.isTouching = !1, soundModel.playSound(e.SoundType.SOUND_WHEEL_STEAL), 
                this.playStealEffect();
                break;

              case Const.RollerTypeShield:
                soundModel.playSound(e.SoundType.SOUND_WHEEL_SHIELD_START), this.coupleShiled = i.coupleShield || 0, 
                this.sendCpShiled = 0, this.getShieldToPlayEffect(i), this.checkFriendTip();
            }
        }, t.prototype.playBetRateEffect = function(e, t) {
            var i = this, n = t.betCount ? t.betCount : 1;
            if (!(e.type == Const.RollerTypeMoney && 0 == playerModel.doubleMoneyCard && 1 >= n || e.type != Const.RollerTypeMoney && 1 >= n)) {
                this.bitmapText.text = "x" + n, this.bitmapText.scaleX = this.bitmapText.scaleY = .6, 
                this.bitmapText.alpha = 1, this.doubleCardImg.visible = !1, util.setScale(this.screen.betEffectGroup, 2);
                var o = egret.Tween.get(this.screen.betEffectGroup);
                playerModel.doubleMoneyCard > 0 && e.type == Const.RollerTypeMoney ? 1 == n ? this.betForMoney1(e, t) : o.to({
                    scaleX: 1,
                    scaleY: 1
                }, 200).wait(50).call(function() {
                    i.betForMoney1(e, t);
                }) : o.to({
                    scaleX: 1,
                    scaleY: 1
                }, 200, egret.Ease.quadIn).to({
                    alpha: 0
                }, 200).call(function() {
                    i.betToNext(e, t);
                });
            }
        }, t.prototype.betForMoney1 = function(e, t) {
            var i = this, n = this.screen.betEffectGroup, o = t.betCount ? t.betCount : 1, a = 2 * o;
            this.bitmapText.text = "x" + a, this.doubleCardImg.visible = !0, util.setScale(n, 2);
            var r = egret.Tween.get(n);
            r.to({
                scaleX: 1,
                scaleY: 1
            }, 200, egret.Ease.quadIn).wait(50).call(function() {
                i.betToNext(e, t);
            });
        }, t.prototype.betToNext = function(e, t) {
            var i = this.screen.betEffectGroup;
            egret.Tween.removeTweens(i), this.bitmapText.alpha = 0, this.doubleCardImg.visible = !1, 
            i.alpha = 1, this.getReward(e, t);
        }, t.prototype.playGoldEffect = function(t, i) {
            var n = this.screen;
            if (soundModel.playSound(e.SoundType.SOUND_WHEEL_GOLD_MED), !i) {
                var o = "qipaobai";
                this.goldBubble ? this.goldBubble.play(1) : (this.goldBubble = new e.MoviePlayer(o), 
                n.betEffectGroup.addChild(this.goldBubble), this.goldBubble.x = 60, this.goldBubble.y = 37, 
                this.goldBubble.play(1));
            }
            this.GoldEffect(t);
        }, t.prototype.GoldEffect = function(t) {
            for (var i = this.screen, n = function(t) {
                var n = _.random(1, 2), o = "jingbi3_" + n, a = hortor.ObjectPool.getObject(e.MoviePlayer, o, o);
                i.mainGroup.addChild(a), a.x = _.random(310, 330), a.y = _.random(375, 415), util.setScale(a, .4), 
                a.play(-1);
                var r = _.random(100, 540), s = a.x - r, l = a.x - 3 * s, d = _.random(100, -100), u = _.random(.6, 1.2), h = _.random(1.4, 2.4), c = egret.Tween.get(a);
                c.to({
                    x: r,
                    y: d,
                    scaleX: u,
                    scaleY: u,
                    rotation: _.random(0, 150)
                }, 500, egret.Ease.sineOut).to({
                    x: l,
                    y: i.stageHeight + 200,
                    scaleX: h,
                    scaleY: h,
                    rotation: _.random(0, 150)
                }, 1100 - 1.5 * d, egret.Ease.cubicIn).call(function() {
                    egret.Tween.removeTweens(a), i.mainGroup.removeChild(a), hortor.ObjectPool.disposeObject(a);
                });
            }, o = 0; t > o; o++) n(o);
        }, t.prototype.showAddTween = function(e, t) {
            var i = egret.Tween.get(e);
            i.to({
                scaleX: 1.4,
                scaleY: 1.4
            }, 300, egret.Ease.quadOut).to({
                scaleX: 1,
                scaleY: 1
            }, 100).call(function() {
                e && (egret.Tween.removeTweens(e), t && "function" == typeof t && t());
            });
        }, t.prototype.getEnergyToPlayEffect = function(t, i) {
            var n = this;
            e.TutorialManager.instance.newbieTutorialing && this.guideTips("energy");
            var o = i ? i : wheelModel.selectWheelBet, a = {
                name: Const.Wheel_Energy,
                parent: this.screen,
                posX: .5 * this.screen.stageWidth,
                posY: .5 * this.screen.stageHeight + 30,
                showTotalTimes: o,
                cbFunc: this.playEnergyFunc.bind(this),
                newData: t
            };
            this.rewardStatus = new e.WheelGetEnergy(a), soundModel.playSound(e.SoundType.SOUND_WHEEL_ENERGY_TRANSFORM);
            var r = egret.setTimeout(function() {
                egret.clearTimeout(r), n.rewardStatus.playTiaoDaiArmature();
            }, this, 100);
            this.rewardStatus.setState(e.WheelAniType.Enter, 1);
        }, t.prototype.playEnergyFunc = function(t) {
            soundModel.playSound(e.SoundType.SOUND_WHEEL_ENERGY_CHANGE), t ? (playerModel.update(t), 
            this.screen.setRotateStatus(!1), this.screen.checkToTurn()) : this.screen.initEnergyGroup(), 
            this.screen.playEnergyWave(), this.checkEnergyFull();
        }, t.prototype.checkEnergyFull = function() {
            playerModel.energy > playerModel.maxEnergy;
        }, t.prototype.getShieldToPlayEffect = function(t) {
            var i = this;
            e.TutorialManager.instance.newbieTutorialing && this.guideTips("shield");
            var n = {
                name: Const.Wheel_Shield,
                parent: hortor.StageManager.getLayer(hortor.Layer.FACEUI),
                posX: .5 * this.screen.stageWidth,
                posY: .5 * this.screen.stageHeight,
                showTotalTimes: wheelModel.selectWheelBet,
                cbFunc: this.playShieldFunc.bind(this),
                newData: t
            };
            if (this.rewardStatus = new e.WheelGetShield(n), playerModel.shields < 3 || 0 != this.coupleShiled) {
                var o = egret.setTimeout(function() {
                    egret.clearTimeout(o), i.rewardStatus.playTiaoDaiArmature();
                }, this, 100);
                this.rewardStatus.setState(e.WheelAniType.Enter, 1);
            } else 3 == playerModel.shields && 0 == this.coupleShiled && this.shieldFullEffect();
        }, t.prototype.playShieldFunc = function(t, i) {
            if (playerModel.tutorial < 14 && (playerModel.shields = 0), this.shieldFull = 3 == playerModel.shields, 
            this.shieldFull) {
                if (this.shieldFull && 0 == this.coupleShiled) this.shieldFullEffect(); else if (this.shieldFull && 0 != this.coupleShiled) switch (this.coupleShiled) {
                  case 1:
                    this.shieldFlyToCp(t, i);
                    break;

                  case -1:
                    hortor.WindowManager.showWindow(e.WindowType.WINDOW_WHEEL_COUPLESHIELD, {
                        cbData: t,
                        timers: i
                    });
                }
            } else this.shieldFlyToTop(t, i);
        }, t.prototype.shieldFlyToTop = function(t, i) {
            var n = playerModel.shields, o = 44;
            hortor.SystemManager.isNotchMobile && (o += 60);
            var a = [ {
                x: 140,
                y: o
            }, {
                x: 162,
                y: o
            }, {
                x: 188,
                y: o
            } ], r = a[n];
            r = r ? r : a[2], this.rewardStatus.actionCbFunc = this.shieldActionCb.bind(this), 
            this.rewardStatus.setState(e.WheelAniType.Action, 1);
            var s = this.rewardStatus.rewardArmature.x, l = this.rewardStatus.rewardArmature.y, d = new egret.Point(s, l), u = new egret.Point(r.x + 4 * (s - r.x) / 4, 2 * (l - r.y) / 3 + r.y), h = new egret.Point(r.x + 3 * (s - r.x) / 4, 1 * (l - r.y) / 3 + r.y), c = new egret.Point(r.x, r.y);
            new MoveAction(this.rewardStatus.rewardArmature, [ d, u, h, c ], 380, egret.Ease.quadOut, function() {
                playerModel.shields++, soundModel.playSound(e.SoundType.SOUND_WHEEL_SHIELD_GOT);
            });
        }, t.prototype.shieldActionCb = function(e, t) {
            this.shiledTweenCallBack(e, t);
        }, t.prototype.shieldFlyToCp = function(e, t) {
            var i = this, n = this;
            -1 == n.coupleShiled && (n.sendCpShiled = 1), n.coupleShiled = 0, playerModel.couple.shieldSentCount++;
            var o = 156, a = util.createBitmapByName("couple_icon_shield");
            n.screen.addChild(a), a.width = o, a.height = o, a.anchorOffsetX = .5 * o, a.anchorOffsetY = .5 * o, 
            a.x = n.rewardStatus.rewardArmature.x - 80 + .5 * o, a.y = n.rewardStatus.rewardArmature.y - 60 + .5 * o, 
            a.alpha = 0, a.scaleX = .2, a.scaleY = .2, n.rewardStatus.rewardArmature.visible = !1;
            egret.Tween.get(a).to({
                alpha: 1,
                scaleX: 1,
                scaleY: 1
            }, 500, egret.Ease.cubicIn).wait(300).call(function() {
                egret.Tween.removeTweens(a), n.screen.removeChild(a), a = null, i.shiledTweenCallBack(e, t);
            });
        }, t.prototype.playShieldActionArmature = function() {
            this.rewardStatus && this.rewardStatus.setState(e.WheelAniType.Action, 1, !0);
        }, t.prototype.shiledTweenCallBack = function(t, i) {
            playerModel.tutorial < 14 || i == t.betCount ? (this.rewardStatus.dispose(), this.screen.setRotateStatus(!1), 
            this.screen.checkToTurn()) : (this.rewardStatus.resetArPos(), playerModel.shields < 3 || 0 != this.coupleShiled ? this.rewardStatus.setState(e.WheelAniType.Enter, 1) : 3 == playerModel.shields && 0 == this.coupleShiled && this.shieldFullEffect());
        }, t.prototype.shieldFullEffect = function() {
            soundModel.playSound(e.SoundType.SOUND_WHEEL_SHIELD_FULL), this.rewardStatus.finalCbFunc = this.shieldFullCb.bind(this), 
            this.rewardStatus.setState(e.WheelAniType.Dun_nengl, 1);
        }, t.prototype.shieldFullCb = function(e) {
            e.energy -= this.sendCpShiled, playerModel.update(e), EventCenter.sendEvent(EventConst.ShieldChange), 
            this.screen.setRotateStatus(!1), this.screen.checkToTurn();
        }, t.prototype.playStealEffect = function() {
            e.TutorialManager.instance.newbieTutorialing && this.guideTips("steal");
            var t = this.screen, i = {
                name: Const.Wheel_Steal,
                parent: hortor.StageManager.getLayer(hortor.Layer.TOP),
                posX: .5 * t.stageWidth,
                posY: 600,
                showTotalTimes: wheelModel.selectWheelBet,
                cbFunc: function() {},
                newData: {}
            };
            this.rewardStatus = new e.WheelGetSteal(i), playerModel.tutorial < 14 ? (this.rewardStatus.setState(e.WheelAniType.New, 1), 
            this.playStealFunc(1500)) : (this.rewardStatus.setState(e.WheelAniType.Normal, 1), 
            this.playStealFunc(600));
        }, t.prototype.playStealFunc = function(e) {
            var t = this.screen, i = egret.setTimeout(function() {
                egret.clearTimeout(i), t.wheelToIsland.wheelToSteal();
            }, this, e);
        }, t.prototype.playAttackEffect = function() {
            hortor.NotificationManager.dispatch(e.NotificationType.ISLAND_WHEEL_TO_ATTACK);
        }, t.prototype.playAttackFunc = function() {
            var e = this.screen;
            e.wheelToIsland.wheelToAttack();
        }, t.prototype.checkFriendTip = function() {}, t.prototype.guideTips = function(t) {
            var i = this.screen, n = new eui.Rect(10, 10, 0);
            n.alpha = .6, i.addChild(n), n.width = hortor.StageManager.stageWidth, n.height = hortor.StageManager.stageHeight;
            var o = new egret.TextField();
            i.addChild(o), o.width = 300, o.height = 190, o.anchorOffsetX = .5 * o.width, o.textColor = 16768618, 
            o.stroke = 2, o.strokeColor = 8404509, o.size = 36, o.bold = !0, o.textAlign = egret.HorizontalAlign.CENTER, 
            o.verticalAlign = egret.VerticalAlign.MIDDLE, o.lineSpacing = 6, o.x = .5 * hortor.StageManager.stageWidth, 
            o.y = 100 + .5 * hortor.StageManager.stageHeight;
            var a = "能量瓶可以\n补充10点能量";
            switch (t) {
              case "energy":
                a = "能量瓶可以\n补充10点能量", soundModel.playSound(e.SoundType.SOUND_TUTORIAL_VOICE_4);
                break;

              case "shield":
                a = "护盾可以保护你的岛免受攻击", soundModel.playSound(e.SoundType.SOUND_TUTORIAL_VOICE_8);
                break;

              case "steal":
                a = "不劳而获的时间\n到了", soundModel.playSound(e.SoundType.SOUND_TUTORIAL_VOICE_9);
            }
            o.text = a, egret.setTimeout(function() {
                i.removeChild(n), i.removeChild(o);
            }, this, 2500);
        }, t;
    }();
    e.WheelAction = t, __reflect(t.prototype, "game.WheelAction");
}(game || (game = {}));

var game;

!function(e) {
    var t = function() {
        function t(e) {
            this.screen = e;
        }
        return t.prototype.onInit = function() {
            this.createBetArmature(), this.createJinbikaArmature(), this.initDoubleMoney(), 
            this.screen.jinbikaGroup.addEventListener(egret.TouchEvent.TOUCH_TAP, this.doubleMoneyGroupFunc, this), 
            this.screen.paoLock.addEventListener(egret.TouchEvent.TOUCH_TAP, this.paoLockFunc, this), 
            EventCenter.addEventListener(EventConst.GetDoubleMoneyCard, this.playMorenAnimation, this), 
            playerModel.bind("doubleMoneyCard", this.screen, this.changeJinbikaAr.bind(this));
        }, t.prototype.createBetArmature = function() {
            var t = this.screen;
            this.betArmature = new e.ArmaturePlayer("beishu"), t.betGroup.addChild(this.betArmature), 
            this.betArmature.x = 61, this.betArmature.y = 60, this.betArmature.load(this.initSlot, this);
        }, t.prototype.initSlot = function() {
            this.screen.betGroup.addEventListener(egret.TouchEvent.TOUCH_TAP, this.betGroupFunc, this), 
            wheelModel.selectWheelBet = playerModel.rollBet || 1, this.setNewSlot();
        }, t.prototype.setNewSlot = function() {
            if (this.betArmature) {
                var e = this.betArmature.getSlotArmature("22");
                e.displayIndex = wheelModel.selectWheelBet - 1, e.displayController = "none", this.betArmature.play("action", 1, this.completeHandler, this);
            }
        }, t.prototype.completeHandler = function(e) {
            if ("action" == e.animationName && this.betArmature) {
                var t = this.betArmature.getSlotArmature("11");
                t.displayIndex = wheelModel.selectWheelBet - 1;
                var i = this.betArmature.getSlotArmature("22");
                i.displayIndex = -1, this.betArmature.play("static", 0);
            }
        }, t.prototype.betGroupFunc = function() {
            if (this.betArmature && !wheelModel.isRotate) {
                if (soundModel.playSound(e.SoundType.SOUND_PANEL_OPEN), playerModel.highestCrowns < Const.betLimit) return void e.ComFunc.openComConfirmPanel(e.AcLockType.bet);
                wheelModel.selectWheelBet++, wheelModel.selectWheelBet = wheelModel.selectWheelBet > playerModel.maxBet ? 1 : wheelModel.selectWheelBet, 
                this.setNewSlot();
            }
        }, t.prototype.initDoubleMoney = function() {
            var e = playerModel.doubleMoneyCard || 0;
            this.screen.doubleMoneyGroup.visible = e > 0, this.screen.doubleCount.text = "" + e;
        }, t.prototype.hideDoubleMoney = function() {
            var e = playerModel.doubleMoneyCard || 0;
            e > 0 || (this.screen.doubleMoneyGroup.visible = e > 0, this.playJinbikaAnimation());
        }, t.prototype.createJinbikaArmature = function() {
            var t = playerModel.doubleMoneyCard || 0;
            this.jinbikaArmature = new e.ArmaturePlayer("jinbika"), this.screen.jinbikaGroup.addChild(this.jinbikaArmature), 
            this.jinbikaArmature.x = 45.5, this.jinbikaArmature.y = 45.5, t > 0 ? this.playMorenAnimation(!0) : this.playJinbikaAnimation();
        }, t.prototype.playJinbikaAnimation = function() {
            this.jinbikaArmature && this.jinbikaArmature.play("jinbika", 1);
        }, t.prototype.playMorenAnimation = function(e) {
            void 0 === e && (e = !1), this.initDoubleMoney(), this.jinbikaArmature && ("moren" != this.jinbikaArmature.getActionName() || e) && this.jinbikaArmature.play("moren", 1);
        }, t.prototype.changeJinbikaAr = function() {
            if (this.jinbikaArmature) {
                this.initDoubleMoney();
                var e = this.jinbikaArmature.getActionName();
                playerModel.doubleMoneyCard > 0 && "jinbika" == e ? this.playMorenAnimation() : 0 == playerModel.doubleMoneyCard && "moren" == e && this.playJinbikaAnimation();
            }
        }, t.prototype.doubleMoneyGroupFunc = function() {
            playerModel.doubleMoneyCard > 0 && (soundModel.playSound(e.SoundType.SOUND_PANEL_OPEN), 
            hortor.WindowManager.showWindow(e.WindowType.WINDOW_WHEEL_DOUBLECARD));
        }, t.prototype.paoLockFunc = function() {
            soundModel.buttonOpen(), hortor.TipManager.bubble("岛屿上至少有一座建筑");
        }, t;
    }();
    e.WheelBtn = t, __reflect(t.prototype, "game.WheelBtn");
}(game || (game = {}));

var hortor;

!function(e) {
    var t = function(e) {
        function t() {
            return e.call(this) || this;
        }
        return __extends(t, e), t.prototype.start = function(t, i) {
            void 0 === i && (i = null), e.prototype.start.call(this, t), t.addEventListener(egret.TouchEvent.TOUCH_BEGIN, this.onClickBegin, this), 
            t.addEventListener(egret.TouchEvent.TOUCH_END, this.onClickEnd, this), t.addEventListener(egret.TouchEvent.TOUCH_RELEASE_OUTSIDE, this.onClickEnd, this);
        }, t.prototype.stop = function(t, i) {
            void 0 === i && (i = null), e.prototype.stop.call(this, t), t.removeEventListener(egret.TouchEvent.TOUCH_BEGIN, this.onClickBegin, this), 
            t.removeEventListener(egret.TouchEvent.TOUCH_END, this.onClickEnd, this), t.scaleX = t.scaleY = 1;
        }, t.prototype.onClickBegin = function() {
            egret.Tween.get(this.target).to({
                scaleX: .9,
                scaleY: .9
            }, 100);
        }, t.prototype.onClickEnd = function() {
            egret.Tween.get(this.target).to({
                scaleX: 1.05,
                scaleY: 1.05
            }, 100).to({
                scaleX: 1,
                scaleY: 1
            }, 100);
        }, t;
    }(e.EffectBase);
    e.TouchScaleEffect = t, __reflect(t.prototype, "hortor.TouchScaleEffect");
}(hortor || (hortor = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e.isSelect = !0, e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.onViewRegister();
        }, i.prototype.onOpen = function() {
            this.openPanel();
        }, i.prototype.onData = function() {
            this.cbData = this.data.cbData, this.timers = this.data.timers;
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.onViewRegister = function() {
            var e = this;
            this.addClick(this.closeBtn, this.closeBtnFunc, this), this.addClick(this.sendBtn, this.sendBtnFunc, this), 
            this.addClick(this.selectImg, this.selectImgFunc, this), e.textInput.addEventListener(egret.Event.CHANGE, this.textInputFunc, this);
        }, i.prototype.onViewRemove = function() {
            var e = this;
            this.removeClick(this.closeBtn, this.closeBtnFunc, this), this.removeClick(this.sendBtn, this.sendBtnFunc, this), 
            this.removeClick(this.selectImg, this.selectImgFunc, this), e.textInput.removeEventListener(egret.Event.CHANGE, this.textInputFunc, this);
        }, i.prototype.openPanel = function() {
            var e = this;
            e.gouImg.visible = e.isSelect;
            var t = playerModel.couple || {
                shieldSentCount: 0
            };
            e.textInput.text = "别怕！今天我依然护着你！", e.sendLabel.text = "今天还可以赠送" + (3 - t.shieldSentCount) + "/3次";
        }, i.prototype.sendBtnFunc = function() {
            var t = this;
            HttpService.post(e.ServerMsg.COUPLE_SEND_SHIELD, "uid=" + playerModel.uid + "&ignore=" + t.isSelect, function(e) {
                e.added && hortor.TipManager.bubble("赠送成功");
            }), this.sendChatAction();
        }, i.prototype.sendChatAction = function() {
            var t = this, i = this, n = e.ComFunc.trim(i.textInput.text), o = playerModel.couple, a = {
                uid: playerModel.uid,
                fid: o.cpId,
                content: n,
                chatSign: o.chatSign
            };
            i.sendBtn.touchEnabled = !1, n = e.ComFunc.enCodeHtml(n), HttpService.post(e.ServerMsg.CHAT_SEND_PRIVATE_MSG, a, function(n) {
                var o = hortor.ScreenManager.getScreen(e.ScreenType.WHEEL_SCREEN);
                o && o.wheelAction.shieldFlyToCp(i.cbData, i.timers), t.hide();
            });
        }, i.prototype.selectImgFunc = function() {
            soundModel.playSound(e.SoundType.SOUND_PANEL_OPEN);
            var t = this;
            t.isSelect = !t.isSelect, t.gouImg.visible = t.isSelect;
        }, i.prototype.closeBtnFunc = function() {
            var t = this;
            t.closeBtn.touchEnabled = !1;
            var i = hortor.ScreenManager.getScreen(e.ScreenType.WHEEL_SCREEN);
            i && (i.wheelAction.coupleShiled = 0, i.wheelAction.shieldFullEffect()), this.hide();
        }, i.prototype.textInputFunc = function() {
            e.ComFunc.inputLimit(this.textInput, 40);
        }, i;
    }(e.WindowBase);
    e.WheelCpShieldWindow = t, __reflect(t.prototype, "game.WheelCpShieldWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onData = function() {
            this.addClick(this.maskBg, this.closeFunc, this), this.openPanel();
        }, i.prototype.openPanel = function() {
            var e = this;
            util.setScale(this.doubleHelpImg, 0);
            var t = egret.Tween.get(this.doubleHelpImg);
            t.to({
                scaleX: 1,
                scaleY: 1
            }, 200, egret.Ease.quadOut).call(function() {
                egret.Tween.removeTweens(e.doubleHelpImg);
            });
        }, i.prototype.closeFunc = function() {
            soundModel.playSound(e.SoundType.SOUND_PANEL_CLOSE), this.hide();
        }, i;
    }(e.WindowBase);
    e.WheelDoubleMoneyWindow = t, __reflect(t.prototype, "game.WheelDoubleMoneyWindow");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.completeHandler = function(t) {
            var i = this;
            switch (t.animationName) {
              case e.WheelAniType.Enter:
                if (playerModel.tutorial < 14) {
                    this.setState(e.WheelAniType.Wait, 0);
                    var n = egret.setTimeout(function() {
                        egret.clearTimeout(n), i.enterToNext();
                    }, this, 2e3);
                } else i.enterToNext();
                break;

              case e.WheelAniType.Wait:
                break;

              default:
                this.dealCbFunc(), this.dispose();
            }
        }, i.prototype.enterToNext = function() {
            this.disposeTiaodai();
            var t = this.arData.showTotalTimes || 1;
            this.setState(e.WheelAniType["Energy" + t], 1);
        }, i.prototype.playTiaoDaiArmature = function() {
            soundModel.playSound(e.SoundType.SOUND_WHEEL_ENERGY), this.tiaodaiArmature.x = this.arData.posX, 
            this.tiaodaiArmature.y = this.arData.posY - 75, this.tiaodaiArmature.play("jzwancheng", 1);
        }, i.prototype.disposeTiaodai = function() {
            var e = this;
            egret.Tween.get(this.tiaodaiArmature).to({
                alpha: 0
            }, 200).call(function() {
                e.tiaodaiArmature.alpha = 1, e.tiaodaiArmature && e.tiaodaiArmature.dispose();
            });
        }, i;
    }(e.WheelComGet);
    e.WheelGetEnergy = t, __reflect(t.prototype, "game.WheelGetEnergy");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.completeHandler = function(t) {
            var i = this;
            switch (t.animationName) {
              case e.WheelAniType.Enter:
                this.setState(e.WheelAniType.Ready, 1);
                break;

              case e.WheelAniType.Ready:
                if (playerModel.tutorial < 14) {
                    this.setState(e.WheelAniType.Wait, 0);
                    var n = egret.setTimeout(function() {
                        egret.clearTimeout(n), i.enterToNext();
                    }, this, 2e3);
                } else i.enterToNext();
                break;

              case e.WheelAniType.Wait:
                break;

              case e.WheelAniType.Action:
                this.actionCbFunc && this.actionCbFunc(this.arData.newData, this.showTimes);
                break;

              case e.WheelAniType.Dun_nengl:
                this.finalCbFunc && this.finalCbFunc(this.arData.newData), this.dispose();
            }
        }, i.prototype.enterToNext = function() {
            this.showTimes++, this.disposeTiaodai(), this.dealCbFunc();
        }, i.prototype.playTiaoDaiArmature = function() {
            soundModel.playSound(e.SoundType.SOUND_WHEEL_SHIELD_START), this.tiaodaiArmature.x = this.arData.posX, 
            this.tiaodaiArmature.y = this.arData.posY, this.tiaodaiArmature.play("jzwancheng", 1);
        }, i.prototype.disposeTiaodai = function() {
            var e = this;
            egret.Tween.get(this.tiaodaiArmature).to({
                alpha: 0
            }, 200).call(function() {
                e.tiaodaiArmature.alpha = 1, e.tiaodaiArmature && e.tiaodaiArmature.dispose();
            });
        }, i;
    }(e.WheelComGet);
    e.WheelGetShield = t, __reflect(t.prototype, "game.WheelGetShield");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(e) {
        function t() {
            return null !== e && e.apply(this, arguments) || this;
        }
        return __extends(t, e), t.prototype.completeHandler = function(e) {
            this.dispose();
        }, t;
    }(e.WheelComGet);
    e.WheelGetSteal = t, __reflect(t.prototype, "game.WheelGetSteal");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function n() {
            var e = t.call(this, !1) || this;
            return e.isTouching = !1, e.isMoving = !1, e.tempWheelEnergy = 0, e.rollCount = 0, 
            e.stageWidth = hortor.StageManager.stageWidth, e.stageHeight = hortor.StageManager.stageHeight, 
            e.anniuInterval = -1, e.tRotation = 0, e.lastRotationValue = 0, e.isSup = !1, e;
        }
        return __extends(n, t), n.prototype.onInit = function() {
            this.energeRect = new egret.Rectangle(), this.wheelAction = new e.WheelAction(this), 
            this.wheelToIsland = new e.WheelToIsland(this), this.wheelAction.onInit(), this.wheelBtn = new e.WheelBtn(this), 
            this.wheelBtn.onInit(), EventCenter.addEventListener(EventConst.WheelForStealBack, this.refreshKing, this), 
            EventCenter.addEventListener(EventConst.RefreshMapRedPoint, this.refreshBuildRedPoint, this), 
            EventCenter.addEventListener(EventConst.PassIslandOver, this.resetTurnGroupRotation, this), 
            EventCenter.addEventListener(EventConst.toBuildRedPointOpen, this.toBuildRedPointOpen, this), 
            EventCenter.addEventListener(EventConst.toBuildRedPointClose, this.toBuildRedPointClose, this), 
            EventCenter.addEventListener(EventConst.CheckPaoLock, this.isShowPaoLock, this), 
            this.clock = hortor.TimerManager.addClock(e.ClockType.WheelEnergy, 86400, 1e3, 1), 
            this.clock.registCallBack(this, function() {}, this._countDown.bind(this)), e.OpenFuncManager.regist(e.AcLockType.bet, "bet2", this.betGroup), 
            e.OpenFuncManager.regist(e.AcLockType.bet3, "bet3", this.betGroup), e.OpenFuncManager.regist(e.AcLockType.bet4, "bet4", this.betGroup), 
            e.OpenFuncManager.regist(e.AcLockType.bet5, "bet5", this.betGroup), this.anniuInterval = egret.setInterval(function() {
                !wheelModel.isRotate && uiModel.isMainWheel && uiModel.boater.playAnniuMc();
            }, this, 1e3 * Math.floor(8 * Math.random() + 5)), playerModel.bind("energy", this, this.initEnergyGroup.bind(this)), 
            playerModel.bind("maxEnergy", this, this.initEnergyGroup.bind(this)), uiModel.onState(e.UINameType.boater, this.boater, !0), 
            uiModel.boater.registButtonFunc(this.turnBeginFunc.bind(this), this.turnTapFunc.bind(this), this.turnTapFunc.bind(this));
        }, n.prototype.onOpen = function() {
            this.setRotateStatus(!1), this.isMoving = !1, 1 == playerModel.tutorial ? hortor.NotificationManager.dispatch(e.NotificationType.WHEEL_TO_ISLAND) : playerModel.lastRollerType == Const.RollerTypeAttack ? hortor.NotificationManager.dispatch(e.NotificationType.ISLAND_WHEEL_TO_ATTACK) : playerModel.lastRollerType == Const.RollerTypeSteal ? this.wheelAction.playStealEffect() : islandModel.islandStatus != e.IslandStatus.BUILD || e.TutorialManager.instance.newbieTutorialing ? (islandModel.islandStatus = e.IslandStatus.SMALL, 
            hortor.NotificationManager.dispatch(EventConst.IslandMoveBack, !0), hortor.NotificationManager.dispatch(e.NotificationType.ISLAND_ATTACK_TO_WHEEL, !0), 
            EventCenter.sendEvent(EventConst.WheelForStealBack, !0)) : hortor.NotificationManager.dispatch(e.NotificationType.WHEEL_TO_ISLAND), 
            this.onEnter();
        }, n.prototype.onEnter = function() {
            uiModel.onShow(e.UINameType.mainWheelBtn, uiModel.boater.turnBtnGroup), uiModel.onShow(e.UINameType.mainBuildBtn, this.toBuildGroup), 
            this.setRotateStatus(!1);
        }, n.prototype.onLeave = function() {
            uiModel.onHide(e.UINameType.mainWheelBtn), uiModel.onHide(e.UINameType.mainBuildBtn);
        }, n.prototype.onData = function() {
            this.isShowPaoLock(), this.initKingGroup(), this.initTurnView(), this.initEnergyGroup();
        }, n.prototype.prepare = function(e, t) {
            e(null);
        }, n.prototype.initKingGroup = function() {
            var t, i = 0;
            e.TutorialManager.instance.newbieTutorialing ? (t = new e.StealTarget(Robot.robotSteal), 
            i = Const.KingMoney) : (t = wheelModel.stealTarget, i = t.money), this.kingMoney.text = e.ComFunc.toThousands(i), 
            util.setRemoteAvatar(this.headImg, t.headImg), this.kingName.text = util.strSub(t.name, 6), 
            wheelModel.markStealTarget = wheelModel.stealTarget;
        }, n.prototype.refreshKing = function(e) {
            var t = this;
            if (e.data.isRefresh) {
                var i = 118, n = egret.Tween.get(this.kingGroup);
                n.to({
                    y: this.kingGroup.y + 97
                }, 400).call(function() {
                    t.initKingGroup();
                }), n.wait(400).to({
                    y: i
                }, 400);
            }
        }, n.prototype.initTurnView = function() {
            var t = wheelModel.rollerItems;
            this.turnGroup.rotation = 0;
            for (var i = "", n = 0; n < t.length; n++) {
                var o = t[n];
                switch (o.type) {
                  case Const.RollerTypeMoney:
                    i = o.value < 1e4 ? e.ComFunc.toThousands(o.value) : e.ComFunc.formatNumber(o.value);
                    break;

                  case Const.RollerTypeEnergy:
                    i = "能量";
                    break;

                  case Const.RollerTypeAttack:
                    i = "攻击";
                    break;

                  case Const.RollerTypeSteal:
                    i = "偷取";
                    break;

                  case Const.RollerTypeShield:
                    i = "护盾";
                }
                this["label" + n].text = i;
            }
        }, n.prototype.initEnergyGroup = function() {
            var e = playerModel.maxEnergy, t = playerModel.energy - e;
            t >= 0 ? (this.energy.text = playerModel.maxEnergy + "/" + e, this.fullLabel.text = "+" + t, 
            this.fullL.visible = 0 == t, this.fullLabel.visible = 0 != t) : this.energy.text = playerModel.energy + "/" + e;
            var i = playerModel.recoverEnergy;
            playerModel.monthCardExpired > 0 && (i = 8), this.addEnergy.text = "+" + i, this.addGroup.visible = 0 > t, 
            this.fullGroup.visible = t >= 0;
            var n = 126, o = playerModel.energy / playerModel.maxEnergy;
            o = o > 1 ? 1 : o, this.energeRect.x = 0, this.energeRect.y = n - n * o, this.energeRect.width = n, 
            this.energeRect.height = n, this.energyBar.mask = this.energeRect;
        }, n.prototype._countDown = function() {
            if (playerModel.energy < playerModel.maxEnergy && (playerModel.timeToRecover--, 
            this.time.text = e.ComFunc.formatTime(playerModel.timeToRecover), 0 == playerModel.timeToRecover)) {
                var t = playerModel.recoverEnergy;
                playerModel.monthCardExpired > 0 && (t = 8);
                var i = playerModel.energy + t;
                i > playerModel.maxEnergy && (i = playerModel.maxEnergy), playerModel.energy = i, 
                playerModel.energy < playerModel.maxEnergy && (playerModel.timeToRecover = 3600);
            }
        }, n.prototype.turnTapFunc = function(t) {
            soundModel.playSound(e.SoundType.SOUND_WHEEL_BUTTON_UP), this.isTouching = !1, uiModel.boater.setBtnEffect(i.Anniu_press_up, this, !0);
        }, n.prototype.turnBeginFunc = function() {
            if (soundModel.playSound(e.SoundType.SOUND_WHEEL_BUTTON_DOWN), uiModel.boater.setBtnEffect(i.Anniu_press_wait, this, !0), 
            !this.isMoving && !(playerModel.tutorial < 14 && playerModel.energy <= 0 || (playerModel.tutorial >= 14 && (this.isTouching = !0), 
            wheelModel.isRotate))) {
                if (playerModel.energy <= 0 || playerModel.energy < wheelModel.selectWheelBet) return void this.checkPopEnergyView();
                playerModel.energy -= wheelModel.selectWheelBet, this.turnFunc(!0);
            }
        }, n.prototype.turnFunc = function(t) {
            if (!wheelModel.isRotate) {
                if (!t && (playerModel.energy <= 0 || playerModel.energy < wheelModel.selectWheelBet)) return void this.checkPopEnergyView();
                this.setRotateStatus(!0), !t && playerModel.energy > 0 && (playerModel.energy -= wheelModel.selectWheelBet), 
                this.tempWheelEnergy += wheelModel.selectWheelBet, this.playEnergyWave(), this.isTurnMaskTween("begin"), 
                this.turnGroup.rotation = 0;
                var i = egret.Tween.get(this.turnGroup, {
                    loop: !0
                });
                if (i.to({
                    rotation: 360
                }, 250), soundModel.playSound(e.SoundType.SOUND_WHEEL_ROT_START, 1), this.timeOut && egret.clearTimeout(this.timeOut), 
                playerModel.tutorial < 14) {
                    if (egret.log("wheel tutorial data:" + playerModel.tutorial), this.playTurnAction(Const.guideData[playerModel.tutorial], !0), 
                    10 == playerModel.tutorial) var n = egret.setTimeout(function() {
                        egret.clearTimeout(n);
                        var t = {
                            from_name: Robot.robot1.name,
                            from_headimg: Robot.robot1.headImg,
                            action: 1,
                            values: [ 0, 0 ]
                        };
                        e.NoticeManager.notice(t);
                    }, this, 1e3);
                } else {
                    this.timeOut = egret.setTimeout(function() {
                        egret.log("旋转超时了"), hortor.TipManager.alert("网络异常，请刷新一下", function() {
                            hortor.SystemManager.isWxGame ? hortor.NotificationManager.dispatch(e.NotificationType.RELOGIN, !1) : HORTOR_AGENT.refresh();
                        });
                    }, this, 4e4);
                    var o = "uid=" + playerModel.uid + "&bet=" + wheelModel.selectWheelBet;
                    playerModel.highestCrowns >= Const.coupleLimit, HttpService.post(e.ServerMsg.ROLLER, o, this.rollerComplete, this.rollerFail, this).loadingState = !1;
                }
            }
        }, n.prototype.rollerComplete = function(t) {
            egret.clearTimeout(this.timeOut), wheelModel.newMsgCount = t.newMsgCount || 0, playerModel.petExpRemain -= 1, 
            playerModel.lastRollerType = t.rollerItem.type, (t.rollerItem.type == Const.RollerTypeAttack || t.rollerItem.type == Const.RollerTypeSteal) && playerModel.update(t), 
            t.rollerItem.type != Const.RollerTypeEnergy && t.rollerItem.type != Const.RollerTypeShield && this.initEnergyGroup(), 
            EventCenter.sendEvent(EventConst.ReportEnergyCost), wheelModel.update(t), this.playTurnAction(t.rollerItem, t), 
            _.isNumber(playerModel.rollTotalCount) && (playerModel.rollTotalCount += wheelModel.selectWheelBet), 
            guildModel.addGuildTaskValue(e.GuildProxy.roll, wheelModel.selectWheelBet), this.playPetExpMc();
        }, n.prototype.rollerFail = function() {
            this.isTouching = !1, this.setRotateStatus(!1), this.isTurnMaskTween("end"), this.timeOut && egret.clearTimeout(this.timeOut), 
            egret.Tween.removeTweens(this.turnGroup), this.turnGroup.rotation = 0, soundModel.stopSound(e.SoundType.SOUND_WHEEL_ROT_START), 
            playerModel.energy += wheelModel.selectWheelBet;
        }, n.prototype.playTurnAction = function(t, i) {
            var n = this, o = t;
            if (egret.Tween.removeTweens(this.turnGroup), this.turnGroup.rotation = 0, soundModel.stopSound(e.SoundType.SOUND_WHEEL_ROT_START), 
            soundModel.playSound(e.SoundType.SOUND_WHEEL_ROT_END), this.isTurnMaskTween("end"), 
            this.lastRotationValue = 0, this.tRotation = 3600 - 36 * o.index - this.turnGroup.rotation, 
            this.isSup = !1, i && i.rollerItem && (i.rollerItem.type == Const.RollerTypeAttack || i.rollerItem.type == Const.RollerTypeSteal || i.rollerItem.type == Const.RollerTypeShield || i.rollerItem.type == Const.RollerTypeEnergy)) {
                var a = 10 * Math.random();
                5 > a && (this.isSup = !0, this.tRotation += 27);
            }
            var r = (wheelModel.rollTweenTime - 400) / 24;
            egret.Tween.get(this.pointer).to({
                rotation: -50
            }, r).to({
                rotation: -30
            }, r).to({
                rotation: -50
            }, r).to({
                rotation: -30
            }, r).to({
                rotation: -40
            }, r).to({
                rotation: -20
            }, r).to({
                rotation: -40
            }, r).to({
                rotation: -20
            }, r).to({
                rotation: -30
            }, r).to({
                rotation: -20
            }, r).to({
                rotation: -30
            }, r).to({
                rotation: -20
            }, r).to({
                rotation: -25
            }, r).to({
                rotation: -15
            }, r).to({
                rotation: -25
            }, r).to({
                rotation: -15
            }, r).to({
                rotation: -20
            }, r).to({
                rotation: -10
            }, r).to({
                rotation: -20
            }, r).to({
                rotation: -10
            }, r).to({
                rotation: -5
            }, r).to({
                rotation: -10
            }, r).to({
                rotation: -5
            }, r).to({
                rotation: 0
            }, r).call(function() {
                egret.Tween.removeTweens(n.pointer);
            }), egret.Tween.get(this.turnGroup, {
                loop: !1
            }).to({
                rotation: this.tRotation
            }, wheelModel.rollTweenTime, egret.Ease.quintOut).call(function() {
                egret.Tween.removeTweens(n.turnGroup), n.isSup ? (egret.Tween.get(n.turnGroup).to({
                    rotation: n.turnGroup.rotation - 27
                }, 1200, egret.Ease.quadInOut).call(function() {
                    egret.Tween.removeTweens(n.turnGroup), n.rollTweenOver(t, i);
                }), egret.Tween.removeTweens(n.pointer), egret.Tween.get(n.pointer).to({
                    rotation: 10
                }, 200, egret.Ease.quadInOut).to({
                    rotation: 5
                }, 200, egret.Ease.quadInOut).to({
                    rotation: 10
                }, 200, egret.Ease.quadInOut).to({
                    rotation: 5
                }, 200, egret.Ease.quadInOut).to({
                    rotation: 0
                }, 200, egret.Ease.quadInOut).call(function() {
                    egret.Tween.removeTweens(n.pointer);
                })) : n.rollTweenOver(t, i);
            });
        }, n.prototype.rollTweenOver = function(e, t) {
            t.betCount > 1 || playerModel.doubleMoneyCard > 0 && e.type == Const.RollerTypeMoney ? this.wheelAction.playBetRateEffect(e, t) : this.wheelAction.getReward(e, t);
        }, n.prototype.checkToTurn = function() {
            this.isTouching && playerModel.energy > 0 ? this.turnFunc() : 0 == playerModel.energy && this.checkPopEnergyView();
        }, n.prototype.checkPopEnergyView = function() {
            if (enterManager.available) if (dailyModel.seniorDayShare_remainShareCount > 0 || dailyModel.seniorDayShare_boxEnergy && gateModel.guide[e.AcLockType.dailyRedBag]) hortor.WindowManager.showWindow(e.WindowType.WINDOW_FREE_ENERGY); else if (playerModel.isSubscribed || playerModel.gotNewSubscribedReward || playerModel.isAudit) !playerModel.isSubscribed || playerModel.gotNewSubscribedReward || playerModel.isAudit ? gateModel.iosPay && !playerModel.gotNewbieGift ? hortor.WindowManager.showWindow(e.WindowType.WINDOW_NEWBIE_GIFT) : gateModel.getGate(e.WindowType.WINDOW_INVITEREWARD).red ? hortor.WindowManager.showWindow(e.WindowType.WINDOW_INVITEREWARD) : hortor.WindowManager.showWindow(e.WindowType.WINDOW_FRIEND, {
                index: 0
            }) : hortor.WindowManager.showWindow(e.WindowType.WINDOW_FOCUS_REWARD_TIP); else {
                var t = gateModel.checkFocus ? e.WindowType.WINDOW_FOCUS_REWARD_TIP : e.WindowType.WINDOW_WXFOCUS_NOREWARD;
                hortor.WindowManager.showWindow(t);
            }
        }, n.prototype.setRotateStatus = function(t) {
            wheelModel.isRotate = t, t ? uiModel.onHide(e.UINameType.mainWheelBtn) : (uiModel.onShow(e.UINameType.mainWheelBtn, uiModel.boater.turnBtnGroup), 
            hortor.NotificationManager.dispatch(e.NotificationType.FACEUI_UPDATE), playerModel.island < 1 && (islandModel.ableToBuildCount ? e.AutoTipManager.startTip(e.UINameType.mainBuildBtn) : e.AutoTipManager.startTip(e.UINameType.mainWheelBtn)));
        }, n.prototype.playEnergyWave = function() {
            var t = playerModel.energy / playerModel.maxEnergy;
            t = t > 1 ? 1 : t;
            var i = 70, n = Math.floor(160 - 136 * t), o = "energyWave";
            this.waveMc ? (this.waveMc.x = i, this.waveMc.y = n, this.waveMc.play(1)) : (this.waveMc = new e.MoviePlayer(o), 
            this.mcGroup.addChild(this.waveMc), this.waveMc.x = i, this.waveMc.y = n, this.waveMc.play(1), 
            egret.log("waveMc mc width = " + this.waveMc.width + " height = " + this.waveMc.height));
        }, n.prototype.isTurnMaskTween = function(e) {
            var t = egret.Tween.get(this.turnMaskGroup);
            if ("begin" === e) t.to({
                alpha: 1
            }, 200); else {
                egret.Tween.pauseTweens(this.turnMaskGroup);
                var i = 25 * (1 - this.turnMaskGroup.alpha) || 200;
                t.to({
                    alpha: 1
                }, i).wait(1500).to({
                    alpha: 0
                }, 500), egret.Tween.resumeTweens(this.turnMaskGroup);
            }
        }, n.prototype.isShowPaoLock = function() {
            var e = !0;
            if (playerModel.island < playerModel.islandCount) for (var t = islandModel.buildings, i = 0; i < t.length; i++) {
                var n = t[i];
                if (n.level > 0) {
                    e = !1;
                    break;
                }
            } else e = !1;
            this.paoLock && (this.paoLock.visible = e);
        }, n.prototype.playPetExpMc = function() {
            if (playerModel.petName) if (this.addPetExpAr) this.addPetExpAr.play("exp", 1); else {
                var t = uiModel.getUI(e.UINameType.petGroup, !0), i = hortor.StageManager.getLayer(hortor.Layer.FACEUI);
                this.addPetExpAr = new e.ArmaturePlayer("pet_addExp"), i.addChild(this.addPetExpAr), 
                this.addPetExpAr.x = t.x + 100, this.addPetExpAr.y = t.y + 80, this.addPetExpAr.play("exp", 1), 
                egret.log("addPetExpAr width = " + this.addPetExpAr.width + " height = " + this.addPetExpAr.height);
            }
        }, n.prototype.refreshBuildRedPoint = function() {
            this.buildRedPoint.visible = islandModel.ableToBuildCount > 0;
        }, n.prototype.resetTurnGroupRotation = function() {
            this.turnGroup.rotation = 0;
        }, n.prototype.playWheelViewChangeEffect = function() {
            var t = this;
            wheelModel.isRotate = !0;
            var i = this, n = new e.ArmaturePlayer("gold_upgrade");
            i.turnGroup.addChild(n), n.x = 247, n.y = 247, n.play("gold_upgrade", 1, function() {
                n && n.parent && (n.parent.removeChild(n), n.dispose());
                for (var i = [ 0, 1, 3, 5, 6, 8 ], o = function(n) {
                    egret.Tween.get(t["label" + i[n]]).wait(300 * n).call(function() {
                        egret.Tween.removeTweens(t["label" + i[n]]), util.setScale(t["label" + i[n]], 2), 
                        t["label" + i[n]].text = e.ComFunc.formatNumber(wheelModel.rollerItems[i[n]].value), 
                        egret.Tween.get(t["label" + i[n]]).to({
                            scaleX: 1,
                            scaleY: 1
                        }, 300, egret.Ease.bounceOut).call(function() {
                            n == i.length - 1 && (wheelModel.isRotate = !1, wheelModel.markRollerItems = null), 
                            egret.Tween.removeTweens(t["label" + i[n]]);
                        });
                    });
                }, a = 0; a < i.length; a++) o(a);
            });
        }, n.prototype.toBuildRedPointOpen = function() {
            playerModel.island >= playerModel.islandCount || this.refreshBuildRedPoint();
        }, n.prototype.toBuildRedPointClose = function() {
            this.refreshBuildRedPoint();
        }, n;
    }(e.ScreenBase);
    e.WheelScreen = t, __reflect(t.prototype, "game.WheelScreen");
    var i = function() {
        function e() {}
        return e.Anniu_up = "anniu_up", e.Anniu_press = "anniu_press", e.Anniu_down = "anniu_down", 
        e.Anniu_press_wait = "anniu_press_wait", e.Anniu_press_up = "anniu_press_up", e.Anniu_build_up = "build_up", 
        e.Anniu_build_down = "build_down", e.Anniu_build_idle = "build_idle", e.Anniu_gun_up = "gun_up", 
        e.Anniu_gun_send = "gun_send", e.Anniu_gun_down = "gun_down", e.Anniu_gun_filling = "gun_filling", 
        e;
    }();
    e.WheelBtnType = i, __reflect(i.prototype, "game.WheelBtnType");
}(game || (game = {}));

var game;

!function(e) {
    var t = function() {
        function t(t) {
            this.bottomY = -88, this.mainX = 0, this._startPosX = 0, this.isTouchBegin = !1, 
            this._moving = !1, this.screen = t, t.addEventListener(egret.TouchEvent.TOUCH_BEGIN, this.touchBegin, this), 
            t.addEventListener(egret.TouchEvent.TOUCH_MOVE, this.touchMove, this), t.addEventListener(egret.TouchEvent.TOUCH_END, this.touchEnd, this), 
            t.toBuildGroup.addEventListener(egret.TouchEvent.TOUCH_TAP, this.toIsland, this), 
            hortor.NotificationManager.add(EventConst.IslandMoveBack, this.wheelMove, this), 
            hortor.NotificationManager.add(e.NotificationType.ISLAND_WHEEL_TO_ATTACK, this.wheelToAttack, this), 
            hortor.NotificationManager.add(e.NotificationType.ISLAND_ATTACK_TO_WHEEL, this.attackToWheel, this), 
            hortor.NotificationManager.add(e.NotificationType.WHEEL_TO_ISLAND, this.toIsland, this), 
            EventCenter.addEventListener(EventConst.WheelForStealBack, this.stealToWheel, this), 
            EventCenter.addEventListener("stealTest", this.wheelToSteal, this);
        }
        return t.prototype.touchBegin = function(e) {
            playerModel.tutorial < 14 || (this._startPosX = e.stageX, this.isTouchBegin = !0);
        }, t.prototype.touchMove = function(e) {
            if (!(playerModel.tutorial < 14) && !wheelModel.isRotate && this.isTouchBegin && 2 != islandModel.islandStatus) {
                var t = this._startPosX - e.stageX;
                !this._moving && t > 30 && (this.isTouchBegin = !1, this.toIsland());
            }
        }, t.prototype.touchEnd = function(e) {
            playerModel.tutorial < 14 || wheelModel.isRotate || this.isTouchBegin && 2 != islandModel.islandStatus && !this._moving && this._startPosX - e.stageX > 50 && (this.isTouchBegin = !1, 
            this.toIsland());
        }, t.prototype.toIsland = function() {
            var t = this;
            if (!wheelModel.isRotate || e.TutorialManager.instance.newbieTutorialing) {
                15 == playerModel.tutorial && e.TutorialManager.instance.completeStep("newbie", 36, 15), 
                soundModel.playSound(e.SoundType.SOUND_VIEW_SWITCH_OUT), this._moving = !0, this.screen.onLeave(), 
                islandModel.islandStatus = e.IslandStatus.BUILD, hortor.NotificationManager.dispatch(EventConst.IslandMove), 
                hortor.NotificationManager.dispatch(e.NotificationType.BG_ADJUST, {
                    isUp: !0
                });
                var i = this.screen.mainGroup;
                egret.Tween.removeTweens(i), egret.Tween.get(i).to({
                    horizontalCenter: -640
                }, Const.tweenTime1, egret.Ease.quadInOut).call(function() {
                    i.visible = !1, t._moving = !1, egret.Tween.removeTweens(i);
                }), uiModel.boater.setBtnEffect(e.WheelBtnType.Anniu_down, this, !0), playerModel.gainIslandReward && uiModel.boater.boaterDown();
            }
        }, t.prototype.wheelMove = function(t) {
            var i = this;
            void 0 === t && (t = !1), this._moving = !0, uiModel.boater.registButtonFunc(this.screen.turnBeginFunc.bind(this.screen), this.screen.turnTapFunc.bind(this.screen), this.screen.turnTapFunc.bind(this.screen));
            var n = this.screen.mainGroup;
            n.visible = !0, egret.Tween.removeTweens(n);
            var o = t ? 0 : Const.tweenTime1;
            egret.Tween.get(n).to({
                horizontalCenter: 0
            }, o, egret.Ease.quadInOut).call(function() {
                egret.Tween.removeTweens(n), i._moving = !1, i.screen.onEnter(), islandModel.islandStatus = e.IslandStatus.SMALL, 
                uiModel.boater.setBtnEffect(e.WheelBtnType.Anniu_up, i, !0), uiModel.boater.boaterUp(), 
                wheelModel.markRollerItems && i.screen.playWheelViewChangeEffect();
            });
        }, t.prototype.wheelToSteal = function() {
            var t = this;
            this._moving = !0, islandModel.islandStatus = e.IslandStatus.ATTACKORSTEAL, hortor.NotificationManager.dispatch(e.NotificationType.ISLAND_WHEEL_TO_STEAL), 
            hortor.NotificationManager.dispatch(e.NotificationType.BG_CLOUD_GO);
            var i = this.screen.mainGroup;
            egret.Tween.removeTweens(i), egret.Tween.get(i).to({
                horizontalCenter: -640
            }, Const.tweenTime1, egret.Ease.quadInOut).call(function() {
                egret.Tween.removeTweens(i), t._moving = !1, hortor.WindowManager.showWindow(e.WindowType.WINDOW_STEAL, {
                    posX: 960
                });
            });
            var n = this.screen;
            n.isMoving = !0, this.screen.onLeave(), uiModel.boater.setBtnEffect(e.WheelBtnType.Anniu_down, this, !0), 
            uiModel.boater.boaterDown();
        }, t.prototype.stealToWheel = function(t) {
            var i = this;
            void 0 === t && (t = !1), this._moving = !0, hortor.NotificationManager.dispatch(e.NotificationType.ISLAND_STEAL_TO_WHEEL, t), 
            islandModel.islandStatus = e.IslandStatus.SMALL;
            var n = this.screen;
            n.isMoving = !1, uiModel.boater.setBtnEffect(e.WheelBtnType.Anniu_up, this, !0), 
            uiModel.boater.boaterUp(function() {
                hortor.NotificationManager.dispatch(EventConst.WheelForSteal, {
                    isShow: !0
                }), i.screen.onEnter();
            });
            var o = this.screen.mainGroup, a = t ? 0 : Const.tweenTime1;
            egret.Tween.removeTweens(o), egret.Tween.get(o).to({
                horizontalCenter: 0
            }, a, egret.Ease.quadInOut).call(function() {
                i._moving = !1, egret.Tween.removeTweens(o), shopModel.mysticalOpen && (shopModel.mysticalOpen = !1, 
                hortor.WindowManager.showWindow(e.WindowType.WINDOW_MYSTICAL_ENERGY_WHEEL));
            }), playerModel.lastRollerType = 0, n.setRotateStatus(!1), hortor.NotificationManager.dispatch(EventConst.WheelForSteal, {
                isShow: !0
            });
        }, t.prototype.wheelToAttack = function() {
            var t = this;
            islandModel.islandStatus = e.IslandStatus.ATTACKORSTEAL, this.screen.onLeave(), 
            this._moving = !0, uiModel.boater.setBtnEffect(e.WheelBtnType.Anniu_down, this, !0), 
            hortor.NotificationManager.dispatch(e.NotificationType.BG_ADJUST, {
                isUp: !0
            }), hortor.NotificationManager.dispatch(e.NotificationType.BG_CLOUD_GO);
            var i = this.screen.mainGroup;
            egret.Tween.removeTweens(i), egret.Tween.get(i).to({
                horizontalCenter: -640
            }, Const.tweenTime1, egret.Ease.quadInOut).call(function() {
                t._moving = !1, egret.Tween.removeTweens(i), hortor.WindowManager.currentWindow = e.WindowType.WINDOW_ATTACK_ISLAND, 
                uiModel.boater.registButtonFunc(), uiModel.boater.setBtnEffect(e.WheelBtnType.Anniu_gun_up, t, !0);
            });
        }, t.prototype.attackToWheel = function(t) {
            var i = this;
            void 0 === t && (t = !1), playerModel.lastRollerType = 0, this.screen.setRotateStatus(!1), 
            islandModel.islandStatus = e.IslandStatus.SMALL, this._moving = !0, hortor.NotificationManager.dispatch(e.NotificationType.BG_ADJUST, {
                isUp: !1,
                reset: t
            });
            var n = this.screen.mainGroup, o = t ? 0 : Const.tweenTime1;
            egret.Tween.removeTweens(n), egret.Tween.get(n).to({
                horizontalCenter: 0
            }, o, egret.Ease.quadInOut).call(function() {
                egret.Tween.removeTweens(n), i._moving = !1, shopModel.mysticalOpen && (shopModel.mysticalOpen = !1, 
                hortor.WindowManager.showWindow(e.WindowType.WINDOW_MYSTICAL_ENERGY_WHEEL)), i.screen.onEnter();
            }), uiModel.boater.setBtnEffect(e.WheelBtnType.Anniu_up, this, !0), uiModel.boater.boaterUp(), 
            uiModel.boater.registButtonFunc(this.screen.turnBeginFunc.bind(this.screen), this.screen.turnTapFunc.bind(this.screen), this.screen.turnTapFunc.bind(this.screen));
        }, t;
    }();
    e.WheelToIsland = t, __reflect(t.prototype, "game.WheelToIsland");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e.isPause = !1, e.type = "friend", e.shareTicket = "", e._startPosY = 0, 
            e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.inviteMask.addEventListener(egret.TouchEvent.TOUCH_BEGIN, this.touchBegin, this), 
            this.inviteMask.addEventListener(egret.TouchEvent.TOUCH_END, this.touchEnd, this), 
            this.inviteBtn.addEventListener(egret.TouchEvent.TOUCH_TAP, this.inviteBtnFunc, this);
        }, i.prototype.onData = function() {
            var t = this, i = this;
            i.type = this.data.type, i.shareTicket = this.data.shareTicket, i.isPause = !0;
            var n = egret.setTimeout(function() {
                egret.clearTimeout(n), i.isPause = !1, t.showView();
            }, this, 500), o = wx.getOpenDataContext();
            o.postMessage({
                isDisplay: !1,
                viewType: "rejust",
                width: e.WxSystemInfo.windowWidth * e.WxSystemInfo.pixelRatio,
                height: e.WxSystemInfo.windowHeight * e.WxSystemInfo.pixelRatio
            }), o.postMessage({
                isDisplay: !1,
                viewType: "start"
            }), o.postMessage({
                isDisplay: !0,
                viewType: i.type,
                uid: playerModel.uid,
                shareTicket: i.shareTicket
            });
        }, i.prototype.prepare = function(e, t) {
            e(null);
        }, i.prototype.onClose = function() {
            var e = wx.getOpenDataContext();
            e.postMessage({
                isDisplay: !1,
                viewType: "stop"
            }), egret.stopTick(this.tickFunc, this), this.bitmap && (console.log("删除 _view.bitmap ====="), 
            this.bitmap.parent && this.bitmap.parent.removeChild(this.bitmap));
        }, i.prototype.touchBegin = function(e) {
            this._startPosY = e.stageY;
        }, i.prototype.touchEnd = function(e) {
            Math.abs(this._startPosY - e.stageY) < 6 && this.inviteMaskFunc();
        }, i.prototype.showView = function() {
            if (this) {
                this.bitmapdata = new egret.BitmapData(window.sharedCanvas), this.bitmapdata.$deleteSource = !1;
                var e = new egret.Texture();
                e._setBitmapData(this.bitmapdata), this.bitmap = new egret.Bitmap(e), this.mainGroup.addChild(this.bitmap), 
                egret.startTick(this.tickFunc, this);
            }
        }, i.prototype.tickFunc = function(e) {
            return this.bitmapdata && (egret.WebGLUtils.deleteWebGLTexture(this.bitmapdata.webGLTexture), 
            this.bitmapdata.webGLTexture = null), !1;
        }, i.prototype.inviteMaskFunc = function() {
            soundModel.buttonOpen(), e.PlatformManager.share(e.ShareType.wanbanInvite);
        }, i.prototype.inviteBtnFunc = function() {
            e.PlatformManager.share(e.ShareType.groupRank);
        }, i;
    }(hortor.Window);
    e.WxFriendWindow = t, __reflect(t.prototype, "game.WxFriendWindow");
}(game || (game = {}));

var TcpService, game;

!function(e) {
    var t = function() {
        function t() {
            this.messageNormal = new hortor.TCPService(), this.registMessage(e.ActionNotifyHandler), 
            this.registMessage(e.ActionAttackHandler), this.registMessage(e.ActionStealHandler), 
            this.registMessage(e.ActionShopHandler), this.registMessage(e.ActionWantedHandler), 
            this.registMessage(e.ActionDonateHandler), this.registMessage(e.ActionFriendHandler), 
            this.registMessage(e.ActionJigsawHandler), this.registMessage(e.ActionKillTitanHandler), 
            this.registMessage(e.ActionCashHandler), this.registMessage(e.ActionRaceHandler), 
            this.registMessage(e.ActionPrivateChatHandler), this.registMessage(e.ActionSendMailHandler), 
            this.registMessage(e.ActionRecallHandler), this.registMessage(e.ActionTreasureHandler), 
            this.registMessage(e.ActionOctopusHandler), this.registMessage(e.ActionGuildHandler), 
            this.registMessage(e.ActionBeachHandler), this.registMessage(e.ActionEnergyFullHandler), 
            this.registMessage(e.ActionImpeachHandler), this.registMessage(e.ActionAchievementHandler), 
            this.registMessage(e.ActionBeachRandomHandler), this.registMessage(e.ActionRecruitHandler), 
            this.registMessage(e.ActionCashShopHandler), this.registMessage(e.ActionMysticalHandler), 
            this.registMessage(e.ActionMoonCakeHandler), this.registMessage(e.ActionAnnualCollectHandler), 
            this.registMessage(e.ActionAnnualBalloonHandler), this.registMessage(e.ActionLuckyBoxHandler), 
            this.registMessage(e.ActionAnnualHandler), this.registMessage(e.ActionTreeHandler), 
            this.registMessage(e.ActionFlowerHandler), this.registMessage(e.ActionPlaneHandler), 
            this.registMessage(e.ActionKiteHandler), this.registMessage(e.ActionActivityRecallHandler), 
            this.registMessage(e.ActionOpenDayShareHandler), this.registMessage(e.ActionShieldEnergyHandler), 
            this.registMessage(e.ActionTreasureMapHandler), this.registMessage(e.ActionDragonBoatHandler), 
            this.registMessage(e.ActionTreeShareHelpPushHandler), this.registMessage(e.ActionBeachShipwreckHandler), 
            this.registMessage(e.ActionWorldCupHelpPushHandler), this.registMessage(e.ActionHelpGiftHandler), 
            this.registMessage(e.ActionCrewPushHandler), this.registMessage(e.ActionWorldChatHandler), 
            this.registMessage(e.ActionPushHandler), this.registMessage(e.ActionLuffyHandler), 
            this.registMessage(e.ActionMonthCardHandler), this.registMessage(e.ActionRunningGiftHandler), 
            this.registMessage(e.ActionNewbieGiftHandler), this.registMessage(e.ActionFocusRewardHandler);
        }
        return t.prototype.connect = function(e, t, i) {
            this.messageNormal.connectByUrl(e, t);
        }, t.prototype.close = function() {
            this.messageNormal.close();
        }, t.prototype.registMessage = function(e) {
            this.messageNormal.registerReciever(new e());
        }, t;
    }();
    e.MessageManager = t, __reflect(t.prototype, "game.MessageManager");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.registObservers = function() {
            this.register(21, this.ActionAchievement, this);
        }, i.prototype.ActionAchievement = function(t) {
            e.NewPlayerAchievementWindow.redPoint = t.values[0] > 0, gateModel.updateGate(e.WindowType.WINDOW_ACHIEVE);
        }, i;
    }(hortor.AbstractMessageReceiver);
    e.ActionAchievementHandler = t, __reflect(t.prototype, "game.ActionAchievementHandler");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(e) {
        function t() {
            return null !== e && e.apply(this, arguments) || this;
        }
        return __extends(t, e), t.prototype.registObservers = function() {
            this.register(40, this.ActionActivityRecall, this);
        }, t.prototype.ActionActivityRecall = function(e) {
            2 == e.values[0];
        }, t;
    }(hortor.AbstractMessageReceiver);
    e.ActionActivityRecallHandler = t, __reflect(t.prototype, "game.ActionActivityRecallHandler");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.registObservers = function() {
            this.register(30, this.ActionAnnualBalloon, this);
        }, i.prototype.ActionAnnualBalloon = function(t) {
            if (hortor.Log.log("气球,data", t), 1 == t.values[0]) {
                var i = {};
                i[t.goodsId] = t.values[1];
                var n = 0 == (t.values.length > 2 ? t.values[2] : 0);
                hortor.WindowManager.showWindow(e.WindowType.WINDOW_FESTIVALBALLOON, {
                    reward: i,
                    isvideo: n
                });
            }
        }, i;
    }(hortor.AbstractMessageReceiver);
    e.ActionAnnualBalloonHandler = t, __reflect(t.prototype, "game.ActionAnnualBalloonHandler");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.registObservers = function() {
            this.register(29, this.ActionAnnualCollect, this);
        }, i.prototype.ActionAnnualCollect = function(e) {
            this.dealAnnualCollect(e);
        }, i.prototype.dealAnnualCollect = function(t) {
            if (2 == t.values[0]) {
                AnnualMarkData.shareFontId = t.values[2], AnnualData.annualCollect.bags[t.values[1] - 1] += 1;
                var i = 2 == t.values[3] ? 1500 : 3e3, n = egret.setTimeout(function() {
                    egret.clearTimeout(n);
                    var i = {};
                    i["annualCollect" + t.values[1]] = 1, e.ComFunc.getPopReward("annualCollect" + t.values[1], 1);
                }, this, i);
            } else 3 == t.values[0] ? this.dealOpenBox(t) : 4 == t.values[0] && (1 == t.values[1] ? AnnualMarkData.annualCollectPoint = !0 : 2 == t.values[1] ? AnnualMarkData.luckyBoxPoint = !0 : 3 == t.values[1] ? AnnualMarkData.annualRebatePoint = !0 : 4 == t.values[1] && (AnnualMarkData.annualCollectNewsPoint = !0), 
            gateModel.updateGate(e.WindowType.WINDOW_ANNUAL_MAIN));
        }, i.prototype.dealOpenBox = function(t) {
            var i = hortor.WindowManager.getWindow(e.WindowType.WINDOW_ANNUALBOX);
            i && i.dealWsMessage(t);
        }, i;
    }(hortor.AbstractMessageReceiver);
    e.ActionAnnualCollectHandler = t, __reflect(t.prototype, "game.ActionAnnualCollectHandler");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(e) {
        function t() {
            return null !== e && e.apply(this, arguments) || this;
        }
        return __extends(t, e), t.prototype.registObservers = function() {
            this.register(33, this.ActionAnnual, this);
        }, t.prototype.ActionAnnual = function(e) {}, t;
    }(hortor.AbstractMessageReceiver);
    e.ActionAnnualHandler = t, __reflect(t.prototype, "game.ActionAnnualHandler");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.registObservers = function() {
            this.register(1, this.ActionAttack, this);
        }, i.prototype.ActionAttack = function(t) {
            e.NoticeManager.notice(t);
        }, i;
    }(hortor.AbstractMessageReceiver);
    e.ActionAttackHandler = t, __reflect(t.prototype, "game.ActionAttackHandler");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(e) {
        function t() {
            return null !== e && e.apply(this, arguments) || this;
        }
        return __extends(t, e), t.prototype.registObservers = function() {
            this.register(18, this.ActionBeach, this);
        }, t.prototype.ActionBeach = function(e) {}, t.prototype.collectionFunc = function(e) {}, 
        t.prototype.refreshFunc = function(e) {}, t.prototype.cheerFunc = function(e) {}, 
        t.prototype.potionFunc = function(e) {}, t;
    }(hortor.AbstractMessageReceiver);
    e.ActionBeachHandler = t, __reflect(t.prototype, "game.ActionBeachHandler");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(e) {
        function t() {
            return null !== e && e.apply(this, arguments) || this;
        }
        return __extends(t, e), t.prototype.registObservers = function() {
            this.register(22, this.ActionBeachRandom, this);
        }, t.prototype.ActionBeachRandom = function(e) {}, t;
    }(hortor.AbstractMessageReceiver);
    e.ActionBeachRandomHandler = t, __reflect(t.prototype, "game.ActionBeachRandomHandler");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(e) {
        function t() {
            return null !== e && e.apply(this, arguments) || this;
        }
        return __extends(t, e), t.prototype.registObservers = function() {
            this.register(46, this.ActionBeachShipwreck, this);
        }, t.prototype.ActionBeachShipwreck = function(e) {}, t;
    }(hortor.AbstractMessageReceiver);
    e.ActionBeachShipwreckHandler = t, __reflect(t.prototype, "game.ActionBeachShipwreckHandler");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(e) {
        function t() {
            return null !== e && e.apply(this, arguments) || this;
        }
        return __extends(t, e), t.prototype.registObservers = function() {
            this.register(9, this.ActionCash, this);
        }, t.prototype.ActionCash = function(e) {}, t;
    }(hortor.AbstractMessageReceiver);
    e.ActionCashHandler = t, __reflect(t.prototype, "game.ActionCashHandler");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(e) {
        function t() {
            return null !== e && e.apply(this, arguments) || this;
        }
        return __extends(t, e), t.prototype.registObservers = function() {
            this.register(24, this.ActionCashShop, this);
        }, t.prototype.ActionCashShop = function(e) {}, t;
    }(hortor.AbstractMessageReceiver);
    e.ActionCashShopHandler = t, __reflect(t.prototype, "game.ActionCashShopHandler");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.registObservers = function() {
            this.register(537, this.ActionCP, this);
        }, i.prototype.ActionCP = function(e) {
            switch (e.goodsId) {
              case "jade":
                break;

              case "privity":
                this.privityFunc(e);
                break;

              case "cpReply":
                this.cpReplyFunc(e);
                break;

              case "cpRemove":
                this.cpRemoveFunc(e);
                break;

              case "coupleShield":
                this.coupleShieldFunc(e);
            }
        }, i.prototype.privityFunc = function(e) {}, i.prototype.cpReplyFunc = function(e) {}, 
        i.prototype.cpRemoveFunc = function(e) {}, i.prototype.coupleShieldFunc = function(t) {
            e.NoticeManager.notice(t);
        }, i;
    }(hortor.AbstractMessageReceiver);
    e.ActionCPHandler = t, __reflect(t.prototype, "game.ActionCPHandler");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(e) {
        function t() {
            return null !== e && e.apply(this, arguments) || this;
        }
        return __extends(t, e), t.prototype.registObservers = function() {
            this.register(49, this.ActionCrewPush, this);
        }, t.prototype.ActionCrewPush = function(e) {}, t;
    }(hortor.AbstractMessageReceiver);
    e.ActionCrewPushHandler = t, __reflect(t.prototype, "game.ActionCrewPushHandler");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(e) {
        function t() {
            return null !== e && e.apply(this, arguments) || this;
        }
        return __extends(t, e), t.prototype.registObservers = function() {
            this.register(5, this.ActionDonate, this);
        }, t.prototype.ActionDonate = function(e) {}, t;
    }(hortor.AbstractMessageReceiver);
    e.ActionDonateHandler = t, __reflect(t.prototype, "game.ActionDonateHandler");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(e) {
        function t() {
            return null !== e && e.apply(this, arguments) || this;
        }
        return __extends(t, e), t.prototype.registObservers = function() {
            this.register(44, this.ActionDragonBoat, this);
        }, t.prototype.ActionDragonBoat = function(e) {}, t;
    }(hortor.AbstractMessageReceiver);
    e.ActionDragonBoatHandler = t, __reflect(t.prototype, "game.ActionDragonBoatHandler");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(e) {
        function t() {
            return null !== e && e.apply(this, arguments) || this;
        }
        return __extends(t, e), t.prototype.registObservers = function() {
            this.register(19, this.ActionEnergyFull, this);
        }, t.prototype.ActionEnergyFull = function(e) {}, t;
    }(hortor.AbstractMessageReceiver);
    e.ActionEnergyFullHandler = t, __reflect(t.prototype, "game.ActionEnergyFullHandler");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(e) {
        function t() {
            return null !== e && e.apply(this, arguments) || this;
        }
        return __extends(t, e), t.prototype.registObservers = function() {
            this.register(37, this.ActionFlower, this);
        }, t.prototype.ActionFlower = function(e) {
            1 == e.values[0] ? this.dealGetFlower(e) : 0 == e.values[0] ? this.getFlowerForWheel(e) : 2 == e.values[0] ? this.dealSendLotFlower(e) : 3 == e.values[0];
        }, t.prototype.dealGetFlower = function(e) {}, t.prototype.dealSendLotFlower = function(e) {}, 
        t.prototype.getFlowerForWheel = function(e) {}, t;
    }(hortor.AbstractMessageReceiver);
    e.ActionFlowerHandler = t, __reflect(t.prototype, "game.ActionFlowerHandler");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.registObservers = function() {
            this.register(541, this.ActionFocusReward, this);
        }, i.prototype.ActionFocusReward = function(t) {
            hortor.WindowManager.showWindow(e.WindowType.WINDOW_REWARD, t);
        }, i;
    }(hortor.AbstractMessageReceiver);
    e.ActionFocusRewardHandler = t, __reflect(t.prototype, "game.ActionFocusRewardHandler");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.registObservers = function() {
            this.register(6, this.ActionFriend, this);
        }, i.prototype.ActionFriend = function(e) {
            switch (e.values[0]) {
              case 0:
                this.applyFriend(e);
                break;

              case 1:
                this.agreeFriend(e);
                break;

              case 2:
                this.rejectFriend(e);
                break;

              case 3:
                this.inviteFriend(e);
            }
            EventCenter.sendEvent(EventConst.MenuRedPoint);
        }, i.prototype.applyFriend = function(t) {
            playerModel.requestsLength++, EventCenter.sendEvent(EventConst.updateNewFriendList), 
            EventCenter.sendEvent(EventConst.ReceiveNotification, [ e.NotificationMainType.friend_request, e.NotificationSubType.none, t ]), 
            RegressGiftProxy.checkAddFriend && RegressGiftProxy.AddFriendRequestsLen++, gateModel.updateGate(e.WindowType.WINDOW_FRIEND), 
            EventCenter.sendEvent(EventConst.RefreshApplyShow);
        }, i.prototype.agreeFriend = function(e) {
            EventCenter.sendEvent(EventConst.updateFriendList);
        }, i.prototype.rejectFriend = function(e) {}, i.prototype.inviteFriend = function(e) {
            e.values[1] && this.inviteVip(e), e.values[2] && this.inviteGift(e), this.inviteAllInOne(e);
        }, i.prototype.inviteVip = function(t) {
            var i = _.isNumber(playerModel.inviteFriendVIPRemain);
            i && playerModel.inviteFriendVIPRemain > 0 && (playerModel.inviteFriendVIPCount = t.values[1], 
            playerModel.inviteFriendVIPCount >= 3 && (playerModel.inviteFriendVIPRemain = 0, 
            gateModel.updateGate(e.WindowType.WINDOW_INVITE_VIP), EventCenter.sendEvent(EventConst.RefreshWheelRedPoint)));
        }, i.prototype.inviteGift = function(t) {
            var i = activityModel.getActivityInfo(e.ActivityType.inviteGift);
            i && 0 == i.beginRemain && i.endRemain > 0 && !i.playerData.hasBuy && (i.playerData.inviteeCount = t.values[2], 
            i.playerData.inviteeCount >= i.playerData.inviteCountConf);
        }, i.prototype.inviteAllInOne = function(e) {
            playerModel.inviteFirendToday || (playerModel.inviteFirendToday = !0, playerModel.inviteFriendCount++);
        }, i;
    }(hortor.AbstractMessageReceiver);
    e.ActionFriendHandler = t, __reflect(t.prototype, "game.ActionFriendHandler");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.registObservers = function() {
            this.register(17, this.ActionGuild, this);
        }, i.prototype.ActionGuild = function(t) {
            return 8 == t.values[0] ? this.welfareFunc() : 9 == t.values[0] ? this.signFunc(t) : 10 == t.values[0] && this.openWelFareFunc(t), 
            "join" == t.goodsId && t.from_uid == playerModel.uid ? void this.selfJoinGuild(t) : "quit" == t.goodsId && t.from_uid == playerModel.uid ? void this.selfQuitGuild(t) : void (0 != e.GuildData.members.length && (1 == t.values[0] ? this.chatGuild(t) : 2 == t.values[0] ? this.donateGuild(t) : 3 == t.values[0] ? this.addDonateMsg(t) : 4 == t.values[0] ? this.delDonateMsg(t) : 5 == t.values[0] ? this.sysMessage(t) : 6 == t.values[0] ? this.getDonate(t) : 7 == t.values[0] ? this.raceEnroll(t) : 11 == t.values[0] ? this.dealGuildSystems("guildGift", t) : 12 == t.values[0] ? this.dealGuildSystems("impeach", t) : 13 == t.values[0] && this.dealGuildSystems("newCommander", t)));
        }, i.prototype.welfareFunc = function() {
            e.GuildCache.GuildFeedbackRedPoint || (e.GuildCache.GuildFeedbackRedPoint = !0, 
            e.GuildCache.GuildWelfareRedPoint = e.GuildUtils.getWelfareRedPoint(), EventCenter.sendEvent(EventConst.refreshGuildRedPoint), 
            gateModel.updateGate(e.ScreenType.GUILD_SCREEN)), hortor.WindowManager.isOpen(e.WindowType.WINDOW_GUILD_WELFARE) && HttpService.get(e.ServerMsg.GUILD_SHOW_DAILY_WELFARE, {
                uid: playerModel.uid
            }, function(t) {
                e.GuildDailyWelfareData = t, hortor.WindowManager.isOpen(e.WindowType.WINDOW_GUILD_FEEDBACK) && hortor.NotificationManager.dispatch(e.NotificationType.GUILD_FEEDBACK_REFFRESH);
            });
        }, i.prototype.signFunc = function(t) {
            e.GuildCache.GuildAttendancesRedPoint || 5 != t.values[1] && (10 != t.values[1] || 20 != t.values[1]) || (e.GuildCache.GuildAttendancesRedPoint = !0, 
            e.GuildCache.GuildWelfareRedPoint = e.GuildUtils.getWelfareRedPoint(), EventCenter.sendEvent(EventConst.refreshGuildRedPoint), 
            gateModel.updateGate(e.ScreenType.GUILD_SCREEN)), hortor.WindowManager.isOpen(e.WindowType.WINDOW_GUILD_WELFARE) && (e.GuildDailyWelfareData.attendance = t.values[1], 
            hortor.NotificationManager.dispatch(e.NotificationType.GUILD_WELFARE_BOXESGROUP));
        }, i.prototype.openWelFareFunc = function(t) {
            if (t.from_uid != playerModel.uid && hortor.WindowManager.isOpen(e.WindowType.WINDOW_GUILD_WELFARE)) {
                var i = t.goodsId.split("#")[0], n = t.goodsId.split("#")[1], o = t.values[1] - 1, a = t.values[2], r = _.findIndex(e.GuildDailyWelfareData.feedbacks, function(e) {
                    return e.orderId == n;
                });
                if (_.isNumber(r) && r >= 0) {
                    var s = e.GuildDailyWelfareData.feedbacks[r].honorees[o];
                    s.uid = t.from_uid, s.name = t.from_name, s.type = i, s.value = a, EventCenter.sendEvent(EventConst.refreshFeedbackNode, {
                        orderId: n,
                        idx: o
                    });
                }
            }
        }, i.prototype.selfJoinGuild = function(t) {
            playerModel.guild.gid = t.values[1], hortor.ScreenManager.isOpen(e.ScreenType.GUILD_JOINSCREEN) && hortor.ScreenManager.back(), 
            HttpService.get(e.ServerMsg.GUILD_SHOW, {
                uid: playerModel.uid,
                gid: playerModel.guild.gid,
                showMsg: !0
            }, function(t) {
                e.GuildCache.GuildSignRedPoint = !playerModel.guild.gotDailySign, e.GuildCache.GuildWelfareRedPoint = e.GuildUtils.getWelfareRedPoint(), 
                e.GuildUtils.initSlotsRedPoint(t.slots), EventCenter.sendEvent(EventConst.refreshGuildRedPoint), 
                gateModel.updateGate(e.ScreenType.GUILD_SCREEN);
            });
        }, i.prototype.selfQuitGuild = function(t) {
            EventCenter.sendEvent(EventConst.quitGuild), playerModel.guild.gid = 0, e.GuildData.members = [], 
            e.GuildCache.Messages = [], e.GuildCache.NewMessages = [], e.GuildCache.Systems = [], 
            e.GuildCache.Donates = [], e.GuildCache.Members = {}, e.GuildCache.GuildTimer = 0, 
            e.GuildCache.GuildToIsland = !1, e.GuildCache.GuildRedPoint = !0, e.GuildCache.DonateSlotsRedPoint = !1, 
            e.GuildCache.DonateNewsRedPoint = !1, e.GuildCache.NewsRedPoint = !1, e.GuildCache.GuildWelfareRedPoint = !1, 
            e.GuildCache.GuildApplyRedPoint = !1, e.GuildCache.GuildTaskRedPoint = !1, e.GuildCache.GuildNewMessageRedPoint = !1, 
            gateModel.updateGate(e.ScreenType.GUILD_SCREEN), hortor.TipManager.alert("您已离开海盗团!");
        }, i.prototype.chatGuild = function(t) {
            var i = {
                msgId: t.values[0],
                uid: t.from_uid,
                name: t.from_name,
                headImg: t.from_headimg,
                crowns: e.GuildCache.Members[t.from_uid] ? e.GuildCache.Members[t.from_uid].crowns : 0,
                isVip: e.GuildCache.Members[t.from_uid] ? e.GuildCache.Members[t.from_uid].isVip : !1,
                gender: e.GuildCache.Members[t.from_uid] ? e.GuildCache.Members[t.from_uid].gender : 0,
                isPrivilege: e.GuildCache.Members[t.from_uid] ? e.GuildCache.Members[t.from_uid].isPrivilege : !1,
                content: t.goodsId,
                createdTime: t.values[3] || moment().unix(),
                position: t.values[1] || 0,
                type: t.goodsId,
                value: "",
                num: t.values[2],
                remainTime: 86400
            };
            e.GuildCache.NewMessages.push(i), 1 == e.GuildCache.NewMessages.length && (hortor.ScreenManager.isOpen(e.ScreenType.GUILD_SCREEN) ? (EventCenter.sendEvent(EventConst.guildChatMsg), 
            0 != guildModel.selectGuildIndex && (e.GuildCache.GuildNewMessageRedPoint = !0, 
            EventCenter.sendEvent(EventConst.refreshGuildRedPoint), gateModel.updateGate(e.ScreenType.GUILD_SCREEN))) : (e.GuildCache.GuildNewMessageRedPoint = !0, 
            EventCenter.sendEvent(EventConst.refreshGuildRedPoint), gateModel.updateGate(e.ScreenType.GUILD_SCREEN)));
        }, i.prototype.donateGuild = function(t) {
            for (var i = 0; i < e.GuildCache.Donates.length; i++) if (e.GuildCache.Donates[i].uid == t.from_uid && e.GuildCache.Donates[i].position == t.values[1]) return;
            var n = {
                uid: t.from_uid,
                position: t.values[1] || 0,
                type: t.goodsId,
                num: t.values[2],
                remainTime: 86400 + e.GuildCache.GuildTimer,
                createdTime: t.values[3] || moment().unix()
            };
            e.GuildCache.Donates.push(n), e.GuildCache.DonateNewsRedPoint = jigsawModel.jigsawInfo.bags[t.values[2] - 1] > 0 && t.from_uid != playerModel.uid, 
            EventCenter.sendEvent(EventConst.refreshGuildRedPoint), gateModel.updateGate(e.ScreenType.GUILD_SCREEN);
            var o = {
                msgId: t.values[0],
                uid: t.from_uid,
                name: t.from_name,
                headImg: t.from_headimg,
                crowns: e.GuildCache.Members[t.from_uid] ? e.GuildCache.Members[t.from_uid].crowns : 0,
                gender: e.GuildCache.Members[t.from_uid] ? e.GuildCache.Members[t.from_uid].gender : 0,
                content: t.goodsId,
                createdTime: t.values[3] || moment().unix(),
                position: t.values[1] || 0,
                type: t.goodsId,
                value: "",
                num: t.values[2],
                remainTime: 86400
            };
            e.GuildCache.NewMessages.push(o), 1 == e.GuildCache.NewMessages.length && EventCenter.sendEvent(EventConst.guildChatMsg);
        }, i.prototype.addDonateMsg = function(e) {
            var t = {
                uid: e.from_uid,
                slot: e.values[1],
                createdTime: e.values[2]
            };
            EventCenter.sendEvent(EventConst.guildDeleteMessage, t);
        }, i.prototype.delDonateMsg = function(t) {
            if (t.values[1] == playerModel.uid) {
                var i = e.GuildData.slots[t.values[2] - 1];
                i.donator = t.from_uid, i.remainTime = 0, i.status = 3;
            }
            var n = {
                uid: t.values[1],
                slot: t.values[2],
                createdTime: t.values[3]
            };
            EventCenter.sendEvent(EventConst.guildDeleteMessage, n);
        }, i.prototype.sysMessage = function(t) {
            var i = {
                uid: t.from_uid,
                name: t.from_name,
                headImg: t.from_headimg,
                type: t.goodsId,
                value: t.values[1] || 0,
                createdTime: t.values[3] || moment().unix()
            };
            e.GuildCache.Systems.push(i);
            var n = {
                type: t.goodsId,
                duty: e.GuildUtils.getGuildDuty(t.values[1]),
                name: t.from_name
            }, o = e.GuildUtils.getGuildNews(n), a = {
                msgId: t.values[0],
                uid: t.from_uid,
                name: t.from_name,
                headImg: t.from_headimg,
                crowns: e.GuildCache.Members[t.from_uid] ? e.GuildCache.Members[t.from_uid].crowns : 0,
                gender: e.GuildCache.Members[t.from_uid] ? e.GuildCache.Members[t.from_uid].gender : 0,
                content: o,
                createdTime: t.values[3] || moment().unix(),
                position: t.values[1] || 0,
                type: t.goodsId,
                value: "",
                num: t.values[2],
                remainTime: 86400
            };
            switch (e.GuildCache.NewMessages.push(a), 1 == e.GuildCache.NewMessages.length && EventCenter.sendEvent(EventConst.guildChatMsg), 
            t.goodsId) {
              case "authorize":
                this.authorizeMes(t);
                break;

              case "quit":
                this.quitMes(t);
                break;

              case "join":
                this.joinMes(t);
                break;

              default:
                this.newsMes(t);
            }
        }, i.prototype.authorizeMes = function(t) {
            if (t.to_uid == playerModel.uid && hortor.WindowManager.isOpen(e.WindowType.WINDOW_GUILD_SETTING) && hortor.WindowManager.hideWindow(e.WindowType.WINDOW_GUILD_SETTING), 
            t.to_uid == playerModel.uid && hortor.WindowManager.isOpen(e.WindowType.WINDOW_GUILD_POSTION) && hortor.WindowManager.hideWindow(e.WindowType.WINDOW_GUILD_POSTION), 
            15 == t.values[1]) for (var i in e.GuildCache.Members) if (15 == e.GuildCache.Members[i].authority) {
                e.GuildCache.Members[i].authority = 0;
                break;
            }
            e.GuildCache.Members[t.from_uid] && (e.GuildCache.Members[t.from_uid].authority = t.values[1]), 
            EventCenter.sendEvent(EventConst.refreshGuildNoticeBtn), EventCenter.sendEvent(EventConst.GuildDutyChange);
        }, i.prototype.quitMes = function(t) {
            e.GuildCache.Members = _.omit(e.GuildCache.Members, t.from_uid + "");
            var i = {
                uid: t.from_uid,
                slot: 1,
                createdTime: 0
            };
            EventCenter.sendEvent(EventConst.guildDeleteMessage, i);
            var n = {
                uid: t.from_uid,
                slot: 2,
                createdTime: 0
            };
            EventCenter.sendEvent(EventConst.guildDeleteMessage, n);
            var o = _.findIndex(e.GuildData.members, function(e) {
                return e.uid == t.from_uid;
            });
            _.isNumber(o) && o >= 0 && (e.GuildData.members.splice(o, 1), EventCenter.sendEvent(EventConst.GuildQuitMem));
        }, i.prototype.joinMes = function(t) {
            HttpService.get(e.ServerMsg.GUILD_SHOW, {
                uid: playerModel.uid,
                gid: playerModel.guild.gid,
                showMsg: !1
            }, function(t) {
                e.GuildData = t;
                for (var i = 0; i < t.members.length; i++) e.GuildCache.Members[t.members[i].uid] = t.members[i];
                e.GuildCache.Donates = t.donates, EventCenter.sendEvent(EventConst.GuildQuitMem);
            });
        }, i.prototype.newsMes = function(t) {
            var i = {
                type: t.goodsId,
                duty: e.GuildUtils.getGuildDuty(t.values[1]),
                name: t.from_name
            }, n = e.GuildUtils.getGuildNews(i), o = {
                msgId: t.values[0],
                uid: t.from_uid,
                name: t.from_name,
                headImg: t.from_headimg,
                crowns: e.GuildCache.Members[t.from_uid] ? e.GuildCache.Members[t.from_uid].crowns : 0,
                gender: e.GuildCache.Members[t.from_uid] ? e.GuildCache.Members[t.from_uid].gender : 0,
                content: n,
                createdTime: t.values[3] || moment().unix(),
                position: t.values[1] || 0,
                type: t.goodsId,
                value: "",
                num: t.values[2],
                remainTime: 86400
            };
            e.GuildCache.NewMessages.push(o), 1 == e.GuildCache.NewMessages.length && EventCenter.sendEvent(EventConst.guildChatMsg);
        }, i.prototype.getDonate = function(t) {
            var i = {
                uid: t.from_uid,
                name: t.from_name,
                headImg: t.from_headimg,
                type: "donate",
                value: "领取了" + t.goodsId + "赠送的拼图碎片" + t.values[1],
                createdTime: t.values[3] || moment().unix()
            };
            e.GuildCache.Systems.push(i);
            var n = {
                type: "donate",
                name: t.from_name,
                value: i.value
            }, o = e.GuildUtils.getGuildNews(n), a = {
                msgId: 5,
                content: o
            };
            e.GuildCache.NewMessages.push(a), 1 == e.GuildCache.NewMessages.length && EventCenter.sendEvent(EventConst.guildChatMsg);
        }, i.prototype.raceEnroll = function(t) {
            var i = t.values[1] + "", n = (i.substr(0, 4), i.substr(4, 6), {
                uid: t.from_uid,
                name: t.from_name,
                headImg: t.from_headimg,
                type: "raceEnroll",
                value: t.values[1],
                createdTime: t.values[2] || moment().unix()
            });
            e.GuildCache.Systems.push(n);
            var o = {
                type: "raceEnroll",
                name: t.from_name,
                value: n.value
            }, a = e.GuildUtils.getGuildNews(o), r = {
                msgId: 5,
                content: a
            };
            e.GuildCache.NewMessages.push(r), 1 == e.GuildCache.NewMessages.length && EventCenter.sendEvent(EventConst.guildChatMsg);
        }, i.prototype.dealGuildSystems = function(t, i) {
            var n = {
                uid: i.from_uid,
                name: i.from_name,
                headImg: i.from_headimg,
                type: t,
                value: i.goodsId || "",
                createdTime: i.values[2] || moment().unix()
            };
            e.GuildCache.Systems.push(n);
            var o = {
                type: t || "",
                duty: e.GuildUtils.getGuildDuty(i.values[1]),
                name: i.from_name,
                value: i.goodsId || ""
            }, a = e.GuildUtils.getGuildNews(o), r = {
                msgId: 5,
                uid: i.from_uid,
                name: i.from_name,
                headImg: i.from_headimg,
                crowns: e.GuildCache.Members[i.from_uid] ? e.GuildCache.Members[i.from_uid].crowns : 0,
                gender: e.GuildCache.Members[i.from_uid] ? e.GuildCache.Members[i.from_uid].gender : 0,
                content: a,
                createdTime: i.values[2] || moment().unix(),
                position: 0,
                type: t || "",
                value: i.goodsId || "",
                num: 0,
                remainTime: 0
            };
            e.GuildCache.NewMessages.push(r), 1 == e.GuildCache.NewMessages.length && EventCenter.sendEvent(EventConst.guildChatMsg);
        }, i;
    }(hortor.AbstractMessageReceiver);
    e.ActionGuildHandler = t, __reflect(t.prototype, "game.ActionGuildHandler");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(e) {
        function t() {
            return null !== e && e.apply(this, arguments) || this;
        }
        return __extends(t, e), t.prototype.registObservers = function() {
            this.register(48, this.ActionHelpGift, this);
        }, t.prototype.ActionHelpGift = function(e) {}, t;
    }(hortor.AbstractMessageReceiver);
    e.ActionHelpGiftHandler = t, __reflect(t.prototype, "game.ActionHelpGiftHandler");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(e) {
        function t() {
            return null !== e && e.apply(this, arguments) || this;
        }
        return __extends(t, e), t.prototype.registObservers = function() {
            this.register(20, this.ActionImpeach, this);
        }, t.prototype.ActionImpeach = function(e) {}, t;
    }(hortor.AbstractMessageReceiver);
    e.ActionImpeachHandler = t, __reflect(t.prototype, "game.ActionImpeachHandler");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.registObservers = function() {
            this.register(7, this.ActionJigsaw, this);
        }, i.prototype.ActionJigsaw = function(e) {
            0 == e.from_uid ? this.getJigsaw(e) : this.getFriendJigsaw(e);
        }, i.prototype.getJigsaw = function(t) {
            jigsawModel.jigsawInfo.bags[t.values[0] - 1]++;
            var i = "jigsaw" + (t.values[0] - 1);
            3 == t.values[1] ? egret.setTimeout(function() {
                e.ComFunc.getPopReward(i, t.values[2]);
            }, this, 300) : 5 == t.values[1] ? egret.setTimeout(function() {
                e.ComFunc.getPopReward(i, t.values[2]);
            }, this, 3e3) : egret.setTimeout(function() {
                e.ComFunc.getPopReward(i, t.values[2]);
            }, this, 1500), gateModel.updateGate(e.ActivityType.Jigsaw), hortor.WindowManager.isOpen(e.WindowType.WINDOW_JIGSAW) && hortor.NotificationManager.dispatch(EventConst.sendJigsaw);
        }, i.prototype.getFriendJigsaw = function(t) {
            jigsawModel.newJigsawNews = !0, gateModel.updateGate(e.ActivityType.Jigsaw), EventCenter.sendEvent(EventConst.ReceiveNotification, [ e.NotificationMainType.receive_donate, e.NotificationSubType.jigsaw, t ]);
        }, i;
    }(hortor.AbstractMessageReceiver);
    e.ActionJigsawHandler = t, __reflect(t.prototype, "game.ActionJigsawHandler");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.registObservers = function() {
            this.register(8, this.ActionKillTitan, this);
        }, i.prototype.ActionKillTitan = function(e) {
            "invite" == e.goodsId && this.inviteFunc(e), "attack" == e.goodsId && this.attackFunc(e), 
            "enter" == e.goodsId && this.enterFunc(e);
        }, i.prototype.inviteFunc = function(e) {
            if (!TaptitansProxy.hasKillTitanInvited()) {
                playerModel.invitedToKillTitan = !0, playerModel.invitedActivityId = e.values[0], 
                EventCenter.sendEvent(EventConst.refreshTaptitansBtnPoint);
                var t = e.from_name || "", i = t + "邀请你去挑战寄居蟹";
                hortor.TipManager.tip(i);
            }
        }, i.prototype.attackFunc = function(t) {
            var i = hortor.ScreenManager.getScreen(e.ScreenType.KILLTITAN_SCREEN), n = hortor.ScreenManager.isOpen(e.ScreenType.KILLTITAN_SCREEN);
            if (i && n) {
                if (TaptitansInfo && TaptitansInfo.info && TaptitansInfo.info.tid != t.values[0]) return;
                i.actionDataDamage(t);
            }
        }, i.prototype.enterFunc = function(t) {
            var i = hortor.ScreenManager.getScreen(e.ScreenType.KILLTITAN_SCREEN), n = hortor.ScreenManager.isOpen(e.ScreenType.KILLTITAN_SCREEN);
            i && n && i.actionDataEnter(t);
        }, i;
    }(hortor.AbstractMessageReceiver);
    e.ActionKillTitanHandler = t, __reflect(t.prototype, "game.ActionKillTitanHandler");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.registObservers = function() {
            this.register(39, this.ActionKite, this);
        }, i.prototype.ActionKite = function(t) {
            0 == t.values[0] ? this.getKiteGift(t) : 1 == t.values[0] ? this.dealAssistPush(t) : 2 == t.values[0] && (KiteFunc.hasSendMsg = t.values[1] > 0, 
            t.values[1] > 0 && EventCenter.sendEvent(EventConst.ReceiveNotification, [ e.NotificationMainType.receive_donate, e.NotificationSubType.kite, t ]));
        }, i.prototype.getKiteGift = function(t) {
            for (var i = [ 0, 0, 0, 0, 0 ], n = 1; n < t.values.length; n++) {
                var o = t.values[n];
                i[o]++;
            }
            var a = "kiteGift0", r = i[0];
            i[0] > 0 && (a = "kiteGift0", r = i[0]), i[1] > 0 && (a = "kiteGift1", r = i[1]), 
            i[2] > 0 && (a = "kiteGift2", r = i[2]), i[3] > 0 && (a = "kiteGift3", r = i[3]), 
            i[4] > 0 && (a = "kiteGift4", r = i[4]);
            var s = egret.setTimeout(function() {
                egret.clearTimeout(s), e.ComFunc.getPopReward(a, r);
            }, this, 3e3);
        }, i.prototype.dealAssistPush = function(t) {
            if (hortor.ScreenManager.isOpen(e.ScreenType.KITE_SCREEN)) {
                hortor.TipManager.tip(t.from_name + "给助力你风筝飞的更高");
                var i = hortor.ScreenManager.getScreen(e.ScreenType.KITE_SCREEN);
                i.assistPushUpdate(t.from_uid, t.from_name, t.from_headimg, t.values[1]), i.updateAssist();
            }
        }, i;
    }(hortor.AbstractMessageReceiver);
    e.ActionKiteHandler = t, __reflect(t.prototype, "game.ActionKiteHandler");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(e) {
        function t() {
            return null !== e && e.apply(this, arguments) || this;
        }
        return __extends(t, e), t.prototype.registObservers = function() {
            this.register(32, this.ActionLuckyBox, this);
        }, t.prototype.ActionLuckyBox = function(e) {
            if (1 == e.values[0]) {
                var t = {};
                t.name = e.from_name, t.type = e.goodsId, t.nums = e.values[1], AnnualMarkData.luckyBoxLogs.length > 22 && AnnualMarkData.luckyBoxLogs.splice(0, 1), 
                AnnualMarkData.luckyBoxLogs.push(t);
            }
        }, t;
    }(hortor.AbstractMessageReceiver);
    e.ActionLuckyBoxHandler = t, __reflect(t.prototype, "game.ActionLuckyBoxHandler");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(e) {
        function t() {
            return null !== e && e.apply(this, arguments) || this;
        }
        return __extends(t, e), t.prototype.registObservers = function() {
            this.register(200, this.ActionLuffy, this);
        }, t.prototype.ActionLuffy = function(e) {
            console.log("pirateking event: " + JSON.stringify(e));
        }, t.prototype.getDiceForWheel = function(e) {}, t;
    }(hortor.AbstractMessageReceiver);
    e.ActionLuffyHandler = t, __reflect(t.prototype, "game.ActionLuffyHandler");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.registObservers = function() {
            this.register(538, this.ActionMonthCard, this);
        }, i.prototype.ActionMonthCard = function(t) {
            0 == t.values[0] ? playerModel.gotMonthCardReward = !1 : 1 == t.values[0] && (playerModel.gotMonthCardReward = !0), 
            gateModel.updateGate(e.WindowType.WINDOW_MONTHCARD), playerModel.energy += 30, playerModel.maxEnergy = 60, 
            playerModel.hornCount += 10, playerModel.monthCardExpired += 2592e3, gateModel.updateGate(e.WindowType.WINDOW_MONTHCARD), 
            EventCenter.sendEvent(EventConst.RefreshWheelRedPoint), EventCenter.sendEvent(EventConst.EnergyChange), 
            hortor.WindowManager.hideWindow(e.WindowType.WINDOW_SHOP), hortor.WindowManager.hideWindow(e.WindowType.WINDOW_MONTHCARD);
            var i = {
                energy: 30,
                horn: 10
            };
            hortor.WindowManager.showWindow(e.WindowType.WINDOW_REWARD, i), hortor.WindowManager.isOpen(e.WindowType.WINDOW_MAIN_MENU) && hortor.WindowManager.getWindow(e.WindowType.WINDOW_MAIN_MENU).initVipIcon(), 
            console.log("ljz/todo:藏宝图界面购买VIP及时刷新宝箱状态 ");
        }, i;
    }(hortor.AbstractMessageReceiver);
    e.ActionMonthCardHandler = t, __reflect(t.prototype, "game.ActionMonthCardHandler");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(e) {
        function t() {
            return null !== e && e.apply(this, arguments) || this;
        }
        return __extends(t, e), t.prototype.registObservers = function() {
            this.register(26, this.ActionMoonCake, this);
        }, t.prototype.ActionMoonCake = function(e) {}, t;
    }(hortor.AbstractMessageReceiver);
    e.ActionMoonCakeHandler = t, __reflect(t.prototype, "game.ActionMoonCakeHandler");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.registObservers = function() {
            this.register(25, this.ActionMystical, this);
        }, i.prototype.ActionMystical = function(e) {
            console.log("神秘商店支付：", e), gateModel.iosPay && (2 == e.values[0] ? this.showMystical(e) : 3 == e.values[0] && this.paySuccess(e));
        }, i.prototype.showMystical = function(t) {
            if (soundModel.playSound(e.SoundType.SOUND_MYSTICALSHOP), playerModel.hasMystical = !0, 
            gateModel.update(e.WindowType.WINDOW_MYSTICAL_ENERGY_WHEEL), playerModel.lastRollerType == Const.RollerTypeAttack || playerModel.lastRollerType == Const.RollerTypeSteal) return void (shopModel.mysticalOpen = !0);
            var i = 0;
            3 == t.values[1] && (i = wheelModel.rollTweenTime + 100);
            var n = egret.setTimeout(function() {
                egret.clearTimeout(n), hortor.WindowManager.showWindow(e.WindowType.WINDOW_MYSTICAL_ENERGY_WHEEL);
            }, this, i);
        }, i.prototype.paySuccess = function(t) {
            3 == t.values[2] && hortor.NotificationManager.dispatch(e.NotificationType.MYSTICAL_ENERGY_WHEEL_PAY);
        }, i;
    }(hortor.AbstractMessageReceiver);
    e.ActionMysticalHandler = t, __reflect(t.prototype, "game.ActionMysticalHandler");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.registObservers = function() {
            this.register(539, this.ActionNewbieGift, this);
        }, i.prototype.ActionNewbieGift = function(t) {
            playerModel.gotNewbieGift = !0, gateModel.updateGate(e.WindowType.WINDOW_NEWBIE_GIFT), 
            playerModel.energy += 30, playerModel.money += 1e6, playerModel.allInOnePiece += 1, 
            hortor.WindowManager.hideWindow(e.WindowType.WINDOW_NEWBIE_GIFT), hortor.TipManager.alert("支付成功，获得了1M金币、30能量和万能碎片1张", function() {
                EventCenter.sendEvent(EventConst.GuideOver), EventCenter.sendEvent(EventConst.GoldChange), 
                EventCenter.sendEvent(EventConst.EnergyChange), EventCenter.sendEvent(EventConst.RefreshWheelRedPoint), 
                playerModel.gotNewbieGift && _.isNull(playerModel.speedGiftRemain) && HttpService.post(e.ServerMsg.SPEED_GIFT, "uid=" + playerModel.uid, function(t) {
                    playerModel.speedGiftRemain = t.speedGiftRemain, gateModel.updateGate(e.WindowType.WINDOW_RUNNINGGIFT);
                });
            });
        }, i;
    }(hortor.AbstractMessageReceiver);
    e.ActionNewbieGiftHandler = t, __reflect(t.prototype, "game.ActionNewbieGiftHandler");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(e) {
        function t() {
            return null !== e && e.apply(this, arguments) || this;
        }
        return __extends(t, e), t.prototype.registObservers = function() {
            this.register(0, this.ActionNotify, this);
        }, t.prototype.ActionNotify = function(e) {
            var t = e.values;
            t[0] = 1;
        }, t;
    }(hortor.AbstractMessageReceiver);
    e.ActionNotifyHandler = t, __reflect(t.prototype, "game.ActionNotifyHandler");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.registObservers = function() {
            this.register(16, this.ActionOctopus, this);
        }, i.prototype.ActionOctopus = function(e) {
            switch (e.values[0]) {
              case 0:
                this.getPuffer(e);
                break;

              case 1:
                this.hitByFriend(e);
                break;

              case 2:
                this.getOctopusProps(e);
                break;

              case 3:
                this.refreshOctopus(e);
                break;

              case 4:
                this.dealOpenOctopusBox(e);
                break;

              case 5:
            }
        }, i.prototype.getPuffer = function(t) {
            var i = egret.setTimeout(function() {
                egret.clearTimeout(i);
                var n = activityModel.getActivityInfo(e.ActivityType.Octopus), o = gateModel.guide;
                o[e.AcLockType.octopus] && n ? e.ComFunc.getPopReward("puffer", t.values[1]) : this.checkOctopus();
            }, this, 3e3);
        }, i.prototype.checkOctopus = function() {
            HttpService.get(e.ServerMsg.GUIDE_ACTIVITY, "uid=" + playerModel.uid, function(t) {
                activityModel.update(t), e.OpenFuncManager.checkAll();
            });
        }, i.prototype.hitByFriend = function(t) {
            var i = hortor.ScreenManager.getScreen(e.ScreenType.OCTOPUS_SCREEN);
            i && i.showOtherBombEffect(t), t.to_uid == playerModel.uid && t.values[1] == playerModel.uid && (octopusModel.octopusMessageRedPoint = !0, 
            gateModel.updateGate(e.ActivityType.Octopus));
        }, i.prototype.getOctopusProps = function(t) {
            octopusModel.octopusLogRedPoint = !0, gateModel.updateGate(e.ActivityType.Octopus), 
            EventCenter.sendEvent(EventConst.ReceiveNotification, [ e.NotificationMainType.receive_donate, e.NotificationSubType.octopus, t ]);
        }, i.prototype.refreshOctopus = function(t) {
            var i = hortor.ScreenManager.getScreen(e.ScreenType.OCTOPUS_SCREEN);
            i && t.values[1] != playerModel.uid && octopusModel.octopusInfo.uid == t.values[1] && HttpService.post(e.ServerMsg.OCTOPUS_ENTER, "uid=" + playerModel.uid + "&fid=" + t.values[1], function(e) {
                i && i.dropGroupUp(), octopusModel.update(e), EventCenter.sendEvent(EventConst.OctopusRefresh, {
                    useLolly: !0
                }), EventCenter.sendEvent(EventConst.OctopusUp);
                var t = egret.setTimeout(function() {
                    egret.clearTimeout(t), i && (i.showDropView(), i.dropGroupDown());
                }, this, 500);
            });
        }, i.prototype.dealOpenOctopusBox = function(e) {}, i;
    }(hortor.AbstractMessageReceiver);
    e.ActionOctopusHandler = t, __reflect(t.prototype, "game.ActionOctopusHandler");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(e) {
        function t() {
            return null !== e && e.apply(this, arguments) || this;
        }
        return __extends(t, e), t.prototype.registObservers = function() {
            this.register(41, this.ActionOpenDayShare, this);
        }, t.prototype.ActionOpenDayShare = function(e) {}, t;
    }(hortor.AbstractMessageReceiver);
    e.ActionOpenDayShareHandler = t, __reflect(t.prototype, "game.ActionOpenDayShareHandler");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(e) {
        function t() {
            return null !== e && e.apply(this, arguments) || this;
        }
        return __extends(t, e), t.prototype.registObservers = function() {
            this.register(38, this.ActionPlane, this);
        }, t.prototype.ActionPlane = function(e) {}, t;
    }(hortor.AbstractMessageReceiver);
    e.ActionPlaneHandler = t, __reflect(t.prototype, "game.ActionPlaneHandler");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.registObservers = function() {
            this.register(11, this.ActionPrivateChat, this);
        }, i.prototype.ActionPrivateChat = function(e) {
            this.dealPersonMessage(e);
        }, i.prototype.dealPersonMessage = function(t) {
            console.log("data ========", t), 2 == t.values[0] && EventCenter.sendEvent(EventConst.ReceiveNotification, [ e.NotificationMainType.exchange_request, e.NotificationSubType.none, t ]), 
            5 == t.values[0] && EventCenter.sendEvent(EventConst.ReceiveNotification, [ e.NotificationMainType.exchange_success, e.NotificationSubType.none, t ]), 
            0 != chatModel.PersonInfo.uid && chatModel.PersonInfo.uid == t.from_uid ? this.chatingFunc(t) : this.chatedFunc(t);
        }, i.prototype.chatingFunc = function(t) {
            var i = {
                uid: t.from_uid,
                content: t.goodsId,
                createTime: t.values[1],
                reportCount: t.values[2],
                province: t.province,
                city: t.city,
                isPrivilege: t.isPrivilege
            };
            switch (t.values[0]) {
              case 1:
                EventCenter.sendEvent(EventConst.recvPrivateChatMsg, {
                    msg: i,
                    needUpdateAlert: !1
                });
                break;

              case 2:
                this.swapSendFunc(i);
                break;

              case 5:
                this.swapAcceptFunc(i);
                break;

              case 3:
                this.swapFinishFunc(t, i);
                break;

              case 4:
                this.swapFinishFunc(t, i);
                break;

              case 6:
                i.content = "我已领取，交换成功！", this.swapFinishFunc(t, i);
                break;

              case 7:
                chatModel.ChatPersonCache.NewMessages.push(i);
            }
            var n = chatModel.ChatCache.chatPrivateList.indexOf(t.from_uid);
            hortor.WindowManager.isOpen(e.WindowType.WINDOW_PRIVATE_CHAT) ? n > -1 && (HttpService.post(e.ServerMsg.CHAT_READ_PRIVATE_MSG, "uid=" + playerModel.uid + "&fid=" + t.from_uid, function() {}), 
            chatModel.ChatCache.chatPrivateList.splice(n, 1)) : 0 > n && chatModel.ChatCache.chatPrivateList.push(t.from_uid), 
            chatModel.updatePrivateChatListRedPointStatus();
        }, i.prototype.swapSendFunc = function(e) {
            chatModel.PersonInfo.swapSponsor = chatModel.PersonInfo.uid, chatModel.PersonInfo.swapState = 1, 
            EventCenter.sendEvent(EventConst.recvPrivateChatMsg, {
                msg: e,
                needUpdateAlert: !0
            });
        }, i.prototype.swapAcceptFunc = function(e) {
            var t = playerModel.dailyEventInfo;
            t.swapCount++, t.swapCount = t.swapCount > 5 ? 5 : t.swapCount, chatModel.PersonInfo.swapSponsor = playerModel.uid, 
            chatModel.PersonInfo.swapState = 3, EventCenter.sendEvent(EventConst.recvPrivateChatMsg, {
                msg: e,
                needUpdateAlert: !0
            });
        }, i.prototype.swapFinishFunc = function(t, i) {
            if ((3 == t.values[0] || 4 == t.values[0]) && hortor.WindowManager.isOpen(e.WindowType.WINDOW_EXCHANGE) && hortor.WindowManager.hideWindow(e.WindowType.WINDOW_EXCHANGE), 
            chatModel.PersonInfo.swapSponsor = 0, chatModel.PersonInfo.swapState = 0, EventCenter.sendEvent(EventConst.recvPrivateChatMsg, {
                msg: i,
                needUpdateAlert: !1
            }), 4 == t.values[0] && t.values[2] && t.values[2] > 0) {
                var n = t.values[2] - 1, o = jigsawModel.jigsawInfo.bags;
                o[n]++, hortor.NotificationManager.dispatch(EventConst.sendJigsaw);
            }
            6 == t.values[0] && EventCenter.sendEvent(EventConst.ReportExchange);
        }, i.prototype.chatedFunc = function(e) {
            var t = _.findIndex(chatModel.ChatCache.PrivateMsgList, function(t) {
                return t.uid == e.from_uid;
            }), i = chatModel.ChatCache.chatPrivateList.indexOf(e.from_uid);
            0 > i && chatModel.ChatCache.chatPrivateList.push(e.from_uid), _.isNumber(t) && t >= 0 ? this.addNewMsg(e) : this.pushNewMsg(e), 
            chatModel.updatePrivateChatListRedPointStatus();
        }, i.prototype.addNewMsg = function(t) {
            for (var i = 0; i < chatModel.ChatCache.PrivateMsgList.length; i++) if (chatModel.ChatCache.PrivateMsgList[i].uid == t.from_uid) {
                chatModel.ChatCache.PrivateMsgList[i].isNew = !0, chatModel.ChatCache.PrivateMsgList[i].content = t.goodsId, 
                chatModel.ChatCache.PrivateMsgList[i].updateTime = moment().unix(), chatModel.ChatCache.PrivateMsgList[i].province = t.province, 
                chatModel.ChatCache.PrivateMsgList[i].city = t.city;
                break;
            }
            chatModel.ChatCache.chatBtnPoint = !0, hortor.WindowManager.isOpen(e.WindowType.WINDOW_PRIVATE_CHAT_LIST) && EventCenter.sendEvent(EventConst.refreshChatPrivateList);
        }, i.prototype.pushNewMsg = function(t) {
            HttpService.get(e.ServerMsg.CHAT_PRIVATE_LIST, "uid=" + playerModel.uid, function(t) {
                chatModel.ChatCache.PrivateMsgList = t.messages, chatModel.ChatCache.chatBtnPoint = !0, 
                hortor.WindowManager.isOpen(e.WindowType.WINDOW_PRIVATE_CHAT_LIST) && EventCenter.sendEvent(EventConst.refreshChatPrivateList);
            });
        }, i;
    }(hortor.AbstractMessageReceiver);
    e.ActionPrivateChatHandler = t, __reflect(t.prototype, "game.ActionPrivateChatHandler");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.registObservers = function() {
            this.register(88, this.ActionPush, this);
        }, i.prototype.ActionPush = function(e) {
            var t = [ "octopus", "donate", "jigsaw", "guildDonate", "guildTask", "guildJoinedRequest", "guildRace", "chatPrivate", "beachDot", "guildWelfare", "friendRewards", "kite", "shopGiftPackage", "cityFriend", "recall", "dayShare", "newDayShare", "mailTip", "treasureMap", "tree", "worldCup", "crew", "daily", "coupleMessage", "kiteRedDot" ], i = _.find(t, function(t) {
                return e.goodsId == t;
            });
            i && this[i + "Func"](e);
        }, i.prototype.kiteRedDotFunc = function(e) {
            KiteFunc.kiteMenuRedStatus = !0;
        }, i.prototype.octopusFunc = function(t) {
            octopusModel.octopusLogRedPoint = 1 == t.values[1], octopusModel.octopusMessageRedPoint = 1 == t.values[2], 
            gateModel.updateGate(e.ActivityType.Octopus);
        }, i.prototype.donateFunc = function(e) {}, i.prototype.jigsawFunc = function(t) {
            jigsawModel.newJigsawNews = !!t.values[1], gateModel.updateGate(e.ActivityType.Jigsaw);
        }, i.prototype.guildDonateFunc = function(e) {}, i.prototype.guildTaskFunc = function(t) {
            if (e.GuildCache.TaskList = [], e.GuildCache.TaskHasOver = [], 1 == t.values[1] && (e.GuildCache.GuildTaskRedPoint = !0, 
            EventCenter.sendEvent(EventConst.refreshGuildRedPoint), gateModel.updateGate(e.ScreenType.GUILD_SCREEN)), 
            13 == t.values.length) {
                if (0 == e.GuildCache.TaskList.length) for (var i = 1; 11 > i; i++) {
                    var n = 1 << i;
                    (t.values[1] & n) > 0 && e.GuildCache.TaskList.push(i);
                }
                for (var o = 1; 11 > o; o++) {
                    var n = 1 << o;
                    (t.values[2] & n) > 0 && e.GuildCache.TaskHasOver.push(o);
                }
                if (0 == e.GuildCache.TaskNeedValue.length) {
                    e.GuildCache.TaskNeedValue[0] = -1;
                    for (var a = 3; a < t.values.length; a++) e.GuildCache.TaskNeedValue.push(t.values[a]);
                }
                e.GuildCache.GuildTaskRedPoint = guildModel.checkGuildTaskRedPoint(), EventCenter.sendEvent(EventConst.refreshGuildRedPoint), 
                gateModel.updateGate(e.ScreenType.GUILD_SCREEN);
            }
        }, i.prototype.guildJoinedRequestFunc = function(t) {
            e.GuildCache.GuildApplyRedPoint = !!t.values[1], EventCenter.sendEvent(EventConst.refreshGuildRedPoint), 
            gateModel.updateGate(e.ScreenType.GUILD_SCREEN);
        }, i.prototype.guildRaceFunc = function(t) {
            1 == t.values[0] ? (e.GuildCache.GuildSailingRewardRedPoint = !0, EventCenter.sendEvent(EventConst.refreshGuildRedPoint), 
            gateModel.updateGate(e.ScreenType.GUILD_SCREEN)) : (e.GuildCache.GuildSailingRedPoint = !0, 
            EventCenter.sendEvent(EventConst.refreshGuildRedPoint), gateModel.updateGate(e.ScreenType.GUILD_SCREEN));
        }, i.prototype.chatPrivateFunc = function(t) {
            chatModel.ChatCache.chatPrivateList = t.values.slice(2), chatModel.updatePrivateChatListRedPointStatus(), 
            EventCenter.sendEvent(EventConst.ReceiveNotification, [ e.NotificationMainType.login_msg, e.NotificationSubType.none, t ]);
        }, i.prototype.beachDotFunc = function(t) {
            e.BeachCache.rewardRedPoint = 1 == t.values[0], e.BeachCache.workersRedPoint = 1 == t.values[1], 
            e.BeachCache.newsRedPoint = 1 == t.values[2], e.BeachCache.refreshRedPoint = 1 == t.values[4], 
            e.BeachCache.rewardNewsRedPoint = 1 == t.values[5];
        }, i.prototype.guildWelfareFunc = function(t) {
            e.GuildCache.GuildAttendancesRedPoint = t.values[1] > 0, e.GuildCache.GuildFeedbackRedPoint = t.values[2] > 0, 
            e.GuildCache.GuildWelfareRedPoint = e.GuildUtils.getWelfareRedPoint(), EventCenter.sendEvent(EventConst.refreshGuildRedPoint), 
            gateModel.updateGate(e.ScreenType.GUILD_SCREEN);
        }, i.prototype.friendRewardsFunc = function(e) {}, i.prototype.kiteFunc = function(e) {
            KiteFunc.hasSendMsg = e.values[1] > 0;
        }, i.prototype.shopGiftPackageFunc = function(t) {
            shopModel.newGift = !0, gateModel.updateGate(e.WindowType.WINDOW_SHOP);
        }, i.prototype.recallFunc = function(e) {}, i.prototype.dayShareFunc = function(e) {}, 
        i.prototype.newDayShareFunc = function(e) {}, i.prototype.mailTipFunc = function(e) {
            hortor.TipManager.tip("您有新的消息，请注意查收！");
        }, i.prototype.treasureMapFunc = function(e) {}, i.prototype.treeFunc = function(t) {
            TreeFunc.redPoint = !0, gateModel.updateGate(e.ActivityType.tree);
        }, i.prototype.worldCupFunc = function(e) {}, i.prototype.crewFunc = function(e) {}, 
        i.prototype.dailyFunc = function(t) {
            initModel.signRedPoint = !0, gateModel.updateGate(e.WindowType.WINDOW_DAILY_SIGN);
        }, i.prototype.coupleMessageFunc = function(e) {}, i.prototype.cityFriendFunc = function(e) {}, 
        i;
    }(hortor.AbstractMessageReceiver);
    e.ActionPushHandler = t, __reflect(t.prototype, "game.ActionPushHandler");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.registObservers = function() {
            this.register(10, this.ActionRace, this);
        }, i.prototype.ActionRace = function(e) {
            this.dealSailingTask(e);
        }, i.prototype.dealSailingTask = function(t) {
            t.from_uid != t.to_uid && (3 == t.values[0] ? EventCenter.sendEvent(EventConst.SailingCloseTask, {
                uid: t.from_uid
            }) : 1 == t.values[0] ? EventCenter.sendEvent(EventConst.SailingGetTask, {
                head: t.from_headimg,
                name: t.from_name,
                uid: t.from_uid,
                tid: t.values[1]
            }) : 2 == t.values[0] ? EventCenter.sendEvent(EventConst.SailingTearUpTask, {
                tid: t.values[1],
                obj: JSON.parse(t.goodsId),
                tearUpRemain: t.values[2],
                tearUpRemainSpecial: t.values[3]
            }) : 4 == t.values[0] ? (e.GuildCache.GuildSailingFirstOpenPoint = !0, hortor.NotificationManager.dispatch(e.NotificationType.SailingRefreshRedPoint), 
            EventCenter.sendEvent(EventConst.refreshGuildRedPoint), gateModel.updateGate(e.ScreenType.GUILD_SCREEN)) : 5 == t.values[0] ? (e.GuildCache.GuildSailingRewardRedPoint = !0, 
            hortor.NotificationManager.dispatch(e.NotificationType.SailingRefreshRedPoint), 
            EventCenter.sendEvent(EventConst.refreshGuildRedPoint), gateModel.updateGate(e.ScreenType.GUILD_SCREEN)) : 6 == t.values[0] && (e.GuildCache.GuildSailingRedPoint = !0, 
            hortor.NotificationManager.dispatch(e.NotificationType.SailingRefreshRedPoint), 
            EventCenter.sendEvent(EventConst.refreshGuildRedPoint), gateModel.updateGate(e.ScreenType.GUILD_SCREEN)));
        }, i;
    }(hortor.AbstractMessageReceiver);
    e.ActionRaceHandler = t, __reflect(t.prototype, "game.ActionRaceHandler");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(e) {
        function t() {
            return null !== e && e.apply(this, arguments) || this;
        }
        return __extends(t, e), t.prototype.registObservers = function() {
            this.register(13, this.ActionRecall, this);
        }, t.prototype.ActionRecall = function(e) {}, t;
    }(hortor.AbstractMessageReceiver);
    e.ActionRecallHandler = t, __reflect(t.prototype, "game.ActionRecallHandler");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.registObservers = function() {
            this.register(23, this.ActionRecruit, this);
        }, i.prototype.ActionRecruit = function(t) {
            e.GuildCache.GuildRecruitmentPoint = t.values[0] > 0;
        }, i;
    }(hortor.AbstractMessageReceiver);
    e.ActionRecruitHandler = t, __reflect(t.prototype, "game.ActionRecruitHandler");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.registObservers = function() {
            this.register(540, this.ActionRunningGift, this);
        }, i.prototype.ActionRunningGift = function(t) {
            playerModel.energy += 30, playerModel.money += 3e6, playerModel.hornCount += 5, 
            playerModel.speedGiftRemain = 0, gateModel.updateGate(e.WindowType.WINDOW_RUNNINGGIFT), 
            EventCenter.sendEvent(EventConst.RefreshWheelRedPoint), EventCenter.sendEvent(EventConst.EnergyChange), 
            EventCenter.sendEvent(EventConst.GoldChange), hortor.WindowManager.hideWindow(e.WindowType.WINDOW_RUNNINGGIFT), 
            hortor.TipManager.alert("支付成功，获得了30能量、3,000,000金币、喇叭5个", function() {});
        }, i;
    }(hortor.AbstractMessageReceiver);
    e.ActionRunningGiftHandler = t, __reflect(t.prototype, "game.ActionRunningGiftHandler");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(e) {
        function t() {
            return null !== e && e.apply(this, arguments) || this;
        }
        return __extends(t, e), t.prototype.registObservers = function() {
            this.register(12, this.ActionSendMail, this);
        }, t.prototype.ActionSendMail = function(e) {
            messageModel.update();
        }, t;
    }(hortor.AbstractMessageReceiver);
    e.ActionSendMailHandler = t, __reflect(t.prototype, "game.ActionSendMailHandler");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(e) {
        function t() {
            return null !== e && e.apply(this, arguments) || this;
        }
        return __extends(t, e), t.prototype.registObservers = function() {
            this.register(42, this.ActionShieldEnergy, this);
        }, t.prototype.ActionShieldEnergy = function(e) {}, t;
    }(hortor.AbstractMessageReceiver);
    e.ActionShieldEnergyHandler = t, __reflect(t.prototype, "game.ActionShieldEnergyHandler");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.registObservers = function() {
            this.register(3, this.ActionShop, this);
        }, i.prototype.ActionShop = function(t) {
            var i = this;
            console.log(" 商城支付 data = ", t), HttpService.get(e.ServerMsg.SHOP_LIST, {
                uid: playerModel.uid
            }, function(e) {
                var n = [ "dailyShop", "energy", "money", "monthcard", "wanted", "newbieGift", "shipwreck", "finishHatch", "cookie", "potion", "expPotion", "thanksGivingGift", "killTitanCannonBall", "miniShield", "newYearGift", "occasionalGift", "speedGift", "puffer", "lolly", "guildMedal", "horn", "magicBook", "hamburger", "beachPowerPotion", "inviteGift", "annualGift", "dailyGift", "flowerGift", "flower", "giftPackage", "helpGift" ];
                if (-1 != t.goodsId.indexOf("giftPackageAnnual")) i.giftPackageAnnualFunc(t, e); else for (var o = 0; o < n.length; o++) -1 != t.goodsId.indexOf(n[o]) && i[n[o] + "Func"] && i[n[o] + "Func"](t, e);
            }), hortor.WindowManager.isOpen(e.WindowType.WINDOW_SHOP) && hortor.WindowManager.hideWindow(e.WindowType.WINDOW_SHOP), 
            hortor.WindowManager.isOpen(e.WindowType.WINDOW_SHOP_GOODS) && hortor.WindowManager.hideWindow(e.WindowType.WINDOW_SHOP_GOODS);
        }, i.prototype.dailyShopFunc = function(t, i) {
            var n = t.values;
            playerModel.gotDailyShop = !0;
            var o = t.goodsId.split("-"), a = {
                reward: {
                    energy: 20,
                    money: 2e6
                }
            };
            a[o[2]] = n[3], e.ComFunc.onBuyReward(a);
        }, i.prototype.energyFunc = function(t, i) {
            for (var n = i.goods.energy, o = 0; o < n.length; o++) if (t.goodsId == n[o].goodsId) {
                var a = {
                    reward: {
                        energy: n[o].quantity
                    }
                };
                e.ComFunc.onBuyReward(a);
                break;
            }
        }, i.prototype.moneyFunc = function(t, i) {
            for (var n = i.goods.money, o = 2 == t.values[2] ? 2 : 1, a = 0; a < n.length; a++) if (t.goodsId == n[a].goodsId) {
                var r = {
                    reward: {
                        money: n[a].quantity * o
                    }
                };
                e.ComFunc.onBuyReward(r);
                break;
            }
        }, i.prototype.monthcardFunc = function(t, i) {
            playerModel.gotMonthCardReward = 1 == t.values[0], gateModel.updateGate(e.WindowType.WINDOW_MONTHCARD), 
            playerModel.maxEnergy = 60, playerModel.monthCardExpired += 2592e3;
            var n = {
                reward: {
                    energy: 30,
                    horn: 10,
                    monthcard: 30
                }
            };
            e.ComFunc.onBuyReward(n), hortor.NotificationManager.dispatch(e.NotificationType.MonthCardRefresh);
        }, i.prototype.wantedFunc = function(t, i) {
            hortor.WindowManager.isOpen(e.WindowType.WINDOW_ENEMY) && hortor.WindowManager.hideWindow(e.WindowType.WINDOW_ENEMY);
            var n = {
                reward: {
                    wanted: shopModel.buyCounts
                }
            };
            e.ComFunc.onBuyReward(n);
        }, i.prototype.newbieGiftFunc = function(t, i) {
            playerModel.gotNewbieGift = !0, gateModel.updateGate(e.WindowType.WINDOW_NEWBIE_GIFT), 
            hortor.WindowManager.isOpen(e.WindowType.WINDOW_NEWBIE_GIFT) && hortor.WindowManager.hideWindow(e.WindowType.GROUP_LIMITSALE);
            var n = {
                reward: {
                    energy: 30,
                    money: 1e6,
                    allInOne: 1
                }
            };
            e.ComFunc.onBuyReward(n, function() {
                EventCenter.sendEvent(EventConst.GuideOver), EventCenter.sendEvent(EventConst.GoldChange), 
                EventCenter.sendEvent(EventConst.EnergyChange), EventCenter.sendEvent(EventConst.RefreshWheelRedPoint), 
                playerModel.gotNewbieGift && _.isNull(playerModel.speedGiftRemain) && HttpService.post(e.ServerMsg.SPEED_GIFT, {
                    uid: playerModel.uid
                }, function(t) {
                    playerModel.speedGiftRemain = t.speedGiftRemain, gateModel.updateGate(e.WindowType.WINDOW_RUNNINGGIFT);
                });
            });
        }, i.prototype.shipwreckFunc = function(t, i) {
            var n = {
                reward: {
                    shipwreck: shopModel.buyCounts
                }
            };
            e.ComFunc.onBuyReward(n);
        }, i.prototype.finishHatchFunc = function(t, i) {
            playerModel.hatchCount += 1, EventCenter.sendEvent(EventConst.EggHatchOver), hortor.WindowManager.isOpen(e.WindowType.WINDOW_PET_HATCH) && hortor.WindowManager.hideWindow(e.WindowType.WINDOW_PET_HATCH);
        }, i.prototype.cookieFunc = function(t, i) {
            var n = {
                reward: {
                    cookie: shopModel.buyCounts
                }
            };
            e.ComFunc.onBuyReward(n), EventCenter.sendEvent(EventConst.RefreshPetProps);
        }, i.prototype.potionFunc = function(t, i) {
            var n = {
                reward: {
                    potion: shopModel.buyCounts
                }
            };
            e.ComFunc.onBuyReward(n), EventCenter.sendEvent(EventConst.RefreshPetProps);
        }, i.prototype.expPotionFunc = function(e, t) {
            var i = {
                potion: playerModel.potionCount + 3
            };
            playerModel.update(i), EventCenter.sendEvent(EventConst.RefreshPetProps), hortor.TipManager.alert("支付成功，获得了经验药水x3");
        }, i.prototype.thanksGivingGiftFunc = function(e, t) {}, i.prototype.killTitanCannonBallFunc = function(t, i) {
            dailyModel.dailyEventInfo.buyKillTitanBallRemain -= shopModel.buyCounts / 10;
            var n = {
                reward: {
                    killTitanCannonBall: shopModel.buyCounts
                }
            };
            e.ComFunc.onBuyReward(n), EventCenter.sendEvent(EventConst.refreshTaptitansItemCount);
        }, i.prototype.miniShieldFunc = function(t, i) {
            dailyModel.dailyEventInfo.buyMiniShieldRemain -= shopModel.buyCounts;
            var n = {
                reward: {
                    miniShield: shopModel.buyCounts
                }
            };
            e.ComFunc.onBuyReward(n), EventCenter.sendEvent(EventConst.MiniShieldRefresh);
        }, i.prototype.newYearGiftFunc = function(e, t) {}, i.prototype.occasionalGiftFunc = function(t, i) {
            var n = "支付成功";
            if (console.log("购买礼包成功，payGiftType=", shopModel.payGiftType), shopModel.payGiftType == e.ActivityType.pirateGift) {
                n = "支付成功，获得了50能量、2M金币、骰子x10";
                var o = activityModel.getActivityInfo(e.ActivityType.occasionalGift, e.ActivityType.pirateGift);
                o && (o.playerData.gotOccasionalGift = !0), shopModel.payGiftType = "", gateModel.updateGate(e.ActivityType.pirateGift);
            } else if (shopModel.payGiftType == e.ActivityType.kiteGift) {
                n = "支付成功，获得了50能量、2M金币、绳子x2、竹篾x2、砂纸x2、浆糊x2、颜料x2";
                var a = activityModel.getActivityInfo(e.ActivityType.occasionalGift, e.ActivityType.kiteGift);
                if (a && (a.playerData.gotOccasionalGift = !0), KiteEnter && KiteEnter.bags) for (var r = 0; r < KiteEnter.bags.length; r++) KiteEnter.bags[r] += 2;
                if (shopModel.payGiftType = "", hortor.WindowManager.hideWindow(e.WindowType.GROUP_LIMITSALE), 
                gateModel.updateGate(e.WindowType.WINDOW_KITEGIFT), hortor.ScreenManager.isOpen(e.ScreenType.KITE_SCREEN)) {
                    var s = hortor.ScreenManager.getScreen(e.ScreenType.KITE_SCREEN);
                    s && s.updateGiftState();
                }
            } else if (shopModel.payGiftType == e.ActivityType.measureGift) {
                n = "支付成功，获得了50能量、2M金币、铲子x10";
                var l = activityModel.getActivityInfo(e.ActivityType.occasionalGift, e.ActivityType.measureGift);
                l && (l.playerData.gotOccasionalGift = !0), shopModel.payGiftType = "", gateModel.updateGate(e.ActivityType.measureGift);
            } else if (shopModel.payGiftType == e.ActivityType.partyGift) {
                n = "支付成功，获得了50能量、2M金币、蓝莓x5、芒果x5、香蕉x5、葡萄x5";
                var d = activityModel.getActivityInfo(e.ActivityType.occasionalGift, e.ActivityType.partyGift);
                if (d && (d.playerData.gotOccasionalGift = !0), TreeEnter && TreeEnter.bags) {
                    for (var r = 0; r < TreeEnter.bags.length; r++) TreeEnter.bags[r] += 5;
                    var u = hortor.ScreenManager.isOpen(e.ScreenType.TREE_SCREEN);
                    if (u) {
                        var h = hortor.ScreenManager.getScreen(e.ScreenType.TREE_SCREEN);
                        h && h.initProp();
                    }
                }
                if (shopModel.payGiftType = "", hortor.WindowManager.hideWindow(e.WindowType.GROUP_LIMITSALE), 
                gateModel.updateGate(e.WindowType.WINDOW_PIRATEGIFT), hortor.ScreenManager.isOpen(e.ScreenType.TREE_SCREEN)) {
                    var h = hortor.ScreenManager.getScreen(e.ScreenType.TREE_SCREEN);
                    h && h.updateGiftState();
                }
            }
            var c = playerModel.energy + 50, p = playerModel.money + 2e6, g = {
                energy: c,
                money: p
            };
            playerModel.update(g), hortor.TipManager.alert(n);
        }, i.prototype.speedGiftFunc = function(t, i) {
            playerModel.speedGiftRemain = 0, gateModel.updateGate(e.WindowType.WINDOW_RUNNINGGIFT);
            var n = {
                reward: {
                    energy: 30,
                    money: 3e6,
                    horn: 5
                }
            };
            e.ComFunc.onBuyReward(n), EventCenter.sendEvent(EventConst.RefreshWheelRedPoint);
        }, i.prototype.pufferFunc = function(t, i) {
            var n = {
                reward: {
                    puffer: shopModel.buyCounts
                }
            };
            e.ComFunc.onBuyReward(n), dailyModel.dailyEventInfo.buyPufferRemain -= shopModel.buyCounts / 10, 
            octopusModel.octopusPlayer.puffer = playerModel.puffer, EventCenter.sendEvent(EventConst.refreshOctopusProp);
        }, i.prototype.lollyFunc = function(t, i) {
            dailyModel.dailyEventInfo.buyLollyRemain -= shopModel.buyCounts;
            var n = {
                reward: {
                    lolly: shopModel.buyCounts
                }
            };
            e.ComFunc.onBuyReward(n), octopusModel.octopusPlayer.lolly = playerModel.lolly, 
            EventCenter.sendEvent(EventConst.refreshOctopusProp);
        }, i.prototype.guildMedalFunc = function(t, i) {
            var n = {
                reward: {
                    guildMedal: 1
                }
            };
            e.ComFunc.onBuyReward(n), hortor.WindowManager.isOpen(e.WindowType.WINDOW_GUILD_RENAME) && hortor.NotificationManager.dispatch(e.NotificationType.GUILD_RENAME_REFRESH), 
            EventCenter.sendEvent(EventConst.GuildBuyMedal);
        }, i.prototype.hornFunc = function(t, i) {
            var n = {
                reward: {
                    horn: shopModel.buyCounts
                }
            };
            e.ComFunc.onBuyReward(n), hortor.NotificationManager.dispatch(e.NotificationType.SHOP_HORN_REFRESH);
        }, i.prototype.magicBookFunc = function(t, i) {
            var n = {
                reward: {
                    magicBook: shopModel.buyCounts
                }
            };
            e.ComFunc.onBuyReward(n);
        }, i.prototype.hamburgerFunc = function(t, i) {
            var n = {
                reward: {
                    hamburger: shopModel.buyCounts
                }
            };
            e.ComFunc.onBuyReward(n);
        }, i.prototype.beachPowerPotionFunc = function(t, i) {
            var n = {
                reward: {
                    beachPowerPotion: shopModel.buyCounts
                }
            };
            e.ComFunc.onBuyReward(n);
        }, i.prototype.inviteGiftFunc = function(t, i) {
            var n = activityModel.getActivityInfo(e.ActivityType.inviteGift);
            n.playerData.hasBuy = !0;
            var o = {
                reward: n.configData
            };
            e.ComFunc.onBuyReward(o), EventCenter.sendEvent(EventConst.RefreshWheelRedPoint), 
            hortor.WindowManager.hideWindow(e.WindowType.WINDOW_INVITEGIFT);
        }, i.prototype.dailyGiftFunc = function(e, t) {}, i.prototype.flowerGiftFunc = function(e, t) {}, 
        i.prototype.flowerFunc = function(e, t) {}, i.prototype.giftPackageFunc = function(t, i) {
            var n = i.giftPackages, o = _.find(n, function(e) {
                return e.goodsId == t.goodsId;
            });
            if (o) {
                for (var a = {}, r = 0; r < o.rewards.length; r++) a[o.rewards[r].name] = o.rewards[r].count;
                var s = {
                    reward: a
                };
                e.ComFunc.onBuyReward(s);
            }
        }, i.prototype.helpGiftFunc = function(e, t) {}, i.prototype.giftPackageAnnualFunc = function(t, i) {
            var n = t.goodsId[17];
            "string" == typeof n && (n = parseInt(n));
            var o = AnnualData.annualGift.giftInfos[n - 1];
            o.boughtTimes += 1;
            for (var a = {}, r = 0; r < o.rewards.length; r++) {
                var s = o.rewards[r];
                a[s.name] = s.count;
            }
            e.ComFunc.addRewardData(a), e.ComFunc.getRewardView(a);
            var l = AnnualData.annualRebate;
            l.payCount += o.price;
            var d = hortor.WindowManager.getWindow(e.WindowType.WINDOW_ANNUAL_MAIN);
            d && (d.aWish.onData(), d.aGift.onOpen(), d.aRebate.onOpen());
        }, i;
    }(hortor.AbstractMessageReceiver);
    e.ActionShopHandler = t, __reflect(t.prototype, "game.ActionShopHandler");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.registObservers = function() {
            this.register(2, this.ActionSteal, this);
        }, i.prototype.ActionSteal = function(t) {
            e.NoticeManager.notice(t);
        }, i;
    }(hortor.AbstractMessageReceiver);
    e.ActionStealHandler = t, __reflect(t.prototype, "game.ActionStealHandler");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(e) {
        function t() {
            return null !== e && e.apply(this, arguments) || this;
        }
        return __extends(t, e), t.prototype.registObservers = function() {
            this.register(15, this.ActionTreasure, this);
        }, t.prototype.ActionTreasure = function(e) {}, t;
    }(hortor.AbstractMessageReceiver);
    e.ActionTreasureHandler = t, __reflect(t.prototype, "game.ActionTreasureHandler");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(e) {
        function t() {
            return null !== e && e.apply(this, arguments) || this;
        }
        return __extends(t, e), t.prototype.registObservers = function() {
            this.register(43, this.ActionTreasureMap, this);
        }, t.prototype.ActionTreasureMap = function(e) {}, t;
    }(hortor.AbstractMessageReceiver);
    e.ActionTreasureMapHandler = t, __reflect(t.prototype, "game.ActionTreasureMapHandler");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.registObservers = function() {
            this.register(34, this.ActionTree, this);
        }, i.prototype.ActionTree = function(e) {
            0 == e.values[0] ? this.getTreeGift(e) : 1 == e.values[0] && this.dressTree(e);
        }, i.prototype.getTreeGift = function(t) {
            if (0 == t.values[0]) {
                for (var i = [ 0, 0, 0, 0 ], n = 1; n < t.values.length; n++) {
                    var o = t.values[n] - 1;
                    i[o]++;
                }
                var a = {}, r = "treeGift0", s = i[0];
                i[0] > 0 && (r = "treeGift0", s = i[0], a[r] = s), i[1] > 0 && (r = "treeGift1", 
                s = i[1], a[r] = s), i[2] > 0 && (r = "treeGift2", s = i[2], a[r] = s), i[3] > 0 && (r = "treeGift3", 
                s = i[3], a[r] = s);
                var l = egret.setTimeout(function() {
                    egret.clearTimeout(l), hortor.WindowManager.showWindow(e.WindowType.WINDOW_REWARD, a);
                }, this, 2e3);
            }
        }, i.prototype.dressTree = function(t) {
            var i = hortor.ScreenManager.getScreen(e.ScreenType.TREE_SCREEN);
            i && i.wsDressTree(t);
        }, i;
    }(hortor.AbstractMessageReceiver);
    e.ActionTreeHandler = t, __reflect(t.prototype, "game.ActionTreeHandler");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.registObservers = function() {
            this.register(45, this.ActionTreeShareHelpPush, this);
        }, i.prototype.ActionTreeShareHelpPush = function(t) {
            var i = t.values[0], n = t.values[1], o = t.values[2], a = t.values[3], r = t.values[4], s = t.goodsId, l = hortor.ScreenManager.getScreen(e.ScreenType.TREE_SCREEN);
            if (l) {
                if (TreeEnter) {
                    TreeEnter.helpCount = r, TreeEnter.bags[i - 1] += n, 0 != o && (TreeEnter.bags[o - 1] += a), 
                    l.updateProps();
                    var d = hortor.WindowManager.isOpen(e.WindowType.WINDOW_TREESEEKHELPSHARE);
                    if (d) {
                        var u = hortor.WindowManager.getWindow(e.WindowType.WINDOW_TREESEEKHELPSHARE);
                        u && u.updateTimes();
                    }
                }
                var h = t.from_uid, c = t.from_name, p = t.from_headimg, g = t.gender, m = {
                    uid: 0,
                    name: "",
                    headImg: "",
                    gender: 1
                };
                m.uid = h, m.name = c, m.headImg = p, m.gender = g;
                var f = TreeConst.treeGiftNames[i - 1], v = [];
                if (v.push({
                    text: "帮你收集了",
                    style: {
                        textColor: 6110764
                    }
                }), v.push({
                    text: n + "个" + f,
                    style: {
                        textColor: 16203047
                    }
                }), 0 != o) {
                    var y = TreeConst.treeGiftNames[o - 1];
                    v.push({
                        text: "，\n并额外获得",
                        style: {
                            textColor: 6110764
                        }
                    }), v.push({
                        text: a + "个" + y,
                        style: {
                            textColor: 16203047
                        }
                    });
                }
                TreeFunc.helpMsgList.push({
                    playerInfo: m,
                    desc: v,
                    logId: s,
                    isReadToServer: !0
                }), TreeFunc.checkHelpMsg();
            }
        }, i;
    }(hortor.AbstractMessageReceiver);
    e.ActionTreeShareHelpPushHandler = t, __reflect(t.prototype, "game.ActionTreeShareHelpPushHandler");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.registObservers = function() {
            this.register(4, this.ActionWanted, this);
        }, i.prototype.ActionWanted = function(t) {
            e.NoticeManager.notice(t);
        }, i;
    }(hortor.AbstractMessageReceiver);
    e.ActionWantedHandler = t, __reflect(t.prototype, "game.ActionWantedHandler");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.registObservers = function() {
            this.register(87, this.ActionWorldChat, this);
        }, i.prototype.ActionWorldChat = function(e) {
            2 == e.values[0] ? this.guildInvite(e) : this.chatFunc(e);
        }, i.prototype.guildInvite = function(t) {
            var i = {
                msgType: "guildInvite",
                uid: t.from_uid,
                name: t.from_name,
                headImg: t.from_headimg,
                gender: t.values[2],
                crowns: t.values[1],
                content: t.goodsId,
                checksum: t.values[3],
                createTime: t.values[4],
                isVip: t.values[5],
                reportCount: t.values[6],
                province: t.province,
                city: t.city,
                isPrivilege: t.isPrivilege
            };
            if (hortor.WindowManager.isOpen(e.WindowType.WINDOW_WORLD_CHAT) ? (chatModel.newUnReadWorldMsg = !1, 
            chatModel.ChatCache.NewMessages.push(i), 1 == chatModel.ChatCache.NewMessages.length && EventCenter.sendEvent(EventConst.WorldChatMsg)) : (chatModel.ChatCache.Messages.push(i), 
            chatModel.newUnReadWorldMsg = !0), !playerModel.worldChatOff) {
                var n = JSON.parse(t.goodsId);
                hortor.NotificationManager.dispatch(e.NotificationType.CHAT_UPDATE, {
                    name: n.guildName,
                    content: n.content
                });
            }
        }, i.prototype.chatFunc = function(t) {
            var i = {
                msgType: "chat",
                uid: t.from_uid,
                name: t.from_name,
                headImg: t.from_headimg,
                gender: t.values[2],
                crowns: t.values[1],
                content: t.goodsId,
                checksum: t.values[3],
                createTime: t.values[4],
                isVip: t.values[5],
                reportCount: t.values[6],
                province: t.province,
                city: t.city,
                isPrivilege: t.values[7]
            };
            if (3 == t.values[0] && (i.msgType = "regressdChat"), hortor.WindowManager.isOpen(e.WindowType.WINDOW_WORLD_CHAT) ? (chatModel.newUnReadWorldMsg = !1, 
            chatModel.ChatCache.NewMessages.push(i), 1 == chatModel.ChatCache.NewMessages.length && EventCenter.sendEvent(EventConst.WorldChatMsg)) : (chatModel.ChatCache.Messages.push(i), 
            chatModel.newUnReadWorldMsg = !0), !playerModel.worldChatOff) {
                t.goodsId;
                hortor.NotificationManager.dispatch(e.NotificationType.CHAT_UPDATE, i);
            }
        }, i;
    }(hortor.AbstractMessageReceiver);
    e.ActionWorldChatHandler = t, __reflect(t.prototype, "game.ActionWorldChatHandler");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(e) {
        function t() {
            return null !== e && e.apply(this, arguments) || this;
        }
        return __extends(t, e), t.prototype.registObservers = function() {
            this.register(47, this.ActionWorldCupHelpPush, this);
        }, t.prototype.ActionWorldCupHelpPush = function(e) {
            e.from_uid, e.from_name, e.from_headimg;
        }, t;
    }(hortor.AbstractMessageReceiver);
    e.ActionWorldCupHelpPushHandler = t, __reflect(t.prototype, "game.ActionWorldCupHelpPushHandler");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.registScreen = function(t, i, n, o) {
            void 0 === n && (n = null);
            var a = n ? e.ResourcePath.getSkinRes(n) : null;
            return hortor.ScreenManager.registScreen(t, i, a, o);
        }, i.prototype.initialize = function() {
            this.registScreen(e.ScreenType.LOADING_SCREEN, e.ScreenLoading), this.registScreen(e.ScreenType.PRELOAD_SCREEN, e.PreloadScreen), 
            this.registScreen(e.ScreenType.TEST_SCREEN, e.TestScreen, "test/testScreenSkin"), 
            this.registScreen(e.ScreenType.WHEEL_SCREEN, e.WheelScreen, "wheel/WheelScreenSkin", "common"), 
            this.registScreen(e.ScreenType.KILLTITAN_SCREEN, e.TaptitansMainScreen, "taptitans/TaptitansMainSkin", "taptitans"), 
            this.registScreen(e.ScreenType.OCTOPUS_SCREEN, e.OctopusMainScreen, "octopus/OctopusMainSkin", "octopus"), 
            this.registScreen(e.ScreenType.GUILD_JOINSCREEN, e.GuildJoinScreen, "guild/GuildJoinScreenSkin", "guild"), 
            this.registScreen(e.ScreenType.GUILD_SCREEN, e.GuildScreen, "guild/GuildScreenSkin", "guild"), 
            this.registScreen(e.ScreenType.TREE_SCREEN, e.TreeScreen, "tree/TreeScreenSkin", "trader"), 
            this.registScreen(e.ScreenType.GUILD_SAILING, e.SailingScreen, "sailing/SailingScreenSkin", "sailing"), 
            this.registScreen(e.ScreenType.PET_SCREEN, e.PetMainScreen, "pet/PetMainSkin", "pet"), 
            this.registScreen(e.ScreenType.ISLANDSPACE, e.IslandSpaceScreen, "island/IslandSpaceSkin", "island"), 
            this.registScreen(e.ScreenType.MAP_SCREEN, e.MapWindow, "map/MapSkin", "map"), this.registScreen(e.ScreenType.WORLD_SCREEN, e.WorldMapWindow, "map/WorldMapSkin", "map"), 
            this.registScreen(e.ScreenType.KITE_SCREEN, e.KiteScreen, "kite/KiteScreenSkin", "kite");
        }, i;
    }(hortor.Register);
    e.ScreenRegister = t, __reflect(t.prototype, "game.ScreenRegister");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.registSound = function(t, i, n) {
            void 0 === i && (i = !1), void 0 === n && (n = 0), hortor.SoundManager.addSound(t, e.ResourcePath.getSoundPath(t), i, n, !1);
        }, i.prototype.initialize = function() {
            this.registSound(e.SoundType.MUSIC_MAIN, !0, 32.8), this.registSound(e.SoundType.SOUND_ANNUAL_LUCKYBOX), 
            this.registSound(e.SoundType.SOUND_ATTACK_AIM_AT_TARGET), this.registSound(e.SoundType.SOUND_BOMB_EXPLODE), 
            this.registSound(e.SoundType.SOUND_BOMB_FLYING), this.registSound(e.SoundType.SOUND_CANNON_HIT_SHEILD), 
            this.registSound(e.SoundType.SOUND_CANNON_SHEILD_CRASH), this.registSound(e.SoundType.SOUND_CANNON_SHOOT), 
            this.registSound(e.SoundType.SOUND_CASH_RECEIVED), this.registSound(e.SoundType.SOUND_COMMON_AWARD), 
            this.registSound(e.SoundType.SOUND_COMMON_BUTTON), this.registSound(e.SoundType.SOUND_COMMON_CLOSE), 
            this.registSound(e.SoundType.SOUND_COMMON_CLOUD_END), this.registSound(e.SoundType.SOUND_COMMON_CLOUD_ENTER), 
            this.registSound(e.SoundType.SOUND_COMMON_CLOUD_LOOP, !1, 3), this.registSound(e.SoundType.SOUND_COMMON_UNLOCK), 
            this.registSound(e.SoundType.SOUND_CRAD_ATTACKED), this.registSound(e.SoundType.SOUND_CRAD_DIE), 
            this.registSound(e.SoundType.SOUND_CRAD_LOOP), this.registSound(e.SoundType.SOUND_CRAD_START), 
            this.registSound(e.SoundType.SOUND_CRAD_STILL), this.registSound(e.SoundType.SOUND_CRAD_WAKEUP), 
            this.registSound(e.SoundType.SOUND_DRAGONBOAT_BEATDRUMLOOP), this.registSound(e.SoundType.SOUND_DRAGONBOAT_OPENLOOP), 
            this.registSound(e.SoundType.SOUND_DRAGONBOAT_REDPACKAGE), this.registSound(e.SoundType.SOUND_DRAGONBOAT_REUSLT), 
            this.registSound(e.SoundType.SOUND_DRAGONBOAT_SMILE0), this.registSound(e.SoundType.SOUND_DRAGONBOAT_SMILE1), 
            this.registSound(e.SoundType.SOUND_DRAGONBOAT_START), this.registSound(e.SoundType.SOUND_DRAGONBOAT_SUCCESS), 
            this.registSound(e.SoundType.SOUND_FESTIVAL_1), this.registSound(e.SoundType.SOUND_FESTIVAL_2), 
            this.registSound(e.SoundType.SOUND_FESTIVAL_3), this.registSound(e.SoundType.SOUND_FIREWORKS_DISPLAY, !1, 3), 
            this.registSound(e.SoundType.SOUND_FREEENERGY_1), this.registSound(e.SoundType.SOUND_GET10REWARDS), 
            this.registSound(e.SoundType.SOUND_ISLAND_BOX_DROP), this.registSound(e.SoundType.SOUND_ISLAND_BOX_SHAKE, !1, 1), 
            this.registSound(e.SoundType.SOUND_ISLAND_PHOTO), this.registSound(e.SoundType.SOUND_ISLAND_SHOW_BOX), 
            this.registSound(e.SoundType.SOUND_ISLAND_SHOW_MAP), this.registSound(e.SoundType.SOUND_KING_ADVANCE), 
            this.registSound(e.SoundType.SOUND_KING_BACK), this.registSound(e.SoundType.SOUND_KING_DICE), 
            this.registSound(e.SoundType.SOUND_KING_EACH_EVENT), this.registSound(e.SoundType.SOUND_KING_GET_DICE), 
            this.registSound(e.SoundType.SOUND_KING_GET_SAILOR), this.registSound(e.SoundType.SOUND_KING_OVER_CIRCLE), 
            this.registSound(e.SoundType.SOUND_KING_PASSIVE_ADVANCE), this.registSound(e.SoundType.SOUND_KING_START), 
            this.registSound(e.SoundType.SOUND_KING_STAY), this.registSound(e.SoundType.SOUND_KING_THROW_BAD), 
            this.registSound(e.SoundType.SOUND_KING_THROW_GOOD), this.registSound(e.SoundType.SOUND_LEVEL_SUCCESS), 
            this.registSound(e.SoundType.SOUND_MINER_COIN_COLLECT), this.registSound(e.SoundType.SOUND_MONOPOLY_DICE), 
            this.registSound(e.SoundType.SOUND_MONOPOLY_SHIP_MOVE), this.registSound(e.SoundType.SOUND_MYSTICALSHOP), 
            this.registSound(e.SoundType.SOUND_OCTOPUS_AWAPEN), this.registSound(e.SoundType.SOUND_OCTOPUS_CLOUD), 
            this.registSound(e.SoundType.SOUND_OCTOPUS_HIT), this.registSound(e.SoundType.SOUND_OCTOPUS_PULL), 
            this.registSound(e.SoundType.SOUND_OCTOPUS_REWARD), this.registSound(e.SoundType.SOUND_OCTOPUS_SHOOT), 
            this.registSound(e.SoundType.SOUND_OCTOPUS_SNORE), this.registSound(e.SoundType.SOUND_OCTOPUS_WATER), 
            this.registSound(e.SoundType.SOUND_OPEN_EGG), this.registSound(e.SoundType.SOUND_OPEN_EGG_WIN), 
            this.registSound(e.SoundType.SOUND_PANEL_CLOSE), this.registSound(e.SoundType.SOUND_PANEL_OPEN), 
            this.registSound(e.SoundType.SOUND_PET_BEAR_SELECT), this.registSound(e.SoundType.SOUND_PET_BEAR_SKILL), 
            this.registSound(e.SoundType.SOUND_PET_BEAR_SLEEP, !1, 2), this.registSound(e.SoundType.SOUND_PET_COOKIE), 
            this.registSound(e.SoundType.SOUND_PET_EAT), this.registSound(e.SoundType.SOUND_PET_EXP), 
            this.registSound(e.SoundType.SOUND_PET_LEVELUP), this.registSound(e.SoundType.SOUND_PET_LVUP), 
            this.registSound(e.SoundType.SOUND_PET_SEAL_SELECT), this.registSound(e.SoundType.SOUND_PET_SEAL_SKILL), 
            this.registSound(e.SoundType.SOUND_PET_SEAL_SLEEP, !1, 3), this.registSound(e.SoundType.SOUND_PLANE_ATTACK), 
            this.registSound(e.SoundType.SOUND_PLANE_ATTACKED), this.registSound(e.SoundType.SOUND_PLANE_COMEON), 
            this.registSound(e.SoundType.SOUND_PLANE_DENGER), this.registSound(e.SoundType.SOUND_PLANE_FAIL), 
            this.registSound(e.SoundType.SOUND_PLANE_GRADEUP), this.registSound(e.SoundType.SOUND_PLANE_READY), 
            this.registSound(e.SoundType.SOUND_PLANE_READY2), this.registSound(e.SoundType.SOUND_PLANE_SHIELD), 
            this.registSound(e.SoundType.SOUND_PLANE_SHIELD2), this.registSound(e.SoundType.SOUND_PLANE_SPEEDUP), 
            this.registSound(e.SoundType.SOUND_PLANE_STARDOWN), this.registSound(e.SoundType.SOUND_PLANE_START), 
            this.registSound(e.SoundType.SOUND_PLANE_STARUP), this.registSound(e.SoundType.SOUND_PLANE_TOUCH1), 
            this.registSound(e.SoundType.SOUND_PLANE_TOUCH2), this.registSound(e.SoundType.SOUND_PLANE_VICTORY), 
            this.registSound(e.SoundType.SOUND_SAILING_APPLY), this.registSound(e.SoundType.SOUND_SAILING_GETTASK), 
            this.registSound(e.SoundType.SOUND_SAILING_OVER), this.registSound(e.SoundType.SOUND_SAILING_ROW), 
            this.registSound(e.SoundType.SOUND_SAILING_TEAR), this.registSound(e.SoundType.SOUND_STEAL_GOT_KING), 
            this.registSound(e.SoundType.SOUND_STEAL_MISS_KING), this.registSound(e.SoundType.SOUND_STEAL_RESULT), 
            this.registSound(e.SoundType.SOUND_TAP_BOOM), this.registSound(e.SoundType.SOUND_TAP_HURT), 
            this.registSound(e.SoundType.SOUND_TAP_SLEEP), this.registSound(e.SoundType.SOUND_TAP_WAKE), 
            this.registSound(e.SoundType.SOUND_TAP_STILL), this.registSound(e.SoundType.SOUND_TAP_START), 
            this.registSound(e.SoundType.SOUND_TAP_LOOP), this.registSound(e.SoundType.SOUND_TAP_DIE), 
            this.registSound(e.SoundType.SOUND_TM_BAOXIANG), this.registSound(e.SoundType.SOUND_TM_CHANZI), 
            this.registSound(e.SoundType.SOUND_TUTORIAL_VOICE_1), this.registSound(e.SoundType.SOUND_TUTORIAL_VOICE_10), 
            this.registSound(e.SoundType.SOUND_TUTORIAL_VOICE_2), this.registSound(e.SoundType.SOUND_TUTORIAL_VOICE_3), 
            this.registSound(e.SoundType.SOUND_TUTORIAL_VOICE_4), this.registSound(e.SoundType.SOUND_TUTORIAL_VOICE_5), 
            this.registSound(e.SoundType.SOUND_TUTORIAL_VOICE_6), this.registSound(e.SoundType.SOUND_TUTORIAL_VOICE_7), 
            this.registSound(e.SoundType.SOUND_TUTORIAL_VOICE_8), this.registSound(e.SoundType.SOUND_TUTORIAL_VOICE_9), 
            this.registSound(e.SoundType.SOUND_UPGRADE_BUILD), this.registSound(e.SoundType.SOUND_UPGRADE_BUILD_DONE), 
            this.registSound(e.SoundType.SOUND_UPGRADE_BUILD_DONE_3), this.registSound(e.SoundType.SOUND_USERRECALL_1), 
            this.registSound(e.SoundType.SOUND_USERRECALL_2), this.registSound(e.SoundType.SOUND_USERRECALL_3), 
            this.registSound(e.SoundType.SOUND_VIEW_SWITCH_IN), this.registSound(e.SoundType.SOUND_VIEW_SWITCH_OUT), 
            this.registSound(e.SoundType.SOUND_WAWASTART), this.registSound(e.SoundType.SOUND_WAWAWHEEL), 
            this.registSound(e.SoundType.SOUND_WHEEL_APPEAR_1), this.registSound(e.SoundType.SOUND_WHEEL_APPEAR_2), 
            this.registSound(e.SoundType.SOUND_WHEEL_APPEAR_LOGIN), this.registSound(e.SoundType.SOUND_WHEEL_ATTACK_PREPARE), 
            this.registSound(e.SoundType.SOUND_WHEEL_BUTTON_DOWN), this.registSound(e.SoundType.SOUND_WHEEL_BUTTON_UP), 
            this.registSound(e.SoundType.SOUND_WHEEL_ENERGY), this.registSound(e.SoundType.SOUND_WHEEL_ENERGY_CHANGE), 
            this.registSound(e.SoundType.SOUND_WHEEL_ENERGY_START), this.registSound(e.SoundType.SOUND_WHEEL_ENERGY_TRANSFORM), 
            this.registSound(e.SoundType.SOUND_WHEEL_ENERGY_USE), this.registSound(e.SoundType.SOUND_WHEEL_GOLD), 
            this.registSound(e.SoundType.SOUND_WHEEL_GOLD_MED), this.registSound(e.SoundType.SOUND_WHEEL_GOT_ITEM), 
            this.registSound(e.SoundType.SOUND_WHEEL_ROT_END), this.registSound(e.SoundType.SOUND_WHEEL_ROT_START), 
            this.registSound(e.SoundType.SOUND_WHEEL_SHIELD_FULL), this.registSound(e.SoundType.SOUND_WHEEL_SHIELD_GOT), 
            this.registSound(e.SoundType.SOUND_WHEEL_SHIELD_START), this.registSound(e.SoundType.SOUND_WHEEL_STEAL), 
            this.registSound(e.SoundType.SOUND_WHEEL_STEAL_GONE), this.registSound(e.SoundType.SOUND_FREE_ENERGY);
        }, i;
    }(hortor.Register);
    e.SoundRegister = t, __reflect(t.prototype, "game.SoundRegister");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.registWindow = function(t, i, n, o, a, r, s, l) {
            void 0 === n && (n = null), void 0 === a && (a = !1), void 0 === r && (r = !1), 
            void 0 === s && (s = !0), void 0 === l && (l = 1);
            var d = n ? e.ResourcePath.getSkinRes(n) : null;
            return hortor.WindowManager.registWindow(t, i, d, o, s, r, a, l);
        }, i.prototype.registGroupBig = function(t, i, n, o, a, r) {
            void 0 === o && (o = !0), void 0 === a && (a = !1), void 0 === r && (r = 1);
            var s = e.ResourcePath.getSkinRes("common/WindowGroupBigSkin"), l = hortor.WindowManager.registWindow(t, e.WindowGroupBig, s, n, o, !1, a, r);
            return l.fullList = i, l;
        }, i.prototype.registGroupSmall = function(t, i, n, o, a, r) {
            void 0 === o && (o = !0), void 0 === a && (a = !1), void 0 === r && (r = 1);
            var s = e.ResourcePath.getSkinRes("common/WindowGroupSmallSkin"), l = hortor.WindowManager.registWindow(t, e.WindowGroupSmall, s, n, o, !1, a, r);
            return l.fullList = i, l;
        }, i.prototype.initialize = function() {
            this.registWindow(e.WindowType.WINDOW_TEST, e.TestWindow, "test/testWindowSkin", "testTexture"), 
            this.registWindow(e.WindowType.WINDOW_SHARE_GUIDE, e.ShareH5Window, "common/ShareH5WindowSkin", null, !1, !0), 
            this.registWindow(e.WindowType.WINDOW_NOTICE, e.NoticeWindow, "notice/NoticeWindowSkin", "notice", !0), 
            this.registWindow(e.WindowType.WINDOW_REWARD, e.RewardWindow, "common/RewardWindowSkin", null, !0, !1, !1), 
            this.registWindow(e.WindowType.WINDOW_RANK, e.RankWindow, "rank/RankLayerSkin", "rank", !0, !0), 
            this.registWindow(e.WindowType.WINDOW_ATTACK_LIST, e.AttackListWindow, "attack/AttackListWindowSkin", "attack", !0, !1, !1), 
            this.registWindow(e.WindowType.WINDOW_ACT_MENU, e.ActivityMenuWindow, "faceUI/activityUI/ActivityMenuWindowSkin", "faceUI", !1, !0), 
            this.registWindow(e.WindowType.WINDOW_MAIN_MENU, e.MainMenuWindow, "faceUI/menuUI/MainMenuWindowSkin", "faceUI", !1, !0), 
            this.registWindow(e.WindowType.WINDOW_ISLANDBUIND, e.IslandBuildWindow, "island/IslandBuildWindowSkin", "islandBuild", !0), 
            this.registWindow(e.WindowType.WINDOW_DAILY_SIGN, e.DailySignWindow, "dailySign/DailySignWindowSkin", "dailySign"), 
            this.registWindow(e.WindowType.WINDOW_DAILY_ENERGY, e.DailyEnergyWindow, "dailyEnergy/DailyEnergyWindowSkin", "dailyEnergy"), 
            this.registWindow(e.WindowType.WINDOW_FREE_ENERGY, e.FreeEnergyWindow, "freeEnergy/FreeEnergyWindowSkin", "freeEnergy"), 
            this.registWindow(e.WindowType.WINDOW_OPENBOX, e.OpenBoxWindow, "dailySign/OpenBoxSkin", "dailySign"), 
            this.registWindow(e.WindowType.WINDOW_OFFICIALVIP, e.OfficialVipWindow, "officialVip/OfficialVipWindowSkin"), 
            this.registWindow(e.WindowType.WINDOW_OFFICIALVIP_GET, e.OfficialVipGetWindow, "officialVip/OfficialVipGetSkin"), 
            this.registWindow(e.WindowType.WINDOW_OFFICIALVIP_GUIDE, e.OfficialVipGuideWindow, "officialVip/OfficialVipGuideSkin"), 
            this.registGroupBig(e.WindowType.GROUP_DAILYREWARD, [ e.WindowType.WINDOW_DAILY_SIGN, e.WindowType.WINDOW_DAILY_ENERGY, e.WindowType.WINDOW_FREE_ENERGY, e.WindowType.WINDOW_OFFICIALVIP ], null, !0, !0), 
            this.registWindow(e.WindowType.WINDOW_RECALL_REWARD, e.RecallWindow, "inviteReward/RecallWindowSkin", "inviteReward"), 
            this.registWindow(e.WindowType.WINDOW_INVITEREWARD, e.InviteRewardWindow, "inviteReward/InviteRewardWindowSkin", "inviteReward"), 
            this.registWindow(e.WindowType.WINDOW_WNSP, e.WnspWindow, "inviteReward/WNSPWindowSkin", "inviteReward"), 
            this.registWindow(e.WindowType.WINDOW_INVITE_JBBX, e.InviteJBBWindow, "inviteReward/InviteJBBXWindowSkin", "share"), 
            this.registWindow(e.WindowType.WINDOW_INVITE_VIP, e.InvitationVipWindow, "inviteVip/InvitationVIPSkin", "inviteReward"), 
            this.registGroupBig(e.WindowType.GROUP_INVITEREWARD, [ e.WindowType.WINDOW_INVITEREWARD, e.WindowType.WINDOW_RECALL_REWARD, e.WindowType.WINDOW_WNSP, e.WindowType.WINDOW_INVITE_JBBX, e.WindowType.WINDOW_INVITE_VIP ], null, !0, !0), 
            this.registWindow(e.WindowType.WINDOW_RUNNINGGIFT, e.RunningGiftWindow, "runningGift/RunningGiftWindowSkin", "runningGift"), 
            this.registWindow(e.WindowType.WINDOW_NEWBIE_GIFT, e.FirstPayGiftWindow, "firstpayGift/FirstPayGiftWindowSkin", "firstDayGift"), 
            this.registWindow(e.WindowType.WINDOW_MYSTICAL_ENERGY_WHEEL, e.MysticalEnergyWheelWindow, "mystical/MysticalEnergyWheelWindowSkin", "firstDayGift"), 
            this.registWindow(e.WindowType.WINDOW_KITEGIFT, e.KiteGiftWindow, "gift/KiteGiftSkin"), 
            this.registGroupBig(e.WindowType.GROUP_LIMITSALE, [ e.WindowType.WINDOW_RUNNINGGIFT, e.WindowType.WINDOW_NEWBIE_GIFT, e.WindowType.WINDOW_PIRATEGIFT, e.WindowType.WINDOW_MYSTICAL_ENERGY_WHEEL, e.WindowType.WINDOW_KITEGIFT ], null, !0, !0), 
            this.registWindow(e.WindowType.WINDOW_ENEMY, e.HateListWindow, "haterlist/HateSkin", "rank", !0, !0), 
            this.registWindow(e.WindowType.WINDOW_HELPLABEL, e.HelpPanelWindow, "main/HelpPanelSkin"), 
            this.registWindow(e.WindowType.WINDOW_WANTED, e.WantedWindow, "wanted/WantedViewSkin"), 
            this.registWindow(e.WindowType.WINDOW_ACHIEVE, e.NewPlayerAchievementWindow, "newplayerachievement/newPlayerAchievementSkin", "achievement", !0, !0), 
            this.registWindow(e.WindowType.WINDOW_SHAREISLAND, e.IslandShareWindow, "island/IslandShareSkin", null, !0), 
            this.registWindow(e.WindowType.WINDOW_STEAL, e.StealWindow, "steal/StealSkin", "steal", !0, !1, !1), 
            this.registWindow(e.WindowType.WINDOW_MONTHCARD, e.MonthCardWindow, "shop/monthCardSkin", "monthCard"), 
            this.registWindow(e.WindowType.WINDOW_ISLANDOVEREFFECT, e.IslandOverEffectWindow, "island/IslandOverEffectSkin"), 
            this.registWindow(e.WindowType.WINDOW_ATTACK_ISLAND, e.AttackIslandWindow, "attack/AttackIslandWindowSkin", null, !0, !1, !1), 
            this.registWindow(e.WindowType.WINDOW_ISLANDOVERREWARD, e.IslandOverRewardWindow, "island/IslandOverRewardSkin", null, !0, !1, !0).modalAlpha = 0, 
            this.registWindow(e.WindowType.WINDOW_RECALLFRIEND_PLAYERS, e.RecallFriendPlayersWindow, "inviteReward/RecallFriendPlayersSkin"), 
            this.registWindow(e.WindowType.WINDOW_RECALLFRIEND_GROUP, e.RecallFriendGroupWindow, "inviteReward/RecallFriendGroupSkin"), 
            this.registWindow(e.WindowType.WINDOW_SHOP, e.ShopWindow, "shop/ShopWindowSkin", null, !0), 
            this.registWindow(e.WindowType.WINDOW_PLAYER_EDIT, e.PlayerEditWindow, "setting/PlayerEditSkin", "setting"), 
            this.registWindow(e.WindowType.WINDOW_PLAYERINFO, e.PlayerInfoWindow, "setting/PlayerInfoSkin", "setting"), 
            this.registWindow(e.WindowType.WINDOW_ADDFRIEND, e.AddFriendWindow, "friend/AddFriendSkin"), 
            this.registWindow(e.WindowType.WINDOW_NOTICEBAR, e.NoticeBarWindow, "notice/NoticeBarWindowSkin", null, !1, !1, !1), 
            this.registWindow(e.WindowType.WINDOW_REGRESSGIFT, e.RegressGiftWindow, "regressGift/RegressGiftSkin"), 
            this.registWindow(e.WindowType.WINDOW_TAPTITANS_FRIEND, e.TaptitansFriendWindow, "taptitans/TaptitansFriendSkin", "taptitans"), 
            this.registWindow(e.WindowType.WINDOW_TAPTITANSFREESHELL, e.TaptitansFreeShellWindow, "taptitans/TaptitansFreeShellSkin", "taptitans"), 
            this.registWindow(e.WindowType.WINDOW_TAPTITANSAWARD, e.TaptitansAwardWindow, "taptitans/TaptitansAwardSkin", "taptitans"), 
            this.registWindow(e.WindowType.WINDOW_TAPTITANSASSIST, e.TaptitansAssistWindow, "taptitans/TaptitansAssistSkin", "taptitans"), 
            this.registWindow(e.WindowType.WINDOW_TAPTITANSWIN, e.TaptitansWinWindow, "taptitans/TaptitansWinSkin", "taptitans"), 
            this.registWindow(e.WindowType.WINDOW_COMHELP, e.ComHelpWindow, "common/ComHelpWindowSkin"), 
            this.registWindow(e.WindowType.WINDOW_SHOP_GOODS, e.ShopGoodsWindow, "shop/ShopGoodsWindowSkin"), 
            this.registWindow(e.WindowType.WINDOW_JIGSAW, e.JigsawWindow, "jigsaw/JigsawMainSkin", "jigsaw", !0), 
            this.registWindow(e.WindowType.WINDOW_JIGSAWBTN, e.JigsawBtnWindow, "common/ComAcPropBtnWindowSkin", "jigsaw", !1, !1, !1), 
            this.registWindow(e.WindowType.WINDOW_JIGSAWFRIEND, e.JigsawFriendListWindow, "common/ComFriendListSkin", "jigsaw", !0), 
            this.registWindow(e.WindowType.WINDOW_JIGSAWSENDPROP, e.JigsawSendPropWindow, "common/ComSendPropSkin", "jigsaw"), 
            this.registWindow(e.WindowType.WINDOW_JIGSAWNEWS, e.JigsawNewsWindow, "common/ComNewsSkin", "jigsaw", !0), 
            this.registWindow(e.WindowType.WINDOW_JIGSAWGETPROP, e.JigsawGetPropWindow, "common/ComGetPropSkin", "jigsaw"), 
            this.registWindow(e.WindowType.WINDOW_JIGSAWOVER, e.JigsawOverWindow, "jigsaw/JigsawOverSkin", "jigsaw"), 
            this.registWindow(e.WindowType.WINDOW_JIGSAWUSEMAGNA, e.JigsawUseMagnaWindow, "jigsaw/JigsawUseMagnaSkin", "jigsaw"), 
            this.registWindow(e.WindowType.WINDOW_JIGSAWREWARD, e.JigsawRewardWindow, "jigsaw/JigsawRewardSkin", "jigsaw", !0, !0), 
            this.registWindow(e.WindowType.WINDOW_JIGSAW_EXCHANG, e.JigsawExchangeListWindow, "common/ComFriendListSkin", "jigsaw", !0), 
            this.registWindow(e.WindowType.WINDOW_INVITATIONLIST, e.InvitationVIPListWindow, "common/ComNewsSkin", null, !0), 
            this.registWindow(e.WindowType.WINDOW_MAIL, e.MailWindow, "news/mailWindowSkin"), 
            this.registWindow(e.WindowType.WINDOW_NEWS, e.NewsWindow, "news/newsWindowSkin"), 
            this.registGroupSmall(e.WindowType.GROUP_NEWS, [ e.WindowType.WINDOW_NEWS, e.WindowType.WINDOW_MAIL ], "news", !0, !0), 
            this.registWindow(e.WindowType.WINDOW_SETTING, e.SettingWindow, "setting/SettingSkin", "setting", !0, !0), 
            this.registWindow(e.WindowType.WINDOW_PROTROCOL, e.ProtrocolWindow, "setting/ProtrocolSkin"), 
            this.registWindow(e.WindowType.WINDOW_EXCHANGEBYCODE, e.ExchangeByCodeWindow, "setting/ExchangeByCodeSkin"), 
            this.registWindow(e.WindowType.WINDOW_RETURN, e.ReturnWindow, "return/ReturnWindowSkin"), 
            this.registWindow(e.WindowType.WINDOW_RETURN_SHOW, e.ReturnShowWindow, "return/ReturnShowWindowSkin"), 
            this.registGroupSmall(e.WindowType.GROUP_FRIEND, [ e.WindowType.WINDOW_FRIEND, e.WindowType.WINDOW_PRIVATE_CHAT_LIST, e.WindowType.WINDOW_WORLD_CHAT ], "friend", !0, !0), 
            this.registWindow(e.WindowType.WINDOW_FRIEND, e.FriendWindow, "friend/FriendSkin"), 
            this.registGroupSmall(e.WindowType.GROUP_FRIEND_RECOMMEND, [ e.WindowType.WINDOW_RECOMMEND_NEARBY, e.WindowType.WINDOW_RECOMMEND_ONLINE ], null, !0, !1, 2), 
            this.registWindow(e.WindowType.WINDOW_RECOMMEND_NEARBY, e.FriendRecommendNearbyWindow, "friend/FriendRecommendNearbySkin", null, !1), 
            this.registWindow(e.WindowType.WINDOW_RECOMMEND_ONLINE, e.FriendRecommendOnlineWindow, "friend/FriendRecommendOnlineSkin", null, !1), 
            this.registWindow(e.WindowType.WINDOW_NEW_FRIEND, e.NewFriendWindow, "friend/NewFriendSkin"), 
            this.registWindow(e.WindowType.WINDOW_PRIVATE_CHAT_LIST, e.ChatPrivateListWindow, "friend/ChatPrivateListSkin"), 
            this.registWindow(e.WindowType.WINDOW_WORLD_CHAT, e.ChatWorldWindow, "friend/ChatWorldSkin"), 
            this.registWindow(e.WindowType.WINDOW_PRIVATE_CHAT, e.ChatPrivateWindow, "friend/ChatPrivateSkin", null, !0), 
            this.registWindow(e.WindowType.WINDOW_EXCHANGE, e.ExchangeWindow, "friend/ExchangeSkin", null, !0, !0), 
            this.registWindow(e.WindowType.WINDOW_EXCHANGE_RESPONSE, e.ExchangeResponseWindow, "friend/ExchangeResponseSkin", null, !0, !0), 
            this.registWindow(e.WindowType.WINDOW_OCTOPUS_FRIEND, e.OctopusFriendListWindow, "common/ComFriendListSkin", "octopus", !0), 
            this.registWindow(e.WindowType.WINDOW_OCTOPUS_MES, e.OctopusMesWindow, "common/ComNewsSkin", "octopus"), 
            this.registWindow(e.WindowType.WINDOW_OCTOPUS_REWARD, e.OctopusRewardWindow, "octopus/OctopusRewardSkin", "octopus", !0), 
            this.registWindow(e.WindowType.WINDOW_OCTOPUS_REWARDPOP, e.OctopusRewardPopWindow, "common/ComRewardPopSkin", "octopus"), 
            this.registWindow(e.WindowType.WINDOW_OCTOPUS_NEWS, e.OctopusNewsWindow, "common/ComNewsSkin", "octopus", !0), 
            this.registWindow(e.WindowType.WINDOW_OCTOPUS_GETPROP, e.OctopusGetPropWindow, "common/ComGetPropSkin", "octopus"), 
            this.registWindow(e.WindowType.WINDOW_OCTOPUS_BTN, e.OctopusBtnWindow, "common/ComAcPropBtnWindowSkin", "octopus", !1, !1, !1), 
            this.registWindow(e.WindowType.WINDOW_OCTOPUS_SENDPROP, e.OctopusSendPropWindow, "common/ComSendPropSkin", "octopus"), 
            this.registWindow(e.WindowType.WINDOW_OCTOPUS_SENDFRIEND, e.OctopusFriendWindow, "common/ComFriendListSkin", "octopus", !0), 
            this.registWindow(e.WindowType.WINDOW_OCTOPUS_EXCHANG, e.OctopusExchangeWindow, "common/ComFriendListSkin", "octopus", !0), 
            this.registWindow(e.WindowType.WINDOW_OCTOPUS_PUFFERPOP, e.OctopusPufferPopWindow, "octopus/OctopusPufferPopSkin", "octopus", !0), 
            this.registWindow(e.WindowType.WINDOW_MAP_MINE, e.MineWindow, "map/MineSkin", "map"), 
            this.registWindow(e.WindowType.WINDOW_OCTOPUS_HELP, e.OctopusHelpWindow, "octopus/OctopusHelpSkin", null, !1, !0, !1), 
            this.registWindow(e.WindowType.WINDOW_OCTOPUS_PAYCONFIRM, e.OctopusPayConfirmWindow, "octopus/OctopusPayConfirmSkin", null, !1), 
            this.registWindow(e.WindowType.WINDOW_OCTOPUS_GAINREWARD, e.OctopusGainRewardWindow, "octopus/OctopusGainRewardSkin", null, !0, !1, !1), 
            this.registWindow(e.WindowType.WINDOW_GUILD_MEMBERLIST, e.GuildMemListWindow, "guild/GuildListSkin", null, !0), 
            this.registWindow(e.WindowType.WINDOW_GUILD_SUC, e.GuildJoinSuccessWindow, "guild/GuildJoinSuccessSkin"), 
            this.registWindow(e.WindowType.WINDOW_GUILD_DONATE, e.GuildDonateWindow, "guild/GuildDonateWindowSkin", null, !1, !1, !1), 
            this.registWindow(e.WindowType.WINDOW_GUILD_WELFARE, e.GuildWelfareWindow, "guild/GuildWelfareWindowSkin", null, !0), 
            this.registWindow(e.WindowType.WINDOW_GUILD_APPLY, e.GuildApplyWindow, "guild/GuildComListSkin", null, !0), 
            this.registWindow(e.WindowType.WINDOW_GUILD_FEEDBACK, e.GuildFeedbackWindow, "guild/GuildFeedbackWindowSkin", null, !0), 
            this.registWindow(e.WindowType.WINDOW_GUILD_FEEDBACK_SHOW, e.GuildFeedbackShowWindow, "guild/GuildFeedbackShowWindowSkin"), 
            this.registWindow(e.WindowType.WINDOW_GUILD_SETTING, e.GuildSettingWindow, "guild/GuildSettingSkin", null, !0), 
            this.registWindow(e.WindowType.WINDOW_GUILD_SHOP, e.GuildShopWindow, "guild/GuildShopSkin", null, !0), 
            this.registWindow(e.WindowType.WINDOW_GUILD_BUY, e.GuildShopBuyWindow, "guild/GuildShopBuySkin", null, !0), 
            this.registWindow(e.WindowType.WINDOW_GUILD_NOTICE, e.GuildEditorNoticeWindow, "guild/GuildEditorNoticeSkin"), 
            this.registWindow(e.WindowType.WINDOW_GUILD_DONATE_NEWS, e.GuildDonateNewsWindow, "guild/GuildComListSkin"), 
            this.registWindow(e.WindowType.WINDOW_GUILD_SYSTEM_NEWS, e.GuildSystemWindow, "guild/GuildComListSkin"), 
            this.registWindow(e.WindowType.WINDOW_GUILD_POSTION, e.GuildPositionWindow, "guild/GuildPositionSkin", null, !0), 
            this.registWindow(e.WindowType.WINDOW_GUILD_OPERATION, e.GuildOperationWindow, "guild/GuildOperationSkin", null, !0, !1, !1), 
            this.registWindow(e.WindowType.WINDOW_GUILD_INVITE, e.GuildInviteWindow, "guild/GuildInviteSkin"), 
            this.registWindow(e.WindowType.WINDOW_GUILD_RENAME, e.GuildRenameWindow, "guild/GuildRenameWindowSkin", null, !0), 
            this.registWindow(e.WindowType.WINDOW_MODULEUNLOCK, e.ComUnlockWindow, "common/ComUnlockSkin"), 
            this.registWindow(e.WindowType.WINDOW_ITEM_TIP, e.ItemTipWindow, "common/ItemTipWindow"), 
            this.registWindow(e.WindowType.WINDOW_COMWITHHEADPANEL, e.ComWithHeadWindow, "common/ComWithHeadSkin"), 
            this.registWindow(e.WindowType.WINDOW_TREESEEKHELPSHARE, e.TreeSeekHelpShareWindow, "tree/TreeSeekHelpShareSkin", "trader"), 
            this.registWindow(e.WindowType.WINDOW_TREEAIDFRIEND, e.TreeAidFriendWindow, "tree/TreeAidFriendSkin", "trader"), 
            this.registWindow(e.WindowType.WINDOW_TREEDRESS, e.TreeDressWindow, "tree/TreeDressSkin", "trader"), 
            this.registWindow(e.WindowType.WINDOW_TREENEWS, e.TreeNewsWindow, "common/ComNewsSkin", null, !0), 
            this.registWindow(e.WindowType.WINDOW_SAILING_MATCH_INFO, e.SailingMatchInfoWindow, "sailing/SailingMatchInfoSkin", null, !0), 
            this.registWindow(e.WindowType.WINDOW_SAILING_RANK, e.SailingRankWindow, "sailing/SailingRankSkin", null, !0), 
            this.registWindow(e.WindowType.WINDOW_SAILING_REWARD, e.SailingRewardWindow, "sailing/SailingRewardUISkin", null, !0), 
            this.registWindow(e.WindowType.WINDOW_SAILING_DEPOT, e.SailingTaskDepotWindow, "sailing/SailingTaskDepotSkin", null, !0), 
            this.registWindow(e.WindowType.WINDOW_SAILING_DEPOT_INFO, e.SailingTaskDepotInfoWindow, "sailing/SailingTaskDepotInfoSkin", null, !0), 
            this.registWindow(e.WindowType.WINDOW_SAILING_TASK, e.SailingTaskWindow, "sailing/SailingTaskViewSkin", null, !0), 
            this.registWindow(e.WindowType.WINDOW_SAILING_SCORE_RANK, e.SailingScoreRankWindow, "sailing/SailingScoreRankSkin", null, !0), 
            this.registWindow(e.WindowType.WINDOW_SAILING_WHEEL, e.SailingWheelWindow, "sailing/SailingWheelSkin", null, !0), 
            this.registWindow(e.WindowType.WINDOW_SAILING_MATCH_OPERATION, e.SailingMatchOperationWindow, "sailing/SailingMatchOperationSkin", null, !0, !1, !1), 
            this.registWindow(e.WindowType.WINDOW_SAILING_MATCH_CUP, e.SailingGuildCupInfoWindow, "sailing/SailingGuildCupInfoSkin", null, !0), 
            this.registWindow(e.WindowType.WINDOW_SAILING_REWARD_OPERATION, e.SailingRewardOperationWindow, "sailing/SailingRewardOperationSkin", null, !0, !1, !1), 
            this.registWindow(e.WindowType.WINDOW_SAILING_FINAL_REWARD, e.SailingFinalRewardWindow, "sailing/SailingFinalRewardSkin", null, !0, !0), 
            this.registWindow(e.WindowType.WINDOW_PIRATEGIFT, e.PirateGiftWindow, "gift/PirateGiftSkin", "pirateGift"), 
            this.registWindow(e.WindowType.WINDOW_REALNAME_GIFT, e.PirateGiftWindow, "gift/realNameGiftSkin", "rzGift"), 
            this.registWindow(e.WindowType.WINDOW_WHEEL_COUPLESHIELD, e.WheelCpShieldWindow, "wheel/WheelCpShieldSkin"), 
            this.registWindow(e.WindowType.WINDOW_CP_TEMP, e.CPWindow, "cp/CPWindowSkin"), this.registWindow(e.WindowType.WINDOW_GUIDE_OVER, e.GuideOverWindow, "tutorial/GuideOverSkin", null, !0), 
            this.registWindow(e.WindowType.WINDOW_PET_HATCH, e.PetHatchWindow, "pet/PetHatchSkin"), 
            this.registWindow(e.WindowType.WINDOW_PET_OPENEGG, e.PetOpenEggWindow, "pet/PetOpenEggSkin"), 
            this.registWindow(e.WindowType.WINDOW_WHEEL_GOTOWHEELALERT, e.GotoWheelAlertWindow, "tree/GotoWheelAlertSkin"), 
            this.registWindow(e.WindowType.WINDOW_ADDREGRESSFRIEND, e.AddRegressFriendWindow, "friend/AddRegressFriendSkin"), 
            this.registWindow(e.WindowType.WINDOW_OPEN_FUNC, e.GuideOpenWindow, "tutorial/GuideOpenSkin", null, !0), 
            this.registWindow(e.WindowType.WINDOW_WX_FRIEND, e.WxFriendWindow, "wxgame/WxFriendWindowSkin", null, !0), 
            this.registWindow(e.WindowType.WINDOW_FESTIVALBALLOON, e.FestivalBalloonWindow, "activity/FestivalBalloonSkin", null, !0, !1, !1), 
            this.registWindow(e.WindowType.WINDOW_FOCUS_REWARD_TIP, e.FocuRewardTipWindow, "focureward/FocuRewardTipWindowSkin"), 
            this.registWindow(e.WindowType.WINDOW_WXFOCUS_DESCNEW, e.FocusDescNewWindow, "focureward/FocusDescNewWindowSkin"), 
            this.registWindow(e.WindowType.WINDOW_WXFOCUS_NOREWARD, e.FocusNoRewardWindow, "focureward/FocusNoRewardWindowSkin"), 
            this.registWindow(e.WindowType.WINDOW_MULTIPLE_GOLD, e.MultipleGoldWindow, "main/MultipleGoldSkin", null, !0), 
            this.registWindow(e.WindowType.WINDOW_RANKUP, e.RankUpWindow, "rankUp/RankUpSkin", null, !0, !1, !1), 
            this.registWindow(e.WindowType.WINDOW_WHEEL_DOUBLECARD, e.WheelDoubleMoneyWindow, "wheel/WheelDoubleMoneySkin", null, !1, !0, !1), 
            this.registWindow(e.WindowType.WINDOW_BIND, e.AccountBindWindow, "setting/AccountBindSkin"), 
            this.registWindow(e.WindowType.WINDOW_RECOMMEND_ANIM, e.RecommendAnimWindow, "friend/RecommendAnimSkin", "friend"), 
            this.registWindow(e.WindowType.WINDOW_ANNUAL_MAIN, e.AnnualMainWindow, "annual/AnnualMainSkin", "annual", !0), 
            this.registWindow(e.WindowType.WINDOW_ANNUAL_BTN, e.AnnualBtnWindow, "common/ComAcPropBtnWindowSkin", null, !1, !1, !1), 
            this.registWindow(e.WindowType.WINDOW_ANNUAL_SENDFRIEND, e.AnnualFriendWindow, "common/ComFriendListSkin", null, !0), 
            this.registWindow(e.WindowType.WINDOW_ANNUAL_SENDPROP, e.AnnualSendPropWindow, "common/ComSendPropSkin"), 
            this.registWindow(e.WindowType.WINDOW_ANNUAL_NEWS, e.AnnualNewsWindow, "common/ComNewsSkin", null, !0), 
            this.registWindow(e.WindowType.WINDOW_ANNUAL_GETPROP, e.AnnaulGetPropWindow, "common/ComGetPropSkin"), 
            this.registWindow(e.WindowType.WINDOW_ANNUAL_REWARDPOP, e.AnnaulRewardPopWindow, "common/ComRewardPopSkin"), 
            this.registWindow(e.WindowType.WINDOW_ANNUAL_WISHREWARD, e.AnnualWishRewardWindow, "common/ComRewardPopSkin"), 
            this.registWindow(e.WindowType.WINDOW_ANNUAL_REBATREWARD, e.AnnualRebatRewardWindow, "common/ComRewardPopSkin"), 
            this.registWindow(e.WindowType.WINDOW_ANNUALBOX, e.AnnualBoxWindow, "annual/AnnualBoxSkin", "annualbox", !0), 
            this.registWindow(e.WindowType.WINDOW_ANNUAL_REWARD_LIST, e.AnnualRewardListWindow, "annual/AnnualRewardListSkin", "annualbox", !0), 
            this.registWindow(e.WindowType.WINDOW_ANNUAL_LOGS, e.AnnualLogsWindow, "annual/AnnualLogsSkin", "annualbox", !1, !1, !1), 
            this.registWindow(e.WindowType.WINDOW_WALL_TASK, e.WxWallTaskWindow, "platform/WxWallTaskSkin", null, !0), 
            this.registWindow(e.WindowType.WINDOW_KITE_MAIN, e.KiteMainWindow, "kite/KiteMainSkin", "kite", !0), 
            this.registWindow(e.WindowType.WINDOW_KITE_BTN, e.KiteBtnWindow, "common/ComAcPropBtnWindowSkin", null, !1, !1, !1), 
            this.registWindow(e.WindowType.WINDOW_KITE_SENDFRIEND, e.KiteFriendWindow, "common/ComFriendListSkin", null, !0), 
            this.registWindow(e.WindowType.WINDOW_KITE_SENDPROP, e.KiteSendPropWindow, "common/ComSendPropSkin"), 
            this.registWindow(e.WindowType.WINDOW_KITE_NEWS, e.KiteNewsWindow, "common/ComNewsSkin", null, !0), 
            this.registWindow(e.WindowType.WINDOW_KITE_GETPROP, e.KiteGetPropWindow, "common/ComGetPropSkin"), 
            this.registWindow(e.WindowType.WINDOW_KITE_REWARD, e.KiteRewardWindow, "common/ComRewardPopWithCbSkin"), 
            this.registWindow(e.WindowType.WINDOW_KITE_SUCCESSPOP, e.KiteSuccessPopWindow, "kite/KiteSuccessPopSkin", "kite", !0), 
            this.registWindow(e.WindowType.WINDOW_KITE_SCREEN, e.KiteScreen, "kite/KiteScreenSkin", "kite", !0), 
            this.registWindow(e.WindowType.WINDOW_BANNER_INFO, e.BannerInfoWindow, "notice/BannerInfoWindowSkin", "bannerInfo", !0);
        }, i;
    }(hortor.Register);
    e.WindowRegister = t, __reflect(t.prototype, "game.WindowRegister");
}(game || (game = {}));

var game;

!function(e) {
    var t = function() {
        function t() {}
        return t.formatNumber = function(e) {
            if (1 > e && e > 0) return "1";
            e = Math.floor(e);
            var i = Math.floor(t.getExponent(e));
            if (13 > i) {
                if (4 > i) return e + "";
                var n = Math.floor(i / t.constNum), o = i % t.constNum, a = String(e / Math.pow(10, n * t.constNum)).substr(0, t.constNum + o);
                return a + t.getUnit(i);
            }
            var r = e / Math.pow(10, i);
            return r.toFixed(3) + "e" + i;
        }, t.getUnit = function(e) {
            var i = Math.floor(e / t.constNum);
            if (13 > e) return t.unitArr[i];
            var i = Math.floor(e / t.constNum);
            return "e" + i * t.constNum;
        }, t.formatEngNumber = function(e) {
            var t, i;
            return e = e, e >= 1e6 ? (i = e / 1e6, t = (.01 * Math.floor(i / .01)).toFixed(2), 
            this.formatEndingZero(t) + "M") : e >= 1e3 ? (i = e / 1e3, t = (.01 * Math.floor(i / .01)).toFixed(2), 
            this.formatEndingZero(t) + "K") : e + "";
        }, t.formatEndingZero = function(e) {
            return this.endWith(e, "00") ? e.substring(0, e.length - 3) : this.endWith(e, "0") ? e.substring(0, e.length - 1) : e;
        }, t.endWith = function(e, t) {
            return t == e.substring(e.length - t.length);
        }, t.getExponent = function(e) {
            for (var t = 0; e >= 10; ) t++, e /= 10;
            return t;
        }, t.toThousands = function(e) {
            return (e || 0).toString().replace(/(\d)(?=(?:\d{3})+$)/g, "$1,");
        }, t.trim = function(e, t) {
            var i = e.replace(/(^\s*)|(\s*$)/g, "");
            return t && (i = i.replace(/\s/g, "")), i;
        }, t.setCookie = function(e, t, i) {
            var n = new Date();
            n.setTime(n.getTime() + i), document.cookie = e + "=" + encodeURIComponent(t) + (null == i ? "" : ";expires=" + n.toUTCString());
        }, t.getCookie = function(e) {
            if (document.cookie.length > 0) {
                var t = document.cookie.indexOf(e + "=");
                if (-1 != t) {
                    t = t + e.length + 1;
                    var i = document.cookie.indexOf(";", t);
                    return -1 == i && (i = document.cookie.length), decodeURIComponent(document.cookie.substring(t, i));
                }
            }
            return null;
        }, t.delCookie = function(e) {
            var t = new Date();
            t.setTime(t.getTime() - 1);
            var i = this.getCookie(e);
            null != i && (document.cookie = e + "=" + i + ";expires=" + t.toUTCString());
        }, t.getQueryString = function(e) {
            var t = new RegExp("(^|&)" + e + "=([^&]*)(&|$)", "i"), i = window.location.search.substr(1).match(t);
            return null != i ? decodeURIComponent(i[2]) : null;
        }, t.invokeCallback = function(e, t) {
            e && "function" == typeof e && e.apply(null, Array.prototype.slice.call(arguments, 1));
        }, t.randomReal = function(e, t) {
            return _.isArray(e) && (t = e[1], e = e[0]), Math.random() * (t - e) + e;
        }, t.randomInt = function(e, t) {
            return _.isArray(e) && (t = e[1], e = e[0]), Math.floor(Math.random() * (t - e + 1)) + e;
        }, t.randomRate = function(e) {
            return Math.random() < e;
        }, t.groupBy = function(e, t, i) {
            var n = {};
            return _.each(e, function(e) {
                n[e[t]] = n[e[t]] || {}, n[e[t]][e[i]] = e;
            }), n;
        }, t.formatTime = function(e, t) {
            var i = Math.floor(e / 3600 / 24);
            if (i > 0) return i + "天";
            var n = Math.floor(e / 3600), o = Math.floor(e % 3600), a = Math.floor(o / 60);
            o %= 60;
            var r = 60 * n;
            if (a = t ? a : r + a, t && 0 > e) return "00:00:00";
            if (0 > e) return "0";
            var s = "";
            return t && ("auto" != t || 0 != n) && (s = n >= 10 ? n.toString() : "0" + n, s += ":"), 
            a >= 10 ? s += a : s = s + "0" + a, s = o >= 10 ? s + ":" + o : s + ":0" + o;
        }, t.formatTimeCN = function(e, t) {
            var i = Math.floor(e / 3600 / 24);
            if (i > 0) return i + "天";
            var n = Math.floor(e / 3600), o = Math.floor(e % 3600 / 60), a = Math.floor(e % 3600 % 60);
            if (0 > e) return "0";
            var r = "";
            return 0 != n && (r = n >= 10 ? n.toString() : "0" + n, r += "小时"), o >= 10 ? r += o : r = r + "0" + o, 
            r = a >= 10 ? r + "分" + a : r + "分0" + a, r += "秒";
        }, t.formatTimeCNAll = function(e, t) {
            var i = Math.floor(e / 3600 / 24), n = Math.floor(e / 3600) - 24 * i, o = Math.floor(e % 3600 / 60), a = Math.floor(e % 3600 % 60);
            if (0 > e) return "0";
            var r = "";
            if (i > 0 && (r = i + "天"), 0 != n) {
                var s = "";
                s = n >= 10 ? n.toString() : "0" + n, r += s + "小时";
            }
            return o >= 10 ? r += o : r = r + "0" + o, r = a >= 10 ? r + "分" + a : r + "分0" + a, 
            r += "秒";
        }, t.isLocalServer = function() {
            return "1" == t.getQueryString("d");
        }, t.isQAServer = function() {
            return "2" == t.getQueryString("d");
        }, t.isOnlineServer = function() {
            return !t.isLocalServer() && !t.isQAServer();
        }, t.stopEvent = function(e) {
            e.addEventListener(egret.TouchEvent.TOUCH_TAP, function(e) {
                e.stopPropagation();
            }, this);
        }, t.showTimeBefore = function(e) {
            var t = "刚刚", i = moment().month() - moment.unix(e).month(), n = moment().date() - moment.unix(e).date() + 30 * i;
            if (1 > n) {
                var o = moment().hour() - moment.unix(e).hour();
                o > 1 && (t = o + "小时前");
            } else n = n > 30 ? 30 : n, t = n + "天前";
            return t;
        }, t.showTimeBeforeNew = function(e) {
            var t = "刚刚", i = moment().unix() - e, n = Math.floor(i / 60), o = Math.floor(i / 60 / 60), a = Math.floor(i / 60 / 60 / 24);
            return 1 > a ? 1 > o ? n > 0 && (t = n + "分钟前") : t = o + "小时前" : (a = a > 30 ? 30 : a, 
            t = a + "天前"), t;
        }, t.showTimeNormal = function(e) {
            var t = "", i = 30, n = moment.unix(e).month(), o = moment().month() - n;
            1 == n ? i = 28 : (0 == n || 2 == n || 4 == n || 6 == n || 7 == n || 9 == n || 11 == n) && (i = 31);
            var a = moment().date() - moment.unix(e).date() + o * i;
            if (1 > a) {
                var r = moment.unix(e).minute();
                if (10 > r) var s = "0" + r; else var s = r + "";
                t = moment.unix(e).hour() + ":" + s;
            } else if (1 == a) {
                var r = moment.unix(e).minute();
                if (10 > r) var s = "0" + r; else var s = r + "";
                t = "昨天" + moment.unix(e).hour() + ":" + s;
            } else t = a + "天前";
            return t;
        }, t.showElapseTime = function(e) {
            var t = "刚刚", i = e, n = Math.floor(i / 60), o = Math.floor(i / 60 / 60), a = Math.floor(i / 60 / 60 / 24);
            return 1 > a ? 1 > o ? n > 0 && (t = n + "分钟前") : t = o + "小时前" : (a = a > 30 ? 30 : a, 
            t = a + "天前"), t;
        }, t.isEmojiCharacter = function(e) {
            for (var t = 0, i = [], n = 0; n < e.length; n++) {
                var o = e.charCodeAt(n);
                if (o >= 55296 && 56319 >= o) {
                    if (e.length > 1) {
                        var a = e.charCodeAt(n + 1), r = 1024 * (o - 55296) + (a - 56320) + 65536;
                        r >= 118784 && 128895 >= r && (i.push(n), n++, t++);
                    }
                } else if (e.length > 1) {
                    var a = e.charCodeAt(n + 1);
                    8419 == a && (i.push(n), n++, t++);
                } else o >= 8448 && 10239 >= o ? (i.push(n), t++) : o >= 11013 && 11015 >= o ? (i.push(n), 
                t++) : o >= 10548 && 10549 >= o ? (i.push(n), t++) : o >= 12951 && 12953 >= o ? (i.push(n), 
                t++) : (169 == o || 174 == o || 12349 == o || 12336 == o || 11093 == o || 11036 == o || 11035 == o || 11088 == o) && (i.push(n), 
                t++);
            }
            return i;
        }, t.showChangeEffect = function(e) {
            var t = egret.Tween.get(e);
            t.to({
                scaleX: 1.4,
                scaleY: 1.4
            }, 300, egret.Ease.quadOut).to({
                scaleX: 1,
                scaleY: 1
            }, 100).call(function() {
                e && e.parent && egret.Tween.removeTweens(e);
            });
        }, t.enCodeHtml = function(e) {
            return e;
        }, t.unCodeHtml = function(e) {
            return e = e.replace(/%25/g, "%"), e = e.replace(/%2B/g, "+"), e = e.replace(/%2F/g, "/"), 
            e = e.replace(/%3F/g, "?"), e = e.replace(/%23/g, "#"), e = e.replace(/%26/g, "&"), 
            e = e.replace(/%3d/g, "=");
        }, t.formatTimeMS = function(e) {
            if (e /= 1e3, 0 > e) return "";
            var t = "", i = Math.floor(e / 3600), n = Math.floor(e % 3600 / 60), o = Math.floor(e % 3600 % 60);
            return t += i >= 10 ? i.toString() + ":" : "0" + i + ":", n >= 10 ? t += n : t = t + "0" + n, 
            t = o >= 10 ? t + ":" + o : t + ":0" + o;
        }, t.getWheelGoldEffectNum = function(e) {
            var t = 10;
            return e > 1e4 && 25e3 >= e ? t = 17 : e > 25e3 && 5e4 >= e ? t = 25 : e > 5e4 && (t = 30), 
            t;
        }, t.isShowPayNode = function(e) {
            e.visible = gateModel.iosPay;
        }, t.PopConfirmView = function(e, t, i, n, o) {
            console.log("PopConfirmView == ", e, t);
        }, t.PopConfirmWithIconView = function(e, t, i, n) {
            console.log(">>>>>PopConfirmWithIconView ", e, t);
        }, t.PopConfirmWithHeadView = function(t, i, n, o) {
            void 0 === n && (n = null), void 0 === o && (o = "common_json.tjtc_txt_yqts"), hortor.WindowManager.showWindow(e.WindowType.WINDOW_COMWITHHEADPANEL, {
                playerInfo: t,
                desc: i,
                cb: n,
                title: o
            });
        }, t.videoReward = function(t) {
            var i = 0;
            switch (t) {
              case e.AdType.adUnitId_dailyEnergy:
                dailyModel.dailyEventInfo.dailyEnergyADRemain--;
                var n = hortor.WindowManager.getWindow(e.WindowType.GROUP_DAILYREWARD);
                n && n.dailyEnergy.initVideo(), i = 1;
                break;

              case e.AdType.adUnitId_noEnergy:
                dailyModel.dailyEventInfo.zeroEnergyADRemain--, i = 2;
            }
            1 > i || HttpService.post(e.ServerMsg.AD_REWARDS, "uid=" + playerModel.uid + "&type=" + i, function(t) {
                EventCenter.sendEvent(EventConst.EnergyChange), hortor.WindowManager.showWindow(e.WindowType.WINDOW_REWARD, t);
            });
        }, t.formatTimeCNNew3 = function(e) {
            if (0 > e) return "";
            var t = "", i = Math.floor(e / 3600 / 24), n = Math.floor(e / 3600), o = Math.floor(e / 60), a = e;
            return i > 0 ? (e %= 86400, n = Math.floor(e / 3600), t += i + "天", t += n >= 10 ? n + "时" : "0" + n + "时") : n > 0 ? (o = Math.floor(e % 3600 / 60), 
            t += n >= 10 ? n + "时" : "0" + n + "时", t += o >= 10 ? o + "分" : "0" + o + "分") : o > 0 ? (t += o >= 10 ? o + "分" : "0" + o + "分", 
            a = Math.floor(e % 3600 % 60), t += a >= 10 ? a + "秒" : "0" + a + "秒") : (t += "00分", 
            t += a >= 10 ? a + "秒" : "0" + a + "秒"), t;
        }, t.headImg = function(t, i) {
            if (!t) return e.ResourcePath.getCommonImg("default_head0");
            var n = "?v=1.0.7", o = t.indexOf("");
            if (-1 != o) return t;
            if ("/0" == t || "" == t) return e.ResourcePath.getCommonImg("default_head0");
            i = i || 96, t = t || "";
            var a = t.replace(/\/0$/, "/" + i) + n;
            return -1 != t.indexOf("/132") && (a = t.replace(/\/132$/, "/" + i) + n), a;
        }, t.canCreateClubBtn = function() {
            if (!gateModel.isWxgame) return !1;
            var i = t.compareVersion(e.WxSystemInfo.SDKVersion, "2.0.3");
            return i >= 0;
        }, t.format_Number_float = function(e) {
            return e = Math.floor(e), e >= 1e6 ? _.numberFormat(e / 1e6, 2) + "M" : e >= 1e3 ? _.numberFormat(e / 1e3) + "K" : _.numberFormat(e);
        }, t.compareVersion = function(e, t) {
            e = e.split("."), t = t.split(".");
            for (var i = Math.max(e.length, t.length); e.length < i; ) e.push("0");
            for (;t.length < i; ) t.push("0");
            for (var n = 0; i > n; n++) {
                var o = parseInt(e[n]), a = parseInt(t[n]);
                if (o > a) return 1;
                if (a > o) return -1;
            }
            return 0;
        }, t.formatTimeHMSMilliSecond = function(e) {
            if (0 > e) return "";
            Math.floor(e / 6e4), Math.floor(e % 6e4 / 1e3), Math.floor(e % 6e4 % 1e3);
        }, t.getPropsCount = function(t) {
            var i = 0;
            switch (t) {
              case "monthcard":
                i = playerModel.monthCardExpired;
                break;

              case "wanted":
                i = playerModel.wantedCount;
                break;

              case "shipwreck":
                i = playerModel.ShipwreckCount;
                break;

              case "cookie":
                i = playerModel.cookieCount;
                break;

              case "potion":
                i = playerModel.potionCount;
                break;

              case "killTitanCannonBall":
                i = playerModel.killTitanCannonBall;
                break;

              case "SummonStone":
                i = playerModel.summonStone;
                break;

              case "miniShield":
                i = playerModel.miniShieldCount;
                break;

              case "puffer":
                i = playerModel.puffer;
                break;

              case "lolly":
                i = playerModel.lolly;
                break;

              case "guildMedal":
                i = playerModel.guildMedal;
                break;

              case "horn":
                i = playerModel.hornCount;
                break;

              case "hamburger":
                i = activityModel.getActivityInfo(e.ActivityType.beach).playerData.hamburger;
                break;

              case "magicBook":
                i = activityModel.getActivityInfo(e.ActivityType.beach).playerData.magicBook;
                break;

              case "beachPowerPotion":
                i = activityModel.getActivityInfo(e.ActivityType.beach).playerData.beachPowerPotion;
            }
            return i;
        }, t.formatTimeHMS = function(e) {
            if (0 > e) return "";
            var t = "", i = Math.floor(e / 3600), n = Math.floor(e % 3600 / 60), o = Math.floor(e % 3600 % 60), a = Math.floor(e % 6e4 % 1e3);
            return t += i >= 10 ? i.toString() + ":" : "0" + i + ":", n >= 10 ? t += n : t = t + "0" + n, 
            t = o >= 10 ? t + ":" + o : t + ":0" + o, t = a >= 100 ? t + "." + a.toString() : a >= 10 ? t + ".0" + a : t + ".00" + a;
        }, t.formatTimeHMSNew = function(e) {
            if (0 > e) return "";
            var t = "", i = Math.floor(e / 3600), n = Math.floor(e % 3600 / 60), o = Math.floor(e % 3600 % 60);
            return i >= 10 ? t += i.toString() + ":" : i > 0 && (t += "0" + i + ":"), n >= 10 ? t += n : t = t + "0" + n, 
            t = o >= 10 ? t + ":" + o : t + ":0" + o;
        }, t.getTimeString = function(e) {
            if (0 > e) return "";
            var t = "", i = Math.floor(e / 3600), n = Math.floor(e % 3600 / 60), o = Math.floor(e % 3600 % 60);
            return t += i >= 10 ? i.toString() : "0" + i, n >= 10 ? t += n : t = t + "0" + n, 
            o >= 10 ? t += o : t = t + "0" + o, t;
        }, t.formatActivityDate = function(e, i) {
            return t.formatDateTime(e) + "至" + t.formatDateTime(i);
        }, t.formatDateTime = function(e) {
            var t = "";
            if (e) {
                var i = new Date(e);
                t += i.getFullYear() + "/", t += i.getMonth() + 1 + "/", t += i.getDate() + "";
            }
            return t;
        }, t.formatTimeMmddhh = function(e) {
            var t = new Date(1e3 * e), i = t.getMonth() + 1, n = t.getDate(), o = t.getHours();
            o = 10 > o ? "0" + o : o;
            var a = i + "月" + n + "日" + o + "时";
            return a;
        }, t.rand = function(e, t) {
            return Math.floor(Math.random() * (t - e)) + e;
        }, t.openHelpPanel = function(t, i) {
            void 0 === i && (i = "帮助信息"), hortor.WindowManager.showWindow(e.WindowType.WINDOW_COMHELP, {
                content: t,
                title: i
            });
        }, t.getUserLocation = function(e, t) {
            var i = Province[e];
            return 0 != e && 0 != t && City[e] && City[e][t] && (i += " " + City[e][t]), i;
        }, t.toTodayTime = function(e) {
            var t = "昨天", i = 30, n = moment.unix(e).month(), o = moment().month() - n;
            1 == n ? i = 28 : (0 == n || 2 == n || 4 == n || 6 == n || 7 == n || 9 == n || 11 == n) && (i = 31);
            var a = moment().date() - moment.unix(e).date() + o * i;
            if (1 > a) {
                var r = moment.unix(e).minute();
                if (10 > r) var s = "0" + r; else var s = r + "";
                t = "今天" + moment.unix(e).hour() + ":" + s;
            } else t = 1 == a ? "昨天" : a + "天前";
            return t;
        }, t.getFreeEnergyData = function(e, t) {
            var i = e;
            return i.sort(function(e, t) {
                return e.updateElapse - t.updateElapse;
            }), t && (t.isCp = !0, i.unshift(t)), i;
        }, t.checkMobileDevice = function() {
            console.log("check isNotchMobile"), hortor.SystemManager.isWxGame && platform.user.getSystemInfo(function(i) {
                e.WxSystemInfo = i;
                t.trim(i.model, !0);
                console.warn("mobileSystem info:", e.WxSystemInfo), hortor.SystemManager.isNotchMobile = i.screenHeight / i.screenWidth > 2, 
                console.log("isNotchMobile---\x3e>>> ", hortor.SystemManager.isNotchMobile);
            });
        }, t.getReportLimit = function(e) {
            var t = 5;
            return t = 50 > e ? 5 : 200 > e ? 7 : 500 > e ? 10 : 1e3 > e ? 20 : 30;
        }, t.setDefaultFilters = function(e) {
            if (e) {
                var t = [ 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0 ], i = new egret.ColorMatrixFilter(t);
                e.filters = [ i ];
            }
        }, t.setGrayFilters = function(e) {
            if (e) {
                var t = [ .3, .6, 0, 0, 0, .3, .6, 0, 0, 0, .3, .6, 0, 0, 0, 0, 0, 0, 1, 0 ], i = new egret.ColorMatrixFilter(t);
                e.filters = [ i ];
            }
        }, t.onBuyReward = function(t, i) {
            hortor.WindowManager.showWindow(e.WindowType.WINDOW_REWARD, t, null, null, i), hortor.NotificationManager.dispatch(e.NotificationType.PLAYER_UPDATE);
        }, t.getRewardView = function(t) {
            hortor.WindowManager.showWindow(e.WindowType.WINDOW_REWARD, t);
        }, t.getRobot = function(t) {
            var i = {
                crowns: 0,
                headImg: "",
                name: ""
            };
            HttpService.get(e.ServerMsg.ROBOT, "uid=" + playerModel.uid, function(e) {
                i = e, t(i);
            });
        }, t.inputLimit = function(e, i) {
            for (var n = 0, o = t.trim(e.text), a = 0; a < o.length; a++) {
                var r = new RegExp("[\\u4E00-\\u9FFF]", "");
                n += r.test(o[a]) ? 2 : 1;
            }
            if (i >= n) e.text = o; else {
                for (var s = "", l = 0, d = e.text, a = 0; a < d.length; a++) {
                    var r = new RegExp("[\\u4E00-\\u9FFF]", "");
                    l += r.test(d[a]) ? 2 : 1, i >= l && (s += d[a]);
                }
                e.text = s;
            }
        }, t.showRemindView = function(t, i, n) {
            void 0 === i && (i = 0), "focus" == t && playerModel.isSubscribed || (Const.FocusInterFaceId && "focus" == t && -1 != i && gateModel.isWxgame ? hortor.WindowManager.currentWindow = e.WindowType.WINDOW_WXFOCUSTIP : hortor.WindowManager.currentWindow = e.WindowType.WINDOW_WXFOCUS_NOREWARD);
        }, t.openComConfirmPanel = function(t) {
            hortor.WindowManager.showWindow(e.WindowType.WINDOW_MODULEUNLOCK, {
                type: t
            });
        }, t.ctsShowAlertView = function(t) {
            HttpService.post(e.ServerMsg.REFRESH_SHOW_BOX, {
                uid: playerModel.uid,
                boxName: t
            }, function(e) {
                console.log("refresh-show-box == >", e);
            });
        }, t.getPopReward = function(t, i) {
            var n = {};
            n[t] = i;
            var o = {
                fly: !0,
                reward: n
            };
            hortor.WindowManager.showWindow(e.WindowType.WINDOW_REWARD, o);
        }, t.rankToIsland = function() {
            var t = rankModel.selectedRankPlayer;
            if (t && t.fromType) switch (t.fromType) {
              case Const.RankToIsland:
                e.ComFunc.hideViewByWindowType(e.WindowType.WINDOW_RANK);
                break;

              case Const.HateToIsland:
                e.ComFunc.hideViewByWindowType(e.WindowType.WINDOW_ENEMY);
                break;

              case Const.Buildings:
                e.ComFunc.hideViewByWindowType(-1);
                break;

              case Const.ChatPerson:
                e.ComFunc.hideViewByWindowType(e.WindowType.GROUP_FRIEND);
                break;

              case Const.NewsAndMails:
                e.ComFunc.hideViewByWindowType(e.WindowType.GROUP_NEWS);
                break;

              case Const.GuildsChat:
                e.ComFunc.hideViewByWindowType(-1);
                break;

              case Const.PlaneRank:
                e.ComFunc.hideViewByWindowType(-1);
                break;

              case Const.PlaneLogs:
                e.ComFunc.hideViewByWindowType(-1);
                break;

              case Const.FriendCity:
                e.ComFunc.hideViewByWindowType(e.WindowType.GROUP_FRIEND);
                break;

              case Const.FriendInfo:
                e.ComFunc.hideViewByWindowType(e.WindowType.GROUP_FRIEND), e.ComFunc.hideViewByWindowType(-1);
                break;

              case Const.WorldChat:
                e.ComFunc.hideViewByWindowType(e.WindowType.GROUP_FRIEND);
                break;

              case Const.RecallToIsland:
                e.ComFunc.hideViewByWindowType(e.WindowType.WINDOW_RECALL), e.ComFunc.hideViewByWindowType(e.WindowType.WINDOW_RECALL_REWARD);
                break;

              case Const.RecallTaskToIsland:
                e.ComFunc.hideViewByWindowType(-1);
                break;

              case Const.ShareCheerToIsland:
                e.ComFunc.hideViewByWindowType(e.WindowType.WINDOW_HELPGIFT);
            }
            hortor.ScreenManager.getScreen(e.ScreenType.ISLANDSPACE) && hortor.ScreenManager.hideScreen(e.ScreenType.ISLANDSPACE), 
            hortor.ScreenManager.showScreen(e.ScreenType.ISLANDSPACE);
        }, t.hideViewByWindowType = function(e) {
            -1 != e && hortor.WindowManager.hideWindow(e);
        }, t.dealGuildRewardData = function(e) {
            var t = {};
            for (var i in e) "jigsaw" == i ? (t["jigsaw" + (e[i] - 1)] = 1, jigsawModel.jigsawInfo.bags[e[i] - 1] += 1) : "jewel" == i ? t["octopus" + (e[i] - 1)] = 1 : "word" == i ? (AnnualData.annualCollect.bags[e[i] - 1] += 1, 
            t["annualCollect" + e[i]] = 1) : t[i] = e[i];
            return t;
        }, t.addRewardData = function(e) {
            for (var t in e) switch (t) {
              case "energy":
                playerModel.energy += e[t];
                break;

              case "money":
                playerModel.money += e[t];
                break;

              case "wanted":
                playerModel.wantedCount += e[t];
                break;

              case "potion":
                playerModel.potionCount += e[t];
                break;

              case "cookie":
                playerModel.cookieCount += e[t];
                break;

              case "lolly":
                playerModel.lolly += e[t];
                break;

              case "puffer":
                playerModel.puffer += e[t];
                break;

              case "miniShield":
                playerModel.miniShieldCount += e[t];
                break;

              case "allInOne":
                playerModel.allInOnePiece += e[t];
                break;

              case "horn":
                playerModel.hornCount += e[t];
                break;

              case "doubleMoneyCard":
                playerModel.doubleMoneyCard += e[t];
                break;

              case "oCard":
                break;

              case "fCard":
                break;

              case "wishCoin":
                AnnualData.luckyBox.wishCoin += e[t];
            }
        }, t.dealInputText = function(e, i) {
            for (var n = 0, o = t.trim(e), a = 0; a < o.length; a++) {
                var r = new RegExp("[\\u4E00-\\u9FFF]", "");
                n += r.test(o[a]) ? 2 : 1;
            }
            if (i >= n) return o;
            for (var s = "", l = 0, a = 0; a < o.length; a++) {
                var r = new RegExp("[\\u4E00-\\u9FFF]", "");
                l += r.test(o[a]) ? 2 : 1, i >= l && (s += e[a]);
            }
            return s;
        }, t.checkRest = function() {
            if (gateModel.isWxgame) {
                var i = {
                    space: 60,
                    maxGameTime: 300
                }, n = t.compareVersion(e.WxSystemInfo.SDKVersion, "1.9.97");
                n > -1 && (console.log("小游戏防沉迷---》》》》"), platform.common.checkRest(function(t) {
                    console.log("checkRest===>", t), HttpService.post(e.ServerMsg.NEED_TO_REST, {
                        uid: playerModel.uid
                    }, function(e) {
                        hortor.TipManager.alert("亲爱的船长大人，您今日累计游戏时长已达到防沉迷限制，为了您的身心健康，请及时关闭游戏，下线休息", function() {
                            platform.common.exitMiniProgram(function() {}, function() {}, function(e) {
                                console.log("退出小游戏");
                            });
                        }, function() {
                            platform.common.exitMiniProgram(function() {}, function() {}, function(e) {
                                console.log("退出小游戏");
                            });
                        });
                    });
                }, i));
            }
        }, t.unitArr = [ "", "K", "M", "B" ], t.constNum = 3, t;
    }();
    e.ComFunc = t, __reflect(t.prototype, "game.ComFunc");
}(game || (game = {}));

var EventCenter = function() {
    function e() {}
    return e.addEventListener = function(e, t, i, n, o) {
        this.instance.addEventListener(e, t, i, n, o);
    }, e.dispatchEvent = function(e) {
        this.instance.dispatchEvent(e);
    }, e.hasEventListener = function(e) {
        return this.instance.hasEventListener(e);
    }, e.removeEventListener = function(e, t, i, n) {
        this.instance.removeEventListener(e, t, i, n);
    }, e.sendEvent = function(e, t) {
        var i = new egret.Event(e);
        i.data = t, this.instance.dispatchEvent(i);
    }, e.instance = new egret.EventDispatcher(), e;
}();

__reflect(EventCenter.prototype, "EventCenter");

var MoveAction = function() {
    function e(e, t, i, n, o, a) {
        var r = this;
        this.points = [], this.target = e, this.points = t, this.Oldrotation = e.rotation, 
        this.rotation = a, egret.Tween.get(this).to({
            factor: 1
        }, i, n || egret.Ease.quadOut).call(function() {
            r && (egret.Tween.removeTweens(r), o && o());
        });
    }
    return Object.defineProperty(e.prototype, "factor", {
        get: function() {
            return 0;
        },
        set: function(e) {
            var t = this.PointOnCubicBezier(this.points, e);
            this.target.x = t.x, this.target.y = t.y, this.rotation && (this.target.rotation = this.Oldrotation + this.rotation * e);
        },
        enumerable: !0,
        configurable: !0
    }), e.prototype.PointOnCubicBezier = function(e, t) {
        var i, n, o, a, r, s, l, d, u = new egret.Point();
        return o = 3 * (e[1].x - e[0].x), n = 3 * (e[2].x - e[1].x) - o, i = e[3].x - e[0].x - o - n, 
        s = 3 * (e[1].y - e[0].y), r = 3 * (e[2].y - e[1].y) - s, a = e[3].y - e[0].y - s - r, 
        l = t * t, d = l * t, u.x = i * d + n * l + o * t + e[0].x, u.y = a * d + r * l + s * t + e[0].y, 
        u;
    }, e;
}();

__reflect(MoveAction.prototype, "MoveAction");

var util;

!function(e) {
    function t(e, t) {
        t = t || 96, e = e || "";
        var i = e, n = new RegExp("/0$");
        return i = e.replace(n, "/64"), -1 != e.indexOf("/132") && (i = e.replace(/\/132$/, "/64")), 
        i;
    }
    function i(e, t, i, n) {
        var o = this;
        if (void 0 === i && (i = 64), void 0 === n && (n = 0), !e) return void console.warn("setRemoteAvatar fail, target is null,url=", t);
        var a = game.ResourcePath.getCommonImg("default_head" + n);
        if (!t) return console.warn("setRemoteAvatar fail, url is null"), void (e.source = a);
        (1 == i || 2 == i) && (console.warn("setRemoteAvatar,size err"), i = 64);
        var r = t, s = t.indexOf("_png");
        if (-1 != s) ; else if ("/0" == r || "" == r) r = a; else {
            var l = t, d = t.substr(0, 5);
            "https" == d ? l = t : "http:" == d && (l = l.replace(/http/, "https")), r = l.replace(/\/0$/, "/" + i), 
            -1 != l.indexOf("/132") && (r = l.replace(/\/132$/, "/" + i));
        }
        egret.callLater(function() {
            hortor.ResourceManager.loadResource(r, function(t) {
                e.source = t;
            }, o, RES.ResourceItem.TYPE_IMAGE, function() {
                console.warn("load remote res fail,url=", r), e.source = a;
            });
        }, this);
    }
    function n(e, t) {
        e.scaleX = e.scaleY = t;
    }
    function o(t) {
        if ("object" != typeof t) return t;
        if (null == t) return t;
        var i = new Object();
        for (var n in t) t[n] instanceof Array ? i[n] = e.cloneArr(t[n]) : i[n] = e.deepClone(t[n]);
        return i;
    }
    function a(t) {
        for (var i = new Array(), n = 0; n <= t.length - 1; n++) {
            var o = t[n];
            o && o.length && o.push ? o = o.clone() : "object" == typeof o && (o = e.deepClone(o)), 
            i.push(o);
        }
        return i;
    }
    function r(e) {
        e.parent && e.parent.removeChild(e);
    }
    function s(e) {
        e && e.parent && ("function" == typeof e.parent.removeElement ? e.parent.removeElement(e) : e.parent.removeChild(e));
    }
    function l() {
        if (!location.search && !location.hash) return null;
        var e = {}, t = function(t) {
            for (var i = t.split("&"), n = 0; n < i.length; n++) {
                var o = i[n].split("=");
                e[o[0]] = decodeURIComponent(o[1]);
            }
        };
        if (location.hash && t(location.hash.substr(1)), location.search) {
            var i = location.search.indexOf("?");
            if (-1 != i) {
                var n = location.search.substr(i + 1);
                n = n.split("!")[0], t(n);
            }
        }
        return e;
    }
    function d(e, t) {
        var i = Math.floor(e / 3600 / 24);
        if (i > 0) return i + "天";
        var n = Math.floor(e / 3600), o = Math.floor(e % 3600), a = Math.floor(o / 60);
        o %= 60;
        var r = 60 * n;
        if (a = t ? a : r + a, t && 0 > e) return "00:00:00";
        if (0 > e) return "0";
        var s = "";
        return t && ("auto" != t || 0 != n) && (s = n >= 10 ? n.toString() : "0" + n, s += ":"), 
        a >= 10 ? s += a : s = s + "0" + a, s = o >= 10 ? s + ":" + o : s + ":0" + o;
    }
    function u(e) {
        if (0 > e) return "";
        var t = "", i = Math.floor(e / 3600 / 24), n = Math.floor(e / 3600), o = Math.floor(e / 60), a = e;
        return i > 0 ? (e %= 86400, n = Math.floor(e / 3600), t += i + "天", t += n >= 10 ? n + "时" : "0" + n + "时") : n > 0 ? (o = Math.floor(e % 3600 / 60), 
        t += n >= 10 ? n + "时" : "0" + n + "时", t += o >= 10 ? o + "分" : "0" + o + "分") : o > 0 ? (t += o >= 10 ? o + "分" : "0" + o + "分", 
        a = Math.floor(e % 3600 % 60), t += a >= 10 ? a + "秒" : "0" + a + "秒") : (t += "00分", 
        t += a >= 10 ? a + "秒" : "0" + a + "秒"), t;
    }
    function h(e) {
        if (0 > e) return "";
        var t = "", i = Math.floor(e / 3600), n = Math.floor(e % 3600 / 60), o = Math.floor(e % 3600 % 60);
        return t += i >= 10 ? i.toString() + ":" : "0" + i + ":", n >= 10 ? t += n : t = t + "0" + n, 
        t = o >= 10 ? t + ":" + o : t + ":0" + o;
    }
    function c(e, t) {
        return t >= e.length ? e : e.substring(0, t) + "...";
    }
    function p(e, t, i, n) {
        var o = Math.abs(e - i), a = Math.abs(t - n), r = Math.sqrt(Math.pow(o, 2) + Math.pow(a, 2)), s = a / r, l = Math.acos(s), d = Math.floor(180 / (Math.PI / l));
        return i > e && n > t && (d = 180 - d), i == e && n > t && (d = 180), i > e && n == t && (d = 90), 
        e > i && n > t && (d = 180 + d), e > i && n == t && (d = 270), e > i && t > n && (d = 360 - d), 
        d;
    }
    function g(t, i) {
        var n = t.text || "", o = n.match(/<.+?>[^<]*/g), a = t;
        i && (a.size = a.size || i.size, a.textColor = a.textColor || i.textColor, a.stroke = a.stroke || i.stroke, 
        a.strokeColor = a.strokeColor || i.strokeColor || 0, a.bold = i.bold);
        var r = [];
        r.push(a);
        var s = i || new eui.Label(), l = [], d = n.substr(0, o ? n.indexOf("<") : n.length);
        d = d.replace(/\\n/g, "\n");
        var u = {
            text: f(d),
            style: a
        };
        if (l.push(u), !o || o.length <= 0) return s.textFlow = l, s;
        for (var h = function(t) {
            var i = e.copyData(a), n = {
                blue: 5031423,
                red: 14104614,
                yellow: 16767744,
                green: 2355236,
                smoke: 12763842
            };
            for (var o in n) if (n.hasOwnProperty(o) && new RegExp("<" + o + ">").test(t)) return i.textColor = n[o], 
            a = i, r.push(a), !0;
            return new RegExp("<name>").test(t) ? (i.textColor = 5031423, a = i, r.push(a), 
            !0) : new RegExp("<s>").test(t) ? (i.stroke = Math.round(i.size / 10), i.strokeColor = 0, 
            a = i, r.push(a), !0) : void 0;
        }, c = 0; c < o.length; c++) {
            var p = o[c].match(/<.+>/)[0];
            if (p.indexOf("/") > 0) r.length > 1 && r.pop(), a = r[r.length - 1]; else if (/image=/.test(p)) {
                var g = p.split("=");
                g[1] = g[1].replace(/[\"'>]/g, "");
            } else if (h(p)) ; else {
                a = e.copyData(a);
                var m = p.match(/[^<\s]+=.+?(?=[\s>])/g);
                if (m && m.length > 0) {
                    for (var v = 0; v < m.length; v++) {
                        var g = m[v].split("=");
                        g[1] = g[1].replace('"', "").replace("'", ""), "fontsize" == g[0].toLowerCase() || "size" == g[0].toLowerCase() ? a.size = parseInt(g[1]) : "fontname" == g[0].toLowerCase() ? a.fontFamily = g[1] : "color" == g[0].toLowerCase() ? a.textColor = parseInt("0x" + g[1].replace("#", "").replace("0x", "")) : "stroke" == g[0].toLowerCase() ? a.stroke = parseInt(g[1]) : "strokeColor" == g[0].toLowerCase() && (a.strokeColor = parseInt(g[1].replace("#", "").replace("0x", "")));
                    }
                    r.push(a);
                }
            }
            d = o[c].substr(p.indexOf(">") + 1), d = d.replace(/\\n/g, "\n");
            for (var y = d.split("\n"), w = 0; w < y.length; w++) {
                if (y[w].length > 0) {
                    var T = {
                        text: f(y[w]),
                        style: a
                    };
                    l.push(T);
                }
                if (w < y.length - 1) {
                    var _ = {
                        text: "\n",
                        style: a
                    };
                    l.push(_);
                }
            }
        }
        return s.textFlow = l, s;
    }
    function m(e, t, i, n) {
        if (t = t || {}, i = i || {}, e && 0 !== n) {
            for (var o in e) if ("object" != typeof e[o]) i[o] || (t[o] = e[o]); else {
                if (null === e[o]) continue;
                t[o] || ("number" == typeof e[o].length ? t[o] = [] : t[o] = {}), this.copyData(e[o], t[o], i, n ? n - 1 : n);
            }
            return t;
        }
    }
    function f(e) {
        var t = "";
        return 0 === e.length ? "" : (t = e.replace(/&gt;/g, "&"), t = t.replace(/&lt;/g, "<"), 
        t = t.replace(/&gt;/g, ">"), t = t.replace(/&nbsp;/g, " "), t = t.replace(/'/g, "'"), 
        t = t.replace(/&quot;/g, '"'), t = t.replace(/<br>/g, "\n"));
    }
    function v(e) {
        return e = e.replace(/%/g, "%25"), e = e.replace(/\+/g, "%2B"), e = e.replace(/\//g, "%2F"), 
        e = e.replace(/\?/g, "%3F"), e = e.replace(/\#/g, "%23"), e = e.replace(/\&/g, "%26"), 
        e = e.replace(/\=/g, "%3d");
    }
    function y(e) {
        return e = e.replace(/%25/g, "%"), e = e.replace(/%2B/g, "+"), e = e.replace(/%2F/g, "/"), 
        e = e.replace(/%3F/g, "?"), e = e.replace(/%23/g, "#"), e = e.replace(/%26/g, "&"), 
        e = e.replace(/%3d/g, "=");
    }
    function w(e, t, i, n) {
        n || (e.anchorOffsetX = e.width / 2, e.anchorOffsetY = e.height / 2, e.x = e.x + e.width / 2, 
        e.y = e.y + e.height / 2);
        var o = function(i) {
            e.scaleX = t, e.scaleY = t;
        }, a = function(t) {
            e.scaleX = i, e.scaleY = i;
        }, r = function(t) {
            console.log("btnRemove"), e.removeEventListener(egret.TouchEvent.TOUCH_BEGIN, o, this), 
            e.removeEventListener(egret.TouchEvent.TOUCH_END, a, this), e.removeEventListener(egret.TouchEvent.TOUCH_RELEASE_OUTSIDE, a, this), 
            e.removeEventListener(egret.Event.REMOVED_FROM_STAGE, r, this);
        };
        e.addEventListener(egret.TouchEvent.TOUCH_BEGIN, o, this), e.addEventListener(egret.TouchEvent.TOUCH_END, a, this), 
        e.addEventListener(egret.TouchEvent.TOUCH_RELEASE_OUTSIDE, a, this), e.addEventListener(egret.Event.REMOVED_FROM_STAGE, r, this);
    }
    function T(e) {
        egret.Tween.get(e, {
            loop: !0
        }).to({
            rotation: 3
        }, 50).to({
            rotation: 0
        }, 50).to({
            rotation: -3
        }, 50).to({
            rotation: 0
        }, 50).to({
            rotation: 3
        }, 50).to({
            rotation: 0
        }, 50).to({
            rotation: -3
        }, 50).to({
            rotation: 0
        }, 50).wait(800);
    }
    function _(e) {
        var t = new egret.Bitmap();
        if (RES.getRes(e)) {
            var i = RES.getRes(e);
            t.texture = i;
        } else RES.getResAsync(e, function(e) {
            t.texture = e;
        }, this);
        return t;
    }
    function E() {
        for (var t = [], i = 0; i < arguments.length; i++) t[i] = arguments[i];
        e.openJZLog && console.log(t);
    }
    function I(e) {
        return e == Const.femaleGender ? Const.femaleColor : Const.maleColor;
    }
    function C(e) {
        var t;
        return t = e > 99999 ? .4 : e > 9999 ? .5 : e > 999 ? .6 : .8;
    }
    e.headImg = t, e.setRemoteAvatar = i, e.setScale = n, e.deepClone = o, e.cloneArr = a, 
    e.remove = r, e.removeFromParent = s, e.getUrlParamMap = l, e.formatTime = d, e.formatTimeCNNew3 = u, 
    e.formatTimeHMS = h, e.strSub = c, e.getAngle = p, e.createRichText = g, e.copyData = m, 
    e.htmldecode = f, e.enCodeHtml = v, e.unCodeHtml = y, e.initBtnAnchorNew = w, e.rockTween = T, 
    e.createBitmapByName = _, e.openJZLog = !1, e.jzlog = E, e.getColorByGender = I, 
    e.getRankNumScaleFactor = C;
}(util || (util = {}));

var WxOpenData = function() {
    function e() {
        this.totalCount = 0, this.completeCount = 0, this.openResConfig = {}, this.allComplete = !1;
    }
    return e.prototype.initialize = function() {
        var e = egret.localStorage.getItem("wanbanComplete");
        this.allComplete = "1" == e, console.warn("WxOpenData init complete:" + this.allComplete), 
        this.totalCount = 0;
        for (var t in hortor.VersionManager.versionConfig) -1 != t.indexOf("image/wanban/") && (this.openResConfig[t] = hortor.VersionManager.versionConfig[t], 
        this.totalCount++);
        wx.getOpenDataContext().postMessage({
            versionConfig: this.openResConfig
        }), this.allComplete || this.loadAll();
    }, e.prototype.loadAll = function(e) {
        var t = this, i = function(i) {
            n.openResConfig[i] && hortor.ResourceManager.loadResource("assets/" + i, function() {
                t.openResConfig[i] = null, t.completeCount++, t.completeCount == t.totalCount && (console.warn("WxOpenData all download complete:" + t.totalCount), 
                t.allComplete = !0, egret.localStorage.setItem("wanbanComplete", "1"), e && e());
            }, n, RES.ResourceItem.TYPE_IMAGE);
        }, n = this;
        for (var o in this.openResConfig) i(o);
    }, e.prototype.loadImages = function(e) {
        this.allComplete ? e && e() : (console.warn("WxOpenData not download complete:" + this.completeCount + ",total:" + this.totalCount), 
        this.loadAll(e));
    }, e;
}();

__reflect(WxOpenData.prototype, "WxOpenData");

var wxOpenData = new WxOpenData(), game;

!function(e) {
    var t = function() {
        function e() {}
        return e.adUnitId_master = "adunit-3b9a65e75d476bae", e.adUnitId_octops = "adunit-2d6101f34301bc97", 
        e.adUnitId_balloon = "adunit-351336eef5fb7de1", e.adUnitId_dailyEnergy = "adunit-add27e8a3f020916", 
        e.adUnitId_noEnergy = "adunit-7f5c2722231c98df", e.adUnitId_money = "adunit-02ada88c1ed3f0ce", 
        e.adUnitId_plane = "adunit-f31a2c7b2a007587", e.adUnitId_dailyRedbag = "adunit-6c3f29e7925dda26", 
        e.adUnitId_octopus = "adunit-fd62dc0c1689c367", e;
    }();
    e.AdType = t, __reflect(t.prototype, "game.AdType");
}(game || (game = {}));

var game;

!function(e) {
    var t = function() {
        function t() {}
        return t.pay = function(i, n, o) {
            if (void 0 === n && (n = 1), "appleappstore" == playerModel.channel) return void hortor.TipManager.alert("iOS系统无法充值");
            var a = "";
            o && (a = "&aid=" + o), HttpService.post(e.ServerMsg.SHOP_ORDER, "uid=" + playerModel.uid + "&goodsId=" + i + "&count=" + n + "&miPay=" + (gateModel.isWxgame && hortor.SystemManager.isAndroid) + a, function(e) {
                console.log("请求订单==" + JSON.stringify(e)), gateModel.isWxgame ? gateModel.iosPay ? hortor.SystemManager.isIOS ? t.QRCodePay(e, i) : t.wxPayByOrder(e) : hortor.TipManager.alert("该功能暂未开放") : HORTOR_AGENT.pay({
                    order_id: e.order_id,
                    app_id: e.app_id,
                    timestamp: e.timestamp,
                    nonce_str: e.nonce_str,
                    package: e["package"],
                    sign_type: e.sign_type,
                    pay_sign: e.pay_sign
                });
            });
        }, t.paySpecial = function(e, i) {
            return "appleappstore" == playerModel.channel ? void hortor.TipManager.alert("iOS系统无法充值") : void HttpService.post(e, "uid=" + playerModel.uid + "&goodsId=" + i + "&miPay=" + (gateModel.isWxgame && hortor.SystemManager.isAndroid), function(e) {
                console.log("请求订单==" + JSON.stringify(e)), gateModel.isWxgame ? gateModel.iosPay ? hortor.SystemManager.isIOS ? t.QRCodePay(e, i) : t.wxPayByOrder(e) : hortor.TipManager.alert("该功能暂未开放") : HORTOR_AGENT.pay({
                    order_id: e.order_id,
                    app_id: e.app_id,
                    timestamp: e.timestamp,
                    nonce_str: e.nonce_str,
                    package: e["package"],
                    sign_type: e.sign_type,
                    pay_sign: e.pay_sign
                });
            });
        }, t.wxPayByOrder = function(e) {
            e && (t.paying = !0, platform.common.payByOrder(e.data, function(e) {
                console.log("payByOrder->>err :", e), null == e ? (console.log("充值成功"), t.onPaySuc()) : e.errCode && 1003 == e.errCode && (console.log("充值失败"), 
                t.onPayError());
            }));
        }, t.QRCodePay = function(e, i) {
            if (e) {
                var n = i;
                (-1 != i.indexOf("giftPackage") || -1 != i.indexOf("giftPackageAnnual")) && (n = i.split("#")[0]);
                var o = "http://pirate-release-1251003184.cosbj.myqcloud.com/share/QRCodePay/QRCodePay_" + n + ".png";
                t.paying = !0;
                var a = {
                    orderId: e.data.orderId,
                    backUrl: o
                };
                console.log("obj == >", a), platform.common.QRCodePay(a, function(e) {
                    console.log("QRCodePay->>res :", e), null == e ? (console.log("充值成功"), t.onPaySuc()) : e.errCode && 1003 == e.errCode && (console.log("充值失败"), 
                    t.onPayError());
                });
            }
        }, t.onPaySuc = function() {}, t.onPayError = function() {
            t.paying = !1, e.PlatformManager.openEvent("wxPayFailed"), hortor.TipManager.alert("当前网络状态不佳，请重试\n\n如无法解决，请通过公众号联系客服进行解决", function() {
                t.reportFailOrders();
            }, function() {
                hortor.TipManager.alert("关闭将会导致订单失效，请通过关注公众号联系客服进行解决");
            });
        }, t.reportFailOrders = function() {
            platform.common.showLoading("加载中", !0), platform.common.reportFailOrders(function() {
                platform.common.hideLoading();
            }, function() {
                platform.common.hideLoading();
            });
        }, t.paying = !1, t;
    }();
    e.IapManager = t, __reflect(t.prototype, "game.IapManager");
}(game || (game = {}));

var Platform = function() {
    function e() {}
    return e;
}();

__reflect(Platform.prototype, "Platform"), window.platform || (window.platform = new Platform());

var game;

!function(e) {
    var t = function() {
        function t() {}
        return t.initialize = function(i) {
            if (this.isWxgame = hortor.SystemManager.isWxGame, t.isInited = !0, this.isWxgame) {
                platform.user.getSystemInfo(function(t) {
                    e.WxSystemInfo = t;
                }), t.setUserCloudStorage(), ReportManager.getInstance().reportStart();
                var n = e.GameConfig.client + e.GameConfig.version;
                platform.user.wallSdkInit(n, e.GameConfig.wxWallGameId, e.GameConfig.wxWallKey, e.GameConfig.evn, playerModel.uid, playerModel.gender), 
                platform.user.wallSdkGetTasks(function(t) {
                    wallSdkModel.update(t), gateModel.updateGate(e.WindowType.WINDOW_WALL_TASK);
                });
            } else try {
                HORTOR_AGENT.init();
            } catch (o) {
                t.isInited = !1, hortor.TipManager.alert("游戏中心init初始化失败，您将暂时无法使用分享和充值功能，请稍后刷新重试");
            }
            e.ShareManager.initialize(i.shareMaterials), e.ShareManager.showShareMenu(), this.eventAppId = gateModel.isWxgame ? Const.WXAppId : Const.H5AppId;
        }, t.onAppStatus = function(t) {
            e.ShareManager.onAppStatus(t);
        }, t.pay = function(t, i, n) {
            void 0 === i && (i = 1), e.IapManager.pay(t, i, n);
        }, t.showVideoAd = function(i, n, o, a) {
            var r = t.compareVersion(e.WxSystemInfo.SDKVersion, "2.0.4");
            r > -1 ? platform.common.createRewardedVideoAd(i, function(e) {
                e && e.isEnded || void 0 === e ? n() : a && a();
            }, function() {
                o && o();
            }) : (a && a(), hortor.TipManager.bubble("微信版本过低暂不支持观看视频，请升级微信版本"));
        }, t.compareVersion = function(e, t) {
            e = e.split("."), t = t.split(".");
            for (var i = Math.max(e.length, t.length); e.length < i; ) e.push("0");
            for (;t.length < i; ) t.push("0");
            for (var n = 0; i > n; n++) {
                var o = parseInt(e[n]), a = parseInt(t[n]);
                if (o > a) return 1;
                if (a > o) return -1;
            }
            return 0;
        }, t.LogEvent = function(e, t, i) {
            if (void 0 === t && (t = {}), hortor.SystemManager.isWxGame) {
                var n = {
                    tp: e,
                    extra: t,
                    refer: i
                };
                platform.common.statLog(n);
            }
        }, t.openEvent = function(i) {
            if (playerModel) {
                var n = playerModel.island + 1, o = {
                    appid: t.eventAppId,
                    context: {
                        deviceid: playerModel.userId,
                        level: n
                    },
                    what: i,
                    who: playerModel.userId
                };
                ("v" == e.GameConfig.client || "goose" == e.GameConfig.client) && HttpService.post("https://log.reyun.com/receive/rest/event", JSON.stringify(o), function() {
                    console.log("openEvent suc");
                }, null, null, null, !1);
            }
        }, t.checkIPAvailable = function(e, t) {
            gateModel.isWxgame ? platform.common.checkIP(e, function(e) {
                t(e);
            }) : t(!0);
        }, t.registShare = function(t, i) {
            e.ShareManager.registShare(t, i);
        }, t.share = function(t, i, n) {
            e.ShareManager.share(t, i, n);
        }, t.onShareEnter = function(t) {
            e.ShareManager.onShareEnter(t);
        }, t.checkVideoAd = function() {
            if (gateModel.isWxgame) {
                var t = e.ComFunc.compareVersion(e.WxSystemInfo.SDKVersion, "2.0.6");
                t > -1 ? platform.common.checkVideoAd(e.AdType.adUnitId_dailyEnergy, function() {
                    gateModel.wxCanShowAd = !0, console.log("检测小游戏能够播放视频----\x3e>");
                }, function() {
                    gateModel.wxCanShowAd = !1, console.log("检测小游戏--不能够--播放视频----\x3e>");
                }) : gateModel.wxCanShowAd = !1;
            }
        }, t.createVideoAd = function(t, i, n, o) {
            if (hortor.SystemManager.isWxGame) {
                var a = e.ComFunc.compareVersion(e.WxSystemInfo.SDKVersion, "2.0.4");
                a > -1 ? (gateModel.wxSharing = !0, platform.common.createRewardedVideoAd(t, function(e) {
                    e && e.isEnded || void 0 === e ? i() : o && "function" == typeof o && o(), gateModel.wxSharing = !1;
                }, function() {
                    n(), gateModel.wxSharing = !1, gateModel.wxCanShowAd = !1;
                })) : (o && "function" == typeof o && o(), hortor.TipManager.alert("微信版本过低暂不支持观看视频，请升级微信版本"));
            }
        }, t.setUserCloudStorage = function() {
            var e = playerModel.crowns + "", t = playerModel.uid + "", i = (gateModel.timestamp || Math.floor(new Date().getTime() / 1e3)) + "", n = playerModel.island + "", o = playerModel.inviteCode + "", a = playerModel.beRecalledCount + "";
            if (platform.common.checkSetUserStorage()) {
                var r = new Date().getTime();
                platform.common.setUserCloudStorage([ {
                    key: "crowns",
                    value: e
                }, {
                    key: "uid",
                    value: t
                }, {
                    key: "timestamp",
                    value: i
                }, {
                    key: "island",
                    value: n
                }, {
                    key: "inviteCode",
                    value: o
                }, {
                    key: "score",
                    value: '{"wxgame":{"score":' + e + ',"update_time": ' + r + "}}"
                }, {
                    key: "beRecalledCount",
                    value: a
                } ], function(e) {
                    console.log("设置用户的开放数据域成功->>>", e);
                }, function(e) {}, function(e) {});
            }
        }, t.navigateToMiniProgram = function() {
            var i = t.compareVersion(e.WxSystemInfo.SDKVersion, "2.2.2");
            i > -1 && "function" == typeof wx.navigateToMiniProgram ? "Test" == e.GameConfig.evn ? wx.navigateToMiniProgram({
                appId: "wx5150a825190bf7f4",
                path: "pages/circle/list/list?channel=pirate-minigame&category=4",
                envVersion: "trial"
            }) : wx.navigateToMiniProgram({
                appId: "wx3301a6cbd35d9935",
                path: "pages/circle/list/list?channel=pirate-minigame&category=4",
                envVersion: "release"
            }) : hortor.TipManager.tip("当前版本不支持该功能");
        }, t.createComplaint = function(i) {
            var n = t.compareVersion(e.WxSystemInfo.SDKVersion, "2.2.2");
            n > -1 ? platform.common.creatFeedbackBtn(i, {
                left: 60,
                top: 82,
                width: 98,
                height: 88
            }) : hortor.TipManager.tip("当前版本不支持该功能");
        }, t;
    }();
    e.PlatformManager = t, __reflect(t.prototype, "game.PlatformManager"), e.WxSystemInfo = {
        SDKVersion: "1.0.0",
        batteryLevel: 100,
        benchmarkLevel: 1,
        brand: "devtools",
        devicePixelRatio: 2,
        fontSizeSetting: 16,
        language: "zh_CN",
        model: "iPhone",
        pixelRatio: 2,
        platform: "devtools",
        screenHeight: 667,
        screenWidth: 375,
        statusBarHeight: 20,
        system: "",
        version: "6.6.3",
        windowHeight: 667,
        windowWidth: 375
    };
}(game || (game = {}));

var hortor;

!function(e) {
    var t = function(e) {
        function t(t) {
            void 0 === t && (t = 50);
            var i = e.call(this) || this;
            return i.offset = t, i;
        }
        return __extends(t, e), t.prototype.show = function(t, i, n) {
            void 0 === n && (n = null), e.prototype.show.call(this, t, i, n), egret.Tween.removeTweens(t), 
            t.alpha = 0, t.y = this.initY, egret.Tween.get(t).to({
                alpha: 1
            }, 250).call(i, t);
        }, t.prototype.hide = function(t, i, n) {
            void 0 === n && (n = null), e.prototype.hide.call(this, t, i, n), egret.Tween.removeTweens(t), 
            egret.Tween.get(t).to({
                y: this.initY - this.offset
            }, 500).wait(500).to({
                alpha: 0
            }, 200).call(i, t);
        }, t;
    }(e.WindowEffectBase);
    e.BubbleEffect = t, __reflect(t.prototype, "hortor.BubbleEffect");
}(hortor || (hortor = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.registShare = function(t, i) {
            e.PlatformManager.registShare(t, i);
        }, i.prototype.initialize = function() {
            this.registShare(e.ShareType.boaterHire, e.BoaterHireShare), this.registShare(e.ShareType.boaterRecall, e.BoaterRecallShare), 
            this.registShare(e.ShareType.boaterHire2, e.BoaterHireShare2), this.registShare(e.ShareType.KingBarrierShare, e.KingBarrierShare), 
            this.registShare(e.ShareType.KingCircleShare, e.KingCircleShare), this.registShare(e.ShareType.Island, e.IslandShare), 
            this.registShare(e.ShareType.SeniorDailyEnergyShare, e.SeniorDailyEnergyShare), 
            this.registShare(e.ShareType.InviteJBBXShare, e.InviteJBBXShare), this.registShare(e.ShareType.InviteRewardShare, e.InviteRewardShare), 
            this.registShare(e.ShareType.WnspShare, e.WnspShare), this.registShare(e.ShareType.InviteVipShare, e.InviteVipShare), 
            this.registShare(e.ShareType.monster, e.MonsterShare), this.registShare(e.ShareType.RecallRewardShare, e.RecallRewardShare), 
            this.registShare(e.ShareType.UserRecallShare, e.UserRecallShare), this.registShare(e.ShareType.wanbanInvite, e.WxFriendShare), 
            this.registShare(e.ShareType.groupRank, e.WxFriendShare), this.registShare(e.ShareType.shareForGold, e.MultipleGoldShare), 
            this.registShare(e.ShareType.tree, e.TreeShare), this.registShare(e.ShareType.annualBalloon, e.AnnualBalloonShare), 
            this.registShare(e.ShareType.octopus, e.OctopusShare), this.registShare(e.ShareType.annualCollect, e.AnnualShare), 
            this.registShare(e.ShareType.kiteAssist, e.KiteShare);
        }, i;
    }(hortor.Register);
    e.ShareRegister = t, __reflect(t.prototype, "game.ShareRegister");
}(game || (game = {}));

var shareRegister, game;

!function(e) {
    var t = function() {
        function e() {}
        return e.boaterHire = "boaterHire", e.boaterHire2 = "boaterHire2", e.boaterRecall = "boaterRecall", 
        e.KingBarrierShare = "KingBarrierShare", e.KingCircleShare = "KingCircleShare", 
        e.Island = "island", e.InviteVipShare = "inviteForVIP", e["default"] = "default", 
        e.island = "island", e.boost = "boost", e.boostCheer = "boostCheer", e.boostInvite = "boostInvite", 
        e.boostInviteGift = "boostInviteGift", e.octopus = "octopus", e.dazhangyu = "dazhangyu", 
        e.kiteAssist = "kiteAssist", e.moonCake = "moonCake", e.shareForGold = "shareForGold", 
        e.shareForWxGold = "shareForWxGold", e.RecallRewardShare = "recallRewardShare", 
        e.inviteForVIP = "inviteForVIP", e.WnspShare = "inviteForAllInOne", e.InviteRewardShare = "inviteGift", 
        e.recruitment = "recruitment", e.monster = "monster", e.InviteJBBXShare = "inviteMoney", 
        e.annualCollect = "annualCollect", e.treasure = "treasure", e.annualBalloon = "annualBalloon", 
        e.plane = "plane", e.recall = "recall", e.UserRecallShare = "UserRecallShare", e.groupRank = "groupRank", 
        e.rcGroup = "rcGroup", e.wanbanInvite = "wanbanInvite", e.dayShare = "dayShare", 
        e.dayShare2 = "dayShare2", e.SeniorDailyEnergyShare = "dayShare3", e.shieldShare = "shieldShare", 
        e.flowerShare = "flower", e.treasureMap = "treasureMap", e.dragonBoat = "dragonBoat", 
        e.dragonBoatMoreRewards = "dragonBoatMoreRewards", e.redPackage = "redPackage", 
        e.inviteReward = "inviteReward", e.carve = "carve", e.tree = "tree", e.worldCup = "worldCup", 
        e.worldCup2 = "WorldCup2", e.shareCheer = "shareCheer", e;
    }();
    e.ShareType = t, __reflect(t.prototype, "game.ShareType");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onShareSuc = function(e) {
            t.prototype.onShareSuc.call(this, e), i.annualBalloonShareSuccess(e);
        }, i.prototype.onShareFail = function() {
            t.prototype.onShareFail.call(this);
            var i = hortor.WindowManager.getWindow(e.WindowType.WINDOW_FESTIVALBALLOON);
            i && (i.hasInvite = !1);
        }, i.prototype.onShareEnter = function(e) {}, i.annualBalloonShareSuccess = function(t) {
            if (t && hortor.SystemManager.isWxGame) if (t.shareTickets) hortor.WindowManager.hideWindow(e.WindowType.WINDOW_FESTIVALBALLOON), 
            HttpService.post(e.ServerMsg.ANNUAL_BALLOON_REWARD, "uid=" + playerModel.uid + "&share=true", function(t) {
                hortor.WindowManager.hideWindow(e.WindowType.WINDOW_FESTIVALBALLOON), playerModel.updateAll(t), 
                hortor.WindowManager.showWindow(e.WindowType.WINDOW_REWARD, t.rewards);
            }); else {
                var i = hortor.WindowManager.getWindow(e.WindowType.WINDOW_FESTIVALBALLOON);
                i && (i.hasInvite = !1);
            } else hortor.WindowManager.hideWindow(e.WindowType.WINDOW_FESTIVALBALLOON), HttpService.post(e.ServerMsg.ANNUAL_BALLOON_REWARD, "uid=" + playerModel.uid + "&share=true", function(t) {
                hortor.WindowManager.hideWindow(e.WindowType.WINDOW_FESTIVALBALLOON), playerModel.updateAll(t), 
                hortor.WindowManager.showWindow(e.WindowType.WINDOW_REWARD, t.rewards);
            });
        }, i;
    }(e.GameShare);
    e.AnnualBalloonShare = t, __reflect(t.prototype, "game.AnnualBalloonShare");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(e) {
        function t() {
            return null !== e && e.apply(this, arguments) || this;
        }
        return __extends(t, e), t.prototype.onShareSuc = function() {
            e.prototype.onShareSuc.call(this);
        }, t.prototype.onShareEnter = function(e) {}, t;
    }(e.GameShare);
    e.BoaterHireShare = t, __reflect(t.prototype, "game.BoaterHireShare");
    var i = function(e) {
        function t() {
            return null !== e && e.apply(this, arguments) || this;
        }
        return __extends(t, e), t.prototype.onShareSuc = function() {
            e.prototype.onShareSuc.call(this);
        }, t.prototype.onShareEnter = function(e) {}, t;
    }(e.GameShare);
    e.BoaterRecallShare = i, __reflect(i.prototype, "game.BoaterRecallShare");
    var n = function(e) {
        function t() {
            return null !== e && e.apply(this, arguments) || this;
        }
        return __extends(t, e), t.prototype.onShareSuc = function() {
            e.prototype.onShareSuc.call(this);
        }, t.prototype.onShareEnter = function(e) {}, t;
    }(e.GameShare);
    e.BoaterHireShare2 = n, __reflect(n.prototype, "game.BoaterHireShare2");
}(game || (game = {}));

var hortor;

!function(e) {
    var t = function(e) {
        function t() {
            return e.call(this) || this;
        }
        return __extends(t, e), t.prototype.show = function(t, i, n) {
            void 0 === n && (n = null), e.prototype.show.call(this, t, i, n), t.alpha = 0, egret.Tween.get(t).to({
                alpha: 1
            }, 250).call(i, t);
        }, t.prototype.hide = function(e, t, i) {
            void 0 === i && (i = null), egret.Tween.removeTweens(e), egret.Tween.get(e).to({
                alpha: 0
            }, 150).call(t, e);
        }, t;
    }(e.WindowEffectBase);
    e.FadeEffect = t, __reflect(t.prototype, "hortor.FadeEffect");
}(hortor || (hortor = {}));

var game;

!function(e) {
    var t = function(e) {
        function t() {
            return null !== e && e.apply(this, arguments) || this;
        }
        return __extends(t, e), t.prototype.onShareSuc = function() {
            util.jzlog("邀请 金币宝箱>>>>分享成功回调"), e.prototype.onShareSuc.call(this), hortor.TipManager.bubble("分享成功");
        }, t.prototype.onShareEnter = function(e) {
            util.jzlog("邀请 金币宝箱>>>>从链接进入");
        }, t;
    }(e.GameShare);
    e.InviteJBBXShare = t, __reflect(t.prototype, "game.InviteJBBXShare");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(e) {
        function t() {
            return null !== e && e.apply(this, arguments) || this;
        }
        return __extends(t, e), t.prototype.onShareSuc = function() {
            console.log("邀请奖励分享>>>>分享成功回调"), e.prototype.onShareSuc.call(this), hortor.TipManager.bubble("分享成功");
        }, t.prototype.onShareEnter = function(e) {
            console.log("邀请奖励分享>>>>从链接进入");
        }, t;
    }(e.GameShare);
    e.InviteRewardShare = t, __reflect(t.prototype, "game.InviteRewardShare");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(e) {
        function t() {
            return null !== e && e.apply(this, arguments) || this;
        }
        return __extends(t, e), t.prototype.onShareSuc = function() {
            util.jzlog("邀请VIP分享>>>>分享成功回调"), e.prototype.onShareSuc.call(this), hortor.TipManager.bubble("分享成功");
        }, t.prototype.onShareEnter = function(e) {
            util.jzlog("邀请VIP分享>>>>从链接进入");
        }, t;
    }(e.GameShare);
    e.InviteVipShare = t, __reflect(t.prototype, "game.InviteVipShare");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onShareSuc = function(i) {
            t.prototype.onShareSuc.call(this, i);
            playerModel.canIslandShare && HttpService.post(e.ServerMsg.ISLAND_SHARE, "uid=" + playerModel.uid, function(t) {
                playerModel.energy += 20, playerModel.canIslandShare = !1, hortor.WindowManager.showWindow(e.WindowType.WINDOW_REWARD, {
                    energy: 20
                }, null, null, function() {
                    var t = hortor.WindowManager.getWindow(e.WindowType.WINDOW_SHAREISLAND);
                    t && t.nextIsland();
                }), EventCenter.sendEvent(EventConst.EnergyChange);
            });
        }, i.prototype.onShareEnter = function(e) {}, i;
    }(e.GameShare);
    e.IslandShare = t, __reflect(t.prototype, "game.IslandShare");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(e) {
        function t() {
            return null !== e && e.apply(this, arguments) || this;
        }
        return __extends(t, e), t.prototype.onShareSuc = function() {
            e.prototype.onShareSuc.call(this);
        }, t.prototype.onShareEnter = function(e) {
            egret.log("kingShare透传参数为:", e), e && e.luffyShareToken;
        }, t;
    }(e.GameShare);
    e.KingBarrierShare = t, __reflect(t.prototype, "game.KingBarrierShare");
    var i = function(e) {
        function t() {
            return null !== e && e.apply(this, arguments) || this;
        }
        return __extends(t, e), t.prototype.onShareSuc = function() {
            e.prototype.onShareSuc.call(this);
        }, t.prototype.onShareEnter = function(e) {
            egret.log("kingShare透传参数为:", e);
        }, t;
    }(e.GameShare);
    e.KingCircleShare = i, __reflect(i.prototype, "game.KingCircleShare");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(e) {
        function t() {
            var t = null !== e && e.apply(this, arguments) || this;
            return t.shareTickets = !1, t;
        }
        return __extends(t, e), t.prototype.onShareSuc = function(t) {
            e.prototype.onShareSuc.call(this, t);
        }, t.prototype.onShareEnter = function(e) {
            var t = e.shareOwnerId;
            t != playerModel.uid && KiteFunc.enterKiteSquare(t);
        }, t;
    }(e.GameShare);
    e.KiteShare = t, __reflect(t.prototype, "game.KiteShare");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onShareSuc = function(i) {
            t.prototype.onShareSuc.call(this, i), e.MonsterShare.monsterShareSuccess(i);
        }, i.prototype.onShareEnter = function(e) {}, i.monsterShareSuccess = function(t) {
            void 0 === t && (t = null), hortor.Log.log(this, t), HttpService.post(e.ServerMsg.KILLTITAN_SHARE_REWARD, "uid=" + playerModel.uid, function(t) {
                playerModel.killTitanCannonBall = t.cannonBallCount, TaptitansInfo.info.shareCount = t.shareCount, 
                hortor.WindowManager.hideWindow(e.WindowType.WINDOW_TAPTITANSFREESHELL);
                var i = hortor.ScreenManager.getScreen(e.ScreenType.KILLTITAN_SCREEN);
                i && i.refreshShellNum(), hortor.WindowManager.showWindow(e.WindowType.WINDOW_REWARD, {
                    killTitanCannonBall: t.reward
                });
            });
        }, i;
    }(e.GameShare);
    e.MonsterShare = t, __reflect(t.prototype, "game.MonsterShare");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onShareSuc = function(i) {
            t.prototype.onShareSuc.call(this, i), HttpService.post(e.ServerMsg.SHARE_COIN_REWARD, "uid=" + playerModel.uid, function(t) {
                playerModel.money = t.money, EventCenter.sendEvent(EventConst.GoldChange), hortor.WindowManager.showWindow(e.WindowType.WINDOW_REWARD, {
                    money: t.reward
                }), hortor.WindowManager.isOpen(e.WindowType.WINDOW_MULTIPLE_GOLD) && hortor.WindowManager.hideWindow(e.WindowType.WINDOW_MULTIPLE_GOLD);
            });
        }, i.prototype.onShareEnter = function(e) {}, i;
    }(e.GameShare);
    e.MultipleGoldShare = t, __reflect(t.prototype, "game.MultipleGoldShare");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e.ignoreMe = !1, e;
        }
        return __extends(i, t), i.prototype.onShareSuc = function(i) {
            util.jzlog("召回奖励分享>>>>分享成功回调", this.onShareSuc), t.prototype.onShareSuc.call(this), 
            util.jzlog("res = ", i), i && (i.shareTickets ? wxOpenData.loadImages(function() {
                hortor.WindowManager.showWindow(e.WindowType.WINDOW_RECALLFRIEND_GROUP, i);
            }) : hortor.TipManager.bubble("点击自己分享链接查看"));
        }, i.prototype.onShareEnter = function(t) {
            console.log("召回奖励分享>>>>从链接进入", t), gateModel.isWxgame && 1 == gateModel.getGate(e.WindowType.WINDOW_RECALL_REWARD).logicShow && (platform.common.checkSetUserStorage() ? hortor.WindowManager.showWindow(e.WindowType.WINDOW_RECALLFRIEND_GROUP, t) : hortor.TipManager.bubble("请先升级微信版本"));
        }, i;
    }(e.GameShare);
    e.RecallRewardShare = t, __reflect(t.prototype, "game.RecallRewardShare");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onShareSuc = function(i) {
            util.jzlog("高级夏日能量>>>>分享成功回调", i), t.prototype.onShareSuc.call(this), HttpService.post(e.ServerMsg.WX_SENIORDAYREDBAGSHARE, "uid=" + playerModel.uid, function(e) {
                util.jzlog(">>>服务器返回的数据是：", e), EventCenter.sendEvent(EventConst.GetSeniorShareEnergy, e);
            });
        }, i.prototype.onShareEnter = function(t) {
            var i = t;
            util.jzlog("高级夏日能量>>>>从链接进入", i), i && i.shareUid && HttpService.post(e.ServerMsg.WX_SENOIRDAYREDBAGSHARE_LINK, "uid=" + playerModel.uid + "&fid=" + i.shareUid, function(e) {});
        }, i;
    }(e.GameShare);
    e.SeniorDailyEnergyShare = t, __reflect(t.prototype, "game.SeniorDailyEnergyShare");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(e) {
        function t() {
            return null !== e && e.apply(this, arguments) || this;
        }
        return __extends(t, e), t.prototype.onShareSuc = function() {
            e.prototype.onShareSuc.call(this), hortor.TipManager.alert("分享成功，快去让好友帮忙找水果吧");
        }, t.prototype.onShareEnter = function(e) {
            hortor.Log.log("tree onShareEnter", e);
            var t = e, i = t.shareOwnerId;
            if (i > 0 && i != playerModel.uid) {
                var n = t.fruitId;
                TreeFunc.helpOthers(playerModel.uid, i, n);
            }
        }, t;
    }(e.GameShare);
    e.TreeShare = t, __reflect(t.prototype, "game.TreeShare");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(e) {
        function t() {
            return null !== e && e.apply(this, arguments) || this;
        }
        return __extends(t, e), t.prototype.onShareSuc = function(t) {
            util.jzlog("关系链召回分享>>>>分享成功回调", this.onShareSuc), e.prototype.onShareSuc.call(this);
        }, t.prototype.onShareEnter = function(e) {
            util.jzlog("召回奖励分享>>>>从链接进入");
        }, t;
    }(e.GameShare);
    e.UserRecallShare = t, __reflect(t.prototype, "game.UserRecallShare");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(e) {
        function t() {
            return null !== e && e.apply(this, arguments) || this;
        }
        return __extends(t, e), t.prototype.onShareSuc = function() {
            util.jzlog("万能碎片分享>>>>分享成功回调"), e.prototype.onShareSuc.call(this), hortor.TipManager.bubble("分享成功");
        }, t.prototype.onShareEnter = function(e) {
            util.jzlog("万能碎片分享>>>>从链接进入");
        }, t;
    }(e.GameShare);
    e.WnspShare = t, __reflect(t.prototype, "game.WnspShare");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.ignoreMe = !1, e;
        }
        return __extends(i, t), i.prototype.onShareSuc = function(i) {
            t.prototype.onShareSuc.call(this, i), e.WxFriendShare.WxFriendShareSuccess(i);
        }, i.prototype.onShareEnter = function(t) {
            console.log("WxFriendShare params ===>", t), console.log("loginParams.shareTicket", e.loginParams.shareTicket), 
            enterManager.available && e.loginParams.shareTicket && "" != e.loginParams.shareTicket && wxOpenData.loadImages(function() {
                hortor.WindowManager.showWindow(e.WindowType.WINDOW_WX_FRIEND, {
                    type: "group",
                    shareTicket: e.loginParams.shareTicket
                });
            });
        }, i.WxFriendShareSuccess = function(e) {
            void 0 === e && (e = null), hortor.TipManager.bubble("分享成功，快去点击分享链接查看排行吧");
        }, i;
    }(e.GameShare);
    e.WxFriendShare = t, __reflect(t.prototype, "game.WxFriendShare");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(e) {
        function t() {
            var t = null !== e && e.apply(this, arguments) || this;
            return t.tasks = [], t.canGoto = -1, t;
        }
        return __extends(t, e), t.prototype.update = function(e) {
            console.log("tasks--\x3e>>>>>>>>>>data: ", e), e.hasOwnProperty("tasks") && (this.tasks = e.tasks);
        }, t.prototype.wallTaskRed = function() {
            for (var e = !1, t = 0; t < this.tasks.length; t++) {
                var i = this.tasks[t];
                if (2 != i.status && -1 == this.canGoto) {
                    this.canGoto = 1;
                    break;
                }
                if (2 == i.status && 0 == i.awareAccpetStatus) {
                    e = !0;
                    break;
                }
            }
            return e || 1 == this.canGoto;
        }, t;
    }(hortor.Model);
    e.WallSdkModel = t, __reflect(t.prototype, "game.WallSdkModel");
}(game || (game = {}));

var wallSdkModel, game;

!function(e) {
    var t = function(t) {
        function i() {
            var e = t.call(this) || this;
            return e.skinPath = "platform/node/WallTaskNodeSkin", e;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.addClick(this.goBtn, this.goBtnFunc, this), this.addClick(this.getBtn, this.getBtnFunc, this);
        }, i.prototype.onData = function() {
            var t = this.data;
            this.gameIcon.source = t.icon, this.gameId.text = t.name, this.desc.text = t.desc, 
            this.rewardIcon.source = "energy" == t.awareId ? e.ResourcePath.getItemIconByName("beach_prop11_0") : e.ItemManager.getItemInfo(t.awareId).icon, 
            this.rewardNum.text = "x" + e.ComFunc.formatNumber(t.awareValue), this.goBtn.visible = 2 != t.status, 
            this.getBtn.visible = 2 == t.status, this.getBtn.icon = 0 == t.awareAccpetStatus ? "common_txt_lq" : "common_txt_qw1", 
            this.rewardGroup.visible = 0 == t.awareAccpetStatus;
        }, i.prototype.goBtnFunc = function() {
            var t = this.data;
            platform.user.wallSdkGoTask(t.taskId, function() {
                hortor.NotificationManager.dispatch(e.NotificationType.WX_WALL_TASK, {
                    taskId: t.taskId,
                    status: 2
                });
            });
        }, i.prototype.getBtnFunc = function() {
            var t = this.data;
            0 == t.awareAccpetStatus ? platform.user.wallSdkGetAward(t.taskId, function(i) {
                var n = {};
                n[t.awareId] = t.awareValue, e.ComFunc.getRewardView(n), e.ComFunc.addRewardData(n), 
                hortor.NotificationManager.dispatch(e.NotificationType.WX_WALL_TASK, {
                    taskId: t.taskId,
                    awareAccpetStatus: 1
                });
            }, function(i) {
                hortor.TipManager.tip(i.errMsg), hortor.NotificationManager.dispatch(e.NotificationType.WX_WALL_TASK, {
                    taskId: t.taskId,
                    status: 0
                });
            }) : platform.user.wallSdkGoTask(t.taskId, function() {});
        }, i;
    }(e.ItemRenderBase);
    e.WallTaskNode = t, __reflect(t.prototype, "game.WallTaskNode");
}(game || (game = {}));

var game;

!function(e) {
    var t = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(i, t), i.prototype.onInit = function() {
            this.addClick(this.closeBtn, this.closeBtnFunc, this), this.baseScroll.viewport = this.baseList, 
            this.baseData = new eui.ArrayCollection([]), this.baseList.dataProvider = this.baseData, 
            this.baseList.itemRenderer = e.WallTaskNode, hortor.NotificationManager.add(e.NotificationType.WX_WALL_TASK, this.refreshList, this);
        }, i.prototype.onData = function() {
            this.showList();
        }, i.prototype.showList = function() {
            this.baseData.replaceAll(wallSdkModel.tasks), this.baseList.dataProviderRefreshed();
        }, i.prototype.refreshList = function(e) {
            var t = _.find(wallSdkModel.tasks, function(t) {
                return e.taskId == t.taskId;
            });
            t && (e.hasOwnProperty("status") && (t.status = e.status), e.awareAccpetStatus && (t.awareAccpetStatus = e.awareAccpetStatus), 
            this.showList());
        }, i.prototype.closeBtnFunc = function() {
            this.hide(), gateModel.updateGate(e.WindowType.WINDOW_WALL_TASK);
        }, i;
    }(e.WindowBase);
    e.WxWallTaskWindow = t, __reflect(t.prototype, "game.WxWallTaskWindow");
}(game || (game = {}));

window.Main = Main;