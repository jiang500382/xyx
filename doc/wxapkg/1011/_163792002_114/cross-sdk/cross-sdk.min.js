function e(e, t) {
    if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
}

var t = function() {
    function e(e, t) {
        for (var n = 0; n < t.length; n++) {
            var s = t[n];
            s.enumerable = s.enumerable || !1, s.configurable = !0, "value" in s && (s.writable = !0), 
            Object.defineProperty(e, s.key, s);
        }
    }
    return function(t, n, s) {
        return n && e(t.prototype, n), s && e(t, s), t;
    };
}(), n = {
    Version: "0.1.15",
    NetUrl: {
        Test: "https://platform-test.hortorgames.com",
        Prod: "https://platform.hortorgames.com"
    },
    Box: {
        appId: "wx3301a6cbd35d9935",
        path: "/pages/index/index",
        envVersion: "release",
        extraData: {}
    },
    Requests: {
        FetchAds: "/cross/api/v1/fetch",
        ImagePath: "/cross/api/v1/show",
        Log: "/cross/api/v1/log"
    },
    Errors: {
        NetWorkErr: {
            errCode: 1e3,
            errMsg: "网络错误"
        },
        AdsDataErr: {
            errCode: 1001,
            errMsg: "没有广告数据"
        },
        CantUseNavFun: {
            errCode: 0,
            errMsg: "无法使用方法跳转小程序"
        }
    },
    LogType: {
        ClickAd: 1,
        ShowAd: 2
    }
}, s = function() {
    function s() {
        e(this, s);
    }
    return t(s, null, [ {
        key: "assign",
        value: function(e, t) {
            if (Object.assign) return Object.assign(e, t);
            for (var n in t) e[n] = t[n];
            return e;
        }
    }, {
        key: "jsonToQuery",
        value: function(e, t) {
            if (!e) return "";
            var n = [];
            for (var s in e) {
                var o = t ? encodeURIComponent(e[s]) : e[s];
                n.push(s + "=" + o);
            }
            return n.join("&");
        }
    }, {
        key: "queryToJson",
        value: function(e) {
            var t = {};
            if (!e) return t;
            var n = decodeURIComponent(e).split("&");
            for (var s in n) {
                var o = n[s].split("=");
                t[o[0]] = o[1];
            }
            return t;
        }
    }, {
        key: "getSystemInfo",
        value: function() {
            return this.systemInfo ? this.systemInfo : (this.systemInfo = wx.getSystemInfoSync(), 
            this.systemInfo.crossSDKV = n.Version, this.systemInfo);
        }
    }, {
        key: "getSystemInfoStr",
        value: function() {
            if (this.systemInfoStr) return this.systemInfoStr;
            var e = this.sliceJson(this.getSystemInfo(), [ "SDKVersion", "brand", "model", "system", "version", "crossSDKV" ]);
            return this.systemInfoStr = JSON.stringify(e), this.systemInfoStr;
        }
    }, {
        key: "sliceJson",
        value: function(e, t) {
            if (!e || !t) return {};
            "string" == typeof t && (t = t.replace(/\s+/g, "").split(","));
            var n = {};
            return t.map(function(t) {
                n[t] = e[t];
            }), n;
        }
    }, {
        key: "isFun",
        value: function(e) {
            return e && "function" == typeof e;
        }
    }, {
        key: "promisify",
        value: function(e) {
            return function() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                return new Promise(function(n, s) {
                    t.success = function(e) {
                        n(e);
                    }, t.fail = function(e) {
                        s(e);
                    }, e(t);
                });
            };
        }
    }, {
        key: "setStorage",
        value: function(e, t, n) {
            var s = "_CSDK_" + e + (n ? "_" + n : "");
            if (s && void 0 !== t) try {
                wx.setStorageSync(s, t.toString());
            } catch (e) {
                console.warn("[CSDK] setStorage err", e);
            }
        }
    }, {
        key: "getStorage",
        value: function(e, t) {
            var n = "_CSDK_" + e + (t ? "_" + t : ""), s = "";
            try {
                s = wx.getStorageSync(n);
            } catch (e) {
                console.warn("[CSDK] getStorage err", e);
            }
            return s;
        }
    }, {
        key: "clearStorage",
        value: function(e) {
            wx.removeStorageSync(n.StorageKeys[e]);
        }
    }, {
        key: "isSystem",
        value: function(e) {
            e = e.toLowerCase();
            var t = this.is || {};
            if (void 0 !== t[e]) return t[e];
            var n = this.getSystemInfo().system.toLowerCase();
            return t[e] = -1 < n.indexOf(e), this.is = t, t[e];
        }
    }, {
        key: "isIOS",
        value: function() {
            return this.isSystem("ios");
        }
    }, {
        key: "isAndroid",
        value: function() {
            return this.isSystem("android");
        }
    } ]), s;
}(), o = function() {
    function o(t) {
        e(this, o), this.HOST = n.NetUrl[t.env];
    }
    return t(o, [ {
        key: "request",
        value: function(e, t, o, i) {
            if (!e || !t) return !1;
            var a = o || {}, r = a.success, u = a.fail, c = a.complete, d = a.params;
            d.sysInfo = s.getSystemInfoStr();
            var h = {
                "content-type": i ? "application/json" : "application/x-www-form-urlencoded"
            }, f = function(e) {
                var t = {
                    errMsg: e.errMsg || e || "",
                    errCode: e.errCode || n.Errors.NetWorkErr.errCode
                };
                s.isFun(u) && u(t);
            };
            return wx.request({
                url: t,
                data: d,
                method: e,
                header: h,
                success: function(e) {
                    var t = e.data;
                    return 200 == e.statusCode ? t.meta && 0 != t.meta.errCode ? f(t.meta) : void (s.isFun(r) && r(t.data)) : f(t);
                },
                complete: function(e) {
                    s.isFun(c) && c(e);
                },
                fail: f
            });
        }
    }, {
        key: "get",
        value: function(e, t) {
            return this.request("GET", e, t);
        }
    }, {
        key: "post",
        value: function(e, t) {
            return this.request("POST", e, t);
        }
    }, {
        key: "getJSON",
        value: function(e, t) {
            return this.request("GET", e, t, !0);
        }
    }, {
        key: "postJSON",
        value: function(e, t) {
            return this.request("POST", e, t, !0);
        }
    } ]), o;
}(), i = function() {
    function i(t) {
        e(this, i), this.conf = t, this.network = new o(t), this.defData = {}, this.change = "", 
        this.ads = "", this.nowAd = "", this.lastIndex = "", this.showing = !1, this.useBoxWeight = 100;
        var n = "undefined" != typeof GameGlobal && "undefined" == typeof App, s = !wx.canIUse || !wx.canIUse("navigateToMiniProgram");
        this.canDirectJump = !1, this.canDirectJump = wx.canIUse ? wx.canIUse("navigateToMiniProgram") : void 0 !== wx.navigateToMiniProgram;
        var a = t.isMiniGame, r = void 0 === a ? n : a, u = t.useNav, c = void 0 === u ? s : u;
        console.log("[CSDK] isMiniGame: " + r + "; useNav: " + c + "; supportNav:" + s), 
        this.isMiniGame = r, this.useNav = c;
    }
    return t(i, [ {
        key: "postLog",
        value: function() {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : n.LogType.ShowAd, t = arguments[1], o = s.assign({
                prId: t.prId || "",
                logType: e
            }, this.conf);
            this.network.post(this.network.HOST + n.Requests.Log, {
                params: o
            });
        }
    }, {
        key: "_goApp",
        value: function(e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
            if (!this.isMiniGame && this.useNav) {
                var o = n.Errors.CantUseNavFun;
                return t.complete(o), t.success(o), !1;
            }
            var i = e.appId, a = e.path, r = e.envVersion, u = e.extraData, c = s.assign(t, {
                appId: i,
                path: a,
                envVersion: r,
                extraData: u
            });
            console.log("[CSDK] goApp", c), wx.navigateToMiniProgram(c);
        }
    }, {
        key: "_previewImage",
        value: function(e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
            console.log("[CSDK] preview ad ", e);
            var n = s.assign(t, {
                urls: [ e.url ]
            });
            wx.previewImage(n);
        }
    }, {
        key: "_goGame",
        value: function() {
            for (var e = arguments.length, t = Array(e), n = 0; n < e; n++) t[n] = arguments[n];
            !this.isMiniGame || this.canDirectJump && -1 != t[0].use_box_weight ? this._goApp.apply(this, t) : this._previewImage.apply(this, t);
        }
    }, {
        key: "_getPathChannel",
        value: function(e) {
            var t = e.path ? e.path.split("?") : [], n = s.queryToJson(t[1]), o = s.isIOS() ? "I" : "A";
            n.channel = this.conf.gameId + "_" + o + "_box";
            var i = s.jsonToQuery(n);
            return (t[0] || "") + "?" + i;
        }
    }, {
        key: "_getDirectPathChannel",
        value: function(e) {
            var t = e.path ? e.path.split("?") : [], n = s.queryToJson(t[1]), o = s.isIOS() ? "I" : "A";
            n.channel = this.conf.gameId + "_" + o + "_cross";
            var i = s.jsonToQuery(n);
            return (t[0] || "") + "?" + i;
        }
    }, {
        key: "_setAds",
        value: function(e) {
            var t = this, o = Math.floor, i = 0;
            e.map(function(e) {
                i += e.weight - 0;
                var a = !0;
                0 <= t.useBoxWeight ? a = o(100 * Math.random()) < t.useBoxWeight : 0 <= e.use_box_weight && (a = o(100 * Math.random()) < e.use_box_weight), 
                e.gameId ? a ? (e = s.assign(e, n.Box), e.path = n.Box.path + "?f=" + t.conf.gameId + "&t=" + (e.gameId || "")) : e.path = t._getDirectPathChannel(e) : e.path = t._getPathChannel(e);
            }), this.ads = {
                ads: e,
                weight: i
            };
        }
    }, {
        key: "_getAds",
        value: function() {
            return this.ads || {};
        }
    }, {
        key: "_setData",
        value: function(e) {
            this.useBoxWeight = e.use_box_weight, this._setAds(e.ads), delete e.Title, delete e.ads, 
            this.defData = s.assign(e, n.Box), this.defData.path = n.Box.path + "?f=" + this.conf.gameId;
        }
    }, {
        key: "_getData",
        value: function() {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.nowAd;
            return e.icon ? e : this.defData;
        }
    }, {
        key: "_setLastIndex",
        value: function(e) {
            this.lastIndex = e, s.setStorage("LastIndex", e, this.adsId);
        }
    }, {
        key: "_getStorageIndex",
        value: function() {
            var e = parseInt(s.getStorage("LastIndex", this.adsId), 10);
            return isNaN(e) ? "" : (this.lastIndex = e, e);
        }
    }, {
        key: "_getLastIndex",
        value: function() {
            return "" === this.lastIndex ? this._getStorageIndex() : this.lastIndex;
        }
    }, {
        key: "_getRadomIndex",
        value: function(e) {
            var t = e.ads, n = e.weight, s = Math.floor(Math.random() * n), o = 0;
            return t.findIndex(function(e) {
                var t = e.weight, n = !!(o <= s && s < o + t);
                return n || (o += t), n;
            });
        }
    }, {
        key: "_getRadomAdIndex",
        value: function(e) {
            var t = this._getLastIndex(), n = this._getRadomIndex(e);
            return n == t ? this._getRadomAdIndex(e) : n;
        }
    }, {
        key: "_getRadomAd",
        value: function(e) {
            var t = e.ads, n = t.length, s = this._getLastIndex(), o = "";
            return o = 1 === n ? 0 : 2 === n ? 1 === s ? 0 : 1 : this._getRadomAdIndex(e), console.log("[CSDK] radom ad", o, s), 
            "" === o ? "" : (this._setLastIndex(o), t[o]);
        }
    }, {
        key: "reset",
        value: function(e) {
            var t = this._getAds();
            if (t.ads && 1 == t.ads.length && this.nowAd) console.log("[CSDK] only one AD is not updated"); else {
                var o = t.ads && t.ads.length ? this._getRadomAd(t) : "";
                if (!o) return !1;
                this.nowAd = o, this.postLog(n.LogType.ShowAd, o);
                var i = this._getData(o);
                console.log("[CSDK] now ad", i), s.isFun(e) && e(i), s.isFun(this.change) && this.change(i);
            }
        }
    }, {
        key: "onChange",
        value: function(e) {
            s.isFun(e) && (this.change = e);
        }
    }, {
        key: "show",
        value: function() {
            var e = this, t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
            if (this.showing) return !1;
            if (this.showing = !0, !this.nowAd) return console.log("[CSDK] no ad");
            var o = this.nowAd;
            this.postLog(n.LogType.ClickAd, o);
            var i = t.success, a = t.fail, r = t.complete;
            this._goGame(o, {
                success: function(e) {
                    console.log("[CSDK] show success", e), s.isFun(i) && i(e);
                },
                fail: function(e) {
                    console.log("[CSDK] show fail", e), s.isFun(a) && a(e);
                },
                complete: function(t) {
                    e.showing = !1, s.isFun(e.change) && e.reset(), s.isFun(r) && r(t);
                }
            });
        }
    }, {
        key: "create",
        value: function(e) {
            var t = this;
            console.log("[CSDK] create", e.adsId);
            var o = e.adsId, i = this.conf, a = i.gameId, r = i.openId, u = void 0 === r ? "" : r, c = i.userId, d = void 0 === c ? "" : c, h = function(t) {
                s.isFun(e.fail) && e.fail(t), console.log("[CSDK] create fail", t);
            };
            this.adsId = o, this.network.post(this.network.HOST + n.Requests.FetchAds, {
                params: {
                    gameId: a,
                    openId: u,
                    userId: d,
                    adsId: o
                },
                success: function(s) {
                    return s.ads && s.ads.length ? (console.log("[CSDK] create success"), t._setData(s), 
                    void t.reset(e.success)) : h(n.Errors.AdsDataErr);
                },
                fail: h
            });
        }
    } ], [ {
        key: "getInstance",
        value: function(e) {
            return this.instance = this.instance || new i(e), this.instance;
        }
    } ]), i;
}(), a = {
    customerService: function(e) {
        wx.openCustomerServiceConversation(e);
    },
    ads: {},
    createAd: function(e) {
        if (!e || !e.adsId) return console.warn("[CSDK] no adsId");
        var t = new i(this.conf);
        return t.create(e), this.ads[e.adsId] = t, t;
    },
    showAd: function(e) {
        "string" == typeof e && (e = {
            adsId: e
        });
        var t = e.adsId;
        if (!t) return console.warn("[CSDK] no adsId");
        var n = this.ads[t];
        return n ? void n.show(e) : console.warn("[CSDK] no ad");
    },
    init: function(e) {
        return console.log("[CSDK] init", e), e.openId || e.userId ? -1 === [ "Test", "Prod" ].indexOf(e.env) ? console.warn("[CSDK] init env not Test or Prod") : void (this.conf = e) : console.warn("[CSDK] init openId and userId is null");
    }
};

"undefined" == typeof App ? "undefined" == typeof module ? "undefined" != typeof window && (window.crossSDK = a) : module.exports = a : function(e) {
    function t() {
        this.crossSDK = new s(this);
    }
    var n = function(e, t, n) {
        if (e[t]) {
            var s = e[t];
            e[t] = function(e) {
                n.call(this, e, t), s.call(this, e);
            };
        } else e[t] = function(e) {
            n.call(this, e, t);
        };
    }, s = function(e) {
        this.app = e;
    };
    s.prototype = e;
    var o = App;
    App = function(e) {
        n(e, "onLaunch", t), o(e);
    };
}(a);