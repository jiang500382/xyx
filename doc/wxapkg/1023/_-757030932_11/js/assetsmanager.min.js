var e = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
    return typeof e;
} : function(e) {
    return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
}, r = window.egret, t = function(e, r, t) {
    e.__class__ = r, t ? t.push(r) : t = [ r ], e.__types__ = e.__types__ ? t.concat(e.__types__) : t;
}, o = function(e, r) {
    function t() {
        this.constructor = e;
    }
    for (var o in r) r.hasOwnProperty(o) && (e[o] = r[o]);
    t.prototype = r.prototype, e.prototype = new t();
}, n = function(e, r, t, o) {
    return new (t || (t = Promise))(function(n, i) {
        function s(e) {
            try {
                u(o.next(e));
            } catch (e) {
                i(e);
            }
        }
        function a(e) {
            try {
                u(o.throw(e));
            } catch (e) {
                i(e);
            }
        }
        function u(e) {
            e.done ? n(e.value) : new t(function(r) {
                r(e.value);
            }).then(s, a);
        }
        u((o = o.apply(e, r || [])).next());
    });
}, i = function(e, r) {
    function t(e) {
        return function(r) {
            return o([ e, r ]);
        };
    }
    function o(t) {
        if (n) throw new TypeError("Generator is already executing.");
        for (;u; ) try {
            if (n = 1, i && (s = i[2 & t[0] ? "return" : t[0] ? "throw" : "next"]) && !(s = s.call(i, t[1])).done) return s;
            switch (i = 0, s && (t = [ 0, s.value ]), t[0]) {
              case 0:
              case 1:
                s = t;
                break;

              case 4:
                return u.label++, {
                    value: t[1],
                    done: !1
                };

              case 5:
                u.label++, i = t[1], t = [ 0 ];
                continue;

              case 7:
                t = u.ops.pop(), u.trys.pop();
                continue;

              default:
                if (s = u.trys, !(s = s.length > 0 && s[s.length - 1]) && (6 === t[0] || 2 === t[0])) {
                    u = 0;
                    continue;
                }
                if (3 === t[0] && (!s || t[1] > s[0] && t[1] < s[3])) {
                    u.label = t[1];
                    break;
                }
                if (6 === t[0] && u.label < s[1]) {
                    u.label = s[1], s = t;
                    break;
                }
                if (s && u.label < s[2]) {
                    u.label = s[2], u.ops.push(t);
                    break;
                }
                s[2] && u.ops.pop(), u.trys.pop();
                continue;
            }
            t = r.call(e, u);
        } catch (e) {
            t = [ 6, e ], i = 0;
        } finally {
            n = s = 0;
        }
        if (5 & t[0]) throw t[1];
        return {
            value: t[0] ? t[1] : void 0,
            done: !0
        };
    }
    var n, i, s, a, u = {
        label: 0,
        sent: function() {
            if (1 & s[0]) throw s[1];
            return s[1];
        },
        trys: [],
        ops: []
    };
    return a = {
        next: t(0),
        throw: t(1),
        return: t(2)
    }, "function" == typeof Symbol && (a[Symbol.iterator] = function() {
        return this;
    }), a;
}, s = function(r, t, o, n) {
    var i, s = arguments.length, a = 3 > s ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
    if ("object" == ("undefined" == typeof Reflect ? "undefined" : e(Reflect)) && "function" == typeof Reflect.decorate) a = Reflect.decorate(r, t, o, n); else for (var u = r.length - 1; u >= 0; u--) (i = r[u]) && (a = (3 > s ? i(a) : s > 3 ? i(t, o, a) : i(t, o)) || a);
    return s > 3 && a && Object.defineProperty(t, o, a), a;
};

!function(e) {
    function r(r) {
        var t = e.fileSystem.getFile(r);
        return t || (r = e.resourceNameSelector(r), t = e.fileSystem.getFile(r)), t;
    }
    e.resourceNameSelector = function(e) {
        return e;
    }, e.getResourceInfo = r;
    var o;
    e.setConfigURL = function(e, r) {
        var t;
        t = e.indexOf(".json") >= 0 ? "legacyResourceConfig" : "resourceConfig", o = {
            type: t,
            root: r,
            url: e,
            name: e
        };
    };
    var n = function() {
        function t() {}
        return t.prototype.init = function() {
            var r = this;
            return this.config || (this.config = {
                alias: {},
                groups: {},
                resourceRoot: o.root,
                typeSelector: function() {
                    return "unknown";
                },
                mergeSelector: null,
                fileSystem: null
            }), e.queue.loadResource(o).then(function(e) {
                return r.parseConfig(e);
            }).catch(function(r) {
                return r.__resource_manager_error__ || (console.error(r.stack), r = new e.ResourceManagerError(1002)), 
                Promise.reject(r);
            });
        }, t.prototype.getGroupByName = function(r, t) {
            var o = this.config.groups[r], n = [];
            if (!o) {
                if (t) throw new e.ResourceManagerError(2005, r);
                return null;
            }
            for (var i = 0, s = o; i < s.length; i++) {
                var a = s[i], u = e.config.getResourceWithSubkey(a, !0), c = u.key, f = (u.subkey, 
                e.config.getResource(c, !0));
                -1 == n.indexOf(f) && n.push(f);
            }
            return n;
        }, t.prototype.__temp__get__type__via__url = function(r) {
            var t = this.config.alias[r];
            if (t || (t = r), e.resourceTypeSelector) {
                var o = e.resourceTypeSelector(t);
                if (!o) throw new e.ResourceManagerError(2004, t);
                return o;
            }
            return console.warn("RES.mapConfig 并未设置 typeSelector"), "unknown";
        }, t.prototype.getResourceWithSubkey = function(r, t) {
            var o = (r = this.getKeyByAlias(r)).indexOf("#"), n = "";
            o >= 0 && (n = r.substr(o + 1), r = r.substr(0, o));
            var i = this.getResource(r);
            if (i) return {
                r: i,
                key: r,
                subkey: n
            };
            if (t) {
                var s = n ? r + "#" + n : r;
                throw new e.ResourceManagerError(2006, s);
            }
            return null;
        }, t.prototype.getKeyByAlias = function(e) {
            return this.config.alias[e] ? this.config.alias[e] : e;
        }, t.prototype.getResource = function(t, o) {
            var n = this.config.alias[t];
            n || (n = t);
            var i = r(n);
            if (!i) {
                if (o) throw new e.ResourceManagerError(2006, t);
                return null;
            }
            return i;
        }, t.prototype.getGroup = function(e) {
            return this.getGroupByName(e);
        }, t.prototype.createGroup = function(e, r, t) {
            if (void 0 === t && (t = !1), !t && this.config.groups[e] || !r || 0 == r.length) return !1;
            for (var o = [], n = 0, i = r; n < i.length; n++) {
                var s = i[n];
                if (this.config.groups[s]) {
                    var a = this.config.groups[s];
                    o = o.concat(a);
                } else o.push(s);
            }
            return this.config.groups[e] = o, !0;
        }, t.prototype.parseConfig = function(r) {
            this.config = r, e.fileSystem = r.fileSystem;
        }, t.prototype.addSubkey = function(e, r) {
            this.addAlias(e, r + "#" + e);
        }, t.prototype.addAlias = function(e, r) {
            this.config.alias[r] && (r = this.config.alias[r]), this.config.alias[e] = r;
        }, t.prototype.getType = function(e) {
            return this.getResource(e, !0).type;
        }, t.prototype.addResourceData = function(r) {
            r.type || (r.type = this.__temp__get__type__via__url(r.url)), e.fileSystem.addFile(r.url, r.type, r.root), 
            r.name && (this.config.alias[r.name] = r.url);
        }, t.prototype.destory = function() {
            e.systemPid++;
            var r = {
                getFile: function() {
                    return null;
                },
                addFile: function() {},
                profile: function() {}
            };
            this.config = {
                groups: {},
                alias: {},
                fileSystem: r,
                typeSelector: function(e) {
                    return e;
                },
                resourceRoot: "resources",
                mergeSelector: null
            };
        }, t;
    }();
    e.ResourceConfig = n, t(n.prototype, "RES.ResourceConfig");
}(a || (a = {}));

!function(e) {
    var o = function() {
        function t() {
            this.groupTotalDic = {}, this.numLoadedDic = {}, this.itemListDic = {}, this.groupErrorDic = {}, 
            this.retryTimesDic = {}, this.maxRetryTimes = 3, this.priorityQueue = {}, this.reporterDic = {}, 
            this.dispatcherDic = {}, this.failedList = new Array(), this.loadItemErrorDic = {}, 
            this.errorDic = {}, this.loadingCount = 0, this.thread = 4, this.queueIndex = 0;
        }
        return t.prototype.load = function(e, t, o, n) {
            var i = this;
            if (this.itemListDic[t]) {
                if (!this.dispatcherDic[t]) {
                    var s = new r.EventDispatcher();
                    this.dispatcherDic[t] = s;
                }
                return new Promise(function(e, r) {
                    i.dispatcherDic[t].addEventListener("complete", e, null), i.dispatcherDic[t].addEventListener("error", function(e) {
                        r(e.data);
                    }, null);
                });
            }
            for (var a = e.length, u = 0; a > u; u++) {
                var c = e[u];
                c.groupNames || (c.groupNames = []), c.groupNames.push(t);
            }
            this.itemListDic[t] = e, this.groupTotalDic[t] = e.length, this.numLoadedDic[t] = 0, 
            this.priorityQueue[o] ? this.priorityQueue[o].push(t) : this.priorityQueue[o] = [ t ], 
            this.reporterDic[t] = n;
            var f = new r.EventDispatcher();
            this.dispatcherDic[t] = f;
            var l = new Promise(function(e, r) {
                f.addEventListener("complete", e, null), f.addEventListener("error", function(e) {
                    r(e.data);
                }, null);
            });
            return this.next(), l;
        }, t.prototype.next = function() {
            for (var r = this, t = this; this.loadingCount < this.thread && "break" !== function() {
                var o = t.getOneResourceInfo();
                return o ? (t.loadingCount++, void t.loadResource(o).then(function(t) {
                    r.loadingCount--, e.host.save(o, t);
                    var n = o.groupNames.shift();
                    0 == o.groupNames.length && (o.groupNames = void 0);
                    var i = r.reporterDic[n];
                    r.numLoadedDic[n]++;
                    var s = r.numLoadedDic[n], a = r.groupTotalDic[n];
                    if (i && i.onProgress && i.onProgress(s, a), s == a) {
                        var u = r.groupErrorDic[n];
                        r.removeGroupName(n), delete r.groupTotalDic[n], delete r.numLoadedDic[n], delete r.itemListDic[n], 
                        delete r.groupErrorDic[n];
                        var c = r.dispatcherDic[n];
                        if (u) {
                            var f = r.loadItemErrorDic[n];
                            delete r.loadItemErrorDic[n];
                            var l = r.errorDic[n];
                            delete r.errorDic[n], c.dispatchEventWith("error", !1, {
                                itemList: f,
                                error: l
                            });
                        } else c.dispatchEventWith("complete");
                    }
                    r.next();
                }).catch(function(t) {
                    if (!t.__resource_manager_error__) throw t;
                    r.loadingCount--, delete e.host.state[o.root + o.name];
                    var n = r.retryTimesDic[o.name] || 1;
                    if (!(n > r.maxRetryTimes)) return r.retryTimesDic[o.name] = n + 1, r.failedList.push(o), 
                    void r.next();
                    delete r.retryTimesDic[o.name];
                    var i = o.groupNames.shift();
                    0 == o.groupNames.length && delete o.groupNames, r.loadItemErrorDic[i] || (r.loadItemErrorDic[i] = []), 
                    -1 == r.loadItemErrorDic[i].indexOf(o) && r.loadItemErrorDic[i].push(o), r.groupErrorDic[i] = !0;
                    var s = r.reporterDic[i];
                    r.numLoadedDic[i]++;
                    var a = r.numLoadedDic[i], u = r.groupTotalDic[i];
                    if (s && s.onProgress && s.onProgress(a, u), a == u) {
                        r.groupErrorDic[i], r.removeGroupName(i), delete r.groupTotalDic[i], delete r.numLoadedDic[i], 
                        delete r.itemListDic[i], delete r.groupErrorDic[i];
                        var c = r.loadItemErrorDic[i];
                        delete r.loadItemErrorDic[i], r.dispatcherDic[i].dispatchEventWith("error", !1, {
                            itemList: c,
                            error: t
                        });
                    } else r.errorDic[i] = t;
                    r.next();
                })) : "break";
            }(); ) ;
        }, t.prototype.removeGroupName = function(e) {
            for (var r in this.priorityQueue) {
                for (var t = this.priorityQueue[r], o = 0, n = !1, i = t.length, s = 0; i > s; s++) {
                    if (t[s] == e) {
                        t.splice(o, 1), n = !0;
                        break;
                    }
                    o++;
                }
                if (n) {
                    0 == t.length && delete this.priorityQueue[r];
                    break;
                }
            }
        }, t.prototype.getOneResourceInfo = function() {
            if (this.failedList.length > 0) return this.failedList.shift();
            var e = Number.NEGATIVE_INFINITY;
            for (var r in this.priorityQueue) e = Math.max(e, r);
            var t = this.priorityQueue[e];
            if (t && 0 != t.length) {
                for (var o = t.length, n = [], i = 0; o > i && (this.queueIndex >= o && (this.queueIndex = 0), 
                !((n = this.itemListDic[t[this.queueIndex]]).length > 0)); i++) this.queueIndex++;
                if (0 != n.length) return n.shift();
            }
        }, t.prototype.loadResource = function(r, t) {
            if (!t) {
                if (1 == e.FEATURE_FLAG.FIX_DUPLICATE_LOAD) {
                    var o = e.host.state[r.root + r.name];
                    if (2 == o) return Promise.resolve(e.host.get(r));
                    if (1 == o) return r.promise;
                }
                t = e.processor.isSupport(r);
            }
            if (!t) throw new e.ResourceManagerError(2001, r.name, r.type);
            e.host.state[r.root + r.name] = 1;
            var n = t.onLoadStart(e.host, r);
            return r.promise = n, n;
        }, t.prototype.unloadResource = function(r) {
            if (!e.host.get(r)) return console.warn("尝试释放不存在的资源:", r.name), Promise.resolve();
            var t = e.processor.isSupport(r);
            if (t) {
                e.host.state[r.root + r.name] = 3;
                var o = t.onRemoveStart(e.host, r);
                return e.host.remove(r), o;
            }
            return Promise.resolve();
        }, t;
    }();
    e.ResourceLoader = o, t(o.prototype, "RES.ResourceLoader");
}(a || (a = {}));

!function(e) {
    var n = {};
    e.systemPid = 0, e.checkCancelation = function(r, t, o) {
        var n = o.value;
        o.value = function() {
            for (var r = [], t = 0; t < arguments.length; t++) r[t] = arguments[t];
            var o = e.systemPid;
            return n.apply(this, r).then(function(t) {
                if (e.systemPid != o) throw new i(1005, r[0]);
                return t;
            });
        };
    }, e.profile = function() {
        e.fileSystem.profile(), console.log(n);
        var t = 0;
        for (var o in n) {
            var i = n[o];
            i instanceof r.Texture && (t += i.$bitmapWidth * i.$bitmapHeight * 4);
        }
        console.log("gpu size : " + (t / 1024).toFixed(3) + "kb");
    }, e.host = {
        state: {},
        get resourceConfig() {
            return e.config;
        },
        load: function(r, t) {
            var o = "string" == typeof t ? e.processor._map[t] : t;
            return e.queue.loadResource(r, o);
        },
        unload: function(r) {
            return e.queue.unloadResource(r);
        },
        save: function(r, t) {
            e.host.state[r.root + r.name] = 2, r.promise = void 0, n[r.url] = t;
        },
        get: function(e) {
            return n[e.url];
        },
        remove: function(r) {
            e.host.state[r.root + r.name] = 0, delete n[r.url];
        }
    }, e.config = new e.ResourceConfig(), e.queue = new e.ResourceLoader();
    var i = function(e) {
        function r(t, o, n) {
            var i = e.call(this) || this;
            return i.__resource_manager_error__ = !0, i.name = t.toString(), i.message = r.errorMessage[t].replace("{0}", o).replace("{1}", n), 
            i;
        }
        return o(r, e), r.errorMessage = {
            1001: "文件加载失败:{0}",
            1002: "ResourceManager 初始化失败：配置文件加载失败",
            1005: "ResourceManager 已被销毁，文件加载失败:{0}",
            2001: "{0}解析失败,不支持指定解析类型:'{1}'，请编写自定义 Processor ，更多内容请参见 https://github.com/egret-labs/resourcemanager/blob/master/docs/README.md#processor",
            2002: "Analyzer 相关API 在 ResourceManager 中不再支持，请编写自定义 Processor ，更多内容请参见 https://github.com/egret-labs/resourcemanager/blob/master/docs/README.md#processor",
            2003: "{0}解析失败,错误原因:{1}",
            2004: "无法找到文件类型:{0}",
            2005: "资源配置文件中无法找到特定的资源组:{0}",
            2006: "资源配置文件中无法找到特定的资源:{0}"
        }, r;
    }(Error);
    e.ResourceManagerError = i, t(i.prototype, "RES.ResourceManagerError");
}(a || (a = {}));

!function(e) {
    e.checkNull = function(e, r, t) {
        var o = t.value;
        t.value = function() {
            for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
            return e[0] ? o.apply(this, e) : (console.warn("方法" + r + "的参数不能为null"), null);
        };
    }, e.FEATURE_FLAG = {
        FIX_DUPLICATE_LOAD: 1
    };
    !function(e) {
        var r = "warning";
        e.setUpgradeGuideLevel = function(e) {
            r = e;
        };
    }(e.upgrade || (e.upgrade = {}));
}(a || (a = {}));

!function(e) {
    !function(o) {
        function s(t, o) {
            return n(this, void 0, void 0, function() {
                var n = this;
                return i(this, function(i) {
                    return [ 2, new Promise(function(i, s) {
                        t.addEventListener(r.Event.COMPLETE, function() {
                            var e = t.data ? t.data : t.response;
                            i(e);
                        }, n), t.addEventListener(r.IOErrorEvent.IO_ERROR, function() {
                            var r = new e.ResourceManagerError(1001, o.url);
                            s(r);
                        }, n);
                    }) ];
                });
            });
        }
        function a(r) {
            if (-1 != r.url.indexOf("://")) return r.url;
            var t = r.root + r.url;
            return e.getRealURL ? e.getRealURL(t) : t;
        }
        function u(e, r) {
            if (-1 != r.indexOf("://")) return r;
            var t = (e = e.split("\\").join("/")).match(/#.*|\?.*/), o = "";
            t && (o = t[0]);
            var n = e.lastIndexOf("/");
            return (e = -1 != n ? e.substring(0, n + 1) + r : r) + o;
        }
        function c(e, r, t) {
            switch (e) {
              case l.COMPRESSED_RGB_PVRTC_4BPPV1_IMG:
              case l.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG:
                return Math.floor((Math.max(r, 8) * Math.max(t, 8) * 4 + 7) / 8);

              case l.COMPRESSED_RGB_PVRTC_2BPPV1_IMG:
              case l.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG:
                return Math.floor((Math.max(r, 16) * Math.max(t, 8) * 2 + 7) / 8);

              default:
                return 0;
            }
        }
        o.isSupport = function(e) {
            return o._map[e.type];
        }, o.map = function(e, r) {
            o._map[e] = r;
        }, o.getRelativePath = u, o.ImageProcessor = {
            onLoadStart: function(e, t) {
                return n(this, void 0, void 0, function() {
                    var o, n, u, c, f;
                    return i(this, function(i) {
                        switch (i.label) {
                          case 0:
                            return (o = new r.ImageLoader()).load(a(t)), [ 4, s(o, t) ];

                          case 1:
                            return n = i.sent(), (u = new r.Texture())._setBitmapData(n), (c = e.resourceConfig.getResource(t.name)) && c.scale9grid && (f = c.scale9grid.split(","), 
                            u.scale9Grid = new r.Rectangle(parseInt(f[0]), parseInt(f[1]), parseInt(f[2]), parseInt(f[3]))), 
                            [ 2, u ];
                        }
                    });
                });
            },
            onRemoveStart: function(e, r) {
                return e.get(r).dispose(), Promise.resolve();
            }
        }, o.BinaryProcessor = {
            onLoadStart: function(e, t) {
                return n(this, void 0, void 0, function() {
                    var e, o;
                    return i(this, function(n) {
                        switch (n.label) {
                          case 0:
                            return e = new r.HttpRequest(), e.responseType = r.HttpResponseType.ARRAY_BUFFER, 
                            e.open(a(t), "get"), e.send(), [ 4, s(e, t) ];

                          case 1:
                            return o = n.sent(), [ 2, o ];
                        }
                    });
                });
            },
            onRemoveStart: function(e, r) {
                return Promise.resolve();
            }
        }, o.TextProcessor = {
            onLoadStart: function(e, t) {
                return n(this, void 0, void 0, function() {
                    var e, o;
                    return i(this, function(n) {
                        switch (n.label) {
                          case 0:
                            return e = new r.HttpRequest(), e.responseType = r.HttpResponseType.TEXT, e.open(a(t), "get"), 
                            e.send(), [ 4, s(e, t) ];

                          case 1:
                            return o = n.sent(), [ 2, o ];
                        }
                    });
                });
            },
            onRemoveStart: function(e, r) {
                return Promise.resolve();
            }
        }, o.JsonProcessor = {
            onLoadStart: function(e, r) {
                return n(this, void 0, void 0, function() {
                    var t, o;
                    return i(this, function(n) {
                        switch (n.label) {
                          case 0:
                            return [ 4, e.load(r, "text") ];

                          case 1:
                            return t = n.sent(), o = JSON.parse(t), [ 2, o ];
                        }
                    });
                });
            },
            onRemoveStart: function(e, r) {
                return Promise.resolve();
            }
        }, o.XMLProcessor = {
            onLoadStart: function(e, t) {
                return n(this, void 0, void 0, function() {
                    var o, n;
                    return i(this, function(i) {
                        switch (i.label) {
                          case 0:
                            return [ 4, e.load(t, "text") ];

                          case 1:
                            return o = i.sent(), n = r.XML.parse(o), [ 2, n ];
                        }
                    });
                });
            },
            onRemoveStart: function(e, r) {
                return Promise.resolve();
            }
        }, o.CommonJSProcessor = {
            onLoadStart: function(r, t) {
                return n(this, void 0, void 0, function() {
                    var o, n, s, a;
                    return i(this, function(i) {
                        switch (i.label) {
                          case 0:
                            return [ 4, r.load(t, "text") ];

                          case 1:
                            o = i.sent(), n = new Function("require", "exports", o), s = function() {}, a = {};
                            try {
                                n(s, a);
                            } catch (r) {
                                throw new e.ResourceManagerError(2003, t.name, r.message);
                            }
                            return [ 2, a ];
                        }
                    });
                });
            },
            onRemoveStart: function(e, r) {
                return Promise.resolve();
            }
        }, o.SheetProcessor = {
            onLoadStart: function(e, t) {
                return n(this, void 0, void 0, function() {
                    var o, n, s, a, c, f, l, p, d, h;
                    return i(this, function(i) {
                        switch (i.label) {
                          case 0:
                            return [ 4, e.load(t, "json") ];

                          case 1:
                            return o = i.sent(), n = u(t.url, o.file), (s = e.resourceConfig.getResource(o.file)) || (s = {
                                name: n,
                                url: n,
                                type: "image",
                                root: t.root
                            }), [ 4, e.load(s) ];

                          case 2:
                            p = i.sent(), a = o.frames, (c = new r.SpriteSheet(p)).$resourceInfo = s;
                            for (f in a) l = a[f], p = c.createTexture(f, l.x, l.y, l.w, l.h, l.offX, l.offY, l.sourceW, l.sourceH), 
                            l.scale9grid && (d = l.scale9grid, h = d.split(","), p.scale9Grid = new r.Rectangle(parseInt(h[0]), parseInt(h[1]), parseInt(h[2]), parseInt(h[3])));
                            return e.save(s, p), [ 2, c ];
                        }
                    });
                });
            },
            getData: function(e, r, t, o) {
                var n = e.get(r);
                return n ? n.getTexture(o) : (console.error("missing resource : " + t + "#" + o), 
                null);
            },
            onRemoveStart: function(e, r) {
                var t = e.get(r), o = t.$resourceInfo;
                return t.dispose(), e.unload(o), Promise.resolve();
            }
        };
        var f = function(e, r) {
            var t = "", o = r.split("\n")[2], n = o.indexOf('file="');
            return -1 != n && (o = o.substring(n + 6), n = o.indexOf('"'), t = o.substring(0, n)), 
            e = -1 != (n = (e = e.split("\\").join("/")).lastIndexOf("/")) ? e.substring(0, n + 1) + t : t;
        };
        o.FontProcessor = {
            onLoadStart: function(e, t) {
                return n(this, void 0, void 0, function() {
                    var o, n, s, a, c, l;
                    return i(this, function(i) {
                        switch (i.label) {
                          case 0:
                            return [ 4, e.load(t, "text") ];

                          case 1:
                            o = i.sent();
                            try {
                                n = JSON.parse(o);
                            } catch (e) {
                                n = o;
                            }
                            return s = t.name.replace("fnt", "png"), (a = e.resourceConfig.getResource(s)) || (s = "string" == typeof n ? f(t.url, n) : u(t.url, n.file), 
                            a = {
                                name: s,
                                url: s,
                                type: "image",
                                root: t.root
                            }), [ 4, e.load(a) ];

                          case 2:
                            return c = i.sent(), l = new r.BitmapFont(c, n), l.$resourceInfo = a, e.save(a, c), 
                            [ 2, l ];
                        }
                    });
                });
            },
            onRemoveStart: function(e, r) {
                var t = e.get(r).$resourceInfo;
                return e.unload(t), Promise.resolve();
            }
        }, o.SoundProcessor = {
            onLoadStart: function(e, t) {
                return n(this, void 0, void 0, function() {
                    var e;
                    return i(this, function(o) {
                        switch (o.label) {
                          case 0:
                            return (e = new r.Sound()).load(a(t)), [ 4, s(e, t) ];

                          case 1:
                            return o.sent(), [ 2, e ];
                        }
                    });
                });
            },
            onRemoveStart: function(e, r) {
                return Promise.resolve();
            }
        }, o.MovieClipProcessor = {
            onLoadStart: function(t, o) {
                var n, i;
                return t.load(o, "json").then(function(r) {
                    n = r;
                    var s = o.name, a = s.substring(0, s.lastIndexOf(".")) + ".png";
                    if (!(i = t.resourceConfig.getResource(a, !0))) throw new e.ResourceManagerError(1001, a);
                    return t.load(i);
                }).then(function(e) {
                    t.save(i, e);
                    var o = e;
                    return new r.MovieClipDataFactory(n, o);
                });
            },
            onRemoveStart: function(e, r) {
                var t = e.get(r);
                t.clearCache(), t.$spriteSheet.dispose();
                var o = r.name, n = o.substring(0, o.lastIndexOf(".")) + ".png", i = e.resourceConfig.getResource(n, !0);
                return e.unload(i);
            }
        }, o.MergeJSONProcessor = {
            onLoadStart: function(r, t) {
                return n(this, void 0, void 0, function() {
                    var o, n;
                    return i(this, function(i) {
                        switch (i.label) {
                          case 0:
                            return [ 4, r.load(t, "json") ];

                          case 1:
                            o = i.sent();
                            for (n in o) e.config.addSubkey(n, t.name);
                            return [ 2, o ];
                        }
                    });
                });
            },
            getData: function(e, r, t, o) {
                var n = e.get(r);
                return n ? n[o] : (console.error("missing resource :" + r.name), null);
            },
            onRemoveStart: function(e, r) {
                return Promise.resolve();
            }
        }, o.ResourceConfigProcessor = {
            onLoadStart: function(r, t) {
                return n(this, void 0, void 0, function() {
                    var o, n;
                    return i(this, function(i) {
                        switch (i.label) {
                          case 0:
                            return [ 4, r.load(t, "commonjs") ];

                          case 1:
                            return o = i.sent(), n = new e.NewFileSystem(o.resources), o.fileSystem = n, delete o.resource, 
                            e.resourceTypeSelector = o.typeSelector, e.resourceNameSelector = o.nameSelector ? o.nameSelector : function(e) {
                                return e;
                            }, [ 2, o ];
                        }
                    });
                });
            },
            onRemoveStart: function() {
                return n(this, void 0, void 0, function() {
                    return i(this, function(e) {
                        return [ 2 ];
                    });
                });
            }
        }, o.LegacyResourceConfigProcessor = {
            onLoadStart: function(r, t) {
                return r.load(t, "json").then(function(r) {
                    var o = e.config.config, n = t.root, i = o.fileSystem;
                    i || (i = {
                        fsData: {},
                        getFile: function(e) {
                            return l[e];
                        },
                        addFile: function(e, r, t) {
                            r || (r = ""), void 0 == t && (t = ""), l[e] = {
                                name: e,
                                type: r,
                                url: e,
                                root: t
                            };
                        },
                        profile: function() {
                            console.log(l);
                        }
                    }, o.fileSystem = i);
                    for (var s = o.groups, a = 0, u = r.groups; a < u.length; a++) {
                        var c = u[a];
                        s[c.name] = c.keys.split(",");
                    }
                    for (var f = o.alias, l = i.fsData, p = 0, d = r.resources; p < d.length; p++) !function(e) {
                        l[e.name] = e, l[e.name].root = n, e.subkeys && e.subkeys.split(",").forEach(function(r) {
                            f[r] = e.name + "#" + r, f[e.name + "." + r] = e.name + "#" + r;
                        });
                    }(d[p]);
                    return o;
                });
            },
            onRemoveStart: function() {
                return n(this, void 0, void 0, function() {
                    return i(this, function(e) {
                        return [ 2 ];
                    });
                });
            }
        };
        var l = function() {
            function e() {}
            return e.parse = function(r, t, o) {
                var n = new Uint32Array(r, 0, 13), i = {
                    buffer: r,
                    header: n
                };
                55727696 === n[0] ? e._parseV3(i, t, o) : 559044176 === n[11] ? e._parseV2(i, t, o) : o(i, "pvr parse error!");
            }, e._parseV2 = function(r, t, o) {
                var n, i = r.header, s = i[0], a = i[1], u = i[2], c = i[3], f = i[4], l = (i[5], 
                i[6]), p = (i[7], i[8], i[9], i[10]), d = (i[11], i[12]), h = 255 & f, v = p > 0;
                25 === h ? (n = v ? e.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG : e.COMPRESSED_RGB_PVRTC_4BPPV1_IMG, 
                l = 4) : 24 === h ? (n = v ? e.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG : e.COMPRESSED_RGB_PVRTC_2BPPV1_IMG, 
                l = 2) : (o(r, "pvr v2 parse error"), console.log("unknow format flags::" + h));
                var g = s;
                r.pvrtcData = new Uint8Array(r.buffer, g), r.bpp = l, r.format = n, r.width = u, 
                r.height = a, r.surfacesCount = d, r.mipmapsCount = c + 1, r.isCubemap = 6 === r.surfacesCount, 
                t(r);
            }, e._parseV3 = function(r, t, o) {
                var n, i, s = r.header, a = s[2];
                switch (a) {
                  case 0:
                    n = 2, i = e.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;
                    break;

                  case 1:
                    n = 2, i = e.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;
                    break;

                  case 2:
                    n = 4, i = e.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;
                    break;

                  case 3:
                    n = 4, i = e.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;
                    break;

                  default:
                    o(r, "pvr v3 parse error"), console.log("unknow pixel format::" + a);
                }
                var u = 52 + s[12];
                r.pvrtcData = new Uint8Array(r.buffer, u), r.bpp = n, r.format = i, r.width = s[7], 
                r.height = s[6], r.surfacesCount = s[10], r.mipmapsCount = s[11], r.isCubemap = 6 === r.surfacesCount, 
                t(r);
            }, e.COMPRESSED_RGB_PVRTC_4BPPV1_IMG = 35840, e.COMPRESSED_RGB_PVRTC_2BPPV1_IMG = 35841, 
            e.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG = 35842, e.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG = 35843, 
            e;
        }();
        t(l.prototype, "PVRParser"), void 0 !== r && r && r.web && r.web.WebGLRenderContext && (r.web.WebGLRenderContext.prototype.createTextureFromCompressedData = function(e, r, t, o, n) {
            var i = this.context;
            this.pvrtcExt || (this.pvrtcExt = i.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc"));
            var s = i.createTexture();
            i.bindTexture(i.TEXTURE_2D, s);
            for (var a = 0, u = 0; o > u; ++u) {
                var f = c(n, r, t), l = new Uint8Array(e.buffer, e.byteOffset + a, f);
                i.compressedTexImage2D(i.TEXTURE_2D, u, n, r, t, 0, l), 1 > (r >>= 1) && (r = 1), 
                1 > (t >>= 1) && (t = 1), a += f;
            }
            return i.texParameteri(i.TEXTURE_2D, i.TEXTURE_MAG_FILTER, i.LINEAR), i.texParameteri(i.TEXTURE_2D, i.TEXTURE_MIN_FILTER, i.LINEAR), 
            s;
        }), o.PVRProcessor = {
            onLoadStart: function(e, t) {
                return n(this, void 0, void 0, function() {
                    var o, n, s, a, u, c, f, p, d, h, v, g, m;
                    return i(this, function(i) {
                        switch (i.label) {
                          case 0:
                            return [ 4, e.load(t, "bin") ];

                          case 1:
                            for (o = i.sent(), n = 512, s = 512, a = 0, u = 0, (c = new r.ByteArray(o)).position = 7, 
                            f = [ "body", "ext" ], d = 0; d < f.length; d++) switch (h = void 0, f[d]) {
                              case "body":
                                c.position += 2, v = c.readUnsignedInt(), p = c.buffer.slice(c.position, c.position + v), 
                                c.position += v;
                                break;

                              case "ext":
                                c.position += 6, n = c.readUnsignedShort(), s = c.readUnsignedShort(), a = c.readUnsignedShort(), 
                                u = c.readUnsignedShort();
                            }
                            return g = this, l.parse(p, function(e) {
                                var t = new r.BitmapData(e);
                                t.format = "pvr", (m = new r.Texture())._setBitmapData(t), m.$initData(a, u, n, s, 0, 0, n, s, t.width, t.height);
                            }, function() {
                                console.log("pvr error");
                            }), [ 2, m ];
                        }
                    });
                });
            },
            onRemoveStart: function(e, r) {
                return Promise.resolve();
            }
        }, o._map = {
            image: o.ImageProcessor,
            json: o.JsonProcessor,
            text: o.TextProcessor,
            xml: o.XMLProcessor,
            sheet: o.SheetProcessor,
            font: o.FontProcessor,
            bin: o.BinaryProcessor,
            commonjs: o.CommonJSProcessor,
            sound: o.SoundProcessor,
            movieclip: o.MovieClipProcessor,
            pvr: o.PVRProcessor,
            mergeJson: o.MergeJSONProcessor,
            resourceConfig: o.ResourceConfigProcessor,
            legacyResourceConfig: o.LegacyResourceConfigProcessor
        };
    }(e.processor || (e.processor = {}));
}(a || (a = {}));

!function(e) {
    e.registerAnalyzer = function(r, t) {
        throw new e.ResourceManagerError(2002);
    }, e.loadConfig = function(r, t) {
        if (t.indexOf("://") >= 0) {
            var o = t.split("://");
            t = o[0] + "://" + e.path.normalize(o[1] + "/");
        } else t = e.path.normalize(t + "/"), r = r.replace(t, "");
        return e.setConfigURL(r, t), u || (u = new a()), u.loadConfig();
    }, e.loadGroup = function(e, r, t) {
        return void 0 === r && (r = 0), u.loadGroup(e, r, t);
    }, e.isGroupLoaded = function(e) {
        return u.isGroupLoaded(e);
    }, e.getGroupByName = function(r) {
        return u.getGroupByName(r).map(function(r) {
            return e.ResourceItem.convertToResItem(r);
        });
    }, e.createGroup = function(e, r, t) {
        return void 0 === t && (t = !1), u.createGroup(e, r, t);
    }, e.hasRes = function(e) {
        return u.hasRes(e);
    }, e.getRes = function(e) {
        return u.getRes(e);
    }, e.getResAsync = function(e, r, t) {
        return u.getResAsync.apply(u, arguments);
    }, e.getResByUrl = function(e, r, t, o) {
        void 0 === o && (o = ""), u.getResByUrl(e, r, t, o);
    }, e.destroyRes = function(e, r) {
        return u.destroyRes(e, r);
    }, e.setMaxLoadingThread = function(e) {
        u || (u = new a()), u.setMaxLoadingThread(e);
    }, e.setMaxRetryTimes = function(e) {
        u.setMaxRetryTimes(e);
    }, e.addEventListener = function(e, r, t, o, n) {
        void 0 === o && (o = !1), void 0 === n && (n = 0), u || (u = new a()), u.addEventListener(e, r, t, o, n);
    }, e.removeEventListener = function(e, r, t, o) {
        void 0 === o && (o = !1), u.removeEventListener(e, r, t, o);
    }, e.$addResourceData = function(e) {
        u.addResourceData(e);
    };
    var a = function(r) {
        function t() {
            return null !== r && r.apply(this, arguments) || this;
        }
        return o(t, r), t.prototype.loadConfig = function() {
            var r = this;
            return e.native_init(), e.config.init().then(function(t) {
                e.ResourceEvent.dispatchResourceEvent(r, e.ResourceEvent.CONFIG_COMPLETE);
            }, function(t) {
                return e.ResourceEvent.dispatchResourceEvent(r, e.ResourceEvent.CONFIG_LOAD_ERROR), 
                Promise.reject(t);
            });
        }, t.prototype.isGroupLoaded = function(r) {
            return e.config.getGroupByName(r, !0).every(function(r) {
                return null != e.host.get(r);
            });
        }, t.prototype.getGroupByName = function(r) {
            return e.config.getGroupByName(r, !0);
        }, t.prototype.loadGroup = function(r, t, o) {
            var n = this;
            void 0 === t && (t = 0);
            var i = {
                onProgress: function(t, i) {
                    o && o.onProgress && o.onProgress(t, i), e.ResourceEvent.dispatchResourceEvent(n, e.ResourceEvent.GROUP_PROGRESS, r, void 0, t, i);
                }
            };
            return this._loadGroup(r, t, i).then(function(t) {
                e.ResourceEvent.dispatchResourceEvent(n, e.ResourceEvent.GROUP_COMPLETE, r);
            }, function(t) {
                for (var o = t.itemList, i = o.length, s = 0; i > s; s++) {
                    var a = o[s];
                    delete a.promise, e.ResourceEvent.dispatchResourceEvent(n, e.ResourceEvent.ITEM_LOAD_ERROR, r, a);
                }
                return e.ResourceEvent.dispatchResourceEvent(n, e.ResourceEvent.GROUP_LOAD_ERROR, r), 
                Promise.reject(t.error);
            });
        }, t.prototype._loadGroup = function(r, t, o) {
            void 0 === t && (t = 0);
            var n = e.config.getGroupByName(r, !0);
            return e.queue.load(n, r, t, o);
        }, t.prototype.loadResources = function(r, t) {
            var o = r.map(function(r) {
                return e.config.getResourceWithSubkey(r, !0).r;
            });
            return e.queue.load(o, "name", 0, t);
        }, t.prototype.createGroup = function(r, t, o) {
            return void 0 === o && (o = !1), e.config.createGroup(r, t, o);
        }, t.prototype.hasRes = function(r) {
            return null != e.config.getResourceWithSubkey(r);
        }, t.prototype.getRes = function(r) {
            var t = e.config.getResourceWithSubkey(r);
            if (t) {
                var o = t.r, n = t.key, i = t.subkey, s = e.processor.isSupport(o);
                return s && s.getData && i ? s.getData(e.host, o, n, i) : e.host.get(o);
            }
            return null;
        }, t.prototype.getResAsync = function(r, t, o) {
            var n = r, i = e.config.getResourceWithSubkey(r, !0), s = i.r, a = i.subkey;
            return e.queue.loadResource(s).then(function(i) {
                e.host.save(s, i);
                var u = e.processor.isSupport(s);
                return u && u.getData && a && (i = u.getData(e.host, s, r, a)), t && t.call(o, i, n), 
                i;
            });
        }, t.prototype.getResByUrl = function(r, t, o, n) {
            void 0 === n && (n = "");
            var i = e.config.getResource(r);
            if (!(i || (n || (n = e.config.__temp__get__type__via__url(r)), i = {
                name: r,
                url: r,
                type: n,
                root: ""
            }, e.config.addResourceData(i), i = e.config.getResource(r)))) throw "never";
            return e.queue.loadResource(i).then(function(r) {
                return e.host.save(i, r), t && i && t.call(o, r, i.url), r;
            });
        }, t.prototype.destroyRes = function(r, t) {
            return void 0 === t && (t = !0), n(this, void 0, void 0, function() {
                var t, o, n, s, a;
                return i(this, function(i) {
                    switch (i.label) {
                      case 0:
                        if (t = e.config.getGroup(r), o = function(r) {
                            return e.queue.unloadResource(r);
                        }, !(t && t.length > 0)) return [ 3, 5 ];
                        n = 0, s = t, i.label = 1;

                      case 1:
                        return n < s.length ? (a = s[n], [ 4, o(a) ]) : [ 3, 4 ];

                      case 2:
                        i.sent(), i.label = 3;

                      case 3:
                        return n++, [ 3, 1 ];

                      case 4:
                        return [ 2, !0 ];

                      case 5:
                        return (a = e.config.getResource(r)) ? [ 4, o(a) ] : [ 3, 7 ];

                      case 6:
                        return i.sent(), [ 2, !0 ];

                      case 7:
                        return console.warn("无法删除指定组:" + r), [ 2, !1 ];
                    }
                });
            });
        }, t.prototype.setMaxLoadingThread = function(r) {
            1 > r && (r = 1), e.queue.thread = r;
        }, t.prototype.setMaxRetryTimes = function(r) {
            r = Math.max(r, 0), e.queue.maxRetryTimes = r;
        }, t.prototype.addResourceData = function(r) {
            e.config.addResourceData(r);
        }, s([ e.checkCancelation ], t.prototype, "loadConfig", null), s([ e.checkCancelation ], t.prototype, "_loadGroup", null), 
        s([ e.checkNull ], t.prototype, "hasRes", null), s([ e.checkNull ], t.prototype, "getRes", null), 
        s([ e.checkNull, e.checkCancelation ], t.prototype, "getResAsync", null), s([ e.checkNull, e.checkCancelation ], t.prototype, "getResByUrl", null), 
        t;
    }(r.EventDispatcher);
    e.Resource = a, t(a.prototype, "RES.Resource");
    var u;
}(a || (a = {}));

!function(e) {
    var n = function(t) {
        function n(e, r, o) {
            void 0 === r && (r = !1), void 0 === o && (o = !1);
            var n = t.call(this, e, r, o) || this;
            return n.itemsLoaded = 0, n.itemsTotal = 0, n.groupName = "", n;
        }
        return o(n, t), n.dispatchResourceEvent = function(t, o, i, s, a, u) {
            void 0 === i && (i = ""), void 0 === s && (s = void 0), void 0 === a && (a = 0), 
            void 0 === u && (u = 0);
            var c = r.Event.create(n, o);
            c.groupName = i, s && (c.resItem = e.ResourceItem.convertToResItem(s)), c.itemsLoaded = a, 
            c.itemsTotal = u;
            var f = t.dispatchEvent(c);
            return r.Event.release(c), f;
        }, n.ITEM_LOAD_ERROR = "itemLoadError", n.CONFIG_COMPLETE = "configComplete", n.CONFIG_LOAD_ERROR = "configLoadError", 
        n.GROUP_PROGRESS = "groupProgress", n.GROUP_COMPLETE = "groupComplete", n.GROUP_LOAD_ERROR = "groupLoadError", 
        n;
    }(r.Event);
    e.ResourceEvent = n, t(n.prototype, "RES.ResourceEvent");
}(a || (a = {}));

!function(e) {
    !function(r) {
        r.TYPE_XML = "xml", r.TYPE_IMAGE = "image", r.TYPE_BIN = "bin", r.TYPE_TEXT = "text", 
        r.TYPE_JSON = "json", r.TYPE_SHEET = "sheet", r.TYPE_FONT = "font", r.TYPE_SOUND = "sound", 
        r.convertToResItem = function(r) {
            var t = r.name;
            if (e.config.config) for (var o in e.config.config.alias) e.config.config.alias[o] == r.url && (t = o); else t = r.url;
            return {
                name: t,
                url: r.url,
                type: r.type,
                data: r,
                root: r.root
            };
        };
    }(e.ResourceItem || (e.ResourceItem = {}));
}(a || (a = {}));

!function(e) {
    !function(e) {
        e.normalize = function(e) {
            var r = e.split("/");
            return r.filter(function(e, t) {
                return !!e || t == r.length - 1;
            }).join("/");
        }, e.basename = function(e) {
            return e.substr(e.lastIndexOf("/") + 1);
        }, e.dirname = function(e) {
            return e.substr(0, e.lastIndexOf("/"));
        };
    }(e.path || (e.path = {}));
}(a || (a = {}));

!function(e) {
    function t(e) {
        if (egret_native.readUpdateFileSync && egret_native.readResourceFileSync) {
            var r = egret_native.readUpdateFileSync(e);
            if (null != r) return JSON.parse(r);
            if (null != (r = egret_native.readResourceFileSync(e))) return JSON.parse(r);
        }
        return null;
    }
    var o;
    e.native_init = function() {
        r.Capabilities.runtimeType == r.RuntimeType.NATIVE && (o = t("all.manifest"));
    }, e.getRealURL = function(e) {
        return o && o[e] ? "resource/" + o[e].v.substring(0, 2) + "/" + o[e].v + "_" + o[e].s + "." + e.substring(e.lastIndexOf(".") + 1) : e;
    };
}(a || (a = {}));

var a;

!function(e) {
    var r = function() {
        function r(e) {
            this.data = e;
        }
        return r.prototype.profile = function() {
            console.log(this.data);
        }, r.prototype.addFile = function(r, t) {
            t || (t = ""), r = e.path.normalize(r);
            var o = e.path.basename(r), n = e.path.dirname(r);
            this.exists(n) || this.mkdir(n), this.reslove(n)[o] = {
                url: r,
                type: t
            };
        }, r.prototype.getFile = function(e) {
            var r = this.reslove(e);
            return r && (r.name = e), r;
        }, r.prototype.reslove = function(r) {
            if ("" == r) return this.data;
            for (var t = (r = e.path.normalize(r)).split("/"), o = this.data, n = 0, i = t; n < i.length; n++) {
                var s = i[n];
                if (!o) return o;
                o = o[s];
            }
            return o;
        }, r.prototype.mkdir = function(r) {
            for (var t = (r = e.path.normalize(r)).split("/"), o = this.data, n = 0, i = t; n < i.length; n++) {
                var s = i[n];
                o[s] || (o[s] = {}), o = o[s];
            }
        }, r.prototype.exists = function(r) {
            if ("" == r) return !0;
            for (var t = (r = e.path.normalize(r)).split("/"), o = this.data, n = 0, i = t; n < i.length; n++) {
                var s = i[n];
                if (!o[s]) return !1;
                o = o[s];
            }
            return !0;
        }, r;
    }();
    e.NewFileSystem = r, t(r.prototype, "RES.NewFileSystem");
}(a || (a = {})), window.RES = a;