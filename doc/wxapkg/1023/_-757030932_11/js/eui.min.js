var t = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
    return typeof t;
} : function(t) {
    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
}, e = window.egret, i = function(t, e, i) {
    t.__class__ = e, i ? i.push(e) : i = [ e ], t.__types__ = t.__types__ ? i.concat(t.__types__) : i;
}, n = function(t, e) {
    function i() {
        this.constructor = t;
    }
    for (var n in e) e.hasOwnProperty(n) && (t[n] = e[n]);
    i.prototype = e.prototype, t.prototype = new i();
};

!function(t) {
    !function(t) {
        var o = function(t) {
            function i() {
                var i = t.call(this) || this;
                return i.targetLevel = Number.POSITIVE_INFINITY, i.invalidatePropertiesFlag = !1, 
                i.invalidateClientPropertiesFlag = !1, i.invalidatePropertiesQueue = new r(), i.invalidateSizeFlag = !1, 
                i.invalidateClientSizeFlag = !1, i.invalidateSizeQueue = new r(), i.invalidateDisplayListFlag = !1, 
                i.invalidateDisplayListQueue = new r(), i.eventDisplay = new e.Bitmap(), i.listenersAttached = !1, 
                i;
            }
            return n(i, t), i.prototype.invalidateProperties = function(t) {
                this.invalidatePropertiesFlag || (this.invalidatePropertiesFlag = !0, this.listenersAttached || this.attachListeners()), 
                this.targetLevel <= t.$nestLevel && (this.invalidateClientPropertiesFlag = !0), 
                this.invalidatePropertiesQueue.insert(t);
            }, i.prototype.validateProperties = function() {
                for (var t = this.invalidatePropertiesQueue, e = t.shift(); e; ) e.$stage && e.validateProperties(), 
                e = t.shift();
                t.isEmpty() && (this.invalidatePropertiesFlag = !1);
            }, i.prototype.invalidateSize = function(t) {
                this.invalidateSizeFlag || (this.invalidateSizeFlag = !0, this.listenersAttached || this.attachListeners()), 
                this.targetLevel <= t.$nestLevel && (this.invalidateClientSizeFlag = !0), this.invalidateSizeQueue.insert(t);
            }, i.prototype.validateSize = function() {
                for (var t = this.invalidateSizeQueue, e = t.pop(); e; ) e.$stage && e.validateSize(), 
                e = t.pop();
                t.isEmpty() && (this.invalidateSizeFlag = !1);
            }, i.prototype.invalidateDisplayList = function(t) {
                this.invalidateDisplayListFlag || (this.invalidateDisplayListFlag = !0, this.listenersAttached || this.attachListeners()), 
                this.invalidateDisplayListQueue.insert(t);
            }, i.prototype.validateDisplayList = function() {
                for (var t = this.invalidateDisplayListQueue, e = t.shift(); e; ) e.$stage && e.validateDisplayList(), 
                e = t.shift();
                t.isEmpty() && (this.invalidateDisplayListFlag = !1);
            }, i.prototype.attachListeners = function() {
                this.eventDisplay.addEventListener(e.Event.ENTER_FRAME, this.doPhasedInstantiationCallBack, this), 
                this.eventDisplay.addEventListener(e.Event.RENDER, this.doPhasedInstantiationCallBack, this), 
                e.sys.$invalidateRenderFlag = !0, this.listenersAttached = !0;
            }, i.prototype.doPhasedInstantiationCallBack = function(t) {
                this.eventDisplay.removeEventListener(e.Event.ENTER_FRAME, this.doPhasedInstantiationCallBack, this), 
                this.eventDisplay.removeEventListener(e.Event.RENDER, this.doPhasedInstantiationCallBack, this), 
                this.doPhasedInstantiation();
            }, i.prototype.doPhasedInstantiation = function() {
                this.invalidatePropertiesFlag && this.validateProperties(), this.invalidateSizeFlag && this.validateSize(), 
                this.invalidateDisplayListFlag && this.validateDisplayList(), this.invalidatePropertiesFlag || this.invalidateSizeFlag || this.invalidateDisplayListFlag ? this.attachListeners() : this.listenersAttached = !1;
            }, i.prototype.validateClient = function(t) {
                var e, i = !1, n = this.targetLevel;
                this.targetLevel === Number.POSITIVE_INFINITY && (this.targetLevel = t.$nestLevel);
                for (var o = this.invalidatePropertiesQueue, r = this.invalidateSizeQueue, s = this.invalidateDisplayListQueue; !i; ) {
                    for (i = !0, e = o.removeSmallestChild(t); e; ) e.$stage && e.validateProperties(), 
                    e = o.removeSmallestChild(t);
                    for (o.isEmpty() && (this.invalidatePropertiesFlag = !1), this.invalidateClientPropertiesFlag = !1, 
                    e = r.removeLargestChild(t); e; ) {
                        if (e.$stage && e.validateSize(), this.invalidateClientPropertiesFlag && (e = o.removeSmallestChild(t))) {
                            o.insert(e), i = !1;
                            break;
                        }
                        e = r.removeLargestChild(t);
                    }
                    for (r.isEmpty() && (this.invalidateSizeFlag = !1), this.invalidateClientPropertiesFlag = !1, 
                    this.invalidateClientSizeFlag = !1, e = s.removeSmallestChild(t); e; ) {
                        if (e.$stage && e.validateDisplayList(), this.invalidateClientPropertiesFlag && (e = o.removeSmallestChild(t))) {
                            o.insert(e), i = !1;
                            break;
                        }
                        if (this.invalidateClientSizeFlag && (e = r.removeLargestChild(t))) {
                            r.insert(e), i = !1;
                            break;
                        }
                        e = s.removeSmallestChild(t);
                    }
                    s.isEmpty() && (this.invalidateDisplayListFlag = !1);
                }
                n === Number.POSITIVE_INFINITY && (this.targetLevel = Number.POSITIVE_INFINITY);
            }, i;
        }(e.EventDispatcher);
        t.Validator = o, i(o.prototype, "eui.sys.Validator");
        var r = function() {
            function t() {
                this.depthBins = {}, this.minDepth = 0, this.maxDepth = -1;
            }
            return t.prototype.insert = function(t) {
                var e = t.$nestLevel;
                this.maxDepth < this.minDepth ? this.minDepth = this.maxDepth = e : (e < this.minDepth && (this.minDepth = e), 
                e > this.maxDepth && (this.maxDepth = e));
                var i = this.depthBins[e];
                i || (i = this.depthBins[e] = new s()), i.insert(t);
            }, t.prototype.pop = function() {
                var t, e = this.minDepth;
                if (e <= this.maxDepth) {
                    for (var i = this.depthBins[this.maxDepth]; !i || 0 === i.length; ) {
                        if (--this.maxDepth < e) return null;
                        i = this.depthBins[this.maxDepth];
                    }
                    for (t = i.pop(); !(i && 0 != i.length || --this.maxDepth < e); ) i = this.depthBins[this.maxDepth];
                }
                return t;
            }, t.prototype.shift = function() {
                var t, e = this.maxDepth;
                if (this.minDepth <= e) {
                    for (var i = this.depthBins[this.minDepth]; !i || 0 === i.length; ) {
                        if (++this.minDepth > e) return null;
                        i = this.depthBins[this.minDepth];
                    }
                    for (t = i.pop(); !(i && 0 != i.length || ++this.minDepth > e); ) i = this.depthBins[this.minDepth];
                }
                return t;
            }, t.prototype.removeLargestChild = function(t) {
                for (var i = t.$hashCode, n = t.$nestLevel, o = this.maxDepth, r = n; o >= r; ) {
                    var s = this.depthBins[o];
                    if (s && s.length > 0) {
                        if (o === n) {
                            if (s.map[i]) return s.remove(t), t;
                        } else {
                            if (!e.is(t, "egret.DisplayObjectContainer")) break;
                            for (var a = s.items, h = s.length, l = 0; h > l; l++) {
                                var u = a[l];
                                if (t.contains(u)) return s.remove(u), u;
                            }
                        }
                        o--;
                    } else if (o == this.maxDepth && this.maxDepth--, o--, r > o) break;
                }
                return null;
            }, t.prototype.removeSmallestChild = function(t) {
                for (var i = t.$nestLevel, n = i, o = this.maxDepth, r = t.$hashCode; o >= n; ) {
                    var s = this.depthBins[n];
                    if (s && s.length > 0) {
                        if (n === i) {
                            if (s.map[r]) return s.remove(t), t;
                        } else {
                            if (!e.is(t, "egret.DisplayObjectContainer")) break;
                            for (var a = s.items, h = s.length, l = 0; h > l; l++) {
                                var u = a[l];
                                if (t.contains(u)) return s.remove(u), u;
                            }
                        }
                        n++;
                    } else if (n == this.minDepth && this.minDepth++, ++n > o) break;
                }
                return null;
            }, t.prototype.isEmpty = function() {
                return this.minDepth > this.maxDepth;
            }, t;
        }();
        i(r.prototype, "DepthQueue");
        var s = function() {
            function t() {
                this.map = {}, this.items = [], this.length = 0;
            }
            return t.prototype.insert = function(t) {
                var e = t.$hashCode;
                this.map[e] || (this.map[e] = !0, this.length++, this.items.push(t));
            }, t.prototype.pop = function() {
                var t = this.items.pop();
                return t && (0 == --this.length ? this.map = {} : this.map[t.$hashCode] = !1), t;
            }, t.prototype.remove = function(t) {
                var e = this.items.indexOf(t);
                e >= 0 && (this.items.splice(e, 1), 0 === --this.length ? this.map = {} : this.map[t.$hashCode] = !1);
            }, t;
        }();
        i(s.prototype, "DepthBin");
    }(t.sys || (t.sys = {}));
}(r || (r = {}));

!function(t) {
    (r || (r = {})).registerProperty = function(t, e, i, n) {
        var o = t.prototype;
        o.__meta__ = o.__meta__ || {}, o.__meta__[e] = i, n && (o.__defaultProperty__ = e);
    };
}();

!function(t) {
    var o = function(e) {
        function i(t, i) {
            void 0 === i && (i = []);
            var n = e.call(this) || this;
            return n.name = t, n.overrides = i, n;
        }
        return n(i, e), i.prototype.initialize = function(e, i) {
            for (var n = this.overrides, o = n.length, r = 0; o > r; r++) {
                var s = n[r];
                if (s instanceof t.AddItems) {
                    var a = e[s.target];
                    a && a instanceof t.Image && !a.$parent && (i.addChild(a), i.removeChild(a));
                }
            }
        }, i;
    }(e.HashObject);
    t.State = o, i(o.prototype, "eui.State");
}(r || (r = {})), function(t) {
    !function(t) {
        var e = function() {
            function t() {}
            return Object.defineProperty(t.prototype, "states", {
                get: function() {
                    return this.$stateValues.states;
                },
                set: function(t) {
                    t || (t = []);
                    var e = this.$stateValues;
                    e.states = t;
                    for (var i = {}, n = t.length, o = 0; n > o; o++) {
                        var r = t[o];
                        i[r.name] = r;
                    }
                    e.statesMap = i, e.parent && this.commitCurrentState();
                },
                enumerable: !0,
                configurable: !0
            }), Object.defineProperty(t.prototype, "currentState", {
                get: function() {
                    return this.$stateValues.currentState;
                },
                set: function(t) {
                    var e = this.$stateValues;
                    e.explicitState = t, e.currentState = t, this.commitCurrentState();
                },
                enumerable: !0,
                configurable: !0
            }), t.prototype.commitCurrentState = function() {
                var t = this.$stateValues;
                if (t.parent) {
                    if (!t.statesMap[t.currentState]) {
                        if (!(t.states.length > 0)) return;
                        t.currentState = t.states[0].name;
                    }
                    if (t.oldState != t.currentState) {
                        var e = t.parent, i = t.statesMap[t.oldState];
                        if (i) for (var n = i.overrides, o = n.length, r = 0; o > r; r++) n[r].remove(this, e);
                        if (t.oldState = t.currentState, i = t.statesMap[t.currentState]) for (var n = i.overrides, s = n.length, r = 0; s > r; r++) n[r].apply(this, e);
                    }
                }
            }, t.prototype.hasState = function(t) {
                return !!this.$stateValues.statesMap[t];
            }, t.prototype.initializeStates = function(t) {
                this.$stateValues.intialized = !0;
                for (var e = this.states, i = e.length, n = 0; i > n; n++) e[n].initialize(this, t);
            }, t;
        }();
        t.StateClient = e, i(e.prototype, "eui.sys.StateClient");
        var n = function() {
            return function() {
                this.intialized = !1, this.statesMap = {}, this.states = [], this.oldState = null, 
                this.explicitState = null, this.currentState = null, this.parent = null, this.stateIsDirty = !1;
            };
        }();
        t.StateValues = n, i(n.prototype, "eui.sys.StateValues");
    }(t.sys || (t.sys = {}));
}(r || (r = {}));

!function(t) {
    t.getAssets = function(i, n) {
        var o = e.getImplementation("eui.IAssetAdapter");
        o || (o = new t.DefaultAssetAdapter()), o.getAsset(i, function(t) {
            n(t);
        }, this);
    }, t.getTheme = function(i, n) {
        var o = e.getImplementation("eui.IThemeAdapter");
        o || (o = new t.DefaultThemeAdapter()), o.getTheme(i, function(t) {
            n(t);
        }, function(t) {
            console.log(t);
        }, this);
    };
}(r || (r = {})), function(t) {
    !function(o) {
        function r(t) {
            return 1 === t.a && 0 === t.b && 0 === t.c && 1 === t.d;
        }
        function s(t, e) {
            if ("function" != typeof t[e]) return !1;
            var i = t[e].toString(), n = i.indexOf("{"), o = i.lastIndexOf("}");
            return "" == (i = i.substring(n + 1, o)).trim();
        }
        function a(t, e) {
            for (var i in e) "prototype" != i && e.hasOwnProperty(i) && (t[i] = e[i]);
            for (var n = t.prototype, o = e.prototype, r = Object.keys(o), a = r.length, h = 0; a > h; h++) {
                var l = r[h];
                if ("__meta__" != l && (!n.hasOwnProperty(l) || s(n, l))) {
                    var u = Object.getOwnPropertyDescriptor(o, l);
                    Object.defineProperty(n, l, u);
                }
            }
        }
        var h = "eui.UIComponent", l = new o.Validator(), u = function(i) {
            function s() {
                var t = i.call(this) || this;
                return t.initializeUIValues(), t;
            }
            return n(s, i), s.prototype.initializeUIValues = function() {
                this.$UIComponent = {
                    0: NaN,
                    1: NaN,
                    2: NaN,
                    3: NaN,
                    4: NaN,
                    5: NaN,
                    6: NaN,
                    7: NaN,
                    8: NaN,
                    9: NaN,
                    10: 0,
                    11: 0,
                    12: 0,
                    13: 1e5,
                    14: 0,
                    15: 1e5,
                    16: 0,
                    17: 0,
                    18: NaN,
                    19: NaN,
                    20: 0,
                    21: 0,
                    22: 0,
                    23: 0,
                    24: !0,
                    25: !0,
                    26: !0,
                    27: !1,
                    28: !1,
                    29: !1
                }, this.$includeInLayout = !0, this.$touchEnabled = !0;
            }, s.prototype.createChildren = function() {}, s.prototype.childrenCreated = function() {}, 
            s.prototype.commitProperties = function() {
                var i = this.$UIComponent;
                (i[22] != i[10] || i[23] != i[11]) && (this.dispatchEventWith(e.Event.RESIZE), i[22] = i[10], 
                i[23] = i[11]), (i[20] != this.$getX() || i[21] != this.$getY()) && (t.UIEvent.dispatchUIEvent(this, t.UIEvent.MOVE), 
                i[20] = this.$getX(), i[21] = this.$getY());
            }, s.prototype.measure = function() {}, s.prototype.updateDisplayList = function(t, e) {}, 
            Object.defineProperty(s.prototype, "includeInLayout", {
                get: function() {
                    return this.$includeInLayout;
                },
                set: function(t) {
                    t = !!t, this.$includeInLayout !== t && (this.$includeInLayout = !0, this.invalidateParentLayout(), 
                    this.$includeInLayout = t);
                },
                enumerable: !0,
                configurable: !0
            }), s.prototype.$onAddToStage = function(e, i) {
                this.$super.$onAddToStage.call(this, e, i), this.checkInvalidateFlag();
                var n = this.$UIComponent;
                n[29] || (n[29] = !0, this.createChildren(), this.childrenCreated(), t.UIEvent.dispatchUIEvent(this, t.UIEvent.CREATION_COMPLETE));
            }, s.prototype.checkInvalidateFlag = function(t) {
                var e = this.$UIComponent;
                e[24] && l.invalidateProperties(this), e[25] && l.invalidateSize(this), e[26] && l.invalidateDisplayList(this);
            }, Object.defineProperty(s.prototype, "left", {
                get: function() {
                    return this.$UIComponent[0];
                },
                set: function(t) {
                    t = t && "number" != typeof t ? t.toString().trim() : +t;
                    var e = this.$UIComponent;
                    e[0] !== t && (e[0] = t, this.invalidateParentLayout());
                },
                enumerable: !0,
                configurable: !0
            }), Object.defineProperty(s.prototype, "right", {
                get: function() {
                    return this.$UIComponent[1];
                },
                set: function(t) {
                    t = t && "number" != typeof t ? t.toString().trim() : +t;
                    var e = this.$UIComponent;
                    e[1] !== t && (e[1] = t, this.invalidateParentLayout());
                },
                enumerable: !0,
                configurable: !0
            }), Object.defineProperty(s.prototype, "top", {
                get: function() {
                    return this.$UIComponent[2];
                },
                set: function(t) {
                    t = t && "number" != typeof t ? t.toString().trim() : +t;
                    var e = this.$UIComponent;
                    e[2] !== t && (e[2] = t, this.invalidateParentLayout());
                },
                enumerable: !0,
                configurable: !0
            }), Object.defineProperty(s.prototype, "bottom", {
                get: function() {
                    return this.$UIComponent[3];
                },
                set: function(t) {
                    t = t && "number" != typeof t ? t.toString().trim() : +t;
                    var e = this.$UIComponent;
                    e[3] != t && (e[3] = t, this.invalidateParentLayout());
                },
                enumerable: !0,
                configurable: !0
            }), Object.defineProperty(s.prototype, "horizontalCenter", {
                get: function() {
                    return this.$UIComponent[4];
                },
                set: function(t) {
                    t = t && "number" != typeof t ? t.toString().trim() : +t;
                    var e = this.$UIComponent;
                    e[4] !== t && (e[4] = t, this.invalidateParentLayout());
                },
                enumerable: !0,
                configurable: !0
            }), Object.defineProperty(s.prototype, "verticalCenter", {
                get: function() {
                    return this.$UIComponent[5];
                },
                set: function(t) {
                    t = t && "number" != typeof t ? t.toString().trim() : +t;
                    var e = this.$UIComponent;
                    e[5] !== t && (e[5] = t, this.invalidateParentLayout());
                },
                enumerable: !0,
                configurable: !0
            }), Object.defineProperty(s.prototype, "percentWidth", {
                get: function() {
                    return this.$UIComponent[6];
                },
                set: function(t) {
                    t = +t;
                    var e = this.$UIComponent;
                    e[6] !== t && (e[6] = t, this.invalidateParentLayout());
                },
                enumerable: !0,
                configurable: !0
            }), Object.defineProperty(s.prototype, "percentHeight", {
                get: function() {
                    return this.$UIComponent[7];
                },
                set: function(t) {
                    t = +t;
                    var e = this.$UIComponent;
                    e[7] !== t && (e[7] = t, this.invalidateParentLayout());
                },
                enumerable: !0,
                configurable: !0
            }), Object.defineProperty(s.prototype, "explicitWidth", {
                get: function() {
                    return this.$UIComponent[8];
                },
                enumerable: !0,
                configurable: !0
            }), Object.defineProperty(s.prototype, "explicitHeight", {
                get: function() {
                    return this.$UIComponent[9];
                },
                enumerable: !0,
                configurable: !0
            }), s.prototype.$getWidth = function() {
                return this.validateSizeNow(), this.$UIComponent[10];
            }, s.prototype.$setWidth = function(t) {
                t = +t;
                var e = this.$UIComponent;
                return !(0 > t || e[10] === t && e[8] === t) && (e[8] = t, isNaN(t) && this.invalidateSize(), 
                this.invalidateProperties(), this.invalidateDisplayList(), this.invalidateParentLayout(), 
                !0);
            }, s.prototype.validateSizeNow = function() {
                this.validateSize(!0), this.updateFinalSize();
            }, s.prototype.$getHeight = function() {
                return this.validateSizeNow(), this.$UIComponent[11];
            }, s.prototype.$setHeight = function(t) {
                t = +t;
                var e = this.$UIComponent;
                return !(0 > t || e[11] === t && e[9] === t) && (e[9] = t, isNaN(t) && this.invalidateSize(), 
                this.invalidateProperties(), this.invalidateDisplayList(), this.invalidateParentLayout(), 
                !0);
            }, Object.defineProperty(s.prototype, "minWidth", {
                get: function() {
                    return this.$UIComponent[12];
                },
                set: function(t) {
                    t = +t || 0;
                    var e = this.$UIComponent;
                    0 > t || e[12] === t || (e[12] = t, this.invalidateSize(), this.invalidateParentLayout());
                },
                enumerable: !0,
                configurable: !0
            }), Object.defineProperty(s.prototype, "maxWidth", {
                get: function() {
                    return this.$UIComponent[13];
                },
                set: function(t) {
                    t = +t || 0;
                    var e = this.$UIComponent;
                    0 > t || e[13] === t || (e[13] = t, this.invalidateSize(), this.invalidateParentLayout());
                },
                enumerable: !0,
                configurable: !0
            }), Object.defineProperty(s.prototype, "minHeight", {
                get: function() {
                    return this.$UIComponent[14];
                },
                set: function(t) {
                    t = +t || 0;
                    var e = this.$UIComponent;
                    0 > t || e[14] === t || (e[14] = t, this.invalidateSize(), this.invalidateParentLayout());
                },
                enumerable: !0,
                configurable: !0
            }), Object.defineProperty(s.prototype, "maxHeight", {
                get: function() {
                    return this.$UIComponent[15];
                },
                set: function(t) {
                    t = +t || 0;
                    var e = this.$UIComponent;
                    0 > t || e[15] === t || (e[15] = t, this.invalidateSize(), this.invalidateParentLayout());
                },
                enumerable: !0,
                configurable: !0
            }), s.prototype.setMeasuredSize = function(t, e) {
                var i = this.$UIComponent;
                i[16] = Math.ceil(+t || 0), i[17] = Math.ceil(+e || 0);
            }, s.prototype.setActualSize = function(t, i) {
                var n = !1, o = this.$UIComponent;
                o[10] !== t && (o[10] = t, n = !0), o[11] !== i && (o[11] = i, n = !0), n && (this.invalidateDisplayList(), 
                this.dispatchEventWith(e.Event.RESIZE));
            }, s.prototype.$updateUseTransform = function() {
                this.$super.$updateUseTransform.call(this), this.invalidateParentLayout();
            }, s.prototype.$setMatrix = function(t, e) {
                return void 0 === e && (e = !0), this.$super.$setMatrix.call(this, t, e), this.invalidateParentLayout(), 
                !0;
            }, s.prototype.$setAnchorOffsetX = function(t) {
                return this.$super.$setAnchorOffsetX.call(this, t), this.invalidateParentLayout(), 
                !0;
            }, s.prototype.$setAnchorOffsetY = function(t) {
                return this.$super.$setAnchorOffsetY.call(this, t), this.invalidateParentLayout(), 
                !0;
            }, s.prototype.$setX = function(t) {
                var e = this.$super.$setX.call(this, t);
                return e && (this.invalidateParentLayout(), this.invalidateProperties()), e;
            }, s.prototype.$setY = function(t) {
                var e = this.$super.$setY.call(this, t);
                return e && (this.invalidateParentLayout(), this.invalidateProperties()), e;
            }, s.prototype.invalidateProperties = function() {
                var t = this.$UIComponent;
                t[24] || (t[24] = !0, this.$stage && l.invalidateProperties(this));
            }, s.prototype.validateProperties = function() {
                var t = this.$UIComponent;
                t[24] && (this.commitProperties(), t[24] = !1);
            }, s.prototype.invalidateSize = function() {
                var t = this.$UIComponent;
                t[25] || (t[25] = !0, this.$stage && l.invalidateSize(this));
            }, s.prototype.validateSize = function(t) {
                if (t) {
                    var i = this.$children;
                    if (i) for (var n = i.length, o = 0; n > o; o++) {
                        var r = i[o];
                        e.is(r, h) && r.validateSize(!0);
                    }
                }
                var s = this.$UIComponent;
                s[25] && (this.measureSizes() && (this.invalidateDisplayList(), this.invalidateParentLayout()), 
                s[25] = !1);
            }, s.prototype.measureSizes = function() {
                var t = !1, e = this.$UIComponent;
                if (!e[25]) return t;
                (isNaN(e[8]) || isNaN(e[9])) && (this.measure(), e[16] < e[12] && (e[16] = e[12]), 
                e[16] > e[13] && (e[16] = e[13]), e[17] < e[14] && (e[17] = e[14]), e[17] > e[15] && (e[17] = e[15]));
                var i = this.getPreferredUWidth(), n = this.getPreferredUHeight();
                return (i !== e[18] || n !== e[19]) && (e[18] = i, e[19] = n, t = !0), t;
            }, s.prototype.invalidateDisplayList = function() {
                var t = this.$UIComponent;
                t[26] || (t[26] = !0, this.$stage && l.invalidateDisplayList(this));
            }, s.prototype.validateDisplayList = function() {
                var t = this.$UIComponent;
                t[26] && (this.updateFinalSize(), this.updateDisplayList(t[10], t[11]), t[26] = !1);
            }, s.prototype.updateFinalSize = function() {
                var t = 0, e = 0, i = this.$UIComponent;
                t = i[27] ? i[10] : isNaN(i[8]) ? i[16] : i[8], e = i[28] ? i[11] : isNaN(i[9]) ? i[17] : i[9], 
                this.setActualSize(t, e);
            }, s.prototype.validateNow = function() {
                this.$stage && l.validateClient(this);
            }, s.prototype.invalidateParentLayout = function() {
                var t = this.$parent;
                t && this.$includeInLayout && e.is(t, h) && (t.invalidateSize(), t.invalidateDisplayList());
            }, s.prototype.setLayoutBoundsSize = function(t, i) {
                if (i = +i, t = +t, !(0 > i || 0 > t)) {
                    var n, s, a = this.$UIComponent, h = a[13], l = a[15], u = Math.min(a[12], h), p = Math.min(a[14], l);
                    isNaN(t) ? (a[27] = !1, n = this.getPreferredUWidth()) : (a[27] = !0, n = Math.max(u, Math.min(h, t))), 
                    isNaN(i) ? (a[28] = !1, s = this.getPreferredUHeight()) : (a[28] = !0, s = Math.max(p, Math.min(l, i)));
                    var c = this.getAnchorMatrix();
                    if (r(c)) return void this.setActualSize(n, s);
                    var d = o.MatrixUtil.fitBounds(t, i, c, a[8], a[9], this.getPreferredUWidth(), this.getPreferredUHeight(), u, p, h, l);
                    d || (d = e.Point.create(u, p)), this.setActualSize(d.x, d.y), e.Point.release(d);
                }
            }, s.prototype.setLayoutBoundsPosition = function(i, n) {
                if (!r(this.$getMatrix()) || 0 != this.anchorOffsetX || 0 != this.anchorOffsetY) {
                    var o = e.$TempRectangle;
                    this.getLayoutBounds(o), i += this.$getX() - o.x, n += this.$getY() - o.y;
                }
                var s = this.$super.$setX.call(this, i);
                (this.$super.$setY.call(this, n) || s) && t.UIEvent.dispatchUIEvent(this, t.UIEvent.MOVE);
            }, s.prototype.getLayoutBounds = function(t) {
                var e, i = this.$UIComponent;
                e = i[27] ? i[10] : isNaN(i[8]) ? i[16] : i[8];
                var n;
                n = i[28] ? i[11] : isNaN(i[9]) ? i[17] : i[9], this.applyMatrix(t, e, n);
            }, s.prototype.getPreferredUWidth = function() {
                var t = this.$UIComponent;
                return isNaN(t[8]) ? t[16] : t[8];
            }, s.prototype.getPreferredUHeight = function() {
                var t = this.$UIComponent;
                return isNaN(t[9]) ? t[17] : t[9];
            }, s.prototype.getPreferredBounds = function(t) {
                var e = this.getPreferredUWidth(), i = this.getPreferredUHeight();
                this.applyMatrix(t, e, i);
            }, s.prototype.applyMatrix = function(t, e, i) {
                t.setTo(0, 0, e, i);
                var n = this.getAnchorMatrix();
                r(n) ? (t.x += n.tx, t.y += n.ty) : n.$transformBounds(t);
            }, s.prototype.getAnchorMatrix = function() {
                var t = this.$getMatrix(), i = this.anchorOffsetX, n = this.anchorOffsetY;
                if (0 != i || 0 != n) {
                    var o = e.$TempMatrix;
                    return t.$preMultiplyInto(o.setTo(1, 0, 0, 1, -i, -n), o), o;
                }
                return t;
            }, s;
        }(e.DisplayObject);
        o.UIComponentImpl = u, i(u.prototype, "eui.sys.UIComponentImpl", [ "eui.UIComponent", "egret.DisplayObject" ]), 
        o.mixin = a, o.implementUIComponent = function(e, i, n) {
            a(e, u);
            var o = e.prototype;
            o.$super = i.prototype, t.registerProperty(e, "left", "Percentage"), t.registerProperty(e, "right", "Percentage"), 
            t.registerProperty(e, "top", "Percentage"), t.registerProperty(e, "bottom", "Percentage"), 
            t.registerProperty(e, "horizontalCenter", "Percentage"), t.registerProperty(e, "verticalCenter", "Percentage"), 
            n && (o.$childAdded = function(t, e) {
                this.invalidateSize(), this.invalidateDisplayList();
            }, o.$childRemoved = function(t, e) {
                this.invalidateSize(), this.invalidateDisplayList();
            });
        };
    }(t.sys || (t.sys = {}));
}(r || (r = {}));

!function(t) {
    var o = function(i) {
        function o() {
            var e = i.call(this) || this;
            return e.$layout = null, e.$stateValues = new t.sys.StateValues(), e.initializeUIValues(), 
            e.$Group = {
                0: 0,
                1: 0,
                2: 0,
                3: 0,
                4: !1,
                5: !1
            }, e.$stateValues.parent = e, e;
        }
        return n(o, i), Object.defineProperty(o.prototype, "elementsContent", {
            set: function(t) {
                if (t) for (var e = t.length, i = 0; e > i; i++) this.addChild(t[i]);
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(o.prototype, "layout", {
            get: function() {
                return this.$layout;
            },
            set: function(t) {
                this.$setLayout(t);
            },
            enumerable: !0,
            configurable: !0
        }), o.prototype.$setLayout = function(t) {
            return this.$layout != t && (this.$layout && (this.$layout.target = null), this.$layout = t, 
            t && (t.target = this), this.invalidateSize(), this.invalidateDisplayList(), !0);
        }, Object.defineProperty(o.prototype, "contentWidth", {
            get: function() {
                return this.$Group[0];
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(o.prototype, "contentHeight", {
            get: function() {
                return this.$Group[1];
            },
            enumerable: !0,
            configurable: !0
        }), o.prototype.setContentSize = function(e, i) {
            e = Math.ceil(+e || 0), i = Math.ceil(+i || 0);
            var n = this.$Group, o = n[0] !== e, r = n[1] !== i;
            (o || r) && (n[0] = e, n[1] = i, o && t.PropertyEvent.dispatchPropertyEvent(this, t.PropertyEvent.PROPERTY_CHANGE, "contentWidth"), 
            r && t.PropertyEvent.dispatchPropertyEvent(this, t.PropertyEvent.PROPERTY_CHANGE, "contentHeight"));
        }, Object.defineProperty(o.prototype, "scrollEnabled", {
            get: function() {
                return this.$Group[4];
            },
            set: function(t) {
                t = !!t;
                var e = this.$Group;
                t !== e[4] && (e[4] = t, this.updateScrollRect());
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(o.prototype, "scrollH", {
            get: function() {
                return this.$Group[2];
            },
            set: function(e) {
                e = +e || 0;
                var i = this.$Group;
                e !== i[2] && (i[2] = e, this.updateScrollRect() && this.$layout && this.$layout.scrollPositionChanged(), 
                t.PropertyEvent.dispatchPropertyEvent(this, t.PropertyEvent.PROPERTY_CHANGE, "scrollH"));
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(o.prototype, "scrollV", {
            get: function() {
                return this.$Group[3];
            },
            set: function(e) {
                e = +e || 0;
                var i = this.$Group;
                e != i[3] && (i[3] = e, this.updateScrollRect() && this.$layout && this.$layout.scrollPositionChanged(), 
                t.PropertyEvent.dispatchPropertyEvent(this, t.PropertyEvent.PROPERTY_CHANGE, "scrollV"));
            },
            enumerable: !0,
            configurable: !0
        }), o.prototype.updateScrollRect = function() {
            var t = this.$Group, i = t[4];
            if (i) {
                var n = this.$UIComponent;
                this.scrollRect = e.$TempRectangle.setTo(t[2], t[3], n[10], n[11]);
            } else this.$scrollRect && (this.scrollRect = null);
            return i;
        }, Object.defineProperty(o.prototype, "numElements", {
            get: function() {
                return this.$children.length;
            },
            enumerable: !0,
            configurable: !0
        }), o.prototype.getElementAt = function(t) {
            return this.$children[t];
        }, o.prototype.getVirtualElementAt = function(t) {
            return this.getElementAt(t);
        }, o.prototype.setVirtualElementIndicesInView = function(t, e) {}, Object.defineProperty(o.prototype, "touchThrough", {
            get: function() {
                return this.$Group[5];
            },
            set: function(t) {
                this.$Group[5] = !!t;
            },
            enumerable: !0,
            configurable: !0
        }), o.prototype.$hitTest = function(t, n) {
            var o = i.prototype.$hitTest.call(this, t, n);
            if (o || this.$Group[5]) return o;
            if (!this.$visible || !this.touchEnabled || 0 === this.scaleX || 0 === this.scaleY || 0 === this.width || 0 === this.height) return null;
            var r = this.globalToLocal(t, n, e.$TempPoint), s = this.$UIComponent, a = e.$TempRectangle.setTo(0, 0, s[10], s[11]), h = this.$scrollRect;
            return h && (a.x = h.x, a.y = h.y), a.contains(r.x, r.y) ? this : null;
        }, o.prototype.invalidateState = function() {
            var t = this.$stateValues;
            t.stateIsDirty || (t.stateIsDirty = !0, this.invalidateProperties());
        }, o.prototype.getCurrentState = function() {
            return "";
        }, o.prototype.createChildren = function() {
            this.$layout || this.$setLayout(new t.BasicLayout()), this.initializeStates(this.$stage);
        }, o.prototype.childrenCreated = function() {}, o.prototype.commitProperties = function() {
            t.sys.UIComponentImpl.prototype.commitProperties.call(this);
            var e = this.$stateValues;
            e.stateIsDirty && (e.stateIsDirty = !1, e.explicitState || (e.currentState = this.getCurrentState(), 
            this.commitCurrentState()));
        }, o.prototype.measure = function() {
            return this.$layout ? void this.$layout.measure() : void this.setMeasuredSize(0, 0);
        }, o.prototype.updateDisplayList = function(t, e) {
            this.$layout && this.$layout.updateDisplayList(t, e), this.updateScrollRect();
        }, o.prototype.invalidateParentLayout = function() {}, o.prototype.setMeasuredSize = function(t, e) {}, 
        o.prototype.invalidateProperties = function() {}, o.prototype.validateProperties = function() {}, 
        o.prototype.invalidateSize = function() {}, o.prototype.validateSize = function(t) {}, 
        o.prototype.invalidateDisplayList = function() {}, o.prototype.validateDisplayList = function() {}, 
        o.prototype.validateNow = function() {}, o.prototype.setLayoutBoundsSize = function(t, e) {}, 
        o.prototype.setLayoutBoundsPosition = function(t, e) {}, o.prototype.getLayoutBounds = function(t) {}, 
        o.prototype.getPreferredBounds = function(t) {}, o;
    }(e.DisplayObjectContainer);
    t.Group = o, i(o.prototype, "eui.Group", [ "eui.IViewport", "eui.UIComponent", "egret.DisplayObject" ]), 
    t.sys.implementUIComponent(o, e.DisplayObjectContainer, !0), t.sys.mixin(o, t.sys.StateClient), 
    t.registerProperty(o, "elementsContent", "Array", !0), t.registerProperty(o, "states", "State[]");
}(r || (r = {}));

!function(t) {
    var e = "__bindables__";
    (r || (r = {})).registerBindable = function(t, i) {
        if (t.hasOwnProperty(e)) t[e].push(i); else {
            var n = [ i ];
            t[e] && (n = t[e].concat(n)), t[e] = n;
        }
    };
}();

!function(t) {
    var r = function(i) {
        function r() {
            var t = i.call(this) || this;
            return t.initializeUIValues(), t.$Component = {
                0: null,
                1: null,
                2: "",
                3: !0,
                4: !1,
                5: !1,
                6: !0,
                7: !0,
                8: null
            }, t.$touchEnabled = !0, t;
        }
        return n(r, i), Object.defineProperty(r.prototype, "hostComponentKey", {
            get: function() {
                return this.$Component[0];
            },
            set: function(t) {
                this.$Component[0] = t;
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(r.prototype, "skinName", {
            get: function() {
                return this.$Component[1];
            },
            set: function(t) {
                var i = this.$Component;
                if (i[5] = !0, i[1] != t) {
                    if (t) i[1] = t; else {
                        var n = e.getImplementation("eui.Theme");
                        if (n) {
                            var o = n.getSkinName(this);
                            o && (i[1] = o);
                        }
                    }
                    this.$parseSkinName();
                }
            },
            enumerable: !0,
            configurable: !0
        }), r.prototype.$parseSkinName = function() {
            var t, i = this.skinName;
            if (i) if (i.prototype) t = new i(); else if ("string" == typeof i) {
                var n = void 0, r = i.trim();
                if ("<" == r.charAt(0)) n = o.parse(r); else if (!(n = e.getDefinitionByName(i)) && -1 != r.toLowerCase().indexOf(".exml")) return void o.load(i, this.onExmlLoaded, this, !0);
                n && (t = new n());
            } else t = i;
            this.setSkin(t);
        }, r.prototype.onExmlLoaded = function(t, e) {
            if (this.skinName == e) {
                var i = new t();
                this.setSkin(i);
            }
        }, Object.defineProperty(r.prototype, "skin", {
            get: function() {
                return this.$Component[8];
            },
            enumerable: !0,
            configurable: !0
        }), r.prototype.setSkin = function(i) {
            !i || i instanceof t.Skin || (i = null);
            var n = this.$Component, o = n[8];
            if (o) {
                for (var r = (h = o.skinParts).length, s = 0; r > s; s++) this[u = h[s]] && this.setSkinPart(u, null);
                if (c = o.$elementsContent) {
                    r = c.length;
                    for (s = 0; r > s; s++) {
                        var a = c[s];
                        a.$parent == this && this.removeChild(a);
                    }
                }
                o.hostComponent = null;
            }
            if (n[8] = i, i) {
                for (var h = i.skinParts, l = h.length, s = 0; l > s; s++) {
                    var u = h[s], p = i[u];
                    p && this.setSkinPart(u, p);
                }
                var c = i.$elementsContent;
                if (c) for (s = c.length - 1; s >= 0; s--) this.addChildAt(c[s], 0);
                i.hostComponent = this;
            }
            this.invalidateSize(), this.invalidateDisplayList(), this.dispatchEventWith(e.Event.COMPLETE);
        }, r.prototype.setSkinPart = function(t, e) {
            var i = this[t];
            i && this.partRemoved(t, i), this[t] = e, e && this.partAdded(t, e);
        }, r.prototype.partAdded = function(t, e) {}, r.prototype.partRemoved = function(t, e) {}, 
        r.prototype.$setTouchChildren = function(t) {
            t = !!t;
            var e = this.$Component;
            return e[6] = t, !e[3] || (e[6] = t, i.prototype.$setTouchChildren.call(this, t));
        }, r.prototype.$setTouchEnabled = function(t) {
            t = !!t;
            var e = this.$Component;
            e[7] = t, e[3] && i.prototype.$setTouchEnabled.call(this, t);
        }, Object.defineProperty(r.prototype, "enabled", {
            get: function() {
                return this.$Component[3];
            },
            set: function(t) {
                t = !!t, this.$setEnabled(t);
            },
            enumerable: !0,
            configurable: !0
        }), r.prototype.$setEnabled = function(t) {
            var e = this.$Component;
            return t !== e[3] && (e[3] = t, t ? (this.$touchEnabled = e[7], this.$touchChildren = e[6]) : (this.$touchEnabled = !1, 
            this.$touchChildren = !1), this.invalidateState(), !0);
        }, Object.defineProperty(r.prototype, "currentState", {
            get: function() {
                var t = this.$Component;
                return t[2] ? t[2] : this.getCurrentState();
            },
            set: function(t) {
                var e = this.$Component;
                t != e[2] && (e[2] = t, this.invalidateState());
            },
            enumerable: !0,
            configurable: !0
        }), r.prototype.invalidateState = function() {
            var t = this.$Component;
            t[4] || (t[4] = !0, this.invalidateProperties());
        }, r.prototype.getCurrentState = function() {
            return "";
        }, r.prototype.createChildren = function() {
            var t = this.$Component;
            if (!t[1]) {
                var i = e.getImplementation("eui.Theme");
                if (i) {
                    var n = i.getSkinName(this);
                    n && (t[1] = n, this.$parseSkinName());
                }
            }
        }, r.prototype.childrenCreated = function() {}, r.prototype.commitProperties = function() {
            t.sys.UIComponentImpl.prototype.commitProperties.call(this);
            var e = this.$Component;
            e[4] && (e[4] = !1, e[8] && (e[8].currentState = this.currentState));
        }, r.prototype.measure = function() {
            t.sys.measure(this);
            var e = this.$Component[8];
            if (e) {
                var i = this.$UIComponent;
                isNaN(e.width) ? (i[16] < e.minWidth && (i[16] = e.minWidth), i[16] > e.maxWidth && (i[16] = e.maxWidth)) : i[16] = e.width, 
                isNaN(e.height) ? (i[17] < e.minHeight && (i[17] = e.minHeight), i[17] > e.maxHeight && (i[17] = e.maxHeight)) : i[17] = e.height;
            }
        }, r.prototype.updateDisplayList = function(e, i) {
            t.sys.updateDisplayList(this, e, i);
        }, r.prototype.invalidateParentLayout = function() {}, r.prototype.setMeasuredSize = function(t, e) {}, 
        r.prototype.invalidateProperties = function() {}, r.prototype.validateProperties = function() {}, 
        r.prototype.invalidateSize = function() {}, r.prototype.validateSize = function(t) {}, 
        r.prototype.invalidateDisplayList = function() {}, r.prototype.validateDisplayList = function() {}, 
        r.prototype.validateNow = function() {}, r.prototype.setLayoutBoundsSize = function(t, e) {}, 
        r.prototype.setLayoutBoundsPosition = function(t, e) {}, r.prototype.getLayoutBounds = function(t) {}, 
        r.prototype.getPreferredBounds = function(t) {}, r;
    }(e.DisplayObjectContainer);
    t.Component = r, i(r.prototype, "eui.Component", [ "eui.UIComponent", "egret.DisplayObject" ]), 
    t.registerProperty(r, "skinName", "Class"), t.sys.implementUIComponent(r, e.DisplayObjectContainer, !0);
}(r || (r = {}));

!function(t) {
    var o = function(i) {
        function o() {
            var t = i.call(this) || this;
            return t.$dataProviderChanged = !1, t.$dataProvider = null, t.$indexToRenderer = [], 
            t.$DataGroup = {
                0: !0,
                1: !1,
                2: {},
                3: {},
                4: !1,
                5: !1,
                6: null,
                7: null,
                8: !1,
                9: null,
                10: !1,
                11: !1,
                12: null,
                13: null,
                14: !1
            }, t;
        }
        return n(o, i), Object.defineProperty(o.prototype, "useVirtualLayout", {
            get: function() {
                return this.$layout ? this.$layout.$useVirtualLayout : this.$DataGroup[0];
            },
            set: function(t) {
                t = !!t;
                var e = this.$DataGroup;
                t !== e[0] && (e[0] = t, this.$layout && (this.$layout.useVirtualLayout = t));
            },
            enumerable: !0,
            configurable: !0
        }), o.prototype.$setLayout = function(t) {
            if (t == this.$layout) return !1;
            this.$layout && (this.$layout.setTypicalSize(0, 0), this.$layout.removeEventListener("useVirtualLayoutChanged", this.onUseVirtualLayoutChanged, this)), 
            this.$layout && t && this.$layout.$useVirtualLayout != t.$useVirtualLayout && this.onUseVirtualLayoutChanged();
            var e = i.prototype.$setLayout.call(this, t);
            if (t) {
                var n = this.$DataGroup[9];
                n && t.setTypicalSize(n.width, n.height), t.useVirtualLayout = this.$DataGroup[0], 
                t.addEventListener("useVirtualLayoutChanged", this.onUseVirtualLayoutChanged, this);
            }
            return e;
        }, o.prototype.onUseVirtualLayoutChanged = function(t) {
            var e = this.$DataGroup;
            e[1] = !0, e[10] = !0, this.removeDataProviderListener(), this.invalidateProperties();
        }, o.prototype.setVirtualElementIndicesInView = function(t, e) {
            if (this.$layout && this.$layout.$useVirtualLayout) for (var i = this.$indexToRenderer, n = Object.keys(i), o = n.length, r = 0; o > r; r++) {
                var s = +n[r];
                (t > s || s > e) && this.freeRendererByIndex(s);
            }
        }, o.prototype.getElementAt = function(t) {
            return this.$indexToRenderer[t];
        }, o.prototype.getVirtualElementAt = function(t) {
            if (0 > (t = 0 | +t) || t >= this.$dataProvider.length) return null;
            var e = this.$indexToRenderer[t];
            if (!e) {
                var i = this.$dataProvider.getItemAt(t);
                e = this.createVirtualRenderer(i), this.$indexToRenderer[t] = e, this.updateRenderer(e, t, i);
                var n = this.$DataGroup;
                n[4] && (e.validateNow(), n[4] = !1, this.rendererAdded(e, t, i));
            }
            return e;
        }, o.prototype.freeRendererByIndex = function(t) {
            var e = this.$indexToRenderer[t];
            e && (delete this.$indexToRenderer[t], this.doFreeRenderer(e));
        }, o.prototype.doFreeRenderer = function(t) {
            var e = this.$DataGroup, i = e[2][t.$hashCode].$hashCode;
            e[3][i] || (e[3][i] = []), e[3][i].push(t), t.visible = !1;
        }, o.prototype.invalidateSize = function() {
            this.$DataGroup[4] || i.prototype.invalidateSize.call(this);
        }, o.prototype.createVirtualRenderer = function(t) {
            var e, i = this.itemToRendererClass(t), n = i.$hashCode, o = this.$DataGroup, r = o[3];
            return r[n] && r[n].length > 0 ? (e = r[n].pop(), e.visible = !0, this.invalidateDisplayList(), 
            e) : (o[4] = !0, this.createOneRenderer(i));
        }, o.prototype.createOneRenderer = function(t) {
            var i = new t(), n = this.$DataGroup;
            return n[2][i.$hashCode] = t, e.is(i, "eui.IItemRenderer") ? (n[13] && this.setItemRenderSkinName(i, n[13]), 
            this.addChild(i), i) : null;
        }, o.prototype.setItemRenderSkinName = function(e, i) {
            if (e && e instanceof t.Component) {
                var n = e;
                n.$Component[5] || (n.skinName = i, n.$Component[5] = !1);
            }
        }, Object.defineProperty(o.prototype, "dataProvider", {
            get: function() {
                return this.$dataProvider;
            },
            set: function(t) {
                this.$setDataProvider(t);
            },
            enumerable: !0,
            configurable: !0
        }), o.prototype.$setDataProvider = function(t) {
            return !(this.$dataProvider == t || t && !t.getItemAt) && (this.removeDataProviderListener(), 
            this.$dataProvider = t, this.$dataProviderChanged = !0, this.$DataGroup[10] = !0, 
            this.invalidateProperties(), this.invalidateSize(), this.invalidateDisplayList(), 
            !0);
        }, o.prototype.removeDataProviderListener = function() {
            this.$dataProvider && this.$dataProvider.removeEventListener(t.CollectionEvent.COLLECTION_CHANGE, this.onCollectionChange, this);
        }, o.prototype.onCollectionChange = function(e) {
            switch (e.kind) {
              case t.CollectionEventKind.ADD:
                this.itemAddedHandler(e.items, e.location);
                break;

              case t.CollectionEventKind.REMOVE:
                this.itemRemovedHandler(e.items, e.location);
                break;

              case t.CollectionEventKind.UPDATE:
              case t.CollectionEventKind.REPLACE:
                this.itemUpdatedHandler(e.items[0], e.location);
                break;

              case t.CollectionEventKind.RESET:
              case t.CollectionEventKind.REFRESH:
                if (this.$layout && this.$layout.$useVirtualLayout) for (var i = this.$indexToRenderer, n = Object.keys(i), o = n.length, r = o - 1; r >= 0; r--) {
                    var s = +n[r];
                    this.freeRendererByIndex(s);
                }
                this.$dataProviderChanged = !0, this.invalidateProperties();
            }
            this.invalidateSize(), this.invalidateDisplayList();
        }, o.prototype.itemAddedHandler = function(t, e) {
            for (var i = t.length, n = 0; i > n; n++) this.itemAdded(t[n], e + n);
            this.resetRenderersIndices();
        }, o.prototype.itemRemovedHandler = function(t, e) {
            for (var i = t.length - 1; i >= 0; i--) this.itemRemoved(t[i], e + i);
            this.resetRenderersIndices();
        }, o.prototype.itemAdded = function(t, e) {
            if (this.$layout && this.$layout.elementAdded(e), this.$layout && this.$layout.$useVirtualLayout) this.$indexToRenderer.splice(e, 0, null); else {
                var i = this.createVirtualRenderer(t);
                if (this.$indexToRenderer.splice(e, 0, i), i) {
                    this.updateRenderer(i, e, t);
                    var n = this.$DataGroup;
                    n[4] && (n[4] = !1, this.rendererAdded(i, e, t));
                }
            }
        }, o.prototype.itemRemoved = function(t, e) {
            this.$layout && this.$layout.elementRemoved(e);
            var i = this.$indexToRenderer[e];
            this.$indexToRenderer.length > e && this.$indexToRenderer.splice(e, 1), i && (this.$layout && this.$layout.$useVirtualLayout ? this.doFreeRenderer(i) : (this.rendererRemoved(i, e, t), 
            this.removeChild(i)));
        }, o.prototype.resetRenderersIndices = function() {
            var t = this.$indexToRenderer;
            if (0 != t.length) if (this.$layout && this.$layout.$useVirtualLayout) for (var e = Object.keys(t), i = e.length, n = 0; i > n; n++) {
                r = +e[n];
                this.resetRendererItemIndex(r);
            } else for (var o = t.length, r = 0; o > r; r++) this.resetRendererItemIndex(r);
        }, o.prototype.itemUpdatedHandler = function(t, e) {
            if (!this.$DataGroup[11]) {
                var i = this.$indexToRenderer[e];
                i && this.updateRenderer(i, e, t);
            }
        }, o.prototype.resetRendererItemIndex = function(t) {
            var e = this.$indexToRenderer[t];
            e && (e.itemIndex = t);
        }, Object.defineProperty(o.prototype, "itemRenderer", {
            get: function() {
                return this.$DataGroup[6];
            },
            set: function(t) {
                var e = this.$DataGroup;
                e[6] != t && (e[6] = t, e[5] = !0, e[8] = !0, e[10] = !0, this.removeDataProviderListener(), 
                this.invalidateProperties());
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(o.prototype, "itemRendererSkinName", {
            get: function() {
                return this.$DataGroup[13];
            },
            set: function(t) {
                var e = this.$DataGroup;
                e[13] != t && (e[13] = t, this.$UIComponent[29] && (e[14] = !0, this.invalidateProperties()));
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(o.prototype, "itemRendererFunction", {
            get: function() {
                return this.$DataGroup[7];
            },
            set: function(t) {
                var e = this.$DataGroup;
                e[7] != t && (e[7] = t, e[5] = !0, e[8] = !0, this.removeDataProviderListener(), 
                this.invalidateProperties());
            },
            enumerable: !0,
            configurable: !0
        }), o.prototype.itemToRendererClass = function(i) {
            var n, o = this.$DataGroup;
            return o[7] && (n = o[7](i)), n || (n = o[6]), n || (n = t.ItemRenderer), n.$hashCode || (n.$hashCode = e.$hashCount++), 
            n;
        }, o.prototype.createChildren = function() {
            if (!this.$layout) {
                var e = new t.VerticalLayout();
                e.gap = 0, e.horizontalAlign = t.JustifyAlign.CONTENT_JUSTIFY, this.$setLayout(e);
            }
            i.prototype.createChildren.call(this);
        }, o.prototype.commitProperties = function() {
            var e = this.$DataGroup;
            if ((e[5] || this.$dataProviderChanged || e[1]) && (this.removeAllRenderers(), this.$layout && this.$layout.clearVirtualLayoutCache(), 
            this.setTypicalLayoutRect(null), e[1] = !1, e[5] = !1, this.$dataProvider && this.$dataProvider.addEventListener(t.CollectionEvent.COLLECTION_CHANGE, this.onCollectionChange, this), 
            this.$layout && this.$layout.$useVirtualLayout ? (this.invalidateSize(), this.invalidateDisplayList()) : this.createRenderers(), 
            this.$dataProviderChanged && (this.$dataProviderChanged = !1, this.scrollV = this.scrollH = 0)), 
            i.prototype.commitProperties.call(this), e[8] && (e[8] = !1, this.$dataProvider && this.$dataProvider.length > 0 && (e[12] = this.$dataProvider.getItemAt(0), 
            this.measureRendererSize())), e[14]) {
                e[14] = !1;
                for (var n = e[13], o = this.$indexToRenderer, r = Object.keys(o), s = r.length, a = 0; s > a; a++) {
                    var h = r[a];
                    this.setItemRenderSkinName(o[h], n);
                }
                var l = e[3];
                s = (r = Object.keys(l)).length;
                for (a = 0; s > a; a++) for (var u = l[r[a]], p = u.length, c = 0; p > c; c++) this.setItemRenderSkinName(u[c], n);
            }
        }, o.prototype.measure = function() {
            this.$layout && this.$layout.$useVirtualLayout && this.ensureTypicalLayoutElement(), 
            i.prototype.measure.call(this);
        }, o.prototype.updateDisplayList = function(t, n) {
            var o = this.$layout && this.$layout.$useVirtualLayout;
            o && this.ensureTypicalLayoutElement(), i.prototype.updateDisplayList.call(this, t, n);
            var r = this.$DataGroup;
            if (o) {
                var s = r[9];
                if (s) {
                    var a = this.$indexToRenderer[0];
                    if (a) {
                        var h = e.$TempRectangle;
                        a.getPreferredBounds(h), (h.width != s.width || h.height != s.height) && (r[9] = null);
                    }
                }
            }
        }, o.prototype.ensureTypicalLayoutElement = function() {
            this.$DataGroup[9] || this.$dataProvider && this.$dataProvider.length > 0 && (this.$DataGroup[12] = this.$dataProvider.getItemAt(0), 
            this.measureRendererSize());
        }, o.prototype.measureRendererSize = function() {
            var t = this.$DataGroup;
            if (void 0 != t[12]) {
                var i = this.createVirtualRenderer(t[12]);
                if (i) {
                    this.updateRenderer(i, 0, t[12]), i.validateNow();
                    var n = e.$TempRectangle;
                    i.getPreferredBounds(n);
                    var o = new e.Rectangle(0, 0, n.width, n.height);
                    this.$layout && this.$layout.$useVirtualLayout ? (t[4] && this.rendererAdded(i, 0, t[12]), 
                    this.doFreeRenderer(i)) : this.removeChild(i), this.setTypicalLayoutRect(o), t[4] = !1;
                } else this.setTypicalLayoutRect(null);
            } else this.setTypicalLayoutRect(null);
        }, o.prototype.setTypicalLayoutRect = function(t) {
            this.$DataGroup[9] = t, this.$layout && (t ? this.$layout.setTypicalSize(t.width, t.height) : this.$layout.setTypicalSize(0, 0));
        }, o.prototype.removeAllRenderers = function() {
            for (var t = this.$indexToRenderer, e = Object.keys(t), i = e.length, n = 0; i > n; n++) (p = t[e[n]]) && (this.rendererRemoved(p, p.itemIndex, p.data), 
            this.removeChild(p));
            this.$indexToRenderer = [];
            var o = this.$DataGroup;
            if (o[10]) {
                for (var r = o[3], s = Object.keys(r), a = s.length, n = 0; a > n; n++) for (var h = r[s[n]], l = h.length, u = 0; l > u; u++) {
                    var p = h[u];
                    this.rendererRemoved(p, p.itemIndex, p.data), this.removeChild(p);
                }
                o[3] = {}, o[2] = {}, o[10] = !1;
            }
        }, o.prototype.createRenderers = function() {
            if (this.$dataProvider) for (var t = 0, e = this.$dataProvider.length, i = 0; e > i; i++) {
                var n = this.$dataProvider.getItemAt(i), o = this.itemToRendererClass(n), r = this.createOneRenderer(o);
                r && (this.$indexToRenderer[t] = r, this.updateRenderer(r, t, n), this.rendererAdded(r, t, n), 
                t++);
            }
        }, o.prototype.updateRenderer = function(t, e, i) {
            var n = this.$DataGroup;
            return n[11] = !0, t.itemIndex = e, t.parent == this && this.setChildIndex(t, e), 
            t.data = i, n[11] = !1, t;
        }, Object.defineProperty(o.prototype, "numElements", {
            get: function() {
                return this.$dataProvider ? this.$dataProvider.length : 0;
            },
            enumerable: !0,
            configurable: !0
        }), o.prototype.rendererAdded = function(t, e, i) {}, o.prototype.rendererRemoved = function(t, e, i) {}, 
        o;
    }(t.Group);
    t.DataGroup = o, i(o.prototype, "eui.DataGroup"), t.registerProperty(o, "itemRenderer", "Class"), 
    t.registerProperty(o, "itemRendererSkinName", "Class"), t.registerProperty(o, "dataProvider", "eui.ICollection", !0);
}(r || (r = {}));

!function(t) {
    var o = function(t) {
        function i() {
            var i = t.call(this) || this;
            return i.labelDisplay = null, i._label = "", i.iconDisplay = null, i._icon = null, 
            i.touchCaptured = !1, i.touchChildren = !1, i.addEventListener(e.TouchEvent.TOUCH_BEGIN, i.onTouchBegin, i), 
            i;
        }
        return n(i, t), Object.defineProperty(i.prototype, "label", {
            get: function() {
                return this._label;
            },
            set: function(t) {
                this._label = t, this.labelDisplay && (this.labelDisplay.text = t);
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(i.prototype, "icon", {
            get: function() {
                return this._icon;
            },
            set: function(t) {
                this._icon = t, this.iconDisplay && (this.iconDisplay.source = t);
            },
            enumerable: !0,
            configurable: !0
        }), i.prototype.onTouchCancle = function(t) {
            var i = t.$currentTarget;
            i.removeEventListener(e.TouchEvent.TOUCH_CANCEL, this.onTouchCancle, this), i.removeEventListener(e.TouchEvent.TOUCH_END, this.onStageTouchEnd, this), 
            this.touchCaptured = !1, this.invalidateState();
        }, i.prototype.onTouchBegin = function(t) {
            this.$stage.addEventListener(e.TouchEvent.TOUCH_CANCEL, this.onTouchCancle, this), 
            this.$stage.addEventListener(e.TouchEvent.TOUCH_END, this.onStageTouchEnd, this), 
            this.touchCaptured = !0, this.invalidateState(), t.updateAfterEvent();
        }, i.prototype.onStageTouchEnd = function(t) {
            var i = t.$currentTarget;
            i.removeEventListener(e.TouchEvent.TOUCH_CANCEL, this.onTouchCancle, this), i.removeEventListener(e.TouchEvent.TOUCH_END, this.onStageTouchEnd, this), 
            this.contains(t.target) && this.buttonReleased(), this.touchCaptured = !1, this.invalidateState();
        }, i.prototype.getCurrentState = function() {
            return this.enabled ? this.touchCaptured ? "down" : "up" : "disabled";
        }, i.prototype.partAdded = function(t, e) {
            e === this.labelDisplay ? this.labelDisplay.text = this._label : e == this.iconDisplay && (this.iconDisplay.source = this._icon);
        }, i.prototype.buttonReleased = function() {}, i;
    }(t.Component);
    t.Button = o, i(o.prototype, "eui.Button");
}(r || (r = {}));

!function(t) {
    var e = function(e) {
        function i() {
            var t = e.call(this) || this;
            return t.$Range = {
                0: 100,
                1: !1,
                2: 0,
                3: !1,
                4: 0,
                5: 0,
                6: !1,
                7: 1,
                8: !1,
                9: !1
            }, t;
        }
        return n(i, e), Object.defineProperty(i.prototype, "maximum", {
            get: function() {
                return this.$Range[0];
            },
            set: function(t) {
                t = +t || 0;
                var e = this.$Range;
                t !== e[0] && (e[0] = t, e[1] = !0, this.invalidateProperties(), this.invalidateDisplayList());
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(i.prototype, "minimum", {
            get: function() {
                return this.$Range[2];
            },
            set: function(t) {
                t = +t || 0;
                var e = this.$Range;
                t !== e[2] && (e[2] = t, e[3] = !0, this.invalidateProperties(), this.invalidateDisplayList());
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(i.prototype, "value", {
            get: function() {
                var t = this.$Range;
                return t[6] ? t[5] : t[4];
            },
            set: function(t) {
                t = +t || 0, this.$setValue(t);
            },
            enumerable: !0,
            configurable: !0
        }), i.prototype.$setValue = function(t) {
            if (t === this.value) return !1;
            var e = this.$Range;
            return e[5] = t, e[6] = !0, this.invalidateProperties(), !0;
        }, Object.defineProperty(i.prototype, "snapInterval", {
            get: function() {
                return this.$Range[7];
            },
            set: function(t) {
                var e = this.$Range;
                e[9] = !0, (t = +t || 0) !== e[7] && (isNaN(t) ? (e[7] = 1, e[9] = !1) : e[7] = t, 
                e[8] = !0, this.invalidateProperties());
            },
            enumerable: !0,
            configurable: !0
        }), i.prototype.commitProperties = function() {
            e.prototype.commitProperties.call(this);
            var t = this.$Range;
            if (t[2] > t[0] && (t[1] ? t[0] = t[2] : t[2] = t[0]), t[6] || t[1] || t[3] || t[8]) {
                var i = t[6] ? t[5] : t[4];
                t[6] = !1, t[1] = !1, t[3] = !1, t[8] = !1, this.setValue(this.nearestValidValue(i, t[7]));
            }
        }, i.prototype.nearestValidSize = function(t) {
            var e = this.snapInterval;
            if (0 == e) return t;
            var i = Math.round(t / e) * e;
            return Math.abs(i) < e ? e : i;
        }, i.prototype.nearestValidValue = function(t, e) {
            var i = this.$Range;
            if (0 == e) return Math.max(i[2], Math.min(i[0], t));
            var n = i[0] - i[2], o = 1;
            if (t -= i[2], e != Math.round(e)) {
                var r = (1 + e).toString().split(".");
                n *= o = Math.pow(10, r[1].length), t = Math.round(t * o), e = Math.round(e * o);
            }
            var s = Math.max(0, Math.floor(t / e) * e), a = Math.min(n, Math.floor((t + e) / e) * e);
            return (t - s >= (a - s) / 2 ? a : s) / o + i[2];
        }, i.prototype.setValue = function(e) {
            var i = this.$Range;
            i[4] !== e && (i[0] > i[2] ? i[4] = Math.min(i[0], Math.max(i[2], e)) : i[4] = e, 
            i[6] = !1, this.invalidateDisplayList(), t.PropertyEvent.dispatchPropertyEvent(this, t.PropertyEvent.PROPERTY_CHANGE, "value"));
        }, i.prototype.updateDisplayList = function(t, i) {
            e.prototype.updateDisplayList.call(this, t, i), this.updateSkinDisplayList();
        }, i.prototype.updateSkinDisplayList = function() {}, i;
    }(t.Component);
    t.Range = e, i(e.prototype, "eui.Range"), t.registerBindable(e.prototype, "value");
}(r || (r = {}));

!function(t) {
    var o = function(t) {
        function e() {
            var e = t.call(this) || this;
            return e.$target = null, e.$useVirtualLayout = !1, e.$typicalWidth = 71, e.$typicalHeight = 22, 
            e;
        }
        return n(e, t), Object.defineProperty(e.prototype, "target", {
            get: function() {
                return this.$target;
            },
            set: function(t) {
                this.$target !== t && (this.$target = t, this.clearVirtualLayoutCache());
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(e.prototype, "useVirtualLayout", {
            get: function() {
                return this.$useVirtualLayout;
            },
            set: function(t) {
                t = !!t, this.$useVirtualLayout != t && (this.$useVirtualLayout = t, this.dispatchEventWith("useVirtualLayoutChanged"), 
                this.$useVirtualLayout && !t && this.clearVirtualLayoutCache(), this.target && this.target.invalidateDisplayList());
            },
            enumerable: !0,
            configurable: !0
        }), e.prototype.setTypicalSize = function(t, e) {
            t = +t || 71, e = +e || 22, (t !== this.$typicalWidth || e !== this.$typicalHeight) && (this.$typicalWidth = t, 
            this.$typicalHeight = e, this.$target && this.$target.invalidateSize());
        }, e.prototype.scrollPositionChanged = function() {}, e.prototype.clearVirtualLayoutCache = function() {}, 
        e.prototype.elementAdded = function(t) {}, e.prototype.elementRemoved = function(t) {}, 
        e.prototype.getElementIndicesInView = function() {
            return null;
        }, e.prototype.measure = function() {}, e.prototype.updateDisplayList = function(t, e) {}, 
        e;
    }(e.EventDispatcher);
    t.LayoutBase = o, i(o.prototype, "eui.LayoutBase");
}(r || (r = {}));

!function(t) {
    var o = function(i) {
        function o() {
            var t = i.call(this) || this;
            return t.$ListBase = {
                0: !1,
                1: !1,
                2: -2,
                3: -1,
                4: !1,
                5: void 0,
                6: !1,
                7: null,
                8: !1
            }, t;
        }
        return n(o, i), Object.defineProperty(o.prototype, "requireSelection", {
            get: function() {
                return this.$ListBase[0];
            },
            set: function(t) {
                t = !!t;
                var e = this.$ListBase;
                t !== e[0] && (e[0] = t, t && (e[1] = !0, this.invalidateProperties()));
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(o.prototype, "selectedIndex", {
            get: function() {
                return this.$getSelectedIndex();
            },
            set: function(t) {
                t = 0 | +t, this.setSelectedIndex(t, !1);
            },
            enumerable: !0,
            configurable: !0
        }), o.prototype.$getSelectedIndex = function() {
            var t = this.$ListBase;
            return t[2] != o.NO_PROPOSED_SELECTION ? t[2] : t[3];
        }, o.prototype.setSelectedIndex = function(t, e) {
            if (t != this.selectedIndex) {
                var i = this.$ListBase;
                e && (i[4] = i[4] || e), i[2] = t, this.invalidateProperties();
            }
        }, Object.defineProperty(o.prototype, "selectedItem", {
            get: function() {
                var t = this.$ListBase;
                if (void 0 !== t[5]) return t[5];
                var e = this.$getSelectedIndex();
                return e != o.NO_SELECTION && null != this.$dataProvider && this.$dataProvider.length > e ? this.$dataProvider.getItemAt(e) : void 0;
            },
            set: function(t) {
                this.setSelectedItem(t, !1);
            },
            enumerable: !0,
            configurable: !0
        }), o.prototype.setSelectedItem = function(t, e) {
            if (void 0 === e && (e = !1), this.selectedItem !== t) {
                var i = this.$ListBase;
                e && (i[4] = i[4] || e), i[5] = t, this.invalidateProperties();
            }
        }, o.prototype.commitProperties = function() {
            var e = this.$dataProviderChanged;
            i.prototype.commitProperties.call(this);
            var n = this.$ListBase, r = this.$getSelectedIndex(), s = this.$dataProvider;
            e && (r >= 0 && s && r < s.length ? this.itemSelected(r, !0) : this.requireSelection ? n[2] = 0 : this.setSelectedIndex(-1, !1)), 
            n[1] && (n[1] = !1, n[0] && r == o.NO_SELECTION && s && s.length > 0 && (n[2] = 0)), 
            void 0 !== n[5] && (n[2] = s ? s.getItemIndex(n[5]) : o.NO_SELECTION, n[5] = void 0);
            var a = !1;
            n[2] != o.NO_PROPOSED_SELECTION && (a = this.commitSelection()), n[6] && (n[6] = !1, 
            a || t.PropertyEvent.dispatchPropertyEvent(this, t.PropertyEvent.PROPERTY_CHANGE, "selectedIndex"));
        }, o.prototype.updateRenderer = function(t, e, n) {
            return this.itemSelected(e, this.$isItemIndexSelected(e)), i.prototype.updateRenderer.call(this, t, e, n);
        }, o.prototype.itemSelected = function(t, e) {
            var i = this.$indexToRenderer[t];
            i && (i.selected = e);
        }, o.prototype.$isItemIndexSelected = function(t) {
            return t == this.selectedIndex;
        }, o.prototype.commitSelection = function(i) {
            void 0 === i && (i = !0);
            var n = this.$dataProvider, r = this.$ListBase, s = n ? n.length - 1 : -1, a = r[3], h = r[2];
            return h < o.NO_SELECTION && (h = o.NO_SELECTION), h > s && (h = s), r[0] && h == o.NO_SELECTION && n && n.length > 0 ? (r[2] = o.NO_PROPOSED_SELECTION, 
            r[4] = !1, !1) : r[4] && !this.dispatchEventWith(e.Event.CHANGING, !1, !0, !0) ? (this.itemSelected(r[2], !1), 
            r[2] = o.NO_PROPOSED_SELECTION, r[4] = !1, !1) : (r[3] = h, r[2] = o.NO_PROPOSED_SELECTION, 
            a != o.NO_SELECTION && this.itemSelected(a, !1), r[3] != o.NO_SELECTION && this.itemSelected(r[3], !0), 
            i && (r[4] && (this.dispatchEventWith(e.Event.CHANGE), r[4] = !1), t.PropertyEvent.dispatchPropertyEvent(this, t.PropertyEvent.PROPERTY_CHANGE, "selectedIndex"), 
            t.PropertyEvent.dispatchPropertyEvent(this, t.PropertyEvent.PROPERTY_CHANGE, "selectedItem")), 
            !0);
        }, o.prototype.adjustSelection = function(t, e) {
            void 0 === e && (e = !1);
            var i = this.$ListBase;
            i[2] != o.NO_PROPOSED_SELECTION ? i[2] = t : i[3] = t, i[6] = !0, this.invalidateProperties();
        }, o.prototype.itemAdded = function(t, e) {
            i.prototype.itemAdded.call(this, t, e);
            var n = this.$getSelectedIndex();
            n == o.NO_SELECTION ? this.$ListBase[0] && this.adjustSelection(e, !0) : n >= e && this.adjustSelection(n + 1, !0);
        }, o.prototype.itemRemoved = function(t, e) {
            if (i.prototype.itemRemoved.call(this, t, e), this.selectedIndex != o.NO_SELECTION) {
                var n = this.$getSelectedIndex();
                e == n ? this.requireSelection && this.$dataProvider && this.$dataProvider.length > 0 ? 0 == e ? (this.$ListBase[2] = 0, 
                this.invalidateProperties()) : this.setSelectedIndex(0, !1) : this.adjustSelection(-1, !1) : n > e && this.adjustSelection(n - 1, !1);
            }
        }, o.prototype.onCollectionChange = function(e) {
            i.prototype.onCollectionChange.call(this, e), e.kind == t.CollectionEventKind.RESET ? 0 == this.$dataProvider.length && this.setSelectedIndex(o.NO_SELECTION, !1) : e.kind == t.CollectionEventKind.REFRESH && this.dataProviderRefreshed();
        }, o.prototype.dataProviderRefreshed = function() {
            this.setSelectedIndex(o.NO_SELECTION, !1);
        }, o.prototype.rendererAdded = function(t, i, n) {
            t.addEventListener(e.TouchEvent.TOUCH_BEGIN, this.onRendererTouchBegin, this), t.addEventListener(e.TouchEvent.TOUCH_END, this.onRendererTouchEnd, this), 
            t.addEventListener(e.TouchEvent.TOUCH_CANCEL, this.onRendererTouchCancle, this);
        }, o.prototype.rendererRemoved = function(t, i, n) {
            t.removeEventListener(e.TouchEvent.TOUCH_BEGIN, this.onRendererTouchBegin, this), 
            t.removeEventListener(e.TouchEvent.TOUCH_END, this.onRendererTouchEnd, this), t.removeEventListener(e.TouchEvent.TOUCH_CANCEL, this.onRendererTouchCancle, this);
        }, o.prototype.onRendererTouchBegin = function(t) {
            var i = this.$ListBase;
            t.$isDefaultPrevented || (i[8] = !1, i[7] = t.$currentTarget, this.$stage.addEventListener(e.TouchEvent.TOUCH_END, this.stage_touchEndHandler, this));
        }, o.prototype.onRendererTouchCancle = function(t) {
            var i = this.$ListBase;
            i[7] = null, i[8] = !0, this.$stage && this.$stage.removeEventListener(e.TouchEvent.TOUCH_END, this.stage_touchEndHandler, this);
        }, o.prototype.onRendererTouchEnd = function(e) {
            var i = this.$ListBase, n = e.$currentTarget;
            n == i[7] && (i[8] || (this.setSelectedIndex(n.itemIndex, !0), t.ItemTapEvent.dispatchItemTapEvent(this, t.ItemTapEvent.ITEM_TAP, n)), 
            i[8] = !1);
        }, o.prototype.stage_touchEndHandler = function(t) {
            t.$currentTarget.removeEventListener(e.TouchEvent.TOUCH_END, this.stage_touchEndHandler, this), 
            this.$ListBase[7] = null;
        }, o.NO_SELECTION = -1, o.NO_PROPOSED_SELECTION = -2, o;
    }(t.DataGroup);
    t.ListBase = o, i(o.prototype, "eui.ListBase"), t.registerBindable(o.prototype, "selectedIndex"), 
    t.registerBindable(o.prototype, "selectedItem");
}(r || (r = {}));

!function(t) {
    var o = function(i) {
        function o() {
            var t = i.call(this) || this;
            return t.thumb = null, t.$viewport = null, t.autoVisibility = !0, t;
        }
        return n(o, i), Object.defineProperty(o.prototype, "viewport", {
            get: function() {
                return this.$viewport;
            },
            set: function(i) {
                if (i != this.$viewport) {
                    var n = this.$viewport;
                    n && (n.removeEventListener(t.PropertyEvent.PROPERTY_CHANGE, this.onPropertyChanged, this), 
                    n.removeEventListener(e.Event.RESIZE, this.onViewportResize, this)), this.$viewport = i, 
                    i && (i.addEventListener(t.PropertyEvent.PROPERTY_CHANGE, this.onPropertyChanged, this), 
                    i.addEventListener(e.Event.RESIZE, this.onViewportResize, this)), this.invalidateDisplayList();
                }
            },
            enumerable: !0,
            configurable: !0
        }), o.prototype.onViewportResize = function(t) {
            this.invalidateDisplayList();
        }, o.prototype.onPropertyChanged = function(t) {}, o;
    }(t.Component);
    t.ScrollBarBase = o, i(o.prototype, "eui.ScrollBarBase");
}(r || (r = {}));

!function(t) {
    var o = function(i) {
        function o() {
            var t = i.call(this) || this;
            return t.trackHighlight = null, t.thumb = null, t.track = null, t.$SliderBase = {
                0: 0,
                1: 0,
                2: 0,
                3: 0,
                4: null,
                5: null,
                6: 300,
                7: 0,
                8: 0,
                9: !0
            }, t.maximum = 10, t.addEventListener(e.TouchEvent.TOUCH_BEGIN, t.onTouchBegin, t), 
            t;
        }
        return n(o, i), Object.defineProperty(o.prototype, "slideDuration", {
            get: function() {
                return this.$SliderBase[6];
            },
            set: function(t) {
                this.$SliderBase[6] = +t || 0;
            },
            enumerable: !0,
            configurable: !0
        }), o.prototype.pointToValue = function(t, e) {
            return this.minimum;
        }, Object.defineProperty(o.prototype, "liveDragging", {
            get: function() {
                return this.$SliderBase[9];
            },
            set: function(t) {
                this.$SliderBase[9] = !!t;
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(o.prototype, "pendingValue", {
            get: function() {
                return this.$SliderBase[7];
            },
            set: function(t) {
                t = +t || 0;
                var e = this.$SliderBase;
                t !== e[7] && (e[7] = t, this.invalidateDisplayList());
            },
            enumerable: !0,
            configurable: !0
        }), o.prototype.setValue = function(t) {
            this.$SliderBase[7] = t, i.prototype.setValue.call(this, t);
        }, o.prototype.partAdded = function(t, n) {
            i.prototype.partAdded.call(this, t, n), n == this.thumb ? (this.thumb.addEventListener(e.TouchEvent.TOUCH_BEGIN, this.onThumbTouchBegin, this), 
            this.thumb.addEventListener(e.Event.RESIZE, this.onTrackOrThumbResize, this)) : n == this.track ? (this.track.addEventListener(e.TouchEvent.TOUCH_BEGIN, this.onTrackTouchBegin, this), 
            this.track.addEventListener(e.Event.RESIZE, this.onTrackOrThumbResize, this)) : n === this.trackHighlight && (this.trackHighlight.touchEnabled = !1, 
            e.is(this.trackHighlight, "egret.DisplayObjectContainer") && (this.trackHighlight.touchChildren = !1));
        }, o.prototype.partRemoved = function(t, n) {
            i.prototype.partRemoved.call(this, t, n), n == this.thumb ? (this.thumb.removeEventListener(e.TouchEvent.TOUCH_BEGIN, this.onThumbTouchBegin, this), 
            this.thumb.removeEventListener(e.Event.RESIZE, this.onTrackOrThumbResize, this)) : n == this.track && (this.track.removeEventListener(e.TouchEvent.TOUCH_BEGIN, this.onTrackTouchBegin, this), 
            this.track.removeEventListener(e.Event.RESIZE, this.onTrackOrThumbResize, this));
        }, o.prototype.onTrackOrThumbResize = function(t) {
            this.updateSkinDisplayList();
        }, o.prototype.onThumbTouchBegin = function(i) {
            var n = this.$SliderBase;
            n[5] && n[5].isPlaying && this.stopAnimation();
            var o = this.$stage;
            o.addEventListener(e.TouchEvent.TOUCH_MOVE, this.onStageTouchMove, this), o.addEventListener(e.TouchEvent.TOUCH_END, this.onStageTouchEnd, this);
            var r = this.thumb.globalToLocal(i.stageX, i.stageY, e.$TempPoint);
            n[0] = r.x, n[1] = r.y, t.UIEvent.dispatchUIEvent(this, t.UIEvent.CHANGE_START);
        }, o.prototype.onStageTouchMove = function(t) {
            var i = this.$SliderBase;
            i[2] = t.$stageX, i[3] = t.$stageY;
            var n = this.track;
            if (n) {
                var o = n.globalToLocal(i[2], i[3], e.$TempPoint), r = this.pointToValue(o.x - i[0], o.y - i[1]);
                r = this.nearestValidValue(r, this.snapInterval), this.updateWhenTouchMove(r), t.updateAfterEvent();
            }
        }, o.prototype.updateWhenTouchMove = function(t) {
            t != this.$SliderBase[7] && (this.liveDragging ? (this.setValue(t), this.dispatchEventWith(e.Event.CHANGE)) : this.pendingValue = t);
        }, o.prototype.onStageTouchEnd = function(i) {
            var n = i.$currentTarget;
            n.removeEventListener(e.TouchEvent.TOUCH_MOVE, this.onStageTouchMove, this), n.removeEventListener(e.TouchEvent.TOUCH_END, this.onStageTouchEnd, this), 
            t.UIEvent.dispatchUIEvent(this, t.UIEvent.CHANGE_END);
            var o = this.$SliderBase;
            this.liveDragging || this.value == o[7] || (this.setValue(o[7]), this.dispatchEventWith(e.Event.CHANGE));
        }, o.prototype.onTouchBegin = function(t) {
            this.$stage.addEventListener(e.TouchEvent.TOUCH_END, this.stageTouchEndHandler, this), 
            this.$SliderBase[4] = t.$target;
        }, o.prototype.stageTouchEndHandler = function(t) {
            var i = t.$target, n = this.$SliderBase;
            t.$currentTarget.removeEventListener(e.TouchEvent.TOUCH_END, this.stageTouchEndHandler, this), 
            n[4] != i && this.contains(i) && e.TouchEvent.dispatchTouchEvent(this, e.TouchEvent.TOUCH_TAP, !0, !0, t.$stageX, t.$stageY, t.touchPointID), 
            n[4] = null;
        }, o.prototype.$animationUpdateHandler = function(t) {
            this.pendingValue = t.currentValue;
        }, o.prototype.animationEndHandler = function(i) {
            this.setValue(this.$SliderBase[8]), this.dispatchEventWith(e.Event.CHANGE), t.UIEvent.dispatchUIEvent(this, t.UIEvent.CHANGE_END);
        }, o.prototype.stopAnimation = function() {
            this.$SliderBase[5].stop(), this.setValue(this.nearestValidValue(this.pendingValue, this.snapInterval)), 
            this.dispatchEventWith(e.Event.CHANGE), t.UIEvent.dispatchUIEvent(this, t.UIEvent.CHANGE_END);
        }, o.prototype.onTrackTouchBegin = function(i) {
            var n = this.thumb ? this.thumb.width : 0, o = this.thumb ? this.thumb.height : 0, r = i.$stageX - n / 2, s = i.$stageY - o / 2, a = this.track.globalToLocal(r, s, e.$TempPoint), h = this.$Range, l = this.pointToValue(a.x, a.y);
            l = this.nearestValidValue(l, h[7]);
            var u = this.$SliderBase;
            if (l != u[7]) if (0 != u[6]) {
                u[5] || (u[5] = new t.sys.Animation(this.$animationUpdateHandler, this), u[5].endFunction = this.animationEndHandler);
                var p = u[5];
                p.isPlaying && this.stopAnimation(), u[8] = l, p.duration = u[6] * (Math.abs(u[7] - u[8]) / (h[0] - h[2])), 
                p.from = u[7], p.to = u[8], t.UIEvent.dispatchUIEvent(this, t.UIEvent.CHANGE_START), 
                p.play();
            } else this.setValue(l), this.dispatchEventWith(e.Event.CHANGE);
        }, o;
    }(t.Range);
    t.SliderBase = o, i(o.prototype, "eui.SliderBase");
}(r || (r = {}));

!function(t) {
    !function(t) {
        function n(t) {
            if (!t) return "";
            for (var e = "  at <" + t.name, i = t.attributes, n = Object.keys(i), o = n.length, r = 0; o > r; r++) {
                var s = n[r], a = i[s];
                ("id" != s || "__" != a.substring(0, 2)) && (e += " " + s + '="' + a + '"');
            }
            return e += 0 == t.children.length ? "/>" : ">";
        }
        function o(t) {
            return n(t.parent) + "\n      \t" + n(t).substring(5);
        }
        var r = [], s = 1, a = "hostComponent", h = "egret.Rectangle", l = "Class", u = "Array", p = "skinName", c = [ u, "boolean", "string", "number" ], d = [ "id", "locked", "includeIn", "excludeFrom" ], f = [ [ "<", "&lt;" ], [ ">", "&gt;" ], [ "&", "&amp;" ], [ '"', "&quot;" ], [ "'", "&apos;" ] ], y = [ "null", "NaN", "undefined", "true", "false" ], v = function() {
            function i() {
                this.delayAssignmentDic = {};
            }
            return i.prototype.$parseCode = function(t, i) {
                var n = i || "$exmlClass" + s++, o = (0, eval)(t);
                if (o) {
                    e.registerClass(o, n);
                    for (var r = n.split("."), a = r.length, h = __global, l = 0; a - 1 > l; l++) {
                        var u = r[l];
                        h = h[u] || (h[u] = {});
                    }
                    h[r[a - 1]] || (h[r[a - 1]] = o);
                }
                return o;
            }, i.prototype.parse = function(t) {
                var i = null, n = !1, o = "";
                (i = e.XML.parse(t)).attributes.class ? (o = i.attributes.class, delete i.attributes.class, 
                n = !!o) : o = "$exmlClass" + s++;
                var r = this.parseClass(i, o).toCode(), a = null;
                if (a = (0, eval)(r), n && a) {
                    e.registerClass(a, o);
                    for (var h = o.split("."), l = h.length, u = __global, p = 0; l - 1 > p; p++) {
                        var c = h[p];
                        u = u[c] || (u[c] = {});
                    }
                    u[h[l - 1]] || (u[h[l - 1]] = a);
                }
                return a;
            }, i.prototype.parseClass = function(e, i) {
                t.exmlConfig || (t.exmlConfig = new t.EXMLConfig()), this.currentXML = e, this.currentClassName = i, 
                this.delayAssignmentDic = {}, this.idDic = {}, this.stateCode = [], this.stateNames = [], 
                this.skinParts = [], this.bindings = [], this.declarations = null, this.currentClass = new t.EXClass(), 
                this.stateIds = [];
                var n = i.lastIndexOf(".");
                this.currentClass.className = -1 != n ? i.substring(n + 1) : i, this.startCompile();
                var o = this.currentClass;
                return this.currentClass = null, o;
            }, i.prototype.startCompile = function() {
                var e = this.getClassNameOfNode(this.currentXML);
                this.isSkinClass = "eui.Skin" == e, this.currentClass.superClass = e, this.getStateNames();
                var i = this.currentXML.children;
                if (i) for (var n = i.length, o = 0; n > o; o++) {
                    var r = i[o];
                    if (1 === r.nodeType && r.namespace == t.NS_W && "Declarations" == r.localName) {
                        this.declarations = r;
                        break;
                    }
                }
                this.currentXML.namespace && (this.addIds(this.currentXML.children), this.createConstructFunc());
            }, i.prototype.addIds = function(i) {
                if (i) for (var n = i.length, o = 0; n > o; o++) {
                    var r = i[o];
                    if (1 == r.nodeType && r.namespace && !this.isInnerClass(r) && (this.addIds(r.children), 
                    r.namespace != t.NS_W && r.localName)) if (this.isProperty(r)) {
                        var s = r.localName.indexOf("."), a = r.children;
                        if (-1 == s || !a || 0 == a.length) continue;
                        var h = a[0];
                        this.stateIds.push(h.attributes.id);
                    } else if (1 === r.nodeType) {
                        var l = r.attributes.id;
                        if (l) {
                            var u = new RegExp("^[a-zA-Z_$]{1}[a-z0-9A-Z_$]*");
                            null == l.match(u) && e.$warn(2022, l), null != l.match(new RegExp(/ /g)) && e.$warn(2022, l), 
                            -1 == this.skinParts.indexOf(l) && this.skinParts.push(l), this.createVarForNode(r), 
                            this.isStateNode(r) && this.stateIds.push(l);
                        } else this.createIdForNode(r), this.isStateNode(r) && this.stateIds.push(r.attributes.id);
                    }
                }
            }, i.prototype.isInnerClass = function(e) {
                if (e.hasOwnProperty("isInnerClass")) return e.isInnerClass;
                var i = "Skin" == e.localName && e.namespace == t.NS_S;
                if (!i) if (this.isProperty(e)) i = !1; else {
                    var n = void 0, o = e.parent;
                    if (this.isProperty(o)) {
                        var r = (n = o.localName).indexOf(".");
                        -1 != r && (n.substring(r + 1), n = n.substring(0, r)), o = o.parent;
                    } else n = t.exmlConfig.getDefaultPropById(o.localName, o.namespace);
                    var s = t.exmlConfig.getClassNameById(o.localName, o.namespace);
                    i = t.exmlConfig.getPropertyType(n, s) == l;
                }
                return e.isInnerClass = i, i;
            }, i.prototype.containsState = function(t) {
                var e = t.attributes;
                if (e.includeIn || e.excludeFrom) return !0;
                for (var i = Object.keys(e), n = i.length, o = 0; n > o; o++) if (-1 != i[o].indexOf(".")) return !0;
                return !1;
            }, i.prototype.createIdForNode = function(t) {
                var e = this.getNodeId(t);
                this.idDic[e] ? this.idDic[e]++ : this.idDic[e] = 1, e += this.idDic[e], t.attributes.id = e;
            }, i.prototype.getNodeId = function(t) {
                return t.attributes.id ? t.attributes.id : "_" + t.localName;
            }, i.prototype.createVarForNode = function(e) {
                "" != this.getClassNameOfNode(e) && (this.currentClass.getVariableByName(e.attributes.id) || this.currentClass.addVariable(new t.EXVariable(e.attributes.id)));
            }, i.prototype.createFuncForNode = function(e) {
                var i = e.localName;
                if (this.isBasicTypeData(i)) return this.createBasicTypeForNode(e);
                var n = this.getClassNameOfNode(e), o = new t.EXFunction(), r = e.attributes.id;
                o.name = r + "_i", this.currentClass.addFunction(o);
                var s = new t.EXCodeBlock();
                o.codeBlock = s;
                var a = "t";
                "Object" == i ? s.addVar(a, "{}") : s.addVar(a, "new " + n + "()"), !!this.currentClass.getVariableByName(r) && s.addAssignment("this." + r, a), 
                this.addAttributesToCodeBlock(s, a, e), this.initlizeChildNode(e, s, a);
                var h = this.delayAssignmentDic[r];
                if (h) for (var l = h.length, u = 0; l > u; u++) {
                    var p = h[u];
                    s.concat(p);
                }
                return s.addReturn(a), "this." + o.name + "()";
            }, i.prototype.isBasicTypeData = function(t) {
                return -1 != c.indexOf(t);
            }, i.prototype.createBasicTypeForNode = function(t) {
                var e = t.localName, i = "", n = this.currentClass.getVariableByName(t.attributes.id), o = t.children, r = "";
                if (o && o.length > 0) {
                    var s = o[0];
                    3 == s.nodeType && (r = s.text.trim());
                }
                switch (e) {
                  case u:
                    var a = [];
                    if (o) for (var h = o.length, l = 0; h > l; l++) {
                        var p = o[l];
                        1 == p.nodeType && a.push(this.createFuncForNode(p));
                    }
                    i = "[" + a.join(",") + "]";
                    break;

                  case "boolean":
                    i = "false" != r && r ? "true" : "false";
                    break;

                  case "number":
                    -1 != (i = r).indexOf("%") && (i = i.substring(0, i.length - 1));
                    break;

                  case "string":
                    i = this.formatString(r);
                }
                return n && (n.defaultValue = i), i;
            }, i.prototype.addAttributesToCodeBlock = function(e, i, n) {
                var o, r, s = n.attributes, a = Object.keys(s);
                a.sort();
                for (var h = a.length, l = 0; h > l; l++) if (o = a[l], this.isNormalKey(o) && (r = s[o], 
                o = this.formatKey(o, r), r = this.formatValue(o, r, n))) {
                    if (this.currentClass.getVariableByName(r)) {
                        var u = "this.", p = s.id, c = u + p + " = t;";
                        this.currentClass.getVariableByName(p) || this.createVarForNode(n), e.containsCodeLine(c) || e.addCodeLineAt(c, 1);
                        var d = new t.EXCodeBlock();
                        "this" == i ? d.addAssignment(i, u + r, o) : (d.startIf(u + p), d.addAssignment(u + p, u + r, o), 
                        d.endBlock()), this.delayAssignmentDic[r] || (this.delayAssignmentDic[r] = []), 
                        this.delayAssignmentDic[r].push(d), r = u + r;
                    }
                    e.addAssignment(i, r, o);
                }
            }, i.prototype.initlizeChildNode = function(i, n, r) {
                var s = i.children;
                if (s && 0 != s.length) {
                    for (var a, h = t.exmlConfig.getClassNameById(i.localName, i.namespace), l = [], u = s.length, c = [], d = 0; u > d; d++) {
                        var f = s[d];
                        if (1 == f.nodeType && f.namespace != t.NS_W) if (this.isInnerClass(f)) {
                            if ("Skin" == f.localName) {
                                var y = this.parseInnerClass(f);
                                (g = t.exmlConfig.getPropertyType(p, h)) ? n.addAssignment(r, y, p) : e.$error(2005, this.currentClassName, p, o(f));
                            }
                        } else {
                            var v = f.localName;
                            if (this.isProperty(f)) {
                                if (!this.isNormalKey(v)) continue;
                                var g = t.exmlConfig.getPropertyType(f.localName, h);
                                if (!g) continue;
                                if (!f.children || 0 == f.children.length) continue;
                                this.addChildrenToProp(f.children, g, v, n, r, a, c, i);
                            } else l.push(f);
                        }
                    }
                    if (0 != l.length) {
                        var m = t.exmlConfig.getDefaultPropById(i.localName, i.namespace), $ = t.exmlConfig.getPropertyType(m, h);
                        m && $ && this.addChildrenToProp(l, $, m, n, r, a, c, i);
                    }
                }
            }, i.prototype.parseInnerClass = function(t) {
                var e = r.pop();
                e || (e = new i());
                var n = this.currentClass.className + "$" + t.localName + s++, o = e.parseClass(t, n);
                return this.currentClass.addInnerClass(o), r.push(e), n;
            }, i.prototype.addChildrenToProp = function(t, e, i, n, o, r, s, a) {
                var h = "", p = t.length;
                if (p > 1) {
                    if (e != u) return;
                    for (var c = [], d = 0; p > d; d++) 1 == (g = t[d]).nodeType && (h = this.createFuncForNode(g), 
                    this.getClassNameOfNode(g), this.isStateNode(g) || c.push(h));
                    h = "[" + c.join(",") + "]";
                } else {
                    var f = t[0];
                    if (e == u) if (f.localName == u) {
                        c = [];
                        if (f.children) for (var y = f.children.length, v = 0; y > v; v++) {
                            var g = f.children[v];
                            1 == g.nodeType && (h = this.createFuncForNode(g), this.getClassNameOfNode(g), this.isStateNode(g) || c.push(h));
                        }
                        h = "[" + c.join(",") + "]";
                    } else h = this.createFuncForNode(f), this.getClassNameOfNode(f), h = this.isStateNode(f) ? "[]" : "[" + h + "]"; else if (1 == f.nodeType) if (e == l) {
                        if (p > 1) return;
                        h = this.parseInnerClass(t[0]);
                    } else this.getClassNameOfNode(f), h = this.createFuncForNode(f); else h = this.formatValue(i, f.text, a);
                }
                "" != h && (-1 == h.indexOf("()") && (i = this.formatKey(i, h)), -1 == s.indexOf(i) && s.push(i), 
                n.addAssignment(o, h, i));
            }, i.prototype.isProperty = function(e) {
                if (e.hasOwnProperty("isProperty")) return e.isProperty;
                var i, n = e.localName;
                if (n && 1 === e.nodeType && e.parent && !this.isBasicTypeData(n)) {
                    var o = e.parent, r = n.indexOf(".");
                    -1 != r && (n = n.substr(0, r));
                    var s = t.exmlConfig.getClassNameById(o.localName, o.namespace);
                    i = !!t.exmlConfig.getPropertyType(n, s);
                } else i = !1;
                return e.isProperty = i, i;
            }, i.prototype.isNormalKey = function(t) {
                return !(!t || -1 != t.indexOf(".") || -1 != t.indexOf(":") || -1 != d.indexOf(t));
            }, i.prototype.formatKey = function(t, e) {
                return -1 != e.indexOf("%") && ("height" == t ? t = "percentHeight" : "width" == t && (t = "percentWidth")), 
                t;
            }, i.prototype.formatValue = function(e, i, n) {
                i || (i = "");
                var o = i;
                i = i.trim();
                var r = this.getClassNameOfNode(n), s = t.exmlConfig.getPropertyType(e, r), a = this.formatBinding(e, i, n);
                if (a) {
                    this.checkIdForState(n);
                    var u = "this";
                    n !== this.currentXML && (u += "." + n.attributes.id), this.bindings.push(new t.EXBinding(u, e, a.templates, a.chainIndex)), 
                    i = "";
                } else if (s == h) i = "new " + h + "(" + i + ")"; else if ("Percentage" == s) -1 != i.indexOf("%") && (i = this.formatString(i)); else switch (s) {
                  case l:
                    e == p && (i = this.formatString(o));
                    break;

                  case "number":
                    0 == i.indexOf("#") ? i = "0x" + i.substring(1) : -1 != i.indexOf("%") && (i = parseFloat(i.substr(0, i.length - 1)).toString());
                    break;

                  case "boolean":
                    i = "false" != i && i ? "true" : "false";
                    break;

                  case "string":
                  case "any":
                    i = this.formatString(o);
                }
                return i;
            }, i.prototype.formatString = function(t) {
                return t = this.unescapeHTMLEntity(t), t = t.split("\n").join("\\n"), t = t.split("\r").join("\\n"), 
                t = t.split('"').join('\\"'), t = '"' + t + '"';
            }, i.prototype.formatBinding = function(t, e, i) {
                if (!e) return null;
                if ("{" != (e = e.trim()).charAt(0) || "}" != e.charAt(e.length - 1)) return null;
                for (var n = -1 == (e = e.substring(1, e.length - 1).trim()).indexOf("+") ? [ e ] : this.parseTemplates(e), o = [], r = n.length, s = 0; r > s; s++) {
                    var h = n[s].trim();
                    if (h) {
                        var l = h.charAt(0);
                        if (!("'" == l || '"' == l || l >= "0" && "9" >= l || "-" == l || -1 == h.indexOf(".") && -1 != y.indexOf(h))) {
                            0 == h.indexOf("this.") && (h = h.substring(5));
                            var u = h.split(".")[0];
                            u != a && -1 == this.skinParts.indexOf(u) && (h = a + "." + h), n[s] = '"' + h + '"', 
                            o.push(s);
                        }
                    } else n.splice(s, 1), s--, r--;
                }
                return {
                    templates: n,
                    chainIndex: o
                };
            }, i.prototype.parseTemplates = function(t) {
                if (-1 == t.indexOf("'")) return t.split("+");
                var e = !1, i = "";
                for (t = t.split("\\'").join("\v0\v"); t.length > 0; ) {
                    var n = t.indexOf("'");
                    if (-1 == n) {
                        i += t;
                        break;
                    }
                    i += t.substring(0, n + 1), -1 == (n = (t = t.substring(n + 1)).indexOf("'")) && (n = t.length - 1, 
                    e = !0), i += t.substring(0, n + 1).split("+").join("\v1\v"), t = t.substring(n + 1);
                }
                t = i.split("\v0\v").join("\\'"), e && (t += "'");
                for (var o = t.split("+"), r = o.length, s = 0; r > s; s++) o[s] = o[s].split("\v1\v").join("+");
                return o;
            }, i.prototype.unescapeHTMLEntity = function(t) {
                if (!t) return "";
                for (var e = f.length, i = 0; e > i; i++) {
                    var n = f[i], o = n[0], r = n[1];
                    t = t.split(r).join(o);
                }
                return t;
            }, i.prototype.createConstructFunc = function() {
                var e = new t.EXCodeBlock();
                e.addEmptyLine();
                var i = "this";
                if (this.addAttributesToCodeBlock(e, i, this.currentXML), this.declarations) {
                    var n = this.declarations.children;
                    if (n && n.length > 0) for (var o = n.length, r = 0; o > r; r++) {
                        var s = n[r];
                        if (1 == s.nodeType) {
                            var a = this.createFuncForNode(s);
                            a && e.addCodeLine(a + ";");
                        }
                    }
                }
                this.initlizeChildNode(this.currentXML, e, i);
                var h, l, u = this.stateIds;
                if (u.length > 0) {
                    l = u.length;
                    for (r = 0; l > r; r++) h = u[r], e.addCodeLine("this." + h + "_i();");
                    e.addEmptyLine();
                }
                var p = this.skinParts, c = "[]";
                if ((l = p.length) > 0) {
                    for (r = 0; l > r; r++) p[r] = '"' + p[r] + '"';
                    c = "[" + p.join(",") + "]";
                }
                var d = new t.EXFunction();
                d.name = "skinParts", d.isGet = !0;
                var f = new t.EXCodeBlock();
                f.addReturn(c), d.codeBlock = f, this.currentClass.addFunction(d), this.currentXML.attributes.id = "", 
                this.createStates(this.currentXML);
                for (var y, v = this.currentXML, g = (this.getClassNameOfNode(v), v.attributes), m = Object.keys(g), $ = m.length, E = 0; $ > E; E++) {
                    var C = m[E], b = g[C], S = C.indexOf(".");
                    if (-1 != S) {
                        var T = C.substring(0, S);
                        T = this.formatKey(T, b);
                        var I = this.formatValue(T, b, v);
                        if (!I) continue;
                        var P = C.substr(S + 1), x = (y = this.getStateByName(P, v)).length;
                        if (x > 0) for (r = 0; x > r; r++) (_ = y[r]).addOverride(new t.EXSetProperty("", T, I));
                    }
                }
                var L = this.stateCode;
                if ((l = L.length) > 0) {
                    e.addCodeLine("this.states = [");
                    for (var N = !0, r = 0; l > r; r++) {
                        var _ = L[r];
                        N ? N = !1 : e.addCodeLine("\t,");
                        for (var O = _.toCode().split("\n"), A = 0; A < O.length; ) {
                            var B = O[A];
                            B && e.addCodeLine("\t" + B), A++;
                        }
                    }
                    e.addCodeLine("];");
                }
                var D = this.bindings;
                if ((l = D.length) > 0) {
                    e.addEmptyLine();
                    for (r = 0; l > r; r++) {
                        var R = D[r];
                        e.addCodeLine(R.toCode());
                    }
                }
                this.currentClass.constructCode = e;
            }, i.prototype.isStateNode = function(t) {
                var e = t.attributes;
                return e.hasOwnProperty("includeIn") || e.hasOwnProperty("excludeFrom");
            }, i.prototype.getStateNames = function() {
                var e = this.currentXML, i = t.exmlConfig.getClassNameById(e.localName, e.namespace);
                if ("State[]" == t.exmlConfig.getPropertyType("states", i)) {
                    var n = e.attributes.states;
                    n && delete e.attributes.states;
                    var o, r, s = this.stateNames, a = e.children;
                    if (a) for (var h = a.length, l = 0; h > l; l++) if (1 == (r = a[l]).nodeType && "states" == r.localName) {
                        r.namespace = t.NS_W, o = r.children;
                        break;
                    }
                    if (o || n) if (n) for (var u = n.split(","), p = u.length, l = 0; p > l; l++) (E = u[l].trim()) && (-1 == s.indexOf(E) && s.push(E), 
                    this.stateCode.push(new t.EXState(E))); else for (var c = o.length, l = 0; c > l; l++) {
                        var d = o[l];
                        if (1 == d.nodeType) {
                            var f = [], y = d.attributes;
                            if (y.stateGroups) for (var v = y.stateGroups.split(","), g = v.length, m = 0; g > m; m++) {
                                var $ = v[m].trim();
                                $ && (-1 == s.indexOf($) && s.push($), f.push($));
                            }
                            var E = y.name;
                            -1 == s.indexOf(E) && s.push(E), this.stateCode.push(new t.EXState(E, f));
                        }
                    }
                }
            }, i.prototype.createStates = function(e) {
                var i = e.children;
                if (i) for (var n = i.length, o = 0; n > o; o++) {
                    var r = i[o];
                    if (1 == r.nodeType && !this.isInnerClass(r) && (this.createStates(r), r.namespace != t.NS_W && r.localName)) if (this.isProperty(r)) {
                        var s = r.localName, a = s.indexOf("."), h = r.children;
                        if (-1 == a || !h || 0 == h.length) continue;
                        y = s.substring(a + 1);
                        s = s.substring(0, a);
                        var l = this.getClassNameOfNode(e), p = (t.exmlConfig.getPropertyType(s, l), h[0]), c = void 0;
                        if (1 == p.nodeType ? (this.createFuncForNode(p), this.checkIdForState(p), c = "this." + p.attributes.id) : c = this.formatValue(s, p.text, e), 
                        (L = (v = this.getStateByName(y, r)).length) > 0) for (T = 0; L > T; T++) (g = v[T]).addOverride(new t.EXSetProperty(e.attributes.id, s, c));
                    } else if (this.containsState(r)) {
                        var d = r.attributes, f = d.id;
                        this.getClassNameOfNode(r), this.checkIdForState(r);
                        var y = void 0, v = void 0, g = void 0;
                        if (this.isStateNode(r)) {
                            var m = "", $ = r.parent;
                            $.localName == u && ($ = $.parent), $ && $.parent && this.isProperty($) && ($ = $.parent), 
                            $ && $ != this.currentXML && (m = $.attributes.id, this.checkIdForState($));
                            var E = this.findNearNodeId(r), C = [];
                            if (d.includeIn) C = d.includeIn.split(","); else {
                                for (var b = d.excludeFrom.split(","), S = b.length, T = 0; S > T; T++) {
                                    var I = b[T];
                                    this.getStateByName(I, r);
                                }
                                S = this.stateCode.length;
                                for (T = 0; S > T; T++) g = this.stateCode[T], -1 == b.indexOf(g.name) && C.push(g.name);
                            }
                            for (var P = C.length, x = 0; P > x; x++) if (y = C[x], (v = this.getStateByName(y, r)).length > 0) for (var L = v.length, T = 0; L > T; T++) (g = v[T]).addOverride(new t.EXAddItems(f, m, E.position, E.relativeTo));
                        }
                        for (var N = Object.keys(d), _ = N.length, O = 0; _ > O; O++) {
                            var A = N[O], c = d[A];
                            if (-1 != (a = A.indexOf("."))) {
                                var B = A.substring(0, a);
                                B = this.formatKey(B, c);
                                var D = this.formatBinding(B, c, r);
                                if (!D && !(c = this.formatValue(B, c, r))) continue;
                                if (y = A.substr(a + 1), (L = (v = this.getStateByName(y, r)).length) > 0) for (T = 0; L > T; T++) g = v[T], 
                                D ? g.addOverride(new t.EXSetStateProperty(f, B, D.templates, D.chainIndex)) : g.addOverride(new t.EXSetProperty(f, B, c));
                            }
                        }
                    }
                }
            }, i.prototype.checkIdForState = function(t) {
                if (t && !this.currentClass.getVariableByName(t.attributes.id)) {
                    this.createVarForNode(t);
                    var e = t.attributes.id, i = e + "_i", n = this.currentClass.getFuncByName(i);
                    if (n) {
                        var o = "this." + e + " = t;", r = n.codeBlock;
                        r && (r.containsCodeLine(o) || r.addCodeLineAt(o, 1));
                    }
                }
            }, i.prototype.getStateByName = function(t, e) {
                for (var i = [], n = this.stateCode, o = n.length, r = 0; o > r; r++) {
                    var s = n[r];
                    if (s.name == t) -1 == i.indexOf(s) && i.push(s); else if (s.stateGroups.length > 0) {
                        for (var a = !1, h = s.stateGroups.length, l = 0; h > l; l++) if (s.stateGroups[l] == t) {
                            a = !0;
                            break;
                        }
                        a && -1 == i.indexOf(s) && i.push(s);
                    }
                }
                return i;
            }, i.prototype.findNearNodeId = function(t) {
                for (var e, i, n = "", o = -1, r = !1, s = t.parent.children, a = s.length, h = 0; a > h; h++) {
                    var l = s[h];
                    this.isProperty(l) || (l == t ? (r = !0, o = h) : !r || i || this.isStateNode(l) || (i = l), 
                    r || this.isStateNode(l) || l);
                }
                return 0 == o ? (e = 0, {
                    position: e,
                    relativeTo: n
                }) : o == a - 1 ? (e = 1, {
                    position: e,
                    relativeTo: n
                }) : i && (e = 2, n = i.attributes.id) ? (this.checkIdForState(i), {
                    position: e,
                    relativeTo: n
                }) : {
                    position: 1,
                    relativeTo: n
                };
            }, i.prototype.getClassNameOfNode = function(e) {
                return t.exmlConfig.getClassNameById(e.localName, e.namespace);
            }, i;
        }();
        t.EXMLParser = v, i(v.prototype, "eui.sys.EXMLParser");
    }(t.sys || (t.sys = {}));
}(r || (r = {}));

!function(t) {
    var o = function(i) {
        function o() {
            var t = null !== i && i.apply(this, arguments) || this;
            return t.$selected = !1, t.$autoSelected = !0, t;
        }
        return n(o, i), Object.defineProperty(o.prototype, "selected", {
            get: function() {
                return this.$selected;
            },
            set: function(t) {
                this.$setSelected(t);
            },
            enumerable: !0,
            configurable: !0
        }), o.prototype.$setSelected = function(e) {
            return (e = !!e) !== this.$selected && (this.$selected = e, this.invalidateState(), 
            t.PropertyEvent.dispatchPropertyEvent(this, t.PropertyEvent.PROPERTY_CHANGE, "selected"), 
            !0);
        }, o.prototype.getCurrentState = function() {
            var t = i.prototype.getCurrentState.call(this);
            if (this.$selected) {
                var e = t + "AndSelected", n = this.skin;
                return n && n.hasState(e) ? e : "disabled" == t ? "disabled" : "down";
            }
            return t;
        }, o.prototype.buttonReleased = function() {
            this.$autoSelected && (this.selected = !this.$selected, this.dispatchEventWith(e.Event.CHANGE));
        }, o;
    }(t.Button);
    t.ToggleButton = o, i(o.prototype, "eui.ToggleButton"), t.registerBindable(o.prototype, "selected");
}(r || (r = {}));

!function(t) {
    var e = function(t) {
        function e() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e.$horizontalAlign = "left", e.$verticalAlign = "top", e.$gap = 6, e.$paddingLeft = 0, 
            e.$paddingRight = 0, e.$paddingTop = 0, e.$paddingBottom = 0, e.elementSizeTable = [], 
            e.startIndex = -1, e.endIndex = -1, e.indexInViewCalculated = !1, e.maxElementSize = 0, 
            e;
        }
        return n(e, t), Object.defineProperty(e.prototype, "horizontalAlign", {
            get: function() {
                return this.$horizontalAlign;
            },
            set: function(t) {
                this.$horizontalAlign != t && (this.$horizontalAlign = t, this.$target && this.$target.invalidateDisplayList());
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(e.prototype, "verticalAlign", {
            get: function() {
                return this.$verticalAlign;
            },
            set: function(t) {
                this.$verticalAlign != t && (this.$verticalAlign = t, this.$target && this.$target.invalidateDisplayList());
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(e.prototype, "gap", {
            get: function() {
                return this.$gap;
            },
            set: function(t) {
                t = +t || 0, this.$gap !== t && (this.$gap = t, this.invalidateTargetLayout());
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(e.prototype, "paddingLeft", {
            get: function() {
                return this.$paddingLeft;
            },
            set: function(t) {
                t = +t || 0, this.$paddingLeft !== t && (this.$paddingLeft = t, this.invalidateTargetLayout());
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(e.prototype, "paddingRight", {
            get: function() {
                return this.$paddingRight;
            },
            set: function(t) {
                t = +t || 0, this.$paddingRight !== t && (this.$paddingRight = t, this.invalidateTargetLayout());
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(e.prototype, "paddingTop", {
            get: function() {
                return this.$paddingTop;
            },
            set: function(t) {
                t = +t || 0, this.$paddingTop !== t && (this.$paddingTop = t, this.invalidateTargetLayout());
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(e.prototype, "paddingBottom", {
            get: function() {
                return this.$paddingBottom;
            },
            set: function(t) {
                t = +t || 0, this.$paddingBottom !== t && (this.$paddingBottom = t, this.invalidateTargetLayout());
            },
            enumerable: !0,
            configurable: !0
        }), e.prototype.invalidateTargetLayout = function() {
            var t = this.$target;
            t && (t.invalidateSize(), t.invalidateDisplayList());
        }, e.prototype.measure = function() {
            this.$target && (this.$useVirtualLayout ? this.measureVirtual() : this.measureReal());
        }, e.prototype.measureReal = function() {}, e.prototype.measureVirtual = function() {}, 
        e.prototype.updateDisplayList = function(t, e) {
            var i = this.$target;
            if (i) return 0 == i.numElements ? void i.setContentSize(Math.ceil(this.$paddingLeft + this.$paddingRight), Math.ceil(this.$paddingTop + this.$paddingBottom)) : void (this.$useVirtualLayout ? this.updateDisplayListVirtual(t, e) : this.updateDisplayListReal(t, e));
        }, e.prototype.getStartPosition = function(t) {
            return 0;
        }, e.prototype.getElementSize = function(t) {
            return 0;
        }, e.prototype.getElementTotalSize = function() {
            return 0;
        }, e.prototype.elementRemoved = function(e) {
            this.$useVirtualLayout && (t.prototype.elementRemoved.call(this, e), this.elementSizeTable.splice(e, 1));
        }, e.prototype.clearVirtualLayoutCache = function() {
            this.$useVirtualLayout && (this.elementSizeTable = [], this.maxElementSize = 0);
        }, e.prototype.findIndexAt = function(t, e, i) {
            var n = .5 * (e + i) | 0, o = this.getStartPosition(n), r = this.getElementSize(n);
            return t >= o && t < o + r + this.$gap ? n : e == i ? -1 : o > t ? this.findIndexAt(t, e, Math.max(e, n - 1)) : this.findIndexAt(t, Math.min(n + 1, i), i);
        }, e.prototype.scrollPositionChanged = function() {
            t.prototype.scrollPositionChanged.call(this), this.$useVirtualLayout && this.getIndexInView() && (this.indexInViewCalculated = !0, 
            this.target.invalidateDisplayList());
        }, e.prototype.getIndexInView = function() {
            return !1;
        }, e.prototype.updateDisplayListVirtual = function(t, e) {}, e.prototype.updateDisplayListReal = function(t, e) {}, 
        e.prototype.flexChildrenProportionally = function(t, e, i, n) {
            var o, r = n.length;
            do {
                o = !0;
                var s = e - t * i / 100;
                s > 0 ? e -= s : s = 0;
                for (var a = e / i, h = 0; r > h; h++) {
                    var l = n[h], u = l.percent * a;
                    if (u < l.min) {
                        var p = l.min;
                        l.size = p, n[h] = n[--r], n[r] = l, i -= l.percent, s >= p ? s -= p : (e -= p - s, 
                        s = 0), o = !1;
                        break;
                    }
                    if (u > l.max) {
                        var c = l.max;
                        l.size = c, n[h] = n[--r], n[r] = l, i -= l.percent, s >= c ? s -= c : (e -= c - s, 
                        s = 0), o = !1;
                        break;
                    }
                    l.size = u;
                }
            } while (!o);
        }, e;
    }(t.LayoutBase);
    t.LinearLayoutBase = e, i(e.prototype, "eui.LinearLayoutBase");
}(r || (r = {})), function(t) {
    !function(t) {
        var e = function() {
            return function() {
                this.layoutElement = null, this.size = 0, this.percent = NaN, this.min = NaN, this.max = NaN;
            };
        }();
        t.ChildInfo = e, i(e.prototype, "eui.sys.ChildInfo");
    }(t.sys || (t.sys = {}));
}(r || (r = {}));

!function(t) {
    var o = function(t) {
        function i() {
            return t.call(this) || this;
        }
        return n(i, t), i.prototype.pointToValue = function(t, e) {
            if (!this.thumb || !this.track) return 0;
            var i = this.$Range, n = i[0] - i[2], o = this.getThumbRange();
            return i[2] + (0 != o ? t / o * n : 0);
        }, i.prototype.getThumbRange = function() {
            var t = e.$TempRectangle;
            this.track.getLayoutBounds(t);
            var i = t.width;
            return this.thumb.getLayoutBounds(t), i - t.width;
        }, i.prototype.updateSkinDisplayList = function() {
            if (this.thumb && this.track) {
                var t = this.$Range, i = this.getThumbRange(), n = t[0] - t[2], o = n > 0 ? (this.pendingValue - t[2]) / n * i : 0, r = this.track.localToGlobal(o, 0, e.$TempPoint), s = r.x, a = r.y, h = this.thumb.$parent.globalToLocal(s, a, e.$TempPoint).x, l = e.$TempRectangle;
                if (this.thumb.getLayoutBounds(l), this.thumb.setLayoutBoundsPosition(Math.round(h), l.y), 
                this.trackHighlight && this.trackHighlight.$parent) {
                    var u = this.trackHighlight.$parent.globalToLocal(s, a, e.$TempPoint).x - o;
                    this.trackHighlight.x = Math.round(u), this.trackHighlight.width = Math.round(o);
                }
            }
        }, i;
    }(t.SliderBase);
    t.HSlider = o, i(o.prototype, "eui.HSlider");
}(r || (r = {}));

!function(t) {
    var n = [], o = {}, r = {}, s = function() {
        function t() {}
        return t.prototype.getAsset = function(t, i, s) {
            var a = o[t];
            if (a) a.push([ i, s ]); else {
                var h = n.pop();
                h || (h = new e.ImageLoader()), o[t] = [ [ i, s ] ], r[h.$hashCode] = t, h.addEventListener(e.Event.COMPLETE, this.onLoadFinish, this), 
                h.addEventListener(e.IOErrorEvent.IO_ERROR, this.onLoadFinish, this), h.load(t);
            }
        }, t.prototype.onLoadFinish = function(t) {
            var i = t.currentTarget;
            i.removeEventListener(e.Event.COMPLETE, this.onLoadFinish, this), i.removeEventListener(e.IOErrorEvent.IO_ERROR, this.onLoadFinish, this);
            var s;
            t.$type == e.Event.COMPLETE && ((s = new e.Texture())._setBitmapData(i.data), i.data = null), 
            n.push(i);
            var a = r[i.$hashCode];
            delete r[i.$hashCode];
            var h = o[a];
            delete o[a];
            for (var l = h.length, u = 0; l > u; u++) {
                var p = h[u];
                p[0].call(p[1], s, a);
            }
        }, t;
    }();
    t.DefaultAssetAdapter = s, i(s.prototype, "eui.DefaultAssetAdapter", [ "eui.IAssetAdapter" ]);
}(r || (r = {}));

!function(t) {
    var o = function(i) {
        function o(t) {
            var e = i.call(this) || this;
            return e.sourceChanged = !1, e._source = null, e.initializeUIValues(), t && (e.source = t), 
            e;
        }
        return n(o, i), Object.defineProperty(o.prototype, "scale9Grid", {
            get: function() {
                return this.$scale9Grid;
            },
            set: function(t) {
                this.$setScale9Grid(t), this.invalidateDisplayList();
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(o.prototype, "fillMode", {
            get: function() {
                return this.$fillMode;
            },
            set: function(t) {
                t != this.$fillMode && (this.$fillMode = t, this.invalidateDisplayList());
            },
            enumerable: !0,
            configurable: !0
        }), o.prototype.$setFillMode = function(t) {
            var e = i.prototype.$setFillMode.call(this, t);
            return this.invalidateDisplayList(), e;
        }, Object.defineProperty(o.prototype, "source", {
            get: function() {
                return this._source;
            },
            set: function(t) {
                t != this._source && (this._source = t, this.$stage ? this.parseSource() : (this.sourceChanged = !0, 
                this.invalidateProperties()));
            },
            enumerable: !0,
            configurable: !0
        }), o.prototype.$setTexture = function(t) {
            if (t == this.$texture) return !1;
            var e = i.prototype.$setTexture.call(this, t);
            return this.sourceChanged = !1, this.invalidateSize(), this.invalidateDisplayList(), 
            e;
        }, o.prototype.parseSource = function() {
            var i = this;
            this.sourceChanged = !1;
            var n = this._source;
            n && "string" == typeof n ? t.getAssets(this._source, function(t) {
                n === i._source && e.is(t, "egret.Texture") && (i.$setTexture(t), t && i.dispatchEventWith(e.Event.COMPLETE));
            }) : this.$setTexture(n);
        }, o.prototype.$measureContentBounds = function(t) {
            var e = this.$texture;
            if (e) {
                var i = this.$UIComponent, n = i[10], o = i[11];
                if (isNaN(n) || isNaN(o)) return void t.setEmpty();
                "clip" == this.$fillMode && (n > e.$getTextureWidth() && (n = e.$getTextureWidth()), 
                o > e.$getTextureHeight() && (o = e.$getTextureHeight())), t.setTo(0, 0, n, o);
            } else t.setEmpty();
        }, o.prototype.createChildren = function() {
            this.sourceChanged && this.parseSource();
        }, o.prototype.setActualSize = function(e, n) {
            t.sys.UIComponentImpl.prototype.setActualSize.call(this, e, n), i.prototype.$setWidth.call(this, e), 
            i.prototype.$setHeight.call(this, n);
        }, o.prototype.childrenCreated = function() {}, o.prototype.commitProperties = function() {
            t.sys.UIComponentImpl.prototype.commitProperties.call(this), this.sourceChanged && this.parseSource();
        }, o.prototype.measure = function() {
            var t = this.$texture;
            t ? this.setMeasuredSize(t.$getTextureWidth(), t.$getTextureHeight()) : this.setMeasuredSize(0, 0);
        }, o.prototype.updateDisplayList = function(t, e) {
            this.$renderDirty = !0;
        }, o.prototype.invalidateParentLayout = function() {}, o.prototype.setMeasuredSize = function(t, e) {}, 
        o.prototype.invalidateProperties = function() {}, o.prototype.validateProperties = function() {}, 
        o.prototype.invalidateSize = function() {}, o.prototype.validateSize = function(t) {}, 
        o.prototype.invalidateDisplayList = function() {}, o.prototype.validateDisplayList = function() {}, 
        o.prototype.validateNow = function() {}, o.prototype.setLayoutBoundsSize = function(t, e) {}, 
        o.prototype.setLayoutBoundsPosition = function(t, e) {}, o.prototype.getLayoutBounds = function(t) {}, 
        o.prototype.getPreferredBounds = function(t) {}, o;
    }(e.Bitmap);
    t.Image = o, i(o.prototype, "eui.Image", [ "eui.UIComponent", "egret.DisplayObject" ]), 
    t.sys.implementUIComponent(o, e.Bitmap), t.registerProperty(o, "scale9Grid", "egret.Rectangle");
}(r || (r = {}));

!function(t) {
    var o = function(i) {
        function o() {
            var t = i.call(this) || this;
            return t._data = null, t._selected = !1, t.itemIndex = -1, t.touchCaptured = !1, 
            t.addEventListener(e.TouchEvent.TOUCH_BEGIN, t.onTouchBegin, t), t;
        }
        return n(o, i), Object.defineProperty(o.prototype, "data", {
            get: function() {
                return this._data;
            },
            set: function(e) {
                this._data = e, t.PropertyEvent.dispatchPropertyEvent(this, t.PropertyEvent.PROPERTY_CHANGE, "data"), 
                this.dataChanged();
            },
            enumerable: !0,
            configurable: !0
        }), o.prototype.dataChanged = function() {}, Object.defineProperty(o.prototype, "selected", {
            get: function() {
                return this._selected;
            },
            set: function(t) {
                this._selected != t && (this._selected = t, this.invalidateState());
            },
            enumerable: !0,
            configurable: !0
        }), o.prototype.onTouchCancle = function(t) {
            this.touchCaptured = !1;
            var i = t.$currentTarget;
            i.removeEventListener(e.TouchEvent.TOUCH_CANCEL, this.onTouchCancle, this), i.removeEventListener(e.TouchEvent.TOUCH_END, this.onStageTouchEnd, this), 
            this.invalidateState();
        }, o.prototype.onTouchBegin = function(t) {
            this.$stage.addEventListener(e.TouchEvent.TOUCH_CANCEL, this.onTouchCancle, this), 
            this.$stage.addEventListener(e.TouchEvent.TOUCH_END, this.onStageTouchEnd, this), 
            this.touchCaptured = !0, this.invalidateState(), t.updateAfterEvent();
        }, o.prototype.onStageTouchEnd = function(t) {
            var i = t.$currentTarget;
            i.removeEventListener(e.TouchEvent.TOUCH_CANCEL, this.onTouchCancle, this), i.removeEventListener(e.TouchEvent.TOUCH_END, this.onStageTouchEnd, this), 
            this.touchCaptured = !1, this.invalidateState();
        }, o.prototype.getCurrentState = function() {
            var t = "up";
            if (this.enabled || (t = "disabled"), this.touchCaptured && (t = "down"), this._selected) {
                var e = t + "AndSelected", i = this.skin;
                return i && i.hasState(e) ? e : "disabled" == t ? "disabled" : "down";
            }
            return t;
        }, o;
    }(t.Component);
    t.ItemRenderer = o, i(o.prototype, "eui.ItemRenderer", [ "eui.IItemRenderer" ]), 
    t.registerBindable(o.prototype, "data");
}(r || (r = {}));

!function(t) {
    var o = t.sys.UIComponentImpl, r = function(i) {
        function r(t) {
            var e = i.call(this) || this;
            return e.$styleSetMap = {
                fontFamily: !0,
                size: !0,
                bold: !0,
                italic: !0,
                textAlign: !0,
                verticalAlign: !0,
                lineSpacing: !0,
                textColor: !0,
                wordWrap: !0,
                displayAsPassword: !0,
                strokeColor: !0,
                stroke: !0,
                maxChars: !0,
                multiline: !0,
                border: !0,
                borderColor: !0,
                background: !0,
                backgroundColor: !0
            }, e.$revertStyle = {}, e.$style = null, e.$changeFromStyle = !1, e._widthConstraint = NaN, 
            e.initializeUIValues(), e.text = t, e;
        }
        return n(r, i), Object.defineProperty(r.prototype, "style", {
            get: function() {
                return this.$style;
            },
            set: function(t) {
                this.$setStyle(t);
            },
            enumerable: !0,
            configurable: !0
        }), r.prototype.$setStyle = function(t) {
            if (this.$style != t) {
                this.$style = t;
                var i = e.getImplementation("eui.Theme");
                if (i) {
                    this.$changeFromStyle = !0;
                    for (var n in this.$revertStyle) this[n] = this.$revertStyle[n];
                    if (this.$revertStyle = {}, null == t) return void (this.$changeFromStyle = !1);
                    for (var o = t.split(","), r = 0; r < o.length; r++) {
                        var s = i.$getStyleConfig(o[r]);
                        if (s) for (var n in s) if (this.$styleSetMap[n]) {
                            var a = this[n];
                            this[n] = s[n], this.$revertStyle[n] = a;
                        }
                    }
                    this.$changeFromStyle = !1;
                }
            }
        }, r.prototype.$setFontFamily = function(t) {
            return this.$changeFromStyle || (delete this.$revertStyle.fontFanily, this.$styleSetMap.fontFanily = !1), 
            i.prototype.$setFontFamily.call(this, t);
        }, r.prototype.$setSize = function(t) {
            return this.$changeFromStyle || (delete this.$revertStyle.size, this.$styleSetMap.size = !1), 
            i.prototype.$setSize.call(this, t);
        }, r.prototype.$setBold = function(t) {
            return this.$changeFromStyle || (delete this.$revertStyle.bold, this.$styleSetMap.bold = !1), 
            i.prototype.$setBold.call(this, t);
        }, r.prototype.$setItalic = function(t) {
            return this.$changeFromStyle || (delete this.$revertStyle.italic, this.$styleSetMap.italic = !1), 
            i.prototype.$setItalic.call(this, t);
        }, r.prototype.$setTextAlign = function(t) {
            return this.$changeFromStyle || (delete this.$revertStyle.textAlign, this.$styleSetMap.textAlign = !1), 
            i.prototype.$setTextAlign.call(this, t);
        }, r.prototype.$setVerticalAlign = function(t) {
            return this.$changeFromStyle || (delete this.$revertStyle.verticalAlign, this.$styleSetMap.verticalAlign = !1), 
            i.prototype.$setVerticalAlign.call(this, t);
        }, r.prototype.$setLineSpacing = function(t) {
            return this.$changeFromStyle || (delete this.$revertStyle.lineSpacing, this.$styleSetMap.lineSpacing = !1), 
            i.prototype.$setLineSpacing.call(this, t);
        }, r.prototype.$setTextColor = function(t) {
            return this.$changeFromStyle || (delete this.$revertStyle.textColor, this.$styleSetMap.textColor = !1), 
            i.prototype.$setTextColor.call(this, t);
        }, r.prototype.$setWordWrap = function(t) {
            this.$changeFromStyle || (delete this.$revertStyle.wordWrap, this.$styleSetMap.wordWrap = !1), 
            i.prototype.$setWordWrap.call(this, t);
        }, r.prototype.$setDisplayAsPassword = function(t) {
            return this.$changeFromStyle || (delete this.$revertStyle.displayAsPassword, this.$styleSetMap.displayAsPassword = !1), 
            i.prototype.$setDisplayAsPassword.call(this, t);
        }, r.prototype.$setStrokeColor = function(t) {
            return this.$changeFromStyle || (delete this.$revertStyle.strokeColor, this.$styleSetMap.strokeColor = !1), 
            i.prototype.$setStrokeColor.call(this, t);
        }, r.prototype.$setStroke = function(t) {
            return this.$changeFromStyle || (delete this.$revertStyle.stroke, this.$styleSetMap.stroke = !1), 
            i.prototype.$setStroke.call(this, t);
        }, r.prototype.$setMaxChars = function(t) {
            return this.$changeFromStyle || (delete this.$revertStyle.maxChars, this.$styleSetMap.maxChars = !1), 
            i.prototype.$setMaxChars.call(this, t);
        }, r.prototype.$setMultiline = function(t) {
            return this.$changeFromStyle || (delete this.$revertStyle.multiline, this.$styleSetMap.multiline = !1), 
            i.prototype.$setMultiline.call(this, t);
        }, r.prototype.$setBorder = function(t) {
            this.$changeFromStyle || (delete this.$revertStyle.border, this.$styleSetMap.border = !1), 
            i.prototype.$setBorder.call(this, t);
        }, r.prototype.$setBorderColor = function(t) {
            this.$changeFromStyle || (delete this.$revertStyle.borderColor, this.$styleSetMap.borderColor = !1), 
            i.prototype.$setBorderColor.call(this, t);
        }, r.prototype.$setBackground = function(t) {
            this.$changeFromStyle || (delete this.$revertStyle.background, this.$styleSetMap.background = !1), 
            i.prototype.$setBackground.call(this, t);
        }, r.prototype.$setBackgroundColor = function(t) {
            this.$changeFromStyle || (delete this.$revertStyle.backgroundColor, this.$styleSetMap.backgroundColor = !1), 
            i.prototype.$setBackgroundColor.call(this, t);
        }, r.prototype.$invalidateTextField = function() {
            i.prototype.$invalidateTextField.call(this), this.invalidateSize();
        }, r.prototype.$setWidth = function(t) {
            var e = i.prototype.$setWidth.call(this, t), n = o.prototype.$setWidth.call(this, t);
            return e && n;
        }, r.prototype.$setHeight = function(t) {
            var e = i.prototype.$setHeight.call(this, t), n = o.prototype.$setHeight.call(this, t);
            return e && n;
        }, r.prototype.$setText = function(e) {
            var n = i.prototype.$setText.call(this, e);
            return t.PropertyEvent.dispatchPropertyEvent(this, t.PropertyEvent.PROPERTY_CHANGE, "text"), 
            n;
        }, r.prototype.createChildren = function() {}, r.prototype.childrenCreated = function() {}, 
        r.prototype.commitProperties = function() {}, r.prototype.measure = function() {
            var t = this.$UIComponent, e = this.$TextField[3], n = NaN;
            isNaN(this._widthConstraint) ? isNaN(t[8]) ? 1e5 != t[13] && (n = t[13]) : n = t[8] : (n = this._widthConstraint, 
            this._widthConstraint = NaN), i.prototype.$setWidth.call(this, n), this.setMeasuredSize(this.textWidth, this.textHeight), 
            i.prototype.$setWidth.call(this, e);
        }, r.prototype.updateDisplayList = function(t, e) {
            i.prototype.$setWidth.call(this, t), i.prototype.$setHeight.call(this, e);
        }, r.prototype.invalidateParentLayout = function() {}, r.prototype.setMeasuredSize = function(t, e) {}, 
        r.prototype.invalidateProperties = function() {}, r.prototype.validateProperties = function() {}, 
        r.prototype.invalidateSize = function() {}, r.prototype.validateSize = function(t) {}, 
        r.prototype.invalidateDisplayList = function() {}, r.prototype.validateDisplayList = function() {}, 
        r.prototype.validateNow = function() {}, r.prototype.setLayoutBoundsSize = function(t, e) {
            if (o.prototype.setLayoutBoundsSize.call(this, t, e), isNaN(t) || t === this._widthConstraint || 0 == t) this._widthConstraint = t; else {
                this._widthConstraint = t;
                var i = this.$UIComponent;
                isNaN(i[9]) && t != i[16] && this.invalidateSize();
            }
        }, r.prototype.setLayoutBoundsPosition = function(t, e) {}, r.prototype.getLayoutBounds = function(t) {}, 
        r.prototype.getPreferredBounds = function(t) {}, r;
    }(e.TextField);
    t.Label = r, i(r.prototype, "eui.Label", [ "eui.UIComponent", "egret.DisplayObject", "eui.IDisplayText" ]), 
    t.sys.implementUIComponent(r, e.TextField), t.registerBindable(r.prototype, "text");
}(r || (r = {}));

!function(t) {
    var o = function(i) {
        function o() {
            var t = null !== i && i.apply(this, arguments) || this;
            return t.allowMultipleSelection = !1, t._selectedIndices = [], t.isValidIndex = function(e, i, n) {
                return t.$dataProvider && e >= 0 && e < t.$dataProvider.length && e % 1 == 0;
            }, t;
        }
        return n(o, i), Object.defineProperty(o.prototype, "selectedIndices", {
            get: function() {
                return this._proposedSelectedIndices ? this._proposedSelectedIndices : this._selectedIndices;
            },
            set: function(t) {
                this.setSelectedIndices(t, !1);
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(o.prototype, "selectedIndex", {
            get: function() {
                return this._proposedSelectedIndices ? this._proposedSelectedIndices.length > 0 ? this._proposedSelectedIndices[0] : -1 : this.$getSelectedIndex();
            },
            set: function(t) {
                this.setSelectedIndex(t);
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(o.prototype, "selectedItems", {
            get: function() {
                var t = [], e = this.selectedIndices;
                if (e) for (var i = e.length, n = 0; i > n; n++) t[n] = this.$dataProvider.getItemAt(e[n]);
                return t;
            },
            set: function(t) {
                var e = [];
                if (t) for (var i = t.length, n = 0; i > n; n++) {
                    var o = this.$dataProvider.getItemIndex(t[n]);
                    if (-1 != o && e.splice(0, 0, o), -1 == o) {
                        e = [];
                        break;
                    }
                }
                this.setSelectedIndices(e, !1);
            },
            enumerable: !0,
            configurable: !0
        }), o.prototype.setSelectedIndices = function(t, e) {
            var i = this.$ListBase;
            e && (i[4] = i[4] || e), this._proposedSelectedIndices = t || [], this.invalidateProperties();
        }, o.prototype.commitProperties = function() {
            i.prototype.commitProperties.call(this), this._proposedSelectedIndices && this.commitSelection();
        }, o.prototype.commitSelection = function(n) {
            void 0 === n && (n = !0);
            var o = this.$ListBase, r = o[3];
            if (this._proposedSelectedIndices) {
                if (this._proposedSelectedIndices = this._proposedSelectedIndices.filter(this.isValidIndex), 
                !this.allowMultipleSelection && this._proposedSelectedIndices.length > 0) {
                    var s = [];
                    s.push(this._proposedSelectedIndices[0]), this._proposedSelectedIndices = s;
                }
                this._proposedSelectedIndices.length > 0 ? o[2] = this._proposedSelectedIndices[0] : o[2] = -1;
            }
            var a = i.prototype.commitSelection.call(this, !1);
            if (!a) return this._proposedSelectedIndices = null, !1;
            var h = this.$getSelectedIndex();
            return h > t.ListBase.NO_SELECTION && (this._proposedSelectedIndices ? -1 == this._proposedSelectedIndices.indexOf(h) && this._proposedSelectedIndices.push(h) : this._proposedSelectedIndices = [ h ]), 
            this._proposedSelectedIndices && (-1 != this._proposedSelectedIndices.indexOf(r) && this.itemSelected(r, !0), 
            this.commitMultipleSelection()), n && a && (o[4] && (this.dispatchEventWith(e.Event.CHANGE), 
            o[4] = !1), t.PropertyEvent.dispatchPropertyEvent(this, t.PropertyEvent.PROPERTY_CHANGE, "selectedIndex"), 
            t.PropertyEvent.dispatchPropertyEvent(this, t.PropertyEvent.PROPERTY_CHANGE, "selectedItem")), 
            a;
        }, o.prototype.commitMultipleSelection = function() {
            var t, e, i = [], n = [], o = this._selectedIndices, r = this._proposedSelectedIndices;
            if (o.length > 0 && r.length > 0) {
                for (e = r.length, t = 0; e > t; t++) -1 == o.indexOf(r[t]) && n.push(r[t]);
                for (e = o.length, t = 0; e > t; t++) -1 == r.indexOf(o[t]) && i.push(o[t]);
            } else o.length > 0 ? i = o : r.length > 0 && (n = r);
            if (this._selectedIndices = r, i.length > 0) for (e = i.length, t = 0; e > t; t++) this.itemSelected(i[t], !1);
            if (n.length > 0) for (e = n.length, t = 0; e > t; t++) this.itemSelected(n[t], !0);
            this._proposedSelectedIndices = null;
        }, o.prototype.$isItemIndexSelected = function(t) {
            return this.allowMultipleSelection ? -1 != this._selectedIndices.indexOf(t) : i.prototype.$isItemIndexSelected.call(this, t);
        }, o.prototype.dataProviderRefreshed = function() {
            this.allowMultipleSelection || i.prototype.dataProviderRefreshed.call(this);
        }, o.prototype.calculateSelectedIndices = function(t) {
            var e = [], i = this._selectedIndices, n = i.length;
            if (n > 0) {
                if (1 == n && i[0] == t) return this.$ListBase[0] ? (e.splice(0, 0, i[0]), e) : e;
                for (var o = !1, r = 0; n > r; r++) i[r] == t ? o = !0 : i[r] != t && e.splice(0, 0, i[r]);
                return o || e.splice(0, 0, t), e;
            }
            return e.splice(0, 0, t), e;
        }, o.prototype.onRendererTouchEnd = function(e) {
            if (this.allowMultipleSelection) {
                var n = e.currentTarget;
                if (n != this.$ListBase[7]) return;
                this.setSelectedIndices(this.calculateSelectedIndices(n.itemIndex), !0), t.ItemTapEvent.dispatchItemTapEvent(this, t.ItemTapEvent.ITEM_TAP, n);
            } else i.prototype.onRendererTouchEnd.call(this, e);
        }, o;
    }(t.ListBase);
    t.List = o, i(o.prototype, "eui.List");
}(r || (r = {}));

!function(t) {
    var o = function(i) {
        function o() {
            var t = i.call(this) || this;
            return t.closeButton = null, t.moveArea = null, t.titleDisplay = null, t._title = "", 
            t.offsetPointX = 0, t.offsetPointY = 0, t.addEventListener(e.TouchEvent.TOUCH_BEGIN, t.onWindowTouchBegin, t, !1, 100), 
            t;
        }
        return n(o, i), o.prototype.onWindowTouchBegin = function(t) {
            this.$parent.addChild(this);
        }, Object.defineProperty(o.prototype, "elementsContent", {
            set: function(t) {
                if (t) for (var e = t.length, i = 0; e > i; i++) this.addChild(t[i]);
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(o.prototype, "title", {
            get: function() {
                return this._title;
            },
            set: function(t) {
                this._title = t, this.titleDisplay && (this.titleDisplay.text = this.title);
            },
            enumerable: !0,
            configurable: !0
        }), o.prototype.partAdded = function(t, n) {
            i.prototype.partAdded.call(this, t, n), n == this.titleDisplay ? this.titleDisplay.text = this._title : n == this.moveArea ? this.moveArea.addEventListener(e.TouchEvent.TOUCH_BEGIN, this.onTouchBegin, this) : n == this.closeButton && this.closeButton.addEventListener(e.TouchEvent.TOUCH_TAP, this.onCloseButtonClick, this);
        }, o.prototype.partRemoved = function(t, n) {
            i.prototype.partRemoved.call(this, t, n), n == this.moveArea ? this.moveArea.removeEventListener(e.TouchEvent.TOUCH_BEGIN, this.onTouchBegin, this) : n == this.closeButton && this.closeButton.removeEventListener(e.TouchEvent.TOUCH_TAP, this.onCloseButtonClick, this);
        }, o.prototype.onCloseButtonClick = function(e) {
            t.UIEvent.dispatchUIEvent(this, t.UIEvent.CLOSING, !0, !0) && this.close();
        }, o.prototype.close = function() {
            this.$parent && this.$parent.removeChild(this);
        }, o.prototype.onTouchBegin = function(t) {
            this.$includeInLayout = !1, this.offsetPointX = this.x - t.$stageX, this.offsetPointY = this.y - t.$stageY, 
            this.$stage.addEventListener(e.TouchEvent.TOUCH_MOVE, this.onTouchMove, this), this.$stage.addEventListener(e.TouchEvent.TOUCH_END, this.onTouchEnd, this);
        }, o.prototype.onTouchMove = function(t) {
            this.x = t.$stageX + this.offsetPointX, this.y = t.$stageY + this.offsetPointY;
        }, o.prototype.onTouchEnd = function(t) {
            var i = t.$currentTarget;
            i.removeEventListener(e.TouchEvent.TOUCH_MOVE, this.onTouchMove, this), i.removeEventListener(e.TouchEvent.TOUCH_END, this.onTouchEnd, this);
        }, o;
    }(t.Component);
    t.Panel = o, i(o.prototype, "eui.Panel"), t.registerProperty(o, "elementsContent", "Array", !0);
}(r || (r = {}));

!function(t) {
    var o = function(i) {
        function o() {
            var e = i.call(this) || this;
            return e.thumb = null, e.labelDisplay = null, e._labelFunction = null, e._slideDuration = 500, 
            e._direction = t.Direction.LTR, e.slideToValue = 0, e.animationValue = 0, e.thumbInitX = 0, 
            e.thumbInitY = 0, e.animation = new t.sys.Animation(e.animationUpdateHandler, e), 
            e;
        }
        return n(o, i), Object.defineProperty(o.prototype, "labelFunction", {
            get: function() {
                return this._labelFunction;
            },
            set: function(t) {
                this._labelFunction != t && (this._labelFunction = t, this.invalidateDisplayList());
            },
            enumerable: !0,
            configurable: !0
        }), o.prototype.valueToLabel = function(t, e) {
            return null != this.labelFunction ? this._labelFunction(t, e) : t + " / " + e;
        }, Object.defineProperty(o.prototype, "slideDuration", {
            get: function() {
                return this._slideDuration;
            },
            set: function(t) {
                t = 0 | +t, this._slideDuration !== t && (this._slideDuration = t, this.animation.isPlaying && (this.animation.stop(), 
                this.setValue(this.slideToValue)));
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(o.prototype, "direction", {
            get: function() {
                return this._direction;
            },
            set: function(t) {
                this._direction != t && (this.thumb && (this.thumb.x = this.thumbInitX), this.thumb && (this.thumb.y = this.thumbInitY), 
                this._direction = t, this.invalidateDisplayList());
            },
            enumerable: !0,
            configurable: !0
        }), o.prototype.$setValue = function(t) {
            if (this.value === t) return !1;
            var e = this.$Range, n = i.prototype.$setValue.call(this, t);
            if (this._slideDuration > 0 && this.$stage) {
                this.validateProperties();
                var o = this.animation;
                if (o.isPlaying && (this.animationValue = this.slideToValue, this.invalidateDisplayList(), 
                o.stop()), this.slideToValue = this.nearestValidValue(t, e[7]), this.slideToValue === this.animationValue) return n;
                var r = this._slideDuration * (Math.abs(this.animationValue - this.slideToValue) / (e[0] - e[2]));
                o.duration = r === 1 / 0 ? 0 : r, o.from = this.animationValue, o.to = this.slideToValue, 
                o.play();
            } else this.animationValue = this.value;
            return n;
        }, o.prototype.animationUpdateHandler = function(t) {
            var e = this.$Range, i = this.nearestValidValue(t.currentValue, e[7]);
            this.animationValue = Math.min(e[0], Math.max(e[2], i)), this.invalidateDisplayList();
        }, o.prototype.partAdded = function(t, n) {
            i.prototype.partAdded.call(this, t, n), n === this.thumb && (this.thumb.x && (this.thumbInitX = this.thumb.x), 
            this.thumb.y && (this.thumbInitY = this.thumb.y), this.thumb.addEventListener(e.Event.RESIZE, this.onThumbResize, this));
        }, o.prototype.partRemoved = function(t, n) {
            i.prototype.partRemoved.call(this, t, n), n === this.thumb && this.thumb.removeEventListener(e.Event.RESIZE, this.onThumbResize, this);
        }, o.prototype.onThumbResize = function(t) {
            this.updateSkinDisplayList();
        }, o.prototype.updateSkinDisplayList = function() {
            var i = this.animation.isPlaying ? this.animationValue : this.value, n = this.maximum, o = this.thumb;
            if (o) {
                var r = o.width, s = o.height, a = Math.round(i / n * r);
                (0 > a || a === 1 / 0) && (a = 0);
                var h = Math.round(i / n * s);
                (0 > h || h === 1 / 0) && (h = 0);
                var l = o.$scrollRect;
                l || (l = e.$TempRectangle), l.setTo(0, 0, r, s);
                var u = o.x - l.x, p = o.y - l.y;
                switch (this._direction) {
                  case t.Direction.LTR:
                    l.width = a, o.x = u;
                    break;

                  case t.Direction.RTL:
                    l.width = a, l.x = r - a, o.x = l.x;
                    break;

                  case t.Direction.TTB:
                    l.height = h, o.y = p;
                    break;

                  case t.Direction.BTT:
                    l.height = h, l.y = s - h, o.y = l.y;
                }
                o.scrollRect = l;
            }
            this.labelDisplay && (this.labelDisplay.text = this.valueToLabel(i, n));
        }, o;
    }(t.Range);
    t.ProgressBar = o, i(o.prototype, "eui.ProgressBar");
}(r || (r = {}));

!function(t) {
    var e = {}, o = function(i) {
        function o() {
            var t = i.call(this) || this;
            return t.$indexNumber = 0, t.$radioButtonGroup = null, t._group = null, t.groupChanged = !1, 
            t._groupName = "radioGroup", t._value = null, t.groupName = "radioGroup", t;
        }
        return n(o, i), Object.defineProperty(o.prototype, "enabled", {
            get: function() {
                return !!this.$Component[3] && (!this.$radioButtonGroup || this.$radioButtonGroup.$enabled);
            },
            set: function(t) {
                this.$setEnabled(t);
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(o.prototype, "group", {
            get: function() {
                if (!this._group && this._groupName) {
                    var i = e[this._groupName];
                    i || (i = new t.RadioButtonGroup(), i.$name = this._groupName, e[this._groupName] = i), 
                    this._group = i;
                }
                return this._group;
            },
            set: function(t) {
                this._group != t && (this.$radioButtonGroup && this.$radioButtonGroup.$removeInstance(this, !1), 
                this._group = t, this._groupName = t ? this.group.$name : "radioGroup", this.groupChanged = !0, 
                this.invalidateProperties(), this.invalidateDisplayList());
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(o.prototype, "groupName", {
            get: function() {
                return this._groupName;
            },
            set: function(t) {
                t && "" != t && (this._groupName = t, this.$radioButtonGroup && this.$radioButtonGroup.$removeInstance(this, !1), 
                this._group = null, this.groupChanged = !0, this.invalidateProperties(), this.invalidateDisplayList());
            },
            enumerable: !0,
            configurable: !0
        }), o.prototype.$setSelected = function(t) {
            var e = i.prototype.$setSelected.call(this, t);
            return this.invalidateDisplayList(), e;
        }, Object.defineProperty(o.prototype, "value", {
            get: function() {
                return this._value;
            },
            set: function(e) {
                this._value != e && (this._value = e, this.$selected && this.group && t.PropertyEvent.dispatchPropertyEvent(this.group, t.PropertyEvent.PROPERTY_CHANGE, "selectedValue"));
            },
            enumerable: !0,
            configurable: !0
        }), o.prototype.commitProperties = function() {
            this.groupChanged && (this.addToGroup(), this.groupChanged = !1), i.prototype.commitProperties.call(this);
        }, o.prototype.updateDisplayList = function(t, e) {
            i.prototype.updateDisplayList.call(this, t, e), this.group && (this.$selected ? this._group.$setSelection(this, !1) : this.group.selection == this && this._group.$setSelection(null, !1));
        }, o.prototype.buttonReleased = function() {
            this.enabled && !this.selected && (this.$radioButtonGroup || this.addToGroup(), 
            i.prototype.buttonReleased.call(this), this.group.$setSelection(this, !0));
        }, o.prototype.addToGroup = function() {
            var t = this.group;
            return t && t.$addInstance(this), t;
        }, o;
    }(t.ToggleButton);
    t.RadioButton = o, i(o.prototype, "eui.RadioButton");
}(r || (r = {}));

!function(t) {
    function o(t, e) {
        var i = t.parent, n = e.parent;
        if (!i || !n) return 0;
        var r = t.$nestLevel, s = e.$nestLevel, a = 0, h = 0;
        return i == n && (a = i.getChildIndex(t), h = n.getChildIndex(e)), r > s || a > h ? 1 : s > r || h > a ? -1 : t == e ? 0 : o(i, n);
    }
    var r = 0, s = function(i) {
        function s() {
            var t = i.call(this) || this;
            return t.$name = null, t.radioButtons = [], t.$enabled = !0, t._selectedValue = null, 
            t._selection = null, t.$name = "_radioButtonGroup" + r++, t;
        }
        return n(s, i), s.prototype.getRadioButtonAt = function(t) {
            return this.radioButtons[t];
        }, Object.defineProperty(s.prototype, "enabled", {
            get: function() {
                return this.$enabled;
            },
            set: function(t) {
                if (t = !!t, this.$enabled !== t) {
                    this.$enabled = t;
                    for (var e = this.radioButtons, i = e.length, n = 0; i > n; n++) e[n].invalidateState();
                }
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(s.prototype, "numRadioButtons", {
            get: function() {
                return this.radioButtons.length;
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(s.prototype, "selectedValue", {
            get: function() {
                return this.selection ? null != this.selection.value ? this.selection.value : this.selection.label : null;
            },
            set: function(e) {
                if (this._selectedValue = e, null != e) for (var i = this.numRadioButtons, n = 0; i > n; n++) {
                    var o = this.radioButtons[n];
                    if (o.value == e || o.label == e) {
                        this.changeSelection(n, !1), this._selectedValue = null, t.PropertyEvent.dispatchPropertyEvent(this, t.PropertyEvent.PROPERTY_CHANGE, "selectedValue");
                        break;
                    }
                } else this.$setSelection(null, !1);
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(s.prototype, "selection", {
            get: function() {
                return this._selection;
            },
            set: function(t) {
                this._selection != t && this.$setSelection(t, !1);
            },
            enumerable: !0,
            configurable: !0
        }), s.prototype.$addInstance = function(t) {
            t.addEventListener(e.Event.REMOVED_FROM_STAGE, this.removedHandler, this);
            var i = this.radioButtons;
            i.push(t), i.sort(o);
            for (var n = i.length, r = 0; n > r; r++) i[r].$indexNumber = r;
            this._selectedValue && (this.selectedValue = this._selectedValue), 1 == t.selected && (this.selection = t), 
            t.$radioButtonGroup = this, t.invalidateState();
        }, s.prototype.$removeInstance = function(t, i) {
            if (t) for (var n = !1, o = this.radioButtons, r = o.length, s = 0; r > s; s++) {
                var a = o[s];
                n ? a.$indexNumber = a.$indexNumber - 1 : a == t && (i && t.addEventListener(e.Event.ADDED_TO_STAGE, this.addedHandler, this), 
                t == this._selection && (this._selection = null), t.$radioButtonGroup = null, t.invalidateState(), 
                this.radioButtons.splice(s, 1), n = !0, s--, r--);
            }
        }, s.prototype.$setSelection = function(i, n) {
            if (this._selection == i) return !1;
            if (i) {
                for (var o = this.numRadioButtons, r = 0; o > r; r++) if (i == this.getRadioButtonAt(r)) {
                    this.changeSelection(r, n);
                    break;
                }
            } else this._selection && (this._selection.selected = !1, this._selection = null, 
            n && this.dispatchEventWith(e.Event.CHANGE));
            return t.PropertyEvent.dispatchPropertyEvent(this, t.PropertyEvent.PROPERTY_CHANGE, "selectedValue"), 
            !0;
        }, s.prototype.changeSelection = function(t, i) {
            var n = this.getRadioButtonAt(t);
            n && n != this._selection && (this._selection && (this._selection.selected = !1), 
            this._selection = n, this._selection.selected = !0, i && this.dispatchEventWith(e.Event.CHANGE));
        }, s.prototype.addedHandler = function(t) {
            var i = t.target;
            i == t.currentTarget && (i.removeEventListener(e.Event.ADDED_TO_STAGE, this.addedHandler, this), 
            this.$addInstance(i));
        }, s.prototype.removedHandler = function(t) {
            var i = t.target;
            i == t.currentTarget && (i.removeEventListener(e.Event.REMOVED_FROM_STAGE, this.removedHandler, this), 
            this.$removeInstance(i, !0));
        }, s;
    }(e.EventDispatcher);
    t.RadioButtonGroup = s, i(s.prototype, "eui.RadioButtonGroup"), t.registerBindable(s.prototype, "selectedValue");
}(r || (r = {}));

!function(t) {
    var o = function(t) {
        function i(i, n, o) {
            var r = t.call(this) || this;
            return r.$fillColor = 0, r.$fillAlpha = 1, r.$strokeColor = 4473924, r.$strokeAlpha = 1, 
            r.$strokeWeight = 0, r.$ellipseWidth = 0, r.$ellipseHeight = 0, r.touchChildren = !1, 
            r.$graphics = new e.Graphics(), r.$graphics.$setTarget(r), r.width = i, r.height = n, 
            r.fillColor = o, r;
        }
        return n(i, t), i.prototype.createNativeDisplayObject = function() {
            this.$nativeDisplayObject = new egret_native.NativeDisplayObject(8);
        }, Object.defineProperty(i.prototype, "graphics", {
            get: function() {
                return this.$graphics;
            },
            enumerable: !0,
            configurable: !0
        }), i.prototype.$measureContentBounds = function(t) {
            this.$graphics && t.setTo(0, 0, this.width, this.height);
        }, Object.defineProperty(i.prototype, "fillColor", {
            get: function() {
                return this.$fillColor;
            },
            set: function(t) {
                void 0 != t && this.$fillColor != t && (this.$fillColor = t, this.invalidateDisplayList());
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(i.prototype, "fillAlpha", {
            get: function() {
                return this.$fillAlpha;
            },
            set: function(t) {
                this.$fillAlpha != t && (this.$fillAlpha = t, this.invalidateDisplayList());
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(i.prototype, "strokeColor", {
            get: function() {
                return this.$strokeColor;
            },
            set: function(t) {
                this.$strokeColor != t && (this.$strokeColor = t, this.invalidateDisplayList());
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(i.prototype, "strokeAlpha", {
            get: function() {
                return this.$strokeAlpha;
            },
            set: function(t) {
                this.$strokeAlpha != t && (this.$strokeAlpha = t, this.invalidateDisplayList());
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(i.prototype, "strokeWeight", {
            get: function() {
                return this.$strokeWeight;
            },
            set: function(t) {
                this.$strokeWeight != t && (this.$strokeWeight = t, this.invalidateDisplayList());
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(i.prototype, "ellipseWidth", {
            get: function() {
                return this.$ellipseWidth;
            },
            set: function(t) {
                this.$ellipseWidth != t && (this.$ellipseWidth = t, this.invalidateDisplayList());
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(i.prototype, "ellipseHeight", {
            get: function() {
                return this.$ellipseHeight;
            },
            set: function(t) {
                this.$ellipseHeight != t && (this.$ellipseHeight = t, this.invalidateDisplayList());
            },
            enumerable: !0,
            configurable: !0
        }), i.prototype.updateDisplayList = function(t, e) {
            var i = this.graphics;
            i.clear(), this.$strokeWeight > 0 && (i.beginFill(this.$fillColor, 0), i.lineStyle(this.$strokeWeight, this.$strokeColor, this.$strokeAlpha, !0, "normal", "square", "miter"), 
            0 == this.$ellipseWidth && 0 == this.$ellipseHeight ? i.drawRect(this.$strokeWeight / 2, this.$strokeWeight / 2, t - this.$strokeWeight, e - this.$strokeWeight) : i.drawRoundRect(this.$strokeWeight / 2, this.$strokeWeight / 2, t - this.$strokeWeight, e - this.$strokeWeight, this.$ellipseWidth, this.$ellipseHeight), 
            i.endFill()), i.beginFill(this.$fillColor, this.$fillAlpha), i.lineStyle(this.$strokeWeight, this.$strokeColor, 0, !0, "normal", "square", "miter"), 
            0 == this.$ellipseWidth && 0 == this.$ellipseHeight ? i.drawRect(this.$strokeWeight, this.$strokeWeight, t - 2 * this.$strokeWeight, e - 2 * this.$strokeWeight) : i.drawRoundRect(this.$strokeWeight, this.$strokeWeight, t - 2 * this.$strokeWeight, e - 2 * this.$strokeWeight, this.$ellipseWidth, this.$ellipseHeight), 
            i.endFill();
        }, i.prototype.$onRemoveFromStage = function() {
            t.prototype.$onRemoveFromStage.call(this), this.$graphics && this.$graphics.$onRemoveFromStage();
        }, i;
    }(t.Component);
    t.Rect = o, i(o.prototype, "eui.Rect");
}(r || (r = {}));

!function(t) {
    var o, r = function(i) {
        function r() {
            var e = i.call(this) || this;
            e.$bounces = !0, e.horizontalScrollBar = null, e.verticalScrollBar = null;
            var n = new t.sys.TouchScroll(e.horizontalUpdateHandler, e.horizontalEndHandler, e), o = new t.sys.TouchScroll(e.verticalUpdateHandler, e.verticalEndHanlder, e);
            return e.$Scroller = {
                0: "auto",
                1: "auto",
                2: null,
                3: 0,
                4: 0,
                5: !1,
                6: !1,
                7: !1,
                8: n,
                9: o,
                10: null,
                11: !1,
                12: !1
            }, e;
        }
        return n(r, i), Object.defineProperty(r.prototype, "bounces", {
            get: function() {
                return this.$bounces;
            },
            set: function(t) {
                this.$bounces = !!t;
                var e = this.$Scroller[8];
                e && (e.$bounces = this.$bounces);
                var i = this.$Scroller[9];
                i && (i.$bounces = this.$bounces);
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(r.prototype, "throwSpeed", {
            get: function() {
                return this.$Scroller[8].$scrollFactor;
            },
            set: function(t) {
                0 > (t = +t) && (t = 0), this.$Scroller[8].$scrollFactor = t, this.$Scroller[9].$scrollFactor = t;
            },
            enumerable: !0,
            configurable: !0
        }), r.prototype.$getThrowInfo = function(e, i) {
            return o ? (o.currentPos = e, o.toPos = i) : o = new t.ScrollerThrowEvent(t.ScrollerThrowEvent.THROW, !1, !1, e, i), 
            o;
        }, Object.defineProperty(r.prototype, "scrollPolicyV", {
            get: function() {
                return this.$Scroller[0];
            },
            set: function(t) {
                var e = this.$Scroller;
                e[0] != t && (e[0] = t, this.checkScrollPolicy());
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(r.prototype, "scrollPolicyH", {
            get: function() {
                return this.$Scroller[1];
            },
            set: function(t) {
                var e = this.$Scroller;
                e[1] != t && (e[1] = t, this.checkScrollPolicy());
            },
            enumerable: !0,
            configurable: !0
        }), r.prototype.stopAnimation = function() {
            var e = this.$Scroller, i = e[9], n = e[8];
            i.animation.isPlaying ? t.UIEvent.dispatchUIEvent(this, t.UIEvent.CHANGE_END) : n.animation.isPlaying && t.UIEvent.dispatchUIEvent(this, t.UIEvent.CHANGE_END), 
            i.stop(), n.stop();
            var o = this.verticalScrollBar, r = this.horizontalScrollBar;
            o && o.autoVisibility && (o.visible = !1), r && r.autoVisibility && (r.visible = !1);
        }, Object.defineProperty(r.prototype, "viewport", {
            get: function() {
                return this.$Scroller[10];
            },
            set: function(t) {
                var e = this.$Scroller;
                t != e[10] && (this.uninstallViewport(), e[10] = t, e[11] = !1, this.installViewport());
            },
            enumerable: !0,
            configurable: !0
        }), r.prototype.installViewport = function() {
            var t = this.viewport;
            t && (this.addChildAt(t, 0), t.scrollEnabled = !0, t.addEventListener(e.TouchEvent.TOUCH_BEGIN, this.onTouchBeginCapture, this, !0), 
            t.addEventListener(e.TouchEvent.TOUCH_END, this.onTouchEndCapture, this, !0), t.addEventListener(e.TouchEvent.TOUCH_TAP, this.onTouchTapCapture, this, !0), 
            t.addEventListener(e.Event.REMOVED, this.onViewPortRemove, this)), this.horizontalScrollBar && (this.horizontalScrollBar.viewport = t), 
            this.verticalScrollBar && (this.verticalScrollBar.viewport = t);
        }, r.prototype.uninstallViewport = function() {
            this.horizontalScrollBar && (this.horizontalScrollBar.viewport = null), this.verticalScrollBar && (this.verticalScrollBar.viewport = null);
            var t = this.viewport;
            t && (t.scrollEnabled = !1, t.removeEventListener(e.TouchEvent.TOUCH_BEGIN, this.onTouchBeginCapture, this, !0), 
            t.removeEventListener(e.TouchEvent.TOUCH_END, this.onTouchEndCapture, this, !0), 
            t.removeEventListener(e.TouchEvent.TOUCH_TAP, this.onTouchTapCapture, this, !0), 
            t.removeEventListener(e.Event.REMOVED, this.onViewPortRemove, this), 0 == this.$Scroller[11] && this.removeChild(t));
        }, r.prototype.onViewPortRemove = function(t) {
            t.target == this.viewport && (this.$Scroller[11] = !0, this.viewport = null);
        }, r.prototype.setSkin = function(t) {
            i.prototype.setSkin.call(this, t);
            var e = this.viewport;
            e && this.addChildAt(e, 0);
        }, r.prototype.onTouchBeginCapture = function(t) {
            this.$Scroller[12] = !1, this.checkScrollPolicy() && this.onTouchBegin(t);
        }, r.prototype.onTouchEndCapture = function(t) {
            this.$Scroller[12] && (t.$bubbles = !1, this.dispatchBubbleEvent(t), t.$bubbles = !0, 
            t.stopPropagation(), this.onTouchEnd(t));
        }, r.prototype.onTouchTapCapture = function(t) {
            this.$Scroller[12] && (t.$bubbles = !1, this.dispatchBubbleEvent(t), t.$bubbles = !0, 
            t.stopPropagation());
        }, r.prototype.checkScrollPolicy = function() {
            var t = this.$Scroller, e = t[10];
            if (!e) return !1;
            var i, n = e.$UIComponent;
            switch (t[1]) {
              case "auto":
                i = e.contentWidth > n[10] || 0 !== e.scrollH;
                break;

              case "on":
                i = !0;
                break;

              case "off":
                i = !1;
            }
            t[6] = i;
            var o;
            switch (t[0]) {
              case "auto":
                o = e.contentHeight > n[11] || 0 !== e.scrollV;
                break;

              case "on":
                o = !0;
                break;

              case "off":
                o = !1;
            }
            return t[7] = o, i || o;
        }, r.prototype.onTouchBegin = function(t) {
            if (!t.isDefaultPrevented() && this.checkScrollPolicy()) {
                this.downTarget = t.target;
                var i = this.$Scroller;
                this.stopAnimation(), i[3] = t.$stageX, i[4] = t.$stageY, i[6] && i[8].start(t.$stageX), 
                i[7] && i[9].start(t.$stageY);
                var n = this.$stage;
                this.addEventListener(e.TouchEvent.TOUCH_MOVE, this.onTouchMove, this), n.addEventListener(e.TouchEvent.TOUCH_END, this.onTouchEnd, this, !0), 
                this.addEventListener(e.TouchEvent.TOUCH_CANCEL, this.onTouchCancel, this), this.addEventListener(e.Event.REMOVED_FROM_STAGE, this.onRemoveListeners, this), 
                this.tempStage = n;
            }
        }, r.prototype.onTouchMove = function(i) {
            if (!i.isDefaultPrevented()) {
                var n = this.$Scroller;
                if (!n[5]) {
                    var o = void 0;
                    o = !(Math.abs(n[3] - i.$stageX) < r.scrollThreshold);
                    var s = void 0;
                    if (s = !(Math.abs(n[4] - i.$stageY) < r.scrollThreshold), !o && !s) return;
                    if (!s && o && "off" == n[1]) return;
                    if (!o && s && "off" == n[0]) return;
                    n[12] = !0, n[5] = !0, this.dispatchCancelEvent(i);
                    var a = this.horizontalScrollBar, h = this.verticalScrollBar;
                    a && a.autoVisibility && n[6] && (a.visible = !0), h && h.autoVisibility && n[7] && (h.visible = !0), 
                    n[2] && n[2].reset(), t.UIEvent.dispatchUIEvent(this, t.UIEvent.CHANGE_START), this.$stage.addEventListener(e.TouchEvent.TOUCH_MOVE, this.onTouchMove, this);
                }
                i.preventDefault();
                var l = n[10], u = l.$UIComponent;
                n[6] && n[8].update(i.$stageX, l.contentWidth - u[10], l.scrollH), n[7] && n[9].update(i.$stageY, l.contentHeight - u[11], l.scrollV);
            }
        }, r.prototype.onTouchCancel = function(t) {
            this.$Scroller[5] || this.onRemoveListeners();
        }, r.prototype.dispatchBubbleEvent = function(t) {
            var i = this.$Scroller[10];
            if (i) {
                var n = e.Event.create(e.TouchEvent, t.type, t.bubbles, t.cancelable);
                n.$initTo(t.$stageX, t.$stageY, t.touchPointID);
                var o = this.downTarget;
                n.$setTarget(o);
                for (var r = this.$getPropagationList(o), s = r.length, a = (r.length, -1), h = 0; s > h; h++) if (r[h] === i) {
                    a = h;
                    break;
                }
                r.splice(0, r.length - a + 1), 0, this.$dispatchPropagationEvent(n, r, 0), e.Event.release(n);
            }
        }, r.prototype.dispatchCancelEvent = function(t) {
            var i = this.$Scroller[10];
            if (i) {
                var n = e.Event.create(e.TouchEvent, e.TouchEvent.TOUCH_CANCEL, t.bubbles, t.cancelable);
                n.$initTo(t.$stageX, t.$stageY, t.touchPointID);
                var o = this.downTarget;
                n.$setTarget(o);
                for (var r = this.$getPropagationList(o), s = r.length, a = .5 * r.length, h = -1, l = 0; s > l; l++) if (r[l] === i) {
                    h = l;
                    break;
                }
                r.splice(0, h + 1 - 2), r.splice(r.length - 1 - h + 2, h + 1 - 2), a -= h + 1, this.$dispatchPropagationEvent(n, r, a), 
                e.Event.release(n);
            }
        }, r.prototype.onTouchEnd = function(t) {
            var e = this.$Scroller;
            e[5] = !1, this.onRemoveListeners();
            var i = e[10], n = i.$UIComponent;
            e[8].isStarted() && e[8].finish(i.scrollH, i.contentWidth - n[10]), e[9].isStarted() && e[9].finish(i.scrollV, i.contentHeight - n[11]);
        }, r.prototype.onRemoveListeners = function() {
            var t = this.tempStage || this.$stage;
            this.removeEventListener(e.TouchEvent.TOUCH_MOVE, this.onTouchMove, this), t.removeEventListener(e.TouchEvent.TOUCH_END, this.onTouchEnd, this, !0), 
            t.removeEventListener(e.TouchEvent.TOUCH_MOVE, this.onTouchMove, this), this.removeEventListener(e.TouchEvent.TOUCH_CANCEL, this.onTouchCancel, this), 
            this.removeEventListener(e.Event.REMOVED_FROM_STAGE, this.onRemoveListeners, this);
        }, r.prototype.horizontalUpdateHandler = function(t) {
            this.$Scroller[10].scrollH = t, this.dispatchEventWith(e.Event.CHANGE);
        }, r.prototype.verticalUpdateHandler = function(t) {
            this.$Scroller[10].scrollV = t, this.dispatchEventWith(e.Event.CHANGE);
        }, r.prototype.horizontalEndHandler = function() {
            this.$Scroller[9].isPlaying() || this.onChangeEnd();
        }, r.prototype.verticalEndHanlder = function() {
            this.$Scroller[8].isPlaying() || this.onChangeEnd();
        }, r.prototype.onChangeEnd = function() {
            var i = this.$Scroller, n = this.horizontalScrollBar, o = this.verticalScrollBar;
            (n && n.visible || o && o.visible) && (i[2] || (i[2] = new e.Timer(200, 1), i[2].addEventListener(e.TimerEvent.TIMER_COMPLETE, this.onAutoHideTimer, this)), 
            i[2].reset(), i[2].start()), t.UIEvent.dispatchUIEvent(this, t.UIEvent.CHANGE_END);
        }, r.prototype.onAutoHideTimer = function(t) {
            var e = this.horizontalScrollBar, i = this.verticalScrollBar;
            e && e.autoVisibility && (e.visible = !1), i && i.autoVisibility && (i.visible = !1);
        }, r.prototype.updateDisplayList = function(t, e) {
            i.prototype.updateDisplayList.call(this, t, e);
            var n = this.viewport;
            n && (n.setLayoutBoundsSize(t, e), n.setLayoutBoundsPosition(0, 0));
        }, r.prototype.partAdded = function(t, e) {
            i.prototype.partAdded.call(this, t, e), e == this.horizontalScrollBar ? (this.horizontalScrollBar.touchChildren = !1, 
            this.horizontalScrollBar.touchEnabled = !1, this.horizontalScrollBar.viewport = this.viewport, 
            this.horizontalScrollBar.autoVisibility && (this.horizontalScrollBar.visible = !1)) : e == this.verticalScrollBar && (this.verticalScrollBar.touchChildren = !1, 
            this.verticalScrollBar.touchEnabled = !1, this.verticalScrollBar.viewport = this.viewport, 
            this.verticalScrollBar.autoVisibility && (this.verticalScrollBar.visible = !1));
        }, r.scrollThreshold = 5, r;
    }(t.Component);
    t.Scroller = r, i(r.prototype, "eui.Scroller"), t.registerProperty(r, "viewport", "eui.IViewport", !0);
}(r || (r = {}));

!function(t) {
    var o = function(i) {
        function o() {
            var e = null !== i && i.apply(this, arguments) || this;
            return e.maxWidth = 1e5, e.minWidth = 0, e.maxHeight = 1e5, e.minHeight = 0, e.width = NaN, 
            e.height = NaN, e.$elementsContent = [], e._hostComponent = null, e.$stateValues = new t.sys.StateValues(), 
            e;
        }
        return n(o, i), Object.defineProperty(o.prototype, "elementsContent", {
            set: function(t) {
                this.$elementsContent = t;
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(o.prototype, "hostComponent", {
            get: function() {
                return this._hostComponent;
            },
            set: function(i) {
                this._hostComponent != i && (this._hostComponent && this._hostComponent.removeEventListener(e.Event.ADDED_TO_STAGE, this.onAddedToStage, this), 
                this._hostComponent = i, this.$stateValues.parent = i, i && (this.commitCurrentState(), 
                this.$stateValues.intialized || (i.$stage ? this.initializeStates(i.$stage) : i.once(e.Event.ADDED_TO_STAGE, this.onAddedToStage, this))), 
                t.PropertyEvent.dispatchPropertyEvent(this, t.PropertyEvent.PROPERTY_CHANGE, "hostComponent"));
            },
            enumerable: !0,
            configurable: !0
        }), o.prototype.onAddedToStage = function(t) {
            this.initializeStates(this._hostComponent.$stage);
        }, o;
    }(e.EventDispatcher);
    t.Skin = o, i(o.prototype, "eui.Skin"), t.sys.mixin(o, t.sys.StateClient), t.registerProperty(o, "elementsContent", "Array", !0), 
    t.registerProperty(o, "states", "State[]"), t.registerBindable(o.prototype, "hostComponent");
}(r || (r = {}));

!function(t) {
    var o = function(i) {
        function o() {
            var t = i.call(this) || this;
            return t.indexBeingUpdated = !1, t.requireSelection = !0, t.useVirtualLayout = !1, 
            t;
        }
        return n(o, i), o.prototype.createChildren = function() {
            if (!this.$layout) {
                var e = new t.HorizontalLayout();
                e.gap = 0, e.horizontalAlign = t.JustifyAlign.JUSTIFY, e.verticalAlign = t.JustifyAlign.CONTENT_JUSTIFY, 
                this.$setLayout(e);
            }
            i.prototype.createChildren.call(this);
        }, o.prototype.$setDataProvider = function(n) {
            var o = this.$dataProvider;
            return o && o instanceof t.ViewStack && (o.removeEventListener(t.PropertyEvent.PROPERTY_CHANGE, this.onViewStackIndexChange, this), 
            this.removeEventListener(e.Event.CHANGE, this.onIndexChanged, this)), n && n instanceof t.ViewStack && (n.addEventListener(t.PropertyEvent.PROPERTY_CHANGE, this.onViewStackIndexChange, this), 
            this.addEventListener(e.Event.CHANGE, this.onIndexChanged, this)), i.prototype.$setDataProvider.call(this, n);
        }, o.prototype.onIndexChanged = function(t) {
            this.indexBeingUpdated = !0, this.$dataProvider.selectedIndex = this.selectedIndex, 
            this.indexBeingUpdated = !1;
        }, o.prototype.onViewStackIndexChange = function(t) {
            "selectedIndex" != t.property || this.indexBeingUpdated || this.setSelectedIndex(this.$dataProvider.selectedIndex, !1);
        }, o;
    }(t.ListBase);
    t.TabBar = o, i(o.prototype, "eui.TabBar");
}(r || (r = {}));

!function(t) {
    var o = e.FocusEvent, r = function(i) {
        function r() {
            var t = i.call(this) || this;
            return t.isFocus = !1, t.$TextInput = {
                0: null,
                1: null,
                2: null,
                3: null,
                4: null,
                5: null,
                6: "",
                7: null,
                8: e.TextFieldInputType.TEXT
            }, t;
        }
        return n(r, i), Object.defineProperty(r.prototype, "prompt", {
            get: function() {
                return this.promptDisplay ? this.promptDisplay.text : this.$TextInput[0];
            },
            set: function(t) {
                this.$TextInput[0] = t, this.promptDisplay && (this.promptDisplay.text = t), this.invalidateProperties(), 
                this.invalidateState();
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(r.prototype, "displayAsPassword", {
            get: function() {
                if (this.textDisplay) return this.textDisplay.displayAsPassword;
                var t = this.$TextInput[1];
                return t || !1;
            },
            set: function(t) {
                this.$TextInput[1] = t, this.textDisplay && (this.textDisplay.displayAsPassword = t), 
                this.invalidateProperties();
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(r.prototype, "inputType", {
            get: function() {
                return this.textDisplay ? this.textDisplay.inputType : this.$TextInput[8];
            },
            set: function(t) {
                this.$TextInput[8] = t, this.textDisplay && (this.textDisplay.inputType = t), this.invalidateProperties();
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(r.prototype, "textColor", {
            get: function() {
                return this.textDisplay ? this.textDisplay.textColor : this.$TextInput[2];
            },
            set: function(t) {
                this.$TextInput[2] = t, this.textDisplay && (this.textDisplay.textColor = t), this.invalidateProperties();
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(r.prototype, "maxChars", {
            get: function() {
                if (this.textDisplay) return this.textDisplay.maxChars;
                var t = this.$TextInput[3];
                return t || 0;
            },
            set: function(t) {
                this.$TextInput[3] = t, this.textDisplay && (this.textDisplay.maxChars = t), this.invalidateProperties();
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(r.prototype, "maxWidth", {
            get: function() {
                if (this.textDisplay) return this.textDisplay.maxWidth;
                var t = this.$TextInput[4];
                return t || 1e5;
            },
            set: function(t) {
                this.$TextInput[4] = t, this.textDisplay && (this.textDisplay.maxWidth = t), this.invalidateProperties();
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(r.prototype, "maxHeight", {
            get: function() {
                this.textDisplay;
                var t = this.$TextInput[5];
                return t || 1e5;
            },
            set: function(t) {
                this.$TextInput[5] = t, this.textDisplay && (this.textDisplay.maxHeight = t), this.invalidateProperties();
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(r.prototype, "text", {
            get: function() {
                return this.textDisplay ? this.textDisplay.text : this.$TextInput[6];
            },
            set: function(t) {
                this.$TextInput[6] = t, this.textDisplay && (this.textDisplay.text = t), this.invalidateProperties(), 
                this.invalidateState();
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(r.prototype, "restrict", {
            get: function() {
                return this.textDisplay ? this.textDisplay.restrict : this.$TextInput[7];
            },
            set: function(t) {
                this.$TextInput[7] = t, this.textDisplay && (this.textDisplay.restrict = t), this.invalidateProperties();
            },
            enumerable: !0,
            configurable: !0
        }), r.prototype.focusInHandler = function(t) {
            this.isFocus = !0, this.invalidateState();
        }, r.prototype.focusOutHandler = function(t) {
            this.isFocus = !1, this.invalidateState();
        }, r.prototype.getCurrentState = function() {
            var t = this.skin;
            return !this.prompt || this.isFocus || this.text ? this.enabled ? "normal" : "disabled" : this.enabled && t.hasState("normalWithPrompt") ? "normalWithPrompt" : !this.enabled && t.hasState("disabledWithPrompt") ? "disabledWithPrompt" : void 0;
        }, r.prototype.partAdded = function(e, n) {
            i.prototype.partAdded.call(this, e, n);
            var r = this.$TextInput;
            n == this.textDisplay ? (this.textDisplayAdded(), this.textDisplay instanceof t.EditableText && (this.textDisplay.addEventListener(o.FOCUS_IN, this.focusInHandler, this), 
            this.textDisplay.addEventListener(o.FOCUS_OUT, this.focusOutHandler, this))) : n == this.promptDisplay && r[0] && (this.promptDisplay.text = r[0]);
        }, r.prototype.partRemoved = function(e, n) {
            i.prototype.partRemoved.call(this, e, n), n == this.textDisplay ? (this.textDisplayRemoved(), 
            this.textDisplay instanceof t.EditableText && (this.textDisplay.removeEventListener(o.FOCUS_IN, this.focusInHandler, this), 
            this.textDisplay.removeEventListener(o.FOCUS_OUT, this.focusOutHandler, this))) : n == this.promptDisplay && (this.$TextInput[0] = this.promptDisplay.text);
        }, r.prototype.textDisplayAdded = function() {
            var t = this.$TextInput;
            t[1] && (this.textDisplay.displayAsPassword = t[1]), t[2] && (this.textDisplay.textColor = t[2]), 
            t[3] && (this.textDisplay.maxChars = t[3]), t[4] && (this.textDisplay.maxWidth = t[4]), 
            t[5] && (this.textDisplay.maxHeight = t[5]), t[6] && (this.textDisplay.text = t[6]), 
            t[7] && (this.textDisplay.restrict = t[7]), t[8] && (this.textDisplay.inputType = t[8]);
        }, r.prototype.textDisplayRemoved = function() {
            var t = this.$TextInput;
            t[1] = this.textDisplay.displayAsPassword, t[2] = this.textDisplay.textColor, t[3] = this.textDisplay.maxChars, 
            t[4] = this.textDisplay.maxWidth, t[5] = this.textDisplay.maxHeight, t[6] = this.textDisplay.text, 
            t[7] = this.textDisplay.restrict, t[8] = this.textDisplay.inputType;
        }, r;
    }(t.Component);
    t.TextInput = r, i(r.prototype, "eui.TextInput");
}(r || (r = {}));

!function(t) {
    var e = function(t) {
        function e() {
            return t.call(this) || this;
        }
        return n(e, t), e;
    }(t.ToggleButton);
    t.CheckBox = e, i(e.prototype, "eui.CheckBox");
}(r || (r = {}));

!function(t) {
    var e = function(t) {
        function e() {
            return t.call(this) || this;
        }
        return n(e, t), e;
    }(t.ToggleButton);
    t.ToggleSwitch = e, i(e.prototype, "eui.ToggleSwitch");
}(r || (r = {}));

!function(t) {
    var o = function(t) {
        function i() {
            var i = t.call(this) || this;
            return i.addEventListener(e.Event.ADDED_TO_STAGE, i.onAddToStage, i), i.addEventListener(e.Event.REMOVED_FROM_STAGE, i.onRemoveFromStage, i), 
            i;
        }
        return n(i, t), i.prototype.onAddToStage = function(t) {
            this.$stage.addEventListener(e.Event.RESIZE, this.onResize, this), this.onResize();
        }, i.prototype.onRemoveFromStage = function(t) {
            this.$stage.removeEventListener(e.Event.RESIZE, this.onResize, this);
        }, i.prototype.onResize = function(t) {
            var e = this.$stage;
            this.$setWidth(e.$stageWidth), this.$setHeight(e.$stageHeight);
        }, i;
    }(t.Group);
    t.UILayer = o, i(o.prototype, "eui.UILayer");
}(r || (r = {}));

!function(t) {
    var o = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return n(i, t), i.prototype.updateDisplayList = function(i, n) {
            t.prototype.updateDisplayList.call(this, i, n);
            var o = this.thumb, r = this.$viewport;
            if (o && r) {
                var s = e.$TempRectangle;
                o.getPreferredBounds(s);
                var a = s.height, h = s.x, l = r.scrollV, u = r.contentHeight, p = r.height;
                if (0 >= l) {
                    c = a * (1 - -l / (.5 * p));
                    c = Math.max(5, Math.round(c)), o.setLayoutBoundsSize(NaN, c), o.setLayoutBoundsPosition(h, 0);
                } else if (l >= u - p) {
                    var c = a * (1 - (l - u + p) / (.5 * p));
                    c = Math.max(5, Math.round(c)), o.setLayoutBoundsSize(NaN, c), o.setLayoutBoundsPosition(h, n - c);
                } else {
                    var d = (n - a) * l / (u - p);
                    o.setLayoutBoundsSize(NaN, NaN), o.setLayoutBoundsPosition(h, d);
                }
            }
        }, i.prototype.onPropertyChanged = function(t) {
            switch (t.property) {
              case "scrollV":
              case "contentHeight":
                this.invalidateDisplayList();
            }
        }, i;
    }(t.ScrollBarBase);
    t.VScrollBar = o, i(o.prototype, "eui.VScrollBar");
}(r || (r = {}));

!function(t) {
    var o = function(t) {
        function i() {
            return t.call(this) || this;
        }
        return n(i, t), i.prototype.pointToValue = function(t, e) {
            if (!this.thumb || !this.track) return 0;
            var i = this.$Range, n = i[0] - i[2], o = this.getThumbRange();
            return i[2] + (0 != o ? (o - e) / o * n : 0);
        }, i.prototype.getThumbRange = function() {
            var t = e.$TempRectangle;
            this.track.getLayoutBounds(t);
            var i = t.height;
            return this.thumb.getLayoutBounds(t), i - t.height;
        }, i.prototype.updateSkinDisplayList = function() {
            if (this.thumb && this.track) {
                var t = this.$Range, i = this.getThumbRange(), n = t[0] - t[2], o = n > 0 ? i - (this.pendingValue - t[2]) / n * i : 0, r = this.track.localToGlobal(0, o, e.$TempPoint), s = r.x, a = r.y, h = this.thumb.$parent.globalToLocal(s, a, e.$TempPoint).y, l = e.$TempRectangle, u = l.height;
                if (this.thumb.getLayoutBounds(l), this.thumb.setLayoutBoundsPosition(l.x, Math.round(h)), 
                this.trackHighlight) {
                    var p = this.trackHighlight.$parent.globalToLocal(s, a, e.$TempPoint).y;
                    this.trackHighlight.y = Math.round(p + u), this.trackHighlight.height = Math.round(i - p);
                }
            }
        }, i;
    }(t.SliderBase);
    t.VSlider = o, i(o.prototype, "eui.VSlider");
}(r || (r = {}));

!function(t) {
    var o = function(i) {
        function o() {
            var e = i.call(this) || this;
            return e._selectedChild = null, e.proposedSelectedIndex = t.ListBase.NO_PROPOSED_SELECTION, 
            e._selectedIndex = -1, e;
        }
        return n(o, i), Object.defineProperty(o.prototype, "layout", {
            get: function() {
                return this.$layout;
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(o.prototype, "selectedChild", {
            get: function() {
                var t = this.selectedIndex;
                return t >= 0 && t < this.numChildren ? this.getChildAt(t) : null;
            },
            set: function(t) {
                var e = this.getChildIndex(t);
                e >= 0 && e < this.numChildren && this.setSelectedIndex(e);
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(o.prototype, "selectedIndex", {
            get: function() {
                return this.proposedSelectedIndex != t.ListBase.NO_PROPOSED_SELECTION ? this.proposedSelectedIndex : this._selectedIndex;
            },
            set: function(t) {
                t = 0 | +t, this.setSelectedIndex(t);
            },
            enumerable: !0,
            configurable: !0
        }), o.prototype.setSelectedIndex = function(e) {
            e != this.selectedIndex && (this.proposedSelectedIndex = e, this.invalidateProperties(), 
            t.PropertyEvent.dispatchPropertyEvent(this, t.PropertyEvent.PROPERTY_CHANGE, "selectedIndex"));
        }, o.prototype.$childAdded = function(e, n) {
            i.prototype.$childAdded.call(this, e, n), this.showOrHide(e, !1);
            var o = this.selectedIndex;
            -1 == o ? this.setSelectedIndex(n) : n <= this.selectedIndex && this.$stage && this.setSelectedIndex(o + 1), 
            t.CollectionEvent.dispatchCollectionEvent(this, t.CollectionEvent.COLLECTION_CHANGE, t.CollectionEventKind.ADD, n, -1, [ e.name ]);
        }, o.prototype.$childRemoved = function(e, n) {
            i.prototype.$childRemoved.call(this, e, n), this.showOrHide(e, !0);
            var o = this.selectedIndex;
            n == o ? this.numChildren > 0 ? 0 == n ? (this.proposedSelectedIndex = 0, this.invalidateProperties()) : this.setSelectedIndex(0) : this.setSelectedIndex(-1) : o > n && this.setSelectedIndex(o - 1), 
            t.CollectionEvent.dispatchCollectionEvent(this, t.CollectionEvent.COLLECTION_CHANGE, t.CollectionEventKind.REMOVE, n, -1, [ e.name ]);
        }, o.prototype.commitProperties = function() {
            i.prototype.commitProperties.call(this), this.proposedSelectedIndex != t.ListBase.NO_PROPOSED_SELECTION && (this.commitSelection(this.proposedSelectedIndex), 
            this.proposedSelectedIndex = t.ListBase.NO_PROPOSED_SELECTION);
        }, o.prototype.commitSelection = function(t) {
            t >= 0 && t < this.numChildren ? (this._selectedIndex = t, this._selectedChild && this.showOrHide(this._selectedChild, !1), 
            this._selectedChild = this.getElementAt(this._selectedIndex), this.showOrHide(this._selectedChild, !0)) : (this._selectedChild = null, 
            this._selectedIndex = -1), this.invalidateSize(), this.invalidateDisplayList();
        }, o.prototype.showOrHide = function(t, i) {
            e.is(t, "eui.UIComponent") && (t.includeInLayout = i), t.visible = i;
        }, Object.defineProperty(o.prototype, "length", {
            get: function() {
                return this.$children.length;
            },
            enumerable: !0,
            configurable: !0
        }), o.prototype.getItemAt = function(t) {
            var e = this.$children[t];
            return e ? e.name : "";
        }, o.prototype.getItemIndex = function(t) {
            for (var e = this.$children, i = e.length, n = 0; i > n; n++) if (e[n].name == t) return n;
            return -1;
        }, o;
    }(t.Group);
    t.ViewStack = o, i(o.prototype, "eui.ViewStack", [ "eui.ICollection", "egret.IEventDispatcher" ]), 
    t.registerBindable(o.prototype, "selectedIndex");
}(r || (r = {}));

!function(t) {
    !function(t) {
        function n(t) {
            return -.5 * (Math.cos(Math.PI * t) - 1);
        }
        var o = function() {
            function t(t, e) {
                this.easerFunction = n, this.isPlaying = !1, this.duration = 500, this.currentValue = 0, 
                this.from = 0, this.to = 0, this.startTime = 0, this.endFunction = null, this.updateFunction = t, 
                this.thisObject = e;
            }
            return t.prototype.play = function() {
                this.stop(), this.start();
            }, t.prototype.start = function() {
                this.isPlaying = !1, this.currentValue = 0, this.startTime = e.getTimer(), this.doInterval(this.startTime), 
                e.startTick(this.doInterval, this);
            }, t.prototype.stop = function() {
                this.isPlaying = !1, this.startTime = 0, e.stopTick(this.doInterval, this);
            }, t.prototype.doInterval = function(t) {
                var e = t - this.startTime;
                this.isPlaying || (this.isPlaying = !0);
                var i = this.duration, n = 0 == i ? 1 : Math.min(e, i) / i;
                this.easerFunction && (n = this.easerFunction(n)), this.currentValue = this.from + (this.to - this.from) * n, 
                this.updateFunction && this.updateFunction.call(this.thisObject, this);
                var o = e >= i;
                return o && this.stop(), o && this.endFunction && this.endFunction.call(this.thisObject, this), 
                !0;
            }, t;
        }();
        t.Animation = o, i(o.prototype, "eui.sys.Animation");
    }(t.sys || (t.sys = {}));
}(r || (r = {}));

!function(t) {
    var n = function() {
        function t() {}
        return t.prototype.getTheme = function(t, i, n, o) {
            var r = new e.HttpRequest();
            r.addEventListener(e.Event.COMPLETE, function(t) {
                var e = t.target;
                i.call(o, e.response);
            }, o), r.addEventListener(e.IOErrorEvent.IO_ERROR, function(t) {
                n.call(o);
            }, o), r.responseType = e.HttpResponseType.TEXT, r.open(t), r.send();
        }, t;
    }();
    t.DefaultThemeAdapter = n, i(n.prototype, "eui.DefaultThemeAdapter", [ "eui.IThemeAdapter" ]);
}(r || (r = {}));

!function(t) {
    function n(t, e) {
        var i = Object.getOwnPropertyDescriptor(t, e);
        if (i) return i;
        var o = Object.getPrototypeOf(t);
        return o ? n(o, e) : null;
    }
    function o(t, e) {
        for (var i = t[r], n = i.length, o = 0; n > o; o += 2) {
            var s = i[o], a = i[o + 1];
            s.call(a, e);
        }
    }
    var r = "__listeners__", s = 0, a = function() {
        function i(t, e, i, n) {
            this.isExecuting = !1, this.property = t, this.handler = e, this.next = n, this.thisObject = i;
        }
        return i.watch = function(t, e, n, o) {
            if (e.length > 0) {
                var r = new i(e.shift(), n, o, i.watch(null, e, n, o));
                return r.reset(t), r;
            }
            return null;
        }, i.checkBindable = function(i, a) {
            var h = i.__bindables__;
            if (h && -1 != h.indexOf(a)) return !0;
            var l = e.is(i, "egret.IEventDispatcher");
            l || i[r] || (i[r] = []);
            var u = n(i, a);
            if (u && u.set && u.get) {
                var p = u.set;
                u.set = function(e) {
                    this[a] != e && (p.call(this, e), l ? t.PropertyEvent.dispatchPropertyEvent(this, t.PropertyEvent.PROPERTY_CHANGE, a) : o(this, a));
                };
            } else {
                if (u && (u.get || u.set)) return !1;
                var c = "_" + ++s + a;
                i[c] = u ? u.value : null, (u = {
                    enumerable: !0,
                    configurable: !0
                }).get = function() {
                    return this[c];
                }, u.set = function(e) {
                    this[c] != e && (this[c] = e, l ? t.PropertyEvent.dispatchPropertyEvent(this, t.PropertyEvent.PROPERTY_CHANGE, a) : o(this, a));
                };
            }
            Object.defineProperty(i, a, u), t.registerBindable(i, a);
        }, i.prototype.unwatch = function() {
            this.reset(null), this.handler = null, this.next && (this.next.handler = null);
        }, i.prototype.getValue = function() {
            return this.next ? this.next.getValue() : this.getHostPropertyValue();
        }, i.prototype.setHandler = function(t, e) {
            this.handler = t, this.thisObject = e, this.next && this.next.setHandler(t, e);
        }, i.prototype.reset = function(n) {
            var o = this.host;
            if (o) if (e.is(o, "egret.IEventDispatcher")) o.removeEventListener(t.PropertyEvent.PROPERTY_CHANGE, this.wrapHandler, this); else {
                var s = (a = o[r]).indexOf(this);
                a.splice(s - 1, 2);
            }
            if (this.host = n, n) if (i.checkBindable(n, this.property), e.is(n, "egret.IEventDispatcher")) n.addEventListener(t.PropertyEvent.PROPERTY_CHANGE, this.wrapHandler, this, !1, 100); else {
                var a = n[r];
                a.push(this.onPropertyChange), a.push(this);
            }
            this.next && this.next.reset(this.getHostPropertyValue());
        }, i.prototype.getHostPropertyValue = function() {
            return this.host ? this.host[this.property] : null;
        }, i.prototype.wrapHandler = function(t) {
            this.onPropertyChange(t.property);
        }, i.prototype.onPropertyChange = function(t) {
            if (t == this.property && !this.isExecuting) try {
                this.isExecuting = !0, this.next && this.next.reset(this.getHostPropertyValue()), 
                this.handler.call(this.thisObject, this.getValue());
            } finally {
                this.isExecuting = !1;
            }
        }, i;
    }();
    t.Watcher = a, i(a.prototype, "eui.Watcher");
}(r || (r = {}));

!function(t) {
    function e(e) {
        for (var i = e[0], n = i instanceof t.Watcher ? i.getValue() : i, o = e.length, r = 1; o > r; r++) {
            var s = e[r];
            s instanceof t.Watcher && (s = s.getValue()), n += s;
        }
        return n;
    }
    var n = function() {
        function i() {}
        return i.bindProperty = function(e, i, n, o) {
            var r = t.Watcher.watch(e, i, null, null);
            if (r) {
                var s = function(t) {
                    n[o] = t;
                };
                r.setHandler(s, null), s(r.getValue());
            }
            return r;
        }, i.bindHandler = function(e, i, n, o) {
            var r = t.Watcher.watch(e, i, n, o);
            return r && n.call(o, r.getValue()), r;
        }, i.$bindProperties = function(n, o, r, s, a) {
            if (1 == o.length && 1 == r.length) return i.bindProperty(n, o[0].split("."), s, a);
            for (var h, l = function() {
                s[a] = e(o);
            }, u = r.length, p = 0; u > p; p++) {
                var c = r[p], d = o[c].split(".");
                (h = t.Watcher.watch(n, d, null, null)) && (o[c] = h, h.setHandler(l, null));
            }
            return l(), h;
        }, i;
    }();
    t.Binding = n, i(n.prototype, "eui.Binding");
}(r || (r = {}));

!function(t) {
    var o = function(e) {
        function i(t) {
            var i = e.call(this) || this;
            return i._source = t || [], i;
        }
        return n(i, e), Object.defineProperty(i.prototype, "source", {
            get: function() {
                return this._source;
            },
            set: function(e) {
                e || (e = []), this._source = e, this.dispatchCoEvent(t.CollectionEventKind.RESET);
            },
            enumerable: !0,
            configurable: !0
        }), i.prototype.refresh = function() {
            this.dispatchCoEvent(t.CollectionEventKind.REFRESH);
        }, Object.defineProperty(i.prototype, "length", {
            get: function() {
                return this._source.length;
            },
            enumerable: !0,
            configurable: !0
        }), i.prototype.addItem = function(e) {
            this._source.push(e), this.dispatchCoEvent(t.CollectionEventKind.ADD, this._source.length - 1, -1, [ e ]);
        }, i.prototype.addItemAt = function(e, i) {
            0 > i || this._source.length, this._source.splice(i, 0, e), this.dispatchCoEvent(t.CollectionEventKind.ADD, i, -1, [ e ]);
        }, i.prototype.getItemAt = function(t) {
            return this._source[t];
        }, i.prototype.getItemIndex = function(t) {
            for (var e = this._source.length, i = 0; e > i; i++) if (this._source[i] === t) return i;
            return -1;
        }, i.prototype.itemUpdated = function(e) {
            var i = this.getItemIndex(e);
            -1 != i && this.dispatchCoEvent(t.CollectionEventKind.UPDATE, i, -1, [ e ]);
        }, i.prototype.removeAll = function() {
            var e = this._source.concat();
            this._source = [], this.dispatchCoEvent(t.CollectionEventKind.REMOVE, 0, -1, e);
        }, i.prototype.removeItemAt = function(e) {
            if (!(0 > e || e >= this._source.length)) {
                var i = this._source.splice(e, 1)[0];
                return this.dispatchCoEvent(t.CollectionEventKind.REMOVE, e, -1, [ i ]), i;
            }
        }, i.prototype.replaceItemAt = function(e, i) {
            if (!(0 > i || i >= this._source.length)) {
                var n = this._source.splice(i, 1, e)[0];
                return this.dispatchCoEvent(t.CollectionEventKind.REPLACE, i, -1, [ e ], [ n ]), 
                n;
            }
        }, i.prototype.replaceAll = function(t) {
            t || (t = []);
            for (var e = t.length, i = this._source.length, n = e; i > n; n++) this.removeItemAt(e);
            for (n = 0; e > n; n++) n >= i ? this.addItemAt(t[n], n) : this.replaceItemAt(t[n], n);
            this._source = t;
        }, i.prototype.dispatchCoEvent = function(e, i, n, o, r) {
            t.CollectionEvent.dispatchCollectionEvent(this, t.CollectionEvent.COLLECTION_CHANGE, e, i, n, o, r);
        }, i;
    }(e.EventDispatcher);
    t.ArrayCollection = o, i(o.prototype, "eui.ArrayCollection", [ "eui.ICollection", "egret.IEventDispatcher" ]), 
    t.registerProperty(o, "source", "Array", !0);
}(r || (r = {}));

!function(t) {
    var o = t.sys.UIComponentImpl, r = function(i) {
        function r() {
            var t = i.call(this) || this;
            return t._widthConstraint = NaN, t.$isShowPrompt = !1, t.$promptColor = 6710886, 
            t.$isFocusIn = !1, t.initializeUIValues(), t.type = e.TextFieldType.INPUT, t.$EditableText = {
                0: null,
                1: 16777215,
                2: !1
            }, t;
        }
        return n(r, i), r.prototype.$invalidateTextField = function() {
            i.prototype.$invalidateTextField.call(this), this.invalidateSize();
        }, r.prototype.$setWidth = function(t) {
            var e = i.prototype.$setWidth.call(this, t), n = o.prototype.$setWidth.call(this, t);
            return e && n;
        }, r.prototype.$setHeight = function(t) {
            var e = i.prototype.$setHeight.call(this, t), n = o.prototype.$setHeight.call(this, t);
            return e && n;
        }, r.prototype.$getText = function() {
            var t = i.prototype.$getText.call(this);
            return t == this.$EditableText[0] && (t = ""), t;
        }, r.prototype.$setText = function(e) {
            var n = this.$EditableText[0];
            (n != e || null == n) && (this.$isShowPrompt = !1, this.textColor = this.$EditableText[1], 
            this.displayAsPassword = this.$EditableText[2]), this.$isFocusIn || ("" == e || null == e) && (e = n, 
            this.$isShowPrompt = !0, i.prototype.$setTextColor.call(this, this.$promptColor), 
            i.prototype.$setDisplayAsPassword.call(this, !1));
            var o = i.prototype.$setText.call(this, e);
            return t.PropertyEvent.dispatchPropertyEvent(this, t.PropertyEvent.PROPERTY_CHANGE, "text"), 
            o;
        }, r.prototype.$onAddToStage = function(i, n) {
            t.sys.UIComponentImpl.prototype.$onAddToStage.call(this, i, n), this.addEventListener(e.FocusEvent.FOCUS_IN, this.onfocusIn, this), 
            this.addEventListener(e.FocusEvent.FOCUS_OUT, this.onfocusOut, this);
        }, r.prototype.$onRemoveFromStage = function() {
            t.sys.UIComponentImpl.prototype.$onRemoveFromStage.call(this), this.removeEventListener(e.FocusEvent.FOCUS_IN, this.onfocusIn, this), 
            this.removeEventListener(e.FocusEvent.FOCUS_OUT, this.onfocusOut, this);
        }, Object.defineProperty(r.prototype, "prompt", {
            get: function() {
                return this.$EditableText[0];
            },
            set: function(t) {
                var e = this.$EditableText, i = e[0];
                if (i != t) {
                    e[0] = t;
                    var n = this.text;
                    n && n != i || this.showPromptText();
                }
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(r.prototype, "promptColor", {
            get: function() {
                return this.$promptColor;
            },
            set: function(t) {
                if (t = 0 | +t, this.$promptColor != t) {
                    this.$promptColor = t;
                    var e = this.text;
                    e && e != this.$EditableText[0] || this.showPromptText();
                }
            },
            enumerable: !0,
            configurable: !0
        }), r.prototype.onfocusOut = function() {
            this.$isFocusIn = !1, this.text || this.showPromptText();
        }, r.prototype.onfocusIn = function() {
            this.$isFocusIn = !0, this.$isShowPrompt = !1, this.displayAsPassword = this.$EditableText[2];
            var t = this.$EditableText, e = this.text;
            e && e != t[0] || (this.textColor = t[1], this.text = "");
        }, r.prototype.showPromptText = function() {
            var t = this.$EditableText;
            this.$isShowPrompt = !0, i.prototype.$setTextColor.call(this, this.$promptColor), 
            i.prototype.$setDisplayAsPassword.call(this, !1), this.text = t[0];
        }, r.prototype.$setTextColor = function(t) {
            return t = 0 | +t, this.$EditableText[1] = t, this.$isShowPrompt || i.prototype.$setTextColor.call(this, t), 
            !0;
        }, r.prototype.$setDisplayAsPassword = function(t) {
            return this.$EditableText[2] = t, this.$isShowPrompt || i.prototype.$setDisplayAsPassword.call(this, t), 
            !0;
        }, r.prototype.createChildren = function() {
            this.onfocusOut();
        }, r.prototype.childrenCreated = function() {}, r.prototype.commitProperties = function() {}, 
        r.prototype.measure = function() {
            var t = this.$UIComponent, e = this.$TextField[3], n = NaN;
            isNaN(this._widthConstraint) ? isNaN(t[8]) ? 1e5 != t[13] && (n = t[13]) : n = t[8] : (n = this._widthConstraint, 
            this._widthConstraint = NaN), i.prototype.$setWidth.call(this, n), this.setMeasuredSize(this.textWidth, this.textHeight), 
            i.prototype.$setWidth.call(this, e);
        }, r.prototype.updateDisplayList = function(t, e) {
            i.prototype.$setWidth.call(this, t), i.prototype.$setHeight.call(this, e);
        }, r.prototype.invalidateParentLayout = function() {}, r.prototype.setMeasuredSize = function(t, e) {}, 
        r.prototype.invalidateProperties = function() {}, r.prototype.validateProperties = function() {}, 
        r.prototype.invalidateSize = function() {}, r.prototype.validateSize = function(t) {}, 
        r.prototype.invalidateDisplayList = function() {}, r.prototype.validateDisplayList = function() {}, 
        r.prototype.validateNow = function() {}, r.prototype.setLayoutBoundsSize = function(t, e) {
            if (o.prototype.setLayoutBoundsSize.call(this, t, e), !isNaN(t) && t !== this._widthConstraint && 0 != t) {
                var i = this.$UIComponent;
                isNaN(i[9]) && t != i[16] && (this._widthConstraint = t, this.invalidateSize());
            }
        }, r.prototype.setLayoutBoundsPosition = function(t, e) {}, r.prototype.getLayoutBounds = function(t) {}, 
        r.prototype.getPreferredBounds = function(t) {}, r;
    }(e.TextField);
    t.EditableText = r, i(r.prototype, "eui.EditableText", [ "eui.UIComponent", "egret.DisplayObject", "eui.IDisplayText" ]), 
    t.sys.implementUIComponent(r, e.TextField), t.registerBindable(r.prototype, "text");
}(r || (r = {}));

!function(t) {
    !function(t) {
        function n(t) {
            var e = t - 1;
            return e * e * e + 1;
        }
        var o = [ 1, 1.33, 1.66, 2 ], r = .02, s = .998, a = Math.log(s), h = function() {
            function i(e, i, o) {
                this.$scrollFactor = 1, this.previousTime = 0, this.velocity = 0, this.previousVelocity = [], 
                this.currentPosition = 0, this.previousPosition = 0, this.currentScrollPos = 0, 
                this.maxScrollPos = 0, this.offsetPoint = 0, this.$bounces = !0, this.started = !0, 
                this.updateFunction = e, this.endFunction = i, this.target = o, this.animation = new t.Animation(this.onScrollingUpdate, this), 
                this.animation.endFunction = this.finishScrolling, this.animation.easerFunction = n;
            }
            return i.prototype.isPlaying = function() {
                return this.animation.isPlaying;
            }, i.prototype.stop = function() {
                this.animation.stop(), e.stopTick(this.onTick, this), this.started = !1;
            }, i.prototype.isStarted = function() {
                return this.started;
            }, i.prototype.start = function(t) {
                this.started = !0, this.velocity = 0, this.previousVelocity.length = 0, this.previousTime = e.getTimer(), 
                this.previousPosition = this.currentPosition = t, this.offsetPoint = t, e.startTick(this.onTick, this);
            }, i.prototype.update = function(t, e, i) {
                e = Math.max(e, 0), this.currentPosition = t, this.maxScrollPos = e;
                var n = this.offsetPoint - t, o = n + i;
                this.offsetPoint = t, 0 > o && (this.$bounces ? o -= .5 * n : o = 0), o > e && (this.$bounces ? o -= .5 * n : o = e), 
                this.currentScrollPos = o, this.updateFunction.call(this.target, o);
            }, i.prototype.finish = function(t, i) {
                e.stopTick(this.onTick, this), this.started = !1;
                for (var n = 2.33 * this.velocity, h = this.previousVelocity, l = h.length, u = 2.33, p = 0; l > p; p++) {
                    var c = o[p];
                    n += h[0] * c, u += c;
                }
                var d = n / u, f = Math.abs(d), y = 0, v = 0;
                if (f > r) if (0 > (v = t + (d - r) / a * 2 * this.$scrollFactor) || v > i) for (v = t; Math.abs(d) > r; ) d *= 0 > (v -= d) || v > i ? .95 * s : s, 
                y++; else y = Math.log(r / f) / a; else v = t;
                this.target.$getThrowInfo && (v = this.target.$getThrowInfo(t, v).toPos), y > 0 ? (this.$bounces || (0 > v ? v = 0 : v > i && (v = i)), 
                this.throwTo(v, y)) : this.finishScrolling();
            }, i.prototype.onTick = function(t) {
                var e = t - this.previousTime;
                if (e > 10) {
                    var i = this.previousVelocity;
                    i.length >= 4 && i.shift(), this.velocity = (this.currentPosition - this.previousPosition) / e, 
                    i.push(this.velocity), this.previousTime = t, this.previousPosition = this.currentPosition;
                }
                return !0;
            }, i.prototype.finishScrolling = function(t) {
                var e = this.currentScrollPos, i = this.maxScrollPos, n = e;
                0 > e && (n = 0), e > i && (n = i), this.throwTo(n, 300);
            }, i.prototype.throwTo = function(t, e) {
                void 0 === e && (e = 500);
                var i = this.currentScrollPos;
                if (i != t) {
                    var n = this.animation;
                    n.duration = e, n.from = i, n.to = t, n.play();
                } else this.endFunction.call(this.target);
            }, i.prototype.onScrollingUpdate = function(t) {
                this.currentScrollPos = t.currentValue, this.updateFunction.call(this.target, t.currentValue);
            }, i;
        }();
        t.TouchScroll = h, i(h.prototype, "eui.sys.TouchScroll");
    }(t.sys || (t.sys = {}));
}(r || (r = {}));

!function(t) {
    var e = function() {
        function t() {}
        return t.LTR = "ltr", t.RTL = "rtl", t.TTB = "ttb", t.BTT = "btt", t;
    }();
    t.Direction = e, i(e.prototype, "eui.Direction");
}(r || (r = {}));

!function(t) {
    var e = function() {
        function t() {}
        return t.AUTO = "auto", t.OFF = "off", t.ON = "on", t;
    }();
    t.ScrollPolicy = e, i(e.prototype, "eui.ScrollPolicy");
}(r || (r = {}));

!function(t) {
    var r = function(i) {
        function r(t, n) {
            var o = i.call(this) || this;
            return o.delayList = [], o.skinMap = {}, o.$styles = {}, o.initialized = !t, n && e.registerImplementation("eui.Theme", o), 
            o.$configURL = t, o.load(t), o;
        }
        return n(r, i), r.prototype.load = function(e) {
            var i = this;
            t.getTheme(e, function(t) {
                return i.onConfigLoaded(t);
            });
        }, r.prototype.onConfigLoaded = function(t) {
            var i;
            if ("string" == typeof t) try {
                i = JSON.parse(t);
            } catch (t) {
                e.$error(3e3);
            } else i = t;
            if (i && i.skins) for (var n = this.skinMap, r = i.skins, s = Object.keys(r), a = s.length, h = 0; a > h; h++) {
                var l = s[h];
                n[l] || this.mapSkin(l, r[l]);
            }
            i.styles && (this.$styles = i.styles);
            var u = i.paths;
            for (var p in u) o.update(p, u[p]);
            i.exmls && 0 != i.exmls.length ? i.exmls[0].gjs ? (i.exmls.forEach(function(t) {
                return o.$parseURLContentAsJs(t.path, t.gjs, t.className);
            }), this.onLoaded()) : i.exmls[0].content ? (i.exmls.forEach(function(t) {
                return o.$parseURLContent(t.path, t.content);
            }), this.onLoaded()) : o.$loadAll(i.exmls, this.onLoaded, this, !0) : this.onLoaded();
        }, r.prototype.onLoaded = function(t, i) {
            this.initialized = !0, this.handleDelayList(), this.dispatchEventWith(e.Event.COMPLETE);
        }, r.prototype.handleDelayList = function() {
            for (var t = this.delayList, e = t.length, i = 0; e > i; i++) {
                var n = t[i];
                if (!n.$Component[5]) {
                    var o = this.getSkinName(n);
                    o && (n.$Component[1] = o, n.$parseSkinName());
                }
            }
            t.length = 0;
        }, r.prototype.getSkinName = function(t) {
            if (!this.initialized) return -1 == this.delayList.indexOf(t) && this.delayList.push(t), 
            "";
            var e = this.skinMap[t.hostComponentKey];
            return e || (e = this.findSkinName(t)), e;
        }, r.prototype.findSkinName = function(t) {
            if (!t) return "";
            var e = t.__class__;
            if (void 0 === e) return "";
            var i = this.skinMap[e];
            return i || "eui.Component" == e ? i : this.findSkinName(Object.getPrototypeOf(t));
        }, r.prototype.mapSkin = function(t, e) {
            this.skinMap[t] = e;
        }, r.prototype.$getStyleConfig = function(t) {
            return this.$styles[t];
        }, r;
    }(e.EventDispatcher);
    t.Theme = r, i(r.prototype, "eui.Theme");
}(r || (r = {}));

!function(t) {
    var o = function(t) {
        function i(e, i, n, o, r, s, a, h) {
            var l = t.call(this, e, i, n) || this;
            return l.$initTo(o, r, s, a, h), l;
        }
        return n(i, t), i.prototype.$initTo = function(t, e, i, n, o) {
            this.kind = t, this.location = 0 | +e, this.oldLocation = 0 | +i, this.items = n || [], 
            this.oldItems = o || [];
        }, i.prototype.clean = function() {
            t.prototype.clean.call(this), this.items = this.oldItems = null;
        }, i.dispatchCollectionEvent = function(t, n, o, r, s, a, h) {
            if (!t.hasEventListener(n)) return !0;
            var l = e.Event.create(i, n);
            l.$initTo(o, r, s, a, h);
            var u = t.dispatchEvent(l);
            return e.Event.release(l), u;
        }, i.COLLECTION_CHANGE = "collectionChange", i;
    }(e.Event);
    t.CollectionEvent = o, i(o.prototype, "eui.CollectionEvent");
}(r || (r = {}));

!function(t) {
    var e = function() {
        function t() {}
        return t.ADD = "add", t.REFRESH = "refresh", t.REMOVE = "remove", t.REPLACE = "replace", 
        t.RESET = "reset", t.UPDATE = "update", t;
    }();
    t.CollectionEventKind = e, i(e.prototype, "eui.CollectionEventKind");
}(r || (r = {}));

!function(t) {
    var o = function(t) {
        function i() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e.item = null, e.itemRenderer = null, e.itemIndex = -1, e;
        }
        return n(i, t), i.prototype.clean = function() {
            t.prototype.clean.call(this), this.item = this.itemRenderer = null;
        }, i.dispatchItemTapEvent = function(t, n, o) {
            if (!t.hasEventListener(n)) return !0;
            var r = e.Event.create(i, n);
            r.item = o.data, r.itemIndex = o.itemIndex, r.itemRenderer = o;
            var s = t.dispatchEvent(r);
            return e.Event.release(r), s;
        }, i.ITEM_TAP = "itemTap", i;
    }(e.Event);
    t.ItemTapEvent = o, i(o.prototype, "eui.ItemTapEvent");
}(r || (r = {}));

!function(t) {
    var o = function(t) {
        function i(e, i, n, o) {
            var r = t.call(this, e, i, n) || this;
            return r.property = o, r;
        }
        return n(i, t), i.dispatchPropertyEvent = function(t, n, o) {
            if (!t.hasEventListener(n)) return !0;
            var r = e.Event.create(i, n);
            r.property = o;
            var s = t.dispatchEvent(r);
            return e.Event.release(r), s;
        }, i.PROPERTY_CHANGE = "propertyChange", i;
    }(e.Event);
    t.PropertyEvent = o, i(o.prototype, "eui.PropertyEvent");
}(r || (r = {}));

!function(t) {
    var o = function(t) {
        function e(e, i, n, o, r) {
            var s = t.call(this, e, i, n) || this;
            return o = +o, r = +r, s.currentPos = o, s.toPos = r, s;
        }
        return n(e, t), e.THROW = "throw", e;
    }(e.Event);
    t.ScrollerThrowEvent = o, i(o.prototype, "eui.ScrollerThrowEvent");
}(r || (r = {}));

!function(t) {
    var o = function(t) {
        function i(e, i, n) {
            return t.call(this, e, i, n) || this;
        }
        return n(i, t), i.dispatchUIEvent = function(t, n, o, r) {
            if (!t.hasEventListener(n)) return !0;
            var s = e.Event.create(i, n, o, r), a = t.dispatchEvent(s);
            return e.Event.release(s), a;
        }, i.CREATION_COMPLETE = "creationComplete", i.CHANGE_END = "changeEnd", i.CHANGE_START = "changeStart", 
        i.CLOSING = "closing", i.MOVE = "move", i;
    }(e.Event);
    t.UIEvent = o, i(o.prototype, "eui.UIEvent");
}(r || (r = {}));

!function(t) {
    !function(t) {
        var e = function() {
            function t() {
                this.indent = 0;
            }
            return t.prototype.toCode = function() {
                return "";
            }, t.prototype.getIndent = function(t) {
                void 0 === t && (t = this.indent);
                for (var e = "", i = 0; t > i; i++) e += "\t";
                return e;
            }, t;
        }();
        t.CodeBase = e, i(e.prototype, "eui.sys.CodeBase");
        var o = function(t) {
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                return e.className = "", e.superClass = "", e.innerClassBlock = [], e.variableBlock = [], 
                e.functionBlock = [], e;
            }
            return n(e, t), e.prototype.addInnerClass = function(t) {
                -1 == this.innerClassBlock.indexOf(t) && this.innerClassBlock.push(t);
            }, e.prototype.addVariable = function(t) {
                -1 == this.variableBlock.indexOf(t) && this.variableBlock.push(t);
            }, e.prototype.getVariableByName = function(t) {
                for (var e = this.variableBlock, i = e.length, n = 0; i > n; n++) {
                    var o = e[n];
                    if (o.name == t) return o;
                }
                return null;
            }, e.prototype.addFunction = function(t) {
                -1 == this.functionBlock.indexOf(t) && this.functionBlock.push(t);
            }, e.prototype.getFuncByName = function(t) {
                for (var e = this.functionBlock, i = e.length, n = 0; i > n; n++) {
                    var o = e[n];
                    if (o.name == t) return o;
                }
                return null;
            }, e.prototype.toCode = function() {
                var t = this.indent, e = this.getIndent(t), i = this.getIndent(t + 1), n = this.getIndent(t + 2), o = e + "(function (";
                o += this.superClass ? "_super) {\n" + i + "__extends(" + this.className + ", _super);\n" : ") {\n";
                for (var r = this.innerClassBlock, s = r.length, a = 0; s > a; a++) {
                    var h = r[a];
                    h.indent = t + 1, o += i + "var " + h.className + " = " + h.toCode() + "\n\n";
                }
                o += i + "function " + this.className + "() {\n", this.superClass && (o += n + "_super.call(this);\n");
                var l = this.variableBlock;
                s = l.length;
                for (a = 0; s > a; a++) {
                    var u = l[a];
                    u.defaultValue && (o += n + u.toCode() + "\n");
                }
                if (this.constructCode) {
                    var p = this.constructCode.toCode().split("\n");
                    s = p.length;
                    for (a = 0; s > a; a++) o += n + p[a] + "\n";
                }
                o += i + "}\n", o += i + "var _proto = " + this.className + ".prototype;\n\n";
                var c = this.functionBlock;
                s = c.length;
                for (a = 0; s > a; a++) {
                    var d = c[a];
                    d.indent = t + 1, o += d.toCode() + "\n";
                }
                return o += i + "return " + this.className + ";\n" + e, o += this.superClass ? "})(" + this.superClass + ");" : "})();";
            }, e;
        }(e);
        t.EXClass = o, i(o.prototype, "eui.sys.EXClass");
        var r = function(t) {
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                return e.lines = [], e;
            }
            return n(e, t), e.prototype.addVar = function(t, e) {
                var i = e ? " = " + e : "";
                this.addCodeLine("var " + t + i + ";");
            }, e.prototype.addAssignment = function(t, e, i) {
                var n = i ? "." + i : "";
                this.addCodeLine(t + n + " = " + e + ";");
            }, e.prototype.addReturn = function(t) {
                this.addCodeLine("return " + t + ";");
            }, e.prototype.addEmptyLine = function() {
                this.addCodeLine("");
            }, e.prototype.startIf = function(t) {
                this.addCodeLine("if(" + t + ")"), this.startBlock();
            }, e.prototype.startElse = function() {
                this.addCodeLine("else"), this.startBlock();
            }, e.prototype.startElseIf = function(t) {
                this.addCodeLine("else if(" + t + ")"), this.startBlock();
            }, e.prototype.startBlock = function() {
                this.addCodeLine("{"), this.indent++;
            }, e.prototype.endBlock = function() {
                this.indent--, this.addCodeLine("}");
            }, e.prototype.doFunction = function(t, e) {
                var i = e.join(",");
                this.addCodeLine(t + "(" + i + ")");
            }, e.prototype.addCodeLine = function(t) {
                this.lines.push(this.getIndent() + t);
            }, e.prototype.addCodeLineAt = function(t, e) {
                this.lines.splice(e, 0, this.getIndent() + t);
            }, e.prototype.containsCodeLine = function(t) {
                return -1 != this.lines.indexOf(t);
            }, e.prototype.concat = function(t) {
                this.lines = this.lines.concat(t.lines);
            }, e.prototype.toCode = function() {
                return this.lines.join("\n");
            }, e;
        }(e);
        t.EXCodeBlock = r, i(r.prototype, "eui.sys.EXCodeBlock");
        var s = function(t) {
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                return e.codeBlock = null, e.isGet = !1, e.name = "", e;
            }
            return n(e, t), e.prototype.toCode = function() {
                var t, e = this.getIndent(), i = this.getIndent(this.indent + 1), n = e;
                if (this.isGet ? (t = this.getIndent(this.indent + 2), n += 'Object.defineProperty(_proto, "skinParts", {\n', 
                n += i + "get: function () {\n") : (t = i, n += "_proto." + this.name + " = function () {\n"), 
                this.codeBlock) for (var o = this.codeBlock.toCode().split("\n"), r = o.length, s = 0; r > s; s++) n += t + o[s] + "\n";
                return n += this.isGet ? i + "},\n" + i + "enumerable: true,\n" + i + "configurable: true\n" + e + "});" : e + "};";
            }, e;
        }(e);
        t.EXFunction = s, i(s.prototype, "eui.sys.EXFunction");
        var a = function(t) {
            function e(e, i) {
                var n = t.call(this) || this;
                return n.indent = 2, n.name = e, n.defaultValue = i, n;
            }
            return n(e, t), e.prototype.toCode = function() {
                return this.defaultValue ? "this." + this.name + " = " + this.defaultValue + ";" : "";
            }, e;
        }(e);
        t.EXVariable = a, i(a.prototype, "eui.sys.EXVariable");
        var h = function(t) {
            function e(e, i) {
                var n = t.call(this) || this;
                return n.name = "", n.stateGroups = [], n.addItems = [], n.setProperty = [], n.name = e, 
                i && (n.stateGroups = i), n;
            }
            return n(e, t), e.prototype.addOverride = function(t) {
                t instanceof l ? this.addItems.push(t) : this.setProperty.push(t);
            }, e.prototype.toCode = function() {
                for (var t = this.getIndent(1), e = 'new eui.State ("' + this.name + '",\n' + t + "[\n", i = 0, n = !0, o = this.addItems.concat(this.setProperty); i < o.length; ) {
                    n ? n = !1 : e += ",\n";
                    for (var r = o[i].toCode().split("\n"), s = r.length, a = 0; s > a; a++) {
                        var h = r[a];
                        r[a] = t + t + h;
                    }
                    e += r.join("\n"), i++;
                }
                return e += "\n" + t + "])";
            }, e;
        }(e);
        t.EXState = h, i(h.prototype, "eui.sys.EXState");
        var l = function(t) {
            function e(e, i, n, o) {
                var r = t.call(this) || this;
                return r.target = e, r.property = i, r.position = n, r.relativeTo = o, r;
            }
            return n(e, t), e.prototype.toCode = function() {
                return 'new eui.AddItems("' + this.target + '","' + this.property + '",' + this.position + ',"' + this.relativeTo + '")';
            }, e;
        }(e);
        t.EXAddItems = l, i(l.prototype, "eui.sys.EXAddItems");
        var u = function(t) {
            function e(e, i, n) {
                var o = t.call(this) || this;
                return o.target = e, o.name = i, o.value = n, o;
            }
            return n(e, t), e.prototype.toCode = function() {
                return 'new eui.SetProperty("' + this.target + '","' + this.name + '",' + this.value + ")";
            }, e;
        }(e);
        t.EXSetProperty = u, i(u.prototype, "eui.sys.EXSetProperty");
        var p = function(t) {
            function e(e, i, n, o) {
                var r = t.call(this) || this;
                return e = e ? "this." + e : "this", r.target = e, r.property = i, r.templates = n, 
                r.chainIndex = o, r;
            }
            return n(e, t), e.prototype.toCode = function() {
                return "new eui.SetStateProperty(this, [" + this.templates.join(",") + "],[" + this.chainIndex.join(",") + "]," + this.target + ',"' + this.property + '")';
            }, e;
        }(e);
        t.EXSetStateProperty = p, i(p.prototype, "eui.sys.EXSetStateProperty");
        var c = function(t) {
            function e(e, i, n, o) {
                var r = t.call(this) || this;
                return r.target = e, r.property = i, r.templates = n, r.chainIndex = o, r;
            }
            return n(e, t), e.prototype.toCode = function() {
                return "eui.Binding.$bindProperties(this, [" + this.templates.join(",") + "],[" + this.chainIndex.join(",") + "]," + this.target + ',"' + this.property + '")';
            }, e;
        }(e);
        t.EXBinding = c, i(c.prototype, "eui.sys.EXBinding");
    }(t.sys || (t.sys = {}));
}(r || (r = {}));

!function(t) {
    var o = t.sys.UIComponentImpl, r = function(e) {
        function i(t) {
            var i = e.call(this) || this;
            return i.$createChildrenCalled = !1, i.$fontChanged = !1, i._widthConstraint = NaN, 
            i._heightConstraint = NaN, i.initializeUIValues(), i.text = t, i;
        }
        return n(i, e), i.prototype.$invalidateContentBounds = function() {
            e.prototype.$invalidateContentBounds.call(this), this.invalidateSize();
        }, i.prototype.$setWidth = function(t) {
            var i = e.prototype.$setWidth.call(this, t), n = o.prototype.$setWidth.call(this, t);
            return i && n;
        }, i.prototype.$setHeight = function(t) {
            var i = e.prototype.$setHeight.call(this, t), n = o.prototype.$setHeight.call(this, t);
            return i && n;
        }, i.prototype.$setText = function(i) {
            var n = e.prototype.$setText.call(this, i);
            return t.PropertyEvent.dispatchPropertyEvent(this, t.PropertyEvent.PROPERTY_CHANGE, "text"), 
            n;
        }, i.prototype.$setFont = function(t) {
            return this.$fontForBitmapLabel != t && (this.$fontForBitmapLabel = t, this.$createChildrenCalled ? this.$parseFont() : this.$fontChanged = !0, 
            this.$fontStringChanged = !0, !0);
        }, i.prototype.$parseFont = function() {
            var e = this;
            this.$fontChanged = !1;
            var i = this.$fontForBitmapLabel;
            "string" == typeof i ? t.getAssets(i, function(t) {
                e.$setFontData(t, i);
            }) : this.$setFontData(i);
        }, i.prototype.$setFontData = function(t, e) {
            return e && e != this.$fontForBitmapLabel ? void 0 : t != this.$font && (this.$font = t, 
            this.$invalidateContentBounds(), !0);
        }, i.prototype.createChildren = function() {
            this.$fontChanged && this.$parseFont(), this.$createChildrenCalled = !0;
        }, i.prototype.childrenCreated = function() {}, i.prototype.commitProperties = function() {}, 
        i.prototype.measure = function() {
            var t = this.$UIComponent, i = this.$textFieldWidth, n = this.$textFieldHeight, o = NaN;
            isNaN(this._widthConstraint) ? isNaN(t[8]) ? 1e5 != t[13] && (o = t[13]) : o = t[8] : (o = this._widthConstraint, 
            this._widthConstraint = NaN), e.prototype.$setWidth.call(this, o);
            var r = NaN;
            isNaN(this._heightConstraint) ? isNaN(t[9]) ? 1e5 != t[15] && (r = t[15]) : r = t[9] : (r = this._heightConstraint, 
            this._heightConstraint = NaN), e.prototype.$setHeight.call(this, r), this.setMeasuredSize(this.textWidth, this.textHeight), 
            e.prototype.$setWidth.call(this, i), e.prototype.$setHeight.call(this, n);
        }, i.prototype.updateDisplayList = function(t, i) {
            e.prototype.$setWidth.call(this, t), e.prototype.$setHeight.call(this, i);
        }, i.prototype.invalidateParentLayout = function() {}, i.prototype.setMeasuredSize = function(t, e) {}, 
        i.prototype.invalidateProperties = function() {}, i.prototype.validateProperties = function() {}, 
        i.prototype.invalidateSize = function() {}, i.prototype.validateSize = function(t) {}, 
        i.prototype.invalidateDisplayList = function() {}, i.prototype.validateDisplayList = function() {}, 
        i.prototype.validateNow = function() {}, i.prototype.setLayoutBoundsSize = function(t, e) {
            if (o.prototype.setLayoutBoundsSize.call(this, t, e), !isNaN(t) && t !== this._widthConstraint && 0 != t) {
                var i = this.$UIComponent;
                isNaN(i[9]) && t != i[16] && (this._widthConstraint = t, this._heightConstraint = e, 
                this.invalidateSize());
            }
        }, i.prototype.setLayoutBoundsPosition = function(t, e) {}, i.prototype.getLayoutBounds = function(t) {}, 
        i.prototype.getPreferredBounds = function(t) {}, i;
    }(e.BitmapText);
    t.BitmapLabel = r, i(r.prototype, "eui.BitmapLabel", [ "eui.UIComponent", "egret.DisplayObject", "eui.IDisplayText" ]), 
    t.sys.implementUIComponent(r, e.BitmapText), t.registerBindable(r.prototype, "text");
}(r || (r = {}));

var o;

!function(t) {
    function e(t) {
        return a.parse(t);
    }
    function i(t, e, i, n) {
        var r = [];
        t.forEach(function(t, i) {
            if (t in l && !e[t]) r[i] = l[t]; else {
                var n = o(t, e[t]);
                r[i] = n;
            }
        }), i && i.call(n, r, t);
    }
    function n(t, e) {
        l[t] = e;
        var i = h[t];
        delete h[t];
        for (var n = i ? i.length : 0, o = 0; n > o; o++) {
            var r = i[o];
            r[0] && r[1] && r[0].call(r[1], e, t);
        }
    }
    function o(t, i) {
        var n = null;
        if (i) try {
            n = e(i);
        } catch (e) {
            console.error(t + "\n" + e.message);
        }
        if (t) {
            n && (l[t] = n);
            var o = h[t];
            delete h[t];
            for (var r = o ? o.length : 0, s = 0; r > s; s++) {
                var a = o[s];
                a[0] && a[1] && a[0].call(a[1], n, t);
            }
        }
        return n;
    }
    function s(t, e) {
        var i = t;
        -1 == t.indexOf("://") && (i = u + t);
        r.getTheme(i, function(i) {
            i || (i = ""), e(t, i);
        });
    }
    var a = new r.sys.EXMLParser(), h = {}, l = {}, u = "";
    Object.defineProperty(t, "prefixURL", {
        get: function() {
            return u;
        },
        set: function(t) {
            u = t;
        },
        enumerable: !0,
        configurable: !0
    }), t.parse = e, t.load = function(t, e, i, n) {
        if (void 0 === n && (n = !1), !(n && t in l)) {
            var r = h[t];
            return r ? void r.push([ e, i ]) : (h[t] = [ [ e, i ] ], void s(t, o));
        }
        e && e.call(i, l[t], t);
    }, t.$loadAll = function(t, e, n, o) {
        if (void 0 === o && (o = !1), t && 0 != t.length) {
            var r = [];
            t.forEach(function(a) {
                var h = function(o, s) {
                    r[o] = s, r.push(o), r.length == t.length && i(t, r, e, n);
                };
                return o && a in l ? void h(a, "") : void s(a, h);
            });
        } else e && e.call(n, [], t);
    }, t.update = n, t.$parseURLContentAsJs = function(t, e, i) {
        var o = null;
        e && (o = a.$parseCode(e, i), n(t, o));
    }, t.$parseURLContent = o;
}(o || (o = {}));

!function(n) {
    !function(n) {
        function o(t) {
            return "[object Array]" === Object.prototype.toString.call(t);
        }
        function r(t) {
            var i = e.getDefinitionByName(t);
            return i ? i.prototype : null;
        }
        function s(t) {
            if (!t) return null;
            return new t();
        }
        n.NS_S = "http://ns.egret.com/eui", n.NS_W = "http://ns.egret.com/wing";
        var a = [ "Point", "Matrix", "Rectangle" ], h = [ "Array", "boolean", "string", "number" ], l = 0, u = {}, p = function() {
            function i() {}
            return i.prototype.$describe = function(e) {
                if (!e) return null;
                var i = Object.getPrototypeOf(e);
                if (!i) return null;
                var n;
                if (i.hasOwnProperty("__hashCode__") && (n = u[i.__hashCode__])) return n;
                var r = Object.getPrototypeOf(i);
                if (!r) return null;
                var a = s(r.constructor), p = this.$describe(a);
                if (p) {
                    var c = function() {};
                    c.prototype = p, n = new c();
                } else n = {};
                for (var d = Object.keys(i).concat(Object.keys(e)), f = d.length, y = e.__meta__, v = 0; f > v; v++) {
                    var g = d[v];
                    if ("constructor" != g && "_" != g.charAt(0) && "$" != g.charAt(0)) {
                        var m = void 0;
                        if (y && y[g]) m = y[g]; else if (o(e[g])) m = "Array"; else {
                            if ("function" == (m = t(e[g]))) continue;
                            -1 == h.indexOf(m) && (m = "any");
                        }
                        n[g] = m;
                    }
                }
                return Object.getPrototypeOf(r) && (i.__hashCode__ = l++, u[i.__hashCode__] = n), 
                n;
            }, i.prototype.getClassNameById = function(t, e) {
                if (e == n.NS_S) {
                    if ("Object" == t) return t;
                    if (-1 != a.indexOf(t)) return "egret." + t;
                }
                var i = "";
                return -1 != h.indexOf(t) ? t : (e == n.NS_W || (i = e && e != n.NS_S ? e.substring(0, e.length - 1) + t : "eui." + t), 
                r(i) || (i = ""), i);
            }, i.prototype.getDefaultPropById = function(t, e) {
                var i, n = r(this.getClassNameById(t, e));
                return n && (i = n.__defaultProperty__), i || "";
            }, i.prototype.getPropertyType = function(t, i) {
                if ("Object" == i) return "any";
                var n = "", o = r(i);
                if (o) {
                    if (!o.hasOwnProperty("__hashCode__")) {
                        var a = s(e.getDefinitionByName(i));
                        if (!a) return n;
                        this.$describe(a);
                    }
                    var h = u[o.__hashCode__];
                    h && (n = h[t]);
                }
                return n;
            }, i;
        }();
        n.EXMLConfig = p, i(p.prototype, "eui.sys.EXMLConfig");
    }(n.sys || (n.sys = {}));
}(r || (r = {}));

!function(t) {
    e.$locale_strings = e.$locale_strings || {}, e.$locale_strings.en_US = e.$locale_strings.en_US || {};
    var i = e.$locale_strings.en_US;
    i[2001] = "EXML parsing error {0}: EXML file can't be found ", i[2002] = "EXML parsing error : invalid XML file:\n{0}", 
    i[2003] = "EXML parsing error {0}: the class definitions corresponding to nodes can't be found  \n {1}", 
    i[2004] = "EXML parsing error {0}: nodes cannot contain id property with the same name \n {1}", 
    i[2005] = "EXML parsing error {0}: property with the name of '{1}' does not exist on the node, or the property does not have a default value: \n {2}", 
    i[2006] = "EXML parsing error {0}: undefined view state name: '{1}' \n {2}", i[2007] = "EXML parsing error {0}: only UIComponent objects within the container can use the includeIn and excludeFrom properties\n {1}", 
    i[2008] = "EXML parsing error {0}: fail to assign values of '{1}' class to property: '{2}' \n {3}", 
    i[2009] = "EXML parsing error {0}: only one ID can be referenced in the node property value '{}' label; and complex expression is not allowed to use \n {1}", 
    i[2010] = "EXML parsing error {0}: ID referenced by property: '{1}':  '{2}' does not exist \n {3}", 
    i[2011] = "EXML parsing error {0}: fail to assign more than one child nodes to the same property: '{1}' \n {2}", 
    i[2012] = "EXML parsing error {0}: no default property exists on the node; and you must explicitly declare the property name that the child node  is assigned to \n {1}", 
    i[2013] = "EXML parsing error {0}: view state grammar is not allowed to use on property nodes of Array class \n {1} ", 
    i[2014] = "EXML parsing error {0}: assigning the skin class itself to the node property is not allowed \n {1}", 
    i[2015] = "EXML parsing error {0}: class definition referenced by node: {1} does not exist \n {2}", 
    i[2016] = "EXML parsing error {0}: format error of 'scale9Grid' property value on the node: {1}", 
    i[2017] = "EXML parsing error {0}: namespace prefix missing on the node: {1}", i[2018] = "EXML parsing error {0}: format error of 'skinName' property value on the node: {1}", 
    i[2019] = "EXML parsing error {0}: the container’s child item must be visible nodes: {1}", 
    i[2020] = "EXML parsing error {0}: for child nodes in w: Declarations, the includeIn and excludeFrom properties are not allowed to use \n {1}", 
    i[2021] = "Compile errors in {0}, the attribute name: {1}, the attribute value: {2}.", 
    i[2022] = "EXML parsing error: there contains illegal characters in the id `{0}`", 
    i[2101] = "EXML parsing warnning : fail to register the class property : {0},there is already a class with the same name in the global,please try to rename the class name for the exml. \n {1}", 
    i[2102] = "EXML parsing warnning {0}: no child node can be found on the property code \n {1}", 
    i[2103] = "EXML parsing warnning {0}: the same property '{1}' on the node is assigned multiple times \n {2}", 
    i[2104] = "EXML parsing warnning, Instantiate class {0} error，the parameters of its constructor method must be empty.", 
    i[2201] = "BasicLayout doesn't support virtualization.", i[2202] = "parse skinName error，the parsing result of skinName must be a instance of eui.Skin.", 
    i[2203] = "Could not find the skin class '{0}'。", i[2301] = "parse source failed，could not find asset from URL：{0} .";
}(r || (r = {}));

!function(t) {
    e.$locale_strings = e.$locale_strings || {}, e.$locale_strings.zh_CN = e.$locale_strings.zh_CN || {};
    var i = e.$locale_strings.zh_CN;
    i[2001] = "EXML解析错误 {0}: 找不到EXML文件", i[2002] = "EXML解析错误: 不是有效的XML文件:\n{0}", i[2003] = "EXML解析错误 {0}: 无法找到节点所对应的类定义\n{1}", 
    i[2004] = "EXML解析错误 {0}: 节点不能含有同名的id属性\n{1}", i[2005] = "EXML解析错误 {0}: 节点上不存在名为'{1}'的属性，或者该属性没有初始值:\n{2}", 
    i[2006] = "EXML解析错误 {0}: 未定义的视图状态名称:'{1}'\n{2}", i[2007] = "EXML解析错误 {0}: 只有处于容器内的 UIComponent 对象可以使用includeIn和excludeFrom属性\n{1}", 
    i[2008] = "EXML解析错误 {0}: 无法将'{1}'类型的值赋给属性:'{2}'\n{3}", i[2009] = "EXML解析错误 {0}: 在节点属性值的‘{}’标签内只能引用一个ID，不允许使用复杂表达式\n{1}", 
    i[2010] = "EXML解析错误 {0}: 属性:'{1}'所引用的ID: '{2}'不存在\n{3}", i[2011] = "EXML解析错误 {0}: 无法将多个子节点赋值给同一个属性:'{1}'\n{2}", 
    i[2012] = "EXML解析错误 {0}: 节点上不存在默认属性，必须显式声明子节点要赋值到的属性名\n{1}", i[2013] = "EXML解析错误 {0}: 类型为Array的属性节点上不允许使用视图状态语法\n{1}", 
    i[2014] = "EXML解析错误 {0}: 不允许将皮肤类自身赋值给节点属性\n{1}", i[2015] = "EXML解析错误 {0}: 节点引用的类定义:{1}不存在\n{2}", 
    i[2016] = "EXML解析错误 {0}: 节点上'scale9Grid'属性值的格式错误:{1}", i[2017] = "EXML解析错误 {0}: 节点上缺少命名空间前缀:{1}", 
    i[2018] = "EXML解析错误 {0}: 节点上'skinName'属性值的格式错误:{1}", i[2019] = "EXML解析错误 {0}: 容器的子项必须是可视节点:{1}", 
    i[2020] = "EXML解析错误 {0}: 在w:Declarations内的子节点，不允许使用includeIn和excludeFrom属性\n{1}", 
    i[2021] = "{0} 中存在编译错误，属性名 : {1}，属性值 : {2}", i[2022] = "EXML解析错误: id `{0}` 中含有非法字符", 
    i[2101] = "EXML解析警告: 在EXML根节点上声明的 class 属性: {0} 注册失败，所对应的类已经存在，请尝试重命名要注册的类名。\n{1}", 
    i[2102] = "EXML解析警告 {0}: 在属性节点上找不到任何子节点\n{1}", i[2103] = "EXML解析警告 {0}: 节点上的同一个属性'{1}'被多次赋值\n{2}", 
    i[2104] = "EXML解析警告，无法直接实例化自定义组件：{0} ，在EXML中使用的自定义组件必须要能直接被实例化，否则可能导致后续EXML解析报错。", 
    i[2201] = "BasicLayout 不支持虚拟化。", i[2202] = "皮肤解析出错，属性 skinName 的值必须要能够解析为一个 eui.Skin 的实例。", 
    i[2203] = "找不到指定的皮肤类 '{0}'。", i[2301] = "素材解析失败，找不到URL：{0} 所对应的资源。";
}(r || (r = {}));

!function(t) {
    var e = function(e) {
        function i() {
            return e.call(this) || this;
        }
        return n(i, e), i.prototype.measure = function() {
            e.prototype.measure.call(this), t.sys.measure(this.$target);
        }, i.prototype.updateDisplayList = function(i, n) {
            e.prototype.updateDisplayList.call(this, i, n);
            var o = this.$target, r = t.sys.updateDisplayList(o, i, n);
            o.setContentSize(Math.ceil(r.x), Math.ceil(r.y));
        }, i;
    }(t.LayoutBase);
    t.BasicLayout = e, i(e.prototype, "eui.BasicLayout");
}(r || (r = {})), function(t) {
    !function(t) {
        function i(t, e) {
            if (!t || "number" == typeof t) return t;
            var i = t, n = i.indexOf("%");
            return -1 == n ? +i : .01 * +i.substring(0, n) * e;
        }
        var n = "eui.UIComponent";
        t.measure = function(t) {
            if (t) {
                for (var i = 0, o = 0, r = e.$TempRectangle, s = t.numChildren, a = 0; s > a; a++) {
                    var h = t.getChildAt(a);
                    if (e.is(h, n) && h.$includeInLayout) {
                        var l = h.$UIComponent, u = +l[4], p = +l[5], c = +l[0], d = +l[1], f = +l[2], y = +l[3], v = void 0, g = void 0;
                        h.getPreferredBounds(r), isNaN(c) || isNaN(d) ? isNaN(u) ? isNaN(c) && isNaN(d) ? v = r.x : (v = isNaN(c) ? 0 : c, 
                        v += isNaN(d) ? 0 : d) : v = 2 * Math.abs(u) : v = c + d, isNaN(f) || isNaN(y) ? isNaN(p) ? isNaN(f) && isNaN(y) ? g = r.y : (g = isNaN(f) ? 0 : f, 
                        g += isNaN(y) ? 0 : y) : g = 2 * Math.abs(p) : g = f + y;
                        var m = r.width, $ = r.height;
                        i = Math.ceil(Math.max(i, v + m)), o = Math.ceil(Math.max(o, g + $));
                    }
                }
                t.setMeasuredSize(i, o);
            }
        }, t.updateDisplayList = function(t, o, r) {
            if (t) {
                for (var s = t.numChildren, a = 0, h = 0, l = e.$TempRectangle, u = 0; s > u; u++) {
                    var p = t.getChildAt(u);
                    if (e.is(p, n) && p.$includeInLayout) {
                        var c = p.$UIComponent, d = i(c[4], .5 * o), f = i(c[5], .5 * r), y = i(c[0], o), v = i(c[1], o), g = i(c[2], r), m = i(c[3], r), $ = c[6], E = c[7], C = NaN, b = NaN;
                        isNaN(y) || isNaN(v) ? isNaN($) || (C = Math.round(o * Math.min(.01 * $, 1))) : C = o - v - y, 
                        isNaN(g) || isNaN(m) ? isNaN(E) || (b = Math.round(r * Math.min(.01 * E, 1))) : b = r - m - g, 
                        p.setLayoutBoundsSize(C, b), p.getLayoutBounds(l);
                        var S = l.width, T = l.height, I = NaN, P = NaN;
                        I = isNaN(d) ? isNaN(y) ? isNaN(v) ? l.x : o - S - v : y : Math.round((o - S) / 2 + d), 
                        P = isNaN(f) ? isNaN(g) ? isNaN(m) ? l.y : r - T - m : g : Math.round((r - T) / 2 + f), 
                        p.setLayoutBoundsPosition(I, P), a = Math.max(a, I + S), h = Math.max(h, P + T);
                    }
                }
                return e.$TempPoint.setTo(a, h);
            }
        };
    }(t.sys || (t.sys = {}));
}(r || (r = {}));

!function(t) {
    var e = function() {
        function t() {}
        return t.LEFT = "left", t.JUSTIFY_USING_GAP = "justifyUsingGap", t.JUSTIFY_USING_WIDTH = "justifyUsingWidth", 
        t;
    }();
    t.ColumnAlign = e, i(e.prototype, "eui.ColumnAlign");
}(r || (r = {}));

!function(t) {
    var o = "eui.UIComponent", r = function(i) {
        function r() {
            return null !== i && i.apply(this, arguments) || this;
        }
        return n(r, i), r.prototype.measureReal = function() {
            for (var t = this.$target, i = t.numElements, n = i, r = 0, s = 0, a = e.$TempRectangle, h = 0; i > h; h++) {
                var l = t.getElementAt(h);
                e.is(l, o) && l.$includeInLayout ? (l.getPreferredBounds(a), r += a.width, s = Math.max(s, a.height)) : n--;
            }
            r += (n - 1) * this.$gap;
            var u = this.$paddingLeft + this.$paddingRight, p = this.$paddingTop + this.$paddingBottom;
            t.setMeasuredSize(r + u, s + p);
        }, r.prototype.measureVirtual = function() {
            for (var t = this.$target, i = this.$typicalWidth, n = this.getElementTotalSize(), r = Math.max(this.maxElementSize, this.$typicalHeight), s = e.$TempRectangle, a = this.endIndex, h = this.elementSizeTable, l = this.startIndex; a > l; l++) {
                var u = t.getElementAt(l);
                e.is(u, o) && u.$includeInLayout && (u.getPreferredBounds(s), n += s.width, n -= isNaN(h[l]) ? i : h[l], 
                r = Math.max(r, s.height));
            }
            var p = this.$paddingLeft + this.$paddingRight, c = this.$paddingTop + this.$paddingBottom;
            t.setMeasuredSize(n + p, r + c);
        }, r.prototype.updateDisplayListReal = function(i, n) {
            var r = this.$target, s = this.$paddingLeft, a = this.$paddingRight, h = this.$paddingTop, l = this.$paddingBottom, u = this.$gap, p = Math.max(0, i - s - a), c = Math.max(0, n - h - l), d = this.$horizontalAlign == t.JustifyAlign.JUSTIFY, f = this.$verticalAlign == t.JustifyAlign.JUSTIFY || this.$verticalAlign == t.JustifyAlign.CONTENT_JUSTIFY, y = 0;
            f || (this.$verticalAlign == e.VerticalAlign.MIDDLE ? y = .5 : this.$verticalAlign == e.VerticalAlign.BOTTOM && (y = 1));
            var v, g, m, $ = r.numElements, E = $, C = s, b = h, S = 0, T = 0, I = [], P = p, x = this.maxElementSize, L = e.$TempRectangle;
            for (v = 0; $ > v; v++) {
                var N = r.getElementAt(v);
                if (e.is(N, o) && N.$includeInLayout) if (N.getPreferredBounds(L), x = Math.max(x, L.height), 
                d) S += L.width; else {
                    X = N.$UIComponent;
                    isNaN(X[6]) ? P -= L.width : (T += X[6], m = new t.sys.ChildInfo(), m.layoutElement = N, 
                    m.percent = X[6], m.min = X[12], m.max = X[13], I.push(m));
                } else E--;
            }
            P = (P -= u * (E - 1)) > 0 ? P : 0;
            var _, O = p - S - u * (E - 1), A = E, B = {};
            if (d) {
                if (0 > O) {
                    for (_ = P / E, v = 0; $ > v; v++) g = r.getElementAt(v), e.is(g, o) && g.$includeInLayout && (g.getPreferredBounds(L), 
                    L.width <= _ && (P -= L.width, A--));
                    P = P > 0 ? P : 0;
                }
            } else if (T > 0) {
                this.flexChildrenProportionally(p, P, T, I);
                var D = 0, R = I.length;
                for (v = 0; R > v; v++) {
                    m = I[v];
                    var M = Math.round(m.size + D);
                    D += m.size - M, B[m.layoutElement.$hashCode] = M, P -= M;
                }
                P = P > 0 ? P : 0;
            }
            this.$horizontalAlign == e.HorizontalAlign.CENTER ? C = s + .5 * P : this.$horizontalAlign == e.HorizontalAlign.RIGHT && (C = s + P);
            var w = s, V = h, H = 0, z = 0, U = Math.ceil(c);
            this.$verticalAlign == t.JustifyAlign.CONTENT_JUSTIFY && (U = Math.ceil(Math.max(c, x)));
            var k, F, G = 0;
            for (v = 0; $ > v; v++) {
                var j = 0;
                if (g = r.getElementAt(v), e.is(g, o) && g.$includeInLayout) {
                    if (g.getPreferredBounds(L), k = NaN, d ? (F = NaN, O > 0 ? F = P * L.width / S : 0 > O && L.width > _ && (F = P / A), 
                    isNaN(F) || (k = Math.round(F + G), G += F - k)) : k = B[g.$hashCode], f) b = h, 
                    g.setLayoutBoundsSize(k, U), g.getLayoutBounds(L); else {
                        var W = NaN, X = g.$UIComponent;
                        if (!isNaN(g.percentHeight)) {
                            var Y = Math.min(100, X[7]);
                            W = Math.round(c * Y * .01);
                        }
                        g.setLayoutBoundsSize(k, W), g.getLayoutBounds(L), b = h + (j = (j = (c - L.height) * y) > 0 ? j : 0);
                    }
                    g.setLayoutBoundsPosition(Math.round(C), Math.round(b)), H = Math.ceil(L.width), 
                    z = Math.ceil(L.height), w = Math.max(w, C + H), V = Math.max(V, b + z), C += H + u;
                }
            }
            this.maxElementSize = x, r.setContentSize(w + a, V + l);
        }, r.prototype.updateDisplayListVirtual = function(i, n) {
            var r = this.$target;
            this.indexInViewCalculated ? this.indexInViewCalculated = !1 : this.getIndexInView();
            var s, a = this.$paddingRight, h = this.$paddingTop, l = this.$paddingBottom, u = this.$gap, p = r.numElements;
            if (-1 == this.startIndex || -1 == this.endIndex) return s = this.getStartPosition(p) - u + a, 
            void r.setContentSize(s, r.contentHeight);
            var c = this.endIndex;
            r.setVirtualElementIndicesInView(this.startIndex, c);
            var d = this.$verticalAlign == t.JustifyAlign.JUSTIFY || this.$verticalAlign == t.JustifyAlign.CONTENT_JUSTIFY, f = this.$verticalAlign == t.JustifyAlign.CONTENT_JUSTIFY, y = 0;
            d || (this.$verticalAlign == e.VerticalAlign.MIDDLE ? y = .5 : this.$verticalAlign == e.VerticalAlign.BOTTOM && (y = 1));
            var v, g = e.$TempRectangle, m = Math.max(0, n - h - l), $ = Math.ceil(m), E = this.$typicalHeight, C = this.$typicalWidth, b = this.maxElementSize, S = Math.max(E, this.maxElementSize);
            if (f) {
                for (var T = this.startIndex; c >= T; T++) v = r.getVirtualElementAt(T), e.is(v, o) && v.$includeInLayout && (v.getPreferredBounds(g), 
                b = Math.max(b, g.height));
                $ = Math.ceil(Math.max(m, b));
            }
            for (var I = 0, P = 0, x = 0, L = !1, N = this.elementSizeTable, _ = this.startIndex; c >= _; _++) {
                var O = 0;
                v = r.getVirtualElementAt(_), e.is(v, o) && v.$includeInLayout && (v.getPreferredBounds(g), 
                f || (b = Math.max(b, g.height)), d ? (P = h, v.setLayoutBoundsSize(NaN, $), v.getLayoutBounds(g)) : (v.getLayoutBounds(g), 
                O = (m - g.height) * y, O = O > 0 ? O : 0, P = h + O), x = Math.max(x, g.height), 
                L || (isNaN(N[_]) ? C : N[_]) != g.width && (L = !0), N[_] = g.width, I = this.getStartPosition(_), 
                v.setLayoutBoundsPosition(Math.round(I), Math.round(P)));
            }
            x += h + l, s = this.getStartPosition(p) - u + a, this.maxElementSize = b, r.setContentSize(s, x), 
            (L || S < this.maxElementSize) && r.invalidateSize();
        }, r.prototype.getStartPosition = function(t) {
            if (!this.$useVirtualLayout && this.$target) {
                var e = this.$target.getElementAt(t);
                if (e) return e.x;
            }
            for (var i = this.$typicalWidth, n = this.$paddingLeft, o = this.$gap, r = this.elementSizeTable, s = 0; t > s; s++) {
                var a = r[s];
                isNaN(a) && (a = i), n += a + o;
            }
            return n;
        }, r.prototype.getElementSize = function(t) {
            if (this.$useVirtualLayout) {
                var e = this.elementSizeTable[t];
                return isNaN(e) && (e = this.$typicalWidth), e;
            }
            return this.$target ? this.$target.getElementAt(t).width : 0;
        }, r.prototype.getElementTotalSize = function() {
            for (var t = this.$typicalWidth, e = this.$gap, i = 0, n = this.$target.numElements, o = this.elementSizeTable, r = 0; n > r; r++) {
                var s = o[r];
                isNaN(s) && (s = t), i += s + e;
            }
            return i -= e;
        }, r.prototype.elementAdded = function(t) {
            this.useVirtualLayout && (i.prototype.elementAdded.call(this, t), this.elementSizeTable.splice(t, 0, this.$typicalWidth));
        }, r.prototype.getIndexInView = function() {
            var t = this.$target;
            if (!t || 0 == t.numElements) return this.startIndex = this.endIndex = -1, !1;
            var e = t.$UIComponent;
            if (e[10] <= 0 || e[11] <= 0) return this.startIndex = this.endIndex = -1, !1;
            var i = t.numElements, n = this.getStartPosition(i - 1) + this.elementSizeTable[i - 1] + this.$paddingRight, o = t.scrollH;
            if (o > n - this.$paddingRight) return this.startIndex = -1, this.endIndex = -1, 
            !1;
            var r = t.scrollH + e[10];
            if (r < this.$paddingLeft) return this.startIndex = -1, this.endIndex = -1, !1;
            var s = this.startIndex, a = this.endIndex;
            return this.startIndex = this.findIndexAt(o, 0, i - 1), -1 == this.startIndex && (this.startIndex = 0), 
            this.endIndex = this.findIndexAt(r, 0, i - 1), -1 == this.endIndex && (this.endIndex = i - 1), 
            s != this.startIndex || a != this.endIndex;
        }, r;
    }(t.LinearLayoutBase);
    t.HorizontalLayout = r, i(r.prototype, "eui.HorizontalLayout");
}(r || (r = {}));

!function(t) {
    var e = function() {
        function t() {}
        return t.JUSTIFY = "justify", t.CONTENT_JUSTIFY = "contentJustify", t;
    }();
    t.JustifyAlign = e, i(e.prototype, "eui.JustifyAlign");
}(r || (r = {}));

!function(t) {
    var e = function() {
        function t() {}
        return t.TOP = "top", t.JUSTIFY_USING_GAP = "justifyUsingGap", t.JUSTIFY_USING_HEIGHT = "justifyUsingHeight", 
        t;
    }();
    t.RowAlign = e, i(e.prototype, "eui.RowAlign");
}(r || (r = {}));

!function(t) {
    var o = "eui.UIComponent", r = function(i) {
        function r() {
            var e = i.call(this) || this;
            return e.explicitHorizontalGap = NaN, e._horizontalGap = 6, e.explicitVerticalGap = NaN, 
            e._verticalGap = 6, e._columnCount = -1, e._requestedColumnCount = 0, e._rowCount = -1, 
            e._requestedRowCount = 0, e.explicitColumnWidth = NaN, e._columnWidth = NaN, e.explicitRowHeight = NaN, 
            e._rowHeight = NaN, e._paddingLeft = 0, e._paddingRight = 0, e._paddingTop = 0, 
            e._paddingBottom = 0, e._horizontalAlign = t.JustifyAlign.JUSTIFY, e._verticalAlign = t.JustifyAlign.JUSTIFY, 
            e._columnAlign = t.ColumnAlign.LEFT, e._rowAlign = t.RowAlign.TOP, e._orientation = t.TileOrientation.ROWS, 
            e.maxElementWidth = 0, e.maxElementHeight = 0, e.startIndex = -1, e.endIndex = -1, 
            e.indexInViewCalculated = !1, e;
        }
        return n(r, i), Object.defineProperty(r.prototype, "horizontalGap", {
            get: function() {
                return this._horizontalGap;
            },
            set: function(t) {
                (t = +t) !== this._horizontalGap && (this.explicitHorizontalGap = t, this._horizontalGap = t, 
                this.invalidateTargetLayout());
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(r.prototype, "verticalGap", {
            get: function() {
                return this._verticalGap;
            },
            set: function(t) {
                (t = +t) !== this._verticalGap && (this.explicitVerticalGap = t, this._verticalGap = t, 
                this.invalidateTargetLayout());
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(r.prototype, "columnCount", {
            get: function() {
                return this._columnCount;
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(r.prototype, "requestedColumnCount", {
            get: function() {
                return this._requestedColumnCount;
            },
            set: function(t) {
                t = +t || 0, this._requestedColumnCount !== t && (this._requestedColumnCount = t, 
                this._columnCount = t, this.invalidateTargetLayout());
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(r.prototype, "rowCount", {
            get: function() {
                return this._rowCount;
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(r.prototype, "requestedRowCount", {
            get: function() {
                return this._requestedRowCount;
            },
            set: function(t) {
                t = +t || 0, this._requestedRowCount != t && (this._requestedRowCount = t, this._rowCount = t, 
                this.invalidateTargetLayout());
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(r.prototype, "columnWidth", {
            get: function() {
                return this._columnWidth;
            },
            set: function(t) {
                (t = +t) !== this._columnWidth && (this.explicitColumnWidth = t, this._columnWidth = t, 
                this.invalidateTargetLayout());
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(r.prototype, "rowHeight", {
            get: function() {
                return this._rowHeight;
            },
            set: function(t) {
                (t = +t) !== this._rowHeight && (this.explicitRowHeight = t, this._rowHeight = t, 
                this.invalidateTargetLayout());
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(r.prototype, "paddingLeft", {
            get: function() {
                return this._paddingLeft;
            },
            set: function(t) {
                t = +t || 0, this._paddingLeft != t && (this._paddingLeft = t, this.invalidateTargetLayout());
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(r.prototype, "paddingRight", {
            get: function() {
                return this._paddingRight;
            },
            set: function(t) {
                t = +t || 0, this._paddingRight !== t && (this._paddingRight = t, this.invalidateTargetLayout());
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(r.prototype, "paddingTop", {
            get: function() {
                return this._paddingTop;
            },
            set: function(t) {
                t = +t || 0, this._paddingTop != t && (this._paddingTop = t, this.invalidateTargetLayout());
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(r.prototype, "paddingBottom", {
            get: function() {
                return this._paddingBottom;
            },
            set: function(t) {
                t = +t || 0, this._paddingBottom !== t && (this._paddingBottom = t, this.invalidateTargetLayout());
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(r.prototype, "horizontalAlign", {
            get: function() {
                return this._horizontalAlign;
            },
            set: function(t) {
                this._horizontalAlign != t && (this._horizontalAlign = t, this.invalidateTargetLayout());
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(r.prototype, "verticalAlign", {
            get: function() {
                return this._verticalAlign;
            },
            set: function(t) {
                this._verticalAlign != t && (this._verticalAlign = t, this.invalidateTargetLayout());
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(r.prototype, "columnAlign", {
            get: function() {
                return this._columnAlign;
            },
            set: function(t) {
                this._columnAlign != t && (this._columnAlign = t, this.invalidateTargetLayout());
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(r.prototype, "rowAlign", {
            get: function() {
                return this._rowAlign;
            },
            set: function(t) {
                this._rowAlign != t && (this._rowAlign = t, this.invalidateTargetLayout());
            },
            enumerable: !0,
            configurable: !0
        }), Object.defineProperty(r.prototype, "orientation", {
            get: function() {
                return this._orientation;
            },
            set: function(t) {
                this._orientation != t && (this._orientation = t, this.invalidateTargetLayout());
            },
            enumerable: !0,
            configurable: !0
        }), r.prototype.invalidateTargetLayout = function() {
            var t = this.$target;
            t && (t.invalidateSize(), t.invalidateDisplayList());
        }, r.prototype.measure = function() {
            var t = this.$target;
            if (t) {
                var e = this._columnCount, i = this._rowCount, n = this._columnWidth, o = this._rowHeight, r = 0, s = 0, a = t.$UIComponent;
                this.calculateRowAndColumn(a[8], a[9]);
                var h = this._requestedColumnCount > 0 ? this._requestedColumnCount : this._columnCount, l = this._requestedRowCount > 0 ? this._requestedRowCount : this._rowCount, u = isNaN(this._horizontalGap) ? 0 : this._horizontalGap, p = isNaN(this._verticalGap) ? 0 : this._verticalGap;
                h > 0 && (r = h * (this._columnWidth + u) - u), l > 0 && (s = l * (this._rowHeight + p) - p);
                var c = this._paddingLeft + this._paddingRight, d = this._paddingTop + this._paddingBottom;
                t.setMeasuredSize(r + c, s + d), this._columnCount = e, this._rowCount = i, this._columnWidth = n, 
                this._rowHeight = o;
            }
        }, r.prototype.calculateRowAndColumn = function(i, n) {
            var r = this.$target, s = isNaN(this._horizontalGap) ? 0 : this._horizontalGap, a = isNaN(this._verticalGap) ? 0 : this._verticalGap;
            this._rowCount = this._columnCount = -1;
            for (var h = r.numElements, l = h, u = 0; l > u; u++) {
                var p = r.getElementAt(u);
                !p || e.is(p, o) && p.$includeInLayout || h--;
            }
            if (0 != h) {
                (isNaN(this.explicitColumnWidth) || isNaN(this.explicitRowHeight)) && this.updateMaxElementSize(), 
                isNaN(this.explicitColumnWidth) ? this._columnWidth = this.maxElementWidth : this._columnWidth = this.explicitColumnWidth, 
                isNaN(this.explicitRowHeight) ? this._rowHeight = this.maxElementHeight : this._rowHeight = this.explicitRowHeight;
                var c = this._columnWidth + s;
                0 >= c && (c = 1);
                var d = this._rowHeight + a;
                0 >= d && (d = 1);
                var f = this._orientation == t.TileOrientation.COLUMNS, y = !isNaN(i), v = !isNaN(n), g = this._paddingLeft, m = this._paddingRight, $ = this._paddingTop, E = this._paddingBottom;
                if (this._requestedColumnCount > 0 || this._requestedRowCount > 0) this._requestedRowCount > 0 && (this._rowCount = Math.min(this._requestedRowCount, h)), 
                this._requestedColumnCount > 0 && (this._columnCount = Math.min(this._requestedColumnCount, h)); else if (y || v) if (!y || v && f) {
                    var C = Math.max(0, n - $ - E);
                    this._rowCount = Math.floor((C + a) / d), this._rowCount = Math.max(1, Math.min(this._rowCount, h));
                } else {
                    var b = Math.max(0, i - g - m);
                    this._columnCount = Math.floor((b + s) / c), this._columnCount = Math.max(1, Math.min(this._columnCount, h));
                } else {
                    var S = Math.sqrt(h * c * d);
                    f ? this._rowCount = Math.max(1, Math.round(S / d)) : this._columnCount = Math.max(1, Math.round(S / c));
                }
                -1 == this._rowCount && (this._rowCount = Math.max(1, Math.ceil(h / this._columnCount))), 
                -1 == this._columnCount && (this._columnCount = Math.max(1, Math.ceil(h / this._rowCount))), 
                this._requestedColumnCount > 0 && this._requestedRowCount > 0 && (this._orientation == t.TileOrientation.ROWS ? this._rowCount = Math.max(1, Math.ceil(h / this._requestedColumnCount)) : this._columnCount = Math.max(1, Math.ceil(h / this._requestedRowCount)));
            } else this._rowCount = this._columnCount = 0;
        }, r.prototype.updateMaxElementSize = function() {
            this.$target && (this.$useVirtualLayout ? (this.maxElementWidth = Math.max(this.maxElementWidth, this.$typicalWidth), 
            this.maxElementHeight = Math.max(this.maxElementHeight, this.$typicalHeight), this.doUpdateMaxElementSize(this.startIndex, this.endIndex)) : this.doUpdateMaxElementSize(0, this.$target.numElements - 1));
        }, r.prototype.doUpdateMaxElementSize = function(t, i) {
            var n = this.maxElementWidth, r = this.maxElementHeight, s = e.$TempRectangle, a = this.$target;
            if (-1 != t && -1 != i) for (var h = t; i >= h; h++) {
                var l = a.getVirtualElementAt(h);
                e.is(l, o) && l.$includeInLayout && (l.getPreferredBounds(s), n = Math.max(n, s.width), 
                r = Math.max(r, s.height));
            }
            this.maxElementWidth = n, this.maxElementHeight = r;
        }, r.prototype.clearVirtualLayoutCache = function() {
            i.prototype.clearVirtualLayoutCache.call(this), this.maxElementWidth = 0, this.maxElementHeight = 0;
        }, r.prototype.scrollPositionChanged = function() {
            this.$useVirtualLayout && this.getIndexInView() && (this.indexInViewCalculated = !0, 
            this.$target.invalidateDisplayList());
        }, r.prototype.getIndexInView = function() {
            if (!this.$target || 0 == this.$target.numElements) return this.startIndex = this.endIndex = -1, 
            !1;
            var e = this.$target, i = e.numElements;
            if (!this.$useVirtualLayout) return this.startIndex = 0, this.endIndex = i - 1, 
            !1;
            var n = e.$UIComponent;
            if (0 == n[10] || 0 == n[11]) return this.startIndex = this.endIndex = -1, !1;
            var o = this.startIndex, r = this.endIndex, s = this._paddingLeft, a = this._paddingTop, h = isNaN(this._horizontalGap) ? 0 : this._horizontalGap, l = isNaN(this._verticalGap) ? 0 : this._verticalGap;
            if (this._orientation == t.TileOrientation.COLUMNS) {
                var u = this._columnWidth + h;
                if (0 >= u) return this.startIndex = 0, this.endIndex = i - 1, !1;
                var p = e.scrollH, c = p + n[10], d = Math.floor((p - s) / u);
                0 > d && (d = 0);
                var f = Math.ceil((c - s) / u);
                0 > f && (f = 0), this.startIndex = Math.min(i - 1, Math.max(0, d * this._rowCount)), 
                this.endIndex = Math.min(i - 1, Math.max(0, f * this._rowCount - 1));
            } else {
                var y = this._rowHeight + l;
                if (0 >= y) return this.startIndex = 0, this.endIndex = i - 1, !1;
                var v = e.scrollV, g = v + n[11], m = Math.floor((v - a) / y);
                0 > m && (m = 0);
                var $ = Math.ceil((g - a) / y);
                0 > $ && ($ = 0), this.startIndex = Math.min(i - 1, Math.max(0, m * this._columnCount)), 
                this.endIndex = Math.min(i - 1, Math.max(0, $ * this._columnCount - 1));
            }
            return this.startIndex != o || this.endIndex != r;
        }, r.prototype.updateDisplayList = function(n, r) {
            if (i.prototype.updateDisplayList.call(this, n, r), this.$target) {
                var s = this.$target, a = this._paddingLeft, h = this._paddingRight, l = this._paddingTop, u = this._paddingBottom;
                if (this.indexInViewCalculated) this.indexInViewCalculated = !1; else {
                    if (this.calculateRowAndColumn(n, r), 0 == this._rowCount || 0 == this._columnCount) return void s.setContentSize(a + h, l + u);
                    this.adjustForJustify(n, r), this.getIndexInView();
                }
                if (this.$useVirtualLayout && (this.calculateRowAndColumn(n, r), this.adjustForJustify(n, r)), 
                -1 == this.startIndex || -1 == this.endIndex) return void s.setContentSize(0, 0);
                var p = this.endIndex;
                s.setVirtualElementIndicesInView(this.startIndex, p);
                for (var c, d, f, y, v, g = this._orientation == t.TileOrientation.COLUMNS, m = this.startIndex, $ = isNaN(this._horizontalGap) ? 0 : this._horizontalGap, E = isNaN(this._verticalGap) ? 0 : this._verticalGap, C = this._rowCount, b = this._columnCount, S = this._columnWidth, T = this._rowHeight, I = this.startIndex; p >= I; I++) if (c = this.$useVirtualLayout ? this.target.getVirtualElementAt(I) : this.target.getElementAt(I), 
                e.is(c, o) && c.$includeInLayout) {
                    switch (g ? (y = Math.ceil((m + 1) / C) - 1, -1 == (v = Math.ceil((m + 1) % C) - 1) && (v = C - 1)) : (-1 == (y = Math.ceil((m + 1) % b) - 1) && (y = b - 1), 
                    v = Math.ceil((m + 1) / b) - 1), this._horizontalAlign) {
                      case e.HorizontalAlign.RIGHT:
                        d = n - (y + 1) * (S + $) + $ - h;
                        break;

                      case e.HorizontalAlign.LEFT:
                        d = y * (S + $) + a;
                        break;

                      default:
                        d = y * (S + $) + a;
                    }
                    switch (this._verticalAlign) {
                      case e.VerticalAlign.TOP:
                        f = v * (T + E) + l;
                        break;

                      case e.VerticalAlign.BOTTOM:
                        f = r - (v + 1) * (T + E) + E - u;
                        break;

                      default:
                        f = v * (T + E) + l;
                    }
                    this.sizeAndPositionElement(c, d, f, S, T), m++;
                }
                var P = a + h, x = l + u, L = (S + $) * b - $, N = (T + E) * C - E;
                s.setContentSize(L + P, N + x);
            }
        }, r.prototype.sizeAndPositionElement = function(i, n, o, r, s) {
            var a = NaN, h = NaN, l = i.$UIComponent;
            this._horizontalAlign == t.JustifyAlign.JUSTIFY ? a = r : isNaN(l[6]) || (a = r * l[6] * .01), 
            this._verticalAlign == t.JustifyAlign.JUSTIFY ? h = s : isNaN(l[7]) || (h = s * l[7] * .01), 
            i.setLayoutBoundsSize(Math.round(a), Math.round(h));
            var u = n, p = e.$TempRectangle;
            switch (i.getLayoutBounds(p), this._horizontalAlign) {
              case e.HorizontalAlign.RIGHT:
                u += r - p.width;
                break;

              case e.HorizontalAlign.CENTER:
                u = n + (r - p.width) / 2;
            }
            var c = o;
            switch (this._verticalAlign) {
              case e.VerticalAlign.BOTTOM:
                c += s - p.height;
                break;

              case e.VerticalAlign.MIDDLE:
                c += (s - p.height) / 2;
            }
            i.setLayoutBoundsPosition(Math.round(u), Math.round(c));
        }, r.prototype.adjustForJustify = function(e, i) {
            var n = this._paddingLeft, o = this._paddingRight, r = this._paddingTop, s = this._paddingBottom, a = Math.max(0, e - n - o), h = Math.max(0, i - r - s);
            isNaN(this.explicitVerticalGap) || (this._verticalGap = this.explicitVerticalGap), 
            isNaN(this.explicitHorizontalGap) || (this._horizontalGap = this.explicitHorizontalGap), 
            this._verticalGap = isNaN(this._verticalGap) ? 0 : this._verticalGap, this._horizontalGap = isNaN(this._horizontalGap) ? 0 : this._horizontalGap;
            var l, u = h - this._rowHeight * this._rowCount, p = a - this._columnWidth * this._columnCount;
            u > 0 && (this._rowAlign == t.RowAlign.JUSTIFY_USING_GAP ? (l = Math.max(1, this._rowCount - 1), 
            this._verticalGap = u / l) : this._rowAlign == t.RowAlign.JUSTIFY_USING_HEIGHT && this._rowCount > 0 && (this._rowHeight += (u - (this._rowCount - 1) * this._verticalGap) / this._rowCount)), 
            p > 0 && (this._columnAlign == t.ColumnAlign.JUSTIFY_USING_GAP ? (l = Math.max(1, this._columnCount - 1), 
            this._horizontalGap = p / l) : this._columnAlign == t.ColumnAlign.JUSTIFY_USING_WIDTH && this._columnCount > 0 && (this._columnWidth += (p - (this._columnCount - 1) * this._horizontalGap) / this._columnCount));
        }, r;
    }(t.LayoutBase);
    t.TileLayout = r, i(r.prototype, "eui.TileLayout");
}(r || (r = {}));

!function(t) {
    var e = function() {
        function t() {}
        return t.ROWS = "rows", t.COLUMNS = "columns", t;
    }();
    t.TileOrientation = e, i(e.prototype, "eui.TileOrientation");
}(r || (r = {}));

!function(t) {
    var o = "eui.UIComponent", r = function(i) {
        function r() {
            return null !== i && i.apply(this, arguments) || this;
        }
        return n(r, i), r.prototype.measureReal = function() {
            for (var t = this.$target, i = t.numElements, n = i, r = 0, s = 0, a = e.$TempRectangle, h = 0; i > h; h++) {
                var l = t.getElementAt(h);
                e.is(l, o) && l.$includeInLayout ? (l.getPreferredBounds(a), s += a.height, r = Math.max(r, a.width)) : n--;
            }
            s += (n - 1) * this.$gap;
            var u = this.$paddingLeft + this.$paddingRight, p = this.$paddingTop + this.$paddingBottom;
            t.setMeasuredSize(r + u, s + p);
        }, r.prototype.measureVirtual = function() {
            for (var t = this.$target, i = this.$typicalHeight, n = this.getElementTotalSize(), r = Math.max(this.maxElementSize, this.$typicalWidth), s = e.$TempRectangle, a = this.endIndex, h = this.elementSizeTable, l = this.startIndex; a > l; l++) {
                var u = t.getElementAt(l);
                e.is(u, o) && u.$includeInLayout && (u.getPreferredBounds(s), n += s.height, n -= isNaN(h[l]) ? i : h[l], 
                r = Math.max(r, s.width));
            }
            var p = this.$paddingLeft + this.$paddingRight, c = this.$paddingTop + this.$paddingBottom;
            t.setMeasuredSize(r + p, n + c);
        }, r.prototype.updateDisplayListReal = function(i, n) {
            var r = this.$target, s = this.$paddingLeft, a = this.$paddingRight, h = this.$paddingTop, l = this.$paddingBottom, u = this.$gap, p = Math.max(0, i - s - a), c = Math.max(0, n - h - l), d = this.$verticalAlign == t.JustifyAlign.JUSTIFY, f = this.$horizontalAlign == t.JustifyAlign.JUSTIFY || this.$horizontalAlign == t.JustifyAlign.CONTENT_JUSTIFY, y = 0;
            f || (this.$horizontalAlign == e.HorizontalAlign.CENTER ? y = .5 : this.$horizontalAlign == e.HorizontalAlign.RIGHT && (y = 1));
            var v, g, m, $ = r.numElements, E = $, C = s, b = h, S = 0, T = 0, I = [], P = c, x = this.maxElementSize, L = e.$TempRectangle;
            for (v = 0; $ > v; v++) {
                var N = r.getElementAt(v);
                if (e.is(N, o) && N.$includeInLayout) if (N.getPreferredBounds(L), x = Math.max(x, L.width), 
                d) S += L.height; else {
                    X = N.$UIComponent;
                    isNaN(X[7]) ? P -= L.height : (T += X[7], m = new t.sys.ChildInfo(), m.layoutElement = N, 
                    m.percent = X[7], m.min = X[14], m.max = X[15], I.push(m));
                } else E--;
            }
            P = (P -= u * (E - 1)) > 0 ? P : 0;
            var _, O = c - S - u * (E - 1), A = E, B = {};
            if (d) {
                if (0 > O) {
                    for (_ = P / E, v = 0; $ > v; v++) g = r.getElementAt(v), e.is(g, o) && g.$includeInLayout && (g.getPreferredBounds(L), 
                    L.height <= _ && (P -= L.height, A--));
                    P = P > 0 ? P : 0;
                }
            } else if (T > 0) {
                this.flexChildrenProportionally(c, P, T, I);
                var D = 0, R = I.length;
                for (v = 0; R > v; v++) {
                    m = I[v];
                    var M = Math.round(m.size + D);
                    D += m.size - M, B[m.layoutElement.$hashCode] = M, P -= M;
                }
                P = P > 0 ? P : 0;
            }
            this.$verticalAlign == e.VerticalAlign.MIDDLE ? b = h + .5 * P : this.$verticalAlign == e.VerticalAlign.BOTTOM && (b = h + P);
            var w = s, V = h, H = 0, z = 0, U = Math.ceil(p);
            this.$horizontalAlign == t.JustifyAlign.CONTENT_JUSTIFY && (U = Math.ceil(Math.max(p, x)));
            var k, F, G = 0;
            for (v = 0; $ > v; v++) {
                var j = 0;
                if (g = r.getElementAt(v), e.is(g, o) && g.$includeInLayout) {
                    if (g.getPreferredBounds(L), k = NaN, d ? (F = NaN, O > 0 ? F = P * L.height / S : 0 > O && L.height > _ && (F = P / A), 
                    isNaN(F) || (k = Math.round(F + G), G += F - k)) : k = B[g.$hashCode], f) C = s, 
                    g.setLayoutBoundsSize(U, k), g.getLayoutBounds(L); else {
                        var W = NaN, X = g.$UIComponent;
                        if (!isNaN(X[6])) {
                            var Y = Math.min(100, X[6]);
                            W = Math.round(p * Y * .01);
                        }
                        g.setLayoutBoundsSize(W, k), g.getLayoutBounds(L), C = s + (j = (j = (p - L.width) * y) > 0 ? j : 0);
                    }
                    g.setLayoutBoundsPosition(Math.round(C), Math.round(b)), H = Math.ceil(L.width), 
                    z = Math.ceil(L.height), w = Math.max(w, C + H), V = Math.max(V, b + z), b += z + u;
                }
            }
            this.maxElementSize = x, r.setContentSize(w + a, V + l);
        }, r.prototype.updateDisplayListVirtual = function(i, n) {
            var r = this.$target;
            this.indexInViewCalculated ? this.indexInViewCalculated = !1 : this.getIndexInView();
            var s, a = this.$paddingBottom, h = this.$paddingLeft, l = this.$paddingRight, u = this.$gap, p = r.numElements;
            if (-1 == this.startIndex || -1 == this.endIndex) return s = this.getStartPosition(p) - u + a, 
            void r.setContentSize(r.contentWidth, s);
            var c = this.endIndex;
            r.setVirtualElementIndicesInView(this.startIndex, c);
            var d = this.$horizontalAlign == t.JustifyAlign.JUSTIFY || this.$horizontalAlign == t.JustifyAlign.CONTENT_JUSTIFY, f = this.$horizontalAlign == t.JustifyAlign.CONTENT_JUSTIFY, y = 0;
            d || (this.$horizontalAlign == e.HorizontalAlign.CENTER ? y = .5 : this.$horizontalAlign == e.HorizontalAlign.RIGHT && (y = 1));
            var v, g = e.$TempRectangle, m = Math.max(0, i - h - l), $ = Math.ceil(m), E = this.$typicalHeight, C = this.$typicalWidth, b = this.maxElementSize, S = Math.max(C, this.maxElementSize);
            if (f) {
                for (var T = this.startIndex; c >= T; T++) v = r.getVirtualElementAt(T), e.is(v, o) && v.$includeInLayout && (v.getPreferredBounds(g), 
                b = Math.max(b, g.width));
                $ = Math.ceil(Math.max(m, b));
            }
            for (var I = 0, P = 0, x = 0, L = !1, N = this.elementSizeTable, _ = this.startIndex; c >= _; _++) {
                var O = 0;
                v = r.getVirtualElementAt(_), e.is(v, o) && v.$includeInLayout && (v.getPreferredBounds(g), 
                f || (b = Math.max(b, g.width)), d ? (I = h, v.setLayoutBoundsSize($, NaN), v.getLayoutBounds(g)) : (v.getLayoutBounds(g), 
                O = (m - g.width) * y, O = O > 0 ? O : 0, I = h + O), x = Math.max(x, g.width), 
                L || (isNaN(N[_]) ? E : N[_]) != g.height && (L = !0), N[_] = g.height, P = this.getStartPosition(_), 
                v.setLayoutBoundsPosition(Math.round(I), Math.round(P)));
            }
            x += h + l, s = this.getStartPosition(p) - u + a, this.maxElementSize = b, r.setContentSize(x, s), 
            (L || S < this.maxElementSize) && r.invalidateSize();
        }, r.prototype.getStartPosition = function(t) {
            if (!this.$useVirtualLayout && this.$target) {
                var e = this.$target.getElementAt(t);
                if (e) return e.y;
            }
            for (var i = this.$typicalHeight, n = this.$paddingTop, o = this.$gap, r = this.elementSizeTable, s = 0; t > s; s++) {
                var a = r[s];
                isNaN(a) && (a = i), n += a + o;
            }
            return n;
        }, r.prototype.getElementSize = function(t) {
            if (this.$useVirtualLayout) {
                var e = this.elementSizeTable[t];
                return isNaN(e) && (e = this.$typicalHeight), e;
            }
            return this.$target ? this.$target.getElementAt(t).height : 0;
        }, r.prototype.getElementTotalSize = function() {
            for (var t = this.$typicalHeight, e = this.$gap, i = 0, n = this.$target.numElements, o = this.elementSizeTable, r = 0; n > r; r++) {
                var s = o[r];
                isNaN(s) && (s = t), i += s + e;
            }
            return i -= e;
        }, r.prototype.elementAdded = function(t) {
            this.$useVirtualLayout && (i.prototype.elementAdded.call(this, t), this.elementSizeTable.splice(t, 0, this.$typicalHeight));
        }, r.prototype.getIndexInView = function() {
            var t = this.$target;
            if (!t || 0 == t.numElements) return this.startIndex = this.endIndex = -1, !1;
            var e = t.$UIComponent;
            if (0 == e[10] || 0 == e[11]) return this.startIndex = this.endIndex = -1, !1;
            var i = t.numElements, n = this.getStartPosition(i - 1) + this.elementSizeTable[i - 1] + this.$paddingBottom, o = t.scrollV;
            if (o > n - this.$paddingBottom) return this.startIndex = -1, this.endIndex = -1, 
            !1;
            var r = t.scrollV + e[11];
            if (r < this.$paddingTop) return this.startIndex = -1, this.endIndex = -1, !1;
            var s = this.startIndex, a = this.endIndex;
            return this.startIndex = this.findIndexAt(o, 0, i - 1), -1 == this.startIndex && (this.startIndex = 0), 
            this.endIndex = this.findIndexAt(r, 0, i - 1), -1 == this.endIndex && (this.endIndex = i - 1), 
            s != this.startIndex || a != this.endIndex;
        }, r;
    }(t.LinearLayoutBase);
    t.VerticalLayout = r, i(r.prototype, "eui.VerticalLayout");
}(r || (r = {}));

!function(t) {
    var o = function(t) {
        function i() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return n(i, t), i.prototype.updateDisplayList = function(i, n) {
            t.prototype.updateDisplayList.call(this, i, n);
            var o = this.thumb, r = this.$viewport;
            if (o && r) {
                var s = e.$TempRectangle;
                o.getPreferredBounds(s);
                var a = s.width, h = s.y, l = r.scrollH, u = r.contentWidth, p = r.width;
                if (0 >= l) {
                    c = a * (1 - -l / (.5 * p));
                    c = Math.max(5, Math.round(c)), o.setLayoutBoundsSize(c, NaN), o.setLayoutBoundsPosition(0, h);
                } else if (l >= u - p) {
                    var c = a * (1 - (l - u + p) / (.5 * p));
                    c = Math.max(5, Math.round(c)), o.setLayoutBoundsSize(c, NaN), o.setLayoutBoundsPosition(i - c, h);
                } else {
                    var d = (i - a) * l / (u - p);
                    o.setLayoutBoundsSize(NaN, NaN), o.setLayoutBoundsPosition(d, h);
                }
            }
        }, i.prototype.onPropertyChanged = function(t) {
            switch (t.property) {
              case "scrollH":
              case "contentWidth":
                this.invalidateDisplayList();
            }
        }, i;
    }(t.ScrollBarBase);
    t.HScrollBar = o, i(o.prototype, "eui.HScrollBar");
}(r || (r = {}));

!function(t) {
    var n = function() {
        function t(t, e, i, n) {
            this.target = t, this.propertyName = e, this.position = i, this.relativeTo = n;
        }
        return t.prototype.apply = function(t, i) {
            var n, o = t[this.relativeTo], r = t[this.target], s = this.propertyName ? t[this.propertyName] : i;
            if (r && s) {
                switch (this.position) {
                  case 0:
                    n = 0;
                    break;

                  case 1:
                    n = -1;
                    break;

                  case 2:
                    n = s.getChildIndex(o);
                    break;

                  case 3:
                    n = s.getChildIndex(o) + 1;
                }
                -1 == n && (n = s.numChildren), e.is(s, "eui.Component") && s.$Component[8].$elementsContent.push(r), 
                s.addChildAt(r, n);
            }
        }, t.prototype.remove = function(t, i) {
            var n = this.propertyName ? t[this.propertyName] : i, o = t[this.target];
            if (o && n && (o.$parent === n && n.removeChild(o), e.is(n, "eui.Component"))) {
                var r = n.$Component[8].$elementsContent, s = r.indexOf(o);
                s > -1 && r.splice(s, 1);
            }
        }, t;
    }();
    t.AddItems = n, i(n.prototype, "eui.AddItems", [ "eui.IOverride" ]);
}(r || (r = {}));

!function(t) {
    var e = function() {
        function t(t, e, i) {
            this.target = t, this.name = e, this.value = i;
        }
        return t.prototype.apply = function(t, e) {
            var i = this.target ? t[this.target] : t;
            i && (this.oldValue = i[this.name], this.setPropertyValue(i, this.name, this.value, this.oldValue));
        }, t.prototype.remove = function(t, e) {
            var i = this.target ? t[this.target] : t;
            i && (this.setPropertyValue(i, this.name, this.oldValue, this.oldValue), this.oldValue = null);
        }, t.prototype.setPropertyValue = function(t, e, i, n) {
            t[e] = void 0 === i || null === i ? i : "number" == typeof n ? +i : "boolean" == typeof n ? this.toBoolean(i) : i;
        }, t.prototype.toBoolean = function(t) {
            return "string" == typeof t ? "true" == t.toLowerCase() : 0 != t;
        }, t;
    }();
    t.SetProperty = e, i(e.prototype, "eui.SetProperty", [ "eui.IOverride" ]);
}(r || (r = {}));

!function(t) {
    var e = function() {
        function e(t, e, i, n, o) {
            this.host = t, this.templates = e, this.chainIndex = i, this.target = n, this.prop = o;
        }
        return e.prototype.apply = function(e, i) {
            if (this.target) {
                var n = this.target[this.prop];
                this.oldValue && this.setPropertyValue(this.target, this.prop, this.oldValue, this.oldValue), 
                n && (this.oldValue = n), t.Binding.$bindProperties(this.host, this.templates.concat(), this.chainIndex.concat(), this.target, this.prop);
            }
        }, e.prototype.remove = function(t, e) {
            if (this.target) {
                var i = this.oldValue;
                this.target[this.prop] && (this.oldValue = this.target[this.prop]), i && this.setPropertyValue(this.target, this.prop, i, i);
            }
        }, e.prototype.setPropertyValue = function(t, e, i, n) {
            t[e] = void 0 === i || null === i ? i : "number" == typeof n ? +i : "boolean" == typeof n ? this.toBoolean(i) : i;
        }, e.prototype.toBoolean = function(t) {
            return "string" == typeof t ? "true" == t.toLowerCase() : 0 != t;
        }, e;
    }();
    t.SetStateProperty = e, i(e.prototype, "eui.SetStateProperty", [ "eui.IOverride" ]);
}(r || (r = {}));

var r;

!function(t) {
    !function(t) {
        function n(t, e, i, n, o, r, a, h, l, u) {
            var p;
            if (!isNaN(i) && isNaN(n)) {
                if (p = s(t, e, i, r, i, h, i, u)) return p;
            } else if (isNaN(i) && !isNaN(n) && (p = s(t, e, o, n, a, n, l, n))) return p;
            return p = s(t, e, o, r, a, h, l, u);
        }
        function o(t, e, i, n, o, s, a, h, l, u) {
            var p;
            if (!isNaN(i) && isNaN(n)) {
                if (p = r(t, e, i, s, i, h, i, u)) return p;
            } else if (isNaN(i) && !isNaN(n) && (p = r(t, e, o, n, a, n, l, n))) return p;
            return p = r(t, e, o, s, a, h, l, u);
        }
        function r(t, i, n, o, r, s, h, u) {
            var p = i.b, c = i.d;
            if (p > -1e-9 && 1e-9 > p && (p = 0), c > -1e-9 && 1e-9 > c && (c = 0), 0 == p && 0 == c) return null;
            if (0 == p && 0 == c) return null;
            if (0 == p) return e.Point.create(n, t / Math.abs(c));
            if (0 == c) return e.Point.create(t / Math.abs(p), o);
            var d, f, y, v = p * c >= 0 ? c : -c;
            if (0 != v && n > 0) {
                var g = 1 / v;
                (y = (t - p * (f = n = Math.max(r, Math.min(h, n)))) * g) >= s && u >= y && p * f + v * y >= 0 && (d = e.Point.create(f, y)), 
                (y = (-t - p * f) * g) >= s && u >= y && 0 > p * f + v * y && (!d || l(d.x, d.y, i).width > l(f, y, i).width) && (e.Point.release(d), 
                d = e.Point.create(f, y));
            }
            if (0 != p && o > 0) {
                var m = 1 / p;
                (f = (t - v * (y = o = Math.max(s, Math.min(u, o)))) * m) >= r && h >= f && p * f + v * y >= 0 && (!d || l(d.x, d.y, i).width > l(f, y, i).width) && (d = e.Point.create(f, y)), 
                (f = (-t - v * y) * m) >= r && h >= f && 0 > p * f + v * y && (!d || l(d.x, d.y, i).width > l(f, y, i).width) && (e.Point.release(d), 
                d = e.Point.create(f, y));
            }
            if (d) return d;
            var $ = i.a, E = i.c;
            return a(p, v, t, r, s, h, u, $, $ * E >= 0 ? E : -E);
        }
        function s(t, i, n, o, r, s, h, u) {
            var p = i.a, c = i.c;
            if (p > -1e-9 && 1e-9 > p && (p = 0), c > -1e-9 && 1e-9 > c && (c = 0), 0 == p && 0 == c) return null;
            if (0 == p) return e.Point.create(n, t / Math.abs(c));
            if (0 == c) return e.Point.create(t / Math.abs(p), o);
            var d, f, y, v = p * c >= 0 ? c : -c;
            if (0 != v && n > 0) {
                var g = 1 / v;
                (y = (t - p * (f = n = Math.max(r, Math.min(h, n)))) * g) >= s && u >= y && p * f + v * y >= 0 && (d = e.Point.create(f, y)), 
                (y = (-t - p * f) * g) >= s && u >= y && 0 > p * f + v * y && (!d || l(d.x, d.y, i).height > l(f, y, i).height) && (e.Point.release(d), 
                d = e.Point.create(f, y));
            }
            if (0 != p && o > 0) {
                var m = 1 / p;
                (f = (t - v * (y = o = Math.max(s, Math.min(u, o)))) * m) >= r && h >= f && p * f + v * y >= 0 && (!d || l(d.x, d.y, i).height > l(f, y, i).height) && (e.Point.release(d), 
                d = e.Point.create(f, y)), (f = (-t - v * y) * m) >= r && h >= f && 0 > p * f + v * y && (!d || l(d.x, d.y, i).height > l(f, y, i).height) && (e.Point.release(d), 
                d = e.Point.create(f, y));
            }
            if (d) return d;
            var $ = i.b, E = i.d;
            return a(p, v, t, r, s, h, u, $, $ * E >= 0 ? E : -E);
        }
        function a(t, i, n, o, r, s, a, h, l) {
            if (0 == t || 0 == i) return null;
            var u, p, c = (n - o * t) / i, d = (n - s * t) / i, f = Math.max(r, Math.min(c, d)), y = Math.min(a, Math.max(c, d)), v = h * i - t * l;
            return y >= f ? (p = Math.abs(v) < 1e-9 ? n / (t + i) : h * n / v, p = Math.max(f, Math.min(p, y)), 
            u = (n - i * p) / t, e.Point.create(u, p)) : (c = -(o * t + n) / i, d = -(s * t + n) / i, 
            f = Math.max(r, Math.min(c, d)), (y = Math.min(a, Math.max(c, d))) >= f ? (p = Math.abs(v) < 1e-9 ? -n / (t + i) : -h * n / v, 
            p = Math.max(f, Math.min(p, y)), u = (-n - i * p) / t, e.Point.create(u, p)) : null);
        }
        function h(t, i, n, o, r, s, h) {
            var l = n.a, p = n.b, c = n.c, d = n.d;
            if (l > -1e-9 && 1e-9 > l && (l = 0), p > -1e-9 && 1e-9 > p && (p = 0), c > -1e-9 && 1e-9 > c && (c = 0), 
            d > -1e-9 && 1e-9 > d && (d = 0), 0 == p && 0 == c) return 0 == l || 0 == d ? null : e.Point.create(t / Math.abs(l), i / Math.abs(d));
            if (0 == l && 0 == d) return 0 == p || 0 == c ? null : e.Point.create(i / Math.abs(p), t / Math.abs(c));
            var f = l * c >= 0 ? c : -c, y = p * d >= 0 ? d : -d, v = l * y - p * f;
            if (Math.abs(v) < 1e-9) return 0 == f || 0 == l || l == -f ? null : Math.abs(l * i - p * t) > 1e-9 ? null : a(l, f, t, o, o, s, h, p, y);
            var g, m = 1 / v;
            return (g = u(l, f, p, y, t *= m, i *= m)) && o <= g.x && g.x <= s && r <= g.y && g.y <= h && l * g.x + f * g.x >= 0 && p * g.x + y * g.y >= 0 ? g : (g = u(l, f, p, y, t, -i)) && o <= g.x && g.x <= s && r <= g.y && g.y <= h && l * g.x + f * g.x >= 0 && p * g.x + y * g.y < 0 ? g : (g = u(l, f, p, y, -t, i)) && o <= g.x && g.x <= s && r <= g.y && g.y <= h && l * g.x + f * g.x < 0 && p * g.x + y * g.y >= 0 ? g : (g = u(l, f, p, y, -t, -i)) && o <= g.x && g.x <= s && r <= g.y && g.y <= h && l * g.x + f * g.x < 0 && p * g.x + y * g.y < 0 ? g : (e.Point.release(g), 
            null);
        }
        function l(t, i, n) {
            var o = e.$TempRectangle.setTo(0, 0, t, i);
            return n.$transformBounds(o), o;
        }
        function u(t, i, n, o, r, s) {
            return e.Point.create(o * r - i * s, t * s - n * r);
        }
        var p = .1, c = function() {
            function t() {}
            return t.fitBounds = function(t, i, r, s, a, u, c, d, f, y, v) {
                if (isNaN(t) && isNaN(i)) return e.Point.create(u, c);
                var g, m = p > d ? 0 : d - p, $ = p > f ? 0 : f - p, E = y + p, C = v + p;
                if (isNaN(t) || isNaN(i)) return isNaN(t) ? o(i, r, s, a, u, c, m, $, E, C) : n(t, r, s, a, u, c, m, $, E, C);
                if (!(g = h(t, i, r, m, $, E, C))) {
                    var b = void 0;
                    (b = n(t, r, s, a, u, c, m, $, E, C)) && l(b.x, b.y, r).height - .1 > i && (e.Point.release(b), 
                    b = null);
                    var S = void 0;
                    (S = o(i, r, s, a, u, c, m, $, E, C)) && l(S.x, S.y, r).width - .1 > t && (e.Point.release(S), 
                    S = null), g = b && S ? b.x * b.y > S.x * S.y ? b : S : b || S, e.Point.release(b), 
                    e.Point.release(S);
                }
                return g;
            }, t;
        }();
        t.MatrixUtil = c, i(c.prototype, "eui.sys.MatrixUtil");
    }(t.sys || (t.sys = {}));
}(r || (r = {})), window.eui = r;